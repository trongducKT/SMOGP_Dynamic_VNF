{"1": [{"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM - DS ) + MLU ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Max( ACS,ARS ) )", "choosing": "Min( ( DS - MUC ) ,( DS - CS ) )", "obj1": 0.3565737051792829, "obj2": 0.5692471513101613}, {"determining": "( Max( DDR,AMS ) - ( AMS + DDR ) )", "choosing": "( ( DS * MUM ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.19721115537848605, "obj2": 0.7656988081900528}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * RRSe ) )", "obj1": 0.9741035856573705, "obj2": 0.032791984475496444}, {"determining": "( ( PN + Max( ( ACS + Max( CRS,BR ) ),FirstVNF_RAM ) ) / Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * ( CS - ( DS * MUM ) ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( MLU,RMSe ) )", "obj1": 0.50199203187251, "obj2": 0.4352482691770196}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,( MUR - CS ) )", "obj1": 0.3426294820717131, "obj2": 0.5856396807061358}, {"determining": "( ( BR * ACS ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUM ) / ( RMSe - DS ) )", "obj1": 0.4442231075697211, "obj2": 0.4926622113992036}, {"determining": "( ( DDR / CRS ) - ( BR + ARS ) )", "choosing": "( ( CS * DS ) - Min( CS ,MUM ) )", "obj1": 0.31274900398406374, "obj2": 0.608422111923985}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) - Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( Max( DS,CS ) ,Min( CS ,RRSe ) ) / RRSe ) / CS ) ,( DS - RCSe ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( ( Min( MDR ,FirstVNF_CPU_Server ) + Min( Const ,FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_CPU ,ACS ) + Min( ARS ,MRS ) ) )", "choosing": "Min( Min( ( CS + MUM ) ,( RCSe * MUC ) ) ,( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5509951496318642}, {"determining": "( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( RMSe * Max( RCSe,( ( ( RRSe - Max( ( RMSe - DS ),( RCSe + RRSe ) ) ) / MLU ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( ( Const + ARS ) * PN ) )", "choosing": "Min( Min( ( DS - RMSe ) ,( CS / RCSe ) ) ,Min( Max( MUC,MUR ) ,Max( MUM,MUR ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5999162956509427}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( Min( RMSe ,MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + MDR ) ,( Max( RRS,CRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( ( RRSe / RRSe ),( MUC / ( RMSe + Min( MUR ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Min( Max( ( FirstVNF_CPU - RRS ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,MLU ) + ( MUR / DS ) ) )", "obj1": 0.3844621513944223, "obj2": 0.5369986806071408}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - MLU ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.5856573705179283, "obj2": 0.41318619676839957}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,PN ) + Max( PN,CRS ) ) / Min( Min( RRS ,Const ) ,( PN + ACS ) ) ) ,( Max( ( FirstVNF_CPU_Server / MRS ),( Const / CRS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( PN * DDR ) ) ) )", "choosing": "Min( ( RRSe / Min( RRSe ,MUM ) ) ,( RRSe / ( RRSe - RMSe ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6402146348808438}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) + Min( ACS ,MRS ) )", "choosing": "( ( Max( ( MUM / RRSe ),Min( MUC ,RRSe ) ) + ( ( MLU + MUC ) - ( DS + RRSe ) ) ) / ( ( Max( CS,MUM ) + ( DS * DS ) ) + ( ( CS * MUC ) / Min( RRSe ,DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5575483168995339}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( ( ( MUR + MLU ) / ( MLU - MLU ) ) / ( ( RMSe - CS ) * ( RMSe + DS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.06930449781740769}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ACS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( FirstVNF_Mem + ( MRS + CRS ) ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * ( MLU / Max( ( MUM / MLU ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + ( BR / CRS ) )", "choosing": "( Min( Min( ( MUR * CS ) ,( CS * MUM ) ) ,( ( RCSe * MLU ) * ( RMSe + RCSe ) ) ) * ( Min( Min( RMSe ,MLU ) ,Max( DS,DS ) ) - ( ( RRSe / MLU ) - ( MUR * DS ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.6107238654002887}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( RRS / FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) / ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * DS ) / ( ( MUR / RCSe ) + Max( MUR,CS ) ) )", "obj1": 0.4701195219123506, "obj2": 0.46151422092064087}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,Const ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( Max( CRS,DDR ),( ( RRS / PN ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( ( DS - ( RMSe - MLU ) ) ,MUC ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( MRS + Const ) ,( MDR * FirstVNF_CPU ) ),( Max( PN,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( ( Const * FirstVNF_Mem ) * ( DDR + ACS ) ) + ( ( FirstVNF_Mem_Server * AMS ) / ( Const / RRS ) ) ) )", "choosing": "Max( Min( MUM ,( ( RMSe * RMSe ) - RRSe ) ),Min( DS ,( ( RCSe + ( DS + RRSe ) ) / MUC ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4581282637629064}], "2": [{"determining": "( ( Min( FirstVNF_CPU ,DDR ) + Max( ( DDR * FirstVNF_RAM ),PN ) ) * ( ( RRS - MRS ) - RRS ) )", "choosing": "( ( ( MUM * CS ) * DS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM - DS ) + MLU ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / ( MUM + MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7732529218034858}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( PN * ( ( AMS * ARS ) - ( Const * DDR ) ) ) + ( ( ( BR * Const ) * ( Const / CRS ) ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( MUR * MUM ) / ( Max( DS,MLU ) + MLU ) ) )", "obj1": 0.5637450199203188, "obj2": 0.368066196839584}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - Max( ( ( Min( FirstVNF_RAM ,Const ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( Max( ( FirstVNF_CPU + DDR ),Min( Const ,FirstVNF_CPU_Server ) ),( ( RRS / PN ) * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( MLU - Max( RCSe,DS ) ) ) - ( ( ( MUR + MLU ) / ( MLU - MLU ) ) / ( ( RMSe - CS ) * ( RMSe + DS ) ) ) )", "obj1": 0.8944223107569721, "obj2": 0.09583149287164948}, {"determining": "( ( FirstVNF_CPU - ACS ) * Max( Max( ACS,Max( PN,FirstVNF_CPU_Server ) ),Min( Max( Min( ACS ,RRS ),MDR ) ,BR ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,RRSe ) * Min( DS ,( RMSe / ( RCSe + DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.4270729846053527}, {"determining": "( ( ( Const + AMS ) / Max( PN,FirstVNF_RAM_Server ) ) * ( Min( ACS ,FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19721115537848605, "obj2": 0.7386082531356973}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.27091633466135456, "obj2": 0.6335627677538432}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.26294820717131473, "obj2": 0.6920549348593407}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( BR / ACS ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( PN + ACS ) ) )", "choosing": "( ( ( RRSe * RCSe ) + ( DS + CS ) ) - ( ( Min( RMSe ,MUC ) + CS ) - ( RRSe + MUC ) ) )", "obj1": 0.9342629482071713, "obj2": 0.04923397866667036}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * RRSe ) )", "obj1": 0.9741035856573705, "obj2": 0.032791984475496444}, {"determining": "Max( ( ( BR + AMS ) + MDR ),Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) ) + Min( MUM ,CS ) )", "obj1": 0.4342629482071713, "obj2": 0.5121657869261693}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,Const ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( Max( CRS,DDR ),( ( RRS / PN ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( ( DS - ( RMSe - MLU ) ) ,MUC ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.29282868525896416, "obj2": 0.5969332609731727}, {"determining": "( Min( Const ,AMS ) + ( DDR - PN ) )", "choosing": "( ( Max( Min( MLU ,RMSe ),( RRSe - RRSe ) ) * Max( ( RCSe * RRSe ),( MUC / ( ( RMSe * RMSe ) - RRSe ) ) ) ) / ( ( ( MUM / RRSe ) * Min( RRSe ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.7005059928284395}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( PN - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( MUC + ( MUR - MUR ) ) - ( ( MLU + DS ) / ( MLU + DS ) ) ) )", "obj1": 0.4123505976095618, "obj2": 0.5226145454995469}, {"determining": "( ( BR * ACS ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUM ) / ( RMSe - DS ) )", "obj1": 0.4442231075697211, "obj2": 0.4926622113992036}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ),RMSe ) )", "obj1": 0.4820717131474104, "obj2": 0.450213829459114}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( MLU,RMSe ) )", "obj1": 0.50199203187251, "obj2": 0.4352482691770196}, {"determining": "( Max( ACS,( ( DDR + CRS ) / ( ACS - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * Const ) ) ) ) ) / Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( DS - ( ( RCSe + MUR ) * Min( ( DS + ( MUR + Max( ( RCSe / RRSe ),MLU ) ) ) ,( CS - CS ) ) ) ) ,( DS - ( ( RCSe + MLU ) - Min( MUR ,RRSe ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5866257524381935}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) )", "obj1": 0.9023904382470119, "obj2": 0.07085864266793374}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( Max( MUC,MUM ),Min( MUM ,MUM ) )", "obj1": 0.40039840637450197, "obj2": 0.5281799664806994}, {"determining": "( Max( ( Max( FirstVNF_CPU,MDR ) + RRS ),( Max( PN,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( ( Const * FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server * AMS ) / Max( ARS,BR ) ) ) )", "choosing": "Max( Min( MUM ,( ( RMSe * MUC ) - RRSe ) ),Min( DS ,( RMSe / DS ) ) )", "obj1": 0.45219123505976094, "obj2": 0.48173613159589734}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5850713189403624}, {"determining": "( ( ( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_Mem - ACS ) ) + ( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) + Max( ( ( Const * FirstVNF_RAM ) / ( MDR + ACS ) ),( ( ARS / DDR ) - ( RRS - ARS ) ) ) )", "choosing": "( Max( Min( Max( DS,MUM ) ,( RMSe * MLU ) ),Min( ( MUC * MLU ) ,( RCSe - CS ) ) ) / ( Min( ( RCSe + RCSe ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) - ( Min( CS ,RCSe ) * Max( MLU,RRSe ) ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5830250300212348}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( RMSe - MLU ) ) ,DS ) )", "obj1": 0.9063745019920318, "obj2": 0.06486290856664866}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05639596623226963}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,( BR - FirstVNF_RAM ) ),( Const * FirstVNF_Mem ) ) ,( ( ACS * BR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( RCSe ,Max( RCSe,MLU ) ) ,Min( RMSe ,Max( CS,MLU ) ) ) + Max( CS,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.5433237082892903}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Min( Max( ( FirstVNF_CPU - RRS ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,MLU ) + ( MUR / DS ) ) )", "obj1": 0.3844621513944223, "obj2": 0.5369986806071408}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.7090821934693644}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * ARS ) ) ,( Min( MDR ,CRS ) / Max( FirstVNF_CPU_Server,ACS ) ) )", "choosing": "( ( ( MLU + RRSe ) - Max( RRSe,RRSe ) ) + Max( MUR,DS ) )", "obj1": 0.35258964143426297, "obj2": 0.5676914855950969}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe / Min( RRSe ,MUM ) ) ,( RRSe / ( RRSe - RMSe ) ) )", "obj1": 0.9760956175298805, "obj2": 0.02421920684470632}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3545816733067729, "obj2": 0.5531591053953189}, {"determining": "( ( AMS * ARS ) + ( FirstVNF_RAM_Server * ARS ) )", "choosing": "( MUR * ( RMSe * MUM ) )", "obj1": 0.34860557768924305, "obj2": 0.5736071177203254}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,ACS ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.7090821934693644}, {"determining": "( ( AMS * Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( RRSe / DS ) + Min( Max( CS,Min( ( MLU - Min( RCSe ,MLU ) ) ,MUM ) ) ,MLU ) ) )", "obj1": 0.3844621513944223, "obj2": 0.5369986806071408}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.01706249911844435}, {"determining": "( ( AMS * ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_Mem ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * ( MUR - ( MLU * RMSe ) ) ) - RRSe ) * ( CS - MLU ) )", "obj1": 0.9223107569721115, "obj2": 0.05063906213388791}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( RRS / FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) / ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * DS ) / ( ( MUR / RCSe ) + Max( MUR,CS ) ) )", "obj1": 0.4800796812749004, "obj2": 0.4595978940859944}, {"determining": "( ( MDR - RRS ) - Min( Min( ( ( Max( CRS,PN ) + Max( PN,CRS ) ) / Min( Min( RRS ,Const ) ,( PN + ACS ) ) ) ,( Max( ( FirstVNF_CPU_Server / MRS ),( Const / CRS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( PN * DDR ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( RRSe / Min( RRSe ,MUM ) ) ) / ( RCSe * RRSe ) )", "obj1": 0.9880478087649402, "obj2": 0.01447123145443217}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.4701195219123506, "obj2": 0.46151422092064087}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * FirstVNF_Mem ) ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,MLU ) + Max( MUR,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.5433237082892903}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) - Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( Max( DS,CS ) ,Min( CS ,RRSe ) ) / RRSe ) / CS ) ,( DS - RCSe ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS - RRSe ) ) + Min( Max( MUC,CS ) ,RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.0027037664974977347}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.005859896713843564}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3545816733067729, "obj2": 0.5531591053953189}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,Max( ACS,Min( ( RRS / FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) / ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * DS ) / ( ( MUR / RCSe ) + Max( MUR,CS ) ) )", "obj1": 0.4701195219123506, "obj2": 0.46151422092064087}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) * Max( ( RMSe - MLU ),( RRSe - MUR ) ) )", "obj1": 0.9920318725099602, "obj2": 0.005557636103588036}, {"determining": "( ( Min( MRS ,ARS ) + ( AMS - RRS ) ) - ( ( FirstVNF_RAM_Server / CRS ) - Max( MDR,MRS ) ) )", "choosing": "( ( Min( MUR ,( RRSe - MLU ) ) * DS ) * Max( ( MLU - RMSe ),( RRSe - RCSe ) ) )", "obj1": 0.9920318725099602, "obj2": 0.005557636103588036}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,( ACS * Min( ( RRS / FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_RAM_Server + PN ) / ( MRS - FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server * ARS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe * DS ) / ( ( MUR / Min( Max( ( DS * RCSe ),( MUC + MUC ) ) ,RRSe ) ) + Max( MUR,CS ) ) )", "obj1": 0.4800796812749004, "obj2": 0.4595978940859944}, {"determining": "( Max( DDR,AMS ) - ( AMS + DDR ) )", "choosing": "( ( DS * MUM ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( ( ACS + Max( CRS,BR ) ),FirstVNF_RAM ) ) / Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * ( CS - ( DS * MUM ) ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( RMSe * Max( RCSe,( ( ( RRSe - Max( ( RMSe - DS ),( RCSe + RRSe ) ) ) / MLU ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( Min( RMSe ,MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + MDR ) ,( Max( RRS,CRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( ( RRSe / RRSe ),( MUC / ( RMSe + Min( MUR ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ACS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( FirstVNF_Mem + ( MRS + CRS ) ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * ( MLU / Max( ( MUM / MLU ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( MUC,CS ) - ( ( ( RRSe * ( DS / ( ( RMSe + DS ) / MUC ) ) ) * Max( Min( RRSe ,Min( MLU ,DS ) ),( ( RRSe / DS ) - Min( ( MUC - RMSe ) ,( MUM - DS ) ) ) ) ) - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - ( ( ACS + ( FirstVNF_Mem * ( AMS + ( ACS + RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS - RMSe ) ,( Max( ( MUR + DS ),MUM ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( PN - ARS ) )", "choosing": "( ( MLU + DS ) / ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,PN ) ,( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MUM + MUC ) ) + RMSe ) / RRSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - Min( FirstVNF_RAM ,AMS ) ) ) + ( PN * FirstVNF_RAM ) ),AMS ) * ( FirstVNF_Mem_Server + ( BR + ARS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) / ( ( MUM / Min( DS ,CS ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Const - DDR ),ACS ) ,MDR ) / ( Min( ( ARS - FirstVNF_RAM_Server ) ,( DDR - BR ) ) / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( MLU * MUC ) + ( Min( MLU ,RRSe ) - RRSe ) ) * ( ( MLU / MUC ) + ( RCSe - RRSe ) ) ),( Max( ( MUC + DS ),Min( CS ,MUC ) ) * ( Max( RCSe,MUM ) * ( DS / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "Max( Max( RMSe,MUM ),Min( DS ,( Min( RRSe ,MUM ) * ( ( ( ( MUM * ( RCSe + RCSe ) ) * DS ) * CS ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( ( CS - DS ) + Max( MUR,MUR ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ACS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ACS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ACS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ACS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - ( ( CRS * AMS ) * ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( ( Max( MLU,MUM ) / MLU ) / ( MUM * Max( MUC,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU ) / ( MRS - FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * Min( MUM ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_Mem_Server ,RRS ),DDR ),RRS ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MDR ) ) + MRS ) - MDR ) ) - FirstVNF_Mem_Server ) ) ,( Const + PN ) )", "choosing": "( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( RMSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MDR ) ) + MRS ) - MDR ) ) - FirstVNF_Mem_Server ) ) ,( Const + PN ) )", "choosing": "( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( RMSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MDR ) ) + MRS ) - MDR ) ) - FirstVNF_Mem_Server ) ) ,( Const + PN ) )", "choosing": "( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( RMSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MDR ) ) + MRS ) - MDR ) ) - FirstVNF_Mem_Server ) ) ,( Const + PN ) )", "choosing": "( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( RMSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ( MRS - FirstVNF_RAM ) - ( ARS + DDR ) ) )", "choosing": "( ( ( RRSe * RCSe ) + ( DS + CS ) ) * Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_Mem / ACS ) ) + ( ( MRS / MRS ) * ( MRS + FirstVNF_Mem ) ) ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "Min( RMSe ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + MRS ) ) - RRS )", "choosing": "( ( RCSe / MUR ) + ( ( MUC - RRSe ) + ( MUR - ( MUR * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) + Max( ( DDR * FirstVNF_RAM ),PN ) ) * ( ( RRS - MRS ) - RRS ) )", "choosing": "( ( ( MUM * CS ) * DS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / Max( ( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( RMSe - MLU ) ) ,DS ) ),RCSe ) )", "obj1": 0.1454183266932271, "obj2": 0.7592351328798369}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) )", "obj1": 0.7111553784860558, "obj2": 0.283975592927761}, {"determining": "Min( ( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MDR ) ) + MRS ) - MDR ) ) - ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) ) ,( Const + PN ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) )", "obj1": 0.7330677290836654, "obj2": 0.2143801484685229}, {"determining": "( ( DDR - MRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( RCSe / ( RCSe * RRSe ) )", "obj1": 0.8366533864541833, "obj2": 0.17531542451230286}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( PN * ( ( AMS * ARS ) - ( Const * DDR ) ) ) + ( ( ( BR * Const ) * ( Const / CRS ) ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( MUR * MUM ) / ( Max( DS,MLU ) + MLU ) ) )", "obj1": 0.5637450199203188, "obj2": 0.368066196839584}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + MRS ) ) ) + Min( Max( ( FirstVNF_CPU - RRS ),( CRS + FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / MUM ) ) )", "obj1": 0.8725099601593626, "obj2": 0.0968610995984577}, {"determining": "( ( FirstVNF_CPU - ACS ) * Max( Max( ACS,Max( PN,FirstVNF_CPU_Server ) ),Min( Max( Min( ACS ,RRS ),MDR ) ,BR ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,RRSe ) * Min( DS ,( RMSe / ( RCSe + DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.4270729846053527}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR * ( RMSe * MUM ) ) ,MUM ) )", "obj1": 0.2689243027888446, "obj2": 0.623893031965287}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.23705179282868527, "obj2": 0.6839497013655639}, {"determining": "( ( ( Const + AMS ) / Max( PN,FirstVNF_RAM_Server ) ) * ( Min( ACS ,FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19721115537848605, "obj2": 0.7386082531356973}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.6095617529880478, "obj2": 0.30125775971879787}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.6254980079681275, "obj2": 0.2939366290681981}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( BR * ( ( Max( ( CRS - ( FirstVNF_RAM - FirstVNF_RAM ) ),( FirstVNF_RAM_Server / Max( DDR,AMS ) ) ) / RRS ) - ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * ( CS / DS ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.584355366682532}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5537848434074197}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,CS ) )", "obj1": 0.7848605577689243, "obj2": 0.20249695870397302}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( PN * ( ( AMS * ARS ) - ( Const * DDR ) ) ) + ( ( ( BR * Const ) * ( Const / CRS ) ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( MUR * MUM ) / ( Max( DS,MLU ) + MLU ) ) )", "obj1": 0.5756972111553785, "obj2": 0.35447497416964496}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( MRS - ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( Max( RCSe,MUR ) + CS ) * Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) ) )", "obj1": 0.8087649402390438, "obj2": 0.18209267294306736}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,Const ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( Max( CRS,DDR ),( ( RRS / PN ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( ( DS - ( RMSe - MLU ) ) ,MUC ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( ( DDR * CRS ) + ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( CS - ( Max( RCSe,Max( RMSe,Min( MUM ,MUR ) ) ) * MLU ) ) + Max( MUR,MUR ) ) / ( Min( ( Min( RRSe ,( ( DS + MLU ) * ( MUM + MUR ) ) ) + ( MLU / Min( RCSe ,MUM ) ) ) ,RRSe ) / ( MUM * ( Min( RCSe ,MUC ) + CS ) ) ) )", "obj1": 0.46215139442231074, "obj2": 0.4433720586538876}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * FirstVNF_Mem ) ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5420911597394206}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( ( BR + ARS ) - FirstVNF_Mem_Server ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( MUR + Min( RRSe ,Max( ( RMSe + Max( RMSe,RMSe ) ),( MUM + ( MUM - RRSe ) ) ) ) ),( MUC - MLU ) ) - ( ( MLU + DS ) / ( DS + DS ) ) ) )", "obj1": 0.4063745019920319, "obj2": 0.5176031458110036}, {"determining": "( Min( ( MDR / ( FirstVNF_Mem * Min( DDR ,Const ) ) ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + ( Min( ( ( RMSe / ( RRSe * MUM ) ) + RMSe ) ,MLU ) + ( RMSe + ( ( Max( ( RMSe + MUC ),MUC ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.954183266932271, "obj2": 0.03641877017592288}, {"determining": "( Max( MRS,( ( Max( MDR,FirstVNF_RAM ) - ( ACS - MDR ) ) + FirstVNF_CPU ) ) / Min( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_RAM_Server ) - BR ) / ( MRS / RRS ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * RRSe ) ,MUR ) ) / ( CS * RRSe ) ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.37649402390438247, "obj2": 0.5380345288641851}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( PN * ( ( AMS * ARS ) - ( Const * DDR ) ) ) + ( ( ( BR * Const ) * ( Const / CRS ) ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( MUR * MUM ) / ( Max( DS,MLU ) + MLU ) ) )", "obj1": 0.5756972111553785, "obj2": 0.35447497416964496}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( MRS - FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "Min( ( DS / MUC ) ,( RCSe - DS ) )", "obj1": 0.41832669322709165, "obj2": 0.505081999190957}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( MLU,RMSe ) )", "obj1": 0.49203187250996017, "obj2": 0.4423351177622028}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * FirstVNF_Mem ) ) ,Max( MRS,( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) )", "choosing": "( Max( MUC,MLU ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) )", "obj1": 0.38247011952191234, "obj2": 0.5276552387486885}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( ( ( PN * Const ) / Const ) - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM + DS ) * ( MUR - ( ( Max( ( MUR - ( MUC * MUM ) ),DS ) + Max( Max( RRSe,( MUR / MUC ) ),MUM ) ) / Max( ( RRSe * ( ( DS - MUR ) + MUR ) ),CS ) ) ) ) + ( RCSe - MUR ) )", "obj1": 0.8844621513944223, "obj2": 0.09031491941322212}, {"determining": "( Max( ( Max( FirstVNF_CPU,MDR ) + RRS ),( Max( PN,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( ( Const * FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server * AMS ) / Max( ARS,BR ) ) ) )", "choosing": "Max( Min( MUM ,( ( RMSe * MUC ) - RRSe ) ),Min( DS ,( RMSe / DS ) ) )", "obj1": 0.45219123505976094, "obj2": 0.48173613159589734}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.29282868525896416, "obj2": 0.5969332609731727}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.0810794435896415}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.9721115537848606, "obj2": 0.02410004255015659}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4951703497212266}, {"determining": "( MDR + ( DDR - PN ) )", "choosing": "( ( Max( Min( MLU ,RMSe ),( RRSe - RRSe ) ) * Max( ( RCSe * RRSe ),( MUC / ( ( MLU + RRSe ) - RRSe ) ) ) ) / ( ( ( MUM / RRSe ) * Min( RRSe ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.2350597609561753, "obj2": 0.704277964442662}, {"determining": "( ( BR * ACS ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUM ) / ( RMSe - DS ) )", "obj1": 0.4442231075697211, "obj2": 0.4926622113992036}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,ACS ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) )", "obj1": 0.9402390438247012, "obj2": 0.04548338520960283}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.2848605577689243, "obj2": 0.6120435114794693}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( MLU,RMSe ) )", "obj1": 0.50199203187251, "obj2": 0.4352482691770196}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( Min( RMSe ,MUM ) - ( MLU - MLU ) ) )", "obj1": 0.796812749003984, "obj2": 0.19694425813503916}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.6254980079681275, "obj2": 0.2939366290681981}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.900398406374502, "obj2": 0.06863542885910293}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( BR / ACS ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( PN + ACS ) ) )", "choosing": "( ( ( RRSe * RCSe ) + ( DS + CS ) ) - ( ( Min( RMSe ,MUC ) + CS ) - ( RRSe + MUC ) ) )", "obj1": 0.9342629482071713, "obj2": 0.04923397866667036}, {"determining": "( ( AMS * ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_Mem ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * ( MUR - ( MLU * RMSe ) ) ) - RRSe ) * ( CS - MLU ) )", "obj1": 0.9223107569721115, "obj2": 0.05063906213388791}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( Max( Min( Max( DS,MUM ) ,( RMSe * MLU ) ),Min( ( MUC * MLU ) ,( RCSe - CS ) ) ) / ( Min( ( RCSe + RCSe ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) - ( Min( CS ,RCSe ) * Max( MLU,RRSe ) ) ) )", "obj1": 0.9800796812749004, "obj2": 0.023751550062035713}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05639596623226963}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.016240737241435047}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.7090821934693644}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( Min( RMSe ,MUM ) - ( MLU - MLU ) ) )", "obj1": 0.796812749003984, "obj2": 0.19694425813503916}, {"determining": "Max( Min( ACS ,MDR ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( ( MRS + FirstVNF_CPU_Server ) + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( Min( DS ,( Max( ( DS / CS ),MUM ) + RMSe ) ) - RCSe ) * Min( ( DS + ( ( ( MUM - DS ) - CS ) - MLU ) ) ,DS ) )", "obj1": 0.9063745019920318, "obj2": 0.06486290856664866}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * ( PN - FirstVNF_Mem_Server ) ) / MRS ) - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( Min( RMSe ,RMSe ) + MUM ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883637}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,ACS ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( RMSe - MLU ) ) ,DS ) )", "obj1": 0.9063745019920318, "obj2": 0.06486290856664866}, {"determining": "( ( AMS * ARS ) + ( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.7090821934693644}, {"determining": "( ( AMS * Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( RRSe / DS ) + Min( Max( CS,Min( ( MLU - Min( RCSe ,MLU ) ) ,MUM ) ) ,MLU ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5345275378463481}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05639596623226963}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS - RRSe ) ) + Min( Max( MUC,CS ) ,RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.0027037664974977347}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.005859896713843564}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( RMSe / RCSe ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0038420279627408922}, {"determining": "( ( BR * FirstVNF_RAM_Server ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( MUM,( CS / MLU ) ) / DS ) + Min( Max( CS,Min( ( MLU - Min( RCSe ,MLU ) ) ,CS ) ) ,MLU ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5345275378463481}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.005859896713843564}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) * Max( ( RMSe - MLU ),( RRSe - MUR ) ) )", "obj1": 0.9920318725099602, "obj2": 0.005557636103588036}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) * Max( ( RMSe - MLU ),( RRSe - MUR ) ) )", "obj1": 0.9920318725099602, "obj2": 0.005557636103588036}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM - DS ) + MLU ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) - ( AMS + DDR ) )", "choosing": "( ( DS * MUM ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( ( ACS + Max( CRS,BR ) ),FirstVNF_RAM ) ) / Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * ( CS - ( DS * MUM ) ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( RMSe * Max( RCSe,( ( ( RRSe - Max( ( RMSe - DS ),( RCSe + RRSe ) ) ) / MLU ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( Min( RMSe ,MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + MDR ) ,( Max( RRS,CRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( ( RRSe / RRSe ),( MUC / ( RMSe + Min( MUR ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ACS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( FirstVNF_Mem + ( MRS + CRS ) ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * ( MLU / Max( ( MUM / MLU ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( MUC,CS ) - ( ( ( RRSe * ( DS / ( ( RMSe + DS ) / MUC ) ) ) * Max( Min( RRSe ,Min( MLU ,DS ) ),( ( RRSe / DS ) - Min( ( MUC - RMSe ) ,( MUM - DS ) ) ) ) ) - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - ( ( ACS + ( FirstVNF_Mem * ( AMS + ( ACS + RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS - RMSe ) ,( Max( ( MUR + DS ),MUM ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( PN - ARS ) )", "choosing": "( ( MLU + DS ) / ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * ( ( FirstVNF_CPU_Server * ( AMS - ( ARS / AMS ) ) ) - CRS ) ) ) * ( FirstVNF_Mem_Server + ( BR + Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,PN ) ,( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MUM + MUC ) ) + RMSe ) / RRSe ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem - Min( FirstVNF_RAM ,AMS ) ) ) + ( PN * FirstVNF_RAM ) ),AMS ) * ( FirstVNF_Mem_Server + ( BR + ARS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) / ( ( MUM / Min( DS ,CS ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Const - DDR ),ACS ) ,MDR ) / ( Min( ( ARS - FirstVNF_RAM_Server ) ,( DDR - BR ) ) / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( MLU * MUC ) + ( Min( MLU ,RRSe ) - RRSe ) ) * ( ( MLU / MUC ) + ( RCSe - RRSe ) ) ),( Max( ( MUC + DS ),Min( CS ,MUC ) ) * ( Max( RCSe,MUM ) * ( DS / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / Max( ( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( RMSe - MLU ) ) ,DS ) ),RCSe ) )", "obj1": 0.1454183266932271, "obj2": 0.7592351328798369}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - MUM ) / ( ( MUR * MUM ) / ( Max( DS,MLU ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + MRS ) ) - RRS )", "choosing": "( ( RCSe / MUR ) + ( ( MUC - RRSe ) + ( MUR - ( MUR * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / Min( PN ,BR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / Max( ( ( Max( DS,Max( MUC,RMSe ) ) - RCSe ) * Min( ( DS - ( RMSe - MLU ) ) ,DS ) ),RCSe ) )", "obj1": 0.1454183266932271, "obj2": 0.7592351328798369}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.5298804780876494, "obj2": 0.3681627751123563}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.6733067729083665, "obj2": 0.2542037197335993}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( Min( ( CRS + ACS ) ,ACS ) - ( FirstVNF_Mem_Server * Max( RRS,( ARS - ACS ) ) ) ) + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - ( ( AMS * CRS ) + ( PN - PN ) ) ),( FirstVNF_Mem / MRS ) ) ,Min( ( ( ( RRS / FirstVNF_CPU ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) - FirstVNF_CPU ) ,( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( DS - MUM ) )", "obj1": 0.7948207171314741, "obj2": 0.16953225502770977}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( RMSe - MLU ) )", "obj1": 0.703187250996016, "obj2": 0.24626542770148035}, {"determining": "( ( FirstVNF_CPU - ACS ) * Max( Max( ACS,Max( PN,FirstVNF_CPU_Server ) ),Min( Max( Min( ACS ,RRS ),MDR ) ,BR ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,RRSe ) * Min( DS ,( RMSe / ( RCSe + DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.4270729846053527}, {"determining": "Max( ( ( ( MRS - ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( Max( CRS,DDR ),( ( RRS / PN ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( MUM ,MUC ) )", "obj1": 0.2649402390438247, "obj2": 0.6614147046059141}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 0.7689243027888446, "obj2": 0.19284516903135457}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( MRS - FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "Min( ( DS / MUC ) ,( RCSe - DS ) )", "obj1": 0.41832669322709165, "obj2": 0.505081999190957}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( Max( CS,Min( ( MLU - Min( RCSe ,MLU ) ) ,MUM ) ) - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.6394422310756972, "obj2": 0.2885341840717841}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS - FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - ( FirstVNF_CPU_Server / ARS ) ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Max( ( CS / ( RMSe - RRSe ) ),RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5173193845132644}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( ( ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) / DS ) / Max( CS,RCSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7204628474051715}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) - PN ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.8386454183266933, "obj2": 0.15741713428044163}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( PN * ( ( AMS * ARS ) - ( Const * DDR ) ) ) + ( ( ( BR * Const ) * ( Const / CRS ) ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( MUR * MUM ) / ( Max( DS,MLU ) + MLU ) ) )", "obj1": 0.5637450199203188, "obj2": 0.368066196839584}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.16533864541832669, "obj2": 0.7468943648547081}, {"determining": "( ( FirstVNF_Mem * CRS ) + ( ( ( CRS * ( Const + BR ) ) * Min( ( ( Const + ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( FirstVNF_Mem * BR ) ) ) - ( AMS / ( FirstVNF_CPU - Max( MRS,AMS ) ) ) ) ,PN ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUR - RCSe ) / ( ( CS - DS ) + Min( CS ,DS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.45339806190317894}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,Const ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( Max( CRS,DDR ),( ( RRS / PN ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( ( DS - ( RMSe - MLU ) ) ,MUC ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + MRS ) ) ) + Min( Max( ( FirstVNF_CPU - RRS ),( CRS + FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / MUM ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3390581156155045}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.5976095617529881, "obj2": 0.30109966348583656}, {"determining": "Min( ( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MDR ) ) + MRS ) - MDR ) ) - ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) ) ,( ( MRS + FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Max( DS,DS ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) )", "obj1": 0.7390438247011952, "obj2": 0.20662822966417546}, {"determining": "Max( ( ( Max( FirstVNF_Mem_Server,BR ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + DDR ) / ( FirstVNF_CPU_Server * CRS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( ( RMSe - ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ,MUM ) )", "obj1": 0.8585657370517928, "obj2": 0.1010153552442758}, {"determining": "( Max( ( Max( FirstVNF_CPU,MDR ) + RRS ),( Max( PN,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( ( Const * FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server * AMS ) / Max( ARS,BR ) ) ) )", "choosing": "Max( Min( MUM ,( ( RMSe * MUC ) - RRSe ) ),Min( DS ,( RMSe / DS ) ) )", "obj1": 0.4442231075697211, "obj2": 0.4926602788766959}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.6235059760956175, "obj2": 0.29324178705301057}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR * ( RMSe * MUM ) ) ,MUM ) )", "obj1": 0.2689243027888446, "obj2": 0.623893031965287}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.23705179282868527, "obj2": 0.6839497013655639}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( Min( ( MDR / ( FirstVNF_Mem * Min( DDR ,Const ) ) ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + ( Min( ( ( RMSe / ( RRSe * MUM ) ) + RMSe ) ,MLU ) + ( RMSe + ( ( Max( ( RMSe + MUC ),MUC ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.954183266932271, "obj2": 0.03641877017592288}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( ( ( PN * Const ) / Const ) - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM + DS ) * ( MUR - ( ( Max( ( MUR - ( MUC * MUM ) ),DS ) + Max( Max( RRSe,( MUR / MUC ) ),MUM ) ) / Max( ( RRSe * ( ( DS - MUR ) + MUR ) ),CS ) ) ) ) + ( RCSe - MUR ) )", "obj1": 0.8844621513944223, "obj2": 0.09031491941322212}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5896414342629482, "obj2": 0.31721375203618724}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( Min( RMSe ,MUM ) - ( MLU - MLU ) ) )", "obj1": 0.850597609561753, "obj2": 0.13039495813398444}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / Min( MLU ,CS ) ) )", "obj1": 0.5776892430278885, "obj2": 0.323074921433157}, {"determining": "Min( ( Const + PN ) ,( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MRS ) ) + MRS ) - Min( CRS ,DDR ) ) ) - ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + ( RCSe / ( RRSe / ( MUC * Min( RRSe ,RCSe ) ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.2143801484685229}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( MLU,RMSe ) )", "obj1": 0.49203187250996017, "obj2": 0.4423351177622028}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( ( Const + FirstVNF_RAM ) - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( RRSe * DS ) / ( ( CS - DS ) + ( RMSe / RRSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.4433720586538876}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.29282868525896416, "obj2": 0.5969332609731727}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.0810794435896415}, {"determining": "( ( DDR - MRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.8466135458167331, "obj2": 0.14454156429862075}, {"determining": "Min( ( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MDR ) ) + MRS ) - MDR ) ) - ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) ) ,( Const + PN ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) )", "obj1": 0.7330677290836654, "obj2": 0.2143801484685229}, {"determining": "( MDR + ( DDR - PN ) )", "choosing": "( ( Max( Min( MLU ,RMSe ),( RRSe - RRSe ) ) * Max( ( RCSe * RRSe ),( MUC / ( ( MLU + RRSe ) - RRSe ) ) ) ) / ( ( ( MUM / RRSe ) * Min( RRSe ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.2350597609561753, "obj2": 0.704277964442662}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3545816733067729, "obj2": 0.529473111875991}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5748449063937557}, {"determining": "( Min( Max( ( Const - DDR ),ACS ) ,MDR ) / ( Min( ( ARS - FirstVNF_RAM_Server ) ,( DDR - BR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MLU + MUC ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5590991233933308}, {"determining": "Max( ( ( ( BR - FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( MDR,FirstVNF_CPU ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( ( Min( MUC ,( ( RRSe / Max( MUR,MUC ) ) * ( MUR + MUC ) ) ) * Max( ( ( Min( CS ,DS ) + DS ) / Min( CS ,Max( RRSe,MUM ) ) ),( CS * Max( RRSe,RCSe ) ) ) ) / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.062345589880673145}, {"determining": "Max( Min( MRS ,ARS ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.538609378479266}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.2848605577689243, "obj2": 0.6120435114794693}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5537848434074197}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.0683256792950497}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.23705179282868527, "obj2": 0.6839497013655639}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Max( Min( Min( RRS ,DDR ) ,FirstVNF_RAM_Server ),CRS ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MUM + Max( MUC,MUC ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6213193271790586}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4951703497212266}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + Max( FirstVNF_Mem,MRS ) ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5791071877325081}, {"determining": "( Min( Max( ( PN - FirstVNF_RAM ),( DDR - MRS ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( MDR,( ( Min( MRS ,ARS ) + ( DDR + FirstVNF_RAM_Server ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / Min( RMSe ,MUC ) ),( RRSe + ( ( ( ( Max( MLU,Min( MLU ,RCSe ) ) * DS ) * DS ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.584355366682532}, {"determining": "( ( MRS * ACS ) + ( ( ( Const - FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server * AMS ) / ( Const / RRS ) ) ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( ( RRSe - DS ) - ( MLU + MUC ) ) ) ) + ( DS - ( RMSe * RMSe ) ) ) )", "obj1": 0.9780876494023905, "obj2": 0.013154219587120854}, {"determining": "Min( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5807536954764888}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05639596623226963}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * ( PN - FirstVNF_Mem_Server ) ) / MRS ) - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( Min( RMSe ,RMSe ) + MUM ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883637}, {"determining": "( ( ( MDR + PN ) / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - AMS ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( Min( RMSe ,MUM ) - ( ( ( Min( ( MUC * ( MUR + RCSe ) ) ,( RMSe / Max( MUR,RRSe ) ) ) / ( Max( Max( MUM,RMSe ),( RMSe / RMSe ) ) - MLU ) ) / RCSe ) - MLU ) ) )", "obj1": 0.848605577689243, "obj2": 0.131580483904058}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * FirstVNF_Mem ) ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5420911597394206}, {"determining": "( ( AMS * ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_Mem ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * ( MUR - ( MLU * RMSe ) ) ) - RRSe ) * ( CS - MLU ) )", "obj1": 0.9223107569721115, "obj2": 0.05063906213388791}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.7090821934693644}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( MLU,RMSe ) )", "obj1": 0.50199203187251, "obj2": 0.4352482691770196}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( MLU,RMSe ) )", "obj1": 0.5, "obj2": 0.43998436877596137}, {"determining": "( ( ( BR * ( ( ( MDR - Max( RRS,FirstVNF_CPU_Server ) ) / RRS ) - ARS ) ) + ACS ) - Max( Const,BR ) )", "choosing": "( ( ( RRSe + DS ) * ( MUR - MUC ) ) + ( RCSe * MUC ) )", "obj1": 0.9322709163346613, "obj2": 0.04971173283424783}, {"determining": "( ( DDR * CRS ) + ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( CS - ( Max( RCSe,Max( RMSe,Min( MUM ,MUR ) ) ) * MLU ) ) + Max( MUR,MUR ) ) / ( Min( ( Min( RRSe ,( ( DS + MLU ) * ( MUM + MUR ) ) ) + ( MLU / Min( RCSe ,MUM ) ) ) ,RRSe ) / ( MUM * ( Min( RCSe ,MUC ) + CS ) ) ) )", "obj1": 0.46215139442231074, "obj2": 0.4433720586538876}, {"determining": "( ( AMS * ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_Mem ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) )", "obj1": 0.9402390438247012, "obj2": 0.04548338520960282}, {"determining": "( ( MRS * ( ( Max( FirstVNF_RAM,MDR ) - ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) ) ) + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( MUM ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5415130857240964}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9462151394422311, "obj2": 0.038593151145826905}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4951703497212266}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( MUR / DS ) ) )", "obj1": 0.9442231075697212, "obj2": 0.04073646175944385}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.04603102614013676}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.7090821934693644}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "( ( AMS * ARS ) + ( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05639596623226963}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.005859896713843564}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( BR * ( ( Max( ( CRS - ( FirstVNF_RAM - FirstVNF_RAM ) ),( FirstVNF_RAM_Server / Max( DDR,AMS ) ) ) / RRS ) - ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * ( CS / DS ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.584355366682532}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS - RRSe ) ) + Min( Max( MUC,CS ) ,RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.0027037664974977347}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS - RRSe ) ) + Min( Max( MUC,CS ) ,RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.0027037664974977347}, {"determining": "( Min( Max( ( Const - DDR ),ACS ) ,MDR ) / ( Min( ( ARS - FirstVNF_RAM_Server ) ,( DDR - BR ) ) / FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUM ,( ( RMSe * MUC ) - RRSe ) ),Min( DS ,( RMSe / DS ) ) )", "obj1": 0.4442231075697211, "obj2": 0.4926602788766959}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.005859896713843564}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0036137849092266324}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) * Max( ( RMSe - MLU ),( RRSe - MUR ) ) )", "obj1": 0.9920318725099602, "obj2": 0.005557636103588036}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0036137849092266324}, {"determining": "( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( BR - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( RMSe * Max( RCSe,( ( ( RRSe - Max( ( RMSe - DS ),( RCSe + RRSe ) ) ) / MLU ) * CS ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.005557636103588036}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) + Max( ( DDR * FirstVNF_RAM ),PN ) ) * ( ( RRS - MRS ) - RRS ) )", "choosing": "( ( ( MUM * CS ) * DS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM - DS ) + MLU ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,AMS ) - ( AMS + DDR ) )", "choosing": "( ( DS * MUM ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Max( ( ACS + Max( CRS,BR ) ),FirstVNF_RAM ) ) / Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUC - ( MUC * ( CS - ( DS * MUM ) ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( RMSe * Max( RCSe,( ( ( RRSe - Max( ( RMSe - DS ),( RCSe + RRSe ) ) ) / MLU ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUC ,DS ) * ( Min( RMSe ,MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + MDR ) ,( Max( RRS,CRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( ( RRSe / RRSe ),( MUC / ( RMSe + Min( MUR ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Min( FirstVNF_CPU ,DDR ) + Max( ( DDR * FirstVNF_RAM ),PN ) ) * ( ( RRS - MRS ) - RRS ) )", "choosing": "( ( ( MUM * CS ) * DS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - MUM ) / ( ( MUR * MUM ) / ( Max( DS,MLU ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( PN + DDR ) ) - ( MDR + Min( BR ,Const ) ) )", "choosing": "( MUM / ( MUR / ( MLU + MUR ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( RCSe + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.48924716236261445}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8087649402390438, "obj2": 0.13396372747932428}, {"determining": "( ( FirstVNF_CPU - ACS ) * Max( Max( ACS,Max( PN,FirstVNF_CPU_Server ) ),Min( Max( Min( ACS ,RRS ),MDR ) ,BR ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,RRSe ) * Min( DS ,( RMSe / ( RCSe + DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.4270729846053527}, {"determining": "( ( FirstVNF_Mem * CRS ) + ( ( ( CRS * ( Const + BR ) ) * Min( ( ( Const + ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( FirstVNF_Mem * BR ) ) ) - ( AMS / ( FirstVNF_CPU - Max( MRS,AMS ) ) ) ) ,PN ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUR - RCSe ) / ( ( CS - DS ) + Min( CS ,DS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.45339806190317894}, {"determining": "( ( CRS / ( FirstVNF_CPU * DDR ) ) - ( FirstVNF_RAM / ( AMS / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( ( ( ( MUR - RRSe ) + MUC ) * MLU ),RMSe ) - CS ) ) ) )", "obj1": 0.7689243027888446, "obj2": 0.19284516903135457}, {"determining": "( Max( Max( FirstVNF_Mem,BR ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.3720567586200371}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( FirstVNF_RAM_Server,( AMS - Const ) ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( ( Min( Max( ( RMSe * RCSe ),RMSe ) ,RMSe ) / RCSe ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) )", "obj1": 0.7250996015936255, "obj2": 0.21158896937777177}, {"determining": "( Min( ( MRS - ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / MUC )", "obj1": 0.6912350597609562, "obj2": 0.24203937133387377}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR * ( RMSe * MUM ) ) ,MUM ) )", "obj1": 0.6374501992031872, "obj2": 0.27870369039964876}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.23705179282868527, "obj2": 0.6689987664590484}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.6733067729083665, "obj2": 0.2542037197335993}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.10916617645224223}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,MDR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ) )", "obj1": 0.21713147410358566, "obj2": 0.701795114897248}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( Min( ( CRS + ACS ) ,ACS ) - ( FirstVNF_Mem_Server * Max( RRS,( ARS - ACS ) ) ) ) + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - ( ( AMS * CRS ) + ( PN - PN ) ) ),( FirstVNF_Mem / MRS ) ) ,Min( ( ( ( RRS / FirstVNF_CPU ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) - FirstVNF_CPU ) ,( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( DS - MUM ) )", "obj1": 0.7948207171314741, "obj2": 0.16953225502770977}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( ( ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) / DS ) / Max( CS,RCSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7204628474051715}, {"determining": "Min( ( CRS / ( ( RRS - ( ( ( Max( FirstVNF_RAM,MDR ) - ( ACS - MDR ) ) + MRS ) - MDR ) ) - ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) ) ,( ( MRS + FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Max( DS,DS ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) )", "obj1": 0.7390438247011952, "obj2": 0.20662822966417546}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.20916334661354583, "obj2": 0.7069947797968551}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Max( CS,RCSe ) / ( RMSe - MLU ) )", "obj1": 0.4800796812749004, "obj2": 0.42988814610653}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( ( ( Min( MRS ,ARS ) + ( Max( FirstVNF_CPU,CRS ) - FirstVNF_RAM_Server ) ) - ARS ),DDR ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - MUR ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5173193845132644}, {"determining": "( Max( CRS,( FirstVNF_CPU / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / MLU )", "obj1": 0.5418326693227091, "obj2": 0.3592214648453332}, {"determining": "Max( ( ( ( MRS - ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( Max( CRS,DDR ),( ( RRS / PN ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( MUM ,MUC ) )", "obj1": 0.2649402390438247, "obj2": 0.6614147046059141}, {"determining": "( Min( Max( ( Const * DDR ),ACS ) ,MDR ) / ( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( MRS,( ACS - FirstVNF_Mem_Server ) ) ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + ( MUM / CS ) ) / Min( RMSe ,MUC ) )", "obj1": 0.27689243027888444, "obj2": 0.594935689552466}, {"determining": "( ( CRS / ACS ) * ( ARS + ACS ) )", "choosing": "( ( MLU + Min( CS ,RRSe ) ) / ( MUR / RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.34494379494932187}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / ( ( CRS - ARS ) / FirstVNF_RAM ) )", "choosing": "( ( MUR - ( RCSe + RCSe ) ) / Min( ( MUR / DS ) ,MUM ) )", "obj1": 0.26693227091633465, "obj2": 0.6257208257763401}, {"determining": "( Min( Max( ( Const - DDR ),ACS ) ,MDR ) / ( Min( ( ARS - FirstVNF_RAM_Server ) ,( DDR - BR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MLU + MUC ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5590991233933308}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( ( MRS / PN ) / ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) ),( CRS * FirstVNF_Mem_Server ) ) ,Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUR / Min( MUM ,RCSe ) ) ) - RRSe ) - ( Min( ( RMSe + ( ( RCSe - CS ) + Min( ( Min( RMSe ,RCSe ) - ( MUR + MUR ) ) ,( MUR * DS ) ) ) ) ,( RRSe + MLU ) ) + ( MUR / DS ) ) )", "obj1": 0.7948207171314741, "obj2": 0.16953225502770977}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * FirstVNF_Mem ) ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.17131474103585656, "obj2": 0.7317647812494981}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( PN - ( ( PN * FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM_Server - ( ( RRS * ACS ) - ( Min( RRS ,AMS ) - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( Max( ( DS / MUC ),( ( ( RRSe / MUM ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.16533864541832669, "obj2": 0.7468943648547081}, {"determining": "( Max( CRS,Max( ARS,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUR - MUC ) / Min( MLU ,MUM ) ) / ( MLU + DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5733377871208168}, {"determining": "( Max( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / CS )", "obj1": 0.6115537848605578, "obj2": 0.29788437925865974}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Max( Min( Min( RRS ,DDR ) ,FirstVNF_RAM_Server ),CRS ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MUM + Max( MUC,MUC ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6213193271790586}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS - FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - ( FirstVNF_CPU_Server / ARS ) ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Max( ( CS / ( RMSe - RRSe ) ),RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5173193845132644}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + MRS ) ) ) + ARS )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ) ) )", "obj1": 0.6792828685258964, "obj2": 0.247142049832379}, {"determining": "Max( ( ( Max( FirstVNF_Mem_Server,BR ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + DDR ) / ( FirstVNF_CPU_Server * CRS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( ( RMSe - ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ,MUM ) )", "obj1": 0.8585657370517928, "obj2": 0.1010153552442758}, {"determining": "Max( ( ( Max( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ),FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( Max( DS,DS ) - CS ) ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2877640155793708}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2868525896414343, "obj2": 0.591454856686303}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.3256180051303534}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( DDR - PN ) ,( MRS - Const ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / RRSe ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.6215139442231076, "obj2": 0.29119883690927717}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( FirstVNF_Mem - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.4541832669322709, "obj2": 0.4467704670467386}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MRS )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUR * MUM ) )", "obj1": 0.5956175298804781, "obj2": 0.309466384239401}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) )", "obj1": 0.8804780876494024, "obj2": 0.0869998424745921}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5617529880478087, "obj2": 0.33511606798908744}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,Min( MUM ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) )", "obj1": 0.896414342629482, "obj2": 0.08207382515211988}, {"determining": "Max( Min( MRS ,ARS ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.538609378479266}, {"determining": "Max( ( ( ( BR - FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( MDR,FirstVNF_CPU ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( ( Min( MUC ,( ( RRSe / Max( MUR,MUC ) ) * ( MUR + MUC ) ) ) * Max( ( ( Min( CS ,DS ) + DS ) / Min( CS ,Max( RRSe,MUM ) ) ),( CS * Max( RRSe,RCSe ) ) ) ) / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.062345589880673145}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / Min( MLU ,CS ) ) )", "obj1": 0.5776892430278885, "obj2": 0.323074921433157}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.5976095617529881, "obj2": 0.30109966348583656}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( ( Const + FirstVNF_RAM ) - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( RRSe * DS ) / ( ( CS - DS ) + ( RMSe / RRSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.4433720586538876}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.850597609561753, "obj2": 0.10572221675802239}, {"determining": "( ( DDR * CRS ) + ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( CS - ( Max( RCSe,Max( RMSe,Min( MUM ,MUR ) ) ) * MLU ) ) + Max( MUR,MUR ) ) / ( Min( ( Min( RRSe ,( ( DS + MLU ) * ( MUM + MUR ) ) ) + ( MLU / Min( RCSe ,MUM ) ) ) ,RRSe ) / ( MUM * ( Min( RCSe ,MUC ) + CS ) ) ) )", "obj1": 0.46215139442231074, "obj2": 0.4433720586538876}, {"determining": "( Min( Max( ( PN - FirstVNF_RAM ),( DDR - MRS ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( MDR,( ( Min( MRS ,ARS ) + ( DDR + FirstVNF_RAM_Server ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / Min( RMSe ,MUC ) ),( RRSe + ( ( ( ( Max( MLU,Min( MLU ,RCSe ) ) * DS ) * DS ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6644712230233938}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5537848434074197}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9163346613545816, "obj2": 0.058381590172562184}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5896414342629482, "obj2": 0.31721375203618724}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) )", "obj1": 0.8764940239043825, "obj2": 0.08708088292413405}, {"determining": "( Min( ( MDR / ( FirstVNF_Mem * Min( DDR ,Const ) ) ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + ( Min( ( ( RMSe / ( RRSe * MUM ) ) + RMSe ) ,MLU ) + ( RMSe + ( ( Max( ( RMSe + MUC ),MUC ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.954183266932271, "obj2": 0.03641877017592288}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * ( PN - FirstVNF_Mem_Server ) ) / MRS ) - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( Min( RMSe ,RMSe ) + MUM ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883637}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * FirstVNF_Mem ) ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5420911597394206}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( Const - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( Min( ( RRSe + MLU ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.35856573705179284, "obj2": 0.5286509857171756}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.0810794435896415}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) * Max( CS,RCSe ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.5298804780876494, "obj2": 0.3681627751123563}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( MDR / Max( DDR,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Max( ( ( CS + MLU ) / Max( MUM,( Min( MUM ,MLU ) * CS ) ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.584355366682532}, {"determining": "Min( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5807536954764888}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.0683256792950497}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,Max( ( ACS - FirstVNF_Mem_Server ),Const ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUC ) / Min( MLU ,( ( CS + RRSe ) / Max( ( Max( Min( CS ,MUR ),Max( RCSe,( MUC * MLU ) ) ) * ( MUC + Min( RCSe ,( RRSe * MUC ) ) ) ),MUM ) ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5746777794044419}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.5298804780876494, "obj2": 0.3681627751123563}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05593527191253757}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / Min( RMSe ,MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6644712230233938}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "( ( MRS * ( ( MDR - DDR ) + FirstVNF_RAM ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( ( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) / ( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( DS,MLU ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3545816733067729, "obj2": 0.529473111875991}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + MRS ) ) ) + ( ( ( Const * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server * AMS ) / ( Const / RRS ) ) ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.9780876494023905, "obj2": 0.013154219587120854}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( RRSe + ( ( MUM + DS ) * ( MUR - MUC ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Min( ( DS / MUC ) ,( RCSe - DS ) )", "obj1": 0.9741035856573705, "obj2": 0.0187486411719625}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5617529880478087, "obj2": 0.33511606798908744}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_Mem ) / FirstVNF_RAM ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( RCSe ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( MUM ,( MLU / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06712597392486874}, {"determining": "( Max( ( ( RRS / PN ) + ( FirstVNF_Mem / RRS ) ),( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( Min( MUR ,( RMSe * Max( Max( ( CS * MLU ),MUM ),Min( RCSe ,RCSe ) ) ) ) - RRSe ) ) / CS )", "obj1": 0.5896414342629482, "obj2": 0.31721375203618724}, {"determining": "( ( FirstVNF_RAM * ( ( ( Const / ( ( Max( ARS,ACS ) * ( MRS - FirstVNF_CPU_Server ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) - FirstVNF_Mem ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ),DS ) - RCSe ) * ( RRSe - ( ( CS * RCSe ) - MUM ) ) )", "obj1": 0.9282868525896414, "obj2": 0.047356573891405934}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.16533864541832669, "obj2": 0.7468943648547081}, {"determining": "( Min( Max( ( PN - FirstVNF_RAM ),( DDR - MRS ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( MDR,( ( Min( MRS ,ARS ) + ( DDR + FirstVNF_RAM_Server ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / Min( RMSe ,MUC ) ),( RRSe + ( ( ( ( Max( MLU,Min( MLU ,RCSe ) ) * DS ) * DS ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.584355366682532}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5402540439067525}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR * ( RMSe * MUM ) ) ,MUM ) )", "obj1": 0.2689243027888446, "obj2": 0.623893031965287}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( RCSe / MUR ) ) + RMSe ) ) + ( MUR / DS ) ) )", "obj1": 0.9422310756972112, "obj2": 0.042808017775216374}, {"determining": "( ( MRS * ( ( Max( FirstVNF_RAM,MDR ) - ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) ) ) + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( MUM ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5415130857240964}, {"determining": "( ( AMS * ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_Mem ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) )", "obj1": 0.9402390438247012, "obj2": 0.04548338520960282}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( BR * ( Const - ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9262948207171314, "obj2": 0.04994674821186099}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9462151394422311, "obj2": 0.038593151145826905}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3545816733067729, "obj2": 0.529473111875991}, {"determining": "( ( AMS * ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_Mem ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.9442231075697212, "obj2": 0.039446741064157805}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( Max( RRS,Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( ( ( Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + DDR ) / Const ) ) )", "choosing": "( Min( ( ( Max( RCSe,RMSe ) * Min( ( RMSe / MUC ) ,MUC ) ) + DS ) ,( MUC + RMSe ) ) * Max( ( RMSe - MUM ),( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.005859896713843564}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5537848434074197}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.04603102614013676}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MLU + MLU ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6213193271790586}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.04603102614013676}], "6": [{"determining": "( ( FirstVNF_RAM / ( PN + DDR ) ) - ( MDR + Min( BR ,Const ) ) )", "choosing": "( MUM / ( MUR / ( MLU + MUR ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Max( ( RRS - MRS ),FirstVNF_RAM_Server ) * ( ( ( ACS - PN ) / ARS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - MUM ) / ( ( RRSe * MUM ) / ( Max( DS,( MUR - DS ) ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,DDR ) + Max( ( DDR * FirstVNF_RAM ),PN ) ) * ( ( RRS - MRS ) - RRS ) )", "choosing": "( ( ( MUM * CS ) * DS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Max( FirstVNF_Mem,Max( ACS,Max( ( ACS - FirstVNF_Mem_Server ),Const ) ) ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( ( FirstVNF_CPU_Server - CRS ) * FirstVNF_CPU ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( RRSe + MUR ) )", "obj1": 0.7350597609561753, "obj2": 0.183581454196683}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( Min( ( CRS + ACS ) ,ACS ) - ( FirstVNF_Mem_Server * Max( RRS,( ARS - ACS ) ) ) ) + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - ( ( AMS * CRS ) + ( PN - PN ) ) ),( FirstVNF_Mem / MRS ) ) ,Min( ( ( ( RRS / FirstVNF_CPU ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) - FirstVNF_CPU ) ,( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( DS - MUM ) )", "obj1": 0.7948207171314741, "obj2": 0.16953225502770977}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( RCSe * CS ) + ( DS / MUR ) ) )", "obj1": 0.5059760956175299, "obj2": 0.3942928465574128}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.2051792828685259, "obj2": 0.6977960117940787}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUC ) / Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,( ( CS + RRSe ) / Max( ( Max( Min( CS ,MUR ),Max( RCSe,( MUC * MLU ) ) ) * ( MUC + Min( RCSe ,( RRSe * MUC ) ) ) ),MUM ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.5011417398359851}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( ( ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) / DS ) / Max( CS,RCSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7204628474051715}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + ( CS - DS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.4761520477827991}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8087649402390438, "obj2": 0.13396372747932428}, {"determining": "( ( FirstVNF_CPU - ACS ) * Max( Max( ACS,Max( PN,FirstVNF_CPU_Server ) ),Min( Max( Min( ACS ,RRS ),MDR ) ,BR ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,RRSe ) * Min( DS ,( RMSe / ( RCSe + DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.4270729846053527}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( Max( CRS,MRS ) ,BR ) ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) * Max( CS,( ( MUR - MUC ) / Min( MLU ,CS ) ) ) )", "obj1": 0.8406374501992032, "obj2": 0.1159054039487189}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( FirstVNF_RAM_Server,( AMS - Const ) ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( ( Min( Max( ( RMSe * RCSe ),RMSe ) ,RMSe ) / RCSe ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) )", "obj1": 0.7250996015936255, "obj2": 0.21158896937777177}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.8007968127490039, "obj2": 0.1394635335114493}, {"determining": "( Max( Max( FirstVNF_Mem,BR ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.3720567586200371}, {"determining": "( Max( ( ( RRS / PN ) + ( ( Const - RRS ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( DS * RRSe ) / ( ( CS - DS ) + ( CS - DS ) ) ) / ( MLU + DS ) )", "obj1": 0.4103585657370518, "obj2": 0.4811413360697982}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.23705179282868527, "obj2": 0.6689987664590484}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.6374501992031872, "obj2": 0.26779410709957735}, {"determining": "( AMS * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RCSe - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.6932270916334662, "obj2": 0.22530923415124623}, {"determining": "( Min( Max( ( Const * DDR ),ACS ) ,MDR ) / ( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( MRS,( ACS - FirstVNF_Mem_Server ) ) ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + ( MUM / CS ) ) / Min( RMSe ,MUC ) )", "obj1": 0.27689243027888444, "obj2": 0.594935689552466}, {"determining": "Max( ( ( ( MRS - ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( Max( CRS,DDR ),( ( RRS / PN ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( MUM ,MUC ) )", "obj1": 0.2649402390438247, "obj2": 0.6614147046059141}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) )", "obj1": 0.6752988047808764, "obj2": 0.24354302829902136}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.22709163346613545, "obj2": 0.6856285602808496}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR / DS ) ,MUM ) )", "obj1": 0.26693227091633465, "obj2": 0.6257208257763401}, {"determining": "( ( ( Const + BR ) - FirstVNF_CPU ) * Max( ( ( RRS + FirstVNF_Mem_Server ) + Const ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( ( MUR - ( RMSe + DS ) ) / ( ( CS - DS ) + ( CS - DS ) ) ) )", "obj1": 0.8844621513944223, "obj2": 0.07730621365318598}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.6593625498007968, "obj2": 0.2607859888847806}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * FirstVNF_Mem ) ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.17131474103585656, "obj2": 0.7317647812494981}, {"determining": "( ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33067729083665337, "obj2": 0.54039560472269}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Max( CS,RCSe ) / ( RMSe - MLU ) )", "obj1": 0.4800796812749004, "obj2": 0.42988814610653}, {"determining": "( Min( Max( ( DDR - MRS ),( FirstVNF_Mem_Server + RRS ) ) ,MDR ) + ( ( ( DDR / ( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( AMS - CRS ) ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( MUC - CS ) / ( MUM * ( RMSe / MUC ) ) )", "obj1": 0.35258964143426297, "obj2": 0.520721969962294}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( PN - ( ( PN * FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM_Server - ( ( RRS * ACS ) - ( Min( RRS ,AMS ) - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( Max( ( DS / MUC ),( ( ( RRSe / MUM ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( Min( Max( ( Const - DDR ),ACS ) ,MDR ) / ( Min( ( ARS - FirstVNF_RAM_Server ) ,( DDR - BR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MLU + MUC ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5590991233933308}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.16533864541832669, "obj2": 0.7468943648547081}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.2250996015936255, "obj2": 0.6961994665766953}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5646153944012675}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Max( Min( Min( RRS ,DDR ) ,FirstVNF_RAM_Server ),CRS ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MUM + Max( MUC,MUC ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6213193271790586}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS - FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - ( FirstVNF_CPU_Server / ARS ) ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5173193845132644}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( RCSe + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.22652211437404868}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.8585657370517928, "obj2": 0.09994428444281471}, {"determining": "( ( BR * ACS ) * ( ( ( CRS * ( Const + BR ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( DS + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.29690795126443104}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.5976095617529881, "obj2": 0.30109966348583656}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.5851493719885346}, {"determining": "( Max( BR,MRS ) * ( ACS - Max( DDR,ACS ) ) )", "choosing": "( Max( RRSe,( ( RCSe + CS ) / ( RMSe / MLU ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( ( CS / MUR ) - MUC ) / ( Max( MUR,MUR ) + ( CS - DS ) ) ) ) / MUR ) )", "obj1": 0.5398406374501992, "obj2": 0.35786643495847387}, {"determining": "( ( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,Min( ( DDR - PN ) ,( MRS - Const ) ) ) )", "choosing": "( ( ( ( ( CS + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.5438247011952191, "obj2": 0.3554700209949539}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( CS - MUR ) - ( MUM - MUM ) )", "obj1": 0.5557768924302788, "obj2": 0.34705970088750354}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + ( CS - DS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.45339806190317894}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( ( ( Min( MRS ,ARS ) + ( Max( FirstVNF_CPU,CRS ) - FirstVNF_RAM_Server ) ) - ARS ),DDR ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - MUR ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5173193845132644}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MRS )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUR * MUM ) )", "obj1": 0.5956175298804781, "obj2": 0.309466384239401}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) )", "obj1": 0.7250996015936255, "obj2": 0.21158896937777177}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( RCSe + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.48924716236261445}, {"determining": "( Max( ( ( Min( ( AMS - MRS ) ,FirstVNF_RAM ) / PN ) - ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Min( MUM ,MLU ) ,Min( DS ,MUC ) ) ) * ( CS - RRSe ) ) / CS )", "obj1": 0.5617529880478087, "obj2": 0.33511606798908744}, {"determining": "Max( ( ( ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,( RMSe / ( ( ( ( ( MLU + MLU ) / ( MUM * CS ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6334661354581673, "obj2": 0.2834816715920897}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.850597609561753, "obj2": 0.10572221675802239}, {"determining": "Max( Min( MRS ,ARS ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.538609378479266}, {"determining": "Max( ( ( ( BR - FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( MDR,FirstVNF_CPU ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( ( Min( MUC ,( ( RRSe / Max( MUR,MUC ) ) * ( MUR + MUC ) ) ) * Max( ( ( Min( CS ,DS ) + DS ) / Min( CS ,Max( RRSe,MUM ) ) ),( CS * Max( RRSe,RCSe ) ) ) ) / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.062345589880673145}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,Max( ( ACS - FirstVNF_Mem_Server ),Const ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUC ) / Min( MLU ,( ( CS + RRSe ) / Max( ( Max( Min( CS ,MUR ),Max( RCSe,( MUC * MLU ) ) ) * ( MUC + Min( RCSe ,( RRSe * MUC ) ) ) ),MUM ) ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5746777794044419}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( ( MRS / PN ) / ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) ),( CRS * FirstVNF_Mem_Server ) ) ,Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUR / Min( MUM ,RCSe ) ) ) - RRSe ) - ( Min( ( RMSe + ( ( RCSe - CS ) + Min( ( Min( RMSe ,RCSe ) - ( MUR + MUR ) ) ,( MUR * DS ) ) ) ) ,( RRSe + MLU ) ) + ( MUR / DS ) ) )", "obj1": 0.7948207171314741, "obj2": 0.16953225502770977}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.10916617645224223}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.25694559491272584}, {"determining": "( Min( Max( ( PN - FirstVNF_RAM ),( DDR - MRS ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( MDR,( ( Min( MRS ,ARS ) + ( DDR + FirstVNF_RAM_Server ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / Min( RMSe ,MUC ) ),( RRSe + ( ( ( ( Max( MLU,Min( MLU ,RCSe ) ) * DS ) * DS ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6644712230233938}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( FirstVNF_Mem - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.4541832669322709, "obj2": 0.4467704670467386}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( Const - Min( MRS ,ARS ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) ) )", "obj1": 0.4681274900398406, "obj2": 0.4369471408555436}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9163346613545816, "obj2": 0.058381590172562184}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5896414342629482, "obj2": 0.31721375203618724}, {"determining": "( Min( ( MDR / ( FirstVNF_Mem * Min( DDR ,Const ) ) ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + ( Min( ( ( RMSe / ( RRSe * MUM ) ) + RMSe ) ,MLU ) + ( RMSe + ( ( Max( ( RMSe + MUC ),MUC ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.954183266932271, "obj2": 0.03641877017592288}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( BR + MRS ) ) ) + ( ( ( Const * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server * AMS ) / ( Const / RRS ) ) ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.9780876494023905, "obj2": 0.013154219587120854}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( Max( ( ARS / ACS ),DDR ) - FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server + ( ( MRS * MDR ) + FirstVNF_Mem_Server ) ),Max( ACS,FirstVNF_RAM ) ) / MRS ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( CS - ( ( MLU / ( CS / MUR ) ) + ( RMSe * DS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883635}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.6733067729083665, "obj2": 0.2542037197335993}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) )", "obj1": 0.47410358565737054, "obj2": 0.43514453932337555}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.5298804780876494, "obj2": 0.3681627751123563}, {"determining": "( ( CRS / ACS ) * ( ARS + ACS ) )", "choosing": "( ( MLU + Min( CS ,RRSe ) ) / ( MUR / RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.34494379494932187}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.4043824701195219, "obj2": 0.48924716236261445}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( MDR / Max( DDR,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Max( ( ( CS + MLU ) / Max( MUM,( Min( MUM ,MLU ) * CS ) ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.584355366682532}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5402540439067525}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.0683256792950497}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( ( ACS - ARS ) * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) ) / CS )", "obj1": 0.6195219123505976, "obj2": 0.29367063665712195}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.3256180051303534}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.6215139442231076, "obj2": 0.2906265554395204}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( ( ( Max( ( DDR * FirstVNF_RAM ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) ),( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / Min( RMSe ,MUC ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MLU ) ) ) )", "obj1": 0.9960159362549801, "obj2": 0.004672596392454599}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( RRSe / ( ( CS - DS ) + ( CS - DS ) ) )", "obj1": 0.448207171314741, "obj2": 0.44992041719300346}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05593527191253757}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( ( Const + FirstVNF_RAM ) - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( RRSe * DS ) / ( ( CS - DS ) + ( RMSe / RRSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.4433720586538876}, {"determining": "( Min( Max( ( PN - FirstVNF_RAM ),( DDR - MRS ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( MDR,( ( Min( MRS ,ARS ) + ( DDR + FirstVNF_RAM_Server ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / Min( RMSe ,MUC ) ),( RRSe + ( ( ( ( Max( MLU,Min( MLU ,RCSe ) ) * DS ) * DS ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6644712230233938}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) )", "obj1": 0.8804780876494024, "obj2": 0.0869998424745921}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / Min( MLU ,CS ) ) )", "obj1": 0.5776892430278885, "obj2": 0.323074921433157}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) * Max( CS,RCSe ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.5298804780876494, "obj2": 0.3681627751123563}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - MDR ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.300796812749004, "obj2": 0.5780384169968705}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( RRSe + ( ( MUM + DS ) * ( MUR - MUC ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( ( RRS - ( FirstVNF_CPU_Server / ARS ) ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( MUM * ( RMSe / CS ) ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5782814689244645}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.3256180051303534}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5617529880478087, "obj2": 0.33511606798908744}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - FirstVNF_Mem ) / FirstVNF_RAM ) ,Max( MRS,Max( RRS,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Min( ( Min( RCSe ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "( Max( ( ( RRS / PN ) + ( FirstVNF_Mem / RRS ) ),( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( Min( MUR ,( RMSe * Max( Max( ( CS * MLU ),MUM ),Min( RCSe ,RCSe ) ) ) ) - RRSe ) ) / CS )", "obj1": 0.5896414342629482, "obj2": 0.31721375203618724}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ACS ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( BR + ARS ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( MLU + RRSe ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( Min( Max( RCSe,RMSe ) ,RMSe ) / DS ) ) )", "obj1": 0.9422310756972112, "obj2": 0.04272816025723646}, {"determining": "( ( FirstVNF_RAM * ( ( ( Const / ( ( Max( ARS,ACS ) * ( MRS - FirstVNF_CPU_Server ) ) * FirstVNF_CPU ) ) - FirstVNF_Mem ) - FirstVNF_Mem ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ),DS ) - RCSe ) * ( RRSe - ( ( CS * RCSe ) - MUM ) ) )", "obj1": 0.9282868525896414, "obj2": 0.047356573891405934}], "7": [{"determining": "( ( FirstVNF_RAM / ( PN + DDR ) ) - ( MDR + Min( BR ,Const ) ) )", "choosing": "( MUM / ( MUR / ( MLU + MUR ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( Min( ( CRS + ACS ) ,ACS ) - ( FirstVNF_Mem_Server * Max( RRS,( ACS - ACS ) ) ) ) + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - ( ( AMS * CRS ) + ( PN - PN ) ) ),( FirstVNF_Mem / MRS ) ) ,Min( ( ( ( RRS / FirstVNF_CPU ) / ( ( AMS + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) - FirstVNF_CPU ) ,( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - ( RMSe + ( RCSe + MLU ) ) ) - ( DS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS - MRS ),FirstVNF_RAM_Server ) * ( ( ( ACS - PN ) / ARS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - MUM ) / ( ( RRSe * MUM ) / ( Max( DS,( MUR - DS ) ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.23705179282868527, "obj2": 0.6689987664590484}, {"determining": "( Max( FirstVNF_Mem,Max( ACS,Max( ( ACS - FirstVNF_Mem_Server ),Const ) ) ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( ( FirstVNF_CPU_Server - CRS ) * FirstVNF_CPU ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( RRSe + MUR ) )", "obj1": 0.7350597609561753, "obj2": 0.183581454196683}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7749003984063745, "obj2": 0.17019098874375554}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MLU + MLU ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6319289414772563}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( Const - Min( MDR ,ARS ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + ( ( RRSe + ( ( ( MUR * Min( RRSe ,RRSe ) ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4215567427338883}, {"determining": "( Max( ( ( Min( Min( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * ACS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( RMSe - RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.6892430278884463, "obj2": 0.2250370824027323}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) * Max( CS,RCSe ) )", "obj1": 0.8286852589641435, "obj2": 0.1223390858831439}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.19322709163346613, "obj2": 0.7055115860748072}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( Min( Max( ( Const * DDR ),ACS ) ,MDR ) / ( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( MRS,( ACS - FirstVNF_Mem_Server ) ) ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + ( MUM / CS ) ) / Min( RMSe ,MUC ) )", "obj1": 0.27689243027888444, "obj2": 0.594935689552466}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( ( ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) / DS ) / Max( CS,RCSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7204628474051715}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,ARS ) )", "choosing": "( ( MUR / DS ) / Max( CS,RCSe ) )", "obj1": 0.16533864541832669, "obj2": 0.7468943648547081}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5539210116026227}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( FirstVNF_RAM_Server,( AMS - Const ) ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( ( Min( Max( ( RMSe * RCSe ),RMSe ) ,RMSe ) / RCSe ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) )", "obj1": 0.7250996015936255, "obj2": 0.21158896937777177}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8087649402390438, "obj2": 0.13396372747932428}, {"determining": "Max( FirstVNF_Mem_Server,( Max( DDR,MRS ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( ( Min( MUR ,( MUC - Min( RRSe ,MUC ) ) ) / RCSe ) - CS ) + MUR ) ) * Max( CS,RCSe ) )", "obj1": 0.3784860557768924, "obj2": 0.5068110599125313}, {"determining": "( Min( Max( ( DDR - MRS ),( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) ) / MUM )", "obj1": 0.27091633466135456, "obj2": 0.6202817212592808}, {"determining": "( ( ( ( CRS * ( ARS + FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * ( Min( RRSe ,RCSe ) / ( CS / DS ) ) ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.44621513944223107, "obj2": 0.4480775563392942}, {"determining": "( ( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.7290836653386454, "obj2": 0.20121865249282195}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.8007968127490039, "obj2": 0.1394635335114493}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( RCSe + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.48924716236261445}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.16733067729083664, "obj2": 0.7276863865443892}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( PN - ( ( PN * FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM_Server - ( ( RRS * ACS ) - ( Min( RRS ,AMS ) - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( Max( ( DS / MUC ),( ( ( RRSe / MUM ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) )", "obj1": 0.6752988047808764, "obj2": 0.24354302829902136}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.22709163346613545, "obj2": 0.6856285602808496}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,MDR ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( ( RRS - ( AMS / PN ) ) + FirstVNF_Mem_Server ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( Min( MUM ,MUM ) + MUC ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.08154111132343689}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.7888446215139442, "obj2": 0.15286400289417437}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( RCSe + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.22652211437404868}, {"determining": "( Max( BR,MRS ) * ( ACS - Max( DDR,ACS ) ) )", "choosing": "( Max( RRSe,( ( RCSe + CS ) / ( RMSe / MLU ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( ( CS / MUR ) - MUC ) / ( Max( MUR,MUR ) + ( CS - DS ) ) ) ) / MUR ) )", "obj1": 0.5398406374501992, "obj2": 0.35786643495847387}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7828685258964143, "obj2": 0.1547534367980538}, {"determining": "( ( BR * ACS ) * ( ( ( CRS * ( Const + BR ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( DS + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.29690795126443104}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8406374501992032, "obj2": 0.11222717870242599}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / Max( Max( CRS,MRS ),( MRS / AMS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,DS ) )", "obj1": 0.647410358565737, "obj2": 0.26088542148985516}, {"determining": "( FirstVNF_CPU * ( ( RRS + FirstVNF_CPU ) / ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( MUR - MUR ) / ( ( CS - DS ) + Max( ( MUM - MUC ),MUR ) ) ) ) / MUR ) )", "obj1": 0.5438247011952191, "obj2": 0.3504330177956618}, {"determining": "( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( ( MUR / DS ) / MUM ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6915122048059008}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.25694559491272584}, {"determining": "( ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33067729083665337, "obj2": 0.54039560472269}, {"determining": "( Max( CRS,( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) )", "obj1": 0.6235059760956175, "obj2": 0.2768329106824048}, {"determining": "( Max( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.350597609561753, "obj2": 0.5286614170749769}, {"determining": "( ( ( PN - FirstVNF_Mem_Server ) * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( BR + FirstVNF_RAM_Server ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( Max( ( RCSe + RMSe ),MUC ) - Min( ( ( Max( MUC,( MUC * RMSe ) ) + ( ( MUM - DS ) + MUM ) ) * MUC ) ,MUM ) ) / RRSe ) )", "obj1": 0.6713147410358565, "obj2": 0.2470014237921296}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.2051792828685259, "obj2": 0.6977960117940787}, {"determining": "( Max( Max( FirstVNF_Mem,BR ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.3720567586200371}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.8585657370517928, "obj2": 0.09994428444281471}, {"determining": "Max( ( ( ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( MUM ,MUC ) )", "obj1": 0.898406374501992, "obj2": 0.07302929113590469}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUC ) / Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,( ( CS + RRSe ) / Max( ( Max( Min( CS ,MUR ),Max( RCSe,( MUC * MLU ) ) ) * ( MUC + Min( RCSe ,( RRSe * MUC ) ) ) ),MUM ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.5011417398359851}, {"determining": "( ( FirstVNF_RAM_Server - ( RRS * AMS ) ) * Max( CRS,MRS ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( ( MUC / Min( RMSe ,Max( MUC,( CS - MUR ) ) ) ) * Min( RCSe ,Min( ( Min( DS ,MLU ) / MUC ) ,Min( MUR ,( MLU * RMSe ) ) ) ) ) - RCSe ) ,CS ) )", "obj1": 0.5976095617529881, "obj2": 0.30109966348583656}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - MDR ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.30278884462151395, "obj2": 0.5713476155970767}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.5851493719885346}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.6593625498007968, "obj2": 0.2607859888847806}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),Min( FirstVNF_RAM_Server ,( MRS - BR ) ) ) ) ) * ( ACS - Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( MUR / MUC ) / Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,( ( CS + RRSe ) / Max( ( ( MUC + Min( RCSe ,( RRSe * RCSe ) ) ) * Max( ( ( RRSe * MUC ) - DS ),Max( RCSe,( MUC * MLU ) ) ) ),MUM ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.5011417398359851}, {"determining": "( Min( ( MDR / ( FirstVNF_Mem * Min( DDR ,Const ) ) ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + ( Min( ( ( RMSe / ( RRSe * MUM ) ) + RMSe ) ,MLU ) + ( RMSe + ( ( Max( ( RMSe + MUC ),MUC ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.954183266932271, "obj2": 0.03641877017592288}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.6374501992031872, "obj2": 0.26779410709957735}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS - FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - ( FirstVNF_CPU_Server / ARS ) ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5173193845132644}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( FirstVNF_Mem - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.4541832669322709, "obj2": 0.4467704670467386}, {"determining": "Max( Min( MRS ,ARS ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.538609378479266}, {"determining": "( Max( Max( FirstVNF_Mem,BR ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.3720567586200371}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.6215139442231076, "obj2": 0.2906265554395204}, {"determining": "( Min( MRS ,RRS ) * Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( Max( DS,MUM ) - ( RMSe - ( ( ( ( MUC + MUR ) + ( ( RRSe + MLU ) + MUC ) ) / DS ) * ( Max( Max( RMSe,Min( DS ,MUC ) ),( DS / ( MLU + MUC ) ) ) / MUR ) ) ) ) / DS )", "obj1": 0.5697211155378487, "obj2": 0.3271630668757872}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_RAM_Server )", "choosing": "( ( ( MUR - MUC ) / Min( MLU ,CS ) ) / ( MUR * MUM ) )", "obj1": 0.4701195219123506, "obj2": 0.4332875042423693}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ACS ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( BR + ARS ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( MLU + RRSe ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( Min( Max( RCSe,RMSe ) ,RMSe ) / DS ) ) )", "obj1": 0.9422310756972112, "obj2": 0.04272816025723646}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS - FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - ( FirstVNF_CPU_Server / ARS ) ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5173193845132644}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2739355518022902}, {"determining": "( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) )", "obj1": 0.5298804780876494, "obj2": 0.3681627751123563}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Max( CS,RCSe ) / ( RMSe - MLU ) )", "obj1": 0.4800796812749004, "obj2": 0.42988814610653}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( Const - Min( MRS ,ARS ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) ) )", "obj1": 0.4681274900398406, "obj2": 0.4369471408555436}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) )", "obj1": 0.7250996015936255, "obj2": 0.21158896937777177}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( DS / MUC ) / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9462151394422311, "obj2": 0.040242515692872266}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.2051792828685259, "obj2": 0.6977960117940787}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( ( ( Max( ( DDR * FirstVNF_Mem ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) ),( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / Min( RMSe ,MUC ) ),( RRSe + ( ( ( RRSe * RCSe ) * RRSe ) * Min( MLU ,MLU ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0071688750412002514}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( MDR / Max( DDR,( FirstVNF_RAM - PN ) ) ) )", "choosing": "Max( ( ( CS + MLU ) / Max( MUM,( Min( MUM ,MLU ) * CS ) ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.584355366682532}, {"determining": "( ( ( Const + BR ) - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( ACS ,( CRS / ( RRS + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( ( Min( ( ( MUR + MUR ) * ( RMSe - RRSe ) ) ,Min( RMSe ,RRSe ) ) + ( MLU * ( MLU + RRSe ) ) ) - CS ) + ( CS - DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.07704354619998662}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR / DS ) ,MUM ) )", "obj1": 0.26693227091633465, "obj2": 0.6257208257763401}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5646153944012675}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5402540439067525}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5646153944012675}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.108534702921134}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( ( CRS / ACS ) * ( ARS + ACS ) )", "choosing": "( ( MLU + Min( CS ,RRSe ) ) / ( MUR / RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.34494379494932187}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.6195219123505976, "obj2": 0.2918385006328788}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) / AMS ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5657370517928287, "obj2": 0.33506179448309215}, {"determining": "( Min( Min( AMS ,( ( Max( FirstVNF_RAM,( Min( ARS ,FirstVNF_CPU ) - ACS ) ) - AMS ) * PN ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( Max( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ),MUR ) - ( ( ( RMSe - ( MLU + ( MUR / RCSe ) ) ) + RCSe ) / MUM ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.520721969962294}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) )", "obj1": 0.5896414342629482, "obj2": 0.3118664864018288}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,BR ) - ( ( BR * ( FirstVNF_CPU * MRS ) ) + ACS ) ) ) ) + ( ( ( FirstVNF_Mem_Server * AMS ) * ( Const / RRS ) ) + ( ( Const * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - MUM ) - ( RCSe * RRSe ) )", "obj1": 0.9322709163346613, "obj2": 0.045493787054645574}, {"determining": "Max( ( ( ( ( ( BR + ARS ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( Max( CRS,MRS ) ,BR ) ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) * ( RMSe + ( CS - ( RCSe / RMSe ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.09507313484291707}, {"determining": "( ( Max( ( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - DDR ) * ( Max( ( MRS / AMS ),CRS ) * ( ACS - RRS ) ) )", "choosing": "( Min( MUC ,Min( ( Min( ( MUM / ( DS - ( RMSe + RMSe ) ) ) ,( MUM / MUC ) ) + RRSe ) ,DS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.4043824701195219, "obj2": 0.48924716236261445}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05593527191253757}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MRS )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUR * MUM ) )", "obj1": 0.5956175298804781, "obj2": 0.309466384239401}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( ( Const + FirstVNF_RAM ) - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( RRSe * DS ) / ( ( CS - DS ) + ( RMSe / RRSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.4433720586538876}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( Max( ( ARS / ACS ),DDR ) - FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server + ( ( MRS * MDR ) + FirstVNF_Mem_Server ) ),Max( ACS,FirstVNF_RAM ) ) / MRS ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( CS - ( ( MLU / ( CS / MUR ) ) + ( RMSe * DS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883635}, {"determining": "( AMS * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5617529880478087, "obj2": 0.33511606798908744}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.6354581673306773, "obj2": 0.2698565126120532}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( ( MRS * ( MRS + FirstVNF_CPU ) ) / Min( ( CRS + FirstVNF_RAM ) ,BR ) ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) * Max( CS,RCSe ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}], "8": [{"determining": "( ( FirstVNF_RAM / ( PN + DDR ) ) - ( MDR + Min( BR ,Const ) ) )", "choosing": "( MUM / ( MUR / ( MLU + MUR ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Min( ( MDR / ( FirstVNF_Mem * Min( DDR ,Const ) ) ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + ( Min( ( ( RMSe / ( RRSe * MUM ) ) + RMSe ) ,MLU ) + ( RMSe + ( ( Max( ( RMSe + MUC ),MUC ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( Min( ( CRS + ACS ) ,ACS ) - ( FirstVNF_Mem_Server * Max( RRS,( ACS - ACS ) ) ) ) + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - ( ( AMS * CRS ) + ( PN - PN ) ) ),( FirstVNF_Mem / MRS ) ) ,Min( ( ( ( RRS / FirstVNF_CPU ) / ( ( AMS + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) - FirstVNF_CPU ) ,( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - ( RMSe + ( RCSe + MLU ) ) ) - ( DS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MLU + MLU ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6319289414772563}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( Max( FirstVNF_Mem,Max( ACS,Max( ( ACS - FirstVNF_Mem_Server ),Const ) ) ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( ( FirstVNF_CPU_Server - CRS ) * FirstVNF_CPU ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( RRSe + MUR ) )", "obj1": 0.7350597609561753, "obj2": 0.183581454196683}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.26294820717131473, "obj2": 0.6057700021376349}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( ( PN * FirstVNF_RAM_Server ) + MDR ) ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( ( RMSe / RRSe ) - MUM ) )", "obj1": 0.48406374501992033, "obj2": 0.40461983234223864}, {"determining": "( Max( ( ( Min( Min( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * ACS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( RMSe - RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.2450199203187251, "obj2": 0.662923094774407}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6693227091633466, "obj2": 0.2383669888314351}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05593527191253757}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "( ( ( ( CRS * ( ARS + FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * ( Min( RRSe ,RCSe ) / ( CS / DS ) ) ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.44621513944223107, "obj2": 0.4480775563392942}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5539210116026227}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( FirstVNF_Mem * CRS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUC ) / Min( ( ( Max( MUC,DS ) + MUC ) * MUC ) ,( ( CS + RRSe ) / Max( ( Max( Min( CS ,MUR ),Max( RCSe,( MUC * MLU ) ) ) * ( MUC + Min( RCSe ,( RRSe * RCSe ) ) ) ),MUM ) ) ) )", "obj1": 0.3944223107569721, "obj2": 0.4990588703930234}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( PN - ( ( PN * FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM_Server - ( ( RRS * ACS ) - ( Min( RRS ,AMS ) - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( Max( ( DS / MUC ),( ( ( RRSe / MUM ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,BR ) - ( ( BR * ( FirstVNF_CPU * MRS ) ) + ACS ) ) ) ) + ( ( ( FirstVNF_Mem_Server * AMS ) * ( Const / RRS ) ) + ( ( Const * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - MUM ) - ( RCSe * RRSe ) )", "obj1": 0.9322709163346613, "obj2": 0.045493787054645574}, {"determining": "Max( FirstVNF_Mem_Server,( Max( DDR,MRS ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( ( Min( MUR ,( MUC - Min( RRSe ,MUC ) ) ) / RCSe ) - CS ) + MUR ) ) * Max( CS,RCSe ) )", "obj1": 0.3784860557768924, "obj2": 0.5068110599125313}, {"determining": "( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( ( MUR / DS ) / MUM ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6905549975006691}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) ),Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - ( MUC + Min( RCSe ,( RRSe * MUC ) ) ) ) / Min( MLU ,MUM ) )", "obj1": 0.549800796812749, "obj2": 0.337329904896777}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.7888446215139442, "obj2": 0.1518350763466518}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,MDR ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( ( RRS - ( AMS / PN ) ) + FirstVNF_Mem_Server ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( Min( MUM ,MUM ) + MUC ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.08154111132343689}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.25694559491272584}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / FirstVNF_RAM_Server ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM - ARS ) / Min( PN ,RRS ) ) ),( ( Min( FirstVNF_Mem_Server ,DDR ) + ( RRS * FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / Max( Max( RRSe,( ( ( CS / CS ) - ( DS / MUC ) ) - MUM ) ),MUR ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06560558998227987}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.16334661354581673, "obj2": 0.7265161567071123}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.8007968127490039, "obj2": 0.1394635335114493}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - RRSe ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5298804780876494, "obj2": 0.3674182661168878}, {"determining": "( FirstVNF_CPU * ( ( RRS + FirstVNF_CPU ) / ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( MUR - MUR ) / ( ( CS - DS ) + Max( ( MUM - MUC ),MUR ) ) ) ) / MUR ) )", "obj1": 0.5438247011952191, "obj2": 0.3504330177956618}, {"determining": "( Max( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.5287661597653899}, {"determining": "( Max( BR,MRS ) * ( ACS - Max( DDR,ACS ) ) )", "choosing": "( Max( RRSe,( ( RCSe + CS ) / ( RMSe / MLU ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( ( CS / MUR ) - MUC ) / ( Max( MUR,MUR ) + ( CS - DS ) ) ) ) / MUR ) )", "obj1": 0.5398406374501992, "obj2": 0.35786643495847387}, {"determining": "( ( ( ( ( Min( Min( Max( FirstVNF_CPU,ACS ) ,Const ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( BR + ARS ) ) ) ) * ( ( BR - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR * ( ( RRSe + Min( MUR ,Max( Max( RMSe,( CS + RCSe ) ),DS ) ) ) + DS ) ) / CS )", "obj1": 0.5179282868525896, "obj2": 0.3832647967258348}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.22709163346613545, "obj2": 0.6856285602808496}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( RCSe + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.22652211437404868}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( Max( ( ARS / ACS ),DDR ) - FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server + ( ( MRS * MDR ) + FirstVNF_Mem_Server ) ),Max( ACS,FirstVNF_RAM ) ) / MRS ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( CS - ( ( MLU / ( CS / MUR ) ) + ( RMSe * DS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883635}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( Min( Max( ( Const * DDR ),ACS ) ,MDR ) / ( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( MRS,( ACS - FirstVNF_Mem_Server ) ) ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + ( MUM / CS ) ) / Min( RMSe ,MUC ) )", "obj1": 0.27689243027888444, "obj2": 0.594935689552466}, {"determining": "( ( FirstVNF_RAM_Server - ( RRS * AMS ) ) * Max( CRS,MRS ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( ( MUC / Min( RMSe ,Max( MUC,( CS - MUR ) ) ) ) * Min( RCSe ,Min( ( Min( DS ,MLU ) / MUC ) ,Min( MUR ,( MLU * RMSe ) ) ) ) ) - RCSe ) ,CS ) )", "obj1": 0.5976095617529881, "obj2": 0.30109966348583656}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / Max( RCSe,MUR ) ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5142214910153895}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.19322709163346613, "obj2": 0.7055115860748072}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( ( ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) / DS ) / Max( CS,RCSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7204628474051715}, {"determining": "( Min( MRS ,RRS ) * Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( Max( DS,MUM ) - ( RMSe - ( ( ( ( MUC + MUR ) + ( ( RRSe + MLU ) + MUC ) ) / DS ) * ( Max( Max( RMSe,Min( DS ,MUC ) ),( DS / ( MLU + MUC ) ) ) / MUR ) ) ) ) / DS )", "obj1": 0.5697211155378487, "obj2": 0.3271630668757872}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( ( PN - ( FirstVNF_CPU_Server + PN ) ) + ARS ) / ( Max( DDR,( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) - ( RRS - AMS ) ) - ( ARS - ARS ) ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( RRSe + ( ( RMSe * RRSe ) + RRSe ) ) / ( CS * CS ) ),( ( DS - RMSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7382955881183081}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( MRS - FirstVNF_RAM_Server ) - PN ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUC ) / Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,( ( CS + RRSe ) / Max( ( Max( Min( CS ,MUR ),Max( RCSe,( MUC * MLU ) ) ) * ( MUC + Min( RCSe ,( RRSe * CS ) ) ) ),MUM ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.22261792007354264}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8406374501992032, "obj2": 0.11222717870242599}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( CS - DS ) + ( CS - DS ) ) ) )", "obj1": 0.300796812749004, "obj2": 0.5697194893363349}, {"determining": "( ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,CRS ) ) - BR ) ) ) ) * ( ACS - ARS ) ) * ( BR * ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * MUM ) ),Min( Min( MUC ,Min( MUR ,DS ) ) ,( CS + DS ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5441041085235122}, {"determining": "( Max( CRS,( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) )", "obj1": 0.6235059760956175, "obj2": 0.2768329106824048}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,BR ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( DS * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) )", "obj1": 0.7131474103585658, "obj2": 0.22106745594706548}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.23705179282868527, "obj2": 0.6689987664590484}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.19322709163346613, "obj2": 0.7055115860748072}, {"determining": "( ( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.7290836653386454, "obj2": 0.20121865249282195}, {"determining": "( ( BR * ACS ) * ( ( ( ( ARS + FirstVNF_CPU_Server ) - ( ARS * ( CRS / Min( ( AMS + CRS ) ,FirstVNF_Mem ) ) ) ) - ACS ) - RRS ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( MUR ,DS ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / Max( MUR,( CS * ( MUM * ( RCSe - RCSe ) ) ) ) ) - ( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) + MUR ) ) / RRSe ) )", "obj1": 0.7211155378486056, "obj2": 0.21470290018009866}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( PN / RRS ) - ARS ) ) + ACS ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7828685258964143, "obj2": 0.1547534367980538}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) ) / ( AMS / Const ) ) )", "choosing": "( ( ( MLU - ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) ) ) / DS ) / Max( CS,RCSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7204628474051715}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( Max( Max( CRS,MRS ),( MRS / ( Max( Max( FirstVNF_Mem,BR ),( MRS / AMS ) ) * ( ACS - ARS ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR * MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7231075697211156, "obj2": 0.20706698317388011}, {"determining": "( Min( Min( AMS ,( ( Max( FirstVNF_RAM,( Min( ARS ,FirstVNF_CPU ) - ACS ) ) - AMS ) * PN ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( Max( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ),MUR ) - ( ( ( RMSe - ( MLU + ( MUR / RCSe ) ) ) + RCSe ) / MUM ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.520721969962294}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ),MRS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,CS ) )", "obj1": 0.5776892430278885, "obj2": 0.3201419319355757}, {"determining": "( Min( ( MDR / ( FirstVNF_Mem * Min( DDR ,Const ) ) ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + ( Min( ( ( RMSe / ( RRSe * MUM ) ) + RMSe ) ,MLU ) + ( RMSe + ( ( Max( ( RMSe + MUC ),MUC ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.954183266932271, "obj2": 0.03641877017592288}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUC ) / Min( Max( MUC,( RMSe * MUC ) ) ,( ( CS + RRSe ) / Max( ( Max( Min( CS ,MUR ),Max( RCSe,( MUC * MLU ) ) ) * ( MUC + Min( RCSe ,( RRSe * RCSe ) ) ) ),MUM ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5777720904984817}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.12346133688198332}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_RAM_Server )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,DS ) )", "obj1": 0.5816733067729084, "obj2": 0.3178084460173036}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MUR - MUC ) / DS )", "obj1": 0.4541832669322709, "obj2": 0.44547037439432075}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( Const - Min( MDR ,ARS ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + ( ( RRSe + ( ( ( MUR * Min( RRSe ,RRSe ) ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4215567427338883}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( ACS - ARS ) ) - MDR ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5747995971473399}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.3720567586200371}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * MRS )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / ( MUR * MUM ) )", "obj1": 0.5956175298804781, "obj2": 0.309466384239401}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.2051792828685259, "obj2": 0.6977960117940787}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5646153944012675}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_RAM_Server )", "choosing": "( ( ( MUR - MUC ) / Min( MLU ,CS ) ) / ( MUR * MUM ) )", "obj1": 0.4701195219123506, "obj2": 0.4332875042423693}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ACS ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( BR + ARS ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( MLU + RRSe ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( Min( Max( RCSe,RMSe ) ,RMSe ) / DS ) ) )", "obj1": 0.9422310756972112, "obj2": 0.04272816025723646}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2739355518022902}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( RCSe + ( RCSe / ( RMSe - DS ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.2250232747650954}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Max( CS,RCSe ) / ( RMSe - MLU ) )", "obj1": 0.4800796812749004, "obj2": 0.42988814610653}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( DS / MUC ) / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9462151394422311, "obj2": 0.040242515692872266}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.8047808764940239, "obj2": 0.13577854812891346}, {"determining": "( ( ( Const + BR ) - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( ACS ,( CRS / ( RRS + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( ( Min( ( ( MUR + MUR ) * ( RMSe - RRSe ) ) ,Min( RMSe ,RRSe ) ) + ( MLU * ( MLU + RRSe ) ) ) - CS ) + ( CS - DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.07704354619998662}, {"determining": "( Max( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.350597609561753, "obj2": 0.5286614170749769}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.8087649402390438, "obj2": 0.1296601839629734}, {"determining": "( AMS * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5617529880478087, "obj2": 0.33511606798908744}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( ( ( Max( ( DDR * FirstVNF_Mem ),PN ) + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) ),( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( Max( RRSe,CS ) / ( CS - ( MLU + MLU ) ) )", "obj1": 0.9940239043824701, "obj2": 0.005624371668749609}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.257489460813723}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / Max( Max( CRS,MRS ),( MRS / AMS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,DS ) )", "obj1": 0.6394422310756972, "obj2": 0.2654310310452566}, {"determining": "( ( BR * ACS ) * ( ( ( CRS * ( Const + BR ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ACS - ARS ) ) )", "choosing": "( ( MUR / DS ) / ( DS + ( Min( MUM ,DS ) / ( RMSe - DS ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.29690795126443104}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.6215139442231076, "obj2": 0.2906265554395204}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / Max( Max( CRS,MRS ),( MRS / AMS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,DS ) )", "obj1": 0.647410358565737, "obj2": 0.26088542148985516}, {"determining": "( ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33067729083665337, "obj2": 0.54039560472269}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.594825172480099}, {"determining": "Max( ( ( ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( MUM ,MUC ) )", "obj1": 0.898406374501992, "obj2": 0.07302929113590469}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) / AMS ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) + ( CS - RRSe ) ) / CS )", "obj1": 0.5657370517928287, "obj2": 0.33506179448309215}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.5851493719885346}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.23705179282868527, "obj2": 0.6689987664590484}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}], "9": [{"determining": "( ( ( FirstVNF_RAM_Server - ( ( Min( ( CRS + ACS ) ,ACS ) - ( FirstVNF_Mem_Server * Max( RRS,( ACS - ACS ) ) ) ) + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - ( ( AMS * CRS ) + ( PN - PN ) ) ),( FirstVNF_Mem / MRS ) ) ,Min( ( ( ( RRS / FirstVNF_CPU ) / ( ( AMS + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) - FirstVNF_CPU ) ,( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - ( RMSe + ( RCSe + MLU ) ) ) - ( DS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / ( FirstVNF_Mem * Min( DDR ,Const ) ) ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + ( Min( ( ( RMSe / ( RRSe * MUM ) ) + RMSe ) ,MLU ) + ( RMSe + ( ( Max( ( RMSe + MUC ),MUC ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + Max( ( PN / RRS ),ARS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / ( MUM * CS ) )", "obj1": 0.20318725099601595, "obj2": 0.6785535251084553}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.2290836653386454, "obj2": 0.651816325509498}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.24900398406374502, "obj2": 0.6272840283950646}, {"determining": "( Max( ( ( Min( Min( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * ACS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( RMSe - RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( ( ( ( CRS * ( Const + BR ) ) * ( ( Const - Min( MDR ,ARS ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + ( ( RRSe + ( ( ( MUR * Min( RRSe ,RRSe ) ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4215567427338883}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.26294820717131473, "obj2": 0.6057700021376349}, {"determining": "( Min( ( MDR * ( FirstVNF_Mem + FirstVNF_Mem ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - Min( ARS ,RRS ) ) ) - ACS ) ) ) / MDR ) )", "choosing": "( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.1852589641434263, "obj2": 0.7052666317430133}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( BR * Max( ( PN / RRS ),ARS ) ) ),Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - CS ) / Min( MLU ,MUM ) )", "obj1": 0.37649402390438247, "obj2": 0.5008060379406376}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.549800796812749, "obj2": 0.33297626891200677}, {"determining": "( Max( ( BR * ACS ),( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( RCSe / MUR ) + ( RMSe + ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) / ( CS / ( MUC + ( CS * CS ) ) ) ) ) ) ) * Min( Max( MUC,DS ) ,Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.18137463677615412}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_Mem * CRS ) ),( ( ( RRS / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + ( ( CS - DS ) + RMSe ) ) )", "obj1": 0.3944223107569721, "obj2": 0.49476122392289346}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( FirstVNF_RAM / ( PN + DDR ) ) - ( MDR + Min( BR ,Const ) ) )", "choosing": "( MUM / ( MUR / ( MLU + MUR ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( ( PN * FirstVNF_RAM_Server ) + MDR ) ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( ( RMSe / RRSe ) - MUM ) )", "obj1": 0.48406374501992033, "obj2": 0.40461983234223864}, {"determining": "( Max( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.5287661597653899}, {"determining": "( Max( CRS,MRS ) * ( FirstVNF_RAM - BR ) )", "choosing": "( ( ( Max( ( MLU + ( MLU * Max( MUC,MUM ) ) ),DS ) - RCSe ) * Max( CS,CS ) ) / ( MUR / DS ) )", "obj1": 0.6952191235059761, "obj2": 0.21845253509661425}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8406374501992032, "obj2": 0.11222717870242599}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( PN - ( ( PN * FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM_Server - ( ( RRS * ACS ) - ( Min( RRS ,AMS ) - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( Max( ( DS / MUC ),( ( ( RRSe / MUM ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.5, "obj2": 0.39653153146144715}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.25694559491272584}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.350597609561753, "obj2": 0.5190646858416645}, {"determining": "( FirstVNF_CPU * ( ( RRS + FirstVNF_CPU ) / ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( MUR - MUR ) / ( ( CS - DS ) + Max( ( MUM - MUC ),MUR ) ) ) ) / MUR ) )", "obj1": 0.5438247011952191, "obj2": 0.3504330177956618}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.601593625498008, "obj2": 0.29388522746323575}, {"determining": "Max( ( ( Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( BR * ACS ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.6215139442231076, "obj2": 0.2906265554395204}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,MDR ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( ( RRS - ( AMS / PN ) ) + FirstVNF_Mem_Server ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( Min( MUM ,MUM ) + MUC ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.08154111132343689}, {"determining": "( ( BR * ACS ) * ( ( ( ( ARS + FirstVNF_CPU_Server ) - ( ARS * ( CRS / Min( ( AMS + CRS ) ,FirstVNF_Mem ) ) ) ) - ACS ) - RRS ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( MUR ,DS ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / Max( MUR,( CS * ( MUM * ( RCSe - RCSe ) ) ) ) ) - ( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) + MUR ) ) / RRSe ) )", "obj1": 0.7211155378486056, "obj2": 0.21470290018009866}, {"determining": "( Max( BR,MRS ) * ( ACS - Max( DDR,ACS ) ) )", "choosing": "( Max( RRSe,( ( RCSe + CS ) / ( RMSe / MLU ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( ( CS / MUR ) - MUC ) / ( Max( MUR,MUR ) + ( CS - DS ) ) ) ) / MUR ) )", "obj1": 0.5398406374501992, "obj2": 0.35786643495847387}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / Max( Max( CRS,MRS ),( MRS / AMS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,DS ) )", "obj1": 0.6394422310756972, "obj2": 0.2654310310452566}, {"determining": "( ( FirstVNF_Mem - Max( ACS,Max( ( ACS - FirstVNF_Mem_Server ),Const ) ) ) * ( Max( ( RRS / MDR ),( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( ( FirstVNF_CPU_Server - CRS ) * FirstVNF_CPU ) ) ) / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( ( RMSe / RMSe ) * CS ) * MUR ) / ( RRSe + DS ) )", "obj1": 0.7350597609561753, "obj2": 0.183581454196683}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.17330677290836655, "obj2": 0.7164158357512966}, {"determining": "( Min( MRS ,RRS ) * Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( Max( DS,MUM ) - ( RMSe - ( ( ( ( MUC + MUR ) + ( ( RRSe + MLU ) + MUC ) ) / DS ) * ( Max( Max( RMSe,Min( DS ,MUC ) ),( DS / ( MLU + MUC ) ) ) / MUR ) ) ) ) / DS )", "obj1": 0.5697211155378487, "obj2": 0.3271630668757872}, {"determining": "( Min( Max( ( Const * DDR ),ACS ) ,MDR ) / ( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( MRS,( ACS - FirstVNF_Mem_Server ) ) ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + ( MUM / CS ) ) / Min( RMSe ,MUC ) )", "obj1": 0.27689243027888444, "obj2": 0.594935689552466}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( ( MUR * MUM ) / ( RMSe - DS ) ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.3720567586200371}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( Max( ( ARS / ACS ),DDR ) - FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server + ( ( MRS * MDR ) + FirstVNF_Mem_Server ) ),Max( ACS,FirstVNF_RAM ) ) / MRS ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( CS - ( ( MLU / ( CS / MUR ) ) + ( RMSe * DS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883635}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( Min( ( CRS + ACS ) ,ACS ) - ( FirstVNF_Mem_Server * Max( RRS,( ARS - ACS ) ) ) ) + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - ( ( AMS * CRS ) + ( PN - PN ) ) ),( FirstVNF_Mem / MRS ) ) ,Min( ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ,( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( DS - ( ( MLU + MLU ) / ( MUM * CS ) ) ) )", "obj1": 0.9462151394422311, "obj2": 0.03406206606901699}, {"determining": "( ( ( ( ( Min( Min( Max( FirstVNF_CPU,ACS ) ,Const ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( BR + ARS ) ) ) ) * ( ( BR - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR * ( ( RRSe + Min( MUR ,Max( Max( RMSe,( CS + RCSe ) ),DS ) ) ) + DS ) ) / CS )", "obj1": 0.5179282868525896, "obj2": 0.3832647967258348}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( ( PN - ( FirstVNF_CPU_Server + PN ) ) + ARS ) / ( Max( DDR,( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) - ( RRS - AMS ) ) - ( ARS - ARS ) ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( RRSe + ( ( RMSe * RRSe ) + RRSe ) ) / ( CS * CS ) ),( ( DS - RMSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7382955881183081}, {"determining": "( ( Max( ( ( Min( CRS ,( Min( FirstVNF_CPU ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),( AMS * MRS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * ( CS * RCSe ) ) / ( RRSe - RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.3033606606353079}, {"determining": "( ( BR * ACS ) * ( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( CS - DS ) + ( CS - DS ) ) ) )", "obj1": 0.300796812749004, "obj2": 0.5697194893363349}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / Max( RCSe,MUR ) ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5142214910153895}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( ( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.7290836653386454, "obj2": 0.20121865249282195}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7828685258964143, "obj2": 0.1547534367980538}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( PN / RRS ) - ARS ) ) + ACS ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6693227091633466, "obj2": 0.2383669888314351}, {"determining": "Max( ( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( Max( DS,DS ) - RCSe ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.0561131546893304}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / FirstVNF_RAM_Server ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM - ARS ) / Min( PN ,RRS ) ) ),( ( Min( FirstVNF_Mem_Server ,DDR ) + ( RRS * FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / Max( Max( RRSe,( ( ( CS / CS ) - ( DS / MUC ) ) - MUM ) ),MUR ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06560558998227987}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( Min( ( CS / RCSe ) ,RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3120452238754365}, {"determining": "( ( FirstVNF_RAM_Server - ( RRS * AMS ) ) * Max( CRS,MRS ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( ( MUC / Min( RMSe ,Max( MUC,( CS - MUR ) ) ) ) * Min( RCSe ,Min( ( Min( DS ,MLU ) / MUC ) ,Min( MUR ,( MLU * RMSe ) ) ) ) ) - RCSe ) ,CS ) )", "obj1": 0.5976095617529881, "obj2": 0.30109966348583656}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( Max( DS,DS ) * CS ) ) / Max( CS,RCSe ) )", "obj1": 0.17729083665338646, "obj2": 0.7114971423693867}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5646153944012675}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.16334661354581673, "obj2": 0.7265161567071123}, {"determining": "( Max( Max( CRS,MRS ),( MRS / ( Max( Max( FirstVNF_Mem,BR ),( MRS / AMS ) ) * ( ACS - ARS ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR * MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7231075697211156, "obj2": 0.20706698317388011}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( MRS - FirstVNF_RAM_Server ) - PN ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6733067729083665, "obj2": 0.23527351110888317}, {"determining": "Max( ( ( ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( RMSe - Max( MUM,RCSe ) ) * Min( MUM ,MUC ) )", "obj1": 0.898406374501992, "obj2": 0.07302929113590469}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( Max( ARS,FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( CS * CS ) ),CS )", "obj1": 0.31673306772908366, "obj2": 0.5623839071974597}, {"determining": "( ( ( ACS - ARS ) * Max( ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) + ( RRS * FirstVNF_Mem ) ),Min( MRS ,Const ) ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * ( RCSe / Max( RCSe,MLU ) ) ) / Min( MLU ,CS ) )", "obj1": 0.6812749003984063, "obj2": 0.2286783499202716}, {"determining": "( Max( CRS,( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) )", "obj1": 0.6235059760956175, "obj2": 0.2768329106824048}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5737051792828686, "obj2": 0.3177028062862681}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / Max( RCSe,MUR ) ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5142214910153895}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.7888446215139442, "obj2": 0.1518350763466518}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.12346133688198332}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ACS ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( BR + ARS ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( MLU + RRSe ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( Min( Max( RCSe,RMSe ) ,RMSe ) / DS ) ) )", "obj1": 0.9422310756972112, "obj2": 0.04272816025723646}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - RRSe ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5298804780876494, "obj2": 0.3674182661168878}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.257489460813723}, {"determining": "( Max( CRS,( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5539210116026227}, {"determining": "( ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33067729083665337, "obj2": 0.54039560472269}, {"determining": "Max( ( ( ( BR * Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + Max( RRS,FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( MLU,( RMSe * Min( ( RMSe + ( RMSe / MUR ) ) ,( MUR * Min( DS ,RMSe ) ) ) ) ) / Min( MUR ,( RMSe / ( ( ( MUM + ( MUM + MUC ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8924302788844621, "obj2": 0.07511536943228597}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + Max( FirstVNF_Mem,Max( ACS,ARS ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) ) * Min( MUR ,MUM ) ) ) )", "obj1": 0.2868525896414343, "obj2": 0.582216003469439}, {"determining": "Max( ( ( ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) ) ) )", "choosing": "( ( RMSe - Max( MUM,( ( MUR - MUC ) / Min( MLU ,MUM ) ) ) ) * Min( MUM ,MUC ) )", "obj1": 0.9282868525896414, "obj2": 0.05518280869032031}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,BR ) - ( ( BR * ( FirstVNF_CPU * MRS ) ) + ACS ) ) ) ) + ( ( ( FirstVNF_Mem_Server * AMS ) * ( Const / RRS ) ) + ( ( Const * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - MUM ) - ( RCSe * RRSe ) )", "obj1": 0.9322709163346613, "obj2": 0.045493787054645574}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2739355518022902}, {"determining": "( ( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - RRSe ) + MUR ) ) + RCSe ) / MUM ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5298804780876494, "obj2": 0.3674182661168878}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5441041085235122}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( DS * ( Min( RRSe ,RCSe ) / ( CS / DS ) ) ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.9302788844621513, "obj2": 0.05056514719389612}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.5851493719885346}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.594825172480099}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MUR / ( CS * ( CS - MUM ) ) ) / MUM )", "obj1": 0.9900398406374502, "obj2": 0.008927254173198205}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( ( MRS + FirstVNF_Mem ) ,FirstVNF_RAM ) + ( RRS - AMS ) ) - MDR ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( ( ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) / DS ) / MUM ) )", "obj1": 0.28884462151394424, "obj2": 0.5760834701974034}, {"determining": "( ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33067729083665337, "obj2": 0.54039560472269}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.16334661354581673, "obj2": 0.7265161567071123}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2739355518022902}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5539210116026227}, {"determining": "( ( ( Const + BR ) - FirstVNF_CPU ) * Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MUR - MUC ) / RMSe )", "obj1": 0.8844621513944223, "obj2": 0.07753176192674721}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7828685258964143, "obj2": 0.1547534367980538}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( RCSe * ( MUR * ( ( MUC * MUM ) - MUR ) ) ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( RMSe ,CS ) )", "obj1": 0.7290836653386454, "obj2": 0.20121865249282195}], "10": [{"determining": "( ( ( FirstVNF_RAM_Server + Const ) + FirstVNF_RAM ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( Min( Min( ( Min( MUM ,CS ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( ( DS / MUC ) + Max( ( MUM / MLU ),RMSe ) ) ) ) ,Min( DS ,MUC ) ) * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( Min( ( CRS + ACS ) ,ACS ) - ( FirstVNF_Mem_Server * Max( RRS,( ACS - ACS ) ) ) ) + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - ( ( AMS * CRS ) + ( PN - PN ) ) ),( FirstVNF_Mem / MRS ) ) ,Min( ( ( ( RRS / FirstVNF_CPU ) / ( ( AMS + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) - FirstVNF_CPU ) ,( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - ( RMSe + ( RCSe + MLU ) ) ) - ( DS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( Min( MLU ,CS ) ,( CS + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6781960686260884}, {"determining": "( Max( CRS,MRS ) * ( FirstVNF_RAM - BR ) )", "choosing": "( ( ( Max( ( MLU + ( MLU * Max( MUC,MUM ) ) ),DS ) - RCSe ) * Max( CS,CS ) ) / ( MUR / DS ) )", "obj1": 0.6952191235059761, "obj2": 0.21845253509661425}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.12346133688198332}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( BR + ARS ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.4701195219123506, "obj2": 0.4274793336749993}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.549800796812749, "obj2": 0.33297626891200677}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_Mem * CRS ) ),( ( ( RRS / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + ( ( CS - DS ) + RMSe ) ) )", "obj1": 0.3944223107569721, "obj2": 0.49476122392289346}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.2290836653386454, "obj2": 0.651816325509498}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / Min( MRS ,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / DS ) / CS )", "obj1": 0.20119521912350596, "obj2": 0.6859627452596447}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5091821764354706}, {"determining": "( ( FirstVNF_RAM / ( PN + DDR ) ) - ( MDR + Min( BR ,Const ) ) )", "choosing": "( MUM / ( MUR / ( MLU + MUR ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Max( ( ( Min( Min( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * ACS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( RMSe - RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8406374501992032, "obj2": 0.11222717870242599}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.5, "obj2": 0.39653153146144715}, {"determining": "( Min( MRS ,RRS ) * Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( Max( DS,MUM ) - ( RMSe - ( ( ( ( MUC + MUR ) + ( ( RRSe + MLU ) + MUC ) ) / DS ) * ( Max( Max( RMSe,Min( DS ,MUC ) ),( DS / ( MLU + MUC ) ) ) / MUR ) ) ) ) / DS )", "obj1": 0.5697211155378487, "obj2": 0.3271630668757872}, {"determining": "( ( BR * ACS ) * ( ( ( ( ARS + FirstVNF_CPU_Server ) - ( ARS * ( CRS / Min( ( AMS + CRS ) ,FirstVNF_Mem ) ) ) ) - ACS ) - RRS ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( MUR ,DS ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / Max( MUR,( CS * ( MUM * ( RCSe - RCSe ) ) ) ) ) - ( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) + MUR ) ) / RRSe ) )", "obj1": 0.7211155378486056, "obj2": 0.21470290018009866}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / ( CS / DS ) ) * DS ) / ( ( ( MLU / MUR ) + DS ) + RMSe ) )", "obj1": 0.4820717131474104, "obj2": 0.4117986639796142}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.25586799819916684}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.6135458167330677, "obj2": 0.2852128099544994}, {"determining": "( Min( ( ARS + MRS ) ,BR ) * ( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( MUC + ( CS - ( Min( MLU ,MUR ) + RRSe ) ) ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6213846473878156}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( Max( Max( DDR,Const ),FirstVNF_RAM_Server ) + ARS ) ) ),( MRS / AMS ) ) * Max( ARS,ACS ) )", "choosing": "( ( RRSe - ( ( RCSe - ( RRSe - RMSe ) ) / ( ( MUR - MUC ) / Min( CS ,MLU ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / MUR ) )", "obj1": 0.749003984063745, "obj2": 0.1757165481843693}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / FirstVNF_RAM_Server ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM - ARS ) / Min( PN ,RRS ) ) ),( ( Min( FirstVNF_Mem_Server ,DDR ) + ( RRS * FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / Max( Max( RRSe,( ( ( CS / CS ) - ( DS / MUC ) ) - MUM ) ),MUR ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06560558998227987}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( PN - ( ( PN * FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM_Server - ( ( RRS * ACS ) - ( Min( RRS ,AMS ) - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( Max( ( DS / MUC ),( ( ( RRSe / MUM ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.26294820717131473, "obj2": 0.6057700021376349}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.24900398406374502, "obj2": 0.6272840283950646}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( ( PN * FirstVNF_RAM_Server ) + MDR ) ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( ( RMSe / RRSe ) - MUM ) )", "obj1": 0.48406374501992033, "obj2": 0.40461983234223864}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.2290836653386454, "obj2": 0.651816325509498}, {"determining": "( ( BR * ACS ) * ( ( ( FirstVNF_RAM_Server * ACS ) * FirstVNF_CPU ) + ARS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( ( ( ( ( Min( Min( Max( FirstVNF_CPU,ACS ) ,Const ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( BR + ARS ) ) ) ) * ( ( BR - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR * ( ( RRSe + Min( MUR ,Max( Max( RMSe,( CS + RCSe ) ),DS ) ) ) + DS ) ) / CS )", "obj1": 0.5179282868525896, "obj2": 0.3832647967258348}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( Max( ( ARS / ACS ),DDR ) - FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server + ( ( MRS * MDR ) + FirstVNF_Mem_Server ) ),Max( ACS,FirstVNF_RAM ) ) / MRS ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( CS - ( ( MLU / ( CS / MUR ) ) + ( RMSe * DS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883635}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.17330677290836655, "obj2": 0.7164158357512966}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + Max( ( PN / RRS ),ARS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / ( MUM * CS ) )", "obj1": 0.20318725099601595, "obj2": 0.6785535251084553}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.5796812749003984, "obj2": 0.30902355356318023}, {"determining": "( ( ACS - ARS ) * Max( ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM * CS ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5199203187250996, "obj2": 0.37159976032056946}, {"determining": "( Min( ( MDR * ( FirstVNF_Mem + FirstVNF_Mem ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - Min( ARS ,RRS ) ) ) - ACS ) ) ) / MDR ) )", "choosing": "( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.1852589641434263, "obj2": 0.7052666317430133}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7828685258964143, "obj2": 0.1547534367980538}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( ( PN - ( FirstVNF_CPU_Server + PN ) ) + ARS ) / ( Max( DDR,( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) - ( RRS - AMS ) ) - ( ARS - ARS ) ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( RRSe + ( ( RMSe * RRSe ) + RRSe ) ) / ( CS * CS ) ),( ( DS - RMSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7382955881183081}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7888446215139442, "obj2": 0.14872316119072132}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR * MUM ) / ( RRSe + MUR ) )", "obj1": 0.7350597609561753, "obj2": 0.183581454196683}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5274051020056618}, {"determining": "( ( DDR + DDR ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - CS ) / ( RRSe - Min( MUR ,MUM ) ) )", "obj1": 0.37649402390438247, "obj2": 0.5008060379406376}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ACS ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( BR + ARS ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( MLU + RRSe ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( Min( Max( RCSe,RMSe ) ,RMSe ) / DS ) ) )", "obj1": 0.9422310756972112, "obj2": 0.04272816025723646}, {"determining": "( Min( FirstVNF_Mem_Server ,MDR ) - Min( BR ,FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( ( CS - DS ) + Min( ( MUR / RMSe ) ,( ( MUR / ( Max( MUR,RMSe ) / Max( RMSe,RMSe ) ) ) - Min( Min( MUM ,RMSe ) ,( ( RRSe / MLU ) + DS ) ) ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007504234820233865}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.24900398406374502, "obj2": 0.6272840283950646}, {"determining": "( Max( FirstVNF_RAM,BR ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) )", "choosing": "( ( MUR - RRSe ) / Min( MLU ,( MLU * RCSe ) ) )", "obj1": 0.27091633466135456, "obj2": 0.6016876784417778}, {"determining": "( ( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.7290836653386454, "obj2": 0.20121865249282195}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) * ( Max( CRS,( MRS / AMS ) ) * ( ACS - Const ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( CS * MLU ) / ( ( CS - DS ) + ( CS - MUC ) ) ) )", "obj1": 0.300796812749004, "obj2": 0.565076498755515}, {"determining": "( Max( CRS,( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) )", "obj1": 0.6235059760956175, "obj2": 0.2768329106824048}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( PN / RRS ) - ARS ) ) + ACS ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( Min( MUM ,MUM ) + MUC ) ) ) )", "obj1": 0.8764940239043825, "obj2": 0.0872943794205702}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,CS ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.8944223107569721, "obj2": 0.06707649404655491}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( Max( DS,DS ) * CS ) ) / Max( CS,RCSe ) )", "obj1": 0.17729083665338646, "obj2": 0.7114971423693867}, {"determining": "( Max( BR,MRS ) * ( ACS - Max( DDR,ACS ) ) )", "choosing": "( Max( RRSe,( ( RCSe + CS ) / ( RMSe / MLU ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( ( CS / MUR ) - MUC ) / ( Max( MUR,MUR ) + ( CS - DS ) ) ) ) / MUR ) )", "obj1": 0.5398406374501992, "obj2": 0.35786643495847387}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6693227091633466, "obj2": 0.2383669888314351}, {"determining": "( FirstVNF_CPU * ( ( RRS + FirstVNF_CPU ) / ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( MUR - MUR ) / ( ( CS - DS ) + Max( ( MUM - MUC ),MUR ) ) ) ) / MUR ) )", "obj1": 0.5438247011952191, "obj2": 0.3504330177956618}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.16334661354581673, "obj2": 0.7265161567071123}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.350597609561753, "obj2": 0.5190646858416645}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.1852589641434263, "obj2": 0.7052666317430133}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( MRS - FirstVNF_RAM_Server ) - PN ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6733067729083665, "obj2": 0.23527351110888317}, {"determining": "( Max( ( BR * ACS ),( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR * MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7430278884462151, "obj2": 0.17745581096349333}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( BR * Max( ( PN / RRS ),ARS ) ) ),Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - CS ) / Min( MLU ,MUM ) )", "obj1": 0.37649402390438247, "obj2": 0.5008060379406376}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.603585657370518, "obj2": 0.2931081642236893}, {"determining": "( Max( BR,MRS ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6812749003984063, "obj2": 0.2286783499202716}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + Max( FirstVNF_Mem,Max( ACS,ARS ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) ) * Min( MUR ,MUM ) ) ) )", "obj1": 0.2868525896414343, "obj2": 0.582216003469439}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.2610399824483841}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,BR ) - ( ( BR * ( FirstVNF_CPU * MRS ) ) + ACS ) ) ) ) + ( ( ( FirstVNF_Mem_Server * AMS ) * ( Const / RRS ) ) + ( ( Const * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - MUM ) - ( RCSe * RRSe ) )", "obj1": 0.9322709163346613, "obj2": 0.045493787054645574}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( ( MUC / Min( RMSe ,Max( MUC,( CS - MUR ) ) ) ) * Min( RCSe ,Min( ( Min( DS ,MLU ) / MUC ) ,Min( MUR ,( MLU * RMSe ) ) ) ) ) - RCSe ) ,CS ) )", "obj1": 0.5378486055776892, "obj2": 0.36622194649333584}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( ( ( ACS - ARS ) * Max( ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) + ( RRS * FirstVNF_Mem ) ),Min( MRS ,Const ) ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * ( RCSe / Max( RCSe,MLU ) ) ) / Min( MLU ,CS ) )", "obj1": 0.6812749003984063, "obj2": 0.2286783499202716}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,RCSe ) )", "obj1": 0.6334661354581673, "obj2": 0.2727342500940302}, {"determining": "( Max( CRS,Min( BR ,Const ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,( MUR / ( MLU + MUR ) ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5535621589830723}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,MDR ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( ( RRS - ( AMS / PN ) ) + FirstVNF_Mem_Server ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( Min( MUM ,MUM ) + MUC ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.08154111132343689}, {"determining": "( ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33067729083665337, "obj2": 0.54039560472269}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( Min( Max( ( Const * DDR ),ACS ) ,MDR ) / ( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( MRS,( ACS - FirstVNF_Mem_Server ) ) ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + ( MUM / CS ) ) / Min( RMSe ,MUC ) )", "obj1": 0.27689243027888444, "obj2": 0.594935689552466}, {"determining": "( ( BR * ACS ) * ( Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( ACS - ( FirstVNF_Mem_Server - BR ) ) ) ),( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.3147410358565737, "obj2": 0.5574819599226383}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6693227091633466, "obj2": 0.2383669888314351}, {"determining": "Max( ( ( ( BR * Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + Max( RRS,FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( MLU,( RMSe * Min( ( RMSe + ( RMSe / MUR ) ) ,( MUR * Min( DS ,RMSe ) ) ) ) ) / Min( MUR ,( RMSe / ( ( ( MUM + ( MUM + MUC ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8924302788844621, "obj2": 0.07511536943228597}, {"determining": "( ( FirstVNF_RAM / Min( FirstVNF_RAM ,BR ) ) - Max( RRS,( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.594825172480099}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5737051792828686, "obj2": 0.3177028062862681}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5936254980079682, "obj2": 0.29543882872309063}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,MDR ) ) - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUR ) ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5588815606178498}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / Max( Max( CRS,MRS ),( MRS / AMS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,DS ) )", "obj1": 0.6394422310756972, "obj2": 0.2654310310452566}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,BR ) - ( ( BR * ( ( PN / RRS ) - ARS ) ) + ACS ) ) ) ) + ( ( ( Const * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server * AMS ) / ( Const / RRS ) ) ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + MLU ) ,( ( CS - ( ( MLU + MLU ) + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.950199203187251, "obj2": 0.03216266764515071}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( DS * ( Min( RRSe ,RCSe ) / ( CS / DS ) ) ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.9302788844621513, "obj2": 0.05056514719389612}], "11": [{"determining": "( ( FirstVNF_RAM * Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,CS ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Const ) + FirstVNF_RAM ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( Min( Min( ( Min( MUM ,CS ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( ( DS / MUC ) + Max( ( MUM / MLU ),RMSe ) ) ) ) ,Min( DS ,MUC ) ) * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( BR * ACS ) * ( ( ( ( ARS + FirstVNF_CPU_Server ) - ( ARS * ( CRS / Min( ( AMS + CRS ) ,FirstVNF_Mem ) ) ) ) - ACS ) - RRS ) )", "choosing": "( ( MUR * MUM ) / ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( MUR ,DS ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / Max( MUR,( CS * ( MUM * ( RCSe - RCSe ) ) ) ) ) - ( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) + MUR ) ) / RRSe ) )", "obj1": 0.7211155378486056, "obj2": 0.21470290018009866}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "( ( ( ( ( Const - RRS ) * FirstVNF_CPU_Server ) * Max( PN,( PN + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RMSe + ( ( MLU + ( MUM / Min( MLU ,( MUR - ( MUR / RRSe ) ) ) ) ) + MUM ) ) / ( ( MUM - DS ) + MUM ) )", "obj1": 0.4641434262948207, "obj2": 0.4164436365129701}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06546017501950097}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( ( ( MUR / DS ) / DS ) / MUM ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6672788939134215}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.492648430551069}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7270916334661355, "obj2": 0.19338362137692247}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( DS * ( Min( RRSe ,RCSe ) / ( CS / DS ) ) ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.9302788844621513, "obj2": 0.05056514719389612}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6390970073914866}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5091821764354706}, {"determining": "( ( FirstVNF_RAM / ( PN + DDR ) ) - ( MDR + Min( BR ,Const ) ) )", "choosing": "( MUM / ( MUR / ( MLU + MUR ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.21804230416622403}, {"determining": "( Max( ( ( Min( Min( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * ACS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( RMSe - RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.1454183266932271, "obj2": 0.7522805761035868}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.5, "obj2": 0.39653153146144715}, {"determining": "( Min( MRS ,RRS ) * Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( Max( DS,MUM ) - ( RMSe - ( ( ( ( MUC + MUR ) + ( ( RRSe + MLU ) + MUC ) ) / DS ) * ( Max( Max( RMSe,Min( DS ,MUC ) ),( DS / ( MLU + MUC ) ) ) / MUR ) ) ) ) / DS )", "obj1": 0.5697211155378487, "obj2": 0.3271630668757872}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.25586799819916684}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( Max( ( BR * ACS ),( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( Const,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) ) * ( ACS - ( AMS / ( MRS - ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( MUR - MUC ) / Min( MLU ,CS ) ) / Min( RCSe ,CS ) ) ) - Max( MUC,CS ) )", "obj1": 0.8047808764940239, "obj2": 0.13910872461359117}, {"determining": "( Max( BR,MRS ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,( Min( MRS ,Const ) / MRS ) ) / ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),RMSe ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( RRSe / RMSe ),( MUM * MUM ) ) ) ,( MUR * ( RMSe + CS ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.33600791148401415}, {"determining": "( ( BR * ACS ) * ( ( ( FirstVNF_RAM_Server * ACS ) * FirstVNF_CPU ) + ARS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.6970769839232468}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.16334661354581673, "obj2": 0.7265161567071123}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.549800796812749, "obj2": 0.33297626891200677}, {"determining": "( Max( BR,MRS ) * ( ACS - Max( DDR,ACS ) ) )", "choosing": "( Max( RRSe,( ( RCSe + CS ) / ( RMSe / MLU ) ) ) - ( ( Min( RRSe ,RRSe ) * ( ( ( CS / MUR ) - MUC ) / ( Max( MUR,MUR ) + ( CS - DS ) ) ) ) / MUR ) )", "obj1": 0.5398406374501992, "obj2": 0.35786643495847387}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( ( PN * FirstVNF_RAM_Server ) + MDR ) ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( ( RMSe / RRSe ) - MUM ) )", "obj1": 0.48406374501992033, "obj2": 0.40461983234223864}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( ( Max( DDR,( ( ( BR - AMS ) + Min( ( FirstVNF_RAM - CRS ) ,ARS ) ) - ARS ) ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) )", "choosing": "( MUM / Min( ( MLU / ( DS / CS ) ) ,MUR ) )", "obj1": 0.31274900398406374, "obj2": 0.5495116159056183}, {"determining": "( ( ( Max( DDR,( ARS - ARS ) ) / FirstVNF_RAM ) / MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RCSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.33067729083665337, "obj2": 0.54039560472269}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / ( CS / DS ) ) * DS ) / ( ( ( MLU / MUR ) + DS ) + RMSe ) )", "obj1": 0.4820717131474104, "obj2": 0.4117986639796142}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( Max( ( ARS / ACS ),DDR ) - FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server + ( ( MRS * MDR ) + FirstVNF_Mem_Server ) ),Max( ACS,FirstVNF_RAM ) ) / MRS ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( CS - ( ( MLU / ( CS / MUR ) ) + ( RMSe * DS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883635}, {"determining": "( Max( ( MRS / ( FirstVNF_RAM_Server - MRS ) ),Min( BR ,Const ) ) * ( ARS - ACS ) )", "choosing": "( ( MUR - Min( ( Min( ( DS + ( Max( MUM,MUR ) - CS ) ) ,RCSe ) * DS ) ,MUR ) ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / ( DS - MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) ,( MUR / ( MLU + MUR ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( ( ( ( Min( Min( Max( FirstVNF_CPU,ACS ) ,Const ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( BR + ARS ) ) ) ) * ( ( BR - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR * ( ( RRSe + Min( MUR ,Max( Max( RMSe,( CS + RCSe ) ),DS ) ) ) + DS ) ) / CS )", "obj1": 0.5179282868525896, "obj2": 0.3832647967258348}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5737051792828686, "obj2": 0.3177028062862681}, {"determining": "( ( ACS - ARS ) * Max( ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM * CS ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5199203187250996, "obj2": 0.37159976032056946}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.12346133688198332}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.6524614961448068}, {"determining": "( Max( ( ACS - ARS ),( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + MLU ) - DS ) )", "obj1": 0.5896414342629482, "obj2": 0.30194575536104545}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 0.7788844621513944, "obj2": 0.15804493637143602}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( ( PN - ( FirstVNF_CPU_Server + PN ) ) + ARS ) / ( Max( DDR,( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) - ( RRS - AMS ) ) - ( ARS - ARS ) ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( RRSe + ( ( RMSe * RRSe ) + RRSe ) ) / ( CS * CS ) ),( ( DS - RMSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7382955881183081}, {"determining": "( ( ( ( CRS + ACS ) / RRS ) * ( ACS - ARS ) ) * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( RCSe + CS ) / CS )", "obj1": 0.5298804780876494, "obj2": 0.36702509255334753}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( Max( CRS,( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) )", "obj1": 0.6235059760956175, "obj2": 0.2768329106824048}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / ( FirstVNF_Mem - Max( ACS,DDR ) ) ),DDR ) ) / Min( ( ACS + ( RRS / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe / DS ) ) / Min( MUM ,( ( Max( RCSe,Min( CS ,Min( RCSe ,MUR ) ) ) * Max( ( RMSe / MUC ),Max( MUM,( ( RCSe * RRSe ) / RMSe ) ) ) ) / ( ( RMSe / ( ( MLU - ( MLU + MUC ) ) + RMSe ) ) - CS ) ) ) )", "obj1": 0.8645418326693227, "obj2": 0.09757835406458304}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( Max( FirstVNF_RAM,BR ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) )", "choosing": "( ( MUR - RRSe ) / Min( MLU ,( MLU * RCSe ) ) )", "obj1": 0.27091633466135456, "obj2": 0.6016876784417778}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.26294820717131473, "obj2": 0.6057700021376349}, {"determining": "( Min( ( ARS + MRS ) ,BR ) * ( Max( CRS,( MRS / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUC ) / ( MUC + ( CS - ( Min( MLU ,MUR ) + RRSe ) ) ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6213846473878156}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( ( DDR + DDR ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - CS ) / ( RRSe - Min( MUR ,MUM ) ) )", "obj1": 0.37649402390438247, "obj2": 0.5008060379406376}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( PN / RRS ) - ARS ) ) + ACS ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + ( ( MUR - MUC ) / ( ( CS - DS ) + Max( MUR,MUR ) ) ) ) ,( ( CS - ( MLU + MUC ) ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( Max( Max( DDR,Const ),FirstVNF_RAM_Server ) + ARS ) ) ),( MRS / AMS ) ) * Max( ARS,ACS ) )", "choosing": "( ( RRSe - ( ( RCSe - ( RRSe - RMSe ) ) / ( ( MUR - MUC ) / Min( CS ,MLU ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / MUR ) )", "obj1": 0.749003984063745, "obj2": 0.1757165481843693}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( BR / ( FirstVNF_Mem + AMS ) ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( RCSe,CS ) ) / Min( MLU ,( MLU / ( MLU - RRSe ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.2383669888314351}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.350597609561753, "obj2": 0.5190646858416645}, {"determining": "Max( ( ( ( BR * Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + Max( RRS,FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( MLU,( RMSe * Min( ( RMSe + ( RMSe / MUR ) ) ,( MUR * Min( DS ,RMSe ) ) ) ) ) / Min( MUR ,( RMSe / ( ( ( MUM + ( MUM + MUC ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8924302788844621, "obj2": 0.07511536943228597}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( MRS - FirstVNF_RAM_Server ) - PN ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6733067729083665, "obj2": 0.23527351110888317}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7410358565737052, "obj2": 0.17619962317534213}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.24900398406374502, "obj2": 0.6272840283950646}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + Max( FirstVNF_Mem,Max( ACS,ARS ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) ) * Min( MUR ,MUM ) ) ) )", "obj1": 0.2868525896414343, "obj2": 0.582216003469439}, {"determining": "( ( ( ACS - ARS ) * Max( ( Max( PN,ARS ) + ( RRS * FirstVNF_Mem ) ),Min( MRS ,Const ) ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * ( ( ( MUR / DS ) / MUM ) / Max( RCSe,MLU ) ) ) / Min( MLU ,CS ) )", "obj1": 0.8326693227091634, "obj2": 0.11506987721242352}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) / Min( ( MRS / DDR ) ,FirstVNF_Mem ) ) - Min( FirstVNF_CPU ,( ( ( ( FirstVNF_Mem_Server + ( BR + FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_RAM ) ) / MRS ) * ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.24900398406374502, "obj2": 0.6272840283950646}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / Max( Max( CRS,MRS ),( MRS / AMS ) ) ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - CS ) ) ) )", "obj1": 0.8844621513944223, "obj2": 0.07856520256925474}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,CS ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.8944223107569721, "obj2": 0.06707649404655491}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8426294820717132, "obj2": 0.10643769686406221}, {"determining": "( Max( CRS,Max( Min( ACS ,FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( Max( DS,DS ) - RCSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.33266932270916333, "obj2": 0.5373756195593534}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,RCSe ) )", "obj1": 0.6334661354581673, "obj2": 0.2727342500940302}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( RRS - AMS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( CS - ( ( ( MUR - MUC ) / CS ) / MUR ) )", "obj1": 0.5358565737051793, "obj2": 0.3604754961481139}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( Max( ( MUM * MUM ),( RRSe / RMSe ) ) / MUM )", "obj1": 0.2848605577689243, "obj2": 0.5881222610665788}, {"determining": "( Max( BR,MRS ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6812749003984063, "obj2": 0.2286783499202716}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.5796812749003984, "obj2": 0.30902355356318023}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8406374501992032, "obj2": 0.11222717870242599}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( Max( DS,DS ) + RMSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 0.6155378486055777, "obj2": 0.2845561628772302}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7828685258964143, "obj2": 0.1547534367980538}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( DS / MUC ) / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.25586799819916684}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,MDR ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( ( RRS - ( AMS / PN ) ) + FirstVNF_Mem_Server ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( Min( MUM ,MUM ) + MUC ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.08154111132343689}, {"determining": "( Min( Max( ( Const * DDR ),ACS ) ,MDR ) / ( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( MRS,( ACS - FirstVNF_Mem_Server ) ) ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + ( MUM / CS ) ) / Min( RMSe ,MUC ) )", "obj1": 0.27689243027888444, "obj2": 0.594935689552466}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6693227091633466, "obj2": 0.2383669888314351}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) - ( Const - RRS ) )", "choosing": "( ( Min( ( MUC + RMSe ) ,( CS + DS ) ) / DS ) / MUM )", "obj1": 0.9900398406374502, "obj2": 0.004227640158349292}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( PN - ( ( PN * FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM_Server - ( ( RRS * ACS ) - ( Min( RRS ,AMS ) - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MUM ),( Max( ( DS / MUC ),( ( ( RRSe / MUM ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( Min( ( MDR * ( FirstVNF_Mem + FirstVNF_Mem ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - Min( ARS ,RRS ) ) ) - ACS ) ) ) / MDR ) )", "choosing": "( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.1852589641434263, "obj2": 0.7052666317430133}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR * MUM ) / ( RRSe + MUR ) )", "obj1": 0.7350597609561753, "obj2": 0.183581454196683}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.1852589641434263, "obj2": 0.7052666317430133}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( ( ( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( CS / Max( ( ( MUC + DS ) - CS ),( MUC - ( CS - MLU ) ) ) ) - DS ) * ( MUM * ( ( ( Min( MLU ,MUC ) / Min( RCSe ,MUR ) ) * RMSe ) * RRSe ) ) ) ,MUM ) * ( ( MUR - MUC ) + ( MUC + ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5538526352424306}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + ( Min( MUM ,MUM ) + MUC ) ) ) )", "obj1": 0.8764940239043825, "obj2": 0.0872943794205702}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.2290836653386454, "obj2": 0.651816325509498}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR * MUM ) / ( RRSe + MUR ) )", "obj1": 0.7350597609561753, "obj2": 0.183581454196683}], "12": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_RAM * Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,CS ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * Max( CS,RCSe ) ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) )", "choosing": "( ( ( MUR / DS ) / DS ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( ( Min( MRS ,FirstVNF_CPU ) * ARS ) - FirstVNF_Mem_Server ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( Min( RCSe ,RMSe ) / Min( ( MUR - MUC ) ,Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7171314741035857, "obj2": 0.20100840095008254}, {"determining": "( ( Min( Min( ( Const - ( BR / MRS ) ) ,ACS ) ,ARS ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MLU ),( ( MUC + ( RCSe * DS ) ) + ( CS + DS ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06665098128406863}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( PN + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( ( MUR / DS ) / MUM ) / MUM )", "obj1": 0.20717131474103587, "obj2": 0.685437301759272}, {"determining": "( ( DDR + DDR ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - CS ) / ( RRSe - Min( MUR ,MUM ) ) )", "obj1": 0.37649402390438247, "obj2": 0.5008060379406376}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( PN / RRS ) )", "choosing": "( ( ( ( ( DS - MUM ) - ( Max( RCSe,Max( MUM,RMSe ) ) * MUC ) ) - RRSe ) - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,( Min( MRS ,Const ) / MRS ) ) / ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),RMSe ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( RRSe / RMSe ),( MUM * MUM ) ) ) ,( MUR * ( RMSe + CS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.3548063551448515}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / PN ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) - Max( CS,RCSe ) ) / ( CS / Max( RRSe,RMSe ) ) )", "obj1": 0.5956175298804781, "obj2": 0.29375101275109594}, {"determining": "( Max( ( ( Min( Min( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * ACS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( RMSe - RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / Max( Max( CRS,MRS ),( MRS / AMS ) ) ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - CS ) ) ) )", "obj1": 0.9043824701195219, "obj2": 0.06506045561861513}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( ( BR * ACS ) * ( FirstVNF_RAM / Min( PN ,DDR ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,( MUC + RMSe ) ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.6916104776913956}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.12346133688198332}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * PN ) + ( Min( PN ,MRS ) * CRS ) )", "choosing": "( ( MLU / CS ) / ( MUM * ( CS / RMSe ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.5, "obj2": 0.39653153146144715}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.17330677290836655, "obj2": 0.7217988681145422}, {"determining": "( Min( MRS ,RRS ) * Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( Max( DS,MUM ) - ( RMSe - ( ( ( ( MUC + MUR ) + ( ( RRSe + MLU ) + MUC ) ) / DS ) * ( Max( Max( RMSe,Min( DS ,MUC ) ),( DS / ( MLU + MUC ) ) ) / MUR ) ) ) ) / DS )", "obj1": 0.5697211155378487, "obj2": 0.3271630668757872}, {"determining": "Max( ( ( Max( ARS,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( PN + FirstVNF_RAM_Server ) ),( PN * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,RCSe ) / ( RMSe / MUM ) ) ,( ( ( Min( MUR ,( ( CS * MUM ) / CS ) ) / RCSe ) - CS ) + MUR ) ) * Max( RCSe,CS ) )", "obj1": 0.8665338645418327, "obj2": 0.09285520867453041}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.21804230416622403}, {"determining": "( Max( BR,BR ) * ( ACS - Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( BR * ACS ) * ( ( ( FirstVNF_RAM_Server * ACS ) * FirstVNF_CPU ) + ARS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7270916334661355, "obj2": 0.19338362137692247}, {"determining": "( ( ( ( ( Const - RRS ) * FirstVNF_CPU_Server ) * Max( PN,( PN + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RMSe + ( ( MLU + ( MUM / Min( MLU ,( MUR - ( MUR / RRSe ) ) ) ) ) + MUM ) ) / ( ( MUM - DS ) + MUM ) )", "obj1": 0.4641434262948207, "obj2": 0.4164436365129701}, {"determining": "( ( ACS - ARS ) * Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.549800796812749, "obj2": 0.33297626891200677}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,Min( MLU ,MUM ) ) )", "obj1": 0.9103585657370518, "obj2": 0.06212316639711281}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * ( ARS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5353170446172677}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( ( PN * FirstVNF_RAM_Server ) + MDR ) ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( ( RMSe / RRSe ) - MUM ) )", "obj1": 0.48406374501992033, "obj2": 0.40461983234223864}, {"determining": "Max( ( ( ( BR * Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUR ,( RMSe / ( MUM - DS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.045834115425036924}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03182203756282747}, {"determining": "( ( FirstVNF_RAM / ( Max( ( AMS + ( FirstVNF_Mem - BR ) ),RRS ) + DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUM / ( ( CS / RMSe ) * MUC ) ) / MUM )", "obj1": 0.14143426294820718, "obj2": 0.7508406632128592}, {"determining": "( ( ( ( DDR + ( ( MRS - Const ) - PN ) ) - ( ARS * ( CRS / Min( ( AMS + CRS ) ,FirstVNF_Mem ) ) ) ) - Const ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) - Max( MUC,RCSe ) ) / ( MUC * RRSe ) )", "obj1": 0.6653386454183267, "obj2": 0.2471937651035681}, {"determining": "( Max( CRS,Max( ( FirstVNF_RAM / Min( PN ,DDR ) ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( ( ( MUR / DS ) / MUM ) + MUM ) ) ) / ( MUM * CS ) ),( ( ( Max( DS,DS ) - RCSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.25697211155378485, "obj2": 0.6169851159112586}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.05131821589226587}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( ( ( CRS + ACS ) / RRS ) * ( ACS - ARS ) ) * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( RCSe + CS ) / CS )", "obj1": 0.5298804780876494, "obj2": 0.36702509255334753}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( ( Max( ( ARS / ACS ),DDR ) - FirstVNF_Mem_Server ) * ( Max( ( FirstVNF_Mem_Server + ( ( MRS * MDR ) + FirstVNF_Mem_Server ) ),Max( ACS,FirstVNF_RAM ) ) / MRS ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( CS - ( ( MLU / ( CS / MUR ) ) + ( RMSe * DS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011328240456883635}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( ( ( ( Min( Min( Max( FirstVNF_CPU,ACS ) ,Const ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( BR + ARS ) ) ) ) * ( ( BR - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR * ( ( RRSe + Min( MUR ,Max( Max( RMSe,( CS + RCSe ) ),DS ) ) ) + DS ) ) / CS )", "obj1": 0.5179282868525896, "obj2": 0.3832647967258348}, {"determining": "( ( FirstVNF_RAM * ( Min( ARS ,ACS ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) + ( FirstVNF_Mem - CRS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( RMSe ,( RMSe / ( ( Min( Max( DS,Max( DS,CS ) ) ,MUR ) * Min( MUC ,( MUR + ( RRSe * MUC ) ) ) ) - CS ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.42379254789949466}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,RCSe ) )", "obj1": 0.6334661354581673, "obj2": 0.2727342500940302}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7074386272427583}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.16334661354581673, "obj2": 0.7265161567071123}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5737051792828686, "obj2": 0.3177028062862681}, {"determining": "( ( ACS - ARS ) * Max( ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM * CS ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5199203187250996, "obj2": 0.37159976032056946}, {"determining": "( Max( Max( CRS,Min( Min( MRS ,AMS ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS / ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( ( MUR - ( MUR / RMSe ) ) ,Min( MLU ,CS ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / MUR ) )", "obj1": 0.8047808764940239, "obj2": 0.13820178161487376}, {"determining": "( Min( Max( ( Const * DDR ),ACS ) ,MDR ) / ( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( MRS,( ACS - FirstVNF_Mem_Server ) ) ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + ( MUM / CS ) ) / Min( RMSe ,MUC ) )", "obj1": 0.27689243027888444, "obj2": 0.594935689552466}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( Max( DS,DS ) + RMSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 0.6155378486055777, "obj2": 0.2845561628772302}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 0.7788844621513944, "obj2": 0.15804493637143602}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( ( PN - ( FirstVNF_CPU_Server + PN ) ) + ARS ) / ( Max( DDR,( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) - ( RRS - AMS ) ) - ( ARS - ARS ) ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( RRSe + ( ( RMSe * RRSe ) + RRSe ) ) / ( CS * CS ) ),( ( DS - RMSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7382955881183081}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6390970073914866}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( ( FirstVNF_CPU * ARS ) * Max( ( Max( ( DDR / ( ( MDR - ( FirstVNF_CPU + MDR ) ) - Const ) ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,Const ) ) )", "choosing": "( ( Max( RCSe,Max( ( ( DS - RMSe ) / MLU ),DS ) ) * Max( CS,RCSe ) ) / Min( ( ( CS / ( MLU / MUC ) ) * Max( ( MUM * MUM ),( DS / RMSe ) ) ) ,Max( ( RRSe / DS ),CS ) ) )", "obj1": 0.5438247011952191, "obj2": 0.33600791148401415}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - Max( ( ARS / ACS ),DDR ) ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( DS / MUC ) / ( ( ( ( ( MLU + MUC ) - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9621513944223108, "obj2": 0.023978721119147745}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5091821764354706}, {"determining": "( Max( Max( CRS,MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7828685258964143, "obj2": 0.1547534367980538}, {"determining": "( ( ACS / ARS ) * ( FirstVNF_RAM_Server * AMS ) )", "choosing": "Max( ( ( ( MUR / DS ) + ( ( ( MUC * ( MUM / ( RMSe * DS ) ) ) + Min( Max( ( MUM + RCSe ),( MUR + MLU ) ) ,( MUC / ( RCSe + MLU ) ) ) ) - Max( RRSe,MUR ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6594845196026042}, {"determining": "( Max( ( ACS - ARS ),( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + MLU ) - DS ) )", "obj1": 0.5896414342629482, "obj2": 0.30194575536104545}, {"determining": "( Max( FirstVNF_RAM,BR ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) )", "choosing": "( ( MUR - RRSe ) / Min( MLU ,( MLU * RCSe ) ) )", "obj1": 0.27091633466135456, "obj2": 0.6016876784417778}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / ( CS / DS ) ) * DS ) / ( ( ( MLU / MUR ) + DS ) + RMSe ) )", "obj1": 0.4820717131474104, "obj2": 0.4117986639796142}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) ,( MUR / ( MLU + MUR ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( Max( Max( DDR,Const ),FirstVNF_RAM_Server ) + ARS ) ) ),( MRS / AMS ) ) * Max( ARS,ACS ) )", "choosing": "( ( RRSe - ( ( RCSe - ( RRSe - RMSe ) ) / ( ( MUR - MUC ) / Min( CS ,MLU ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / MUR ) )", "obj1": 0.749003984063745, "obj2": 0.1757165481843693}, {"determining": "( ( ( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( CS / Max( ( ( MUC + DS ) - CS ),( MUC - ( CS - MLU ) ) ) ) - DS ) * ( MUM * ( ( ( Min( MLU ,MUC ) / Min( RCSe ,MUR ) ) * RMSe ) * RRSe ) ) ) ,MUM ) * ( ( MUR - MUC ) + ( MUC + ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5538526352424306}, {"determining": "Max( Min( MRS ,Min( ( ( Min( ARS ,( Min( DDR ,ACS ) / PN ) ) - PN ) / BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_Mem_Server + CRS ) / ( MRS * BR ) ) - Max( FirstVNF_CPU,( ( BR + DDR ) / Max( ( DDR + ( CRS * CRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( RCSe + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( ( RCSe / RMSe ) - MUC ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / ( ( MUC + CS ) * ( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( Max( ( MUM * MUM ),( RRSe / RMSe ) ) / MUM )", "obj1": 0.2848605577689243, "obj2": 0.5881222610665788}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.6533864541832669, "obj2": 0.25768351085436947}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6390970073914866}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8406374501992032, "obj2": 0.11222717870242599}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + Max( FirstVNF_Mem,Max( ACS,ARS ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) ) * Min( MUR ,MUM ) ) ) )", "obj1": 0.2868525896414343, "obj2": 0.582216003469439}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( ( ( MUR / DS ) / DS ) / MUM ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6672788939134215}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.5796812749003984, "obj2": 0.30902355356318023}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( DS * ( Min( RRSe ,RCSe ) / ( CS / DS ) ) ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.9302788844621513, "obj2": 0.05056514719389612}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) ) ) / MUR ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8286852589641435, "obj2": 0.11420443143013946}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / ( FirstVNF_Mem - Max( ACS,DDR ) ) ),DDR ) ) / Min( ( ACS + ( RRS / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe / DS ) ) / Min( MUM ,( ( Max( RCSe,Min( CS ,Min( RCSe ,MUR ) ) ) * Max( ( RMSe / MUC ),Max( MUM,( ( RCSe * RRSe ) / RMSe ) ) ) ) / ( ( RMSe / ( ( MLU - ( MLU + MUC ) ) + RMSe ) ) - CS ) ) ) )", "obj1": 0.8645418326693227, "obj2": 0.09757835406458304}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.21804230416622403}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.26294820717131473, "obj2": 0.6057700021376349}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5091821764354706}, {"determining": "( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) )", "choosing": "Max( ( ( MLU + MLU ) / ( MUM * CS ) ),( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( ( FirstVNF_Mem_Server / BR ) - ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Const + BR ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( RRS / PN ) - ARS ) ) + ACS ) )", "choosing": "( ( MUM - RMSe ) - ( Min( ( RRSe + ( ( MUR - MUC ) / ( ( CS - DS ) + ( MUR * RRSe ) ) ) ) ,( ( ( MLU + MUC ) - CS ) + RMSe ) ) + ( DS / ( RMSe * RMSe ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.01943723822757529}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( ( ( MUR / DS ) / DS ) / MUM ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6672788939134215}, {"determining": "( Max( CRS,( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) )", "obj1": 0.6235059760956175, "obj2": 0.2768329106824048}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( Min( RRSe ,RRSe ) / MUM )", "obj1": 0.32669322709163345, "obj2": 0.5436802916506467}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.6524614961448068}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.2845561628772302}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( DS / MUC ) / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.02939490169973072}, {"determining": "( ( ( Max( ( CRS * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.6852589641434262, "obj2": 0.22653602711142795}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( Max( BR,FirstVNF_Mem_Server ) / FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( MRS - FirstVNF_RAM_Server ) - ( ACS - ARS ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / CS )", "obj1": 0.5856573705179283, "obj2": 0.30847918666532215}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( ( Max( DDR,( ( ( BR - AMS ) + Min( ( FirstVNF_RAM - CRS ) ,ARS ) ) - ARS ) ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) )", "choosing": "( MUM / Min( ( MLU / ( DS / CS ) ) ,MUR ) )", "obj1": 0.31274900398406374, "obj2": 0.5495116159056183}, {"determining": "( Min( ( MDR * ( FirstVNF_Mem + FirstVNF_Mem ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - Min( ARS ,RRS ) ) ) - ACS ) ) ) / MDR ) )", "choosing": "( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.1852589641434263, "obj2": 0.7052666317430133}], "13": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_RAM / ( ( DDR + ( FirstVNF_CPU + CRS ) ) - ( RRS - AMS ) ) ) - Max( PN,ARS ) )", "choosing": "( ( DS + DS ) / ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) )", "choosing": "( ( ( MUR / DS ) / DS ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.9103585657370518, "obj2": 0.045233102695727896}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.24122818291566053}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03182203756282747}, {"determining": "Max( ( ( Max( BR,Max( ( ARS / Max( Max( CRS,MRS ),( MRS / AMS ) ) ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - CS ) ) ) )", "obj1": 0.9043824701195219, "obj2": 0.06506045561861513}, {"determining": "( ( FirstVNF_RAM / ( PN * ( MDR / RRS ) ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),Max( RRSe,Min( Max( ( RRSe / MUR ),MUM ) ,( RRSe * MUR ) ) ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe * ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.4342629482071713, "obj2": 0.44848343645559685}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( ( Min( MRS ,FirstVNF_CPU ) * ARS ) - FirstVNF_Mem_Server ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( Min( RCSe ,RMSe ) / Min( ( MUR - MUC ) ,Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7171314741035857, "obj2": 0.20100840095008254}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( PN / RRS ) )", "choosing": "( ( ( ( ( DS - MUM ) - ( Max( RCSe,Max( MUM,RMSe ) ) * MUC ) ) - RRSe ) - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21442079602177064}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,( Min( MRS ,Const ) / MRS ) ) / ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),RMSe ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( RRSe / RMSe ),( MUM * MUM ) ) ) ,( MUR * ( RMSe + CS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.3548063551448515}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( BR + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.6533864541832669, "obj2": 0.25768351085436947}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "( ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) ) * Max( CRS,MRS ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) ,( MUR / ( MLU + MUR ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( Max( ( FirstVNF_CPU - ( ( RRS / BR ) / BR ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( Max( DS,DS ) - ( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * MLU ) ) / Min( MUC ,RCSe ) ) ) * Max( CS,RCSe ) ) )", "obj1": 0.7330677290836654, "obj2": 0.18926098078074735}, {"determining": "( ( DDR + DDR ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - CS ) / ( RRSe - Min( MUR ,MUM ) ) )", "obj1": 0.37649402390438247, "obj2": 0.5008060379406376}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / MUR ) )", "obj1": 0.8027888446215139, "obj2": 0.13054784361096688}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( BR * ACS ) * ( ( ( FirstVNF_RAM_Server * ACS ) * FirstVNF_CPU ) + ARS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( ( MRS / AMS ),Min( ( FirstVNF_RAM + Min( FirstVNF_CPU_Server ,Min( ( ARS + DDR ) ,FirstVNF_CPU_Server ) ) ) ,PN ) ) * ( ACS - ARS ) )", "choosing": "Max( ( MLU / Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + CS ) ) ,MUR ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6416189365130718}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( RMSe / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( MUR,MUR ) ) ) ) ) ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6766800190453268}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( ( ( ( ( Const - RRS ) * FirstVNF_CPU_Server ) * Max( PN,( PN + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RMSe + ( ( MLU + ( MUM / Min( MLU ,( MUR - ( MUR / RRSe ) ) ) ) ) + MUM ) ) / ( ( MUM - DS ) + MUM ) )", "obj1": 0.4641434262948207, "obj2": 0.4164436365129701}, {"determining": "( Max( CRS,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( ( PN * FirstVNF_RAM_Server ) + MDR ) ,( MRS - Const ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( CS - ( RMSe + ( MUR * MUM ) ) ) - ( ( RMSe / RRSe ) - MUM ) )", "obj1": 0.48406374501992033, "obj2": 0.40461983234223864}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS ) ) / MUR ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8326693227091634, "obj2": 0.11128399123174641}, {"determining": "( ( FirstVNF_CPU * MDR ) * ( Max( ( ( Min( ( PN / RRS ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / PN ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) - Max( CS,RCSe ) ) / ( CS / Max( RRSe,RMSe ) ) )", "obj1": 0.5956175298804781, "obj2": 0.29375101275109594}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( FirstVNF_RAM / ( FirstVNF_CPU_Server - MRS ) ) ),( MRS / AMS ) ) * ( ARS - ACS ) )", "choosing": "( ( ( MUM - ( MUC - MUR ) ) + MUM ) / Min( MUM ,( RMSe / ( CS - ( DS * RCSe ) ) ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5436770806147773}, {"determining": "( Max( ( ACS + ( ( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( ( FirstVNF_RAM / Min( PN ,DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.17330677290836655, "obj2": 0.7217988681145422}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) / ( CS / DS ) ) * DS ) / ( ( ( MLU / MUR ) + DS ) + RMSe ) )", "obj1": 0.4820717131474104, "obj2": 0.4117986639796142}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( ( ( CRS + ACS ) / RRS ) * ( ACS - ARS ) ) * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( RCSe + CS ) / CS )", "obj1": 0.5298804780876494, "obj2": 0.36702509255334753}, {"determining": "( ( FirstVNF_RAM * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( BR,ARS ) ) ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / MUM ) / ( ( RCSe + ( Min( Max( RMSe,RMSe ) ,DS ) / RCSe ) ) * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,( ( Min( MRS ,ARS ) + ( RRS - AMS ) ) - ARS ) ) / FirstVNF_RAM ) / MDR ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.26294820717131473, "obj2": 0.6057700021376349}, {"determining": "( Max( CRS,( BR / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( ( RRSe + ( ( ( MUR * RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) - DS ) )", "obj1": 0.6235059760956175, "obj2": 0.2768329106824048}, {"determining": "( ( ( ( ( Min( Min( Max( FirstVNF_CPU,ACS ) ,Const ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( BR + ARS ) ) ) ) * ( ( BR - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR * ( ( RRSe + Min( MUR ,Max( Max( RMSe,( CS + RCSe ) ),DS ) ) ) + DS ) ) / CS )", "obj1": 0.5179282868525896, "obj2": 0.3832647967258348}, {"determining": "( ( ( Max( ( CRS * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.6852589641434262, "obj2": 0.22653602711142795}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( ARS + MRS ) * AMS ) )", "choosing": "( Max( MLU,CS ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( RCSe,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.45617529880478086, "obj2": 0.4202270343018329}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( PN + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ,Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( ARS - MRS ) + ( ( BR + FirstVNF_RAM_Server ) - CRS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,( ( MUR - MUC ) + ( ( RCSe - Max( ( MUM - MUM ),( DS + Max( MUM,MUR ) ) ) ) - ( DS - Max( ( RMSe * Min( CS ,MLU ) ),Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.6334661354581673, "obj2": 0.2723933455232532}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( BR + RRS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( ( MUR - MUC ) / Min( MLU ,Min( MLU ,MUM ) ) ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / MUR ) )", "obj1": 0.7470119521912351, "obj2": 0.177878844517346}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7074386272427583}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.5, "obj2": 0.39653153146144715}, {"determining": "( ( ACS - ARS ) * Max( ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( ( RRS / FirstVNF_CPU ) / BR ) ),( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM * CS ) - Min( ( ( Max( MUC,( RMSe * MUC ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5199203187250996, "obj2": 0.37159976032056946}, {"determining": "( Max( ( ( Max( BR,Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) + ( ( ( PN * FirstVNF_RAM ) - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Min( MLU ,MUM ) * ( Min( RRSe ,RCSe ) / ( CS / DS ) ) ) / ( ( CS - DS ) + RMSe ) )", "obj1": 0.9621513944223108, "obj2": 0.02317075449561827}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5737051792828686, "obj2": 0.3177028062862681}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( ACS - ARS ) * ( Const + CRS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( RRSe / CS ) ) ,Min( DS ,Max( RCSe,( MUM - MUR ) ) ) ) ) - ( ( RCSe - MUC ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / ( ( Max( ( CS * ( Max( RMSe,CS ) / CS ) ),MUC ) * MUC ) - ( Min( CS ,MLU ) * ( ( Max( Max( RMSe,CS ),MUM ) + ( RCSe + RCSe ) ) / MLU ) ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.19140120654713264}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) * ( ACS - ARS ) )", "choosing": "( ( DS - RMSe ) * ( RMSe - RCSe ) )", "obj1": 0.7549800796812749, "obj2": 0.16894821199966936}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( Max( DS,DS ) + RMSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 0.6155378486055777, "obj2": 0.2845561628772302}, {"determining": "( ( ( Max( ( CRS * MRS ),( MRS / AMS ) ) * ( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - RRS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( BR / Max( DDR,( ( Min( MRS ,CRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MLU ) ) / ( ( MUR + Max( ( CS - ( ( MUC - RRSe ) * ( RCSe * DS ) ) ),Min( DS ,MUC ) ) ) / ( Min( RMSe ,RCSe ) - ( RMSe * ( ( ( CS / RRSe ) * DS ) + ( RCSe * ( MUC * MUC ) ) ) ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.16135458167330677, "obj2": 0.7308437795871936}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6390970073914866}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( ( PN * FirstVNF_RAM ) - Max( ( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) / ACS ),DDR ) ) - PN ) )", "choosing": "Max( Max( MUC,MUM ),( ( ( DS / MUC ) / ( ( ( RMSe / ( MUM - DS ) ) / RMSe ) - CS ) ) * Min( MLU ,Max( MUC,RMSe ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.028458353219331805}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5617529880478087, "obj2": 0.3294921487715313}, {"determining": "( Max( ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,Const ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5438247011952191, "obj2": 0.33600791148401415}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / PN ) ) ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) + ( CRS * RRS ) ) )", "choosing": "( ( MUM - MLU ) - ( Min( Min( RRSe ,MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6838405448736786}, {"determining": "( Max( BR,BR ) * ( ACS - Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * ( ARS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5353170446172677}, {"determining": "( Max( Max( CRS,( FirstVNF_Mem_Server - ( BR + ARS ) ) ),( Const + MRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( MUM ,Max( ( ( RCSe / MLU ) * Min( MUM ,DS ) ),Max( Min( ( MUR / MUM ) ,MUR ),( CS * MUM ) ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Max( ( Max( ( DDR / ( ( MDR - Const ) - Const ) ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,Const ) ) * ( ACS * ARS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.520721969962294}, {"determining": "( Min( ( MDR * ( FirstVNF_Mem + FirstVNF_Mem ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - Min( ARS ,RRS ) ) ) - ACS ) ) ) / MDR ) )", "choosing": "( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.1852589641434263, "obj2": 0.7052666317430133}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5079138904504645}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) )", "obj1": 0.5677290836653387, "obj2": 0.3246924960261856}, {"determining": "( ( ( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( CS / Max( ( ( MUC + DS ) - CS ),( MUC - ( CS - MLU ) ) ) ) - DS ) * ( MUM * ( ( ( Min( MLU ,MUC ) / Min( RCSe ,MUR ) ) * RMSe ) * RRSe ) ) ) ,MUM ) * ( ( MUR - MUC ) + ( MUC + ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5538526352424306}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( FirstVNF_RAM / Min( PN ,DDR ) ) ) ) ) * ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( ( ( MUR / DS ) / DS ) / MUM ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6672788939134215}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( AMS / Max( FirstVNF_RAM_Server,DDR ) ) ,MDR ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) * FirstVNF_RAM ) + ( Max( FirstVNF_Mem,( MDR + PN ) ) - ( ( BR * Max( ( PN / RRS ),ARS ) ) + ACS ) ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( CS / DS ) ) ) - ( ( RRSe / MLU ) * MLU ) ) / Min( MUC ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.9780876494023905, "obj2": 0.015374864352957306}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Const - Min( CRS ,AMS ) ) )", "choosing": "Max( ( ( ( CS / ( RCSe - ( MUM + Max( DS,RRSe ) ) ) ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.6916104776913956}, {"determining": "( ( Min( Min( ( Const - ( BR / ( Const - FirstVNF_RAM_Server ) ) ) ,ACS ) ,ARS ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MLU ),( ( MUC + ( RCSe * ( RRSe - MUC ) ) ) + ( CS + DS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.003803429685037656}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + Max( FirstVNF_Mem,Max( ACS,ARS ) ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( MLU + ( CS - RRSe ) ) / ( MLU + DS ) ) * Min( MUR ,MUM ) ) ) )", "obj1": 0.2868525896414343, "obj2": 0.582216003469439}, {"determining": "( Max( ( ( Min( Min( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * ACS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( RMSe - RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( MRS ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( Max( ( MUM * MUM ),( RRSe / RMSe ) ) / MUM )", "obj1": 0.2848605577689243, "obj2": 0.5881222610665788}, {"determining": "( ( ACS / ARS ) * ( FirstVNF_RAM_Server * AMS ) )", "choosing": "Max( ( ( ( MUR / DS ) + ( ( ( MUC * ( MUM / ( RMSe * DS ) ) ) + Min( Max( ( MUM + RCSe ),( MUR + MLU ) ) ,( MUC / ( RCSe + MLU ) ) ) ) - Max( RRSe,MUR ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6594845196026042}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( ( ( CS + DS ) * RCSe ) * RRSe ) * Min( MLU ,( MUC - ( RCSe / RMSe ) ) ) ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5326847489801544}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 0.7788844621513944, "obj2": 0.15804493637143602}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * PN ) + ( Min( PN ,MRS ) * CRS ) )", "choosing": "( ( MLU / CS ) / ( MUM * ( CS / RMSe ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( Max( ( ( Min( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( MUC,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.5139460295468327}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.12346133688198332}, {"determining": "Max( ( ( ( BR * Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - Max( DS,Max( DS,CS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.15093625390445417}, {"determining": "( ( FirstVNF_RAM / ( Max( ( AMS + ( FirstVNF_Mem - BR ) ),RRS ) + DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUM / ( ( CS / RMSe ) * MUC ) ) / MUM )", "obj1": 0.14143426294820718, "obj2": 0.7508406632128592}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.6852589641434262, "obj2": 0.22653602711142795}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.2845561628772302}, {"determining": "Max( Min( MRS ,Min( ( ( Min( ARS ,( Min( DDR ,ACS ) / PN ) ) - PN ) / BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_Mem_Server + CRS ) / ( MRS * BR ) ) - Max( FirstVNF_CPU,( ( BR + DDR ) / Max( ( DDR + ( CRS * CRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( RCSe + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( ( RCSe / RMSe ) - MUC ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / ( ( MUC + CS ) * ( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.21804230416622403}, {"determining": "( ( DDR / FirstVNF_Mem_Server ) - ( Min( RRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( DS - RRSe ) )", "obj1": 0.8705179282868526, "obj2": 0.06665098128406863}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6390970073914866}, {"determining": "( Max( CRS,Max( ( ( Max( BR,FirstVNF_Mem_Server ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / RMSe ) - CS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.12346133688198332}], "14": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - BR ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( ( DDR + ( FirstVNF_CPU + CRS ) ) - ( RRS - AMS ) ) ) - Max( PN,ARS ) )", "choosing": "( ( DS + DS ) / ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) )", "choosing": "( ( ( MUR / DS ) / DS ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( MRS / BR ) * Min( ( ( FirstVNF_RAM - Const ) * AMS ) ,ACS ) )", "choosing": "( ( Max( DS,DS ) - Max( RCSe,Max( CS,( MLU + ( MUM - MLU ) ) ) ) ) * Max( CS,RRSe ) )", "obj1": 0.5179282868525896, "obj2": 0.3424565058679567}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,Max( DS,CS ) ) ) * DS ) ) ,( CS + DS ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6390934394896747}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * CS ) - Min( ( ( Max( MUC,( CS * MUR ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5159362549800797, "obj2": 0.37567527261849526}, {"determining": "( Max( CRS,Max( PN,FirstVNF_Mem_Server ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) - MLU ) / Min( MLU ,DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( RCSe + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( ( RCSe / RMSe ) - MUC ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / ( ( MUC + CS ) * ( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( ( FirstVNF_RAM / ( PN * ( MDR / RRS ) ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),Max( RRSe,Min( Max( ( RRSe / MUR ),MUM ) ,( RRSe * MUR ) ) ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe * ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( PN / RRS ) )", "choosing": "( ( ( ( ( DS - MUM ) - ( Max( RCSe,Max( MUM,RMSe ) ) * MUC ) ) - RRSe ) - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4478778049932565}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( DDR - PN ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,BR ) - DDR ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.3665338645418327, "obj2": 0.4995097407358509}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - Min( AMS ,CRS ) )", "choosing": "( ( RMSe - ( RRSe * Max( ( Max( MUR,( CS + MUM ) ) - Max( MUM,MUM ) ),( ( MUR + CS ) + Max( MLU,RCSe ) ) ) ) ) / ( ( MUM - DS ) + MUM ) )", "obj1": 0.9382470119521913, "obj2": 0.04060176790271095}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "( ( ( ( ( ( CS * ( ( MUR * RRSe ) + CS ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.4721115537848606, "obj2": 0.40127912403104316}, {"determining": "( ( Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.5936254980079682, "obj2": 0.3056415554408814}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MLU / Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + CS ) ) ,MUR ) ) / RCSe ) / DS )", "obj1": 0.6434262948207171, "obj2": 0.24638691665442783}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.5851493719885346}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( Max( ( Const + ( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,DS ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.35258964143426297, "obj2": 0.5068755809322901}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS ) ) / ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8326693227091634, "obj2": 0.11112231641404899}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "( ( ( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( CS / Max( ( ( MUC + DS ) - CS ),( MUC - ( CS - MLU ) ) ) ) - DS ) * ( MUM * ( ( ( Min( MLU ,MUC ) / Min( RCSe ,MUR ) ) * RMSe ) * RRSe ) ) ) ,MUM ) * ( ( MUR - MUC ) + ( MUC + ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5538526352424306}, {"determining": "( Max( CRS,( ( ( MDR / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * Max( Min( Const ,RRS ),RRS ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + Min( RCSe ,DS ) ) - ( ( RMSe + Max( ( ( MUR + ( RRSe - MUM ) ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.6792828685258964, "obj2": 0.22894497750313283}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( Max( BR,BR ) * ( ( ( ( Const / RRS ) + MDR ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( MDR - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( DS / ( Max( RRSe,MUR ) / RCSe ) )", "obj1": 0.21314741035856574, "obj2": 0.6706314002325421}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( ( ( ( Const - RRS ) * FirstVNF_CPU_Server ) * Max( PN,( PN + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RMSe + ( ( MLU + ( MUM / Min( MLU ,( MUR - ( MUR / RRSe ) ) ) ) ) + MUM ) ) / ( ( MUM - DS ) + MUM ) )", "obj1": 0.4641434262948207, "obj2": 0.4164436365129701}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + ( Max( DS,DS ) - RCSe ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.20538034640346353}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( Max( CRS,MRS ) * ( ( FirstVNF_CPU * BR ) * ( ACS - ARS ) ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( ( ( MUC / CS ) + CS ) + RCSe ) )", "obj1": 0.4960159362549801, "obj2": 0.40068947928409865}, {"determining": "( Max( ( ACS + ( ( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( ( FirstVNF_RAM / ( Max( ( AMS + ( FirstVNF_Mem - BR ) ),RRS ) + DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUM / ( ( CS / RMSe ) * MUC ) ) / MUM )", "obj1": 0.14143426294820718, "obj2": 0.7508406632128592}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.24122818291566053}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9741035856573705, "obj2": 0.010030037532422875}, {"determining": "( Max( ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,Const ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5438247011952191, "obj2": 0.33600791148401415}, {"determining": "( Max( CRS,Max( Max( ACS,( ACS + ( RRS / ( MDR + FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( ARS - ARS ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RMSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( ( Max( CS,MUR ) / RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7168793929513826}, {"determining": "( ( DDR / FirstVNF_Mem_Server ) - ( Min( RRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( DS - RRSe ) )", "obj1": 0.8705179282868526, "obj2": 0.06665098128406863}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( Max( CRS,Min( MDR ,( MDR + RRS ) ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( RMSe * RCSe ),( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3466135458167331, "obj2": 0.521179779582132}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * PN ) + ( Min( PN ,MRS ) * CRS ) )", "choosing": "( ( MLU / CS ) / ( MUM * ( CS / RMSe ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( ( Min( MRS ,FirstVNF_CPU ) * ARS ) - FirstVNF_Mem_Server ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( Min( RCSe ,RMSe ) / Min( ( MUR - MUC ) ,Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7171314741035857, "obj2": 0.20100840095008254}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( ARS + MRS ) * AMS ) )", "choosing": "( Max( MLU,CS ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( RCSe,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.45617529880478086, "obj2": 0.4202270343018329}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( Max( Max( CRS,( FirstVNF_Mem_Server - ( BR + ARS ) ) ),( Const + MRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( MUM ,Max( ( ( RCSe / MLU ) * Min( MUM ,DS ) ),Max( Min( ( MUR / MUM ) ,MUR ),( CS * MUM ) ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Const - Min( CRS ,AMS ) ) )", "choosing": "Max( ( ( ( CS / ( RCSe - ( MUM + Max( DS,RRSe ) ) ) ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.6916104776913956}, {"determining": "( ( ACS - ARS ) * ( Const + CRS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( RRSe / CS ) ) ,Min( DS ,Max( RCSe,( MUM - MUR ) ) ) ) ) - ( ( RCSe - MUC ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / ( ( Max( ( CS * ( Max( RMSe,CS ) / CS ) ),MUC ) * MUC ) - ( Min( CS ,MLU ) * ( ( Max( Max( RMSe,CS ),MUM ) + ( RCSe + RCSe ) ) / MLU ) ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.19140120654713264}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( RMSe / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( MUR,MUR ) ) ) ) ) ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6766800190453268}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5737051792828686, "obj2": 0.3177028062862681}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( RCSe + CS ) / CS ) )", "obj1": 0.22111553784860558, "obj2": 0.6542732173440219}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( ( ( Max( ( CRS * MRS ),( MRS / AMS ) ) * ( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - RRS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( BR / Max( DDR,( ( Min( MRS ,CRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MLU ) ) / ( ( MUR + Max( ( CS - ( ( MUC - RRSe ) * ( RCSe * DS ) ) ),Min( DS ,MUC ) ) ) / ( Min( RMSe ,RCSe ) - ( RMSe * ( ( ( CS / RRSe ) * DS ) + ( RCSe * ( MUC * MUC ) ) ) ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.16135458167330677, "obj2": 0.7308437795871936}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( PN + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ,Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( ARS - MRS ) + ( ( BR + FirstVNF_RAM_Server ) - CRS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,( ( MUR - MUC ) + ( ( RCSe - Max( ( MUM - MUM ),( DS + Max( MUM,MUR ) ) ) ) - ( DS - Max( ( RMSe * Min( CS ,MLU ) ),Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.6334661354581673, "obj2": 0.2723933455232532}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / PN ) ) ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) + ( CRS * RRS ) ) )", "choosing": "( ( MUM - MLU ) - ( Min( Min( RRSe ,MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6838405448736786}, {"determining": "( ( ( Max( ( CRS * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( Max( DS,DS ) - ( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * MLU ) ) / Min( MUC ,RCSe ) ) ) * Max( CS,RCSe ) ) )", "obj1": 0.7390438247011952, "obj2": 0.1878492809986972}, {"determining": "( ( FirstVNF_RAM / ( Min( ( FirstVNF_RAM_Server / ACS ) ,PN ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) ) - ( Const - RRS ) )", "choosing": "( ( Min( ( MLU + ( ( ( MUM / DS ) / ( MUC + MUR ) ) / ( Max( Max( CS,DS ),MLU ) - ( ( DS * RCSe ) - Min( MUM ,RCSe ) ) ) ) ) ,( ( MUR / DS ) / MUM ) ) / DS ) / MUM )", "obj1": 0.9661354581673307, "obj2": 0.022893267493252843}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) * ( ACS - ARS ) )", "choosing": "( ( DS - RMSe ) * ( RMSe - RCSe ) )", "obj1": 0.7549800796812749, "obj2": 0.16894821199966936}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / ACS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6566586377726062}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * ( ARS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5353170446172677}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) ,( MUR / ( MLU + MUR ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 0.7788844621513944, "obj2": 0.15804493637143602}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( Min( MUR ,( CS + DS ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) - ( ( MUM - MUM ) - ( ( RCSe * Min( MUM ,RMSe ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6975793340357771}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( ( ( MUR / DS ) / DS ),DS ) * RCSe ) * ( RMSe - RCSe ) )", "obj1": 0.5, "obj2": 0.39395041040282125}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5438247011952191, "obj2": 0.33600791148401415}, {"determining": "( ( FirstVNF_RAM * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( BR,ARS ) ) ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / MUM ) / ( ( RCSe + ( Min( Max( RMSe,RMSe ) ,DS ) / RCSe ) ) * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "Max( Min( MRS ,Min( ( ( Min( ARS ,( Min( DDR ,ACS ) / PN ) ) - PN ) / BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_Mem_Server + CRS ) / ( MRS * BR ) ) - Max( FirstVNF_CPU,( ( BR + DDR ) / Max( ( DDR + ( CRS * CRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( RCSe + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( ( RCSe / RMSe ) - MUC ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / ( ( MUC + CS ) * ( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( ( Min( Min( ( Const - ( BR / ( Const - FirstVNF_RAM_Server ) ) ) ,ACS ) ,ARS ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MLU ),( ( MUC + ( RCSe * ( RRSe - MUC ) ) ) + ( CS + DS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.003803429685037656}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5617529880478087, "obj2": 0.3294921487715313}, {"determining": "( Max( BR,BR ) * ( ACS - Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.21804230416622403}, {"determining": "( Max( BR,MRS ) * ( ACS - ARS ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( ( ACS + ( FirstVNF_Mem / ( ( PN - AMS ) - Max( MRS,( FirstVNF_CPU_Server - ARS ) ) ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / ( MUR * MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24122818291566053}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7074386272427583}, {"determining": "( Max( ( MRS / AMS ),Min( ( FirstVNF_RAM + Min( FirstVNF_CPU_Server ,Min( ( ARS + DDR ) ,FirstVNF_CPU_Server ) ) ) ,PN ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5436770806147773}, {"determining": "( ( Max( ( PN / MRS ),( ( RRS * FirstVNF_Mem ) + ( Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) / RRS ) ,FirstVNF_RAM ) / PN ) ) ) * ( ( BR + FirstVNF_Mem_Server ) - ACS ) ) * Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( Max( DS,DS ),RCSe ) ,Max( CS,Max( MUC,MLU ) ) ) / Min( ( Max( ( MUM / MUM ),( RRSe / RMSe ) ) * ( CS / DS ) ) ,CS ) )", "obj1": 0.5956175298804781, "obj2": 0.29375101275109594}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( Max( DS,DS ) + RMSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 0.6155378486055777, "obj2": 0.2845561628772302}, {"determining": "( BR * ( ( ACS * ( DDR - Min( ( FirstVNF_Mem + ( BR + FirstVNF_RAM_Server ) ) ,( ( MDR * FirstVNF_RAM ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - ARS ) )", "choosing": "( ( ( DS / ( ( MUM + RRSe ) - Max( CS,Max( RMSe,Min( CS ,Min( CS ,MLU ) ) ) ) ) ) - RCSe ) / DS )", "obj1": 0.6852589641434262, "obj2": 0.2257623683815543}, {"determining": "( ( ( Max( ( CRS * MRS ),( MRS / AMS ) ) * ( ( FirstVNF_RAM / Min( PN ,DDR ) ) - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.16135458167330677, "obj2": 0.7308437795871936}, {"determining": "Max( ( ( ( BR * Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( FirstVNF_RAM - ARS ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5737051792828686, "obj2": 0.3177028062862681}, {"determining": "( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( FirstVNF_RAM / ( FirstVNF_CPU_Server - MRS ) ) ),( MRS / AMS ) ) * ( ARS - ACS ) )", "choosing": "( ( ( MUM - ( MUC - MUR ) ) + MUM ) / Min( MUM ,( RMSe / ( CS - ( DS * RCSe ) ) ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5436770806147773}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.8007968127490039, "obj2": 0.13804426258030084}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.603585657370518, "obj2": 0.28752698952996353}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21442079602177064}, {"determining": "( Max( ( Max( ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,Const ) ) - ( ( RRS / BR ) / BR ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( Max( DS,DS ) - ( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * MLU ) ) / Min( MUC ,RCSe ) ) ) * Max( CS,( DS - RMSe ) ) ) )", "obj1": 0.749003984063745, "obj2": 0.1735405567618706}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7394198042094721}, {"determining": "( Max( CRS,Max( ( ( Max( BR,MRS ) / MRS ) / Max( ( DDR + FirstVNF_RAM ),( FirstVNF_RAM - ARS ) ) ),( RRS * MDR ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe / ( ( Min( MUR ,MUC ) / Min( DS ,Min( ( RCSe * RMSe ) ,RMSe ) ) ) - CS ) ) ) / ( MLU + ( CS - RRSe ) ) )", "obj1": 0.8067729083665338, "obj2": 0.13054589583460882}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - Max( DS,Max( DS,CS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.15093625390445417}, {"determining": "( ( BR * ACS ) * ( ( ( FirstVNF_RAM_Server * ACS ) * FirstVNF_CPU ) + ARS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21442079602177064}], "15": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_RAM / ( Max( ( AMS + ( FirstVNF_Mem - BR ) ),RRS ) + DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUM / ( ( CS / RMSe ) * MUC ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - BR ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * DS ) - CS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( MRS / BR ) * Min( ( ( FirstVNF_RAM - Const ) * AMS ) ,ACS ) )", "choosing": "( ( Max( DS,DS ) - Max( RCSe,Max( CS,( MLU + ( MUM - MLU ) ) ) ) ) * Max( CS,RRSe ) )", "obj1": 0.5179282868525896, "obj2": 0.3424565058679567}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( PN / RRS ) )", "choosing": "( ( ( ( ( DS - MUM ) - ( Max( RCSe,Max( MUM,RMSe ) ) * MUC ) ) - RRSe ) - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.9561752988047809, "obj2": 0.02002663719540066}, {"determining": "( ( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),MLU )", "obj1": 0.898406374501992, "obj2": 0.054418373200160554}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( ACS - ARS ),( PN - FirstVNF_RAM ) ) ,MDR ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * DS ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * CS ) - Min( ( ( Max( MUC,( CS * MUR ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5159362549800797, "obj2": 0.37567527261849526}, {"determining": "( Max( MRS,BR ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,Max( DS,CS ) ) ) * DS ) ) ,( CS + DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6694828442517582}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "( ( ( ( ( ( CS * ( ( MUR * RRSe ) + CS ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.4721115537848606, "obj2": 0.40127912403104316}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MLU / Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + CS ) ) ,MUR ) ) / RCSe ) / DS )", "obj1": 0.6434262948207171, "obj2": 0.24638691665442783}, {"determining": "( Max( CRS,Max( Max( ACS,( ACS + ( RRS / ( MDR + FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( ARS - ARS ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RMSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( ( Max( CS,MUR ) / RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7168793929513826}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( PN + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ,Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( ARS - MRS ) + ( ( BR + FirstVNF_RAM_Server ) - CRS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,( ( MUR - MUC ) + ( ( RCSe - Max( ( MUM - MUM ),( DS + Max( MUM,MUR ) ) ) ) - ( DS - Max( ( RMSe * Min( CS ,MLU ) ),Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.6334661354581673, "obj2": 0.2723933455232532}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( Max( DS,DS ) + RMSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 0.6155378486055777, "obj2": 0.2845561628772302}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( Max( ( Const + ( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,DS ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.35258964143426297, "obj2": 0.5068755809322901}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe + ( ( RCSe + MLU ) + MUM ) ) / ( ( MUM - DS ) + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03266639359759789}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * ( ARS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5353170446172677}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Max( CRS,Max( PN,FirstVNF_Mem_Server ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) - MLU ) / Min( MLU ,DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( ( ( ( ( Const - RRS ) * FirstVNF_CPU_Server ) * Max( PN,( PN + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RMSe + ( ( MLU + ( MUM / Min( MLU ,( MUR - ( MUR / RRSe ) ) ) ) ) + MUM ) ) / ( ( MUM - DS ) + MUM ) )", "obj1": 0.4641434262948207, "obj2": 0.4164436365129701}, {"determining": "( ( Max( MDR,FirstVNF_CPU ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) )", "obj1": 0.9262948207171314, "obj2": 0.037937710424356855}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Const - Min( CRS ,AMS ) ) )", "choosing": "Max( ( ( ( CS / ( RCSe - ( MUM + Max( DS,RRSe ) ) ) ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.6916104776913956}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5617529880478087, "obj2": 0.3294921487715313}, {"determining": "Max( Min( MRS ,Min( Min( ( Min( ARS ,MDR ) - PN ) ,BR ) ,( Const + FirstVNF_Mem_Server ) ) ),( ( ( CRS + FirstVNF_Mem_Server ) / ( MRS * BR ) ) - ( ( RRS / BR ) + ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( CS - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7074386272427583}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( DDR - PN ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,BR ) - DDR ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.3665338645418327, "obj2": 0.4995097407358509}, {"determining": "( Max( CRS,( Max( FirstVNF_RAM,Max( DDR,( ( ( BR - FirstVNF_Mem_Server ) + Min( MRS ,ARS ) ) - ARS ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( CS / Min( MLU ,MUC ) ) )", "obj1": 0.7330677290836654, "obj2": 0.17453136835084207}, {"determining": "( ( FirstVNF_RAM / ( PN * ( MDR / RRS ) ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),Max( RRSe,Min( Max( ( RRSe / MUR ),MUM ) ,( RRSe * MUR ) ) ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe * ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,Max( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ),Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7474271347042583}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.24122818291566053}, {"determining": "( ( Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.5936254980079682, "obj2": 0.3056415554408814}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( CRS * CRS ) )", "choosing": "( ( ( MLU / Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + CS ) ) ,MUR ) ) / RCSe ) / ( MUC + CS ) )", "obj1": 0.2749003984063745, "obj2": 0.5999077768054835}, {"determining": "( Max( CRS,( ( ( Max( BR,MRS ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ) - Min( AMS ,MRS ) ) ) * ( ARS - ACS ) )", "choosing": "( Min( RMSe ,RRSe ) / ( MLU + ( RMSe / ( ( ( ( RRSe - ( MUC + MLU ) ) + ( MUM * CS ) ) / Min( MLU ,RCSe ) ) - CS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.1232005627887218}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9741035856573705, "obj2": 0.010030037532422875}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( ( Min( MRS ,FirstVNF_CPU ) * ARS ) - FirstVNF_Mem_Server ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( Min( RCSe ,RMSe ) / Min( ( MUR - MUC ) ,Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7171314741035857, "obj2": 0.20100840095008254}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( Max( CRS,MRS ) * ( ( FirstVNF_CPU * BR ) * ( ACS - ARS ) ) )", "choosing": "( ( Max( DS,DS ) * RCSe ) * ( ( ( MUC / CS ) + CS ) + RCSe ) )", "obj1": 0.4960159362549801, "obj2": 0.40068947928409865}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( ARS + MRS ) * AMS ) )", "choosing": "( Max( MLU,CS ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( RCSe,Max( DS,CS ) ) ) * DS ) - CS ) ) ) )", "obj1": 0.45617529880478086, "obj2": 0.4202270343018329}, {"determining": "( ( ( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( CS / Max( ( ( MUC + DS ) - CS ),( MUC - ( CS - MLU ) ) ) ) - DS ) * ( MUM * ( ( ( Min( MLU ,MUC ) / Min( RCSe ,MUR ) ) * RMSe ) * RRSe ) ) ) ,MUM ) * ( ( MUR - MUC ) + ( MUC + ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5538526352424306}, {"determining": "( Max( CRS,Max( ( ( Max( BR,MRS ) / MRS ) / Max( ( DDR + FirstVNF_RAM ),( FirstVNF_RAM - ARS ) ) ),( RRS * MDR ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe / ( ( Min( MUR ,MUC ) / Min( DS ,Min( ( RCSe * RMSe ) ,RMSe ) ) ) - CS ) ) ) / ( MLU + ( CS - RRSe ) ) )", "obj1": 0.8067729083665338, "obj2": 0.13054589583460882}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( Max( BR,CRS ) ,( MRS - Const ) ) ) ) / BR ) )", "choosing": "Max( ( Max( RMSe,( ( RMSe - Max( Max( MUC,Max( MUM,DS ) ),RMSe ) ) - RCSe ) ) - MUM ),( ( RCSe + RRSe ) / CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6311004256467366}, {"determining": "( ( DDR / FirstVNF_Mem_Server ) - ( Min( RRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( DS - RRSe ) )", "obj1": 0.8705179282868526, "obj2": 0.06665098128406863}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8585657370517928, "obj2": 0.07915738970861093}, {"determining": "( Max( ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,Const ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5438247011952191, "obj2": 0.33600791148401415}, {"determining": "( Max( ( Max( ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,Const ) ) - ( ( RRS / BR ) / BR ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( Max( DS,DS ) - ( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * MLU ) ) / Min( MUC ,RCSe ) ) ) * Max( CS,( DS - RMSe ) ) ) )", "obj1": 0.749003984063745, "obj2": 0.1735405567618706}, {"determining": "Max( ( ( ( BR * Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ) ),( ( FirstVNF_RAM + ( FirstVNF_Mem_Server + ( ( RRS + FirstVNF_RAM_Server ) - ( MRS / ( MRS + Const ) ) ) ) ) + ( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUR + RRSe ) - ( ( ( MLU + MUC ) - CS ) + RMSe ) )", "obj1": 0.8466135458167331, "obj2": 0.10519962226476277}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( RMSe / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( MUR,MUR ) ) ) ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6779162139805269}, {"determining": "( Max( BR,BR ) * ( ACS - Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) ,( MUR / ( MLU + MUR ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( Min( MUR ,( CS + DS ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) - ( ( MUM - MUM ) - ( ( RCSe * Min( MUM ,RMSe ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6975793340357771}, {"determining": "( ( ( Max( ( CRS * MRS ),( MRS / AMS ) ) * ( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - RRS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( BR / Max( DDR,( ( Min( MRS ,CRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MLU ) ) / ( ( MUR + Max( ( CS - ( ( MUC - RRSe ) * ( RCSe * DS ) ) ),Min( DS ,MUC ) ) ) / ( Min( RMSe ,RCSe ) - ( RMSe * ( ( ( CS / RRSe ) * DS ) + ( RCSe * ( MUC * MUC ) ) ) ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.16135458167330677, "obj2": 0.7308437795871936}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - Max( CRS,MRS ) ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem / CRS ) )", "choosing": "( Min( DS ,RMSe ) / ( RMSe * ( RMSe / CS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.4394559225562611}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( Max( ( FirstVNF_RAM_Server + ( RRS / FirstVNF_Mem ) ),( Min( ( ARS - ( ( DDR / FirstVNF_CPU ) * ACS ) ) ,AMS ) / AMS ) ) * ( ACS - ACS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * Max( MUM,( DS + CS ) ) ),( ( RRSe - MUC ) / RMSe ) ) ) ,CS ) )", "obj1": 0.5517928286852589, "obj2": 0.3332979082580649}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5717131474103586, "obj2": 0.3191532953435498}, {"determining": "( ( BR * ACS ) * ( ( ( FirstVNF_RAM_Server * ACS ) * FirstVNF_CPU ) + ARS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( ACS - ARS ) * ( Const + CRS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( RRSe / CS ) ) ,Min( DS ,Max( RCSe,( MUM - MUR ) ) ) ) ) - ( ( RCSe - MUC ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / ( ( Max( ( CS * ( Max( RMSe,CS ) / CS ) ),MUC ) * MUC ) - ( Min( CS ,MLU ) * ( ( Max( Max( RMSe,CS ),MUM ) + ( RCSe + RCSe ) ) / MLU ) ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.19140120654713264}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Min( Min( Min( FirstVNF_CPU_Server ,PN ) ,FirstVNF_Mem_Server ) ,ARS ) ) ) * ( ARS - ARS ) )", "choosing": "Max( Min( RMSe ,DS ),( RRSe + Max( ( Max( DS,( RCSe - CS ) ) * RRSe ),Min( MLU ,MUM ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5903194771130612}, {"determining": "( Max( CRS,Min( MDR ,( MDR + RRS ) ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( RMSe * RCSe ),( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3466135458167331, "obj2": 0.521179779582132}, {"determining": "( ( FirstVNF_RAM / ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) ) - ( Const - RRS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + DS ) ) )", "obj1": 0.9322709163346613, "obj2": 0.0363590183235037}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.4243027888446215, "obj2": 0.44524528463401475}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS ) ) / ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8326693227091634, "obj2": 0.11112231641404899}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.8007968127490039, "obj2": 0.13804426258030084}, {"determining": "( ( FirstVNF_RAM * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( BR,ARS ) ) ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / MUM ) / ( ( RCSe + ( Min( Max( RMSe,RMSe ) ,DS ) / RCSe ) ) * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - MRS ) )", "choosing": "( ( Max( ( RMSe - RMSe ),MLU ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,RCSe ) ) ) * ( DS / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.20768581154248286}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - Max( DS,Max( DS,CS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.15093625390445417}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( RMSe * DS ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.24122818291566053}, {"determining": "( ( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) * ( ARS - ARS ) )", "choosing": "( Min( ( MUM - ( DS * RCSe ) ) ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7378371576980405}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,BR ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5737051792828686, "obj2": 0.3177028062862681}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + ( Max( DS,DS ) - RCSe ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.20538034640346353}, {"determining": "( Max( ( ( Min( ( PN - RRS ) ,FirstVNF_RAM ) / ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) * FirstVNF_Mem ) ),Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * ( ARS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( RMSe - RCSe ) * ( Max( ( ( ( MLU / RRSe ) * ( CS / MUM ) ) / RMSe ),( DS * ( ( RCSe - RRSe ) - MUR ) ) ) - MLU ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5478216542751866}, {"determining": "( Max( Max( CRS,Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( CS / RRSe ) ) ,Min( DS ,Max( RCSe,( MUM - MUR ) ) ) ) ) - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / MUR ) )", "obj1": 0.7231075697211156, "obj2": 0.19140120654713264}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR - MUC ) / ( MUR / DS ) )", "obj1": 0.3665338645418327, "obj2": 0.4995097407358509}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( CRS,( ( FirstVNF_Mem + RRS ) * ( FirstVNF_RAM_Server * ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( MUM / Max( DS,CS ) ),DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( ( MUR / RRSe ) - Max( RRSe,RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / RRSe ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.6792828685258964, "obj2": 0.22894497750313283}, {"determining": "( Max( CRS,( ( ( MDR / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * Max( Min( Const ,RRS ),RRS ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + Min( RCSe ,DS ) ) - ( ( RMSe + Max( ( ( MUR + ( RRSe - MUM ) ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.6792828685258964, "obj2": 0.22894497750313283}, {"determining": "( ( Max( ( PN / MRS ),( ( RRS * FirstVNF_Mem ) + ( Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) / RRS ) ,FirstVNF_RAM ) / PN ) ) ) * ( ( BR + FirstVNF_Mem_Server ) - ACS ) ) * Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( Max( DS,DS ),RCSe ) ,Max( CS,Max( MUC,MLU ) ) ) / Min( ( Max( ( MUM / MUM ),( RRSe / RMSe ) ) * ( CS / DS ) ) ,CS ) )", "obj1": 0.5956175298804781, "obj2": 0.29375101275109594}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 0.7788844621513944, "obj2": 0.15804493637143602}, {"determining": "( Max( ( ACS + ( ( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( ( ( Max( ( CRS * MRS ),( MRS / AMS ) ) * ( ( FirstVNF_RAM / Min( PN ,DDR ) ) - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.16135458167330677, "obj2": 0.7308437795871936}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( RCSe + CS ) / CS ) )", "obj1": 0.2350597609561753, "obj2": 0.6368866734943993}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( Max( ( ACS + ( ( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.4342629482071713, "obj2": 0.44047665902525146}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( RCSe + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( ( RCSe / RMSe ) - MUC ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / ( ( MUC + CS ) * ( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.04341282840931141}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.5851493719885346}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.603585657370518, "obj2": 0.28752698952996353}], "16": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_RAM / ( Max( ( AMS + ( FirstVNF_Mem - BR ) ),RRS ) + DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUM / ( ( CS / RMSe ) * MUC ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( Max( ( AMS + ( FirstVNF_Mem - BR ) ),RRS ) + DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUM / ( ( CS / RMSe ) * MUC ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( MRS / BR ) * Min( ( ( FirstVNF_RAM - Const ) * AMS ) ,ACS ) )", "choosing": "( ( Max( DS,DS ) - Max( RCSe,Max( CS,( MLU + ( MUM - MLU ) ) ) ) ) * Max( CS,RRSe ) )", "obj1": 0.5179282868525896, "obj2": 0.3424565058679567}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * CS ) - Min( ( ( Max( MUC,( CS * MUR ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5159362549800797, "obj2": 0.37567527261849526}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( PN / RRS ) )", "choosing": "( ( ( ( ( DS - MUM ) - ( Max( RCSe,Max( MUM,RMSe ) ) * MUC ) ) - RRSe ) - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "( ( ( ( ( ( CS * ( ( MUR * RRSe ) + CS ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.4721115537848606, "obj2": 0.40127912403104316}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( AMS - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( ( MUM - CS ) - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.48406374501992033, "obj2": 0.3853436791083309}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( CS / Min( MLU ,MUC ) ) )", "obj1": 0.9223107569721115, "obj2": 0.034336362350359875}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( Max( ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,Const ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5438247011952191, "obj2": 0.33600791148401415}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( Max( BR,BR ) * ( ACS - Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.398406374501992, "obj2": 0.4761167410240102}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( ( FirstVNF_RAM * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( BR,ARS ) ) ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / MUM ) / ( ( RCSe + ( Min( Max( RMSe,RMSe ) ,DS ) / RCSe ) ) * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4378636875873357}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6952191235059761, "obj2": 0.21326475719966542}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( ( ( ( Const - RRS ) * FirstVNF_CPU_Server ) * Max( PN,( PN + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( RMSe + ( ( MLU + ( MUM / Min( MLU ,( MUR - ( MUR / RRSe ) ) ) ) ) + MUM ) ) / ( ( MUM - DS ) + MUM ) )", "obj1": 0.4641434262948207, "obj2": 0.4164436365129701}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6631513024786023}, {"determining": "( Max( ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Min( BR ,( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,MUC ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5896414342629482, "obj2": 0.30110696972697204}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( DS / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) ) ) / ( MUM * CS ) ),( ( RCSe + CS ) / CS ) )", "obj1": 0.18725099601593626, "obj2": 0.68985633751234}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5617529880478087, "obj2": 0.3294921487715313}, {"determining": "( Max( ( MRS / Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ),FirstVNF_CPU ) ),Min( BR ,Const ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5796812749003984, "obj2": 0.3117649361155731}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( ( ( MUC / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0073213621292115855}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( Max( DS,DS ) + RMSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 0.6155378486055777, "obj2": 0.2845561628772302}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.4243027888446215, "obj2": 0.44524528463401475}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.6852589641434262, "obj2": 0.22644757730316098}, {"determining": "( Max( CRS,Max( Max( ACS,( ACS + ( RRS / ( MDR + FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( ARS - ARS ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RMSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( ( Max( CS,MUR ) / RMSe ) / MUR ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7168793929513826}, {"determining": "( Max( Max( ( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) + Min( RRS ,( PN / Min( DDR ,MRS ) ) ) ) - MDR ),CRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUC ,RCSe ) / Min( DS ,MUR ) ) ,( MUR + ( MUM - CS ) ) ) ,Min( MUM ,MUC ) ) ) ) ,( ( RCSe / RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5929916324810595}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( MLU + MLU ) / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.6235059760956175, "obj2": 0.27468609951903494}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( MRS ,FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MLU / Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) ) / RCSe ) / DS )", "obj1": 0.6434262948207171, "obj2": 0.24638691665442783}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS ) ) / ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8326693227091634, "obj2": 0.11112231641404899}, {"determining": "( Max( CRS,Max( ( ( Max( BR,MRS ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( ( ( BR - FirstVNF_Mem_Server ) + Min( MRS ,ARS ) ) - ARS ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ) - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / Min( MLU ,RCSe ) ) - CS ) ) ) )", "obj1": 0.749003984063745, "obj2": 0.1693633461038226}, {"determining": "( ( ( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( CS / Max( ( ( MUC + DS ) - CS ),( MUC - ( CS - MLU ) ) ) ) - DS ) * ( MUM * ( ( ( Min( MLU ,MUC ) / Min( RCSe ,MUR ) ) * RMSe ) * RRSe ) ) ) ,MUM ) * ( ( MUR - MUC ) + ( MUC + ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5538526352424306}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( Max( BR,CRS ) ,( MRS - Const ) ) ) ) / BR ) )", "choosing": "Max( ( Max( RMSe,( ( RMSe - Max( Max( MUC,Max( MUM,DS ) ),RMSe ) ) - RCSe ) ) - MUM ),( ( RCSe + RRSe ) / CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6311004256467366}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / Min( MLU ,RCSe ) ) - CS ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.028565843385830205}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.603585657370518, "obj2": 0.28752698952996353}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( DDR - PN ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,BR ) - DDR ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.3665338645418327, "obj2": 0.4995097407358509}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016916229274362704}, {"determining": "( ( Max( ( PN / MRS ),( ( RRS * FirstVNF_Mem ) + ( Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) / RRS ) ,FirstVNF_RAM ) / PN ) ) ) * ( ( BR + FirstVNF_Mem_Server ) - ACS ) ) * Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( Max( DS,DS ),RCSe ) ,Max( CS,Max( MUC,MLU ) ) ) / Min( ( Max( ( MUM / MUM ),( RRSe / RMSe ) ) * ( CS / DS ) ) ,CS ) )", "obj1": 0.5956175298804781, "obj2": 0.29375101275109594}, {"determining": "( Max( CRS,FirstVNF_RAM ) * Max( RRS,( PN / CRS ) ) )", "choosing": "Max( ( ( ( MUR / ( ( Max( ( MUC * RMSe ),( RMSe + MUC ) ) * ( Max( MLU,CS ) + MUC ) ) + RRSe ) ) + MLU ) / ( RMSe - CS ) ),( Max( ( RCSe - MUR ),MUM ) / MUC ) )", "obj1": 0.7270916334661355, "obj2": 0.17921517922584107}, {"determining": "( Max( ( ACS + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.28286852589641437, "obj2": 0.5851493719885346}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( PN + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ,Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( ARS - MRS ) + ( ( BR + FirstVNF_RAM_Server ) - CRS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,( ( MUR - MUC ) + ( ( RCSe - Max( ( MUM - MUM ),( DS + Max( MUM,MUR ) ) ) ) - ( DS - Max( ( RMSe * Min( CS ,MLU ) ),Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.6334661354581673, "obj2": 0.2723933455232532}, {"determining": "( Max( ( ( Min( CRS ,ACS ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Min( ( Min( MUC ,DS ) / DS ) ,RCSe ) * RRSe ) + MLU ) / ( MUM * CS ) ),( ( RCSe + CS ) / CS ) )", "obj1": 0.3207171314741036, "obj2": 0.5440529802849196}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * ( ARS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5353170446172677}, {"determining": "Max( ( ( ( BR * Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ) ),( ( FirstVNF_RAM + ( FirstVNF_Mem_Server + ( ( RRS + FirstVNF_RAM_Server ) - ( MRS / ( MRS + Const ) ) ) ) ) + ( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUR + RRSe ) - ( ( ( MLU + MUC ) - CS ) + RMSe ) )", "obj1": 0.8466135458167331, "obj2": 0.10519962226476277}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( ACS - ARS ),( PN - FirstVNF_RAM ) ) ,MDR ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * DS ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( ( PN * FirstVNF_Mem_Server ) * ( ACS + ( ( ( AMS - Const ) - Const ) + ( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( RMSe / ( ( ( RCSe * MUR ) * CS ) + ( ( RCSe * ( MUM / RRSe ) ) / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6387564159488268}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - Max( DS,Max( DS,CS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.15093625390445417}, {"determining": "( ( ARS + ( MRS + FirstVNF_RAM ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( MLU / Min( CS ,MUC ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6361440903616038}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9741035856573705, "obj2": 0.010030037532422875}, {"determining": "( ( DDR / FirstVNF_Mem_Server ) - ( Min( RRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( DS - RRSe ) )", "obj1": 0.8705179282868526, "obj2": 0.06665098128406863}, {"determining": "Max( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM + ( RRS / FirstVNF_Mem ) ) - ( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8605577689243028, "obj2": 0.07831293574675308}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 0.7788844621513944, "obj2": 0.15804493637143602}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.6593625498007968, "obj2": 0.24605999382263308}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_RAM_Server * ( PN / Max( MRS,( Min( MDR ,Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ) ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + Max( ( RCSe - ( RRSe * MUR ) ),( RMSe - ( CS * ( ( ( RRSe + MUC ) + Max( RRSe,MUR ) ) + ( Min( CS ,RMSe ) - ( MLU / MLU ) ) ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( Max( ( FirstVNF_RAM_Server + ( RRS / FirstVNF_Mem ) ),( Min( ( ARS - ( ( DDR / FirstVNF_CPU ) * ACS ) ) ,AMS ) / AMS ) ) * ( ACS - ACS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * Max( MUM,( DS + CS ) ) ),( ( RRSe - MUC ) / RMSe ) ) ) ,CS ) )", "obj1": 0.5517928286852589, "obj2": 0.3332979082580649}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.5717131474103586, "obj2": 0.3191532953435498}, {"determining": "( ( ( ( Const * FirstVNF_CPU ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( RMSe + ( MUC - ( RCSe / RMSe ) ) ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - Max( ( RMSe - ( ( MUM - MUR ) * DS ) ),Min( ( Max( MLU,MUM ) - RMSe ) ,CS ) ) ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5684177871184062}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_Mem_Server ) ) ) ) ) ) * ( ARS - ARS ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / DS ) ) ) ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7361158668577068}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( Min( MUR ,( CS + DS ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) - ( ( MUM - MUM ) - ( ( RCSe * Min( MUM ,RMSe ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6975793340357771}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( ( Min( MRS ,FirstVNF_CPU ) * ARS ) - FirstVNF_Mem_Server ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( Min( RCSe ,RMSe ) / Min( ( MUR - MUC ) ,Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7171314741035857, "obj2": 0.20100840095008254}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Min( ( MDR + PN ) ,DDR ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUC + ( MUM * RCSe ) ) ,( CS + DS ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( Max( CRS,Min( MDR ,( MDR + RRS ) ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( RMSe * RCSe ),( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3466135458167331, "obj2": 0.521179779582132}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( MRS / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) ),CS ) / CS ) )", "obj1": 0.798804780876494, "obj2": 0.13244616965602135}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.9422310756972112, "obj2": 0.024810016470704927}, {"determining": "( ( CRS / Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) * ARS ) ) / PN ) + ( ( MRS + ( ( FirstVNF_RAM - ARS ) + DDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,Max( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) / ( RCSe / ( RMSe * RRSe ) ) ),Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( RCSe / ( Min( MLU ,MUM ) - ( RMSe - Min( MUM ,( MUC - DS ) ) ) ) ) * ( RCSe * Max( MUM,MUC ) ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7118337968277919}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( Max( ( Const + ( ( ACS + BR ) * Max( Min( PN ,DDR ),MRS ) ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "Max( ( ( ( ( RCSe * DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( RRSe + ( ( Min( ( ( RRSe * ( DS - RMSe ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.35856573705179284, "obj2": 0.5011395236140707}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / PN ) - ( Const - MDR ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( RMSe / MLU ) - ( MUC + MUM ) ) + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RMSe ) ) ) ) + RRSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5113479716558971}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.16135458167330677, "obj2": 0.7253895444955649}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( Max( CRS,Max( PN,FirstVNF_Mem_Server ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) - MLU ) / Min( MLU ,DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( ( Const + ( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( RMSe - RCSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5298573435685406}, {"determining": "( ( ACS - ARS ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ARS ) ) ),( MRS / AMS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( Max( DS,DS ) - ( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * MLU ) ) / Min( MUC ,RCSe ) ) ) * Max( CS,( DS - RMSe ) ) ) )", "obj1": 0.7450199203187251, "obj2": 0.17386235302629277}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,Max( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ),Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7474271347042583}, {"determining": "( Max( ( ACS + ( ( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Min( FirstVNF_CPU ,ARS ) * ( ACS - ARS ) )", "choosing": "( Min( ( ( MUR + ( ( ( DS / RCSe ) - ( CS + MLU ) ) / MUM ) ) - Max( Max( RRSe,MUC ),RCSe ) ) ,( RCSe / MUC ) ) / Min( MUM ,( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) - RMSe ) / RMSe ) - CS ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.24122818291566053}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - MRS ) )", "choosing": "( ( Max( ( RMSe - RMSe ),MLU ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,RCSe ) ) ) * ( DS / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.20768581154248286}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) * Max( CRS,Max( DDR,Max( ACS,( ACS - ( RRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( Min( ( ( ( RMSe / ( MUM + MLU ) ) / Max( Min( RRSe ,MUC ),( DS * MUM ) ) ) - CS ) ,MLU ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) - ( ( ( Max( MLU,DS ) - RCSe ) / ( RMSe - DS ) ) * Min( MLU ,Min( RMSe ,Max( RRSe,( MUM - ( DS + RRSe ) ) ) ) ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7420840638475933}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Max( ( FirstVNF_Mem - FirstVNF_Mem ),( ( ( ( DDR * ACS ) / FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Min( ( AMS + ACS ) ,DDR ) / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "( Min( MUR ,( RRSe / Max( ( DS + MUR ),MUC ) ) ) - ( ( RMSe + RCSe ) + RCSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( Max( CRS,( ( ( MDR / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * Max( Min( Const ,RRS ),RRS ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + Min( RCSe ,DS ) ) - ( ( RMSe + Max( ( ( MUR + ( RRSe - MUM ) ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.6792828685258964, "obj2": 0.22894497750313283}, {"determining": "( ( ACS - ARS ) * ( Const + CRS ) )", "choosing": "( ( ( MUM - Min( Max( MLU,( RRSe / CS ) ) ,Min( DS ,Max( RCSe,( MUM - MUR ) ) ) ) ) - ( ( RCSe - MUC ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( MUR - MUC ) / CS ) / ( ( Max( ( CS * ( Max( RMSe,CS ) / CS ) ),MUC ) * MUC ) - ( Min( CS ,MLU ) * ( ( Max( Max( RMSe,CS ),MUM ) + ( RCSe + RCSe ) ) / MLU ) ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.19140120654713264}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.9482071713147411, "obj2": 0.022639739296884197}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( RCSe + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( ( RCSe / RMSe ) - MUC ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / ( ( MUC + CS ) * ( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.04341282840931141}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Min( Min( Min( FirstVNF_CPU_Server ,PN ) ,FirstVNF_Mem_Server ) ,ARS ) ) ) * ( ARS - ARS ) )", "choosing": "Max( Min( RMSe ,DS ),( RRSe + Max( ( Max( DS,( RCSe - CS ) ) * RRSe ),Min( MLU ,MUM ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5903194771130612}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( Max( CRS,( ( FirstVNF_Mem + RRS ) * ( FirstVNF_RAM_Server * ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( MUM / Max( DS,CS ) ),DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( ( MUR / RRSe ) - Max( RRSe,RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / RRSe ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.6792828685258964, "obj2": 0.22894497750313283}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}], "17": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( Max( ( AMS + ( FirstVNF_Mem - BR ) ),RRS ) + DDR ) ) - Max( PN,ARS ) )", "choosing": "( ( MUM / ( ( CS / RMSe ) * MUC ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( Max( CRS,Max( CRS,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + Min( RRSe ,( RCSe / MUC ) ) ) ,( MUR / ( MLU + MUR ) ) ) )", "obj1": 0.5199203187250996, "obj2": 0.31703053143196047}, {"determining": "( ( MRS / BR ) * Min( ( ( FirstVNF_RAM - Const ) * AMS ) ,ACS ) )", "choosing": "( ( Max( DS,DS ) - Max( RCSe,Max( CS,( MLU + ( MUM - MLU ) ) ) ) ) * Max( CS,RRSe ) )", "obj1": 0.5179282868525896, "obj2": 0.3424565058679567}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,BR ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) ) ,CS ) )", "obj1": 0.5776892430278885, "obj2": 0.31393612674862564}, {"determining": "( ( FirstVNF_RAM * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( BR,ARS ) ) ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / MUM ) / ( ( RCSe + ( Min( Max( RMSe,RMSe ) ,DS ) / RCSe ) ) * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( PN / RRS ) )", "choosing": "( ( ( ( ( DS - MUM ) - ( Max( RCSe,Max( MUM,RMSe ) ) * MUC ) ) - RRSe ) - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * CS ) - Min( ( ( Max( MUC,( CS * MUR ) ) + MUC ) * MUC ) ,MUR ) ) / RRSe ) / RCSe )", "obj1": 0.5159362549800797, "obj2": 0.37567527261849526}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_RAM_Server - ( AMS * ( Min( FirstVNF_CPU ,MDR ) * DDR ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( Min( Min( RRSe ,Min( MUC ,MUM ) ) ,Min( RCSe ,DS ) ) + DS ) ) ) / ( MUM * CS ) ),( MUC * Min( ( CS / RRSe ) ,RRSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.40545604344638214}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.16733666304862568}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( AMS - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( ( MUM - CS ) - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( Max( CRS,FirstVNF_RAM ) * Max( RRS,( PN / CRS ) ) )", "choosing": "Max( ( ( ( MUR / ( ( Max( ( MUC * RMSe ),( RMSe + MUC ) ) * ( Max( MLU,CS ) + MUC ) ) + RRSe ) ) + MLU ) / ( RMSe - CS ) ),( Max( ( RCSe - MUR ),MUM ) / MUC ) )", "obj1": 0.7270916334661355, "obj2": 0.17921517922584107}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.48406374501992033, "obj2": 0.3853436791083309}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.03230575206594041}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "( ( ( ( ( ( CS * ( ( MUR * RRSe ) + CS ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.4721115537848606, "obj2": 0.40127912403104316}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( ( AMS / DDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU ) )", "choosing": "Max( ( ( MLU + ( MUR / DS ) ) / ( MUM * CS ) ),Max( DS,( RCSe / RCSe ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6684781167819658}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( DDR - PN ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,BR ) - DDR ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.3665338645418327, "obj2": 0.4995097407358509}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( Max( BR,BR ) * ( ACS - Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.3944223107569721, "obj2": 0.46848182961016205}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( Min( PN ,FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5827024636137283}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( Max( Max( ( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) + Min( RRS ,( PN / Min( DDR ,MRS ) ) ) ) - MDR ),CRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUC ,RCSe ) / Min( DS ,MUR ) ) ,( MUR + ( MUM - CS ) ) ) ,Min( MUM ,MUC ) ) ) ) ,( ( RCSe / RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5929916324810595}, {"determining": "( Max( ( ACS + ( ( ( ( RRS / FirstVNF_Mem ) / BR ) / Min( PN ,DDR ) ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.21314741035856574, "obj2": 0.65743222093514}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( ( Min( MRS ,FirstVNF_CPU ) * ARS ) - FirstVNF_Mem_Server ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( Min( RCSe ,RMSe ) / Min( ( MUR - MUC ) ,Min( MLU ,CS ) ) ) ) - ( ( ( ( DS - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7171314741035857, "obj2": 0.20100840095008254}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Max( CRS,Min( ( MDR + RRS ) ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,MUC ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.17131474103585656, "obj2": 0.7116371907932464}, {"determining": "( ( ACS - ARS ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ARS ) ) ),( MRS / AMS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( Max( DS,DS ) - ( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * MLU ) ) / Min( MUC ,RCSe ) ) ) * Max( CS,( DS - RMSe ) ) ) )", "obj1": 0.7191235059760956, "obj2": 0.1908539541000884}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.4243027888446215, "obj2": 0.44524528463401475}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 0.7788844621513944, "obj2": 0.15804493637143602}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Max( ( FirstVNF_Mem - FirstVNF_Mem ),( ( ( ( DDR * ACS ) / FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Min( ( AMS + ACS ) ,DDR ) / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "( Min( MUR ,( RRSe / Max( ( DS + MUR ),MUC ) ) ) - ( ( RMSe + RCSe ) + RCSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( MRS ,FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MLU / Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) ) / RCSe ) / DS )", "obj1": 0.6434262948207171, "obj2": 0.24638691665442783}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( Max( BR,CRS ) ,( MRS - Const ) ) ) ) / BR ) )", "choosing": "Max( ( Max( RMSe,( ( RMSe - Max( Max( MUC,Max( MUM,DS ) ),RMSe ) ) - RCSe ) ) - MUM ),( ( RCSe + RRSe ) / CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6311004256467366}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / PN ) - ( Const - MDR ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( RMSe / MLU ) - ( MUC + MUM ) ) + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RMSe ) ) ) ) + RRSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5113479716558971}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / Min( MLU ,RCSe ) ) - CS ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.028565843385830205}, {"determining": "( Max( ( FirstVNF_RAM - Max( ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ),DDR ) ),( ( FirstVNF_RAM_Server / Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS - AMS ) ) - ARS ),DDR ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( Max( MUM,MUM ) + Max( ( MUM * MUM ),( RRSe / RMSe ) ) ) ,CS ) )", "obj1": 0.603585657370518, "obj2": 0.28752698952996353}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( ARS - ( ( FirstVNF_CPU_Server * ( ARS - ( Const * MDR ) ) ) - FirstVNF_Mem_Server ) ) + ARS ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUR / DS ) ) / ( MUM * CS ) ),( RMSe - RRSe ) )", "obj1": 0.6673306772908366, "obj2": 0.24038953081689973}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,Max( ( Min( MUR ,Max( DS,Max( DS,CS ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ),Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7474271347042583}, {"determining": "( ( Max( ( PN / MRS ),( ( RRS * FirstVNF_Mem ) + ( Min( ( ( FirstVNF_Mem - FirstVNF_RAM ) / RRS ) ,FirstVNF_RAM ) / PN ) ) ) * ( ( BR + FirstVNF_Mem_Server ) - ACS ) ) * Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( Max( DS,DS ),RCSe ) ,Max( CS,Max( MUC,MLU ) ) ) / Min( ( Max( ( MUM / MUM ),( RRSe / RMSe ) ) * ( CS / DS ) ) ,CS ) )", "obj1": 0.5956175298804781, "obj2": 0.29375101275109594}, {"determining": "( Max( ( MRS / AMS ),( ( Min( Min( ( ( FirstVNF_RAM + ARS ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUR ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + Max( ( MUR / DS ),( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6838405448736786}, {"determining": "Max( ( ( ( BR * Max( ( ARS / ACS ),DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ) ),( ( FirstVNF_RAM + ( FirstVNF_Mem_Server + ( ( RRS + FirstVNF_RAM_Server ) - ( MRS / ( MRS + Const ) ) ) ) ) + ( Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUR + RRSe ) - ( ( ( MLU + MUC ) - CS ) + RMSe ) )", "obj1": 0.8466135458167331, "obj2": 0.10519962226476277}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( ( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5430852240380856}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( DS / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) ) ) / ( MUM * CS ) ),( ( RCSe + CS ) / CS ) )", "obj1": 0.18725099601593626, "obj2": 0.68985633751234}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( MUM + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9840637450199203, "obj2": 0.006800292137752411}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.6593625498007968, "obj2": 0.24605999382263308}, {"determining": "( ( ARS + ( FirstVNF_RAM * BR ) ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( ( DS * MUM ) + RMSe ),MUC ) ) ) - ( ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) + Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( PN + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ,Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( ARS - MRS ) + ( ( BR + FirstVNF_RAM_Server ) - CRS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,( ( MUR - MUC ) + ( ( RCSe - Max( ( MUM - MUM ),( DS + Max( MUM,MUR ) ) ) ) - ( DS - Max( ( RMSe * Min( CS ,MLU ) ),Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.6334661354581673, "obj2": 0.2723933455232532}, {"determining": "( Max( ( FirstVNF_RAM_Server + ( RRS / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( ( DS - RMSe ) / MLU ),DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( ( ( CS / DS ) * Max( ( MUM * MUM ),( ( RRSe - MUC ) / RMSe ) ) ) ,CS ) )", "obj1": 0.5896414342629482, "obj2": 0.3008822239605485}, {"determining": "( ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) - ( ( ( FirstVNF_RAM / BR ) / PN ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Max( MUR,DS ) * RRSe ) ),Min( ( CS + DS ) ,( MUC + ( RCSe * DS ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( ( ( DS + Min( MUR ,MLU ) ) / RCSe ) / DS ) ) / ( ( ( MUR / DS ) + MLU ) / ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) ) ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8326693227091634, "obj2": 0.11112231641404899}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8645418326693227, "obj2": 0.06987943181376788}, {"determining": "( ( ( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) * ACS ) * ( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,Min( Const ,PN ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ARS ,MRS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( CS / Max( ( ( MUC + DS ) - CS ),( MUC - ( CS - MLU ) ) ) ) - DS ) * ( MUM * ( ( ( Min( MLU ,MUC ) / Min( RCSe ,MUR ) ) * RMSe ) * RRSe ) ) ) ,MUM ) * ( ( MUR - MUC ) + ( MUC + ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5538526352424306}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( Max( DS,DS ) + RMSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5408503344583097}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.9422310756972112, "obj2": 0.024810016470704927}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * ( ARS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5353170446172677}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( Max( ( Const + ( Min( Const ,Max( ( MDR / BR ),ARS ) ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( ( ( RMSe / RRSe ) + Max( Min( MUR ,MLU ),MLU ) ) + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + MLU ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( Max( CRS,Max( PN,FirstVNF_Mem_Server ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) - MLU ) / Min( MLU ,DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( ( Const + ( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( RMSe - RCSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5298573435685406}, {"determining": "( Max( CRS,Max( DDR,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,Max( FirstVNF_Mem_Server,MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) - RCSe ) / ( RMSe - DS ) ) * Min( MLU ,Min( RMSe ,Max( RRSe,( MUM - ( DS + RRSe ) ) ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7322809200964682}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.16135458167330677, "obj2": 0.7253895444955649}, {"determining": "( ( ( PN + CRS ) * DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( ( ( DS - ( ( MUM / CS ) + MUC ) ) * ( Max( RRSe,RRSe ) - ( MUR / RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / Min( MUR ,RRSe ) ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.9721115537848606, "obj2": 0.011891724167748035}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( Min( MUR ,( CS + DS ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) - ( ( MUM - MUM ) - ( ( RCSe * Min( MUM ,RMSe ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6975793340357771}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( ACS - ARS ),( PN - FirstVNF_RAM ) ) ,Min( BR ,Const ) ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - DDR ) )", "choosing": "Max( Max( ( ( MUR / DS ) + MLU ),( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( MUC ,Min( RMSe ,MUR ) ) ) ) ,( DS + CS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4378636875873357}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.6912350597609562, "obj2": 0.21636625495827436}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4378636875873357}, {"determining": "( Max( ( ACS + ( ( Min( MDR ,Max( ( ACS - ARS ),Min( FirstVNF_RAM ,PN ) ) ) - FirstVNF_RAM ) / FirstVNF_Mem ) ),( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / AMS ) ) * ( Max( MDR,AMS ) / RRS ) )", "choosing": "Max( ( ( MLU + MLU ) / Min( MUC ,DS ) ),( Max( ( RCSe - MLU ),( Min( DS ,MLU ) + Min( RMSe ,Min( MUM ,MUR ) ) ) ) + ( MUC / Min( DS ,( CS / MUR ) ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.27468609951903494}, {"determining": "( Max( CRS,Max( ( ( Max( BR,MRS ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( ( BR + ( BR + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( ( ( BR - FirstVNF_Mem_Server ) + Min( MRS ,ARS ) ) - ARS ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / Min( MLU ,RCSe ) ) - CS ) ) ) )", "obj1": 0.8087649402390438, "obj2": 0.13119496951806847}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( DS - RRSe ) )", "obj1": 0.9601593625498008, "obj2": 0.016275782289266797}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.9482071713147411, "obj2": 0.02257208081721051}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / DDR ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.6175298804780877, "obj2": 0.28358840854270767}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( PN - FirstVNF_Mem_Server ) ) ) ) * Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),DS ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( Max( MLU,MUR ) - MUC ) / RMSe ) ) ) ) + Max( ( MUR / DS ),( Min( RMSe ,MUC ) - ( ( RCSe * ( MUM + RMSe ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7377569125071481}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,RCSe ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.20768581154248286}, {"determining": "( Max( CRS,( ( FirstVNF_Mem + RRS ) * ( FirstVNF_RAM_Server * ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( MUM / Max( DS,CS ) ),DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( ( MUR / RRSe ) - Max( RRSe,RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / RRSe ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.6792828685258964, "obj2": 0.22894497750313283}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( MRS / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) ),CS ) / CS ) )", "obj1": 0.798804780876494, "obj2": 0.13244616965602135}, {"determining": "( ( BR * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,( ( ( RRS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,DDR ) ) ) / AMS ) ) * Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * Max( DS,CS ) ) ),( ( MUR / DS ) - RCSe ) )", "obj1": 0.19721115537848605, "obj2": 0.6848077015836299}, {"determining": "( Max( CRS,Min( MDR ,( MDR + RRS ) ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( RMSe * RCSe ),( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3466135458167331, "obj2": 0.521179779582132}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( Max( CRS,( Max( ARS,FirstVNF_RAM ) / ( MRS * FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( CS + ( RMSe / CS ) ) / DS ) + MLU ) / ( MUM / CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / BR ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5564594342587548}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.16135458167330677, "obj2": 0.7253895444955649}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) / DS )", "obj1": 0.6872509960159362, "obj2": 0.2242474704592594}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Min( ( MDR + PN ) ,DDR ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUC + ( MUM * RCSe ) ) ,( CS + DS ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( PN / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,Max( ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ),Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7049038289467756}, {"determining": "( Max( ( ARS - ARS ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.8127490039840638, "obj2": 0.1271655828866416}], "18": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.545816733067729, "obj2": 0.2749747865836494}, {"determining": "( Max( ( ACS + ( ( Min( MDR ,Max( ( ACS - ARS ),Min( FirstVNF_RAM ,PN ) ) ) - FirstVNF_RAM ) / FirstVNF_Mem ) ),( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / AMS ) ) * ( Max( MDR,AMS ) / RRS ) )", "choosing": "Max( ( ( MLU + MLU ) / Min( MUC ,DS ) ),( Max( ( RCSe - MLU ),( Min( DS ,MLU ) + Min( RMSe ,Min( MUM ,MUR ) ) ) ) + ( MUC / Min( DS ,( CS / MUR ) ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.27468609951903494}, {"determining": "( ( MRS / BR ) * Min( ( ( FirstVNF_RAM - Const ) * AMS ) ,ACS ) )", "choosing": "( ( Max( DS,DS ) - Max( RCSe,Max( CS,( MLU + ( MUM - MLU ) ) ) ) ) * Max( CS,RRSe ) )", "obj1": 0.5179282868525896, "obj2": 0.3424565058679567}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( PN / RRS ) )", "choosing": "( ( ( ( ( DS - MUM ) - ( Max( RCSe,Max( MUM,RMSe ) ) * MUC ) ) - RRSe ) - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_RAM_Server - ( AMS * ( Min( FirstVNF_CPU ,MDR ) * DDR ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( Min( Min( RRSe ,Min( MUC ,MUM ) ) ,Min( RCSe ,DS ) ) + DS ) ) ) / ( MUM * CS ) ),( MUC * Min( ( CS / RRSe ) ,RRSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.40545604344638214}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( AMS - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( ( MUM - CS ) - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Max( CRS,Min( ( MDR + RRS ) ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,MUC ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.17131474103585656, "obj2": 0.7116371907932464}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.5199203187250996, "obj2": 0.31703053143196047}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( AMS + ARS ) * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR - DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( RRSe ,( CS / RRSe ) ) * MUC ) )", "obj1": 0.47808764940239046, "obj2": 0.38462843850820067}, {"determining": "( Max( Max( CRS,Max( CRS,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + Min( RRSe ,( RCSe / MUC ) ) ) ,( MUR / ( MLU + MUR ) ) ) )", "obj1": 0.5199203187250996, "obj2": 0.31703053143196047}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( ACS ,FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( Max( MUM,RRSe ) - DS ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.373763329911399}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( DDR - PN ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,BR ) - DDR ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.3665338645418327, "obj2": 0.4995097407358509}, {"determining": "( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) )", "choosing": "( ( Max( RCSe,MUR ) + ( ( MUR + MUR ) + ( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) ) ) * Min( Max( MUC,DS ) ,MLU ) )", "obj1": 0.7609561752988048, "obj2": 0.16067538764835768}, {"determining": "( Max( BR,BR ) * ( ACS - Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( CS,RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.45597734773227866}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.3944223107569721, "obj2": 0.46848182961016205}, {"determining": "( Max( CRS,( ( FirstVNF_Mem + RRS ) * ( FirstVNF_RAM_Server * ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( ( MUM / Max( DS,CS ) ),DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( ( MUR / RRSe ) - Max( RRSe,RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / RRSe ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.6792828685258964, "obj2": 0.22894497750313283}, {"determining": "( ( FirstVNF_CPU * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( Const - RRS ) ) ) ) + ( FirstVNF_Mem * BR ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.4672146373205711}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "( ( ( ( ( ( CS * ( ( MUR * RRSe ) + CS ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.4721115537848606, "obj2": 0.40127912403104316}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( Min( FirstVNF_Mem_Server ,( AMS + ( CRS * PN ) ) ) - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( CRS - ACS ) )", "choosing": "Max( Max( MUM,RMSe ),( Max( DS,MUM ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6393392070164168}, {"determining": "( Max( Max( ( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) + Min( RRS ,( PN / Min( DDR ,MRS ) ) ) ) - MDR ),CRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUC ,RCSe ) / Min( DS ,MUR ) ) ,( MUR + ( MUM - CS ) ) ) ,Min( MUM ,MUC ) ) ) ) ,( ( RCSe / RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5929916324810595}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( Max( ( ACS + ( ( ( ( RRS / FirstVNF_Mem ) / BR ) / Min( PN ,DDR ) ) / BR ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / ( Max( RCSe,DS ) * DS ) ) + Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.25298804780876494, "obj2": 0.6133026128025172}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6557196846815234}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( ACS - ARS ),( PN - FirstVNF_RAM ) ) ,Min( BR ,Const ) ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - DDR ) )", "choosing": "Max( Max( ( ( MUR / DS ) + MLU ),( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( MUC ,Min( RMSe ,MUR ) ) ) ) ,( DS + CS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.4243027888446215, "obj2": 0.44524528463401475}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MLU / Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) ) / RCSe ) / DS )", "obj1": 0.6434262948207171, "obj2": 0.24638691665442783}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.6593625498007968, "obj2": 0.24605999382263308}, {"determining": "( ( FirstVNF_RAM * ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( BR,ARS ) ) ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / MUM ) / ( ( RCSe + ( Min( Max( RMSe,RMSe ) ,DS ) / RCSe ) ) * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( DDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,( RMSe + RRSe ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 0.7788844621513944, "obj2": 0.15804493637143602}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_CPU ) ) * ( PN + ( BR + FirstVNF_Mem_Server ) ) ) + Min( Max( ( RRS - MRS ),( FirstVNF_Mem / MRS ) ) ,Max( ( FirstVNF_CPU - ( ( RRS / FirstVNF_CPU ) / ( ( ARS - MRS ) + ( ( BR + FirstVNF_RAM_Server ) - CRS ) ) ) ),( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( MUM * CS ) ) / Max( CS,( ( MUR - MUC ) + ( ( RCSe - Max( ( MUM - MUM ),( DS + Max( MUM,MUR ) ) ) ) - ( DS - Max( ( RMSe * Min( CS ,MLU ) ),Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.6334661354581673, "obj2": 0.2723933455232532}, {"determining": "( ( AMS / DDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU ) )", "choosing": "Max( ( ( MLU + ( MUR / DS ) ) / ( MUM * CS ) ),Max( DS,( RCSe / RCSe ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6684781167819658}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( ( BR * ACS ) * ( Max( ( PN * ( RRS + FirstVNF_CPU_Server ) ),( MRS / ( FirstVNF_RAM_Server / ( ( BR / ( AMS / FirstVNF_CPU ) ) / Min( PN ,DDR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU + CS ) ) ) ) - ( Min( CS ,RCSe ) * CS ) )", "obj1": 0.7848605577689243, "obj2": 0.15606878946238054}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8645418326693227, "obj2": 0.06828689792489159}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ARS * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * MDR )", "choosing": "( ( ( ( MUR / DS ) + Max( ( DS / Max( MUC,DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( MUR - MUC ) / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7211078928222547}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6706831312930576}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( DS - RRSe ) )", "obj1": 0.7131474103585658, "obj2": 0.19763923749386644}, {"determining": "( Max( CRS,FirstVNF_RAM ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / ( MUM - CS ) ),( CS / Min( MLU ,MUC ) ) )", "obj1": 0.7270916334661355, "obj2": 0.17921517922584107}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Min( ( MDR + PN ) ,DDR ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUC + ( MUM * RCSe ) ) ,( CS + DS ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Max( ( FirstVNF_Mem - FirstVNF_Mem ),( ( ( ( DDR * ACS ) / FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Min( ( AMS + ACS ) ,DDR ) / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "( Min( MUR ,( RRSe / Max( ( DS + MUR ),MUC ) ) ) - ( ( RMSe + RCSe ) + RCSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( Max( MDR,( ( Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( BR - AMS ) ) - ARS ),DDR ) / FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + ( CS - MUR ) ) / Max( ( DS * ( MUM - ( CS - RRSe ) ) ),DS ) )", "obj1": 0.8266932270916335, "obj2": 0.11931770398999639}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( FirstVNF_Mem * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( ( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7390438247011952, "obj2": 0.1730176773262874}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( MRS / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) ),CS ) / CS ) )", "obj1": 0.798804780876494, "obj2": 0.13244616965602135}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM ) ,ARS ) / DDR ) - ( Min( PN ,( FirstVNF_RAM / ( ( MRS / Max( FirstVNF_RAM,( DDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "Max( ( RCSe * Max( RMSe,( ( ( ( ( DS + RRSe ) / MUC ) / ( RMSe * ( RRSe - MUR ) ) ) / ( MUR - RCSe ) ) - RCSe ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9083665338645418, "obj2": 0.039589338276035974}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( Min( PN ,FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5827024636137283}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( CS - ( ( ( ( RRSe - MUC ) / MUR ) / CS ) + Min( RRSe ,( MUR / MUR ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6322836775466465}, {"determining": "( Max( CRS,Min( MDR ,( MDR + RRS ) ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( RMSe * RCSe ),( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3466135458167331, "obj2": 0.521179779582132}, {"determining": "( ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) - ( ( ( FirstVNF_RAM / BR ) / PN ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Max( MUR,DS ) * RRSe ) ),Min( ( CS + DS ) ,( MUC + ( RCSe * DS ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.06551527413571767}, {"determining": "( Max( FirstVNF_RAM_Server,( ( AMS * Min( DDR ,AMS ) ) * Max( ARS,FirstVNF_Mem ) ) ) * ( ( Min( CRS ,( Min( FirstVNF_Mem_Server ,MRS ) * ( ( FirstVNF_RAM_Server / ARS ) / Max( CRS,DDR ) ) ) ) / PN ) + ( FirstVNF_Mem * RRS ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( Min( RCSe ,DS ) ,( MUM + DS ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( MUR - MUC ) / RMSe ) ) ) ) + ( ( MUR / RMSe ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( ( ( RMSe * MUR ) + RRSe ) / MUR ) ) ) ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7411643249223981}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( MRS / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( CS - RRSe ) ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / Min( MLU ,RCSe ) ) - CS ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.12426013095756167}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.44223107569721115, "obj2": 0.43275893371387975}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.21951992104405987}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( Max( Max( CRS,Min( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * RRS ) * Max( ARS,PN ) ) ,( BR + ARS ) ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR * MUC ) / Min( MLU ,CS ) ) ) ) - ( Min( RCSe ,DS ) / ( RMSe / Min( MUM ,DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.14031047018747805}, {"determining": "( Max( CRS,Max( PN,FirstVNF_Mem_Server ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) - MLU ) / Min( MLU ,DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "( ( Max( ( RMSe - MUC ),( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * Min( ( RCSe + RCSe ) ,MLU ) ) ) / Min( DS ,RCSe ) ) ) + ( DS + DS ) ) / Min( MLU ,MUM ) )", "obj1": 0.8426294820717132, "obj2": 0.1059756943602493}, {"determining": "( Max( ( ARS - ARS ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.8127490039840638, "obj2": 0.1271655828866416}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_Mem / Max( MDR,DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server + Min( ( ARS + DDR ) ,DDR ) ) )", "choosing": "( Min( MUM ,( MUC / MUR ) ) / ( Min( CS ,CS ) + MUR ) )", "obj1": 0.6972111553784861, "obj2": 0.20995887137751829}, {"determining": "( ( ( Max( PN,( Max( MRS,( AMS * ( ACS / BR ) ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Max( DS,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( Min( Min( RCSe ,RMSe ) ,MLU ) ,( CS / RRSe ) ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.7091633466135459, "obj2": 0.20428854799796484}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( BR / ( FirstVNF_RAM_Server + CRS ) ) / Min( PN ,( ( CRS - MDR ) / RRS ) ) ) )", "choosing": "( ( ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) / DS ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( RRSe + MUR ) / RMSe ) ) ) ) + ( ( MUR - DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.0793555255321311}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( ( ( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( ( DS - CS ) + MUR ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.44621513944223107, "obj2": 0.42834783674148}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( ARS - ( ( FirstVNF_CPU_Server * ( ARS - ( Const * MDR ) ) ) - FirstVNF_Mem_Server ) ) + ARS ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUR / DS ) ) / ( MUM * CS ) ),( RMSe - RRSe ) )", "obj1": 0.6673306772908366, "obj2": 0.24038953081689973}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( CRS,Max( ( ( Max( BR,MRS ) / MRS ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( ( BR + ( BR + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( ( ( BR - FirstVNF_Mem_Server ) + Min( MRS ,ARS ) ) - ARS ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( Max( ( RRSe * CS ),Min( MUC ,RCSe ) ) - DS ) / ( MLU + ( RMSe / ( ( ( ( CS - ( MLU + MUC ) ) + ( MUM * CS ) ) / Min( MLU ,RCSe ) ) - CS ) ) ) )", "obj1": 0.8087649402390438, "obj2": 0.13119496951806847}, {"determining": "( ( Min( ARS ,PN ) / DDR ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( Max( FirstVNF_Mem,( FirstVNF_Mem - AMS ) ) / AMS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( MUM + Min( Min( DS ,( ( DS - DS ) + ( RMSe / CS ) ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( ( ( ( MUM / DS ) / MUM ) + MUM ) / DS ) / DS ) )", "obj1": 0.9840637450199203, "obj2": 0.006800292137752411}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - DDR ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MLU + ( ( ( DS / MUM ) / ( ( ( DS + MUC ) / RCSe ) / DS ) ) / ( ( ( MUR / DS ) + MLU ) / ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) ) ) ) / ( ( MUR / DS ) / MUM ) )", "obj1": 0.8326693227091634, "obj2": 0.11112231641404899}, {"determining": "( ( ACS - ARS ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ARS ) ) ),( MRS / AMS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( Max( DS,DS ) - ( ( ( MUM / ( ( MUC - CS ) - ( MUC / RCSe ) ) ) - ( ( RRSe / MLU ) * MLU ) ) / Min( MUC ,RCSe ) ) ) * Max( CS,( DS - RMSe ) ) ) )", "obj1": 0.7191235059760956, "obj2": 0.1908539541000884}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / PN ) - ( Const - MDR ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( RMSe / MLU ) - ( MUC + MUM ) ) + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RMSe ) ) ) ) + RRSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5113479716558971}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.16733666304862568}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.6673306772908366, "obj2": 0.24038953081689973}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( DS,Max( DS,RCSe ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.20768581154248286}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( PN - FirstVNF_RAM_Server ) ) * ( AMS - ACS ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( CS * MUM ) ),( ( ( ( MUC + DS ) * RRSe ) * Max( ( CS / ( MLU + MLU ) ),Max( ( Max( ( MUM * MUR ),RRSe ) * ( CS + MLU ) ),RMSe ) ) ) + RRSe ) )", "obj1": 0.31274900398406374, "obj2": 0.5527621404558976}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.30677290836653387, "obj2": 0.5556750250946335}, {"determining": "( Max( ( MRS + AMS ),FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( Min( MUR ,MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( ( MUM - MUM ) - ( Max( RCSe,CS ) + ( DS / MUR ) ) ) / ( MUR / DS ) ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6863348073559455}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( MUM + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9840637450199203, "obj2": 0.006800292137752411}, {"determining": "( ( ( PN + CRS ) * DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( ( ( DS - ( ( MUM / CS ) + MUC ) ) * ( Max( RRSe,RRSe ) - ( MUR / RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / Min( MUR ,RRSe ) ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.9721115537848606, "obj2": 0.011891724167748035}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.3545816733067729, "obj2": 0.5113263995048722}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * ( CS - MUM ) ) / ( RRSe - MUC ) )", "obj1": 0.9422310756972112, "obj2": 0.024810016470704927}, {"determining": "( Max( Max( ( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) + ( RRS - AMS ) ) - Const ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( ( Max( DS,DS ) - RCSe ) * Max( CS,RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2597091897305744}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( Max( RRSe,RRSe ) - ( MUR / RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / RRSe ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.9721115537848606, "obj2": 0.011891724167748035}, {"determining": "( Max( CRS,( ( FirstVNF_Mem * ( ( FirstVNF_Mem_Server / ( MDR * CRS ) ) / RRS ) ) / Min( MRS ,FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "Max( Min( ( DS / MUR ) ,( RCSe / Max( DS,Min( MUM ,DS ) ) ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * ( MLU * Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5430852240380856}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "( ( ( MUM - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.6912350597609562, "obj2": 0.21636625495827436}, {"determining": "( Max( ( MRS / AMS ),( ( Min( Min( ( ( FirstVNF_RAM + ARS ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUR ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + Max( ( MUR / DS ),( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6838405448736786}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( Min( PN ,FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5827024636137283}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( Min( RRSe ,RRSe ) * ( ( MUR - MUM ) / ( ( CS - DS ) + ( ( RCSe / RMSe ) + ( RRSe / DS ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4378636875873357}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( PN - FirstVNF_Mem_Server ) ) ) ) * Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),DS ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( Max( MLU,MUR ) - MUC ) / RMSe ) ) ) ) + Max( ( MUR / DS ),( Min( RMSe ,MUC ) - ( ( RCSe * ( MUM + RMSe ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7377569125071481}], "19": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( DS + DS ),MUC ) ) ) - ( MUM + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( MRS - Const ) / ( ( CRS / Min( Const ,FirstVNF_RAM_Server ) ) / PN ) ) - ( Max( RRS,FirstVNF_CPU ) / Const ) ),( MRS / Max( ( ACS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),MDR ) ) ) * ( ARS - ( FirstVNF_CPU_Server + Max( PN,( Min( CRS ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.25102143217261474}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( DDR - FirstVNF_Mem ) / ( ACS / FirstVNF_RAM_Server ) ) ) ) / PN ) + ( ACS - MDR ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( ARS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( ( RMSe / ( Max( RCSe,DS ) - ( MUC - ( MLU - ( MUR / CS ) ) ) ) ) ,MUM ) / ( Max( MUR,( DS / RCSe ) ) + MUM ) )", "obj1": 0.6752988047808764, "obj2": 0.21065905287032746}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( MUM * CS ) + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.5418326693227091, "obj2": 0.2808731945916784}, {"determining": "( ( MRS / BR ) * Min( ( ( FirstVNF_RAM - Const ) * AMS ) ,ACS ) )", "choosing": "( ( Max( DS,DS ) - Max( RCSe,Max( CS,( MLU + ( MUM - MLU ) ) ) ) ) * Max( CS,RRSe ) )", "obj1": 0.5179282868525896, "obj2": 0.3424565058679567}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( FirstVNF_RAM_Server * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * Min( FirstVNF_Mem ,MRS ) )", "choosing": "( Min( ( ( RCSe + RCSe ) - DS ) ,( ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) / RMSe ) ) / ( ( MUR - ( DS + RCSe ) ) + MUM ) )", "obj1": 0.749003984063745, "obj2": 0.15350085121921464}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Min( ARS ,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS + PN ) ) )", "choosing": "Max( ( ( MLU + ( ( ( ( RCSe - RCSe ) / MUM ) * ( RMSe + MUC ) ) - MUC ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2673268518504279}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Max( CRS,Min( ( MDR + RRS ) ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,MUC ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.17131474103585656, "obj2": 0.7116371907932464}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.44621513944223107, "obj2": 0.418663977465211}, {"determining": "( ( AMS - MRS ) * ( ACS - MDR ) )", "choosing": "( ( MUR - RMSe ) / Min( ( MUR + Min( RRSe ,( MUC / RCSe ) ) ) ,( MLU * CS ) ) )", "obj1": 0.5199203187250996, "obj2": 0.31703053143196047}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM / Max( BR,( AMS / FirstVNF_RAM ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,MLU ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( Min( MUR ,( CS - ( RCSe + MUC ) ) ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( DDR - PN ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,BR ) - DDR ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.3665338645418327, "obj2": 0.4995097407358509}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10956661466551593}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.4243027888446215, "obj2": 0.44524528463401475}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.5199203187250996, "obj2": 0.31703053143196047}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.47808764940239046, "obj2": 0.38462843850820067}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( ACS ,FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( Max( MUM,RRSe ) - DS ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.373763329911399}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( Min( Max( ( DDR - MRS ),Max( PN,FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / ( ACS * MDR ) ) / MDR ) )", "choosing": "( Max( Max( MUM,( RMSe * MUC ) ),RCSe ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Max( FirstVNF_RAM_Server,( ( AMS * Min( DDR ,AMS ) ) * Max( ARS,FirstVNF_Mem ) ) ) * ( ( Min( CRS ,( Min( FirstVNF_Mem_Server ,MRS ) * ( ( FirstVNF_RAM_Server / ARS ) / Max( CRS,DDR ) ) ) ) / PN ) + ( FirstVNF_Mem * RRS ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( Min( RCSe ,DS ) ,( MUM + DS ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( MUR - MUC ) / RMSe ) ) ) ) + ( ( MUR / RMSe ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( ( ( RMSe * MUR ) + RRSe ) / MUR ) ) ) ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7411643249223981}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "( ( ( ( ( ( CS * ( ( MUR * RRSe ) + CS ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.4721115537848606, "obj2": 0.40127912403104316}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6557196846815234}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( DDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,( RMSe + RRSe ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( Max( Max( ( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) + Min( RRS ,( PN / Min( DDR ,MRS ) ) ) ) - MDR ),CRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUC ,RCSe ) / Min( DS ,MUR ) ) ,( MUR + ( MUM - CS ) ) ) ,Min( MUM ,MUC ) ) ) ) ,( ( RCSe / RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5929916324810595}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - MRS ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,Max( RMSe,( ( CS + DS ) / RMSe ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( MRS * BR ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( MUM - ( RCSe * Min( CS ,Min( Max( RCSe,DS ) ,Max( ( MUM * RRSe ),Max( RRSe,RCSe ) ) ) ) ) ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4556413225010949}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( AMS - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( ( MUM - CS ) - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ACS + PN ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS - FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( MLU / ( ( RRSe - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( Min( MUR ,Min( ( RCSe + ( MUC * MLU ) ) ,Min( RCSe ,MUR ) ) ),( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.1874705985116472}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5341293756797325}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.4334089613595892}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( RRS * FirstVNF_Mem ) + PN ) ) ) ) )", "choosing": "Max( ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9601593625498008, "obj2": 0.01634344076894048}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Max( CRS,( Max( CRS,Const ) - Max( PN,PN ) ) ) ) / ( FirstVNF_Mem_Server + Min( Max( AMS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) ) ) * ( ACS - ARS ) ) * Max( BR,ARS ) )", "choosing": "( ( ( DS - MUC ) + ( MUM - ( ( Min( MLU ,RCSe ) + ( MLU - MUC ) ) + RMSe ) ) ) / CS )", "obj1": 0.50199203187251, "obj2": 0.38363532358242763}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9083665338645418, "obj2": 0.039589338276035974}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.025986986580427758}, {"determining": "( Max( ( MRS / ( ( ( FirstVNF_Mem_Server / DDR ) - ( BR + FirstVNF_Mem_Server ) ) / AMS ) ),( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + Min( ( RRSe + MLU ) ,( RMSe + ( ( MUR * MUM ) - MUR ) ) ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.20318725099601595, "obj2": 0.6675116188564983}, {"determining": "( ( Min( ( Min( PN ,FirstVNF_RAM_Server ) + FirstVNF_RAM ) ,ARS ) - DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( ( ( FirstVNF_CPU - DDR ) / RRS ) / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( ( MLU + ( ( MLU / MUM ) / MUC ) ) / ( MUM * CS ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.952191235059761, "obj2": 0.022541295573804014}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( CS - ( ( ( ( RRSe - MUC ) / MUR ) / CS ) + Min( RRSe ,( MUR / MUR ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6322836775466465}, {"determining": "( Max( Max( ( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) + Min( RRS ,( PN / Min( AMS ,MDR ) ) ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - ( Max( ( RCSe - MLU ),( Min( DS ,MLU ) + Min( RMSe ,Min( MUM ,MUR ) ) ) ) + ( MUC / Min( DS ,( CS / MUR ) ) ) ) ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( MUR + ( DS - CS ) ) ) ,Min( MUM ,MUC ) ) ) ) ,( ( RCSe / RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.10899793974941686}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.44223107569721115, "obj2": 0.43275893371387975}, {"determining": "( Max( ( MRS / AMS ),( ( Min( Min( ( ( FirstVNF_RAM + ARS ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR / MUR ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + Max( ( MUR / DS ),( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6838405448736786}, {"determining": "( ( Min( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS + ( ( FirstVNF_RAM + FirstVNF_Mem ) + DDR ) ) ) ,Const ) + ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( Min( MLU ,DS ) + Max( Min( ( DS + CS ) ,MUC ),( RRSe / DS ) ) ) / DS ) + RMSe ) / ( MUM * MUC ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.3944223107569721, "obj2": 0.46848182961016205}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( PN / RRS ) )", "choosing": "( ( ( ( ( DS - MUM ) - ( Max( RCSe,Max( MUM,RMSe ) ) * MUC ) ) - RRSe ) - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.46215139442231074, "obj2": 0.40545604344638214}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_Mem / Max( MDR,DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server + Min( ( ARS + DDR ) ,DDR ) ) )", "choosing": "( Min( MUM ,( MUC / MUR ) ) / ( Min( CS ,CS ) + MUR ) )", "obj1": 0.6972111553784861, "obj2": 0.20995887137751829}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( Min( PN ,DDR ) ,MRS ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.28087649402390436, "obj2": 0.5817393517183859}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / PN ) - ( Const - MDR ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RMSe ) ) ) ) + RRSe ) )", "obj1": 0.2948207171314741, "obj2": 0.5639922918970864}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8645418326693227, "obj2": 0.06828689792489159}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( PN - FirstVNF_Mem_Server ) ) ) ) * Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),DS ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( Max( MLU,MUR ) - MUC ) / RMSe ) ) ) ) + Max( ( MUR / DS ),( Min( RMSe ,MUC ) - ( ( RCSe * ( MUM + RMSe ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7377569125071481}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.3944223107569721, "obj2": 0.46848182961016205}, {"determining": "( Max( ( ARS - ARS ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.8127490039840638, "obj2": 0.1271655828866416}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( ACS ,FirstVNF_CPU ) ) ) * ( ACS - ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( ( Max( MUM,RRSe ) - DS ) / DS ) + MLU ) / ( MUM * CS ) ),Min( Max( CS,Max( DS,RCSe ) ) ,( CS + DS ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0014223253485329715}, {"determining": "( Max( CRS,Min( MDR ,( MDR + RRS ) ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( RMSe * RCSe ),( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3466135458167331, "obj2": 0.521179779582132}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( ACS - ARS ),( PN - FirstVNF_RAM ) ) ,MDR ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * DS ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( Max( ( ARS - ARS ),Max( ( MRS - FirstVNF_RAM_Server ),( ( CRS - FirstVNF_RAM ) / RRS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5288264484047815}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6706831312930576}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Max( ( FirstVNF_Mem - FirstVNF_Mem ),( ( ( ( DDR * ACS ) / FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Min( ( AMS + ACS ) ,DDR ) / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "( Min( MUR ,( RRSe / Max( ( DS + MUR ),MUC ) ) ) - ( ( RMSe + RCSe ) + RCSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.16733666304862568}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.025986986580427758}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( BR / ( FirstVNF_RAM_Server + CRS ) ) / Min( PN ,( ( CRS - MDR ) / RRS ) ) ) )", "choosing": "( ( ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) / DS ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( RRSe + MUR ) / RMSe ) ) ) ) + ( ( MUR - DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.0793555255321311}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / AMS ) ) * ( Max( ( Min( CRS ,FirstVNF_CPU ) * MRS ),( MRS / AMS ) ) * ( ACS - ARS ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( Min( ( ( MUM * CS ) + MLU ) ,( RMSe + ( MUC - ( RCSe / ( ( MUC + DS ) * RRSe ) ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.5059760956175299, "obj2": 0.3817846656274288}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - ( Max( CRS,FirstVNF_RAM ) * ( ACS - ARS ) ) ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR + ( MUR / RRSe ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6107207583461818}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_RAM_Server - ( AMS * ( Min( FirstVNF_CPU ,MDR ) * DDR ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( Min( Min( RRSe ,Min( MUC ,MUM ) ) ,Min( RCSe ,DS ) ) + DS ) ) ) / ( MUM * CS ) ),( MUC * Min( ( CS / RRSe ) ,RRSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.40545604344638214}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.3386454183266932, "obj2": 0.5229233357745646}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( Min( FirstVNF_Mem_Server ,( AMS + ( CRS * PN ) ) ) - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( CRS - ACS ) )", "choosing": "Max( Max( MUM,RMSe ),( Max( DS,MUM ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6393392070164168}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + Min( ( RRSe + MLU ) ,( RMSe + ( MUC - MUC ) ) ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6393392070164168}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM ) ,ARS ) / DDR ) - ( Min( PN ,( FirstVNF_RAM / ( ( MRS / Max( FirstVNF_RAM,( DDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "Max( ( RCSe * Max( RMSe,( ( ( ( ( DS + RRSe ) / MUC ) / ( RMSe * ( RRSe - MUR ) ) ) / ( MUR - RCSe ) ) - RCSe ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9083665338645418, "obj2": 0.039589338276035974}, {"determining": "( Max( ( ( Min( Min( ( ( FirstVNF_RAM / PN ) - ( Const - MDR ) ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_CPU_Server ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( RMSe / MLU ) - ( MUC + MUM ) ) + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RMSe ) ) ) ) + RRSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5113479716558971}, {"determining": "( ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( RRSe - ( ( RCSe - CS ) / ( CS + ( MUC + MUR ) ) ) ) ),CS ) / CS ) )", "obj1": 0.7350597609561753, "obj2": 0.17716649361157744}, {"determining": "( Max( ( ACS + ( ( ( ( RRS / FirstVNF_Mem ) / BR ) / Min( PN ,DDR ) ) / BR ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / ( Max( RCSe,DS ) * DS ) ) + Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( RCSe / RMSe ) ) ) ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.25298804780876494, "obj2": 0.6133026128025172}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5430852240380856}, {"determining": "( ( FirstVNF_RAM_Server * ( ACS + FirstVNF_RAM_Server ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / Max( ( RRSe - MUM ),MUR ) ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.3107569721115538, "obj2": 0.5489041261982303}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ACS - PN ) * Max( ( ( BR * ACS ) * ( Min( CRS ,( MRS / ( ARS * PN ) ) ) * ( ACS - ( ( DDR * FirstVNF_CPU_Server ) + PN ) ) ) ),( MRS / AMS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( RMSe + ( ( Max( MUC,( RMSe + RCSe ) ) - MUC ) / Max( MUR,( MUR / RCSe ) ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.62970256284814}, {"determining": "( ( Min( ARS ,PN ) / DDR ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( Max( FirstVNF_Mem,( FirstVNF_Mem - AMS ) ) / AMS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( MUM + Min( Min( DS ,( ( DS - DS ) + ( RMSe / CS ) ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( ( ( ( MUM / DS ) / MUM ) + MUM ) / DS ) / DS ) )", "obj1": 0.9840637450199203, "obj2": 0.006800292137752411}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.16135458167330677, "obj2": 0.7253895444955649}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.30677290836653387, "obj2": 0.5556750250946335}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( MUM + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 0.9840637450199203, "obj2": 0.006800292137752411}, {"determining": "( ( ( PN + CRS ) * DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( ( ( DS - ( ( MUM / CS ) + MUC ) ) * ( Max( RRSe,RRSe ) - ( MUR / RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / Min( MUR ,RRSe ) ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.9721115537848606, "obj2": 0.011891724167748035}, {"determining": "( Min( ( ( ( FirstVNF_Mem - ( DDR - RRS ) ) + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ,ARS ) * ( ACS / ARS ) )", "choosing": "Max( ( ( ( MUR / MLU ) + MLU ) / ( MUM - CS ) ),( ( MUC * RMSe ) / Min( MLU ,MUC ) ) )", "obj1": 0.7270916334661355, "obj2": 0.17921517922584107}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * RCSe ) ) * Max( ( Max( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( Max( RRSe,RRSe ) - ( MUR / RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / RRSe ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.9721115537848606, "obj2": 0.011891724167748035}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Max( CRS,( ( FirstVNF_Mem * ( ( FirstVNF_Mem_Server / ( MDR * CRS ) ) / RRS ) ) / Min( MRS ,FirstVNF_CPU ) ) ) * ( ACS - ARS ) )", "choosing": "Max( Min( ( DS / MUR ) ,( RCSe / Max( DS,Min( MUM ,DS ) ) ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * ( MLU * Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5430852240380856}, {"determining": "( Max( CRS,Max( PN,FirstVNF_Mem_Server ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) - MLU ) / Min( MLU ,DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( FirstVNF_Mem,( MRS / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.1413583267036383}, {"determining": "( ( BR * ACS ) * Max( Max( FirstVNF_Mem,( ( ACS * MRS ) / Max( FirstVNF_RAM_Server,( ( ( AMS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ),( ACS - ARS ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / Max( MUR,CS ) ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM - CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5827024636137283}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.3545816733067729, "obj2": 0.5113263995048722}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( DS - RRSe ) )", "obj1": 0.7131474103585658, "obj2": 0.19763923749386644}, {"determining": "( ( RRS + MDR ) * ( ARS - BR ) )", "choosing": "Max( ( ( ( ( Max( MUM,RRSe ) - DS ) / DS ) + MLU ) / Max( ( Max( RCSe,DS ) / DS ),MUM ) ),Min( ( CS + DS ) ,( MUC + RMSe ) ) )", "obj1": 0.5119521912350598, "obj2": 0.373763329911399}], "20": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( Min( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ,ARS ) - Const ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( ( FirstVNF_RAM / ( ( ( ( FirstVNF_CPU - DDR ) / RRS ) / AMS ) + PN ) ) ,PN ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( ( MLU + ( ( MLU / MUM ) / ( RCSe - Min( RRSe ,( CS - RMSe ) ) ) ) ) / ( MUM * CS ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( Min( MLU ,Max( RRSe,Max( ( DS + DS ),MUC ) ) ) - ( MUM + Min( Min( DS ,( ( DS - DS ) + MUR ) ) ,Max( RRSe,MUC ) ) ) ) ) / ( ( MUR / DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( RMSe * RRSe ) ) ) - CS ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.6553784860557769, "obj2": 0.21666973076351043}, {"determining": "( ( FirstVNF_Mem_Server - PN ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + ( RMSe * RCSe ) ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.141331367967411}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6952191235059761, "obj2": 0.19491536714028532}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( MUM * CS ) + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3491710349515654}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( FirstVNF_RAM_Server * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * Min( FirstVNF_Mem ,MRS ) )", "choosing": "( Min( ( ( RCSe + RCSe ) - DS ) ,( ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) / RMSe ) ) / ( ( MUR - ( DS + RCSe ) ) + MUM ) )", "obj1": 0.749003984063745, "obj2": 0.15350085121921464}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.4900398406374502, "obj2": 0.3767616987300113}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ACS + PN ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS - FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( MLU / ( ( RRSe - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( Min( MUR ,Min( ( RCSe + ( MUC * MLU ) ) ,Min( RCSe ,MUR ) ) ),( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.1874705985116472}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Max( CRS,Min( ( MDR + RRS ) ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,MUC ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.17131474103585656, "obj2": 0.7116371907932464}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MUR / DS ) ) ) )", "obj1": 0.5, "obj2": 0.3340592515483712}, {"determining": "( Max( Max( CRS,Max( CRS,( DDR - PN ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.5278884462151394, "obj2": 0.3021687654260069}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10956661466551593}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.25102143217261474}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM / Max( BR,( AMS / FirstVNF_RAM ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,MLU ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( Min( MUR ,( CS - ( RCSe + MUC ) ) ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.41836301036341234}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.5418326693227091, "obj2": 0.28078837989094974}, {"determining": "( Max( ( Const + ( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.25102143217261474}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "( ( ( ( ( ( CS * ( ( MUR * RRSe ) + CS ) ) + RCSe ) / MUM ) - Min( ( Min( ( CS / RRSe ) ,RRSe ) * MUC ) ,MUR ) ) / RRSe ) / ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.4721115537848606, "obj2": 0.40127912403104316}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RMSe ) ) ) ) + RRSe ) )", "obj1": 0.5099601593625498, "obj2": 0.3206909134952137}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( DDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,( RMSe + RRSe ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( Max( Max( ( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) + Min( RRS ,( PN / Min( AMS ,MDR ) ) ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - ( Max( ( RCSe - MLU ),( Min( DS ,MLU ) + Min( RMSe ,Min( MUM ,MUR ) ) ) ) + ( MUC / Min( DS ,( CS / MUR ) ) ) ) ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( MUR + ( DS - CS ) ) ) ,Min( MUM ,MUC ) ) ) ) ,( ( RCSe / RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.10899793974941686}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( DDR - FirstVNF_Mem ) / ( ACS / FirstVNF_RAM_Server ) ) ) ) / PN ) + ( ACS - MDR ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( ARS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( ( RMSe / ( Max( RCSe,DS ) - ( MUC - ( MLU - ( MUR / CS ) ) ) ) ) ,MUM ) / ( Max( MUR,( DS / RCSe ) ) + MUM ) )", "obj1": 0.6752988047808764, "obj2": 0.21065905287032746}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( Min( PN ,PN ) ,MRS ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( RRS / Const ) - MDR ) ) + Min( FirstVNF_Mem ,CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( ( CS - DS ) - ( MUC + MUC ) ),RRSe ) ) ) ) + MUR ) )", "obj1": 0.45219123505976094, "obj2": 0.4150214309722308}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( PN - FirstVNF_Mem_Server ) ) ) ) * Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),DS ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( Max( MLU,MUR ) - MUC ) / RMSe ) ) ) ) + Max( ( MUR / DS ),( Min( RMSe ,MUC ) - ( ( RCSe * ( MUM + RMSe ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7377569125071481}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUM ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.32669322709163345, "obj2": 0.5328657411099601}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ,( Min( FirstVNF_RAM_Server ,BR ) * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Min( RMSe ,MUR ) / ( Max( RRSe,( ( MUM - MUR ) + DS ) ) / ( MUM + Min( CS ,RCSe ) ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4979353804824464}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.4334089613595892}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.025986986580427758}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Min( ARS ,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS + PN ) ) )", "choosing": "Max( ( ( MLU + ( ( ( ( RCSe - RCSe ) / MUM ) * ( RMSe + MUC ) ) - MUC ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2673268518504279}, {"determining": "( Max( ( ARS - ARS ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.8127490039840638, "obj2": 0.1271655828866416}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( Min( PN ,DDR ) ,MRS ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( MUR - MUC ) / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.19721115537848605, "obj2": 0.6836670443139199}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.47808764940239046, "obj2": 0.38462843850820067}, {"determining": "( Min( Max( ( DDR - MRS ),Max( PN,FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / ( ACS * MDR ) ) / MDR ) )", "choosing": "( Max( Max( MUM,( RMSe * MUC ) ),RCSe ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.025986986580427758}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM ) ,ARS ) / DDR ) - ( Min( PN ,( FirstVNF_RAM / ( ( MRS / Max( FirstVNF_RAM,( DDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "Max( ( RCSe * Max( RMSe,( ( ( ( ( DS + RRSe ) / MUC ) / ( RMSe * ( RRSe - MUR ) ) ) / ( MUR - RCSe ) ) - RCSe ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9083665338645418, "obj2": 0.039589338276035974}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7948207171314741, "obj2": 0.13286341292086004}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6752988047808764, "obj2": 0.21065905287032746}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( AMS - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( ( MUM - CS ) - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( ( FirstVNF_RAM / PN ),Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / MUM )", "obj1": 0.5199203187250996, "obj2": 0.3168172244964129}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( FirstVNF_Mem * CRS ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( MUR - MUC ) / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7498378091153552}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( ( MRS - Const ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( RRSe - ( ( RCSe - CS ) / ( ( MUM - MUC ) / ( MLU / CS ) ) ) ) - ( Max( Max( MLU,MUR ),MUC ) + MUC ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.1291930788017474}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( Min( PN ,DDR ) ,MRS ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.28087649402390436, "obj2": 0.5817393517183859}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.5637450199203188, "obj2": 0.2542969485910189}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( DDR - PN ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( PN - DDR ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUR ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.950199203187251, "obj2": 0.022150205691006366}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.30677290836653387, "obj2": 0.5556750250946335}, {"determining": "( Max( CRS,Min( MDR ,( MDR + RRS ) ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( RMSe * RCSe ),( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3466135458167331, "obj2": 0.521179779582132}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( DDR - PN ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,BR ) - DDR ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.3665338645418327, "obj2": 0.4995097407358509}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( BR / ( FirstVNF_RAM_Server + CRS ) ) / Min( PN ,( ( CRS - MDR ) / RRS ) ) ) )", "choosing": "( ( ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) / DS ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( RRSe + MUR ) / RMSe ) ) ) ) + ( ( MUR - DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.0793555255321311}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( ( MUR / DS ) - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.7390438247011952, "obj2": 0.17162469939401617}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6557196846815234}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.3944223107569721, "obj2": 0.46848182961016205}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( AMS + MRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( Min( ( ( ( MUC + RMSe ) / CS ) / RRSe ) ,RRSe ) * MUC ),( ( RRSe + Max( CS,( MUM + MUC ) ) ) / ( MUM * CS ) ) )", "obj1": 0.46215139442231074, "obj2": 0.40545604344638214}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.5358565737051793, "obj2": 0.2891243500761025}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( ACS / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),RMSe )", "obj1": 0.5597609561752988, "obj2": 0.2597226885028373}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ARS * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( MUR - MUC ) / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7411643249223981}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,( MRS * BR ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( MUM - ( RCSe * Min( CS ,Min( Max( RCSe,DS ) ,Max( ( MUM * RRSe ),Max( RRSe,RCSe ) ) ) ) ) ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4556413225010949}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( MRS + PN ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,DS ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.15573688147750636}, {"determining": "( Max( ( BR + ( Min( Max( ACS,( ( FirstVNF_RAM / ARS ) / MDR ) ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( AMS / MRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( RCSe - ( RRSe / ( ( ( RMSe - RRSe ) * ( MUM / DS ) ) / MLU ) ) ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6459312462061558}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.16733666304862568}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.900398406374502, "obj2": 0.049927601429312546}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + Min( ( RRSe + MLU ) ,( RMSe + ( ( MUM - ( RMSe + RMSe ) ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) ) / ( MUM * CS ) ),( Max( DS,MUR ) - RCSe ) )", "obj1": 0.199203187250996, "obj2": 0.6747151072674106}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( Min( ( ( ( FirstVNF_Mem - ( DDR - RRS ) ) + ( ( MRS / AMS ) + PN ) ) - FirstVNF_CPU_Server ) ,ARS ) * ( ACS / ARS ) )", "choosing": "Max( ( ( ( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( Max( RRSe,RRSe ) - ( MUR / RRSe ) ) ) / MLU ) + MLU ) / ( MUM - CS ) ),( ( MUC * RMSe ) / Min( MLU ,MUC ) ) )", "obj1": 0.9900398406374502, "obj2": 0.005117038580661985}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * Max( CRS,Min( ( MDR + RRS ) ,MDR ) ) ) * ( ( Const - MRS ) * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,MUC ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.16135458167330677, "obj2": 0.7253895444955649}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( Min( FirstVNF_Mem_Server ,( AMS + ( CRS * PN ) ) ) - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( CRS - ACS ) )", "choosing": "Max( Max( MUM,RMSe ),( Max( DS,MUM ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6393392070164168}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( PN ,( FirstVNF_RAM / ( ( ARS / AMS ) + PN ) ) ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * Max( ( ( ( MUR / DS ) - MLU ) / Min( MLU ,DS ) ),( Max( DS,DS ) - RCSe ) ) ) ) * Max( ( Max( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( Max( RRSe,RRSe ) - ( MUR / RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / RRSe ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5430852240380856}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( ( Min( MUC ,Min( RRSe ,DS ) ) / DS ) ,RCSe ) * RRSe ) * Min( MLU ,RRSe ) ) + RRSe ) )", "obj1": 0.5358565737051793, "obj2": 0.2891243500761025}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9083665338645418, "obj2": 0.039589338276035974}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6557196846815234}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8645418326693227, "obj2": 0.06828689792489159}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5113479716558971}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_CPU ,MDR ) ) ) * ( PN * CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM / ( RCSe / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.42828685258964144, "obj2": 0.4374274850882815}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( ( FirstVNF_CPU_Server * CRS ) - AMS ) ) - ARS ) ) ) / AMS ) )", "choosing": "( Max( ( RRSe / ( ( Min( RCSe ,( MUC * DS ) ) * MUC ) / ( MUC - Min( RCSe ,DS ) ) ) ),Min( ( ( CS - ( MLU * Max( CS,( RMSe + DS ) ) ) ) + RRSe ) ,MUC ) ) / MUM )", "obj1": 0.16135458167330677, "obj2": 0.7253895444955649}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( MLU + ( MUM - Min( Max( ( Max( RRSe,MLU ) - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ) - Min( ( RMSe + MUC ) ,( Max( DS,DS ) / DS ) ) )", "obj1": 0.5537848605577689, "obj2": 0.26312961217621766}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( ACS - ARS ),( PN - FirstVNF_RAM ) ) ,MDR ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5430852240380856}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Max( ( FirstVNF_Mem - FirstVNF_Mem ),( ( ( ( DDR * ACS ) / FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Min( ( AMS + ACS ) ,DDR ) / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "( Min( MUR ,( RRSe / Max( ( DS + MUR ),MUC ) ) ) - ( ( RMSe + RCSe ) + RCSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4780652117327807}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4556413225010949}, {"determining": "( ( BR * ACS ) * Max( Max( FirstVNF_Mem,( ( ACS * MRS ) / Max( FirstVNF_RAM_Server,( ( ( AMS / FirstVNF_CPU ) / BR ) / Min( PN ,DDR ) ) ) ) ),( ACS - ARS ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / Max( MUR,CS ) ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM - CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5827024636137283}], "21": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,( FirstVNF_CPU_Server / ACS ) ) - Max( ( FirstVNF_RAM / PN ),Const ) ) ) ),( Max( ACS,FirstVNF_RAM_Server ) / AMS ) ) ) - ( FirstVNF_Mem + ( Max( PN,( MRS + AMS ) ) + ARS ) ) )", "choosing": "Max( ( ( ( ( MUR - ( ( ( MUC - MLU ) + ( RCSe * RCSe ) ) / MUC ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( ( ( MLU / MLU ) + DS ) / Min( CS ,MLU ) ) - ( DS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ,ARS ) - Const ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( ( FirstVNF_RAM / ( ( ( ( FirstVNF_CPU - DDR ) / RRS ) / AMS ) + PN ) ) ,PN ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( ( MLU + ( ( MLU / MUM ) / ( RCSe - Min( RRSe ,( CS - RMSe ) ) ) ) ) / ( MUM * CS ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( Min( CRS ,( ARS * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) )", "choosing": "( ( ( MLU + ( MUM - Min( Max( ( Max( RRSe,MLU ) - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ) - Min( ( RMSe + MUC ) ,( Max( Max( ( MUM - ( DS / RRSe ) ),RRSe ),DS ) / DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30110461650024445}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( MUM * CS ) + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3491710349515654}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( ( RRSe + MLU ) ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6892430278884463, "obj2": 0.1926914395512519}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.4900398406374502, "obj2": 0.3767616987300113}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( ACS ,FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( BR - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,CS ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( CS ,MUC ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.3784507461606043}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + ( RMSe * RCSe ) ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.141331367967411}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( MRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_RAM - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / Max( ( ( Max( MUR,RMSe ) + ( DS + CS ) ) / MUR ),MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / ( ( ARS * MRS ) - FirstVNF_Mem ) ) + ( RRS * FirstVNF_Mem ) ),Max( Max( FirstVNF_Mem,Max( BR,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ),CRS ) ) * Min( FirstVNF_CPU_Server ,( BR - PN ) ) )", "choosing": "( ( ( DS - MUM ) + MUM ) / Min( ( CS / ( ( ( ( ( RCSe - RCSe ) - RCSe ) + RCSe ) + MLU ) - CS ) ) ,MUM ) )", "obj1": 0.6434262948207171, "obj2": 0.2246546247175045}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ACS + PN ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS - FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( MLU / ( ( RRSe - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( Min( MUR ,Min( ( RCSe + ( MUC * MLU ) ) ,Min( RCSe ,MUR ) ) ),( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.1874705985116472}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR / ( RCSe + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.14857984771113533}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUR ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.6115537848605578, "obj2": 0.24218393821896697}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( Const ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.5318725099601593, "obj2": 0.29479901107009804}, {"determining": "Max( ( Max( ( BR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.848605577689243, "obj2": 0.10080061052239944}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM / Max( BR,( AMS / FirstVNF_RAM ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,MLU ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( Min( MUR ,( CS - ( RCSe + MUC ) ) ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / ( ACS / MRS ) ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( MRS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( MLU + ( Min( Min( MLU ,( ( RMSe / DS ) / RMSe ) ) ,RRSe ) / MUR ) ) / ( MUM * CS ) ),( DS - RRSe ) )", "obj1": 0.5936254980079682, "obj2": 0.25092343391359345}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( Max( ( ARS - ARS ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + MLU ) / ( MUM * CS ) ),( RRSe + ( ( Max( DS,( Max( ( MUR + CS ),( MUR * DS ) ) + ( RCSe / ( RMSe * RRSe ) ) ) ) * RRSe ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.8127490039840638, "obj2": 0.1271655828866416}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - RCSe ) )", "obj1": 0.9183266932270916, "obj2": 0.03526028452241208}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.5418326693227091, "obj2": 0.28078837989094974}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( AMS + MRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( Min( ( ( ( MUC + RMSe ) / CS ) / RRSe ) ,RRSe ) * MUC ),( ( RRSe + Max( CS,( MUM + MUC ) ) ) / ( MUM * CS ) ) )", "obj1": 0.46215139442231074, "obj2": 0.40545604344638214}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ARS * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( MUR - MUC ) / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / CS ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.7082935607714332}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( DDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,( RMSe + RRSe ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.08003685158993173}, {"determining": "( Max( Max( ( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) + Min( RRS ,( PN / Min( AMS ,MDR ) ) ) ) - MDR ),MRS ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - ( Max( ( RCSe - MLU ),( Min( DS ,MLU ) + Min( RMSe ,Min( MUM ,MUR ) ) ) ) + ( MUC / Min( DS ,( CS / MUR ) ) ) ) ) / Min( ( MLU + ( MUM - Min( Min( ( Min( MUM ,RCSe ) / Min( DS ,MUR ) ) ,( MUR + ( DS - CS ) ) ) ,Min( MUM ,MUC ) ) ) ) ,( ( RCSe / RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.10899793974941686}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10956661466551593}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( RRS / Const ) - MDR ) ) + Min( FirstVNF_Mem ,CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( ( CS - DS ) - ( MUC + MUC ) ),RRSe ) ) ) ) + MUR ) )", "obj1": 0.45219123505976094, "obj2": 0.4150214309722308}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Min( PN ,( FirstVNF_RAM / ( ( ARS / AMS ) + PN ) ) ) ) )", "choosing": "( ( ( ( ( RRSe * MUM ) * DS ) + ( MUM - Min( MUM ,MUR ) ) ) - ( ( RMSe + Max( ( Max( ( RRSe - MUM ),MUR ) * CS ),MLU ) ) * Max( ( ( ( MUR / DS ) - MLU ) / Min( MLU ,DS ) ),( Max( DS,DS ) - RCSe ) ) ) ) * Max( ( Max( Min( ( DS - ( ( MUM / CS ) + MUC ) ) ,( Max( RRSe,RRSe ) - ( MUR / RRSe ) ) ),Max( RRSe,Min( DS ,( RCSe - MUM ) ) ) ) - Min( Min( ( DS * ( MUC / RRSe ) ) ,( ( ( MLU / MLU ) - ( DS - MUR ) ) - MUR ) ) ,RMSe ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.41836301036341234}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - ( MUM * CS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.6664684470647382}, {"determining": "( Min( Max( ( DDR - MRS ),Max( PN,FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / ( ACS * MDR ) ) / MDR ) )", "choosing": "( Max( Max( MUM,( RMSe * MUC ) ),RCSe ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,DS ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.2061130774995203}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + Min( Const ,( FirstVNF_RAM * PN ) ) ) ) ) ) )", "choosing": "Max( Max( RRSe,( MUM + MUC ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.015319152080786234}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( Max( ( ( Min( ( ( CRS - CRS ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ARS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,RCSe ) + DS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2651511739021895}, {"determining": "( Max( CRS,Min( MDR ,Min( MDR ,RRS ) ) ) * ( ( ARS / Max( Max( ( FirstVNF_RAM + MDR ),RRS ),FirstVNF_Mem ) ) + DDR ) )", "choosing": "Max( ( ( RRSe + Max( ( RMSe * RCSe ),( MLU - Max( RCSe,( ( CS + CS ) / RCSe ) ) ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( Min( RMSe ,Max( ( RRSe - ( CS + MUC ) ),RRSe ) ) ,MLU ) ) + RRSe ) )", "obj1": 0.33665338645418325, "obj2": 0.5271327923730899}, {"determining": "( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( ( ( DS + MUM ) / DS ) + MLU ) / ( DS * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "( ( MUR / DS ) / MUM )", "obj1": 0.13545816733067728, "obj2": 0.7575174864614715}, {"determining": "( ( ( Min( ( Max( ( Min( BR ,Const ) + ARS ),( Const * MRS ) ) - ( Min( Min( BR ,MDR ) ,DDR ) - FirstVNF_Mem ) ) ,( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( ( CS * ( CS * MUM ) ) * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3426294820717131, "obj2": 0.5189949573867758}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ,( Min( FirstVNF_RAM_Server ,BR ) * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Min( RMSe ,MUR ) / ( Max( RRSe,( ( MUM - MUR ) + DS ) ) / ( MUM + Min( CS ,RCSe ) ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4979353804824464}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.7290836653386454, "obj2": 0.1798540272674521}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.4243027888446215, "obj2": 0.446943126222693}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( MUR / DS ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6739283190780213}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUM ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.32669322709163345, "obj2": 0.5328657411099601}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.1952191235059761, "obj2": 0.6823052805998525}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( AMS - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( ( MUM - CS ) - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.15338645418326693, "obj2": 0.7273668487782735}, {"determining": "( Min( ( ( DDR - MRS ) * ( PN - FirstVNF_RAM ) ) ,MDR ) + ( Max( CRS,Min( Min( ACS ,DDR ) ,FirstVNF_Mem ) ) - Const ) )", "choosing": "( ( Max( ( Min( MUR ,MUR ) * MUR ),( MUR * MLU ) ) / DS ) / MUM )", "obj1": 0.1593625498007968, "obj2": 0.7228552403271931}, {"determining": "( Max( ( Const + ( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.14741035856573706, "obj2": 0.735586456074486}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( Max( MDR,DDR ) ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / MUM ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.4362549800796813, "obj2": 0.4318746414029961}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.796812749003984, "obj2": 0.12878790026117778}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( MLU + ( DS * RRSe ) ) / ( Min( ( MUM / ( MUC * MLU ) ) ,( DS + CS ) ) * CS ) ),Max( CS,( RMSe + MUC ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( Min( PN ,DDR ) ,MRS ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.28087649402390436, "obj2": 0.5817393517183859}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( ( FirstVNF_RAM / PN ),Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.7928286852589641, "obj2": 0.1313872114221303}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8645418326693227, "obj2": 0.06828689792489159}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / ( FirstVNF_Mem - ARS ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + ( MUM - MUC ) ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.16334661354581673, "obj2": 0.713357813251376}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( ( Min( ( Max( ARS,FirstVNF_Mem ) * MRS ) ,ARS ) / DDR ) - ( ( ( Const - RRS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / BR ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( ( ( Min( MLU ,MUC ) / ( MUM - MUM ) ) * MUC ) * DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.025986986580427758}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * Max( Min( FirstVNF_Mem_Server ,MDR ),CRS ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( Min( ACS ,ACS ) + FirstVNF_Mem ) * CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.30677290836653387, "obj2": 0.5556750250946335}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.25102143217261474}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( FirstVNF_Mem * CRS ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( MUR - MUC ) / RMSe ) ) ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7498378091153552}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( ( FirstVNF_Mem_Server - ACS ) * RRS ) / ( ARS + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RCSe - CS ) + MUC ),RRSe )", "obj1": 0.32270916334661354, "obj2": 0.5389009082817801}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.025986986580427758}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( ACS - ARS ),( PN - FirstVNF_RAM ) ) ,MDR ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5430852240380856}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( ( ( FirstVNF_Mem * CRS ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,MDR ) ) ) * ( ( Const - RRS ) * ( DDR - ACS ) ) ) * FirstVNF_RAM ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * MUC ) ),( Max( DS,Min( MUC ,( RMSe / MUR ) ) ) - RCSe ) )", "obj1": 0.4163346613545817, "obj2": 0.4519946362516452}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem * ( MRS / FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Min( MUR ,Max( RRSe,Max( ( MUR + DS ),MUC ) ) ) - ( ( ( MUR / DS ) / ( ( MUR - Max( ( MUR - MUC ),MUM ) ) - ( ( RCSe * CS ) + ( RRSe / RRSe ) ) ) ) + Min( ( Max( RRSe,MUC ) - MLU ) ,( RRSe + MLU ) ) ) )", "obj1": 0.9482071713147411, "obj2": 0.022847255058647212}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( ( BR + ( Min( Max( ACS,( ( FirstVNF_RAM / ARS ) / MDR ) ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( AMS / MRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( RCSe - ( RRSe / ( ( ( RMSe - RRSe ) * ( MUM / DS ) ) / MLU ) ) ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6459312462061558}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Min( PN ,Max( ( FirstVNF_Mem - FirstVNF_Mem ),( ( ( ( DDR * ACS ) / FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Min( ( AMS + ACS ) ,DDR ) / FirstVNF_RAM ) - ( Const - RRS ) ) ) )", "choosing": "( Min( MUR ,( RRSe / Max( ( DS + MUR ),MUC ) ) ) - ( ( RMSe + RCSe ) + RCSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04267230906382723}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.16222301511213347}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6557196846815234}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.900398406374502, "obj2": 0.04962161937090646}, {"determining": "( Max( CRS,Max( Max( ACS,( ( MRS / ( ARS * PN ) ) + ( RRS / FirstVNF_Mem ) ) ),FirstVNF_Mem ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + MUR ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( DS * MUR ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6855703050257097}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( BR / ( FirstVNF_RAM_Server + CRS ) ) / Min( PN ,( ( CRS - MDR ) / RRS ) ) ) )", "choosing": "( ( ( ( MUR + Min( MUR ,MLU ) ) / RCSe ) / DS ) - ( Min( ( RRSe + MLU ) ,( RMSe + ( MUC - ( ( RRSe + MUR ) / RMSe ) ) ) ) + ( ( MUR - DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.0793555255321311}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.3944223107569721, "obj2": 0.46848182961016205}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( FirstVNF_RAM_Server * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * Min( FirstVNF_Mem ,MRS ) )", "choosing": "( Min( ( ( RCSe + RCSe ) - DS ) ,( ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) / RMSe ) ) / ( ( MUR - ( DS + RCSe ) ) + MUM ) )", "obj1": 0.749003984063745, "obj2": 0.15350085121921464}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.23306772908366533, "obj2": 0.6371974371836885}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5097645316442467}, {"determining": "( Min( ( ( ( FirstVNF_Mem - ( DDR - RRS ) ) + ( ( MRS / AMS ) + PN ) ) - FirstVNF_CPU_Server ) ,ARS ) * ( ACS / ARS ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( Max( ( CS - DS ),Max( ( DS * DS ),RCSe ) ) - MUM ) + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.004905346305077412}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( ( MLU / CS ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.950199203187251, "obj2": 0.02084334494230824}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4780652117327807}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6557196846815234}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( Min( ( ( ( FirstVNF_Mem - ( DDR - RRS ) ) + ( ( MRS / AMS ) + PN ) ) - FirstVNF_CPU_Server ) ,ARS ) * ( ACS / ARS ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.9940239043824701, "obj2": 0.0030702231483971908}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( PN,( DDR - PN ) ) ) * ( ( Max( FirstVNF_RAM_Server,( CRS - ARS ) ) + BR ) * FirstVNF_CPU_Server ) ) * DDR ) + ( FirstVNF_Mem * Min( FirstVNF_Mem ,( PN - DDR ) ) ) )", "choosing": "( ( ( RRSe * ( MUR * ( RRSe / ( ( RMSe * ( MUM / RCSe ) ) + ( MUR - ( CS * MUC ) ) ) ) ) ) - MUR ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016916229274362704}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( MUC + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.46215139442231074, "obj2": 0.40545604344638214}], "22": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem * ( MRS / FirstVNF_RAM ) ) * PN ) ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,( FirstVNF_CPU_Server / ACS ) ) - Max( ( FirstVNF_RAM / PN ),Const ) ) ) ),( Max( ACS,FirstVNF_RAM_Server ) / AMS ) ) ) - ( FirstVNF_Mem + ( Max( PN,( MRS + AMS ) ) + ARS ) ) )", "choosing": "Max( ( ( ( ( MUR - ( ( ( MUC - MLU ) + ( RCSe * RCSe ) ) / MUC ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( ( ( MLU / MLU ) + DS ) / Min( CS ,MLU ) ) - ( DS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ),CRS ) ) * ( ACS - ( RRS / ( FirstVNF_RAM_Server * Const ) ) ) )", "choosing": "( ( MUR - ( ( RCSe - ( MUR / DS ) ) * CS ) ) / ( RMSe - Max( MUM,( DS / ( Min( MUC ,DS ) * MLU ) ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.30950732782091556}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ( FirstVNF_Mem - PN ) - ARS ) )", "choosing": "Max( ( ( RMSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * ( MLU + MUR ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( MUC + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.4800796812749004, "obj2": 0.37501248772770696}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.603585657370518, "obj2": 0.23079641588914215}, {"determining": "( Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( ( CRS - ( FirstVNF_RAM - MRS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "( ( MUR / ( MUC - MLU ) ) / MUR )", "obj1": 0.848605577689243, "obj2": 0.08665930583935479}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.2506664019434827}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( ( RRSe + MLU ) ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6892430278884463, "obj2": 0.1926914395512519}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6354581673306773, "obj2": 0.21407263344195349}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10891999192488727}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( ACS ,FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( BR - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,CS ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( CS ,MUC ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.3784507461606043}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( MRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_RAM - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / Max( ( ( Max( MUR,RMSe ) + ( DS + CS ) ) / MUR ),MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48885245512020015}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / ( MRS / AMS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( ( MUR / DS ) - DS ),Max( ( DS * DS ),RCSe ) ) - MUR ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.5119521912350598, "obj2": 0.2939862518508753}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( ( ( FirstVNF_RAM / ( ACS * MDR ) ) / MDR ) ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( RCSe,RRSe ) ) ) ) + RRSe ) )", "obj1": 0.5338645418326693, "obj2": 0.2932042999943542}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.4243027888446215, "obj2": 0.446943126222693}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.7290836653386454, "obj2": 0.1798540272674521}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ( ( FirstVNF_Mem_Server / DDR ) - ( ( BR / ( FirstVNF_RAM_Server + CRS ) ) / Min( PN ,( ( CRS - MDR ) / RRS ) ) ) ) - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / MLU ) ,RRSe ) * MUC ) )", "obj1": 0.4362549800796813, "obj2": 0.43042869002737405}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( Min( CRS ,( ARS * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) )", "choosing": "( ( ( MLU + ( MUM - Min( Max( ( Max( RRSe,MLU ) - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ) - Min( ( RMSe + MUC ) ,( Max( Max( ( MUM - ( DS / RRSe ) ),RRSe ),DS ) / DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30110461650024445}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8147410358565738, "obj2": 0.11295831613105534}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) / ( FirstVNF_RAM / ARS ) ) ) ) / ( ( MDR - CRS ) - FirstVNF_Mem_Server ) ) + ( RRS * FirstVNF_Mem ) ),Max( Max( DDR,AMS ),CRS ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM + ( DS - ( Min( RRSe ,RMSe ) / ( RRSe + MUR ) ) ) ) / Max( MUR,MLU ) )", "obj1": 0.7729083665338645, "obj2": 0.14797587844095345}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( RMSe + RRSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.07815010763912135}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8007968127490039, "obj2": 0.1267827912705491}, {"determining": "( ( FirstVNF_CPU - MDR ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( RRS * FirstVNF_Mem ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( ( MUM + Max( MUR,Max( RRSe,MLU ) ) ) + ( MUC + MUR ) ) ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5199609584940478}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8645418326693227, "obj2": 0.06828689792489159}, {"determining": "( ( ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUM ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.32669322709163345, "obj2": 0.5328657411099601}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / ( AMS + MRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( Min( ( ( ( MUC + RMSe ) / CS ) / RRSe ) ,RRSe ) * MUC ),( ( RRSe + Max( CS,( MUM + MUC ) ) ) / ( MUM * CS ) ) )", "obj1": 0.46215139442231074, "obj2": 0.40545604344638214}, {"determining": "( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( ( ( DS + MUM ) / DS ) + MLU ) / ( DS * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) ) + MUC ) ) + RMSe ) )", "obj1": 0.7091633466135459, "obj2": 0.19079281844578697}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( RRS / Const ) - MDR ) ) + Min( FirstVNF_Mem ,CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( ( CS - DS ) - ( MUC + MUC ) ),RRSe ) ) ) ) + MUR ) )", "obj1": 0.45219123505976094, "obj2": 0.4150214309722308}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,ACS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25841215366098647}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR / ( RCSe + MUR ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.14857984771113533}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( RRSe + Max( RRSe,( MUM + MUC ) ) ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.2051792828685259, "obj2": 0.6653880948899974}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( Max( ( ( Min( CRS ,( ARS * ( Max( CRS,FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5097645316442467}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3426294820717131, "obj2": 0.515367120949449}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( FirstVNF_RAM_Server * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * Min( FirstVNF_Mem ,MRS ) )", "choosing": "( Min( ( ( RCSe + RCSe ) - DS ) ,( ( ( Min( MUR ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) / RMSe ) ) / ( ( MUR - ( DS + RCSe ) ) + MUM ) )", "obj1": 0.749003984063745, "obj2": 0.15350085121921464}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.15338645418326693, "obj2": 0.7273668487782735}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),Max( CS,( RMSe + DS ) ) )", "obj1": 0.9243027888446215, "obj2": 0.03120524815689549}, {"determining": "( Max( ( BR + ( Min( Max( ACS,( ( FirstVNF_RAM / ARS ) / MDR ) ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( AMS / MRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( RCSe - ( RRSe / ( ( ( RMSe - RRSe ) * ( MUM / DS ) ) / MLU ) ) ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6459312462061558}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.16222301511213347}, {"determining": "( Min( ( ( DDR - MRS ) * ( PN - FirstVNF_RAM ) ) ,MDR ) + ( Max( CRS,Min( Min( ACS ,DDR ) ,FirstVNF_Mem ) ) - Const ) )", "choosing": "( ( Max( ( Min( MUR ,MUR ) * MUR ),( MUR * MLU ) ) / DS ) / MUM )", "obj1": 0.1593625498007968, "obj2": 0.7228552403271931}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( AMS - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( ( MUM - CS ) - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( ( Max( ( ARS + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ACS ) * ( Max( CRS,Max( ( ( FirstVNF_Mem + BR ) / ( ( FirstVNF_RAM - ARS ) / ( DDR + FirstVNF_RAM ) ) ),( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / ( ( MUR - MUC ) / Min( MLU ,CS ) ) ) ) - ( ( ( ( ( MUR / ( MLU + ( RMSe * RCSe ) ) ) - RMSe ) / MLU ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 0.7868525896414342, "obj2": 0.141331367967411}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( Max( ACS,( ACS + ( RRS / ( CRS + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / ( ( MUC + CS ) + MUM ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC / RMSe ) ,( CS + DS ) ) )", "obj1": 0.9721115537848606, "obj2": 0.011384228013134656}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ACS + PN ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS - FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( MLU / ( ( RRSe - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( Min( MUR ,Min( ( RCSe + ( MUC * MLU ) ) ,Min( RCSe ,MUR ) ) ),( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.1874705985116472}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( MLU + ( DS * RRSe ) ) / ( Min( ( MUM / ( MUC * MLU ) ) ,( DS + CS ) ) * CS ) ),Max( CS,( RMSe + MUC ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.16222301511213347}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9083665338645418, "obj2": 0.03958933827603598}, {"determining": "( ( ACS - Min( Max( ( FirstVNF_CPU * MDR ),Min( CRS ,ARS ) ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,BR ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - ( MUM * ( MUC - Max( MUR,RMSe ) ) ) ) / ( ( MUR - MUC ) / ( MLU / MUC ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( DS / RRSe ) ) * DS ) ) ) ) + RRSe ) )", "obj1": 0.547808764940239, "obj2": 0.26815103637235044}, {"determining": "( Max( CRS,( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) ) * ( ACS - MRS ) )", "choosing": "Max( ( ( ( MUR / CS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RMSe,MUM ) - ( RRSe / MUR ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.1952191235059761, "obj2": 0.6823052805998525}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( ( ACS - ( RRS / RRS ) ) * Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( Min( ARS ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( ( ( MUM / ( MUC * DS ) ) - MUR ) ,Max( ( MUR - ( MUC + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.5697211155378487, "obj2": 0.2534548421074238}, {"determining": "( Max( ( ( Min( ( ( ( ARS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,( MUM * CS ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( Min( MUR ,Min( ( RCSe + ( MUC * MLU ) ) ,Min( RCSe ,MUR ) ) ),( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7250996015936255, "obj2": 0.18314678960139436}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( Min( PN ,DDR ) ,MRS ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.28087649402390436, "obj2": 0.5817393517183859}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( ( FirstVNF_Mem_Server - ACS ) * RRS ) / ( ARS + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RCSe - CS ) + MUC ),RRSe )", "obj1": 0.32270916334661354, "obj2": 0.5389009082817801}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.41836301036341234}, {"determining": "( Max( ( ACS + ( Min( Min( Max( ( ACS - ARS ),( PN - FirstVNF_RAM ) ) ,MDR ) ,FirstVNF_RAM ) / FirstVNF_Mem ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5430852240380856}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * Min( PN ,DDR ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) ) ) ) + RRSe ) )", "obj1": 0.4601593625498008, "obj2": 0.40816884292740985}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7045249903341124}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) - ( FirstVNF_RAM / Max( BR,( AMS / FirstVNF_RAM ) ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,MLU ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( Min( MUR ,( CS - ( RCSe + MUC ) ) ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 0.5438247011952191, "obj2": 0.27880243679615735}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( ( ACS - ARS ) * Max( ( ( Min( ( BR * FirstVNF_Mem ) ,( Const / ACS ) ) * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + RRSe ) / ( MUM * CS ) ),( CS + DS ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.23306772908366533, "obj2": 0.6371974371836885}, {"determining": "( Max( ( RRS / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - ARS ) * ( ARS - ACS ) ),( ( Const * RRS ) + ( RRS * FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Max( ( RCSe + ( ( ( ( ( MUC + RRSe ) * ( RMSe * RMSe ) ) + CS ) - ( MUM * MUM ) ) + MUM ) ),( ( ( MUR + ( MUM + RMSe ) ) + RMSe ) * RMSe ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5800561515129357}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( MUR / DS ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.04221020181288512}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6557196846815234}, {"determining": "( Max( CRS,Max( Max( ACS,( ( MRS / ( ARS * PN ) ) + ( RRS / FirstVNF_Mem ) ) ),FirstVNF_Mem ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + MUR ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( DS * MUR ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6855703050257097}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ARS * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.13545816733067728, "obj2": 0.7482227424292163}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.4163346613545817, "obj2": 0.4519946362516452}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,Min( Min( PN ,DDR ) ,MRS ) ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( CS + MUC ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.3147410358565737, "obj2": 0.5502517080767516}, {"determining": "( ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_Mem * CRS ) ) * Min( ACS ,ARS ) )", "choosing": "( ( MUC - RCSe ) / ( MLU + ( MUM - Min( Max( ( MUC - ( ( MUR + DS ) - Min( MUC ,MUR ) ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.42109913814773997}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + Min( Const ,( FirstVNF_RAM * PN ) ) ) ) ) ) )", "choosing": "Max( Max( RRSe,( MUM + MUC ) ),Min( Min( ( MUC + RMSe ) ,( CS + DS ) ) ,( CS + DS ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0040438815837366615}, {"determining": "( ( Min( ( Max( ARS,FirstVNF_Mem ) * MRS ) ,ARS ) / DDR ) - ( ( ( Const - RRS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / BR ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( ( ( Min( MLU ,MUC ) / ( MUM - MUM ) ) * MUC ) * DS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.025986986580427758}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( ( DDR / ( Min( Max( FirstVNF_CPU_Server,Const ) ,MDR ) + CRS ) ) / BR ) ,PN ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( MUR,MUC ) - ( Max( Max( DS,MUM ),MLU ) * MUC ) ) + RMSe ) )", "obj1": 0.8944223107569721, "obj2": 0.052305939130531734}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.5418326693227091, "obj2": 0.28078837989094974}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / ACS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / ( MUR + MLU ) ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.025986986580427758}, {"determining": "( ( ( FirstVNF_Mem * CRS ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_RAM_Server ,MDR ) ) ) * ( ( Const - RRS ) * ( DDR - ACS ) ) ) * FirstVNF_RAM ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * MUC ) ),( Max( DS,Min( MUC ,( RMSe / MUR ) ) ) - RCSe ) )", "obj1": 0.4163346613545817, "obj2": 0.4519946362516452}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( CS + DS ) )", "obj1": 0.20318725099601595, "obj2": 0.6735947572258283}, {"determining": "( Max( ( Const + ( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.14741035856573706, "obj2": 0.735586456074486}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( ( FirstVNF_RAM / PN ),Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.7928286852589641, "obj2": 0.1313872114221303}], "23": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Max( ( ( ( Const / ACS ) * Const ) + ACS ),FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem * ( MRS / FirstVNF_RAM ) ) - PN ) ) )", "choosing": "( ( MUM - ( RCSe + ( ( ( DS * DS ) - ( Max( RMSe,MUR ) + MUM ) ) * MUM ) ) ) - ( ( CS - ( MUR * MUC ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem * ( MRS / FirstVNF_RAM ) ) * PN ) ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / Max( ACS,FirstVNF_RAM ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),( CRS - ( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( ( FirstVNF_CPU_Server + Max( AMS,AMS ) ) / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,Min( RCSe ,MLU ) ) * MLU ) - MUR ) / Max( MUR,DS ) )", "obj1": 0.47808764940239046, "obj2": 0.35764373749943856}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ),CRS ) ) * ( ACS - ( RRS / ( FirstVNF_RAM_Server * Const ) ) ) )", "choosing": "( ( MUR - ( ( RCSe - ( MUR / DS ) ) * CS ) ) / ( RMSe - Max( MUM,( DS / ( Min( MUC ,DS ) * MLU ) ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.30950732782091556}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( ( RRSe + MLU ) ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6892430278884463, "obj2": 0.1926914395512519}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.603585657370518, "obj2": 0.23079641588914215}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.2506664019434827}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + RCSe ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7051792828685259, "obj2": 0.18006306565554003}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( MRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_RAM - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / Max( ( ( Max( MUR,RMSe ) + ( DS + CS ) ) / MUR ),MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( ACS ,FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( BR - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,CS ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( CS ,MUC ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.3784507461606043}, {"determining": "( ( ACS - Min( AMS ,Max( FirstVNF_Mem_Server,MRS ) ) ) * Max( Min( ( ( FirstVNF_RAM / ( ACS * MDR ) ) / MDR ) ,( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( RCSe,RRSe ) ) ) ) + RRSe ) )", "obj1": 0.5338645418326693, "obj2": 0.2932042999943542}, {"determining": "( Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.05432697021131642}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10891999192488727}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.7290836653386454, "obj2": 0.1798540272674521}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( Min( Const ,RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( PN + MDR ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( RMSe + RRSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( ( ( DS - RCSe ) * RMSe ) / CS ) ) ) * Min( MLU ,Min( DS ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUC ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.42231075697211157, "obj2": 0.4443206988769527}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Max( MRS,Max( ARS,DDR ) ) / PN ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RCSe / RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) + CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46215139442231074, "obj2": 0.40469580484123224}, {"determining": "( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( ( ( DS + MUM ) / DS ) + MLU ) / ( DS * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.613892381504236}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.47410358565737054, "obj2": 0.3768867940968067}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( Min( ( ( DDR - MRS ) * ( PN - FirstVNF_RAM ) ) ,MDR ) + ( Max( CRS,Min( Min( ACS ,DDR ) ,FirstVNF_Mem ) ) - Const ) )", "choosing": "( ( Max( ( Min( MUR ,MUR ) * MUR ),( MUR * MLU ) ) / DS ) / MUM )", "obj1": 0.1593625498007968, "obj2": 0.7228552403271931}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( RRS / Const ) - MDR ) ) + Min( FirstVNF_Mem ,CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( ( CS - DS ) - ( MUC + MUC ) ),RRSe ) ) ) ) + MUR ) )", "obj1": 0.45219123505976094, "obj2": 0.4150214309722308}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.14106872424664327}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( RRS * FirstVNF_Mem_Server ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUC ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - ( ( ( MLU / MUR ) - ( ( MUM - RRSe ) * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.6354581673306773, "obj2": 0.21407263344195349}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( ( MUM / ( MUC * MLU ) ) ,( DS + ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ) ) ) * CS ) ),Max( CS,( RMSe + MUC ) ) )", "obj1": 0.9083665338645418, "obj2": 0.039315680497211354}, {"determining": "( Max( ( Const + ( FirstVNF_RAM * PN ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.14741035856573706, "obj2": 0.735586456074486}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8007968127490039, "obj2": 0.1267827912705491}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ),Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.43227091633466136, "obj2": 0.4326838304728788}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6354581673306773, "obj2": 0.21407263344195349}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) / ( FirstVNF_RAM / ARS ) ) ) ) / ( ( MDR - CRS ) - FirstVNF_Mem_Server ) ) + ( RRS * FirstVNF_Mem ) ),Max( Max( DDR,AMS ),CRS ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM + ( DS - ( Min( RRSe ,RMSe ) / ( RRSe + MUR ) ) ) ) / Max( MUR,MLU ) )", "obj1": 0.7729083665338645, "obj2": 0.14797587844095345}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.950199203187251, "obj2": 0.019856955895714175}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3426294820717131, "obj2": 0.515367120949449}, {"determining": "( ( FirstVNF_Mem_Server / Min( MRS ,( DDR / FirstVNF_CPU ) ) ) - Max( Const,( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( DS / MUR ) ) / ( DS * CS ) ),( Max( Max( RRSe,Min( Max( MUM,MUM ) ,( MUM * Min( CS ,MLU ) ) ) ),DS ) - RCSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6789072830236694}, {"determining": "( ( ACS - Min( Max( ( FirstVNF_CPU * MDR ),Min( CRS ,ARS ) ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,BR ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - ( MUM * ( MUC - Max( MUR,RMSe ) ) ) ) / ( ( MUR - MUC ) / ( MLU / MUC ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( DS / RRSe ) ) * DS ) ) ) ) + RRSe ) )", "obj1": 0.547808764940239, "obj2": 0.26815103637235044}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.15338645418326693, "obj2": 0.7273668487782735}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( Max( ( ( Min( Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( MRS * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS + FirstVNF_RAM ),( ACS - ARS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( RMSe - CS ) - ( Min( MUR ,( DS + CS ) ) * CS ) )", "obj1": 0.5378486055776892, "obj2": 0.279792952131436}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,Min( RCSe ,RCSe ) ) - Max( ( RRSe / MUM ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5555358982672395}, {"determining": "( Max( ( ( Min( ( ( ( ARS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,( MUM * CS ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( Min( MUR ,Min( ( RCSe + ( MUC * MLU ) ) ,Min( RCSe ,MUR ) ) ),( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16760893365248855}, {"determining": "( Max( CRS,( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) ) * ( ACS - MRS ) )", "choosing": "Max( ( ( ( MUR / CS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RMSe,MUM ) - ( RRSe / MUR ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48885245512020015}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( RRSe + Max( RRSe,( MUM + MUC ) ) ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.2051792828685259, "obj2": 0.6653880948899974}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( CRS - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) - ( MDR + FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( RCSe ,( RMSe * MLU ) ) * CS ) ),Max( ( Max( ( Max( RCSe,DS ) * MUM ),CS ) + DS ),CS ) )", "obj1": 0.9223107569721115, "obj2": 0.031895700960065484}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.8565737051792829, "obj2": 0.07395225999386316}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( ACS / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,( ACS + ( RRS / ( MRS / AMS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Max( ( ( MUR / DS ) - DS ),Max( ( DS * DS ),RCSe ) ) / MUR ) ) * ( ( Max( Max( Max( MUM,CS ),( MUM - DS ) ),DS ) - CS ) / MUC ) ) ) / Max( MUR,DS ) )", "obj1": 0.5119521912350598, "obj2": 0.2939862518508753}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ),Min( FirstVNF_Mem_Server ,MDR ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2968127490039841, "obj2": 0.570782530292462}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( MLU + ( DS * RRSe ) ) / ( Min( ( MUM / ( MUC * MLU ) ) ,( DS + CS ) ) * CS ) ),Max( CS,( RMSe + MUC ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( ( FirstVNF_CPU_Server - ARS ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * MLU ) + Max( RRSe,( ( DS * MLU ) + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( FirstVNF_RAM_Server / ARS ) / ( MRS - FirstVNF_Mem ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( PN / RRS ) ) )", "choosing": "( Min( RMSe ,( RMSe / ( ( MUC - ( ( MUR / CS ) - MLU ) ) - ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) ) ) ) / ( MUR + ( RCSe * MUM ) ) )", "obj1": 0.7430278884462151, "obj2": 0.15717590566538708}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM / ARS ) ) ) ) / ( ( ARS * MRS ) - FirstVNF_Mem ) ) + ( RRS * FirstVNF_Mem ) ),Max( Max( FirstVNF_Mem,Max( BR,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ),CRS ) ) * ( ACS - ( ( ACS - ARS ) / RRS ) ) )", "choosing": "( ( ( DS - ( Min( RRSe ,( MUM - ( MUC + MUC ) ) ) / ( MLU + MUR ) ) ) + MUM ) / Min( MUM ,( CS / ( ( CS + MUM ) - CS ) ) ) )", "obj1": 0.8087649402390438, "obj2": 0.11911897678950456}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 0.5438247011952191, "obj2": 0.27880243679615735}, {"determining": "( ( Min( CRS ,( ARS * ( Max( CRS,( ( BR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) ) / PN ) * ( ACS - ( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "( ( MUR + ( MUR + Max( MUR,( MLU + CS ) ) ) ) - Min( ( RMSe + MUC ) ,( Max( Max( ( MUM - ( DS / RRSe ) ),RRSe ),DS ) / DS ) ) )", "obj1": 0.5557768924302788, "obj2": 0.2659195744366532}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - Max( Max( FirstVNF_CPU_Server,MRS ),Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( DS / RRSe ) + MLU ) / Max( RMSe,Max( MUR,RCSe ) ) ),Min( ( MUC / RMSe ) ,( CS + DS ) ) )", "obj1": 0.9641434262948207, "obj2": 0.015219586701366646}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10891999192488727}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ACS - ARS ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / ( MRS / AMS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Max( RRSe,( MUM + MUC ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.5079681274900398, "obj2": 0.2962911343784383}, {"determining": "( ( AMS + Min( ( RRS + ( FirstVNF_Mem_Server * Min( CRS ,FirstVNF_RAM_Server ) ) ) ,Max( Min( Min( RRS ,FirstVNF_CPU ) ,BR ),FirstVNF_Mem_Server ) ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,AMS ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / MDR ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + ( MUR + CS ) ) / ( ( ( ( MUR / DS ) + RCSe ) / ( MUM * CS ) ) + MLU ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48885245512020015}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( ( RRS / FirstVNF_CPU ) * Min( DDR ,PN ) )", "choosing": "Max( ( ( RRSe + Max( ( MUC + Min( Min( CS ,MUM ) ,MUM ) ),RRSe ) ) / ( MUM * CS ) ),( ( MUM * ( MUR - MLU ) ) + MUR ) )", "obj1": 0.4601593625498008, "obj2": 0.40622005754173374}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( ( FirstVNF_Mem_Server - ACS ) * RRS ) / ( ARS + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - ( ( DDR + ARS ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RCSe - CS ) + MUC ),RRSe )", "obj1": 0.32270916334661354, "obj2": 0.5389009082817801}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / Max( MDR,ACS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25841215366098647}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + Const ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) ) ) + ( Max( Min( MUR ,Min( ( RCSe + ( MUC * MLU ) ) ,Min( RCSe ,MUR ) ) ),( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7908366533864541, "obj2": 0.13542289599570492}, {"determining": "( Max( ( Max( FirstVNF_RAM,Max( DDR,( FirstVNF_RAM_Server * ( ( Const / FirstVNF_CPU_Server ) * MDR ) ) ) ) / AMS ),CRS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM - CS ) ),( Max( Max( MUM,( Max( RRSe,( DS + RCSe ) ) * ( ( CS * MUR ) / RCSe ) ) ),CS ) / CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6212768951318175}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - Max( ( FirstVNF_RAM / PN ),Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.7928286852589641, "obj2": 0.1313872114221303}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( ( ACS - ARS ) * Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( Min( ACS ,FirstVNF_CPU_Server ) / ( ( ACS + AMS ) - ( Min( FirstVNF_Mem ,ARS ) + Const ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MLU * ( Min( RRSe ,CS ) - ( MUC * Min( Min( ( MUR / CS ) ,( MUC / RCSe ) ) ,( Max( MUC,MLU ) - MUM ) ) ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.900398406374502, "obj2": 0.04929257339330166}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( Max( ( RRS / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - ARS ) * ( ARS - ACS ) ),( ( Const * RRS ) + ( RRS * FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Max( ( RCSe + ( ( ( ( ( MUC + RRSe ) * ( RMSe * RMSe ) ) + CS ) - ( MUM * MUM ) ) + MUM ) ),( ( ( MUR + ( MUM + RMSe ) ) + RMSe ) * RMSe ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5800561515129357}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( RCSe * MUR ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.21115537848605578, "obj2": 0.6592091686962025}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ( ( FirstVNF_Mem_Server / DDR ) - ( ( BR / ( FirstVNF_RAM_Server + CRS ) ) / Min( PN ,( ( CRS - MDR ) / RRS ) ) ) ) - ARS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / MLU ) ,RRSe ) * MUC ) )", "obj1": 0.4362549800796813, "obj2": 0.43042869002737405}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8147410358565738, "obj2": 0.11295831613105534}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ARS * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.13545816733067728, "obj2": 0.7482227424292163}, {"determining": "( Max( ( ( ARS - FirstVNF_RAM ) / ( ( FirstVNF_Mem / FirstVNF_RAM ) * DDR ) ),( BR + Min( MDR ,( AMS * AMS ) ) ) ) * MRS )", "choosing": "Max( ( ( ( ( Min( MUM ,CS ) / ( MUR + Max( RRSe,( MUM + DS ) ) ) ) / DS ) + MLU ) / ( MUM * ( ( MLU - ( RCSe / RCSe ) ) / ( CS + MUC ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6215148534307913}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.6434653340148506}, {"determining": "( ( Min( ( MRS + BR ) ,ARS ) / ( ARS / RRS ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( Min( Const ,( FirstVNF_RAM * PN ) ) + ( MRS / AMS ) ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( DS ,( DS - RCSe ) ) ) ) - ( ( ( RRSe + MLU ) - ( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.9800796812749004, "obj2": 0.007170340085100249}, {"determining": "( ( CRS / ( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MDR * RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - ARS ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( RMSe + DS ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( MUM / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.33266932270916333, "obj2": 0.5283811148362101}, {"determining": "( ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_Mem * CRS ) ) * Min( ACS ,ARS ) )", "choosing": "( ( MUC - RCSe ) / ( MLU + ( MUM - Min( Max( ( MUC - ( ( MUR + DS ) - Min( MUC ,MUR ) ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.42109913814773997}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( RRS * FirstVNF_Mem ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5199609584940478}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.23306772908366533, "obj2": 0.6371974371836885}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( ( ACS - ( RRS / RRS ) ) * Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( Min( ARS ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) * CRS ) ) ) )", "choosing": "( ( ( MLU + ( MUM - Min( Max( ( Max( RRSe,MLU ) - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ) - Min( ( RMSe + MUC ) ,( Max( Max( ( MUM - ( DS / RRSe ) ),RRSe ),DS ) / DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30110461650024445}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( MUR / DS ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6739283190780213}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM / ARS ) ) ) ) / ( ( ARS * MRS ) - FirstVNF_Mem ) ) + ( RRS * FirstVNF_Mem ) ),Max( Max( FirstVNF_Mem,Max( BR,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ),CRS ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - ( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) + MUM ) / Min( MUM ,( CS / ( ( CS + MUM ) - CS ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.14839423333316182}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4791541012929396}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( Max( ( RRS / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - ARS ) * ( ARS - ACS ) ),( ( Const * RRS ) + ( RRS * FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Max( ( RCSe + ( ( ( ( ( MUC + RRSe ) * ( RMSe * RMSe ) ) + CS ) - ( MUM * MUM ) ) + MUM ) ),( ( ( MUR + ( MUM + RMSe ) ) + RMSe ) * RMSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5827024636137283}], "24": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( Min( ( MRS + BR ) ,ARS ) / ( ARS / RRS ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( Min( Const ,( FirstVNF_RAM * PN ) ) + ( MRS / AMS ) ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Max( ( ( ( Const / ACS ) * Const ) + ACS ),FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem * ( MRS / FirstVNF_RAM ) ) - PN ) ) )", "choosing": "( ( MUM - ( RCSe + ( ( ( DS * DS ) - ( Max( RMSe,MUR ) + MUM ) ) * MUM ) ) ) - ( ( CS - ( MUR * MUC ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / Max( ACS,FirstVNF_RAM ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),( CRS - ( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( ( FirstVNF_CPU_Server + Max( AMS,AMS ) ) / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,Min( RCSe ,MLU ) ) * MLU ) - MUR ) / Max( MUR,DS ) )", "obj1": 0.47808764940239046, "obj2": 0.35764373749943856}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ),CRS ) ) * ( ACS - ( RRS / ( FirstVNF_RAM_Server * Const ) ) ) )", "choosing": "( ( MUR - ( ( RCSe - ( MUR / DS ) ) * CS ) ) / ( RMSe - Max( MUM,( DS / ( Min( MUC ,DS ) * MLU ) ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.30950732782091556}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( ACS + FirstVNF_RAM ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.5079681274900398, "obj2": 0.29281437239473296}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( Max( ACS,FirstVNF_CPU ),( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ARS ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.24086935195344397}, {"determining": "( Max( ( ( Min( Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( MRS * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS + FirstVNF_RAM ),( ACS - ARS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( RMSe - CS ) - ( Min( MUR ,( DS + CS ) ) * CS ) )", "obj1": 0.5378486055776892, "obj2": 0.279792952131436}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( ( FirstVNF_RAM_Server / MDR ),Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( ( Min( ( ( CRS - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) / RRS ) ) )", "choosing": "( ( ( MUR - ( DS * RCSe ) ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - RMSe ) * RRSe ) ) ) - ( CS - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.14375201867960935}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + RCSe ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7051792828685259, "obj2": 0.18006306565554003}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUM - Min( Max( ( MUM - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( DS,DS ) + DS ) ) )", "obj1": 0.8565737051792829, "obj2": 0.07395225999386316}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( MRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_RAM - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / Max( ( ( Max( MUR,RMSe ) + ( DS + CS ) ) / MUR ),MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( ( RRSe + MLU ) ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6892430278884463, "obj2": 0.1926914395512519}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( FirstVNF_RAM + ACS ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( ( Min( RMSe ,RRSe ) * ( RCSe / ( ( MUR + MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.17467800574903847}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( ACS ,FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( BR - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,CS ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( CS ,MUC ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.3784507461606043}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.14106872424664327}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9462151394422311, "obj2": 0.021284296235443666}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( Min( Const ,RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( PN + MDR ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( RMSe + RRSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( ( ( DS - RCSe ) * RMSe ) / CS ) ) ) * Min( MLU ,Min( DS ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUC ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.42231075697211157, "obj2": 0.4443206988769527}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( RRS / Const ) - MDR ) ) + Min( FirstVNF_Mem ,CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( ( CS - DS ) - ( MUC + MUC ) ),RRSe ) ) ) ) + MUR ) )", "obj1": 0.45219123505976094, "obj2": 0.4150214309722308}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10891999192488727}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( MLU + ( DS * RRSe ) ) / ( Min( ( MUM / ( MUC * MLU ) ) ,( DS + CS ) ) * CS ) ),Max( CS,( RMSe + MUC ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.43227091633466136, "obj2": 0.4299291838823128}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( Max( MDR,ACS ) * FirstVNF_Mem ) ) * ( ( Const - PN ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( ( Max( Const,PN ) - ( FirstVNF_RAM - MRS ) ) + ( MRS / Const ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( Min( RCSe ,MUR ) / RRSe ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),( ( MUC * RCSe ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48810870649030536}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Max( MRS,Max( ARS,DDR ) ) / PN ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RCSe / RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) + CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46215139442231074, "obj2": 0.40469580484123224}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( MRS / AMS ) / Min( PN ,( DDR / FirstVNF_RAM ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ),CRS ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * ( Max( DS,RMSe ) - MUM ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.04335411506687602}, {"determining": "( Max( ( ( Min( ( ( ( ARS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,( MUM * CS ) ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( Min( MUR ,Min( ( RCSe + ( MUC * MLU ) ) ,Min( RCSe ,MUR ) ) ),( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16760893365248855}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( ( ACS - ( RRS / RRS ) ) * Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( Min( ARS ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) * CRS ) ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.749003984063745, "obj2": 0.15621453264439}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( DS ,( DS - RCSe ) ) ) ) - ( ( ( RRSe + MLU ) - ( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.7868525896414342, "obj2": 0.12702531179192642}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * Min( PN ,DDR ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,( ( MUM * DS ) + Max( RRSe,( MUM + MUC ) ) ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5442134676950776}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36254980079681276, "obj2": 0.49932495797904575}, {"determining": "( ( FirstVNF_Mem_Server / Min( MRS ,( DDR / FirstVNF_CPU ) ) ) - Max( Const,( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( DS / MUR ) ) / ( DS * CS ) ),( Max( Max( RRSe,Min( Max( MUM,MUM ) ,( MUM * Min( CS ,MLU ) ) ) ),DS ) - RCSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6789072830236694}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.8007968127490039, "obj2": 0.1267827912705491}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( FirstVNF_Mem_Server * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( DDR / CRS ),MDR ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - MUM ) + ( MUR - Min( RRSe ,( RRSe / RRSe ) ) ) ) / Min( MUM ,( RMSe / ( ( RMSe * DS ) - CS ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.2234657789309148}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6354581673306773, "obj2": 0.21407263344195349}, {"determining": "( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MLU * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - RMSe ) )", "obj1": 0.8864541832669323, "obj2": 0.055023000547453085}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( ( RRSe + MLU ) ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6932270916334662, "obj2": 0.18945290370864298}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.47410358565737054, "obj2": 0.3768867940968067}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - MUC ) - RMSe ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,DS ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.11614362600815052}, {"determining": "( ( Min( ( PN + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem * ( MRS / FirstVNF_RAM ) ) * PN ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),Max( CS,( Max( ( Max( ( MUM / RRSe ),MUM ) * DS ),CS ) + DS ) ) )", "obj1": 0.9223107569721115, "obj2": 0.031895700960065484}, {"determining": "( Max( CRS,( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) ) * ( ACS - MRS ) )", "choosing": "Max( ( ( ( MUR / CS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RMSe,MUM ) - ( RRSe / MUR ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ARS ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( FirstVNF_CPU,( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - ( MLU / RRSe ) ) + MUM ) / Min( MUM ,( DS / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.2506664019434827}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( FirstVNF_RAM_Server / ARS ) / ( MRS - FirstVNF_Mem ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( PN / RRS ) ) )", "choosing": "( Min( RMSe ,( RMSe / ( ( MUC - ( ( MUR / CS ) - MLU ) ) - ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) ) ) ) / ( MUR + ( RCSe * MUM ) ) )", "obj1": 0.7430278884462151, "obj2": 0.15717590566538708}, {"determining": "( ( ACS - Min( Max( ( FirstVNF_CPU * MDR ),Min( CRS ,ARS ) ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,BR ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - ( MUM * ( MUC - Max( MUR,RMSe ) ) ) ) / ( ( MUR - MUC ) / ( MLU / MUC ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( DS / RRSe ) ) * DS ) ) ) ) + RRSe ) )", "obj1": 0.547808764940239, "obj2": 0.26815103637235044}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6369712698346394}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( ( ARS / DDR ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( ( RRS / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,Max( ( ( FirstVNF_Mem - ARS ) * ( ARS - ACS ) ),( ( Const * RRS ) + ( RRS * FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Max( ( RCSe + ( ( ( ( ( MUC + RRSe ) * ( RMSe * RMSe ) ) + CS ) - ( MUM * MUM ) ) + MUM ) ),( ( ( MUR + ( MUM + RMSe ) ) + RMSe ) * RMSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5827024636137283}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( RRS / ( CRS + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.9661354581673307, "obj2": 0.013987683174797486}, {"determining": "( Max( ( RRS / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / FirstVNF_CPU ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,( Max( FirstVNF_RAM,PN ) + ( RRS + ( DDR * FirstVNF_CPU ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( DS / ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) ) + MLU ) / ( MUM * CS ) ),Max( ( RCSe + Max( ( RMSe * ( Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) - Max( CS,RMSe ) ) ),MUM ) ),( ( ( MUR + ( MUM + CS ) ) + RMSe ) * RMSe ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5774281504813473}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5653669629162726}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( ( ARS * PN ) / MRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( ( MRS + MDR ),DDR ) / ( FirstVNF_Mem / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( MLU * MUC ) + MUR ) ,( Min( RRSe ,RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6180432570486712}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.32669322709163345, "obj2": 0.530271242728445}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS / Min( DDR ,AMS ) ) ) * ( MDR / ( Const / ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( MLU / ( ( MUR / DS ) + MLU ) ) ) * CS ) ),( Min( RCSe ,RMSe ) - ( RMSe / RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7207071265614803}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 0.5438247011952191, "obj2": 0.27880243679615735}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( PN,PN ) - ( Const / CRS ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS / ( ( BR + RRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( CS * ( DS - CS ) ) / ( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) * ( Min( RRSe ,CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5592272789932057}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( RRS * FirstVNF_Mem ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5199609584940478}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,Min( RCSe ,RCSe ) ) - Max( ( RRSe / MUM ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5555358982672395}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + ( Min( Const ,CRS ) / FirstVNF_CPU ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( MLU + DS ),( Max( DS,MUR ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10891999192488727}, {"determining": "( Max( ( ( ARS - FirstVNF_RAM ) / ( ( FirstVNF_Mem / FirstVNF_RAM ) * DDR ) ),( BR + Min( MDR ,( AMS * AMS ) ) ) ) * MRS )", "choosing": "Max( ( ( ( ( Min( MUM ,CS ) / ( MUR + Max( RRSe,( MUM + DS ) ) ) ) / DS ) + MLU ) / ( MUM * ( ( MLU - ( RCSe / RCSe ) ) / ( CS + MUC ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6215148534307913}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.6434653340148506}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3426294820717131, "obj2": 0.515367120949449}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( CRS - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) - ( MDR + FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( RCSe ,( RMSe * MLU ) ) * CS ) ),Max( ( Max( ( Max( RCSe,DS ) * MUM ),CS ) + DS ),CS ) )", "obj1": 0.9223107569721115, "obj2": 0.031895700960065484}, {"determining": "( ( RRS / FirstVNF_CPU ) * Min( DDR ,PN ) )", "choosing": "Max( ( ( RRSe + Max( ( MUC + Min( Min( CS ,MUM ) ,MUM ) ),RRSe ) ) / ( MUM * CS ) ),( ( MUM * ( MUR - MLU ) ) + MUR ) )", "obj1": 0.4601593625498008, "obj2": 0.40622005754173374}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( RRS * FirstVNF_Mem_Server ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUC ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - ( ( ( MLU / MUR ) - ( ( MUM - RRSe ) * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.6354581673306773, "obj2": 0.21407263344195349}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RRSe,MLU ) - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6582739937925356}, {"determining": "( ( Min( CRS ,( ARS * ( Max( CRS,( ( BR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) ) / PN ) * ( ACS - ( FirstVNF_RAM_Server / RRS ) ) )", "choosing": "( ( MUR + ( MUR + Max( MUR,( MLU + CS ) ) ) ) - Min( ( RMSe + MUC ) ,( Max( Max( ( MUM - ( DS / RRSe ) ),RRSe ),DS ) / DS ) ) )", "obj1": 0.5557768924302788, "obj2": 0.2659195744366532}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.26294820717131473, "obj2": 0.6036657909466304}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) / ( MUM * CS ) ) / ( MUM - CS ) ),( MLU + ( ( RMSe + RRSe ) / RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5268940987624168}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( Max( ( ( Min( ( ( ( ARS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( MUR - MUC ) / DS ) + MLU ) / ( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) / Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.5059760956175299, "obj2": 0.2996453656597307}, {"determining": "( Max( CRS,Min( MDR ,BR ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - ( ( RRS * FirstVNF_Mem ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3426294820717131, "obj2": 0.515367120949449}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( RCSe * MUR ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.9123505976095617, "obj2": 0.03681492928816731}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ),( MRS / AMS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - ( MUR / DS ) ) )", "obj1": 0.26095617529880477, "obj2": 0.6075223946045348}, {"determining": "( ( FirstVNF_CPU_Server - ARS ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * MLU ) + Max( RRSe,( ( DS * MLU ) + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + Min( Const ,( DDR * PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( MUM * CS ) ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.9800796812749004, "obj2": 0.007170340085100249}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( MUR / DS ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6739283190780213}, {"determining": "( ( Min( ( MRS + BR ) ,ARS ) / ( ARS / RRS ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( Min( Const ,( FirstVNF_RAM * PN ) ) + ( MRS / AMS ) ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( DS ,( DS - RCSe ) ) ) ) - ( ( ( RRSe + MLU ) - ( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.9800796812749004, "obj2": 0.007170340085100249}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( MUC - CS ) * ( MUR + CS ) ) ) / Min( CS ,( MUM + DS ) ) ) ) ,MLU ) * ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0040438815837366615}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.42109913814773997}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4791541012929396}, {"determining": "( Max( ( ( Min( Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( Min( ( CS / MLU ) ,RRSe ) * MUC ) )", "obj1": 0.5657370517928287, "obj2": 0.25665570228972384}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 0.4362549800796813, "obj2": 0.42355440324947335}], "25": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ARS / ( Max( PN,( Const + ( Min( Const ,CRS ) / FirstVNF_CPU ) ) ) + ARS ) ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( Max( DS,MUR ) - Min( MUM ,RCSe ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + BR ) ,ARS ) / ( ARS / RRS ) ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( Min( Const ,( FirstVNF_RAM * PN ) ) + ( MRS / AMS ) ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Max( MRS,Max( ARS,DDR ) ) / PN ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RCSe / RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) + CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46215139442231074, "obj2": 0.40469580484123224}, {"determining": "( Max( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ),( ( Min( ( PN * CRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * MRS ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM * RRSe ) - ( Min( ( MUC - RCSe ) ,( CS + DS ) ) * CS ) )", "obj1": 0.4820717131474104, "obj2": 0.32865040835736264}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( PN / ARS ) ) / DDR ) - ( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUM * CS ) / ( ( MUR / RMSe ) + MLU ) ),( Max( DS,DS ) - ( Max( MLU,DS ) / ( MUM / ( ( MUR - Max( ( RRSe * RRSe ),MLU ) ) + ( MUR + ( Min( MUM ,RRSe ) - ( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10722190790510022}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( ( ( DDR + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) / Min( BR ,MRS ) ) ) * MRS )", "choosing": "( ( ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) / ( Min( MUM ,RCSe ) * RRSe ) ) - ( Min( Max( RRSe,MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( RRSe - ( MUR * CS ) ) + RCSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7379842323435265}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + RCSe ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7051792828685259, "obj2": 0.18006306565554003}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( MRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_RAM - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / Max( ( ( Max( MUR,RMSe ) + ( DS + CS ) ) / MUR ),MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS / Min( DDR ,AMS ) ) ) * ( MDR / ( Const / ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( MLU / ( ( MUR / DS ) + MLU ) ) ) * CS ) ),( Min( RCSe ,RMSe ) - ( RMSe / RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7207071265614803}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( MUR / DS ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6739283190780213}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.14106872424664327}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.5258964143426295, "obj2": 0.28892982796579564}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( FirstVNF_RAM + ACS ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( ( Min( RMSe ,RRSe ) * ( RCSe / ( ( MUR + MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.17467800574903847}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( FirstVNF_CPU,( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - ( MLU / RRSe ) ) + MUM ) / Min( MUM ,( DS / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.2506664019434827}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( MRS / AMS ) / Min( PN ,( DDR / FirstVNF_RAM ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ),CRS ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * ( Max( DS,RMSe ) - MUM ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.04335411506687602}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RRSe,MLU ) - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6582739937925356}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( MLU + ( DS * RRSe ) ) / ( Min( ( MUM / ( MUC * MLU ) ) ,( DS + CS ) ) * CS ) ),Max( CS,( RMSe + MUC ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( Max( MDR,ACS ) * FirstVNF_Mem ) ) * ( ( Const - PN ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( ( Max( Const,PN ) - ( FirstVNF_RAM - MRS ) ) + ( MRS / Const ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( Min( RCSe ,MUR ) / RRSe ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),( ( MUC * RCSe ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48810870649030536}, {"determining": "( Max( ( ( Min( Max( ( ( FirstVNF_Mem - BR ) * ( ARS - ACS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( ( Const + CRS ) * ( BR / PN ) ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( RRSe + Max( ( MUM + ( Min( MUC ,( DS * MUC ) ) * ( ( MLU / DS ) * RMSe ) ) ),RRSe ) ) / ( MUM * CS ) ),( Min( ( CS / MLU ) ,RRSe ) * MUC ) )", "obj1": 0.5936254980079682, "obj2": 0.24687051719539124}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MLU * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - RMSe ) )", "obj1": 0.8864541832669323, "obj2": 0.055023000547453085}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Const - RRS ) - ( Max( ACS,( ACS + ( RRS + ( CRS + MDR ) ) ) ) / Min( FirstVNF_RAM ,MDR ) ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( RCSe * ( RCSe * CS ) ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9442231075697212, "obj2": 0.022948689863306317}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( Min( Const ,RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( PN + MDR ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( RMSe + RRSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( ( ( DS - RCSe ) * RMSe ) / CS ) ) ) * Min( MLU ,Min( DS ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUC ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.42231075697211157, "obj2": 0.4443206988769527}, {"determining": "( FirstVNF_Mem_Server * Max( DDR,( ( Min( FirstVNF_Mem_Server ,MDR ) + ( ( PN + PN ) - FirstVNF_CPU ) ) - ARS ) ) )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( ( ( MUR / DS ) + MLU ) * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( MUM,( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( Max( ( ( Min( ( ( DDR - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( MUR - MUC ) / DS ) + MLU ) / ( MUM * CS ) ),( ( ( ( MLU - ( RCSe / RCSe ) ) + MUR ) / Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.5039840637450199, "obj2": 0.29750422327771336}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - MRS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( ( RRSe + MLU ) ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6892430278884463, "obj2": 0.1926914395512519}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36254980079681276, "obj2": 0.49932495797904575}, {"determining": "( ( FirstVNF_Mem_Server / Min( MRS ,( DDR / FirstVNF_CPU ) ) ) - Max( Const,( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( DS / MUR ) ) / ( DS * CS ) ),( Max( Max( RRSe,Min( Max( MUM,MUM ) ,( MUM * Min( CS ,MLU ) ) ) ),DS ) - RCSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6789072830236694}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( ACS + FirstVNF_RAM ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7629482071713147, "obj2": 0.14375201867960935}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM / ( RRS / ( Const + ARS ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - ( MUM * CS ) ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.6932270916334662, "obj2": 0.18793318268646672}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( ( MUM / RRSe ) * MUR ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.8067729083665338, "obj2": 0.11317922492235186}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( Max( CRS,( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) ) * ( ACS - MRS ) )", "choosing": "Max( ( ( ( MUR / CS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RMSe,MUM ) - ( RRSe / MUR ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server - ( ( RRS - MRS ) / MDR ) ) ) * ( ( Const - RRS ) * MDR ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + Max( DS,( MUM / Min( MLU ,RCSe ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( RRS / Const ) - MDR ) ) + Min( FirstVNF_Mem ,CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( ( CS - DS ) - ( MUC + MUC ) ),RRSe ) ) ) ) + MUR ) )", "obj1": 0.45219123505976094, "obj2": 0.4150214309722308}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - ( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) - ( Min( MUR ,( CS + DS ) ) * CS ) )", "obj1": 0.7589641434262948, "obj2": 0.15449254811017893}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( FirstVNF_Mem_Server * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( DDR / CRS ),MDR ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - MUM ) + ( MUR - Min( RRSe ,( RRSe / RRSe ) ) ) ) / Min( MUM ,( RMSe / ( ( RMSe * DS ) - CS ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.2234657789309148}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( ( FirstVNF_RAM_Server / RRS ) ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 0.545816733067729, "obj2": 0.27684531371031845}, {"determining": "( ( ( ( BR * Min( ( PN - ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( Max( MUM,( ( ( MUM * RMSe ) - MLU ) * DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8924302788844621, "obj2": 0.05250353491204347}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( FirstVNF_RAM_Server / ARS ) / ( MRS - FirstVNF_Mem ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( PN / RRS ) ) )", "choosing": "( Min( RMSe ,( RMSe / ( ( MUC - ( ( MUR / CS ) - MLU ) ) - ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) ) ) ) / ( MUR + ( RCSe * MUM ) ) )", "obj1": 0.7430278884462151, "obj2": 0.15717590566538708}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6369712698346394}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.2649402390438247, "obj2": 0.6025879422461644}, {"determining": "( ( ( AMS * ( FirstVNF_Mem_Server * MRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) + ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - ( RRSe * Min( ( MUR / ( ( RMSe - CS ) * MUM ) ) ,CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4338824607142388}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( RCSe * MUR ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.9123505976095617, "obj2": 0.03681492928816731}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( Max( ACS,FirstVNF_CPU ),( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ARS ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.24086935195344397}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.32669322709163345, "obj2": 0.530271242728445}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( MUC - CS ) * ( MUR + CS ) ) ) / Min( CS ,( MUM + DS ) ) ) ) ,MLU ) * ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0040438815837366615}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( CRS - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) - ( MDR + FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( RCSe ,( RMSe * MLU ) ) * CS ) ),Max( ( Max( ( Max( RCSe,DS ) * MUM ),CS ) + DS ),CS ) )", "obj1": 0.9223107569721115, "obj2": 0.031895700960065484}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( Max( ( RRS / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / FirstVNF_CPU ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_Mem,( Max( FirstVNF_RAM,PN ) + ( RRS + ( DDR * FirstVNF_CPU ) ) ) ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( DS / ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) ) + MLU ) / ( MUM * CS ) ),Max( ( RCSe + Max( ( RMSe * ( Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) - Max( CS,RMSe ) ) ),MUM ) ),( ( ( MUR + ( MUM + CS ) ) + RMSe ) * RMSe ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5774281504813473}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( MUR / DS ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.48804780876494025, "obj2": 0.30950732782091556}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( ACS + FirstVNF_RAM ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.5079681274900398, "obj2": 0.29281437239473296}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( ( ACS - Min( Max( ( FirstVNF_CPU * MDR ),Min( CRS ,ARS ) ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,BR ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - ( MUM * ( MUC - Max( MUR,RMSe ) ) ) ) / ( ( MUR - MUC ) / ( MLU / MUC ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( DS / RRSe ) ) * DS ) ) ) ) + RRSe ) )", "obj1": 0.547808764940239, "obj2": 0.26815103637235044}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( MUR / DS ) + Max( ( MUR + ( ( RCSe * MUR ) + MLU ) ),MUC ) ) - RCSe ) )", "obj1": 0.7908366533864541, "obj2": 0.11575942518155947}, {"determining": "( ( ACS - ( FirstVNF_RAM / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + Max( ( MUM / RRSe ),MUM ) ) ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5405899770482765}, {"determining": "( Max( ( ( Min( Max( ( ( FirstVNF_Mem - BR ) * ( ACS - ARS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.21447729319000058}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * DDR ) / ( ARS - FirstVNF_RAM ) ),( MRS / AMS ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.22709163346613545, "obj2": 0.6434653340148506}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3426294820717131, "obj2": 0.515367120949449}, {"determining": "( ( RRS / FirstVNF_CPU ) * Min( DDR ,PN ) )", "choosing": "Max( ( ( RRSe + Max( ( MUC + Min( Min( CS ,MUM ) ,MUM ) ),RRSe ) ) / ( MUM * CS ) ),( ( MUM * ( MUR - MLU ) ) + MUR ) )", "obj1": 0.4601593625498008, "obj2": 0.40622005754173374}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( ( MUR / ( CS + RRSe ) ) + RRSe ),RRSe ) ) - ( MUM * CS ) ),( Min( ( Min( Min( RRSe ,MLU ) ,MUC ) / ( RCSe / MUC ) ) ,MUR ) + ( RMSe / DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.230194496781457}, {"determining": "( ( ACS - ARS ) * ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MDR ) / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / Min( MUM ,CS ) ),( RCSe - Min( ( MUR - ( MLU * RMSe ) ) ,Max( Max( RCSe,( ( RMSe + DS ) - ( ( MUR - MLU ) - MUR ) ) ),MUR ) ) ) )", "obj1": 0.448207171314741, "obj2": 0.4206811434147919}, {"determining": "( ( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / DDR ) ) - ( ( RRS * FirstVNF_Mem ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * ( MUR * MUC ) ) ) ) / ( MUM * CS ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5491913748546225}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server / ARS ) ) / DDR ) - ( ( Max( PN,( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.8187250996015937, "obj2": 0.10854580632699107}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6354581673306773, "obj2": 0.21407263344195349}, {"determining": "( ( FirstVNF_CPU_Server - ARS ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * MLU ) + Max( RRSe,( ( DS * MLU ) + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( DS ,( DS - RCSe ) ) ) ) - ( ( ( RRSe + MLU ) - ( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.7868525896414342, "obj2": 0.12702531179192642}, {"determining": "( ( ARS / DDR ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( RRS / ( CRS + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.9661354581673307, "obj2": 0.013987683174797486}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) / ( MUM * CS ) ) / ( MUM - CS ) ),( MLU + ( ( RMSe + RRSe ) / RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5268940987624168}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3426294820717131, "obj2": 0.515367120949449}, {"determining": "( ( ACS - ( RRS / RRS ) ) * Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( Min( ARS ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) * CRS ) ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.749003984063745, "obj2": 0.15621453264439}, {"determining": "( ( ( ( Max( ACS,( ACS + ( RRS / ( CRS + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / ( PN * ( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) - ( FirstVNF_CPU_Server - ( BR + ( AMS + ( FirstVNF_RAM - ARS ) ) ) ) )", "choosing": "Max( ( ( RRSe + Min( Max( Max( Max( MLU,( CS / RMSe ) ),Min( Min( MUM ,RCSe ) ,MUR ) ),Min( ( ( MUC / CS ) * ( MUR + MLU ) ) ,MUR ) ) ,( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.9661354581673307, "obj2": 0.013987683174797486}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( MUR / DS ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.7948207171314741, "obj2": 0.11383720157282032}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( ( ARS * PN ) / MRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( ( MRS + MDR ),DDR ) / ( FirstVNF_Mem / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( MLU * MUC ) + MUR ) ,( Min( RRSe ,RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6180432570486712}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) / RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( ACS ,FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( BR - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.5637450199203188, "obj2": 0.2542969485910189}, {"determining": "( Max( ( Const + ( Min( Min( PN ,DDR ) ,MRS ) * ( ACS + BR ) ) ),ACS ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( Min( RCSe ,RCSe ) * RRSe ) * Min( MLU ,MUM ) ) + RRSe ) )", "obj1": 0.3565737051792829, "obj2": 0.5029226626274746}, {"determining": "( ( ( ( ( Max( PN,( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( RCSe * MUR ) + ( MUM - DS ) ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6547749593032841}, {"determining": "( Max( ( ( ARS - FirstVNF_RAM ) / ( ( FirstVNF_Mem / FirstVNF_RAM ) * DDR ) ),( BR + Min( MDR ,( AMS * AMS ) ) ) ) * MRS )", "choosing": "Max( ( ( ( ( Min( MUM ,CS ) / ( MUR + Max( RRSe,( MUM + DS ) ) ) ) / DS ) + MLU ) / ( MUM * ( ( MLU - ( RCSe / RCSe ) ) / ( CS + MUC ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6215148534307913}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ARS ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( DS ,( DS - RCSe ) ) ) ) - ( ( ( RRSe + MLU ) - ( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.7868525896414342, "obj2": 0.12702531179192642}, {"determining": "( Max( ( ( Min( ( ( ( ARS - BR ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( MUR - MUC ) / DS ) + MLU ) / ( MUM * CS ) ),( ( ( ( MLU / MLU ) + Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) / Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2617111973294353}, {"determining": "( ( Min( ( PN + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem * ( MRS / FirstVNF_RAM ) ) * PN ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( CS + DS ) ) * CS ) ),Max( CS,( Max( ( Max( ( MUM / RRSe ),MUM ) * DS ),CS ) + DS ) ) )", "obj1": 0.9223107569721115, "obj2": 0.031895700960065484}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),( BR * Const ) ) * ( ( ( ARS / Max( FirstVNF_CPU_Server,ACS ) ) + ( FirstVNF_RAM_Server * ARS ) ) - ( ( PN / Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( MDR,BR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) ) / RRS ) ) )", "choosing": "( Min( ( ( MUC - MUM ) / MUC ) ,Max( CS,MUR ) ) / ( ( RCSe + ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7310756972111554, "obj2": 0.16834325122735064}], "26": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + ( MUR / DS ) ) + ( Min( Min( RRSe ,RRSe ) ,Min( RCSe ,RCSe ) ) - Max( ( RRSe / MUM ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( Max( PN,( Const + ( Min( Const ,CRS ) / FirstVNF_CPU ) ) ) + ARS ) ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( Max( DS,MUR ) - Min( MUM ,RCSe ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7410358565737052, "obj2": 0.13200530144369543}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Max( MRS,Max( ARS,DDR ) ) / PN ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RCSe / RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) + CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46215139442231074, "obj2": 0.40469580484123224}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( ( Max( Max( Max( ( ( MRS * MDR ) - ARS ),( CRS - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Max( ( ( MLU + Min( ( RCSe - RRSe ) ,Min( ( MUM + DS ) ,MUM ) ) ) * DS ),RCSe ) / ( ( ( RRSe - RMSe ) / RCSe ) - MLU ) ),( ( ( MUR / DS ) + Max( ( MUR + Min( ( Min( MUC ,CS ) / RRSe ) ,MLU ) ),MUC ) ) - RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.12280468200590243}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( ARS,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / DS ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.31272078929278796}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( ( ( AMS * ( FirstVNF_Mem_Server * MRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) + ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - ( RRSe * Min( ( MUR / ( ( RMSe - CS ) * MUM ) ) ,CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4338824607142388}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( PN / ARS ) ) / DDR ) - ( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUM * CS ) / ( ( MUR / RMSe ) + MLU ) ),( Max( DS,DS ) - ( Max( MLU,DS ) / ( MUM / ( ( MUR - Max( ( RRSe * RRSe ),MLU ) ) + ( MUR + ( Min( MUM ,RRSe ) - ( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10722190790510022}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( MUC - CS ) * ( MUR + CS ) ) ) / Min( CS ,( MUM + DS ) ) ) ) ,MLU ) * ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0040438815837366615}, {"determining": "( ( ( DDR + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) / Min( BR ,MRS ) ) ) * MRS )", "choosing": "( ( ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) / ( Min( MUM ,RCSe ) * RRSe ) ) - ( Min( Max( RRSe,MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( RRSe - ( MUR * CS ) ) + RCSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7379842323435265}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + RCSe ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7051792828685259, "obj2": 0.18006306565554003}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( MRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_RAM - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / Max( ( ( Max( MUR,RMSe ) + ( DS + CS ) ) / MUR ),MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( ( ( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( CS + DS ) ) )", "obj1": 0.2649402390438247, "obj2": 0.6025879422461644}, {"determining": "( ( ACS - ARS ) * ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MDR ) / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / Min( MUM ,CS ) ),( RCSe - Min( ( MUR - ( MLU * RMSe ) ) ,Max( Max( RCSe,( ( RMSe + DS ) - ( ( MUR - MLU ) - MUR ) ) ),MUR ) ) ) )", "obj1": 0.448207171314741, "obj2": 0.4206811434147919}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),( BR * Const ) ) * ( ( ( ARS / Max( FirstVNF_CPU_Server,ACS ) ) + ( FirstVNF_RAM_Server * ARS ) ) - ( ( PN / Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( MDR,BR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) ) / RRS ) ) )", "choosing": "( Min( ( ( MUC - MUM ) / MUC ) ,Max( CS,MUR ) ) / ( ( RCSe + ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7310756972111554, "obj2": 0.16834325122735064}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.5258964143426295, "obj2": 0.28892982796579564}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( Max( MDR,ACS ) * FirstVNF_Mem ) ) * ( ( Const - PN ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( ( Max( Const,PN ) - ( FirstVNF_RAM - MRS ) ) + ( MRS / Const ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( Min( RCSe ,MUR ) / RRSe ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),( ( MUC * RCSe ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48810870649030536}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MLU * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - RMSe ) )", "obj1": 0.8864541832669323, "obj2": 0.055023000547453085}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( FirstVNF_RAM + ACS ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( ( Min( RMSe ,RRSe ) * ( RCSe / ( ( MUR + MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.17467800574903847}, {"determining": "( ( ARS / DDR ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5368648868403003}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server - ( ( RRS - MRS ) / MDR ) ) ) * ( ( Const - RRS ) * MDR ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + Max( DS,( MUM / Min( MLU ,RCSe ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( Min( Const ,RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( PN + MDR ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( RMSe + RRSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( ( ( DS - RCSe ) * RMSe ) / CS ) ) ) * Min( MLU ,Min( DS ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUC ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.42231075697211157, "obj2": 0.4443206988769527}, {"determining": "( Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ARS ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( ( MUR / ( CS + RRSe ) ) + RRSe ),RRSe ) ) - ( MUM * CS ) ),( Min( ( Min( Min( RRSe ,MLU ) ,MUC ) / ( RCSe / MUC ) ) ,MUR ) + ( RMSe / DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.230194496781457}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "( ( MUR - MUC ) / Min( ( MUR + Min( RRSe ,( RCSe / MUC ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.8605577689243028, "obj2": 0.074280518254761}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( Const / FirstVNF_CPU_Server ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( RRS / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( ( RRSe + MLU ) ,Max( CS,Max( DS,RCSe ) ) ) * ( RCSe / ( ( MUR - CS ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( ( MUR - ( DS * RCSe ) ) + MUM ) )", "obj1": 0.6892430278884463, "obj2": 0.1926914395512519}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( ( Min( ( PN + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( Min( MUR ,( CS + DS ) ) * CS ) )", "obj1": 0.9581673306772909, "obj2": 0.0169662350924368}, {"determining": "( ( CRS - ( ( ( ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) / ( RRS / ( Const + ARS ) ) ) - ( FirstVNF_Mem_Server / DDR ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) / ( ( MUR / DS ) / ( ( ( ( MLU + ( MUR / DS ) ) / ( MUM * CS ) ) + ( ( MLU / ( MUC / DS ) ) / MUR ) ) - ( MUM - MUM ) ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.02644425519501739}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.031209821205718743}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( Max( CRS,( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) ) * ( ACS - MRS ) )", "choosing": "Max( ( ( ( MUR / CS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RMSe,MUM ) - ( RRSe / MUR ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) ) - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.8466135458167331, "obj2": 0.07982400438735744}, {"determining": "( Max( Max( CRS,( PN / ( AMS * MDR ) ) ),Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),Max( ACS,Max( FirstVNF_Mem,CRS ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( Max( RCSe,DS ) * DS ) + Max( ( MUM + MUC ),RRSe ) ) / ( MUM * CS ) ) + RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( MUM + RRSe ) ) / ( ( RRSe * CS ) - CS ) ) ) ) ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.5099557855535212}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6369712698346394}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Const - RRS ) - ( Max( ACS,( ACS + ( RRS + ( CRS + MDR ) ) ) ) / Min( FirstVNF_RAM ,MDR ) ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( RCSe * ( RCSe * CS ) ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.9442231075697212, "obj2": 0.022948689863306317}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( RRS / Const ) - MDR ) ) + Min( FirstVNF_Mem ,CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( ( CS - DS ) - ( MUC + MUC ) ),RRSe ) ) ) ) + MUR ) )", "obj1": 0.45219123505976094, "obj2": 0.4150214309722308}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( FirstVNF_Mem_Server * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( DDR / CRS ),MDR ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - MUM ) + ( MUR - Min( RRSe ,( RRSe / RRSe ) ) ) ) / Min( MUM ,( RMSe / ( ( RMSe * DS ) - CS ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.2234657789309148}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( MLU + ( DS * RRSe ) ) / ( Min( ( MUM / ( MUC * MLU ) ) ,( DS + CS ) ) * CS ) ),Max( CS,( RMSe + MUC ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / MUC ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.9661354581673307, "obj2": 0.013987683174797485}, {"determining": "( ( DDR - CRS ) * ( ACS - ( RRS / ( FirstVNF_CPU_Server * AMS ) ) ) )", "choosing": "( Min( ( Min( RCSe ,RMSe ) / MUR ) ,( DS / Max( MLU,RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.545816733067729, "obj2": 0.2751380710630912}, {"determining": "( ( ( ( BR * Min( ( PN - ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( Max( MUM,( ( ( MUM * RMSe ) - MLU ) * DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8924302788844621, "obj2": 0.05250353491204347}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - MRS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( RCSe * MUR ) + MLU ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.9123505976095617, "obj2": 0.03681492928816731}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5069893457963788}, {"determining": "( Max( ( ( Min( ( ( ( ARS - BR ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + PN ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( MUR - MUC ) / DS ) + MLU ) / ( MUM * CS ) ),( ( ( ( MLU / MLU ) + Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUM ) - CS ) ) ) / Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.50199203187251, "obj2": 0.301564143013005}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - RMSe ) )", "obj1": 0.20916334661354583, "obj2": 0.6615497018826828}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.32669322709163345, "obj2": 0.530271242728445}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.28286852589641437, "obj2": 0.579048668422759}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5219223936229274}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + ( ( CRS - FirstVNF_RAM ) / RRS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( ( MUM / RRSe ) * Max( RCSe,DS ) ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.8087649402390438, "obj2": 0.11124714763573096}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS / Min( DDR ,AMS ) ) ) * ( MDR / ( Const / ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( MLU / ( ( MUR / DS ) + MLU ) ) ) * CS ) ),( Min( RCSe ,RMSe ) - ( RMSe / RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7207071265614803}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( Max( ACS,FirstVNF_CPU ),( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ARS ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.24086935195344397}, {"determining": "( ( ( FirstVNF_RAM_Server / RRS ) - Max( MDR,ARS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( Max( ( RMSe * MUR ),DS ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS * RRSe ) ),( CS - ( DS * DS ) ) ) ) ) ) + RRSe ) )", "obj1": 0.300796812749004, "obj2": 0.5663725054156412}, {"determining": "( Max( ( ( Min( ( ( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( FirstVNF_RAM + ACS ) )", "choosing": "Max( ( ( RRSe + ( RMSe + RRSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUC - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MLU * Max( MUR,CS ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.30677290836653387, "obj2": 0.561502386674686}, {"determining": "( Max( ( ( Min( ( ( ( RRS + CRS ) + ARS ) - Const ) ,( ARS * ( ( CRS - DDR ) - ( FirstVNF_RAM_Server - ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ( ( DDR * ACS ) / AMS ) ),( FirstVNF_RAM + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( MUM + ( ( CS + MUM ) / ( RRSe + MLU ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.24838617346410355}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RRSe,MLU ) - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6701810085811641}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( ( ARS * PN ) / MRS ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ARS * ( Max( ( MRS + MDR ),DDR ) / ( FirstVNF_Mem / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "( ( MUR - MUC ) / Min( ( ( MLU * MUC ) + MUR ) ,( Min( RRSe ,RRSe ) / ( MLU + MUR ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6180432570486712}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( ACS + FirstVNF_RAM ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Min( MUR ,RRSe ) * ( RCSe / ( ( MUM - CS ) * RRSe ) ) ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.5079681274900398, "obj2": 0.29281437239473296}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( Max( ( ( ARS - FirstVNF_RAM ) / ( ( FirstVNF_Mem / FirstVNF_RAM ) * DDR ) ),( BR + Min( MDR ,( AMS * AMS ) ) ) ) * MRS )", "choosing": "Max( ( ( ( ( Min( MUM ,CS ) / ( MUR + Max( RRSe,( MUM + DS ) ) ) ) / DS ) + MLU ) / ( MUM * ( ( MLU - ( RCSe / RCSe ) ) / ( CS + MUC ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6215148534307913}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * Min( ( CRS * FirstVNF_CPU_Server ) ,( CRS + Max( MDR,Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) / ( ARS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ),( MRS / AMS ) ) * MRS )", "choosing": "Max( ( ( MLU + ( ( MUM + ( Min( CS ,CS ) / RMSe ) ) / ( MLU + RRSe ) ) ) / ( MUM * CS ) ),( Max( DS,MUR ) - RCSe ) )", "obj1": 0.22111553784860558, "obj2": 0.6402268977434993}, {"determining": "( Max( ( ( Min( Max( ( ( FirstVNF_Mem - BR ) * ( ARS - ACS ) ),( ( Const * RRS ) + ( RRS / FirstVNF_Mem ) ) ) ,( ARS * ( ( CRS - DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ( ( Const + CRS ) * ( BR / PN ) ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( RRSe + Max( ( MUM + ( Min( MUC ,( DS * MUC ) ) * ( ( MLU / DS ) * RMSe ) ) ),RRSe ) ) / ( MUM * CS ) ),( Min( ( CS / MLU ) ,RRSe ) * MUC ) )", "obj1": 0.5936254980079682, "obj2": 0.24687051719539124}, {"determining": "( ( RRS / FirstVNF_CPU ) * Min( DDR ,PN ) )", "choosing": "Max( ( ( RRSe + Max( ( MUC + Min( Min( CS ,MUM ) ,MUM ) ),RRSe ) ) / ( MUM * CS ) ),( ( MUM * ( MUR - MLU ) ) + MUR ) )", "obj1": 0.4601593625498008, "obj2": 0.40622005754173374}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( MRS / AMS ) / Min( PN ,( DDR / FirstVNF_RAM ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ),CRS ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * ( Max( DS,RMSe ) - MUM ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.04335411506687602}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - Min( FirstVNF_Mem_Server ,AMS ) ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_CPU / ARS ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( DS - DS ) + MLU ) / RMSe ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.16533864541832669, "obj2": 0.7207071265614803}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( FirstVNF_CPU,( ( FirstVNF_Mem - FirstVNF_CPU ) + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - ( MLU / RRSe ) ) + MUM ) / Min( MUM ,( DS / ( ( DS * DS ) - CS ) ) ) )", "obj1": 0.5737051792828686, "obj2": 0.2506664019434827}, {"determining": "( ( ACS - Min( Max( ( FirstVNF_CPU * MDR ),Min( CRS ,ARS ) ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,BR ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - ( MUM * ( MUC - Max( MUR,RMSe ) ) ) ) / ( ( MUR - MUC ) / ( MLU / MUC ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( DS / RRSe ) ) * DS ) ) ) ) + RRSe ) )", "obj1": 0.547808764940239, "obj2": 0.26815103637235044}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( MUM / DS ) - RCSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7034784853676549}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6354581673306773, "obj2": 0.21407263344195349}, {"determining": "( ( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / DDR ) ) - ( ( RRS * FirstVNF_Mem ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * ( MUR * MUC ) ) ) ) / ( MUM * CS ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5491913748546225}, {"determining": "( ( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / DDR ) ) - ( ( RRS * FirstVNF_Mem ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * ( MUR * MUC ) ) ) ) / ( MUM * CS ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5491913748546225}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) / ( MUM * CS ) ) / ( MUM - CS ) ),( MLU + ( ( RMSe + RRSe ) / RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5268940987624168}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( MUR / DS ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.04221020181288512}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( RRS / ( CRS + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.9661354581673307, "obj2": 0.013987683174797485}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36254980079681276, "obj2": 0.49932495797904575}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / ARS ) + ( PN / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * RRSe ) / ( MUR + ( MUM * RCSe ) ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( RMSe ,( RRSe * MUM ) ) )", "obj1": 0.18725099601593626, "obj2": 0.684334053505289}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) - RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( RRS + ( MDR + MRS ) ) ) - Max( CRS,( ( BR - FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) ) ),( ( ( MRS + CRS ) - FirstVNF_Mem_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( DS ,RMSe ),( ( ( ( RCSe - CS ) / ( ( ( CS * CS ) - MUC ) / Max( CS,MLU ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( RMSe / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.5557768924302788, "obj2": 0.2652483430094875}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - ( MUM * CS ) ) - ( ( CS - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.6932270916334662, "obj2": 0.18793318268646672}, {"determining": "( ( Min( FirstVNF_CPU_Server ,RRS ) - ( FirstVNF_RAM / ( PN * FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MLU ,DS ) * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * CS ) + ( MUR / Max( MUM,Max( RMSe,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( ( FirstVNF_RAM - MRS ) / Min( PN ,MDR ) ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( ( MUR / ( MUR - RCSe ) ) + MLU ) / Min( CS ,MUM ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8665338645418327, "obj2": 0.06757491647795194}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - ( MRS / Const ) ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( MUR / DS ) + Max( ( MUR + ( Min( RMSe ,DS ) / RRSe ) ),MUC ) ) - RCSe ) )", "obj1": 0.796812749003984, "obj2": 0.11133738197950016}, {"determining": "( FirstVNF_Mem_Server * Max( DDR,( ( Min( FirstVNF_Mem_Server ,MDR ) + ( ( PN + PN ) - FirstVNF_CPU ) ) - ARS ) ) )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( ( ( MUR / DS ) + MLU ) * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( MUM,( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( ( FirstVNF_Mem_Server / Min( MRS ,( DDR / FirstVNF_CPU ) ) ) - Max( Const,( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( DS / MUR ) ) / ( DS * CS ) ),( Max( Max( RRSe,Min( Max( MUM,MUM ) ,( MUM * Min( CS ,MLU ) ) ) ),DS ) - RCSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6789072830236694}], "27": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ( MDR - FirstVNF_CPU ) - PN ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) - ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + ( MUR / DS ) ) + ( Min( Min( RRSe ,RRSe ) ,Min( RCSe ,RCSe ) ) - Max( ( RRSe / MUM ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( ( FirstVNF_CPU * Min( PN ,CRS ) ) - FirstVNF_RAM ) / ARS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUR - RRSe ) - ( ( ( MUR + MLU ) - Min( RMSe ,( ( MUR * DS ) * MUR ) ) ) + RMSe ) )", "obj1": 0.7410358565737052, "obj2": 0.13122834634769914}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( ( Max( Max( Max( ( ( MRS * MDR ) - ARS ),( CRS - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Max( ( ( MLU + Min( ( RCSe - RRSe ) ,Min( ( MUM + DS ) ,MUM ) ) ) * DS ),RCSe ) / ( ( ( RRSe - RMSe ) / RCSe ) - MLU ) ),( ( ( MUR / DS ) + Max( ( MUR + Min( ( Min( MUC ,CS ) / RRSe ) ,MLU ) ),MUC ) ) - RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.12280468200590243}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Max( MRS,Max( ARS,DDR ) ) / PN ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RCSe / RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) + CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46215139442231074, "obj2": 0.40469580484123224}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_RAM ) ) - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( CS + ( DS / ( RRSe * MLU ) ) ),MUC ) ) - ( CS + MLU ) ) + RMSe ) )", "obj1": 0.6892430278884463, "obj2": 0.18320082255045414}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( PN / ARS ) ) / DDR ) - ( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUM * CS ) / ( ( MUR / RMSe ) + MLU ) ),( Max( DS,DS ) - ( Max( MLU,DS ) / ( MUM / ( ( MUR - Max( ( RRSe * RRSe ),MLU ) ) + ( MUR + ( Min( MUM ,RRSe ) - ( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10722190790510022}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( MRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_RAM - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / Max( ( ( Max( MUR,RMSe ) + ( DS + CS ) ) / MUR ),MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( ( Const - Const ) * ( ACS - ( ( DDR + BR ) / RRS ) ) )", "choosing": "( Max( Min( RCSe ,( ( DS - Max( MUM,( ( RMSe + RCSe ) / ( MLU - CS ) ) ) ) + Min( Min( ( DS / CS ) ,MUM ) ,CS ) ) ),RRSe ) / Min( ( RMSe / ( ( Max( RRSe,Max( ( RMSe - RCSe ),( RCSe * RCSe ) ) ) * DS ) - CS ) ) ,Max( CS,( RMSe + MUC ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.21334054944577283}, {"determining": "( Min( CRS ,( ( AMS / PN ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUM - ( MUM * CS ) ) - ( ( Max( Max( CS,( RMSe * MLU ) ),( ( DS / DS ) - RCSe ) ) - ( MUR + MUC ) ) + RMSe ) )", "obj1": 0.7370517928286853, "obj2": 0.1644577589247605}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + ( MUR / MUM ) ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7051792828685259, "obj2": 0.17767699084468883}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( Max( ACS,FirstVNF_CPU ),( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ARS ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.24086935195344397}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - ( MRS / Const ) ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( MUR / DS ) + Max( ( MUR + ( Min( RMSe ,DS ) / RRSe ) ),MUC ) ) - RCSe ) )", "obj1": 0.796812749003984, "obj2": 0.11133738197950016}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( ARS,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / DS ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.31272078929278796}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_CPU,ACS ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( ACS + FirstVNF_RAM ) ) ) ) / PN ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_Mem_Server / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - Max( DDR,( MRS + Const ) ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Min( MUR ,RRSe ) * ( RCSe / ( CS - ( RMSe + MUC ) ) ) ) ) * ( MUC * MUR ) ) ) / Max( MUR,DS ) )", "obj1": 0.5079681274900398, "obj2": 0.2926934188889563}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( FirstVNF_RAM + ACS ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( ( Min( RMSe ,RRSe ) * ( RCSe / ( ( MUR + MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.17467800574903847}, {"determining": "( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MLU * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - RMSe ) )", "obj1": 0.8864541832669323, "obj2": 0.055023000547453085}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5069893457963788}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - MRS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( ( ( DDR + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) / Min( BR ,MRS ) ) ) * MRS )", "choosing": "( ( ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) / ( Min( MUM ,RCSe ) * RRSe ) ) - ( Min( Max( RRSe,MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( RRSe - ( MUR * CS ) ) + RCSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7379842323435265}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( FirstVNF_Mem_Server * Max( DDR,( ( Min( FirstVNF_Mem_Server ,MDR ) + ( ( PN + PN ) - FirstVNF_CPU ) ) - ARS ) ) )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( ( ( MUR / DS ) + MLU ) * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( MUM,( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.42568403112962055}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( ( ( AMS * ( FirstVNF_Mem_Server * MRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) + ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - ( RRSe * Min( ( MUR / ( ( RMSe - CS ) * MUM ) ) ,CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4338824607142388}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( RCSe * DS ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.1593625498007968, "obj2": 0.7281157931573186}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.5258964143426295, "obj2": 0.28892982796579564}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server - ( ( RRS - MRS ) / MDR ) ) ) * ( ( Const - RRS ) * MDR ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + Max( DS,( MUM / Min( MLU ,RCSe ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.26095617529880477, "obj2": 0.6011045033159232}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( Max( CRS,( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) ) * ( ACS - MRS ) )", "choosing": "Max( ( ( ( MUR / CS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RMSe,MUM ) - ( RRSe / MUR ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( Max( Max( CRS,( PN / ( AMS * MDR ) ) ),Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),Max( ACS,Max( FirstVNF_Mem,CRS ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( Max( RCSe,DS ) * DS ) + Max( ( MUM + MUC ),RRSe ) ) / ( MUM * CS ) ) + RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( MUM + RRSe ) ) / ( ( RRSe * CS ) - CS ) ) ) ) ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.5099557855535212}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( FirstVNF_Mem_Server * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( DDR / CRS ),MDR ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - MUM ) + ( MUR - Min( RRSe ,( RRSe / RRSe ) ) ) ) / Min( MUM ,( RMSe / ( ( RMSe * DS ) - CS ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.2234657789309148}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( RRS / Const ) - MDR ) ) + Min( FirstVNF_Mem ,CRS ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ),( ( ( ( MUM - RCSe ) * RRSe ) * Min( MLU ,Min( RMSe ,Max( ( ( CS - DS ) - ( MUC + MUC ) ),RRSe ) ) ) ) + MUR ) )", "obj1": 0.45219123505976094, "obj2": 0.4150214309722308}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6678629070988135}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Max( ( ( MLU + ( DS * RRSe ) ) / ( Min( ( MUM / ( MUC * MLU ) ) ,( DS + CS ) ) * CS ) ),Max( CS,( RMSe + MUC ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6883550916895782}, {"determining": "( ( CRS + CRS ) * Min( ACS ,( RRS / RRS ) ) )", "choosing": "( ( MUR - ( ( MUM * MUR ) * ( RMSe * RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.5717131474103586, "obj2": 0.25040100410935084}, {"determining": "( ( ( ( BR * Min( ( PN - ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( Max( MUM,( ( ( MUM * RMSe ) - MLU ) * DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8924302788844621, "obj2": 0.05250353491204347}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( ( MUR / ( CS + RRSe ) ) + RRSe ),RRSe ) ) - ( MUM * CS ) ),( Min( ( Min( Min( RRSe ,MLU ) ,MUC ) / ( RCSe / MUC ) ) ,MUR ) + ( RMSe / DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.230194496781457}, {"determining": "( Max( ( ( Min( ( ARS * MDR ) ,( ( Max( RRS,MRS ) - FirstVNF_RAM ) / RRS ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,( ACS + ( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) * MUM ) / Min( MUM ,( ( Max( MUC,Min( MUM ,RMSe ) ) / ( RRSe - ( CS + MLU ) ) ) / ( ( Min( RRSe ,( MUC / RCSe ) ) * DS ) - CS ) ) ) )", "obj1": 0.5836653386454184, "obj2": 0.24366915247749005}, {"determining": "( ( Min( ( MRS + FirstVNF_RAM ) ,ARS ) / DDR ) - ( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( ACS - ARS ) ) / Min( PN ,( FirstVNF_RAM / ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + MDR ) ) ) ) ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( MUC - CS ) * ( MUR + CS ) ) ) / Min( CS ,( MUM + DS ) ) ) ) ,MLU ) * ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0040438815837366615}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36254980079681276, "obj2": 0.49932495797904575}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( ( Min( PN ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,MDR ) ) * CRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( Max( RRSe,MUR ) - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ),( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( RCSe * CS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5523789562643785}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.8466135458167331, "obj2": 0.07982400438735744}, {"determining": "( Max( ( ( Min( ( ( ( ARS - BR ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + PN ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( MUR - MUC ) / DS ) + MLU ) / ( MUM * CS ) ),( ( ( ( MLU / MLU ) + Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUM ) - CS ) ) ) / Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.50199203187251, "obj2": 0.301564143013005}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) * ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS / AMS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( RRSe + CS ) )", "obj1": 0.2689243027888446, "obj2": 0.5988043057995244}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.32669322709163345, "obj2": 0.530271242728445}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5219223936229274}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) ) - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( ( ACS - ARS ) * ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MDR ) / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / Min( MUM ,CS ) ),( RCSe - Min( ( MUR - ( MLU * RMSe ) ) ,Max( Max( RCSe,( ( RMSe + DS ) - ( ( MUR - MLU ) - MUR ) ) ),MUR ) ) ) )", "obj1": 0.448207171314741, "obj2": 0.4206811434147919}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36852589641434264, "obj2": 0.48836216787865644}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem / FirstVNF_RAM ) - Min( ( RRS - Const ) ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU_Server * PN ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( PN * ( FirstVNF_RAM_Server - AMS ) ),BR ) ) * ( ( ARS - RRS ) * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( MLU - MUC ),( ( ( MLU + ( Min( MUC ,( RCSe + MUC ) ) * MLU ) ) / ( MUM * CS ) ) / Max( Max( DS,DS ),Max( ( CS * RCSe ),RCSe ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5368648868403003}, {"determining": "( ( DDR - CRS ) * ( ACS - ( RRS / ( FirstVNF_CPU_Server * AMS ) ) ) )", "choosing": "( Min( ( Min( RCSe ,RMSe ) / MUR ) ,( DS / Max( MLU,RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.545816733067729, "obj2": 0.2751380710630912}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( PN + FirstVNF_RAM ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) ) - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3047808764940239, "obj2": 0.5654087988804913}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( MRS / AMS ) / Min( PN ,( DDR / FirstVNF_RAM ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ),CRS ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * ( Max( DS,RMSe ) - MUM ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.04335411506687602}, {"determining": "( ( RRS / FirstVNF_CPU ) * Min( DDR ,PN ) )", "choosing": "Max( ( ( RRSe + Max( ( MUC + Min( Min( CS ,MUM ) ,MUM ) ),RRSe ) ) / ( MUM * CS ) ),( ( MUM * ( MUR - MLU ) ) + MUR ) )", "obj1": 0.4601593625498008, "obj2": 0.40622005754173374}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),( BR * Const ) ) * ( ( ( ARS / Max( FirstVNF_CPU_Server,ACS ) ) + ( FirstVNF_RAM_Server * ARS ) ) - ( ( PN / Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( MDR,BR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) ) / RRS ) ) )", "choosing": "( Min( ( ( MUC - MUM ) / MUC ) ,Max( CS,MUR ) ) / ( ( RCSe + ( DS * RCSe ) ) + MUM ) )", "obj1": 0.7310756972111554, "obj2": 0.16834325122735064}, {"determining": "( ( ACS - Min( Max( ( FirstVNF_CPU * MDR ),Min( CRS ,ARS ) ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem ,BR ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - ( MUM * ( MUC - Max( MUR,RMSe ) ) ) ) / ( ( MUR - MUC ) / ( MLU / MUC ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( DS / RRSe ) ) * DS ) ) ) ) + RRSe ) )", "obj1": 0.547808764940239, "obj2": 0.26815103637235044}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( MUM / DS ) - RCSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7034784853676549}, {"determining": "( ACS * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( DS / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.5637450199203188, "obj2": 0.25657582743671825}, {"determining": "( Max( ( ( ACS * Min( ( FirstVNF_CPU_Server * CRS ) ,( CRS + Max( MDR,Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) / ( ARS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ),Max( ( FirstVNF_RAM + ( RRS - PN ) ),DDR ) ) * MRS )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( Max( CS,( MUM - ( MUC / MUR ) ) ),DS ) - RCSe ) )", "obj1": 0.19721115537848605, "obj2": 0.6752099276106547}, {"determining": "( ( FirstVNF_Mem_Server / Min( MRS ,( DDR / FirstVNF_CPU ) ) ) - Max( Const,( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( DS / MUR ) ) / ( DS * CS ) ),( Max( Max( RRSe,Min( Max( MUM,MUM ) ,( MUM * Min( CS ,MLU ) ) ) ),DS ) - RCSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6789072830236694}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.28286852589641437, "obj2": 0.579048668422759}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8585657370517928, "obj2": 0.07526396770924924}, {"determining": "( ( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) ) * ( Max( CRS,Max( FirstVNF_CPU_Server,( ( ( RRS / PN ) + ( FirstVNF_Mem_Server / DDR ) ) - ( ( RRS * FirstVNF_Mem ) / ( MRS * BR ) ) ) ) ) * ( ACS - ARS ) ) )", "choosing": "Max( ( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * ( MUR * MUC ) ) ) ) / ( MUM * CS ) ) / ( MUM * CS ) ),( MLU + ( MUR / CS ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5491913748546225}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * ( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) ) ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( MUR / ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * ( MUR * MUC ) ) ) ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.4262948207171315, "obj2": 0.442282146256301}, {"determining": "( Max( ( ( Min( ( ( ( RRS + CRS ) + ARS ) - Const ) ,( ARS * ( ( CRS - DDR ) - ( FirstVNF_RAM_Server - ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ( ( DDR * ACS ) / AMS ) ),( FirstVNF_RAM + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( MUM + ( ( CS + MUM ) / ( RRSe + MLU ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.24838617346410355}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) / ( MUM * CS ) ) / ( MUM - CS ) ),( MLU + ( ( RMSe + RRSe ) / RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5268940987624168}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6369712698346394}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( Max( MDR,ACS ) * FirstVNF_Mem ) ) * ( ( Const - PN ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( ( Max( Const,PN ) - ( FirstVNF_RAM - MRS ) ) + ( MRS / Const ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( Min( RCSe ,MUR ) / RRSe ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),( ( MUC * RCSe ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48810870649030536}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS / Min( DDR ,AMS ) ) ) * ( MDR / ( Const / ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( MLU / ( ( MUR / DS ) + MLU ) ) ) * CS ) ),( Min( RCSe ,RMSe ) - ( RMSe / RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7207071265614803}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( ARS,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / DS ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.31272078929278796}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / ARS ) + ( PN / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * RRSe ) / ( MUR + ( MUM * RCSe ) ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( RMSe ,( RRSe * MUM ) ) )", "obj1": 0.18725099601593626, "obj2": 0.684334053505289}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( Max( DS,DS ) - RCSe ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( Max( ( ( Min( ( ( CRS - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( ARS,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( ( RRSe + Max( RRSe,( MUM + RRSe ) ) ) / DS ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.4940239043824701, "obj2": 0.30298161639987}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( ( MRS - FirstVNF_RAM_Server ),MRS ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( ( MUM + MUC ),( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( MUM * CS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.29282868525896416, "obj2": 0.5713694141704477}, {"determining": "( Min( Max( ( DDR - MRS ),( PN - FirstVNF_RAM ) ) ,MDR ) + ( ( FirstVNF_RAM / Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( BR - AMS ) ) - ARS ) ) ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RRSe,MLU ) - ( MUR / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6582739937925356}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( RRS / ( CRS + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.9661354581673307, "obj2": 0.013987683174797485}, {"determining": "( ( ( FirstVNF_Mem / Max( AMS,BR ) ) / FirstVNF_RAM ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( ( ( MUR / DS ) + MLU ) / ( ( ( ( MLU / ( MLU - RCSe ) ) * RMSe ) / ( RCSe + MUC ) ) * CS ) ),( Max( DS,DS ) - RCSe ) ),( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),MUC ) ) / ( MUM * CS ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( Max( ( ( ARS - FirstVNF_RAM ) / ( ( FirstVNF_Mem / FirstVNF_RAM ) * DDR ) ),( BR + Min( MDR ,( AMS * AMS ) ) ) ) * MRS )", "choosing": "Max( ( ( ( ( Min( MUM ,CS ) / ( MUR + Max( RRSe,( MUM + DS ) ) ) ) / DS ) + MLU ) / ( MUM * ( ( MLU - ( RCSe / RCSe ) ) / ( CS + MUC ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6215148534307913}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( Max( DDR,( ( Min( ( ACS - ARS ) ,ARS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ARS ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( ( RRS * FirstVNF_Mem ) * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + ( ( CRS - FirstVNF_RAM ) / RRS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( Max( Max( DS,MUR ),CS ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.8107569721115537, "obj2": 0.10986052423358522}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( Min( RRS ,MDR ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / MUM ) + Max( ( MUR + ( ( ( RMSe + RMSe ) * MUR ) + ( MUM * CS ) ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( RRSe * CS ) / ( ( MUR / DS ) + MLU ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.9083665338645418, "obj2": 0.03914759637752655}, {"determining": "( Max( Max( CRS,Max( ( ( CRS - FirstVNF_RAM ) - RRS ),( ( ( FirstVNF_CPU_Server / DDR ) - ( RRS + ( MDR + MRS ) ) ) - Max( CRS,( ( BR - FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) ) ),( ( ( MRS + CRS ) - FirstVNF_Mem_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( DS ,RMSe ),( ( ( ( RCSe - CS ) / ( ( ( CS * CS ) - MUC ) / Max( CS,MLU ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( RMSe / RRSe ) ),RRSe ) ) ) ) + RRSe ) )", "obj1": 0.5557768924302788, "obj2": 0.2652483430094875}], "28": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( CRS,Max( ( Const * Const ),Max( ACS,( ( ACS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( AMS / PN ) * ( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) ,CRS ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( ( RMSe * MLU ),CS ),Max( ( ( ( ( ( RMSe / RMSe ) * ( RCSe * ( RMSe + CS ) ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_CPU ) - PN ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + Max( DS,( MLU / MUM ) ) ) )", "obj1": 0.450199203187251, "obj2": 0.39599525363007815}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( ( Max( Max( Max( ( ( MRS * MDR ) - ARS ),( CRS - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Max( ( ( MLU + Min( ( RCSe - RRSe ) ,Min( ( MUM + DS ) ,MUM ) ) ) * DS ),RCSe ) / ( ( ( RRSe - RMSe ) / RCSe ) - MLU ) ),( ( ( MUR / DS ) + Max( ( MUR + Min( ( Min( MUC ,CS ) / RRSe ) ,MLU ) ),MUC ) ) - RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.12280468200590243}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( PN / ARS ) ) / DDR ) - ( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUM * CS ) / ( ( MUR / RMSe ) + MLU ) ),( Max( DS,DS ) - ( Max( MLU,DS ) / ( MUM / ( ( MUR - Max( ( RRSe * RRSe ),MLU ) ) + ( MUR + ( Min( MUM ,RRSe ) - ( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10722190790510022}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + ( FirstVNF_RAM / ARS ) ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUM ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( ( FirstVNF_CPU * Min( PN ,CRS ) ) - FirstVNF_RAM ) / ARS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUR - RRSe ) - ( ( ( MUR + MLU ) - Min( RMSe ,( ( MUR * DS ) * MUR ) ) ) + RMSe ) )", "obj1": 0.7410358565737052, "obj2": 0.13122834634769914}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( ( Const - Const ) * ( ACS - ( ( DDR + BR ) / RRS ) ) )", "choosing": "( Max( Min( RCSe ,( ( DS - Max( MUM,( ( RMSe + RCSe ) / ( MLU - CS ) ) ) ) + Min( Min( ( DS / CS ) ,MUM ) ,CS ) ) ),RRSe ) / Min( ( RMSe / ( ( Max( RRSe,Max( ( RMSe - RCSe ),( RCSe * RCSe ) ) ) * DS ) - CS ) ) ,Max( CS,( RMSe + MUC ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.21334054944577283}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ACS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.9243027888446215, "obj2": 0.03080397627358663}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7350597609561753, "obj2": 0.13361996051225142}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + ( MUR / MUM ) ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7051792828685259, "obj2": 0.17767699084468883}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,DS ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.1965827691453501}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( Max( ( ( AMS * MDR ) + MRS ),Max( ACS,( FirstVNF_RAM_Server / ( Max( ( Const - Min( BR ,AMS ) ),Max( FirstVNF_Mem_Server,MRS ) ) - Const ) ) ) ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( MUM * CS ) / ( ( Max( RCSe,MUM ) * DS ) + Max( RRSe,( MUM + RCSe ) ) ) ) ) / ( ( ( RRSe - MUC ) / Min( MUR ,CS ) ) * CS ) ),( MUR * CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3281551754929397}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.950199203187251, "obj2": 0.019856955895714175}, {"determining": "( ( ACS - ARS ) * ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MDR ) / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / Min( MUM ,CS ) ),( RCSe - Min( ( MUR - ( MLU * RMSe ) ) ,Max( Max( RCSe,( ( RMSe + DS ) - ( ( MUR - MLU ) - MUR ) ) ),MUR ) ) ) )", "obj1": 0.448207171314741, "obj2": 0.4206811434147919}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( MDR,DDR ) / ( DDR - MRS ) ) ) ) / PN ) / RRS ) ) )", "choosing": "( Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) / ( ( MUR - ( ( MUR - ( ( MUM * CS ) * CS ) ) * RCSe ) ) + MUM ) )", "obj1": 0.7330677290836654, "obj2": 0.16720271354653202}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_RAM ) ) - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( CS + ( DS / ( RRSe * MLU ) ) ),MUC ) ) - ( CS + MLU ) ) + RMSe ) )", "obj1": 0.6892430278884463, "obj2": 0.18320082255045414}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.5258964143426295, "obj2": 0.28892982796579564}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( RRS / ( CRS + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( RRSe + Max( RRSe,( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) / ( MUM * CS ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.9661354581673307, "obj2": 0.013987683174797485}, {"determining": "( ( ( DDR + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) / Min( BR ,MRS ) ) ) * MRS )", "choosing": "( ( ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) / ( Min( MUM ,RCSe ) * RRSe ) ) - ( Min( Max( RRSe,MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( RRSe - ( MUR * CS ) ) + RCSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7379842323435265}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( FirstVNF_RAM + ACS ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( ( Min( RMSe ,RRSe ) * ( RCSe / ( ( MUR + MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.17467800574903847}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MLU * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - RMSe ) )", "obj1": 0.8864541832669323, "obj2": 0.055023000547453085}, {"determining": "( Max( ( ( ARS - FirstVNF_RAM ) / ( ( FirstVNF_Mem / FirstVNF_RAM ) * DDR ) ),( BR + Min( MDR ,( AMS * AMS ) ) ) ) * MRS )", "choosing": "Max( ( ( ( ( Min( MUM ,CS ) / ( MUR + Max( RRSe,( MUM + DS ) ) ) ) / DS ) + MLU ) / ( MUM * ( ( MLU - ( RCSe / RCSe ) ) / ( CS + MUC ) ) ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6215148534307913}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.28286852589641437, "obj2": 0.579048668422759}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - ( MRS + CRS ) ) * Max( CRS,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) - FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + ( Max( ( Max( RCSe,DS ) * DS ),Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( ( MUR - MUC ) / ( MLU / CS ) ) / ( RCSe - CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.42231075697211157, "obj2": 0.439172148826359}, {"determining": "( Max( DDR,( ( ARS / ( DDR / ACS ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUR * DS ) ,( CS + ( ( DS / RCSe ) + MLU ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( Max( DS,DS ) - RCSe ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( ( ( AMS * ( FirstVNF_Mem_Server * MRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) + ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - ( RRSe * Min( ( MUR / ( ( RMSe - CS ) * MUM ) ) ,CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4338824607142388}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.42568403112962055}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( RCSe * DS ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.15737051792828685, "obj2": 0.7232695842134602}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( Max( ACS,FirstVNF_CPU ),( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ARS ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.24086935195344397}, {"determining": "( Max( Min( ARS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU_Server ,Const ) ) ),( PN / FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUR - ( ( ( ( RMSe - ( Min( MUM ,CS ) + ( MUR + MLU ) ) ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,RCSe ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( ( Min( RRSe ,RRSe ) / ( MUR / CS ) ) / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( Max( CRS,( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) ) * ( ACS - MRS ) )", "choosing": "Max( ( ( ( MUR / CS ) + MLU ) / ( MUM * CS ) ),Min( Max( ( Max( RMSe,MUM ) - ( RRSe / MUR ) ),RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.2350597609561753, "obj2": 0.62709956004344}, {"determining": "( Max( Max( CRS,( PN / ( AMS * MDR ) ) ),Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),Max( ACS,Max( FirstVNF_Mem,CRS ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( Max( RCSe,DS ) * DS ) + Max( ( MUM + MUC ),RRSe ) ) / ( MUM * CS ) ) + RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( MUM + RRSe ) ) / ( ( RRSe * CS ) - CS ) ) ) ) ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.5099557855535212}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( FirstVNF_Mem_Server * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( DDR / CRS ),MDR ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - MUM ) + ( MUR - Min( RRSe ,( RRSe / RRSe ) ) ) ) / Min( MUM ,( RMSe / ( ( RMSe * DS ) - CS ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.2234657789309148}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( ( MRS - ( MRS / Const ) ) ,FirstVNF_RAM_Server ) ) + ARS ) + Max( ( FirstVNF_Mem / Min( ACS ,FirstVNF_CPU ) ),ACS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR * ( ( RCSe * MUR ) + ( MLU + ( RRSe - RCSe ) ) ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( RRSe * CS ) / ( ( MUR / DS ) + MLU ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.8027888446215139, "obj2": 0.1072817624733557}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) * ARS ) ) / PN ) + ( RRS * ( Const / CRS ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( FirstVNF_RAM_Server * RRS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.4800796812749004, "obj2": 0.31659793355787674}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ( ACS - ARS ) + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( Min( RCSe ,RMSe ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.5438247011952191, "obj2": 0.27059103280404323}, {"determining": "( ( ( ( BR * Min( ( PN - ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( Max( MUM,( ( ( MUM * RMSe ) - MLU ) * DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8924302788844621, "obj2": 0.05250353491204347}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( RRS / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / Min( MUM ,CS ) ),( RCSe - ( ( MUR - ( MLU * RMSe ) ) / Max( MUR,DS ) ) ) )", "obj1": 0.21115537848605578, "obj2": 0.6636455879092138}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( CS / DS ) + Max( ( MUR + ( Min( RMSe ,DS ) / RRSe ) ),MUC ) ) - RCSe ) )", "obj1": 0.7948207171314741, "obj2": 0.1131239161606788}, {"determining": "( Max( ( ( Min( ( ARS * MDR ) ,( ( Max( RRS,MRS ) - FirstVNF_RAM ) / RRS ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,( ACS + ( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) * MUM ) / Min( MUM ,( ( Max( MUC,Min( MUM ,RMSe ) ) / ( RRSe - ( CS + MLU ) ) ) / ( ( Min( RRSe ,( MUC / RCSe ) ) * DS ) - CS ) ) ) )", "obj1": 0.5836653386454184, "obj2": 0.24366915247749005}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36254980079681276, "obj2": 0.49932495797904575}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( ( Min( PN ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,MDR ) ) * CRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( Max( RRSe,MUR ) - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ),( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( RCSe * CS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5523789562643785}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( PN + FirstVNF_RAM ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) ) - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3047808764940239, "obj2": 0.5654087988804913}, {"determining": "( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.21314741035856574, "obj2": 0.6563257674588839}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( ARS,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / DS ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.50199203187251, "obj2": 0.2969870830488008}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) * ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS / AMS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( RRSe + CS ) )", "obj1": 0.2689243027888446, "obj2": 0.5988043057995244}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - Max( ( RCSe * CS ),( DS / Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03564194191340446}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.32669322709163345, "obj2": 0.530271242728445}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5219223936229274}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_Mem_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS ) - ( RRS / FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "Max( ( ( ( ( MUR - MUC ) + MUC ) + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * ( MLU - Min( RMSe ,Max( ( MUM - ( RRSe / DS ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - MRS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( FirstVNF_Mem_Server + MDR ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}, {"determining": "( ( ( CRS - ( Const * MRS ) ) / DDR ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),RCSe ) ) / ( MUM * CS ) ),Min( ( MUC + ( ( ( MUR / DS ) + MLU ) * DS ) ) ,( CS + ( Min( MUR ,( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( ( RRSe + MUR ),Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( CS + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8665338645418327, "obj2": 0.06757491647795193}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6369712698346394}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem / FirstVNF_RAM ) - Min( ( RRS - Const ) ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU_Server * PN ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( PN * ( FirstVNF_RAM_Server - AMS ) ),BR ) ) * ( ( ARS - RRS ) * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( MLU - MUC ),( ( ( MLU + ( Min( MUC ,( RCSe + MUC ) ) * MLU ) ) / ( MUM * CS ) ) / Max( Max( DS,DS ),Max( ( CS * RCSe ),RCSe ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5368648868403003}, {"determining": "( ( DDR - MRS ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( Min( MUR ,RRSe ) * ( RCSe / Max( CS,( RMSe + MUC ) ) ) ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.5079681274900398, "obj2": 0.2926934188889563}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36852589641434264, "obj2": 0.48836216787865644}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server - MRS ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM * MUM ) / ( RRSe + Max( ( ( RCSe * Max( RRSe,MUR ) ) - MUM ),( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8585657370517928, "obj2": 0.07526396770924924}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server / DDR ),( ( MRS / AMS ) / Min( PN ,( DDR / FirstVNF_RAM ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ),CRS ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * ( Max( DS,RMSe ) - MUM ) ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.04335411506687602}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS / Min( DDR ,AMS ) ) ) * ( MDR / ( Const / ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( MLU / ( ( MUR / DS ) + MLU ) ) ) * CS ) ),( Min( RCSe ,RMSe ) - ( RMSe / RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7207071265614803}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( MUM / DS ) - RCSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.1752988047808765, "obj2": 0.7034784853676549}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( ACS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( RCSe * MUR ) + ( MUM * CS ) ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( ( MUR / DS ) + MLU ) / ( RRSe * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.9083665338645418, "obj2": 0.039147596377526545}, {"determining": "( Max( ( ( ACS * Min( ( FirstVNF_CPU_Server * CRS ) ,( CRS + Max( MDR,Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) / ( ARS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ),Max( ( FirstVNF_RAM + ( RRS - PN ) ),DDR ) ) * MRS )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( Max( CS,( MUM - ( MUC / MUR ) ) ),DS ) - RCSe ) )", "obj1": 0.19721115537848605, "obj2": 0.6752099276106547}, {"determining": "( ( FirstVNF_Mem_Server / Min( MRS ,( DDR / FirstVNF_CPU ) ) ) - Max( Const,( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( DS / MUR ) ) / ( DS * CS ) ),( Max( Max( RRSe,Min( Max( MUM,MUM ) ,( MUM * Min( CS ,MLU ) ) ) ),DS ) - RCSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6789072830236694}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6678629070988135}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( Max( ( ( Min( ( ( ( RRS + CRS ) + ARS ) - Const ) ,( ARS * ( ( CRS - DDR ) - ( FirstVNF_RAM_Server - ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ( ( DDR * ACS ) / AMS ) ),( FirstVNF_RAM + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( MUM + ( ( CS + MUM ) / ( RRSe + MLU ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.24838617346410355}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) / ( MUM * CS ) ) / ( MUM - CS ) ),( MLU + ( ( RMSe + RRSe ) / RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5268940987624168}, {"determining": "( ( ( FirstVNF_Mem / Max( AMS,BR ) ) / FirstVNF_RAM ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( ( ( MUR / DS ) + MLU ) / ( ( ( ( MLU / ( MLU - RCSe ) ) * RMSe ) / ( RCSe + MUC ) ) * CS ) ),( Max( DS,DS ) - RCSe ) ),( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),MUC ) ) / ( MUM * CS ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( Max( MDR,ACS ) * FirstVNF_Mem ) ) * ( ( Const - PN ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( ( Max( Const,PN ) - ( FirstVNF_RAM - MRS ) ) + ( MRS / Const ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( Min( RCSe ,MUR ) / RRSe ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),( ( MUC * RCSe ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48810870649030536}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.17928286852589642, "obj2": 0.6884625128456032}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + MRS ) ) * ( ( ( MDR - AMS ) - PN ) * Max( ACS,( FirstVNF_RAM_Server / ( MRS * ( Const / ARS ) ) ) ) ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( ( RMSe / RMSe ),( DS - ( CS * CS ) ) ),MUM ) ) / ( MUM * CS ) ) / ( MLU * CS ) ),( MLU + ( MUM * MUR ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5683747494916845}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / ARS ) + ( PN / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * RRSe ) / ( MUR + ( MUM * RCSe ) ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( RMSe ,( RRSe * MUM ) ) )", "obj1": 0.18725099601593626, "obj2": 0.684334053505289}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) - ARS ) * ( ( Const + FirstVNF_CPU_Server ) * PN ) )", "choosing": "( Min( RRSe ,( CS + RCSe ) ) * ( ( MUR - CS ) / ( ( MUR - Max( ( RMSe + ( ( MUM - MUC ) + ( DS + MLU ) ) ),RRSe ) ) + ( ( RMSe / ( Max( RMSe,( MUC * CS ) ) + Min( DS ,( MUR / MUM ) ) ) ) - DS ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5717055948424631}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5069893457963788}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_CPU / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - ( ( RCSe * CS ) + ( DS / MUR ) ) ) ) ) )", "obj1": 0.8426294820717132, "obj2": 0.07823152616202689}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( ( MUR / ( CS + RRSe ) ) + RRSe ),RRSe ) ) - ( MUM * CS ) ),( Min( ( Min( Min( RRSe ,MLU ) ,MUC ) / ( RCSe / MUC ) ) ,MUR ) + ( RMSe / DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.230194496781457}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( MDR,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.5617529880478087, "obj2": 0.2597663865337257}, {"determining": "( ( FirstVNF_Mem * CRS ) + ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - AMS ) - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - Min( MUM ,( MUR - RRSe ) ) ) ) / ( RMSe * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5069893457963788}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Max( ( ( ( RCSe * CS ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.26095617529880477, "obj2": 0.6011045033159232}], "29": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( FirstVNF_RAM * PN ) - Max( Max( DDR,( AMS - Max( FirstVNF_RAM_Server,RRS ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,( MLU - ( MUM - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),Min( MUR ,( RRSe * CS ) ) ) ) ) ) / ( MUM + ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,Max( ( Const * Const ),Max( ACS,( ( ACS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( ( ( AMS / PN ) * ( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) ,CRS ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( ( RMSe * MLU ),CS ),Max( ( ( ( ( ( RMSe / RMSe ) * ( RCSe * ( RMSe + CS ) ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( Max( MDR,DDR ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + Max( MUR,( MLU / MUM ) ) ) )", "obj1": 0.450199203187251, "obj2": 0.3958381230389142}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( ( Max( Max( Max( ( ( MRS * MDR ) - ARS ),( CRS - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Max( ( ( MLU + Min( ( RCSe - RRSe ) ,Min( ( MUM + DS ) ,MUM ) ) ) * DS ),RCSe ) / ( ( ( RRSe - RMSe ) / RCSe ) - MLU ) ),( ( ( MUR / DS ) + Max( ( MUR + Min( ( Min( MUC ,CS ) / RRSe ) ,MLU ) ),MUC ) ) - RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.12280468200590243}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ARS,DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( Min( MUC ,CS ) ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7111553784860558, "obj2": 0.16509520558289625}, {"determining": "( ( ( Max( FirstVNF_Mem,CRS ) / ( PN / ARS ) ) / DDR ) - ( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( Const + AMS ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUM * CS ) / ( ( MUR / RMSe ) + MLU ) ),( Max( DS,DS ) - ( Max( MLU,DS ) / ( MUM / ( ( MUR - Max( ( RRSe * RRSe ),MLU ) ) + ( MUR + ( Min( MUM ,RRSe ) - ( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10722190790510022}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.13473492340772103}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - MUM ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7410358565737052, "obj2": 0.13023958440445146}, {"determining": "( Max( DDR,( ( ARS / ( DDR / ACS ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUR * DS ) ,( CS + ( ( DS / RCSe ) + MLU ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( Max( ( ( AMS * MDR ) + MRS ),Max( ACS,( FirstVNF_RAM_Server / ( Max( ( Const - Min( BR ,AMS ) ),Max( FirstVNF_Mem_Server,MRS ) ) - Const ) ) ) ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( MUM * CS ) / ( ( Max( RCSe,MUM ) * DS ) + Max( RRSe,( MUM + RCSe ) ) ) ) ) / ( ( ( RRSe - MUC ) / Min( MUR ,CS ) ) * CS ) ),( MUR * CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3281551754929397}, {"determining": "( ( ACS - ARS ) * ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - MDR ) / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / Min( MUM ,CS ) ),( RCSe - Min( ( MUR - ( MLU * RMSe ) ) ,Max( Max( RCSe,( ( RMSe + DS ) - ( ( MUR - MLU ) - MUR ) ) ),MUR ) ) ) )", "obj1": 0.448207171314741, "obj2": 0.4206811434147919}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) * ARS ) ) / PN ) + ( RRS * ( Const / CRS ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( FirstVNF_RAM_Server * RRS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.4800796812749004, "obj2": 0.31659793355787674}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( Max( ACS,FirstVNF_CPU ),( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ARS ) ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.24086935195344397}, {"determining": "( ( ( MDR - MRS ) / MRS ) * ( ACS + ARS ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( Min( MUR ,Max( MUC,DS ) ) * Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) ) ,( CS + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6460260630899819}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36254980079681276, "obj2": 0.49932495797904575}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( ( Const - Const ) * ( ACS - ( ( DDR + BR ) / RRS ) ) )", "choosing": "( Max( Min( RCSe ,( ( DS - Max( MUM,( ( RMSe + RCSe ) / ( MLU - CS ) ) ) ) + Min( Min( ( DS / CS ) ,MUM ) ,CS ) ) ),RRSe ) / Min( ( RMSe / ( ( Max( RRSe,Max( ( RMSe - RCSe ),( RCSe * RCSe ) ) ) * DS ) - CS ) ) ,Max( CS,( RMSe + MUC ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.21334054944577283}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( ( MUR / ( CS + RRSe ) ) + RRSe ),RRSe ) ) - ( MUM * CS ) ),( Min( ( Min( Min( RRSe ,MLU ) ,MUC ) / ( RCSe / MUC ) ) ,MUR ) + ( RMSe / DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.230194496781457}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_RAM ) ) - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( CS + ( DS / ( RRSe * MLU ) ) ),MUC ) ) - ( CS + MLU ) ) + RMSe ) )", "obj1": 0.6892430278884463, "obj2": 0.18320082255045414}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + ( FirstVNF_RAM / ARS ) ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUM ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - MRS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ),Max( FirstVNF_Mem,Max( ( ACS - ARS ),Max( CRS,( Const + MDR ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.2699316828865914}, {"determining": "( ( ( AMS * ( FirstVNF_Mem_Server * MRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) + ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - ( RRSe * Min( ( MUR / ( ( RMSe - CS ) * MUM ) ) ,CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4338824607142388}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUM ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.5517928286852589, "obj2": 0.2665878910773602}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem / FirstVNF_RAM ) - Min( ( RRS - Const ) ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU_Server * PN ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( PN * ( FirstVNF_RAM_Server - AMS ) ),BR ) ) * ( ( ARS - RRS ) * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( MLU - MUC ),( ( ( MLU + ( Min( MUC ,( RCSe + MUC ) ) * MLU ) ) / ( MUM * CS ) ) / Max( Max( DS,DS ),Max( ( CS * RCSe ),RCSe ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5368648868403003}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Max( ( ( ( RCSe * CS ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.26095617529880477, "obj2": 0.6011045033159232}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - ( MRS + CRS ) ) * Max( CRS,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / ACS ) ) ) ) - FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + ( Max( ( Max( RCSe,DS ) * DS ),Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( ( MUR - MUC ) / ( MLU / CS ) ) / ( RCSe - CS ) ) * Min( ( ( ( MUR / DS ) + MLU ) / ( RCSe * DS ) ) ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5482262251592234}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( Min( Min( MDR ,( ( PN * AMS ) - ARS ) ) ,FirstVNF_CPU ) - ( ( ACS / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( ( Min( RMSe ,RRSe ) * ( RCSe / ( ( MUR + MLU ) * RRSe ) ) ) - ( MUC - ( ( MUM / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.9462151394422311, "obj2": 0.02516215911065317}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( ( MRS - ( MRS / Const ) ) ,FirstVNF_RAM_Server ) ) + ARS ) + Max( ( FirstVNF_Mem / Min( ACS ,FirstVNF_CPU ) ),ACS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR * ( ( RCSe * MUR ) + ( MLU + ( RRSe - RCSe ) ) ) ),MUC ) ) / ( MUM * CS ) ),Max( ( ( RRSe * CS ) / ( ( MUR / DS ) + MLU ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.8027888446215139, "obj2": 0.1072817624733557}, {"determining": "( Max( Max( CRS,( PN / ( AMS * MDR ) ) ),Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),Max( ACS,Max( FirstVNF_Mem,CRS ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( Max( RCSe,DS ) * DS ) + Max( ( MUM + MUC ),RRSe ) ) / ( MUM * CS ) ) + RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( MUM + RRSe ) ) / ( ( RRSe * CS ) - CS ) ) ) ) ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.5099557855535212}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_RAM ) ) - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( CS + ( DS / ( RRSe * MLU ) ) ),MUC ) ) - ( CS + MLU ) ) + RMSe ) )", "obj1": 0.6832669322709163, "obj2": 0.19622123088035612}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( MDR,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.5258964143426295, "obj2": 0.28892982796579564}, {"determining": "( ( ACS - ( FirstVNF_RAM_Server / RRS ) ) * ( ( MDR - FirstVNF_CPU ) - PN ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.28286852589641437, "obj2": 0.579048668422759}, {"determining": "( Max( CRS,( ( ( Max( MRS,AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server / DDR ) ) / Max( CRS,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / AMS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),Min( MLU ,( CS - DS ) ) ) ) ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - Min( ( RRSe + MLU ) ,( ( MUC - ( RMSe / ( ( MUM * MLU ) * RRSe ) ) ) + RMSe ) ) )", "obj1": 0.8824701195219123, "obj2": 0.05775424403082249}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.17928286852589642, "obj2": 0.6884625128456032}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( Max( DS,DS ) - RCSe ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( CS / DS ) + Max( ( MUR + ( Min( RMSe ,DS ) / RRSe ) ),MUC ) ) - RCSe ) )", "obj1": 0.7948207171314741, "obj2": 0.1131239161606788}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),ARS ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,MUC ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.19801643607396088}, {"determining": "( Max( ( ( Min( ( ARS * MDR ) ,( ( Max( RRS,MRS ) - FirstVNF_RAM ) / RRS ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,( ACS + ( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) * MUM ) / Min( MUM ,( ( Max( MUC,Min( MUM ,RMSe ) ) / ( RRSe - ( CS + MLU ) ) ) / ( ( Min( RRSe ,( MUC / RCSe ) ) * DS ) - CS ) ) ) )", "obj1": 0.5836653386454184, "obj2": 0.24366915247749005}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.9860557768924303, "obj2": 0.0054580970666910575}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( FirstVNF_Mem_Server * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( DDR / CRS ),MDR ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - MUM ) + ( MUR - Min( RRSe ,( RRSe / RRSe ) ) ) ) / Min( MUM ,( RMSe / ( ( RMSe * DS ) - CS ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.2234657789309148}, {"determining": "( Max( ( ( Min( ( ARS * ( ( CRS - FirstVNF_Mem ) / MDR ) ) ,( ( CRS - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + Min( FirstVNF_RAM_Server ,Const ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( ( MUR / Max( MUM,MUM ) ) ,( DS / ( RRSe + Max( RRSe,( MUM + RCSe ) ) ) ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.5617529880478087, "obj2": 0.25807508236158855}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_Mem_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) * MRS ) - ( RRS / FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM,( Max( FirstVNF_CPU,DDR ) - ARS ) ) )", "choosing": "Max( ( ( ( MUC + ( MUR - MUC ) ) + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * ( MLU - Min( RMSe ,Max( ( MUM - ( RRSe - DS ) ),Max( MUR,DS ) ) ) ) ) + RRSe ) )", "obj1": 0.2848605577689243, "obj2": 0.5686662481087683}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) * ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS / AMS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( RRSe + CS ) )", "obj1": 0.2689243027888446, "obj2": 0.5988043057995244}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - Max( ( RCSe * CS ),( DS / Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03564194191340446}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5219223936229274}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) * CRS ) )", "choosing": "( ( ( RRSe * CS ) * RRSe ) / Min( MUM ,MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.47633317903388805}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( MLU - MUC ),( ( ( MLU + ( RRSe * MLU ) ) / ( MUM * CS ) ) / Max( Max( DS,DS ),Max( ( CS * RCSe ),MUM ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.2494455785697429}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_Mem + Min( Max( Min( ACS ,CRS ),Min( FirstVNF_RAM_Server ,( Min( Const ,MRS ) - Const ) ) ) ,ARS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( CS + MUC ) ) ) / ( ( ( ( RRSe * DS ) - CS ) - MUC ) - MUC ) ) ) / ( MUM * CS ) ),( ( ( ( CS - RCSe ) / ( MUR / CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / MLU ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.467220631304909}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,Min( RCSe ,RCSe ) ) - Max( ( RRSe / MUM ),MUM ) ) ) ) ) - RRSe ) )", "obj1": 0.42231075697211157, "obj2": 0.43824478337227024}, {"determining": "( Max( ( ( Min( ( ( ( FirstVNF_RAM - ACS ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_CPU ) - ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,Max( DS,RCSe ) ) + ( Max( MUM,( ( ( ( DS - DS ) - DS ) - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}, {"determining": "( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.21314741035856574, "obj2": 0.6563257674588839}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * FirstVNF_Mem_Server ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8585657370517928, "obj2": 0.07526396770924924}, {"determining": "( ( ( ( BR * Min( ( PN - ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( Max( MUM,( ( ( MUM * RMSe ) - MLU ) * DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8924302788844621, "obj2": 0.05250353491204347}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + ( MUM * CS ) ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5523789562643785}, {"determining": "( ( ACS - Min( AMS ,Max( MRS,FirstVNF_Mem_Server ) ) ) * Max( Max( Const,( FirstVNF_RAM * PN ) ),Max( Min( PN ,( BR + ACS ) ),Max( ACS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - Min( Max( ( MUM - ( MLU + DS ) ),RRSe ) ,Min( DS ,MUC ) ) ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + RMSe ) ,( Max( CS,DS ) + DS ) ) )", "obj1": 0.6155378486055777, "obj2": 0.22471514035525308}, {"determining": "( ( ( CRS - ( Const * MRS ) ) / DDR ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),RCSe ) ) / ( MUM * CS ) ),Min( ( MUC + ( ( ( MUR / DS ) + MLU ) * DS ) ) ,( CS + ( Min( MUR ,( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( ( RRSe + MUR ),Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / ARS ) + ( PN / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * RRSe ) / ( MUR + ( MUM * RCSe ) ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( RMSe ,( RRSe * MUM ) ) )", "obj1": 0.18725099601593626, "obj2": 0.684334053505289}, {"determining": "( Max( Min( ARS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU_Server ,Const ) ) ),( PN / FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUR - ( ( ( ( RMSe - ( Min( MUM ,CS ) + ( MUR + MLU ) ) ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,RCSe ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( ( Min( RRSe ,RRSe ) / ( MUR / CS ) ) / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( Max( MRS,( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) )", "obj1": 0.350597609561753, "obj2": 0.503887984043078}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server - MRS ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM * MUM ) / ( RRSe + Max( ( ( RCSe * Max( RRSe,MUR ) ) - MUM ),( MUM + ( ( ( MUR / MUR ) + MLU ) / ( MUM * CS ) ) ) ) ) ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( ( FirstVNF_Mem / Max( AMS,BR ) ) / FirstVNF_RAM ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( ( ( MUR / DS ) + MLU ) / ( ( ( ( MLU / ( MLU - RCSe ) ) * RMSe ) / ( RCSe + MUC ) ) * CS ) ),( Max( DS,DS ) - RCSe ) ),( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),MUC ) ) / ( MUM * CS ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( MDR,DDR ) / ( DDR - MRS ) ) ) ) / PN ) / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + ( MUR / MUM ) ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6992031872509961, "obj2": 0.1802150358264485}, {"determining": "( ( FirstVNF_Mem * CRS ) + ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - AMS ) - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - Min( MUM ,( MUR - RRSe ) ) ) ) / ( RMSe * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6203446626700222}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.41832669322709165, "obj2": 0.44481189927622766}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( ARS,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) )", "choosing": "( ( MUR - ( Min( RCSe ,( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.27689243027888444, "obj2": 0.5865010355884158}, {"determining": "( ( ( DDR + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) / Min( BR ,MRS ) ) ) * MRS )", "choosing": "( ( ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) / ( Min( MUM ,RCSe ) * RRSe ) ) - ( Min( Max( RRSe,MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( RRSe - ( MUR * CS ) ) + RCSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7379842323435265}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * Min( ( CRS * FirstVNF_CPU_Server ) ,( CRS + Max( MDR,Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) / ( ARS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ),( MRS / Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) ) * MRS )", "choosing": "Max( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.30278884462151395, "obj2": 0.5645148805574633}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( Max( FirstVNF_Mem,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( MDR / ( Min( CRS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( MUR / DS ) + MLU ) ) * CS ) ),( RRSe - ( DS + MUR ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7370485719439018}, {"determining": "( ( FirstVNF_Mem_Server / Min( MRS ,( DDR / FirstVNF_CPU ) ) ) - Max( Const,( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU - MUC ),Max( ( ( MLU + ( DS / MUR ) ) / ( DS * CS ) ),( Max( Max( RRSe,Min( Max( MUM,MUM ) ,( MUM * Min( CS ,MLU ) ) ) ),DS ) - RCSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6789072830236694}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6678629070988135}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,Min( ( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + ( MUM * CS ) ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.7091633466135459, "obj2": 0.1752444583277537}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( ARS,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( MUR - ( Min( RCSe ,( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / DS ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.5657370517928287, "obj2": 0.25586239630060637}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2137480402302041}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) / ( MUM * CS ) ) / ( MUM - CS ) ),( MLU + ( ( RMSe + RRSe ) / RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5268940987624168}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( Max( MDR,ACS ) * FirstVNF_Mem ) ) * ( ( Const - PN ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( ( Max( Const,PN ) - ( FirstVNF_RAM - MRS ) ) + ( MRS / Const ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( Min( RCSe ,MUR ) / RRSe ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),( ( MUC * RCSe ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48810870649030536}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( ( MRS / AMS ) + PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS / Min( DDR ,AMS ) ) ) * ( MDR / ( Const / ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( MLU / ( ( MUR / DS ) + MLU ) ) ) * CS ) ),( Min( RCSe ,RMSe ) - ( RMSe / RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7207071265614803}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( Max( ( ( Min( ( ( ( RRS + CRS ) + ARS ) - Const ) ,( ARS * ( ( CRS - DDR ) - ( FirstVNF_RAM_Server - ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ( ( DDR * ACS ) / AMS ) ),( FirstVNF_RAM + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( MUM + ( ( CS + MUM ) / ( RRSe + MLU ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.24838617346410355}, {"determining": "( Max( ( ( ACS * Min( ( FirstVNF_CPU_Server * CRS ) ,( CRS + Max( MDR,Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) / ( ARS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ),Max( ( FirstVNF_RAM + ( RRS - PN ) ),DDR ) ) * MRS )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( Max( CS,( MUM - ( MUC / MUR ) ) ),DS ) - RCSe ) )", "obj1": 0.21115537848605578, "obj2": 0.661955017312781}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( ACS + FirstVNF_RAM_Server ) ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - MUM ) )", "obj1": 0.3944223107569721, "obj2": 0.4723710520491192}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.9302788844621513, "obj2": 0.028058344989937766}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.2290836653386454, "obj2": 0.6369712698346394}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.5099601593625498, "obj2": 0.2911310708477002}, {"determining": "( Max( FirstVNF_Mem,Max( ( MRS - FirstVNF_RAM_Server ),Max( Max( FirstVNF_RAM_Server,CRS ),ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( ( ( MUR / RMSe ) * ( DS + DS ) ) * DS ) ) ) * CS ) ),( Min( DS ,DS ) - RCSe ) )", "obj1": 0.15737051792828685, "obj2": 0.7232695842134602}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,ACS ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( Max( Max( DDR,MRS ),CRS ) - ACS ) )", "choosing": "( ( MUR - MUC ) / ( MUC + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,( MUM - CS ) ) ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.42568403112962055}, {"determining": "( ( FirstVNF_Mem * CRS ) + ( Min( Max( ( ACS + CRS ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ,ARS ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - Min( MUM ,( MUR - RRSe ) ) ) ) / ( RMSe * CS ) ) + ( MUM * CS ) ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.23306772908366533, "obj2": 0.6318003169446469}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + MRS ) ) * ( ( ( MDR - AMS ) - PN ) * Max( ACS,( FirstVNF_RAM_Server / ( MRS * ( Const / ARS ) ) ) ) ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( ( RMSe / RMSe ),( DS - ( CS * CS ) ) ),MUM ) ) / ( MUM * CS ) ) / ( MLU * CS ) ),( MLU + ( MUM * MUR ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5683747494916845}], "30": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Min( Min( ( ( PN * ( Min( FirstVNF_RAM ,ACS ) - FirstVNF_CPU ) ) - ARS ) ,MDR ) ,FirstVNF_CPU ) - ( ( Const + ( PN / FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( MUC - MUR ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( ( ( MUR - DS ) - MUM ),DS ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - Max( Max( DDR,( AMS - Max( FirstVNF_RAM_Server,RRS ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,( MLU - ( MUM - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),Min( MUR ,( RRSe * CS ) ) ) ) ) ) / ( MUM + ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( ( Min( RMSe ,RRSe ) * ( RCSe / ( ( MUR + MLU ) * RRSe ) ) ) - ( MUC - ( ( MUM / CS ) - MLU ) ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.09119928602463116}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( Max( MDR,DDR ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + Max( MUR,( MLU / MUM ) ) ) )", "obj1": 0.450199203187251, "obj2": 0.3958381230389142}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.750996015936255, "obj2": 0.1105703094946177}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUM ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( Min( MUC ,CS ) ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) ) )", "obj1": 0.7111553784860558, "obj2": 0.1607790751521662}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.13762629158706788}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,ACS ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( Max( Max( DDR,MRS ),CRS ) - ACS ) )", "choosing": "( ( MUR - MUC ) / ( MUC + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,( MUM - CS ) ) ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.42568403112962055}, {"determining": "( ( ( MDR / ARS ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( Max( Min( RRSe ,CS ),( DS * RMSe ) ) + ( MUM - Min( Max( Max( MUR,( ( MUC - RRSe ) + Min( MUM ,RRSe ) ) ),( MUC - ( DS / RRSe ) ) ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.4029527869929545}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem / FirstVNF_RAM ) - Min( ( RRS - Const ) ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU_Server * PN ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( PN * ( FirstVNF_RAM_Server - AMS ) ),BR ) ) * ( ( ARS - RRS ) * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( MLU - MUC ),( ( ( MLU + ( Min( MUC ,( RCSe + MUC ) ) * MLU ) ) / ( MUM * CS ) ) / Max( Max( DS,DS ),Max( ( CS * RCSe ),RCSe ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5368648868403003}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36254980079681276, "obj2": 0.49932495797904575}, {"determining": "( Max( ( ARS + Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU_Server ,Const ) ) ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( MRS - FirstVNF_RAM_Server ),Max( Const,ARS ) ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.599601593625498, "obj2": 0.23753707286009815}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( Max( MDR,ACS ) * FirstVNF_Mem ) ) * ( ( Const - PN ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( ( Max( Const,PN ) - ( FirstVNF_RAM - MRS ) ) + ( MRS / Const ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( Min( RCSe ,MUR ) / RRSe ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),( ( MUC * RCSe ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48810870649030536}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * ( MUR - MUC ) ) - CS ) ) ) )", "obj1": 0.5179282868525896, "obj2": 0.28582881971072277}, {"determining": "( Max( CRS,( ( ( Max( MRS,AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server / DDR ) ) / Max( CRS,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / AMS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),Min( MLU ,( CS - DS ) ) ) ) ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - Min( ( RRSe + MLU ) ,( ( MUC - ( RMSe / ( ( MUM * MLU ) * RRSe ) ) ) + RMSe ) ) )", "obj1": 0.8824701195219123, "obj2": 0.05775424403082249}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( Max( MRS,( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) )", "obj1": 0.350597609561753, "obj2": 0.503887984043078}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( MRS,( ( MRS / ( BR * ( FirstVNF_CPU_Server * MRS ) ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * Max( ( ARS - FirstVNF_RAM ),ARS ) )", "choosing": "Max( ( ( ( DS / MUR ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * ( MUC / ( MUR / RRSe ) ) ) ),Max( ( ( ( MUR / DS ) * ( ( ( RRSe + RMSe ) + MUC ) - RMSe ) ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.6996851965859754}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) / ( MUM * CS ) ) / ( MUM - CS ) ),( MLU + ( ( RMSe + RRSe ) / RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5268940987624168}, {"determining": "( Max( DDR,( ( ARS / ( DDR / ACS ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUR * DS ) ,( CS + ( ( DS / RCSe ) + MLU ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( Max( Max( CRS,( PN / ( AMS * MDR ) ) ),Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),Max( ACS,Max( FirstVNF_Mem,CRS ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( Max( RCSe,DS ) * DS ) + Max( ( MUM + MUC ),RRSe ) ) / ( MUM * CS ) ) + RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( MUM + RRSe ) ) / ( ( RRSe * CS ) - CS ) ) ) ) ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.5099557855535212}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_RAM ) ) - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( CS + ( DS / ( RRSe * MLU ) ) ),MUC ) ) - ( CS + MLU ) ) + RMSe ) )", "obj1": 0.6892430278884463, "obj2": 0.18320082255045414}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),ARS ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,MUC ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.17147469723041234}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( MDR,DDR ) / ( DDR - MRS ) ) ) ) / PN ) / RRS ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( ( RCSe + ( MUR / MUM ) ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6992031872509961, "obj2": 0.1802150358264485}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( ( ( FirstVNF_CPU_Server + ( AMS + FirstVNF_CPU_Server ) ) + ( Min( ( DDR * Const ) ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS ) ) * ( ACS / ARS ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + ( MUM * CS ) ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5523789562643785}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * PN ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,( MUR * RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.4063745019920319, "obj2": 0.4614188478924921}, {"determining": "( ( ( AMS * ( FirstVNF_Mem_Server * MRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) + ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - ( RRSe * Min( ( MUR / ( ( RMSe - CS ) * MUM ) ) ,CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4338824607142388}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - Max( ( RCSe * CS ),( DS / Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03564194191340446}, {"determining": "( ( ( ( BR * Min( ( PN - ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( Max( MUM,( ( ( MUM * RMSe ) - MLU ) * DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8924302788844621, "obj2": 0.05250353491204347}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( Max( ( ( Min( ( ARS * MDR ) ,( ( Max( RRS,MRS ) - FirstVNF_RAM ) / RRS ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,( ACS + ( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) * MUM ) / Min( MUM ,( ( Max( MUC,Min( MUM ,RMSe ) ) / ( RRSe - ( CS + MLU ) ) ) / ( ( Min( RRSe ,( MUC / RCSe ) ) * DS ) - CS ) ) ) )", "obj1": 0.5836653386454184, "obj2": 0.24366915247749005}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.900398406374502, "obj2": 0.04315240569739347}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.7450199203187251, "obj2": 0.12677044097563284}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_RAM ) ) - Const ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( CS + ( DS / ( RRSe * MLU ) ) ),MUC ) ) - ( CS + MLU ) ) + RMSe ) )", "obj1": 0.6832669322709163, "obj2": 0.19622123088035612}, {"determining": "( Max( FirstVNF_Mem,Max( ( MRS - FirstVNF_RAM_Server ),Max( Max( FirstVNF_RAM_Server,CRS ),ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( ( ( MUR / RMSe ) * ( DS + DS ) ) * DS ) ) ) * CS ) ),( Min( DS ,DS ) - RCSe ) )", "obj1": 0.15737051792828685, "obj2": 0.7232695842134602}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( PN - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( ( MUR / DS ) + MLU ) / ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3944223107569721, "obj2": 0.47225432162193204}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( RRS / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.28286852589641437, "obj2": 0.5786010860414392}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.9302788844621513, "obj2": 0.028058344989937766}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( Max( ( ( ACS * Min( ( FirstVNF_CPU_Server * CRS ) ,( CRS + Max( MDR,Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) / ( ARS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ),Max( ( FirstVNF_RAM + ( RRS - PN ) ),DDR ) ) * MRS )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( Max( CS,( MUM - ( MUC / MUR ) ) ),DS ) - RCSe ) )", "obj1": 0.20916334661354583, "obj2": 0.6606982032538586}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( Max( RRS,ARS ) * CRS ) ) ) ) + ( Min( PN ,MDR ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - Min( MUM ,( MUR - RCSe ) ) ) ) / ( RMSe * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - MLU ) )", "obj1": 0.23705179282868527, "obj2": 0.6203446626700222}, {"determining": "( ( FirstVNF_Mem * CRS ) + ( Min( Max( ( ACS + CRS ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ,ARS ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - Min( MUM ,( MUR - RRSe ) ) ) ) / ( RMSe * CS ) ) + ( MUM * CS ) ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.23306772908366533, "obj2": 0.6318003169446469}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),ARS ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,MUC ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.19801643607396088}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( FirstVNF_Mem_Server * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( DDR / CRS ),MDR ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - MUM ) + ( MUR - Min( RRSe ,( RRSe / RRSe ) ) ) ) / Min( MUM ,( RMSe / ( ( RMSe * DS ) - CS ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.2234657789309148}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( PN / ( CRS * RRS ) ) + ( RRS * FirstVNF_RAM ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( PN / Min( MDR ,RRS ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( MUM * ( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * ( DS - MUM ) ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.5099601593625498, "obj2": 0.2911310708477002}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * Min( ( CRS * FirstVNF_CPU_Server ) ,( CRS + Max( MDR,Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) / ( ARS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ),( MRS / Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) ) * MRS )", "choosing": "Max( ( ( ( MUR / MUM ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.30278884462151395, "obj2": 0.5645148805574633}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.5099601593625498, "obj2": 0.2911310708477002}, {"determining": "( Max( Max( CRS,Max( FirstVNF_CPU_Server,( Max( Max( ACS,FirstVNF_CPU ),Min( FirstVNF_CPU ,ACS ) ) - Max( CRS,Const ) ) ) ),( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) * ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( MUM - MUM ) - ( ( ( MUC - MUR ) - ( MLU + MLU ) ) + RMSe ) )", "obj1": 0.6414342629482072, "obj2": 0.21095665800764277}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( Max( ( BR - FirstVNF_RAM_Server ),RRS ) + PN ) ) ) + MRS ),Max( ACS,Min( Const ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * MLU ) ),( ( ( ( ( MUR / DS ) / ( MLU / CS ) ) / ( RCSe - CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( MUC + ( RRSe * MUM ) ) ) ) ) ) + RRSe ) )", "obj1": 0.4721115537848606, "obj2": 0.3281551754929397}, {"determining": "( ( ( ( PN + FirstVNF_RAM_Server ) - PN ) - ( RRS / FirstVNF_RAM_Server ) ) * Max( ARS,FirstVNF_RAM ) )", "choosing": "Max( ( Max( RCSe,( RMSe - RCSe ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * ( MLU - Min( RMSe ,Max( ( MUM - ( MUM / DS ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.2848605577689243, "obj2": 0.5686662481087683}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.4757190380237877}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MLU - MUC ),( ( ( MLU + ( Min( MUC ,( RCSe + MUC ) ) * MLU ) ) / ( MUM * CS ) ) / Max( Max( DS,DS ),Max( ( CS * RCSe ),RCSe ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( ( ACS + FirstVNF_RAM_Server ) ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.398406374501992, "obj2": 0.4647371515523524}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( ( MUR / ( CS + RRSe ) ) + RRSe ),RRSe ) ) - ( MUM * CS ) ),( Min( ( Min( Min( RRSe ,MLU ) ,MUC ) / ( RCSe / MUC ) ) ,MUR ) + ( RMSe / DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.230194496781457}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.848605577689243, "obj2": 0.07885068869822097}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( Max( DS,DS ) - RCSe ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( ( ( CRS - ( Const * MRS ) ) / DDR ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),RCSe ) ) / ( MUM * CS ) ),Min( ( MUC + ( ( ( MUR / DS ) + MLU ) * DS ) ) ,( CS + ( Min( MUR ,( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( ( RRSe + MUR ),Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) * ARS ) ) / ( DDR * CRS ) ) + ( RRS * ( Const / CRS ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( FirstVNF_RAM_Server * RRS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.4800796812749004, "obj2": 0.31659793355787674}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - ( MRS + CRS ) ) * Max( CRS,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / ACS ) ) ) ) - FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + ( Max( ( Max( RCSe,DS ) * DS ),Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( ( MUR - MUC ) / ( MLU / CS ) ) / ( RCSe - CS ) ) * Min( ( ( ( MUR / DS ) + MLU ) / ( RCSe * DS ) ) ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5482262251592234}, {"determining": "( Max( Min( ARS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU_Server ,Const ) ) ),( PN / FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUR - ( ( ( ( RMSe - ( Min( MUM ,CS ) + ( MUR + MLU ) ) ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,RCSe ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( ( Min( RRSe ,RRSe ) / ( MUR / CS ) ) / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / ARS ) + ( PN / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * RRSe ) / ( MUR + ( MUM * RCSe ) ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( RMSe ,( RRSe * MUM ) ) )", "obj1": 0.18725099601593626, "obj2": 0.684334053505289}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + MRS ) ) * ( ( ( MDR - AMS ) - PN ) * Max( ACS,( FirstVNF_RAM_Server / ( MRS * ( Const / ARS ) ) ) ) ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( ( RMSe / RMSe ),( DS - ( CS * CS ) ) ),MUM ) ) / ( MUM * CS ) ) / ( MLU * CS ) ),( MLU + ( MUM * MUR ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5683747494916845}, {"determining": "( ( ( FirstVNF_Mem / Max( AMS,BR ) ) / FirstVNF_RAM ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( ( ( MUR / DS ) + MLU ) / ( ( ( ( MLU / ( MLU - RCSe ) ) * RMSe ) / ( RCSe + MUC ) ) * CS ) ),( Max( DS,DS ) - RCSe ) ),( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),MUC ) ) / ( MUM * CS ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6441523352457695}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( ( MRS / AMS ) + PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,( ( ( ACS + ( RRS / Max( ARS,DDR ) ) ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) ) ) ) * ( ( ( ACS * Const ) / ( MDR + RRS ) ) / AMS ) )", "choosing": "( ( MUR - ( Min( RCSe ,( ( RRSe + Max( RRSe,( MUM + MUC ) ) ) / MUM ) ) * CS ) ) / Max( MUR,DS ) )", "obj1": 0.27689243027888444, "obj2": 0.5865010355884158}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.5398406374501992, "obj2": 0.2737855876547485}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) * ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS / AMS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( RRSe + CS ) )", "obj1": 0.2689243027888446, "obj2": 0.5988043057995244}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS / Min( DDR ,AMS ) ) ) * ( MDR / ( Const / ARS ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( MLU / ( ( MUR / DS ) + MLU ) ) ) * CS ) ),( Min( RCSe ,RMSe ) - ( RMSe / RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7207071265614803}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.17928286852589642, "obj2": 0.6884625128456032}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server - MRS ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,Max( DS,RCSe ) ) + ( Max( MUM,( ( ( ( DS - DS ) - DS ) - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.03242317875081119}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( RRS / ( FirstVNF_Mem * ( MRS / AMS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( ( Min( MUR ,( ( MUR / DS ) + MLU ) ) * CS ) ,( ( MUR / DS ) + MLU ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.19322709163346613, "obj2": 0.6752980056229856}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( CS / DS ) + Max( ( MUR + ( Min( RMSe ,DS ) / RRSe ) ),MUC ) ) - RCSe ) )", "obj1": 0.9721115537848606, "obj2": 0.00970439849114883}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( Max( DS,DS ) - RCSe ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.06520540258726473}, {"determining": "( Max( ( ARS + MRS ),( CRS + FirstVNF_RAM_Server ) ) * ( ACS - RRS ) )", "choosing": "( ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( ( RCSe / ( MUM - MUM ) ) + ( DS / Min( MUR ,DS ) ) ),MUC ) ) - ( MUR + MLU ) ) + RMSe ) - ( MUM - RRSe ) )", "obj1": 0.651394422310757, "obj2": 0.20833558712054762}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( Max( DS,DS ) - RCSe ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.00970439849114883}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2137480402302041}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( ( MRS / ( FirstVNF_Mem * CRS ) ) + PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9402390438247012, "obj2": 0.025245488922959414}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( Max( ( ( AMS * MDR ) + MRS ),Max( ACS,( FirstVNF_RAM_Server / ( Max( ( Const - Min( BR ,AMS ) ),Max( FirstVNF_Mem_Server,MRS ) ) - Const ) ) ) ) * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( MUM * CS ) / ( ( Max( RCSe,MUM ) * DS ) + Max( RRSe,( MUM + RCSe ) ) ) ) ) / ( ( ( RRSe - MUC ) / Min( MUR ,CS ) ) * CS ) ),( MUR * CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3281551754929397}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.749003984063745, "obj2": 0.11182295452908764}, {"determining": "( Max( ( ( Min( ( ( ( FirstVNF_RAM - ACS ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_CPU ) - ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,Max( DS,RCSe ) ) + ( Max( MUM,( ( ( ( DS - DS ) - DS ) - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( ACS - ( RRS / RRS ) ) / ( FirstVNF_CPU_Server - MRS ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM * MUM ) / DS ),( Min( ( CS / RRSe ) ,RRSe ) * MUC ) )", "obj1": 0.898406374501992, "obj2": 0.044598293560628076}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) * ARS ) ) / PN ) + ( RRS * ( Const / CRS ) ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + ( RRS / ( FirstVNF_RAM_Server * RRS ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.4800796812749004, "obj2": 0.31659793355787674}, {"determining": "( Max( ( ( Min( ( ( ( RRS + CRS ) + ARS ) - Const ) ,( ARS * ( ( CRS - DDR ) - ( FirstVNF_RAM_Server - ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ( ( DDR * ACS ) / AMS ) ),( FirstVNF_RAM + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( MUM + ( ( CS + MUM ) / ( RRSe + MLU ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.24838617346410355}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6678629070988135}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( RRS / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MLU / DS ) + MLU ) / ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.742537127436752}, {"determining": "( Max( FirstVNF_Mem,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( MDR / ( Min( CRS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( MUR / DS ) + MLU ) ) * CS ) ),( RRSe - ( DS + MUR ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7370485719439018}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5219223936229274}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem / FirstVNF_RAM ) - Min( ( RRS - Const ) ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU_Server * PN ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( PN * ( FirstVNF_RAM_Server - AMS ) ),BR ) ) * ( ( ARS - RRS ) * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.26095617529880477, "obj2": 0.6011045033159232}, {"determining": "( Max( DDR,( ( ARS / ( DDR / ACS ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUR * DS ) ,( CS + ( ( DS / RCSe ) + MLU ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}], "31": [{"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( Max( ARS,FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( ( ( DS / MUR ) / DS ) / ( Min( Max( RCSe,( ( CS - ( ( CS - MUC ) * ( MUR + CS ) ) ) / Min( CS ,DS ) ) ) ,MLU ) / ( RRSe - ( RRSe * RCSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( CS / DS ) + Max( ( MUR + ( RCSe / MUC ) ),MUC ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ( PN * ( Min( FirstVNF_RAM ,ACS ) - FirstVNF_CPU ) ) - ARS ) ,MDR ) ,FirstVNF_CPU ) - ( ( Const + ( PN / FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUR / DS ) ,( RMSe / ( MUC - MUR ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( ( ( MUR - DS ) - MUM ),DS ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Max( DDR,FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MLU - ( RMSe - Max( ( Min( ( MLU / MLU ) ,RRSe ) / DS ),RRSe ) ) ),DS ) / ( MUM + ( MLU + CS ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7863167174635076}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.7709163346613546, "obj2": 0.08880334495140599}, {"determining": "( ( ( ( AMS / Min( BR ,( FirstVNF_Mem_Server - Min( ( AMS - BR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) + ARS ) + FirstVNF_Mem ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( Min( ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) + MLU ) ,( MUM * CS ) ),( ( RMSe / Max( Max( MUM,MUC ),( ( ( RCSe + ( MLU * MLU ) ) - ( Max( RMSe,DS ) + MLU ) ) - MLU ) ) ) / MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08235210521468618}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( Max( MDR,DDR ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUC ) / ( MLU + Max( MUR,( MLU / MUM ) ) ) )", "obj1": 0.450199203187251, "obj2": 0.3958381230389142}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ( MRS / ( ( AMS * FirstVNF_Mem_Server ) * PN ) ) + ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( Min( CRS ,( ( AMS / ( FirstVNF_RAM * ( Const - FirstVNF_Mem ) ) ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * ARS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),( Min( MUC ,( MUC / Max( MUR,DS ) ) ) + Min( Min( MLU ,DS ) ,( Max( DS,RCSe ) * RCSe ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7762271919772252}, {"determining": "( ( ( AMS * ( FirstVNF_Mem_Server * MRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) + ( MUM * CS ) ),( ( Min( DS ,RRSe ) / ( Min( Max( ( RRSe + RCSe ),RRSe ) ,Max( MUR,RRSe ) ) * ( ( ( MLU * RCSe ) + DS ) + ( Min( Min( RRSe ,RRSe ) ,RMSe ) - Max( ( MUM / RRSe ),MUM ) ) ) ) ) - ( RRSe * Min( ( MUR / ( ( RMSe - CS ) * MUM ) ) ,CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4338824607142388}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MLU - MUC ),( ( ( MLU + ( Min( MUC ,( RCSe + MUC ) ) * MLU ) ) / ( MUM * CS ) ) / Max( Max( DS,DS ),Max( ( CS * RCSe ),RCSe ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,ACS ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( Max( Max( DDR,MRS ),CRS ) - ACS ) )", "choosing": "( ( MUR - MUC ) / ( MUC + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,( MUM - CS ) ) ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.42568403112962055}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Min( ( Min( MUM ,MUR ) + MLU ) ,( MUM * CS ) ),( ( ( ( MLU / MLU ) + MUR ) + Min( CS ,MLU ) ) - Min( MUM ,RCSe ) ) )", "obj1": 0.4900398406374502, "obj2": 0.3072754718872424}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MLU / DS ) + MLU ) / ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.7549800796812749, "obj2": 0.10440529266639986}, {"determining": "( ( ( MDR / ARS ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( Max( Min( RRSe ,CS ),( DS * RMSe ) ) + ( MUM - Min( Max( Max( MUR,( ( MUC - RRSe ) + Min( MUM ,RRSe ) ) ),( MUC - ( DS / RRSe ) ) ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.4029527869929545}, {"determining": "( Max( ( ( Min( ( ( FirstVNF_RAM - CRS ) / RRS ) ,( FirstVNF_Mem_Server * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( ( DDR / CRS ),MDR ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( DS - MUM ) + ( MUR - Min( RRSe ,( RRSe / RRSe ) ) ) ) / Min( MUM ,( RMSe / ( ( RMSe * DS ) - CS ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.2234657789309148}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( ( ( RRSe + Max( ( ( MUR / ( CS + RRSe ) ) + RRSe ),RRSe ) ) - ( MUM * CS ) ),( Min( ( Min( Min( RRSe ,MLU ) ,MUC ) / ( RCSe / MUC ) ) ,MUR ) + ( RMSe / DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.230194496781457}, {"determining": "( Max( ( ARS + Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU_Server ,Const ) ) ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( MRS - FirstVNF_RAM_Server ),Max( Const,ARS ) ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.599601593625498, "obj2": 0.23753707286009815}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),ARS ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + MUM ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.292938435943794}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - ( MRS + CRS ) ) * Max( CRS,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / ACS ) ) ) ) - FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + ( Max( ( Max( RCSe,DS ) * DS ),Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( ( MUR - MUC ) / ( MLU / CS ) ) / ( RCSe - CS ) ) * Min( ( ( ( MUR / DS ) + MLU ) / ( RCSe * DS ) ) ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.30278884462151395, "obj2": 0.5604886848776744}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( RRSe,( MUC + MUM ) ) ) / ( MUM * CS ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( RCSe / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) + ( ( MUM - MUM ) - ( DS * ( Max( ( RCSe / MLU ),MUC ) - ( ( RMSe / MUC ) * MUR ) ) ) ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7092235851359198}, {"determining": "( Max( CRS,( ( ( Max( MRS,AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server / DDR ) ) / Max( CRS,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / AMS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),Min( MLU ,( CS - DS ) ) ) ) ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - Min( ( RRSe + MLU ) ,( ( MUC - ( RMSe / ( ( MUM * MLU ) * RRSe ) ) ) + RMSe ) ) )", "obj1": 0.8824701195219123, "obj2": 0.05775424403082249}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( Max( MRS,( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) )", "obj1": 0.350597609561753, "obj2": 0.503887984043078}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.17330677290836655, "obj2": 0.6995444171332842}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem / FirstVNF_RAM ) - Min( ( RRS - Const ) ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU_Server * PN ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( PN * ( FirstVNF_RAM_Server - AMS ) ),BR ) ) * ( ( ARS - RRS ) * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( MLU - MUC ),( ( ( MLU + ( Min( MUC ,( RCSe + MUC ) ) * MLU ) ) / ( MUM * CS ) ) / Max( Max( DS,DS ),Max( ( CS * RCSe ),RCSe ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5368648868403003}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),ARS ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,MUC ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( MUR / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.17147469723041234}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( ( MRS / ( FirstVNF_Mem * CRS ) ) + PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9402390438247012, "obj2": 0.025245488922959414}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) / ( MUM * CS ) ) / ( MUM - CS ) ),( MLU + ( ( RMSe + RRSe ) / RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5268940987624168}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ARS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( Max( ( MUC - ( DS / RRSe ) ),RRSe ) * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7191235059760956, "obj2": 0.14319354728795775}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM * Min( PN ,( FirstVNF_CPU_Server / Max( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,ACS ) / MDR ),( PN - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUR * DS ) ,( CS + ( ( DS / RCSe ) + MLU ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( Max( Max( CRS,( PN / ( AMS * MDR ) ) ),Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),Max( ACS,Max( FirstVNF_Mem,CRS ) ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( Max( RCSe,DS ) * DS ) + Max( ( MUM + MUC ),RRSe ) ) / ( MUM * CS ) ) + RRSe ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,( ( MUM - ( MUM + RRSe ) ) / ( ( RRSe * CS ) - CS ) ) ) ) ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.5099557855535212}, {"determining": "( ( ( FirstVNF_CPU_Server / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( Max( DS,DS ) - RCSe ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.8665338645418327, "obj2": 0.06757491647795194}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ARS / ( DDR / ACS ) ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / DS ) / MUM ),Min( ( MUR * DS ) ,( CS + ( ( DS / RCSe ) + MLU ) ) ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.1904909380442091}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * MUM ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.46613545816733065, "obj2": 0.34368670028292947}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( MRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) / ( Min( Min( MUC ,CS ) ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) ) )", "obj1": 0.6912350597609562, "obj2": 0.17422029046687204}, {"determining": "( Max( CRS,Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( MRS / ( ARS * PN ) ) - ( RRS / FirstVNF_Mem ) ) ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Min( MDR ,( ( Min( Min( BR ,FirstVNF_CPU_Server ) ,Min( BR ,ACS ) ) - ARS ) * ( Max( CRS,DDR ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) / ( MLU + Min( DS ,Max( ( MUM - ( CS * RCSe ) ),RRSe ) ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.14143426294820718, "obj2": 0.743331329816338}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,DS ) ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.457105298579621}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * DS ) - CS ) ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2137480402302041}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( ACS,Min( FirstVNF_RAM_Server ,( MRS - CRS ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.26368377183077485}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( Max( ( ARS + MRS ),Max( ( AMS * ( FirstVNF_Mem_Server * MRS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - Max( ( RRSe + RCSe ),RRSe ) ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.7250996015936255, "obj2": 0.13547487193413144}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + Min( RCSe ,( ( Max( RCSe,RCSe ) + ( RCSe / RRSe ) ) / CS ) ) ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.17928286852589642, "obj2": 0.6884625128456032}, {"determining": "( ( ( ( BR * Min( ( PN - ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) / DDR ) - ( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( Max( MUM,( ( ( MUM * RMSe ) - MLU ) * DS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.8924302788844621, "obj2": 0.05250353491204347}, {"determining": "( Max( ( ( Min( ( ARS * MDR ) ,( ( Max( RRS,MRS ) - FirstVNF_RAM ) / RRS ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,( ACS + ( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) * MUM ) / Min( MUM ,( ( Max( MUC,Min( MUM ,RMSe ) ) / ( RRSe - ( CS + MLU ) ) ) / ( ( Min( RRSe ,( MUC / RCSe ) ) * DS ) - CS ) ) ) )", "obj1": 0.5836653386454184, "obj2": 0.24366915247749005}, {"determining": "( ( ( Max( Max( ( ( Min( CRS ,FirstVNF_RAM ) - PN ) + ( ( MRS / FirstVNF_CPU_Server ) - Const ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Const ) ) ) + ( CRS - FirstVNF_Mem ) ) + FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( MLU + ( MUR / CS ) ) / ( MUM * CS ) ),Max( ( Min( DS ,RRSe ) / ( ( ( ( ( MUR / MUM ) + MUM ) / ( CS * MUM ) ) / DS ) * ( ( ( MLU * RCSe ) + DS ) + Max( ( ( CS * RRSe ) - ( MUM - RMSe ) ),RRSe ) ) ) ),RRSe ) )", "obj1": 0.9940239043824701, "obj2": 0.006469821697353932}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem / FirstVNF_RAM ) - Min( ( RRS - Const ) ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU_Server * PN ) + ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( PN * ( FirstVNF_RAM_Server - AMS ) ),BR ) ) * ( ( ARS - RRS ) * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.26095617529880477, "obj2": 0.6011045033159232}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),ACS ) - Const ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( Min( RRSe ,( ( MUR / CS ) - MLU ) ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.7430278884462151, "obj2": 0.12746089377880285}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * ( MRS / AMS ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( ( MRS / AMS ) + PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( RRSe + ( RRSe + Max( RRSe,( MUM + MUC ) ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5440910203472393}, {"determining": "( Max( Min( ARS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU_Server ,Const ) ) ),( PN / FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUR - ( ( ( ( RMSe - ( Min( MUM ,CS ) + ( MUR + MLU ) ) ) / MLU ) / ( ( ( Max( MUR,RMSe ) + Max( RCSe,RCSe ) ) / MUR ) + MUR ) ) / MUR ) ) / Min( ( MUR + Min( RRSe ,( ( ( Min( RRSe ,RRSe ) / ( MUR / CS ) ) / CS ) - MLU ) ) ) ,( Min( RRSe ,CS ) / ( MLU + MUR ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.20027265065786998}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * RRSe ) * ( MLU + Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),RRSe ) ) ) ) - ( Min( ( RRSe + MLU ) ,( ( MUC - ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + RMSe ) ) + ( ( MUR / DS ) / ( ( MUM - MUM ) - Max( ( RCSe * CS ),( DS / Min( MUC ,RCSe ) ) ) ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03564194191340446}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( ( MRS / AMS ) + PN ) ) ) + MRS ),Max( ACS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR / DS ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.5577689243027888, "obj2": 0.2613362054362604}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( PN - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( ( MUR / DS ) + MLU ) / ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.3944223107569721, "obj2": 0.47225432162193204}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM ) * FirstVNF_RAM ) + ( Max( MDR,ACS ) * FirstVNF_Mem ) ) * ( ( Const - PN ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( ( Max( Const,PN ) - ( FirstVNF_RAM - MRS ) ) + ( MRS / Const ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( MUR + ( ( Min( RCSe ,MUR ) / RRSe ) + MLU ) ),MUC ) ) / ( RCSe * CS ) ),( ( MUC * RCSe ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.48810870649030536}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( RRS / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.5681407926847913}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) * ( ( CRS - FirstVNF_RAM ) / RRS ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( CS + ( ( MUM * CS ) / ( MUR * MLU ) ) ),MUC ) ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6812749003984063, "obj2": 0.1879035851311342}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - Min( MUM ,( MUR - RRSe ) ) ) ) / ( RMSe * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6203446626700222}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( ( ( MUM * MLU ) * RRSe ) / RMSe ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04223484411905335}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / ARS ) + FirstVNF_CPU_Server ) ) - Const ) ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( CS + ( DS / ( MUR * MLU ) ) ) ) ) * CS ) ),( Max( DS,DS ) - RCSe ) )", "obj1": 0.1593625498007968, "obj2": 0.7205047293732397}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) * ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( RRS / AMS ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( RRSe + CS ) )", "obj1": 0.2689243027888446, "obj2": 0.5988043057995244}, {"determining": "( Max( ( Max( ( ARS / ( MDR / FirstVNF_Mem ) ),( MRS / ( RRS + RRS ) ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM / ARS ) + FirstVNF_CPU_Server ) ) - Const ) ) ),Max( ACS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR / DS ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( DS * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4721115537848606, "obj2": 0.3281551754929397}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( RRS / CRS ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.28286852589641437, "obj2": 0.5786010860414392}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * Max( ACS,( ( FirstVNF_RAM / ARS ) / ( RRS / RRS ) ) ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.36254980079681276, "obj2": 0.49932495797904575}, {"determining": "( Max( ( ( Min( ( ( CRS - Max( MDR,FirstVNF_RAM ) ) / RRS ) ,( ( RRS / Max( MDR,DDR ) ) * ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * ( Max( MDR,DDR ) / ( DDR - MRS ) ) ) ) / PN ) / RRS ) ) )", "choosing": "( ( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + ( MUM * CS ) ) + MUR ) ) / Max( MUR,CS ) ) ) - ( ( Max( ( Max( ( RCSe + ( MUR / MUM ) ),DS ) * DS ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.5677290836653387, "obj2": 0.25247046480542845}, {"determining": "( Max( FirstVNF_Mem,Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( MDR / ( Min( CRS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem * ( MRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( MUR / DS ) + MLU ) ) * CS ) ),( RRSe - ( DS + MUR ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7370485719439018}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) + FirstVNF_CPU_Server ) ) * Min( ( AMS + ( FirstVNF_RAM - ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem * ( RRS * Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUC - MUR ) / ( MLU * ( ( RCSe - ( ( ( DS / Max( RCSe,RMSe ) ) + MUM ) + RRSe ) ) / CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.4803464037771361}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / ARS ) + ( PN / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM / Min( PN ,FirstVNF_RAM_Server ) ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * RRSe ) / ( MUR + ( MUM * RCSe ) ) ) / DS ) + MLU ) / ( MUM * CS ) ),Min( RMSe ,( RRSe * MUM ) ) )", "obj1": 0.18725099601593626, "obj2": 0.684334053505289}, {"determining": "( ( ( CRS - ( Const * MRS ) ) / DDR ) - FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),RCSe ) ) / ( MUM * CS ) ),Min( ( MUC + ( ( ( MUR / DS ) + MLU ) * DS ) ) ,( CS + ( Min( MUR ,( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ) / ( ( ( RCSe * MUR ) * MUM ) + ( MUR / Max( ( RRSe + MUR ),Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( Max( FirstVNF_Mem,Max( ( MRS - FirstVNF_RAM_Server ),Max( Max( FirstVNF_RAM_Server,CRS ),ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MUR / DS ) + MLU ) / ( ( ( MUR / RMSe ) * ( DS + DS ) ) * DS ) ) ) * CS ) ),( Min( DS ,DS ) - RCSe ) )", "obj1": 0.15737051792828685, "obj2": 0.7232695842134602}, {"determining": "( ( ( FirstVNF_Mem / Max( AMS,BR ) ) / FirstVNF_RAM ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( ( ( MUR / DS ) + MLU ) / ( ( ( ( MLU / ( MLU - RCSe ) ) * RMSe ) / ( RCSe + MUC ) ) * CS ) ),( Max( DS,DS ) - RCSe ) ),( ( ( MUR / DS ) + Max( ( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM * CS ) ),MUC ) ) / ( MUM * CS ) ) )", "obj1": 0.250996015936255, "obj2": 0.6093426309404979}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.848605577689243, "obj2": 0.07885068869822097}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( Min( MUC ,CS ) ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) ) )", "obj1": 0.7111553784860558, "obj2": 0.1607790751521662}, {"determining": "( ( Max( CRS,( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6441523352457695}, {"determining": "( Max( ( ( Min( ( ( ( RRS + CRS ) + ARS ) - Const ) ,( ARS * ( ( CRS - DDR ) - ( FirstVNF_RAM_Server - ARS ) ) ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( ACS - ( ( DDR * ACS ) / AMS ) ),( FirstVNF_RAM + ACS ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( MUM + ( ( CS + MUM ) / ( RRSe + MLU ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.24838617346410355}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( MRS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) ) ) * ( RRS / MDR ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( Min( MUR ,( ( ( MLU / DS ) + MLU ) / ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) * CS ) ),( RRSe + Max( Max( MLU,Max( ( MUR - RRSe ),DS ) ),MUM ) ) )", "obj1": 0.14940239043824702, "obj2": 0.737681117723821}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * FirstVNF_RAM_Server )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + RCSe ) ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.19721115537848605, "obj2": 0.6673785809122952}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( Min( MUC ,CS ) ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1251482735475358}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( ( Max( Max( ( ( Min( DDR ,FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( MRS - ( PN * Max( FirstVNF_CPU,ACS ) ) ) ) ) + ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.848605577689243, "obj2": 0.07885068869822097}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.4103585657370518, "obj2": 0.44675983694375915}, {"determining": "( Max( ( ( RRS * FirstVNF_Mem ) + MRS ),Max( ACS,Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( MUR + MLU ) )", "obj1": 0.4820717131474104, "obj2": 0.3109398898997469}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS + MRS ) ) * Max( PN,Const ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( CS / DS ) + Max( ( MUR + ( Min( RMSe ,DS ) / RRSe ) ),MUC ) ) - RCSe ) )", "obj1": 0.21912350597609562, "obj2": 0.654504128521041}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * FirstVNF_RAM ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / AMS ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) * ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( ( Max( RCSe,DS ) * DS ),( Max( MUM,( ( MUR - CS ) - MUM ) ) / ( Min( Min( MUC ,CS ) ,RRSe ) / CS ) ) ) - ( MUR + MLU ) ) + ( ( ( ( MUR / DS ) * ( MUC - MUR ) ) / ( MUM * CS ) ) + MLU ) ) )", "obj1": 0.7111553784860558, "obj2": 0.1607790751521662}, {"determining": "( Max( ( ( Min( ( ( CRS - FirstVNF_RAM ) / RRS ) ,( ARS * MDR ) ) / PN ) + ( RRS * FirstVNF_Mem ) ),Max( CRS,Max( FirstVNF_Mem,Max( ( MRS - ( ( AMS / FirstVNF_Mem ) - PN ) ),( ACS + ( RRS / Max( MDR,DDR ) ) ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( ( ( MUM - DS ) + MUM ) / Min( MUM ,( RMSe / ( ( Min( RRSe ,( RCSe / MUC ) ) * ( MUR - MUC ) ) - CS ) ) ) )", "obj1": 0.5179282868525896, "obj2": 0.28582881971072277}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / AMS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( CS / DS ) + Max( ( MUR + ( Min( RMSe ,DS ) / RRSe ) ),MUC ) ) - RCSe ) )", "obj1": 0.9721115537848606, "obj2": 0.00970439849114883}, {"determining": "( Max( ( ARS + MRS ),( CRS + FirstVNF_RAM_Server ) ) * ( ACS - RRS ) )", "choosing": "( ( ( Max( Max( ( RCSe * MUR ),DS ),Max( ( ( RCSe / ( MUM - MUM ) ) + ( DS / Min( MUR ,DS ) ) ),MUC ) ) - ( MUR + MLU ) ) + RMSe ) - ( MUM - RRSe ) )", "obj1": 0.651394422310757, "obj2": 0.20833558712054762}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( Max( ACS,( ACS + ( FirstVNF_CPU / ( FirstVNF_Mem_Server + MDR ) ) ) ) / FirstVNF_RAM ) - ( Const - RRS ) ) / Min( PN ,( FirstVNF_RAM / ( ( DDR / ARS ) + PN ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ) / ( MUM * CS ) ),Min( ( MUC + ( RCSe * DS ) ) ,( CS + ( Min( ( ( MUC / Min( RCSe ,RMSe ) ) + ( CS + ( MUC + MUR ) ) ) ,MUR ) / ( ( Max( DS,DS ) - RCSe ) + ( MUR / Max( MUM,Max( DS,MUR ) ) ) ) ) ) ) )", "obj1": 0.9780876494023905, "obj2": 0.007201568291210715}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.5398406374501992, "obj2": 0.2737855876547485}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( FirstVNF_Mem_Server / AMS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( ( ( MUR / DS ) + ( MUR - MUC ) ) / ( MUM * CS ) ) + MLU ) / ( MUM * CS ) ),( ( MUM / DS ) - RCSe ) )", "obj1": 0.9302788844621513, "obj2": 0.028058344989937766}, {"determining": "( ( FirstVNF_Mem * CRS ) + ( Min( Max( ( ACS + CRS ),Min( FirstVNF_RAM_Server ,( MRS - Const ) ) ) ,ARS ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe + ( RRSe + ( MUC + MUM ) ) ) / ( MUM * CS ) ),( MUR - ( ( ( ( ( MUR - ( MLU + MUR ) ) - RMSe ) / MLU ) / ( ( ( MUM - DS ) + ( MUM * CS ) ) + MUR ) ) / Max( MUR,CS ) ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5523789562643785}, {"determining": "( Max( ( ARS + MRS ),Max( Max( ( ( ( CRS * RRS ) / PN ) + ( RRS * FirstVNF_Mem ) ),( MRS / ( ( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_Mem_Server ) * PN ) ) ),Min( FirstVNF_RAM_Server ,( Max( ( ( ACS - ARS ) - FirstVNF_Mem ),DDR ) - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - RRSe ) - ( ( Max( Max( DS,MUR ),CS ) - ( MUR + MLU ) ) + RMSe ) )", "obj1": 0.6553784860557769, "obj2": 0.20578373283481446}, {"determining": "( Max( ( Min( PN ,( FirstVNF_RAM / ( Max( ( BR - FirstVNF_RAM_Server ),RRS ) + PN ) ) ) + MRS ),Max( ACS,Min( Const ,( MRS - Const ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * MLU ) ),( ( ( ( ( MUR / DS ) / ( MLU / CS ) ) / ( RCSe - CS ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( MUC + ( RRSe * MUM ) ) ) ) ) ) + RRSe ) )", "obj1": 0.4721115537848606, "obj2": 0.3281551754929397}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server * Max( MRS,( FirstVNF_Mem_Server / Const ) ) ) ) / Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_Mem_Server / DDR ) - ( ( ( MRS / AMS ) + PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),( ( ( ( RCSe - CS ) / ( ( MUR - MUC ) / ( MLU / CS ) ) ) * Min( MLU ,Min( RMSe ,Max( ( MUM - ( DS / RRSe ) ),( ( RRSe * DS ) - CS ) ) ) ) ) + RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.587307312643812}, {"determining": "( Max( ( ( Min( ( ( ( FirstVNF_RAM - ACS ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_CPU ) - ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) / ( Min( MUR ,Max( DS,RCSe ) ) + ( Max( MUM,( ( ( ( DS - DS ) - DS ) - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM / ARS ) + FirstVNF_CPU_Server ) ) - Const ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RRSe + RCSe ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.25026934754975677}, {"determining": "( Max( Max( CRS,Min( FirstVNF_Mem_Server ,( ( CRS - FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) ) ),Max( ( MRS - FirstVNF_RAM_Server ),Max( ACS,ARS ) ) ) * ( ACS - ARS ) )", "choosing": "Max( ( ( RRSe + ( ( ( Max( RCSe,DS ) * DS ) + Max( RRSe,( MUM + MUC ) ) ) / ( MUM * CS ) ) ) / ( MUM * CS ) ),Min( MUM ,( RMSe / ( ( Min( MUR ,RRSe ) * ( RCSe / ( ( MUR - MUM ) * RRSe ) ) ) - ( MUC - ( ( MUR / CS ) - DS ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5219223936229274}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,Min( FirstVNF_Mem_Server ,MDR ) ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) ) * ( ACS - ARS ) )", "choosing": "( ( MUR - MUC ) / ( MLU + ( MUM - Min( Max( ( MUC - ( DS / RRSe ) ),RRSe ) ,Min( DS ,MUC ) ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.4757190380237877}, {"determining": "( ( ACS - ( MDR / PN ) ) * ( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + MLU ) / Max( Min( RRSe ,MUC ),( DS * RMSe ) ) ),( ( ( MUR / DS ) + Max( MUC,( MUR + ( ( RCSe * MUR ) + MLU ) ) ) ) - RCSe ) )", "obj1": 0.749003984063745, "obj2": 0.11182295452908764}, {"determining": "( ( Max( CRS,Max( FirstVNF_Mem,Max( ACS,( ACS + ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) ) ) ) ) + ( Min( PN ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) * MRS )", "choosing": "Max( ( ( ( ( ( RCSe * MUR ) / ( Min( MUR ,( CS + DS ) ) * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( ( MUR / Min( MLU ,RRSe ) ) - DS ) )", "obj1": 0.2151394422310757, "obj2": 0.6568640688641232}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "Max( Max( CS,( RMSe * MLU ) ),Max( ( ( ( ( ( RCSe * MUR ) / ( MUM * CS ) ) / DS ) + MLU ) / ( MUM * CS ) ),( Max( DS,DS ) - RCSe ) ) )", "obj1": 0.5398406374501992, "obj2": 0.2737855876547485}, {"determining": "( Max( DDR,( ( ARS / ( DDR / ACS ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server )", "choosing": "Max( ( ( MUR / DS ) / MUM ),Min( ( MUR * DS ) ,( CS + ( ( DS / RCSe ) + MLU ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7528638600634235}, {"determining": "( Max( ( ( Min( ( ( ( ACS - FirstVNF_RAM ) - ( Const * MRS ) ) / RRS ) ,( MDR * ( ( CRS - FirstVNF_Mem ) / ( RRS + FirstVNF_RAM_Server ) ) ) ) / PN ) + ( RRS * ARS ) ),Max( CRS,( FirstVNF_Mem + Max( ( ACS - ARS ),( ACS + FirstVNF_RAM ) ) ) ) ) * ( ACS - ( RRS / RRS ) ) )", "choosing": "( Max( ( ( ( MUR / DS ) + MLU ) / ( MUM * CS ) ),( ( ( MUR / DS ) + MLU ) * DS ) ) / ( Min( MUR ,( DS * RCSe ) ) + ( Max( MUM,( ( MUR - RRSe ) - MUM ) ) / ( Min( MUC ,RRSe ) / CS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2781056790692524}]}