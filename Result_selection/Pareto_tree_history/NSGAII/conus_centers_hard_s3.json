{"1": [{"determining": "( ( Const * FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + MUC ),( CS * RCSe ) )", "obj1": 0.6773547094188377, "obj2": 0.25204802877355725}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( ( ( MRS * BR ) / BR ) + ACS ) / FirstVNF_CPU ) ) - ( MDR / BR ) )", "choosing": "( ( CS + RMSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU + BR ) )", "choosing": "( ( RCSe * DS ) + Min( RRSe ,DS ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( ACS + ( ACS + DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) )", "obj1": 0.6352705410821643, "obj2": 0.2973216430583313}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Min( ( MDR / MDR ) ,( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUR ) + Max( RMSe,Min( CS ,MUR ) ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 0.6292585170340681, "obj2": 0.29959438223434925}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * Max( ( CRS / PN ),( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - MUM ) + RMSe ) / Max( ( RCSe / MUM ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Max( ( BR / Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + Max( RRSe,Min( MUM ,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) ) * Min( RMSe ,DS ) ) / Min( Min( MUR ,MUM ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.20920630284718206}, {"determining": "( ( DDR + MRS ) + ( Const / RRS ) )", "choosing": "Min( Max( CS,RCSe ) ,( DS + MUC ) )", "obj1": 0.6412825651302605, "obj2": 0.2782068521949652}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( FirstVNF_CPU + DDR ) * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( RMSe * RRSe ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6513026052104208, "obj2": 0.25436283241520713}, {"determining": "Min( ( MDR / FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Min( Min( MUR ,CS ) ,CS ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * BR ) ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUC ) + ( CS + RRSe ) ) * Max( ( RRSe / MUR ),( RMSe - RRSe ) ) ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.2642801689166924}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_Mem - ( Const - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem - Max( ( PN / FirstVNF_RAM_Server ),ACS ) ) / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( RMSe / ( ( ( MUC * RMSe ) + DS ) / MUR ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + ( RMSe + CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) * ARS ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Max( ARS,Min( DDR ,FirstVNF_RAM ) ) + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( ( MUR - MLU ) - ( ( RCSe * ( MUM * MUR ) ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( ( ( MRS * BR ) / BR ) + ACS ) / FirstVNF_CPU ) ) - ( MDR / BR ) )", "choosing": "( ( CS + RMSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU + BR ) )", "choosing": "( ( RCSe * DS ) + Min( RRSe ,DS ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( ACS + ( ACS + DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * Max( ( CRS / PN ),( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - MUM ) + RMSe ) / Max( ( RCSe / MUM ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Min( ( MDR / FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Min( Min( MUR ,CS ) ,CS ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_Mem - ( Const - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem - Max( ( PN / FirstVNF_RAM_Server ),ACS ) ) / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( RMSe / ( ( ( MUC * RMSe ) + DS ) / MUR ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + ( RMSe + CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) * ARS ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Max( ARS,Min( DDR ,FirstVNF_RAM ) ) + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( ( MUR - MLU ) - ( ( RCSe * ( MUM * MUR ) ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * PN ) ,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - MUC ) + MUM ) + Min( RRSe ,( Min( MUR ,Max( DS,MUC ) ) / RRSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.19716402851161383}, {"determining": "( Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) * Min( Min( ( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / RRSe ) * Max( CS,MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) )", "obj1": 0.6312625250501002, "obj2": 0.2545161630772277}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25169684978021767}, {"determining": "( ( MRS + ( ( CRS * CRS ) / RRS ) ) - ( DDR * ACS ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + ( Max( MUR,( ( ( Min( RCSe ,RCSe ) / ( MUR + CS ) ) + MUR ) / RCSe ) ) / ( ( ( ( CS + ( MUR + RRSe ) ) / MUC ) * Min( Min( ( MLU - MUR ) ,Max( MUC,RCSe ) ) ,( ( DS + RMSe ) / RMSe ) ) ) - ( ( MUC + RCSe ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - MDR ) * BR ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( Min( DS ,RMSe ) + ( DS + CS ) ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + ( RCSe / Max( CS,CS ) ) ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) / ( MUR * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) / ( Min( ( FirstVNF_Mem / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( MUC - RMSe ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS * RRS ) ),( Const / FirstVNF_RAM ) )", "choosing": "( ( ( MUR + MUC ) * Min( RRSe ,DS ) ) / Min( Min( ( RMSe / RCSe ) ,MUM ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.6913827655310621, "obj2": 0.21866424336039086}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002404974262392982}, {"determining": "( Max( CRS,MRS ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,MLU ) ,( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + ( ( FirstVNF_RAM * BR ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( AMS + Max( ( ARS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( MUR * ( RCSe / CS ) ) )", "obj1": 0.6492985971943888, "obj2": 0.232533517151251}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RRSe,RCSe ) * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_RAM ) / ARS ) )", "choosing": "( ( RMSe * CS ) / Max( ( Max( ( RRSe - ( ( RMSe - MLU ) * MUM ) ),MUM ) - RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6172344689378757, "obj2": 0.26429471665032755}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( Min( ( CRS * ( ( MDR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server / CRS ) ) ) ,( PN - ( Max( FirstVNF_Mem,CRS ) * MRS ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * Max( Max( MUM,RRSe ),MUR ) ),( RRSe + MLU ) ) * ( RMSe * ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( Max( DDR,MRS ) - ( MDR / BR ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( MUM ,( DS / MLU ) ) ) ,( ( CS - MUC ) / Min( RMSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS * AMS ) * ( Const - PN ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( RMSe / RMSe ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( ( MUM + MUR ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( MRS / ( ( Max( ( RRS * BR ),Max( FirstVNF_RAM,Const ) ) + FirstVNF_RAM ) + ( ( ( CRS * ( MDR - FirstVNF_CPU_Server ) ) / ACS ) * ( MRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MUR ,RCSe ),( ( Min( RRSe ,( CS + CS ) ) - Min( ( RMSe + DS ) ,DS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ( Min( DDR ,FirstVNF_RAM ) * Max( RRS,Const ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - ( CS + Min( ( MUC / RCSe ) ,( ( Min( ( RMSe - CS ) ,MUM ) - DS ) + MUC ) ) ) ) / Min( ( MUC * ( Max( MUC,CS ) * ( MUM + DS ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS / Min( ( AMS - ARS ) ,Max( ( AMS - ( FirstVNF_RAM_Server - MRS ) ),( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( DS ,Min( DS ,RRSe ) ) - MUC ) ) ,( MLU * CS ) )", "obj1": 0.9278557114228457, "obj2": 0.0705268004658684}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( ( ( FirstVNF_Mem_Server / MRS ) * ( ARS * Max( ARS,RRS ) ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( MLU - MUC ) + ( DS + Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + ( BR / FirstVNF_Mem ) ) - ( MDR / BR ) ) * ( ARS * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( ( MUC * MUM ) + ( Min( Min( Min( MUR ,( RMSe / ( MUM - RRSe ) ) ) ,MUR ) ,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / Max( Min( RRS ,FirstVNF_Mem ),ACS ) )", "choosing": "( RMSe - Min( RCSe ,Min( ( Max( ( MLU - RRSe ),MUM ) - RMSe ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( RRSe + ( CS - CS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Max( Min( ACS ,DDR ),Min( DDR ,AMS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( RMSe - ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ARS + ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( ( MUC * CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002404974262392982}, {"determining": "( ( Const - Max( Min( FirstVNF_RAM_Server ,DDR ),BR ) ) * ( ( Min( ( FirstVNF_Mem_Server * CRS ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RMSe + RRSe ) * ( RRSe / ( Min( MLU ,( MUR - RRSe ) ) / CS ) ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server * PN ),FirstVNF_Mem ) * PN ) )", "choosing": "( Max( Min( RCSe ,( ( Min( RCSe ,( MUC / ( RMSe - RRSe ) ) ) - Min( DS ,MLU ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( MRS - ( ( ( Max( BR,MRS ) - FirstVNF_RAM_Server ) + PN ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) * MUR ) ,MLU ),Min( MUM ,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6172344689378757, "obj2": 0.26429471665032755}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_RAM - ( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) + DDR ) ) ) )", "choosing": "( Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) - ( MUR - MUC ) )", "obj1": 0.8396793587174348, "obj2": 0.11897086615789054}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) + ( PN - ( FirstVNF_Mem_Server - Min( Min( RRS ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe + MUC ) / Min( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) ) )", "obj1": 0.8957915831663327, "obj2": 0.08257130594768598}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( Min( Max( ACS,FirstVNF_CPU ) ,MRS ),Min( AMS ,( RRS / ( ( AMS + DDR ) - FirstVNF_Mem ) ) ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Min( CS ,RRSe ) - RMSe ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( Min( MLU ,RMSe ) / RRSe ) ) ) * RRSe ) )", "obj1": 0.7655310621242485, "obj2": 0.12753082324643317}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) * ARS ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Max( ARS,Min( DDR ,FirstVNF_RAM ) ) + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( ( MUR - MLU ) - ( ( RCSe * ( MUM * MUR ) ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( ( Max( CRS,MRS ) - BR ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / MLU ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 0.9378757515030061, "obj2": 0.027369204777045186}, {"determining": "( ( CRS - AMS ) * ( AMS - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / Min( RCSe ,MUC ) ) ) )", "obj1": 0.7434869739478958, "obj2": 0.18419924289132572}, {"determining": "Min( ( ACS / Min( ( AMS - ARS ) ,Max( ( AMS - ( FirstVNF_RAM_Server - MRS ) ),( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( DS ,Min( DS ,RRSe ) ) - MUC ) ) ,( MLU * CS ) )", "obj1": 0.9278557114228457, "obj2": 0.0705268004658684}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( Min( ( FirstVNF_CPU + ( RRS - FirstVNF_CPU ) ) ,( ACS + PN ) ) ,( ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) ) - ( MDR / BR ) ) * ( ARS - CRS ) ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Min( ( ( Max( MUC,MUC ) + CS ) + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( ( MUC + RCSe ) - ( RMSe + MUM ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( ( MUC * MUM ) ,RCSe ) * MUC ) )", "obj1": 0.9739478957915831, "obj2": 0.010819807265991929}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) - Const ) ) / ( MDR - PN ) ) - ( Max( ( Min( ( FirstVNF_RAM * ( MRS * FirstVNF_Mem ) ) ,MDR ) * DDR ),( ARS + PN ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),Min( RMSe ,DS ) ) ) ,RCSe ) * RMSe ) - MUR ) ) ,( MUC + RRSe ) )", "obj1": 0.8657314629258517, "obj2": 0.10155451702340232}, {"determining": "Min( ( MDR * PN ) ,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - MUC ) + MUM ) + Min( RRSe ,( Min( MUR ,Max( DS,MUC ) ) / RRSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.19716402851161383}, {"determining": "( ( FirstVNF_Mem + ( ( PN * FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( AMS + BR ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( MUR * ( RCSe + ( RMSe / Min( RRSe ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.228460884282238}, {"determining": "Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( ( ( DS / ( ( ( MUR - MUM ) * Max( RMSe,MUM ) ) * MUC ) ) / CS ) * CS ) )", "obj1": 0.9318637274549099, "obj2": 0.045518218879300736}, {"determining": "Max( ( BR / Min( MRS ,Min( MDR ,( FirstVNF_Mem - ( FirstVNF_Mem * Min( FirstVNF_CPU ,( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + Max( RRSe,Min( MUM ,( RMSe * ( MLU + RRSe ) ) ) ) ) * Min( RMSe ,DS ) ) / Min( Min( MUR ,MUM ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.6773547094188377, "obj2": 0.22196817557253973}, {"determining": "( FirstVNF_CPU_Server / ( AMS - FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe / RCSe ) ,MUM ) - Min( RCSe ,MUC ) )", "obj1": 0.8537074148296593, "obj2": 0.11221895495382615}, {"determining": "Min( ( ACS - ARS ) ,Max( FirstVNF_CPU_Server,( Min( ARS ,FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Min( CS ,( Min( ( ( MUR - ( RCSe / RMSe ) ) * ( MLU + Min( MUC ,RMSe ) ) ) ,CS ) + MLU ) ) - RMSe ) * ( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) ) )", "obj1": 0.7414829659318637, "obj2": 0.18712755775284703}, {"determining": "Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + BR ) )", "choosing": "( DS + Min( ( MUC * RRSe ) ,DS ) )", "obj1": 0.6933867735470942, "obj2": 0.20776641629296874}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25169684978021767}, {"determining": "Max( Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS * RRS ) ),( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) ) )", "choosing": "( ( ( MUR + MUC ) * Min( RRSe ,DS ) ) / ( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.2184214248956695}, {"determining": "( ( ( MRS / MRS ) + AMS ) - ( MDR / BR ) )", "choosing": "( CS + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + CS ) )", "obj1": 0.9919839679358717, "obj2": 0.003961442666488925}, {"determining": "( Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) * Min( Min( ( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / RRSe ) * Max( CS,MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) )", "obj1": 0.6312625250501002, "obj2": 0.2545161630772277}, {"determining": "Min( ( ( Max( FirstVNF_RAM,( ( PN * BR ) * Min( ( ACS / MRS ) ,( MRS / MRS ) ) ) ) / ( MDR * BR ) ) - ( AMS + Min( ( FirstVNF_CPU_Server - MDR ) ,PN ) ) ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUR ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * ( MUR / ( RMSe / MUM ) ) ) )", "obj1": 0.627254509018036, "obj2": 0.2622305880516165}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( FirstVNF_CPU + DDR ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( RMSe * RRSe ) / MUR ) ) ,MUC )", "obj1": 0.6392785571142284, "obj2": 0.2534590028356994}, {"determining": "Min( Min( DDR ,Const ) ,( ( Max( ( AMS + MDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) / ( MDR + Min( FirstVNF_Mem ,Const ) ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Max( MUC,MUC ) )", "obj1": 0.6292585170340681, "obj2": 0.25998741765504313}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * Max( ( CRS / PN ),( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - MUM ) + RMSe ) / Max( ( RCSe / MUM ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002404974262392982}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,( MDR / MDR ) ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25169684978021767}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002404974262392982}, {"determining": "( ( FirstVNF_RAM + ( ( ( ( MRS * BR ) / BR ) + ACS ) / FirstVNF_CPU ) ) - ( MDR / BR ) )", "choosing": "( ( CS + RMSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( ACS + ( ACS + DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Min( Min( MUR ,CS ) ,CS ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_Mem - ( Const - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem - Max( ( PN / FirstVNF_RAM_Server ),ACS ) ) / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( RMSe / ( ( ( MUC * RMSe ) + DS ) / MUR ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + ( RMSe + CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + ( ( CRS * CRS ) / RRS ) ) - ( DDR * ACS ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + ( Max( MUR,( ( ( Min( RCSe ,RCSe ) / ( MUR + CS ) ) + MUR ) / RCSe ) ) / ( ( ( ( CS + ( MUR + RRSe ) ) / MUC ) * Min( Min( ( MLU - MUR ) ,Max( MUC,RCSe ) ) ,( ( DS + RMSe ) / RMSe ) ) ) - ( ( MUC + RCSe ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - MDR ) * BR ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( Min( DS ,RMSe ) + ( DS + CS ) ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + ( RCSe / Max( CS,CS ) ) ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) / ( MUR * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) / ( Min( ( FirstVNF_Mem / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( MUC - RMSe ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,MLU ) ,( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RRSe,RCSe ) * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_RAM ) / ARS ) )", "choosing": "( ( RMSe * CS ) / Max( ( Max( ( RRSe - ( ( RMSe - MLU ) * MUM ) ),MUM ) - RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( Min( ( CRS * ( ( MDR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server / CRS ) ) ) ,( PN - ( Max( FirstVNF_Mem,CRS ) * MRS ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * Max( Max( MUM,RRSe ),MUR ) ),( RRSe + MLU ) ) * ( RMSe * ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( Max( DDR,MRS ) - ( MDR / BR ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( MUM ,( DS / MLU ) ) ) ,( ( CS - MUC ) / Min( RMSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS * AMS ) * ( Const - PN ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( RMSe / RMSe ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( ( MUM + MUR ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( MRS / ( ( Max( ( RRS * BR ),Max( FirstVNF_RAM,Const ) ) + FirstVNF_RAM ) + ( ( ( CRS * ( MDR - FirstVNF_CPU_Server ) ) / ACS ) * ( MRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MUR ,RCSe ),( ( Min( RRSe ,( CS + CS ) ) - Min( ( RMSe + DS ) ,DS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ( Min( DDR ,FirstVNF_RAM ) * Max( RRS,Const ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - ( CS + Min( ( MUC / RCSe ) ,( ( Min( ( RMSe - CS ) ,MUM ) - DS ) + MUC ) ) ) ) / Min( ( MUC * ( Max( MUC,CS ) * ( MUM + DS ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( ( ( FirstVNF_Mem_Server / MRS ) * ( ARS * Max( ARS,RRS ) ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( MLU - MUC ) + ( DS + Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + ( BR / FirstVNF_Mem ) ) - ( MDR / BR ) ) * ( ARS * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( ( MUC * MUM ) + ( Min( Min( Min( MUR ,( RMSe / ( MUM - RRSe ) ) ) ,MUR ) ,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / Max( Min( RRS ,FirstVNF_Mem ),ACS ) )", "choosing": "( RMSe - Min( RCSe ,Min( ( Max( ( MLU - RRSe ),MUM ) - RMSe ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( RRSe + ( CS - CS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Max( Min( ACS ,DDR ),Min( DDR ,AMS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( RMSe - ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ARS + ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( ( MUC * CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( Min( FirstVNF_RAM_Server ,DDR ),BR ) ) * ( ( Min( ( FirstVNF_Mem_Server * CRS ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RMSe + RRSe ) * ( RRSe / ( Min( MLU ,( MUR - RRSe ) ) / CS ) ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server * PN ),FirstVNF_Mem ) * PN ) )", "choosing": "( Max( Min( RCSe ,( ( Min( RCSe ,( MUC / ( RMSe - RRSe ) ) ) - Min( DS ,MLU ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( ( Min( ( RCSe * ( ( RMSe * MUC ) * Max( DS,( MUM / DS ) ) ) ) ,RRSe ) - RMSe ) * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( Min( FirstVNF_CPU ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * CS ) / Max( Min( ( ( MLU + MLU ) * ( ( RMSe * RRSe ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( MRS - MDR ) * PN ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RCSe + MUR ) + ( MUM - DS ) ),( MLU / Max( ( ( RRSe + ( ( RRSe + RMSe ) / ( MUM + RMSe ) ) ) - MUR ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( DS * DS ) / Max( ( DS + RMSe ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( Max( FirstVNF_CPU,Max( FirstVNF_CPU,ARS ) ) - Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Max( Min( MUR ,RCSe ),( ( RRSe - ( RMSe + Max( ( RRSe / Min( MUC ,MUR ) ),MUM ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Const / PN ) ) )", "choosing": "Min( ( CS / ( ( ( DS * MLU ) - CS ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,CRS ) + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MUR - ( MUR - ( RMSe + MUR ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / RRS ) / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( ( ( MUM + MLU ) - ( MUM - RMSe ) ) - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_RAM_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + ( ( ( PN / ( BR - MDR ) ) * PN ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( MUM - ( Max( RCSe,CS ) * Max( MUM,MUC ) ) ) * ( Min( MUM ,MUC ) - ( CS - CS ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( FirstVNF_CPU + DDR ) * FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( RMSe * ( ( DS + CS ) * RRSe ) ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( ( RMSe + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,( PN + ARS ) ) - ACS )", "choosing": "Min( ( RCSe / RMSe ) ,Min( Min( Min( ( Min( ( Min( MLU ,MLU ) * MUR ) ,CS ) + DS ) ,MUC ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) ) - ( ACS / ( ( MRS * RRS ) + RRS ) ) )", "choosing": "( ( CS * CS ) * Max( Min( ( RCSe * MUR ) ,Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) ) ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( ( Min( Min( RRS ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) / ARS ) - Min( BR ,PN ) ) ) - ( ( ( ARS - FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ) / ( ( MRS * FirstVNF_Mem_Server ) * Max( PN,ARS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS / MLU ) ) / ( ( RRSe * ( RCSe + RMSe ) ) - Max( Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) ),( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( RRS * AMS ) ) * ( AMS + BR ) ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( DS - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Max( RRSe,Min( ( DS / ( MUM * RCSe ) ) ,( MUR / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * Min( ( ACS / MRS ) ,( MRS / MRS ) ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server / ( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) - Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( RCSe ,MUC ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,CRS ) ) ,( ( PN * FirstVNF_RAM_Server ) / ( CRS - AMS ) ) ),( FirstVNF_CPU * DDR ) ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( ( ( ( ( MUC * MUM ) * ( ( RMSe + DS ) - ( MUC * RRSe ) ) ) - ( ( MUR / RMSe ) + Min( MUC ,CS ) ) ) * ( ( ( RCSe * RCSe ) + ( Min( RRSe ,( ( MUM - MUM ) * Min( CS ,MUM ) ) ) / MUC ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) ),Max( ( ( RMSe + RRSe ) * ( RRSe / DS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( FirstVNF_CPU - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( Max( ( RMSe + DS ),Max( MUM,CS ) ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) * ( ARS * FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC * MUM ) + ( Min( MUC ,RMSe ) / MUC ) ) - Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) / ( ACS / ( MRS * Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * MUC ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Const ) * Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( ( BR / BR ) - ( Max( ( ( FirstVNF_Mem * ( Const - FirstVNF_RAM_Server ) ) * ACS ),ACS ) + PN ) ) ) )", "choosing": "Max( ( MUM / RRSe ),( RRSe / Min( ( MLU + MUC ) ,Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * CRS )", "choosing": "Max( Min( RCSe ,( MUR / CS ) ),Max( ( RRSe + ( MUC - Max( MUC,RCSe ) ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + ( FirstVNF_Mem / FirstVNF_Mem ) ) - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - ( RRSe + Min( Min( ( RRSe - MUM ) ,MLU ) ,( RRSe + Max( Min( RMSe ,Min( MUR ,CS ) ),( RRSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / ( ( AMS - ARS ) - FirstVNF_RAM ) )", "choosing": "( RMSe - ( Min( CS ,RRSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM - CRS ) - ( FirstVNF_RAM_Server * ACS ) ) / Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ,Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( Max( Min( MUC ,RMSe ),( MUR / MLU ) ) * Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) ) + FirstVNF_RAM_Server ) * ( AMS + BR ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( ( MUR * RRSe ) * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Max( MLU,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( AMS - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_CPU ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),( MUR * CS ) ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + RRS ) ,Max( FirstVNF_CPU_Server,( Max( CRS,MRS ) - BR ) ) )", "choosing": "( Max( RMSe,MLU ) * ( Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Const ) * ( ( Const - FirstVNF_CPU_Server ) * ( ( Min( ( FirstVNF_Mem_Server * CRS ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / Max( FirstVNF_CPU,ARS ) ) ) ) )", "choosing": "Max( ( Min( Max( ( MUC / MUC ),MUC ) ,RMSe ) / RRSe ),( RRSe / Min( ( MLU + MUC ) ,Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( Max( Max( ( ( ARS - CRS ) * ACS ),RRS ),RRS ) + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( ( MUR - ( RMSe + Min( ( MUM * MUM ) ,RCSe ) ) ) * Max( ( ( MUC * MLU ) * RRSe ),( ( ( RCSe + DS ) + CS ) * MLU ) ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( MRS / ( FirstVNF_Mem_Server * DDR ) ) * FirstVNF_Mem ) / ( FirstVNF_RAM / ( Min( DDR ,ARS ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - Min( DS ,( Max( ( CS / MUM ),Max( MUR,CS ) ) / MUC ) ) ) ,Min( MUR ,( RRSe / ( RRSe / DS ) ) ) ) / Max( ( MLU - ( MUR - DS ) ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( ( ( Max( BR,MRS ) - FirstVNF_RAM_Server ) + PN ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) * MUR ) ,MLU ),Min( MUM ,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,( CS / Min( RMSe ,MLU ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.2771422415110298}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( Min( FirstVNF_CPU ,ACS ) - FirstVNF_CPU_Server ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( Min( ( DS + Min( Min( RMSe ,MUC ) ,RMSe ) ) ,RRSe ) + Min( Max( DS,MUM ) ,MUR ) ) ) + ( ( RRSe - ( Max( ( MUM * Min( ( MUC / CS ) ,( RMSe - MLU ) ) ),( MUM / MUM ) ) + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7995991983967936, "obj2": 0.10188249613470449}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) * RRSe ) )", "obj1": 0.8797595190380761, "obj2": 0.05096978892442373}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) * ARS ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Max( ARS,Min( DDR ,FirstVNF_RAM ) ) + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( ( MUR - MLU ) - ( ( RCSe * ( MUM * MUR ) ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) - Const ) ) / ( MDR - PN ) ) - ( Max( ( Min( ( FirstVNF_RAM * ( MRS * FirstVNF_Mem ) ) ,MDR ) * DDR ),( ARS + PN ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),Min( RMSe ,DS ) ) ) ,RCSe ) * RMSe ) - MUR ) ) ,( MUC + RRSe ) )", "obj1": 0.8657314629258517, "obj2": 0.10155451702340232}, {"determining": "( ( CRS - AMS ) * ( AMS - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / Min( RCSe ,MUC ) ) ) )", "obj1": 0.7434869739478958, "obj2": 0.18419924289132572}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( Min( Max( ACS,FirstVNF_CPU ) ,MRS ),Min( AMS ,( RRS / ( ( AMS + DDR ) - FirstVNF_Mem ) ) ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Min( CS ,RRSe ) - RMSe ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( Min( MLU ,RMSe ) / RRSe ) ) ) * RRSe ) )", "obj1": 0.7655310621242485, "obj2": 0.12753082324643317}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - MRS ) ) )", "choosing": "Min( ( CS / ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) ,CS ) )", "obj1": 0.875751503006012, "obj2": 0.08784227230464083}, {"determining": "Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( ( ( DS / ( ( ( MUR - MUM ) * Max( RMSe,MUM ) ) * MUC ) ) / CS ) * CS ) )", "obj1": 0.9318637274549099, "obj2": 0.045518218879300736}, {"determining": "( ( FirstVNF_Mem + ( ( PN * FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( AMS + BR ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( MUR * ( RCSe + ( RMSe / Min( RRSe ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.228460884282238}, {"determining": "( FirstVNF_CPU - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) ,MLU ),Min( MUM ,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) )", "obj1": 0.9679358717434869, "obj2": 0.02279004531887155}, {"determining": "Max( ( BR / Min( MRS ,Min( MDR ,( FirstVNF_Mem - ( FirstVNF_Mem * Min( FirstVNF_CPU ,( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + Max( RRSe,Min( MUM ,( RMSe * ( MLU + RRSe ) ) ) ) ) * Min( RMSe ,DS ) ) / Min( Min( MUR ,MUM ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.6773547094188377, "obj2": 0.22196817557253973}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,( MDR / MDR ) ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / MLU ) * Max( CS,MLU ) ) )", "obj1": 0.6332665330661322, "obj2": 0.24536423615510555}, {"determining": "( ( ( ( Max( CRS,MRS ) - BR ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / MLU ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 0.9378757515030061, "obj2": 0.027369204777045186}, {"determining": "Min( ( ACS - ARS ) ,Max( FirstVNF_CPU_Server,( Min( ARS ,Min( MRS ,RRS ) ) / MRS ) ) )", "choosing": "( ( Min( CS ,( Min( ( ( MUR - ( MLU / RMSe ) ) * ( MLU + Min( MUC ,MUC ) ) ) ,CS ) + MLU ) ) - RMSe ) * ( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) ) )", "obj1": 0.7294589178356713, "obj2": 0.19598544388556244}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( Min( ( FirstVNF_CPU + ( RRS - FirstVNF_CPU ) ) ,( ACS + PN ) ) ,( ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) ) - ( MDR / BR ) ) * ( ARS - CRS ) ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Min( ( ( Max( MUC,MUC ) + CS ) + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( ( MUC + RCSe ) - ( RMSe + MUM ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( ( MUC * MUM ) ,RCSe ) * MUC ) )", "obj1": 0.9739478957915831, "obj2": 0.010819807265991929}, {"determining": "Max( Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS * RRS ) ),( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) ) )", "choosing": "( ( ( MUR + MUC ) * Min( RRSe ,DS ) ) / ( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.2184214248956695}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.935871743486974, "obj2": 0.03246030585540604}, {"determining": "Min( ( ACS - ARS ) ,Max( FirstVNF_CPU_Server,( Min( ARS ,FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Min( CS ,( Min( ( ( MUR - ( RCSe / RMSe ) ) * ( MLU + Min( MUC ,RMSe ) ) ) ,CS ) + MLU ) ) - RMSe ) * ( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) ) )", "obj1": 0.7414829659318637, "obj2": 0.18712755775284703}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6172344689378757, "obj2": 0.26429471665032755}, {"determining": "Min( ( ACS / CRS ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( DS ,Min( DS ,RRSe ) ) - MUC ) ) ,( MLU * Max( MLU,RMSe ) ) )", "obj1": 0.6112224448897795, "obj2": 0.27110315377099303}, {"determining": "Min( ( MDR * PN ) ,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - MUC ) + MUM ) + Min( RRSe ,( Min( MUR ,Max( DS,MUC ) ) / RRSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.19716402851161383}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.9819639278557114, "obj2": 0.005880913839146858}, {"determining": "( Min( ( MRS + Const ) ,( FirstVNF_CPU_Server - BR ) ) * Min( Min( ( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / RRSe ) * Max( CS,MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) )", "obj1": 0.6312625250501002, "obj2": 0.2545161630772277}, {"determining": "Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + BR ) )", "choosing": "( DS + Min( ( MUC * RRSe ) ,DS ) )", "obj1": 0.6933867735470942, "obj2": 0.20776641629296874}, {"determining": "Min( ( ( Max( FirstVNF_RAM,( ( PN * BR ) * Min( ( ACS / MRS ) ,( MRS / MRS ) ) ) ) / ( MDR * BR ) ) - ( AMS + Min( ( FirstVNF_CPU_Server - MDR ) ,PN ) ) ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUR ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * ( MUR / ( RMSe / MUM ) ) ) )", "obj1": 0.627254509018036, "obj2": 0.2622305880516165}, {"determining": "Min( FirstVNF_Mem_Server ,( ( ( AMS / FirstVNF_Mem ) / CRS ) / ( Const + ARS ) ) )", "choosing": "( DS + ( ( MUR * ( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.7034068136272545, "obj2": 0.2028024578164599}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( MRS / MRS ) + AMS ) - ( MDR / BR ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,( ( CS + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + CS ) ) * Max( CS,MLU ) ) )", "obj1": 0.9919839679358717, "obj2": 0.0038181507659877842}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( MLU * CS ) )", "obj1": 0.7054108216432866, "obj2": 0.19879500398710914}, {"determining": "Min( ( MDR * PN ) ,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - MUC ) + MUM ) + Min( RRSe ,( Min( MUR ,Max( DS,MUC ) ) / RRSe ) ) )", "obj1": 0.6993987975951904, "obj2": 0.2071467534015969}, {"determining": "Min( Min( DDR ,Const ) ,( ( Max( ( AMS + MDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) / ( MDR + Min( FirstVNF_Mem ,Const ) ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Max( MUC,MUC ) )", "obj1": 0.6292585170340681, "obj2": 0.25998741765504313}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * Max( ( CRS / PN ),( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - MUM ) + RMSe ) / Max( ( RCSe / MUM ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Min( Min( CRS ,( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Const ) + ACS ) ) ,( Min( ( FirstVNF_CPU / Const ) ,( FirstVNF_CPU + BR ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( ( MUC + Min( MUR ,MLU ) ) / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6953907815631263, "obj2": 0.20770104145500007}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002404974262392982}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + ARS ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( MUM ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002404974262392982}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( ( ( MRS * BR ) / BR ) + ACS ) / FirstVNF_CPU ) ) - ( MDR / BR ) )", "choosing": "( ( CS + RMSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( ACS + ( ACS + DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Min( Min( MUR ,CS ) ,CS ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_Mem - ( Const - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem - Max( ( PN / FirstVNF_RAM_Server ),ACS ) ) / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( RMSe / ( ( ( MUC * RMSe ) + DS ) / MUR ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + ( RMSe + CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + ( ( CRS * CRS ) / RRS ) ) - ( DDR * ACS ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + ( Max( MUR,( ( ( Min( RCSe ,RCSe ) / ( MUR + CS ) ) + MUR ) / RCSe ) ) / ( ( ( ( CS + ( MUR + RRSe ) ) / MUC ) * Min( Min( ( MLU - MUR ) ,Max( MUC,RCSe ) ) ,( ( DS + RMSe ) / RMSe ) ) ) - ( ( MUC + RCSe ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - MDR ) * BR ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( Min( DS ,RMSe ) + ( DS + CS ) ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + ( RCSe / Max( CS,CS ) ) ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) / ( MUR * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) / ( Min( ( FirstVNF_Mem / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( MUC - RMSe ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,MLU ) ,( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RRSe,RCSe ) * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_RAM ) / ARS ) )", "choosing": "( ( RMSe * CS ) / Max( ( Max( ( RRSe - ( ( RMSe - MLU ) * MUM ) ),MUM ) - RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( Min( ( CRS * ( ( MDR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server / CRS ) ) ) ,( PN - ( Max( FirstVNF_Mem,CRS ) * MRS ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * Max( Max( MUM,RRSe ),MUR ) ),( RRSe + MLU ) ) * ( RMSe * ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( Max( DDR,MRS ) - ( MDR / BR ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( MUM ,( DS / MLU ) ) ) ,( ( CS - MUC ) / Min( RMSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS * AMS ) * ( Const - PN ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( RMSe / RMSe ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( ( MUM + MUR ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( MRS / ( ( Max( ( RRS * BR ),Max( FirstVNF_RAM,Const ) ) + FirstVNF_RAM ) + ( ( ( CRS * ( MDR - FirstVNF_CPU_Server ) ) / ACS ) * ( MRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MUR ,RCSe ),( ( Min( RRSe ,( CS + CS ) ) - Min( ( RMSe + DS ) ,DS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ( Min( DDR ,FirstVNF_RAM ) * Max( RRS,Const ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - ( CS + Min( ( MUC / RCSe ) ,( ( Min( ( RMSe - CS ) ,MUM ) - DS ) + MUC ) ) ) ) / Min( ( MUC * ( Max( MUC,CS ) * ( MUM + DS ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( ( ( FirstVNF_Mem_Server / MRS ) * ( ARS * Max( ARS,RRS ) ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( MLU - MUC ) + ( DS + Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + ( BR / FirstVNF_Mem ) ) - ( MDR / BR ) ) * ( ARS * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( ( MUC * MUM ) + ( Min( Min( Min( MUR ,( RMSe / ( MUM - RRSe ) ) ) ,MUR ) ,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / Max( Min( RRS ,FirstVNF_Mem ),ACS ) )", "choosing": "( RMSe - Min( RCSe ,Min( ( Max( ( MLU - RRSe ),MUM ) - RMSe ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( RRSe + ( CS - CS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Max( Min( ACS ,DDR ),Min( DDR ,AMS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( RMSe - ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ARS + ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( ( MUC * CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( Min( FirstVNF_RAM_Server ,DDR ),BR ) ) * ( ( Min( ( FirstVNF_Mem_Server * CRS ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RMSe + RRSe ) * ( RRSe / ( Min( MLU ,( MUR - RRSe ) ) / CS ) ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server * PN ),FirstVNF_Mem ) * PN ) )", "choosing": "( Max( Min( RCSe ,( ( Min( RCSe ,( MUC / ( RMSe - RRSe ) ) ) - Min( DS ,MLU ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( ( Min( ( RCSe * ( ( RMSe * MUC ) * Max( DS,( MUM / DS ) ) ) ) ,RRSe ) - RMSe ) * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( Min( FirstVNF_CPU ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * CS ) / Max( Min( ( ( MLU + MLU ) * ( ( RMSe * RRSe ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( MRS - MDR ) * PN ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RCSe + MUR ) + ( MUM - DS ) ),( MLU / Max( ( ( RRSe + ( ( RRSe + RMSe ) / ( MUM + RMSe ) ) ) - MUR ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( DS * DS ) / Max( ( DS + RMSe ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( Max( FirstVNF_CPU,Max( FirstVNF_CPU,ARS ) ) - Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Max( Min( MUR ,RCSe ),( ( RRSe - ( RMSe + Max( ( RRSe / Min( MUC ,MUR ) ),MUM ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Const / PN ) ) )", "choosing": "Min( ( CS / ( ( ( DS * MLU ) - CS ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,CRS ) + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MUR - ( MUR - ( RMSe + MUR ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / RRS ) / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( ( ( MUM + MLU ) - ( MUM - RMSe ) ) - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_RAM_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + ( ( ( PN / ( BR - MDR ) ) * PN ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( MUM - ( Max( RCSe,CS ) * Max( MUM,MUC ) ) ) * ( Min( MUM ,MUC ) - ( CS - CS ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( FirstVNF_CPU + DDR ) * FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( RMSe * ( ( DS + CS ) * RRSe ) ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( ( RMSe + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,( PN + ARS ) ) - ACS )", "choosing": "Min( ( RCSe / RMSe ) ,Min( Min( Min( ( Min( ( Min( MLU ,MLU ) * MUR ) ,CS ) + DS ) ,MUC ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) ) - ( ACS / ( ( MRS * RRS ) + RRS ) ) )", "choosing": "( ( CS * CS ) * Max( Min( ( RCSe * MUR ) ,Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) ) ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( ( Min( Min( RRS ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) / ARS ) - Min( BR ,PN ) ) ) - ( ( ( ARS - FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ) / ( ( MRS * FirstVNF_Mem_Server ) * Max( PN,ARS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS / MLU ) ) / ( ( RRSe * ( RCSe + RMSe ) ) - Max( Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) ),( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( RRS * AMS ) ) * ( AMS + BR ) ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( DS - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Max( RRSe,Min( ( DS / ( MUM * RCSe ) ) ,( MUR / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * Min( ( ACS / MRS ) ,( MRS / MRS ) ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server / ( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) - Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( RCSe ,MUC ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,CRS ) ) ,( ( PN * FirstVNF_RAM_Server ) / ( CRS - AMS ) ) ),( FirstVNF_CPU * DDR ) ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( ( ( ( ( MUC * MUM ) * ( ( RMSe + DS ) - ( MUC * RRSe ) ) ) - ( ( MUR / RMSe ) + Min( MUC ,CS ) ) ) * ( ( ( RCSe * RCSe ) + ( Min( RRSe ,( ( MUM - MUM ) * Min( CS ,MUM ) ) ) / MUC ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) ),Max( ( ( RMSe + RRSe ) * ( RRSe / DS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( FirstVNF_CPU - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( Max( ( RMSe + DS ),Max( MUM,CS ) ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) * ( ARS * FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC * MUM ) + ( Min( MUC ,RMSe ) / MUC ) ) - Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) / ( ACS / ( MRS * Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * MUC ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Const ) * Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( ( BR / BR ) - ( Max( ( ( FirstVNF_Mem * ( Const - FirstVNF_RAM_Server ) ) * ACS ),ACS ) + PN ) ) ) )", "choosing": "Max( ( MUM / RRSe ),( RRSe / Min( ( MLU + MUC ) ,Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * CRS )", "choosing": "Max( Min( RCSe ,( MUR / CS ) ),Max( ( RRSe + ( MUC - Max( MUC,RCSe ) ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + ( FirstVNF_Mem / FirstVNF_Mem ) ) - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - ( RRSe + Min( Min( ( RRSe - MUM ) ,MLU ) ,( RRSe + Max( Min( RMSe ,Min( MUR ,CS ) ),( RRSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) * PN ) )", "choosing": "Max( ( ( RCSe + RCSe ) + MUM ),Max( ( ( RCSe + MUR ) + ( MUM - DS ) ),( MLU / Max( ( ( RRSe + ( ( MUR - RMSe ) / ( MUM + RMSe ) ) ) - MUR ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server * DDR ) ) * FirstVNF_Mem ) / ( FirstVNF_RAM / ( Min( DDR ,ARS ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - Min( DS ,( Max( ( CS / MUM ),Max( MUR,CS ) ) / MUC ) ) ) ,Min( MUR ,( RRSe / ( RRSe / DS ) ) ) ) / Max( ( MLU - ( MUR - DS ) ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,RMSe ) )", "obj1": 0.6052104208416834, "obj2": 0.2871765223542591}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( Min( FirstVNF_CPU ,ACS ) - FirstVNF_CPU_Server ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( Min( ( DS + Min( Min( RMSe ,MUC ) ,RMSe ) ) ,RRSe ) + Min( Max( DS,MUM ) ,MUR ) ) ) + ( ( RRSe - ( Max( ( MUM * Min( ( MUC / CS ) ,( RMSe - MLU ) ) ),( MUM / MUM ) ) + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7995991983967936, "obj2": 0.10188249613470449}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) * RRSe ) )", "obj1": 0.8797595190380761, "obj2": 0.05096978892442373}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Max( FirstVNF_CPU_Server,Min( DDR ,FirstVNF_RAM ) ) + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( Max( MUM,CS ) / ( MUM + RMSe ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7555110220440882, "obj2": 0.13256414526582339}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) - Const ) ) / ( MDR - PN ) ) - ( Max( ( Min( ( FirstVNF_RAM * ( MRS * FirstVNF_Mem ) ) ,MDR ) * DDR ),( ARS + PN ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),Min( RMSe ,DS ) ) ) ,RCSe ) * RMSe ) - MUR ) ) ,( MUC + RRSe ) )", "obj1": 0.8657314629258517, "obj2": 0.10155451702340232}, {"determining": "( ( CRS - AMS ) * ( AMS - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / Min( RCSe ,MUC ) ) ) )", "obj1": 0.7434869739478958, "obj2": 0.18419924289132572}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - MRS ) ) )", "choosing": "Min( ( CS / ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) ,CS ) )", "obj1": 0.875751503006012, "obj2": 0.08784227230464083}, {"determining": "Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( ( ( DS / ( ( ( MUR - MUM ) * Max( RMSe,MUM ) ) * MUC ) ) / CS ) * CS ) )", "obj1": 0.9318637274549099, "obj2": 0.045518218879300736}, {"determining": "( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) / ( MRS + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) / ( RRSe + MUC ) )", "obj1": 0.7735470941883767, "obj2": 0.12072337735946646}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * RCSe )", "obj1": 0.9659318637274549, "obj2": 0.012170541403770154}, {"determining": "( ( FirstVNF_Mem + ( ( PN * FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( AMS + BR ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( MUR * ( RCSe + ( RMSe / Min( RRSe ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.228460884282238}, {"determining": "( ( ( ( Max( CRS,MRS ) - BR ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / MLU ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 0.9378757515030061, "obj2": 0.027369204777045186}, {"determining": "Max( ( BR / Min( MRS ,Min( MDR ,( FirstVNF_Mem - ( FirstVNF_Mem * Min( FirstVNF_CPU ,( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + Max( RRSe,Min( MUM ,( RMSe * ( MLU + RRSe ) ) ) ) ) * Min( RMSe ,DS ) ) / Min( Min( MUR ,MUM ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.6773547094188377, "obj2": 0.22196817557253973}, {"determining": "Min( ( ACS - ARS ) ,Max( FirstVNF_CPU_Server,( Min( ARS ,Min( MRS ,RRS ) ) / MRS ) ) )", "choosing": "( ( Min( CS ,( Min( ( ( MUR - ( MLU / RMSe ) ) * ( MLU + Min( MUC ,MUC ) ) ) ,CS ) + MLU ) ) - RMSe ) * ( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) ) )", "obj1": 0.7294589178356713, "obj2": 0.19598544388556244}, {"determining": "( ( ( ARS - RRS ) / ( Const + ARS ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - RMSe ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6452905811623246, "obj2": 0.2409659350416466}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( Min( Max( ACS,FirstVNF_CPU ) ,MRS ),Min( AMS ,( RRS / ( ( AMS + DDR ) - FirstVNF_Mem ) ) ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Min( CS ,RRSe ) - RMSe ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( Min( MLU ,RMSe ) / RRSe ) ) ) * RRSe ) )", "obj1": 0.7655310621242485, "obj2": 0.12753082324643317}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,( MDR / MDR ) ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / MLU ) * Max( CS,MLU ) ) )", "obj1": 0.6332665330661322, "obj2": 0.24536423615510555}, {"determining": "Min( ( ACS - ARS ) ,Max( FirstVNF_CPU_Server,( Min( ARS ,FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Min( CS ,( Min( ( ( MUR - ( RCSe / RMSe ) ) * ( MLU + Min( MUC ,RMSe ) ) ) ,CS ) + MLU ) ) - RMSe ) * ( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) ) )", "obj1": 0.7414829659318637, "obj2": 0.18712755775284703}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( MLU * Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) ) )", "obj1": 0.6813627254509018, "obj2": 0.21254161974732633}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,( CS / Min( RMSe ,MLU ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.2771422415110298}, {"determining": "Min( ( MDR * PN ) ,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - MUC ) + MUM ) + Min( RRSe ,( Min( MUR ,Max( DS,MUC ) ) / RRSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.19716402851161383}, {"determining": "Min( ( ACS / CRS ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( DS ,Min( DS ,RRSe ) ) - MUC ) ) ,( MLU * Max( MLU,RMSe ) ) )", "obj1": 0.6112224448897795, "obj2": 0.27110315377099303}, {"determining": "Min( Min( CRS ,( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Const ) + ACS ) ) ,( Min( ( FirstVNF_CPU / Const ) ,( FirstVNF_CPU + BR ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( ( MUC + Min( MUR ,MLU ) ) / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6933867735470942, "obj2": 0.20734698586409608}, {"determining": "Min( Min( DDR ,Const ) ,Max( Max( MDR,( FirstVNF_CPU_Server * PN ) ),Const ) )", "choosing": "Min( ( ( ( Min( ( RMSe + RMSe ) ,( Min( MUR ,Max( RRSe,MLU ) ) - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6312625250501002, "obj2": 0.25316997621438464}, {"determining": "Min( Min( DDR ,Const ) ,( ( Max( ( AMS + MDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) / ( MDR + Min( FirstVNF_Mem ,Const ) ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Max( MUC,MUC ) )", "obj1": 0.6292585170340681, "obj2": 0.25998741765504313}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6172344689378757, "obj2": 0.26429471665032755}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Const ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( Max( ( RRSe + ( MUC - Max( MUC,RCSe ) ) ),( MUR - RMSe ) ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.935871743486974, "obj2": 0.03246030585540604}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( Min( ( FirstVNF_CPU + ( RRS - FirstVNF_CPU ) ) ,( ACS + PN ) ) ,( ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) ) - ( MDR / BR ) ) * ( ARS - CRS ) ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Min( ( ( Max( MUC,MUC ) + CS ) + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( ( MUC + RCSe ) - ( RMSe + MUM ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( ( MUC * MUM ) ,RCSe ) * MUC ) )", "obj1": 0.9739478957915831, "obj2": 0.010819807265991929}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,( MDR / FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( Max( Min( DS ,RMSe ),Min( RMSe ,DS ) ) ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / MLU ) * Max( CS,MLU ) ) )", "obj1": 0.6192384769539078, "obj2": 0.261244618325456}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.9819639278557114, "obj2": 0.005880913839146858}, {"determining": "Min( FirstVNF_Mem_Server ,( ( ( AMS / FirstVNF_Mem ) / CRS ) / ( Const + ARS ) ) )", "choosing": "( DS + ( ( MUR * ( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.7034068136272545, "obj2": 0.2028024578164599}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( MRS / MRS ) + AMS ) - ( MDR / BR ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,( ( CS + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + CS ) ) * Max( CS,MLU ) ) )", "obj1": 0.9919839679358717, "obj2": 0.0038181507659877842}, {"determining": "( ( FirstVNF_Mem + ( ( PN * Min( DDR ,Const ) ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( AMS + BR ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( ( RMSe * ( ( DS + CS ) * RRSe ) ) / MUR ) )", "obj1": 0.6793587174348698, "obj2": 0.21886719552976602}, {"determining": "Min( ( MDR * PN ) ,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - MUC ) + MUM ) + Min( RRSe ,( Min( MUR ,Max( DS,MUC ) ) / RRSe ) ) )", "obj1": 0.6993987975951904, "obj2": 0.2071467534015969}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( MLU * CS ) )", "obj1": 0.7054108216432866, "obj2": 0.19879500398710914}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( Min( ( FirstVNF_CPU + ( RRS - FirstVNF_CPU ) ) ,( ACS + PN ) ) ,( ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) ) - ( MDR / BR ) ) * ( ARS - CRS ) ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Min( ( ( Max( MUC,MUC ) + CS ) + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( ( MUC + RCSe ) - ( RMSe + MUM ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( ( MUC * MUM ) ,RCSe ) * MUC ) )", "obj1": 0.9799599198396793, "obj2": 0.00807260495040589}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.935871743486974, "obj2": 0.03246030585540604}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * Max( ( CRS / PN ),( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - MUM ) + RMSe ) / Max( ( RCSe / MUM ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002404974262392982}, {"determining": "( ( MDR - PN ) - Min( ( ( ( BR + ARS ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( MUM ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002404974262392982}, {"determining": "( MRS - ( ( ( Max( BR,MRS ) - FirstVNF_RAM_Server ) + PN ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) * MUR ) ,MLU ),Min( MUM ,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( ( ( MRS * BR ) / BR ) + ACS ) / FirstVNF_CPU ) ) - ( MDR / BR ) )", "choosing": "( ( CS + RMSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( ACS + ( ACS + DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Min( Min( MUR ,CS ) ,CS ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_Mem - ( Const - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem - Max( ( PN / FirstVNF_RAM_Server ),ACS ) ) / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( RMSe / ( ( ( MUC * RMSe ) + DS ) / MUR ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + ( RMSe + CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + ( ( CRS * CRS ) / RRS ) ) - ( DDR * ACS ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + ( Max( MUR,( ( ( Min( RCSe ,RCSe ) / ( MUR + CS ) ) + MUR ) / RCSe ) ) / ( ( ( ( CS + ( MUR + RRSe ) ) / MUC ) * Min( Min( ( MLU - MUR ) ,Max( MUC,RCSe ) ) ,( ( DS + RMSe ) / RMSe ) ) ) - ( ( MUC + RCSe ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - MDR ) * BR ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( Min( DS ,RMSe ) + ( DS + CS ) ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + ( RCSe / Max( CS,CS ) ) ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) / ( MUR * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) / ( Min( ( FirstVNF_Mem / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( MUC - RMSe ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,MLU ) ,( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RRSe,RCSe ) * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_RAM ) / ARS ) )", "choosing": "( ( RMSe * CS ) / Max( ( Max( ( RRSe - ( ( RMSe - MLU ) * MUM ) ),MUM ) - RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( Min( ( CRS * ( ( MDR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server / CRS ) ) ) ,( PN - ( Max( FirstVNF_Mem,CRS ) * MRS ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * Max( Max( MUM,RRSe ),MUR ) ),( RRSe + MLU ) ) * ( RMSe * ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( Max( DDR,MRS ) - ( MDR / BR ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( MUM ,( DS / MLU ) ) ) ,( ( CS - MUC ) / Min( RMSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS * AMS ) * ( Const - PN ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( RMSe / RMSe ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( ( MUM + MUR ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( MRS / ( ( Max( ( RRS * BR ),Max( FirstVNF_RAM,Const ) ) + FirstVNF_RAM ) + ( ( ( CRS * ( MDR - FirstVNF_CPU_Server ) ) / ACS ) * ( MRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MUR ,RCSe ),( ( Min( RRSe ,( CS + CS ) ) - Min( ( RMSe + DS ) ,DS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ( Min( DDR ,FirstVNF_RAM ) * Max( RRS,Const ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - ( CS + Min( ( MUC / RCSe ) ,( ( Min( ( RMSe - CS ) ,MUM ) - DS ) + MUC ) ) ) ) / Min( ( MUC * ( Max( MUC,CS ) * ( MUM + DS ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( ( ( FirstVNF_Mem_Server / MRS ) * ( ARS * Max( ARS,RRS ) ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( MLU - MUC ) + ( DS + Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + ( BR / FirstVNF_Mem ) ) - ( MDR / BR ) ) * ( ARS * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( ( MUC * MUM ) + ( Min( Min( Min( MUR ,( RMSe / ( MUM - RRSe ) ) ) ,MUR ) ,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / Max( Min( RRS ,FirstVNF_Mem ),ACS ) )", "choosing": "( RMSe - Min( RCSe ,Min( ( Max( ( MLU - RRSe ),MUM ) - RMSe ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( RRSe + ( CS - CS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Max( Min( ACS ,DDR ),Min( DDR ,AMS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( RMSe - ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ARS + ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( ( MUC * CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( Min( FirstVNF_RAM_Server ,DDR ),BR ) ) * ( ( Min( ( FirstVNF_Mem_Server * CRS ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RMSe + RRSe ) * ( RRSe / ( Min( MLU ,( MUR - RRSe ) ) / CS ) ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server * PN ),FirstVNF_Mem ) * PN ) )", "choosing": "( Max( Min( RCSe ,( ( Min( RCSe ,( MUC / ( RMSe - RRSe ) ) ) - Min( DS ,MLU ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( ( Min( ( RCSe * ( ( RMSe * MUC ) * Max( DS,( MUM / DS ) ) ) ) ,RRSe ) - RMSe ) * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( Min( FirstVNF_CPU ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * CS ) / Max( Min( ( ( MLU + MLU ) * ( ( RMSe * RRSe ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( MRS - MDR ) * PN ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RCSe + MUR ) + ( MUM - DS ) ),( MLU / Max( ( ( RRSe + ( ( RRSe + RMSe ) / ( MUM + RMSe ) ) ) - MUR ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( DS * DS ) / Max( ( DS + RMSe ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( Max( FirstVNF_CPU,Max( FirstVNF_CPU,ARS ) ) - Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Max( Min( MUR ,RCSe ),( ( RRSe - ( RMSe + Max( ( RRSe / Min( MUC ,MUR ) ),MUM ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Const / PN ) ) )", "choosing": "Min( ( CS / ( ( ( DS * MLU ) - CS ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,CRS ) + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MUR - ( MUR - ( RMSe + MUR ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / RRS ) / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( ( ( MUM + MLU ) - ( MUM - RMSe ) ) - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_RAM_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + ( ( ( PN / ( BR - MDR ) ) * PN ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( MUM - ( Max( RCSe,CS ) * Max( MUM,MUC ) ) ) * ( Min( MUM ,MUC ) - ( CS - CS ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( FirstVNF_CPU + DDR ) * FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( RMSe * ( ( DS + CS ) * RRSe ) ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( ( RMSe + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,( PN + ARS ) ) - ACS )", "choosing": "Min( ( RCSe / RMSe ) ,Min( Min( Min( ( Min( ( Min( MLU ,MLU ) * MUR ) ,CS ) + DS ) ,MUC ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) ) - ( ACS / ( ( MRS * RRS ) + RRS ) ) )", "choosing": "( ( CS * CS ) * Max( Min( ( RCSe * MUR ) ,Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) ) ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( ( Min( Min( RRS ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) / ARS ) - Min( BR ,PN ) ) ) - ( ( ( ARS - FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ) / ( ( MRS * FirstVNF_Mem_Server ) * Max( PN,ARS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS / MLU ) ) / ( ( RRSe * ( RCSe + RMSe ) ) - Max( Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) ),( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( RRS * AMS ) ) * ( AMS + BR ) ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( DS - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Max( RRSe,Min( ( DS / ( MUM * RCSe ) ) ,( MUR / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * Min( ( ACS / MRS ) ,( MRS / MRS ) ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_RAM_Server ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server / ( ( MDR - PN ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( DS ,RMSe ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) - Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * ( ( Min( ( ( MUC * MUM ) * Max( Min( RCSe ,MUC ),RRSe ) ) ,RCSe ) * RMSe ) - MUR ) ) + ( MUM - ( DS * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,CRS ) ) ,( ( PN * FirstVNF_RAM_Server ) / ( CRS - AMS ) ) ),( FirstVNF_CPU * DDR ) ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( ( ( ( ( MUC * MUM ) * ( ( RMSe + DS ) - ( MUC * RRSe ) ) ) - ( ( MUR / RMSe ) + Min( MUC ,CS ) ) ) * ( ( ( RCSe * RCSe ) + ( Min( RRSe ,( ( MUM - MUM ) * Min( CS ,MUM ) ) ) / MUC ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) ),Max( ( ( RMSe + RRSe ) * ( RRSe / DS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( FirstVNF_CPU - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( Max( ( RMSe + DS ),Max( MUM,CS ) ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( Min( DDR ,Const ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( Min( ( ( MUR - ( RRSe / MUC ) ) * ( MLU + Min( MUC ,RMSe ) ) ) ,CS ) * ( ( DS + CS ) * RRSe ) ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) * PN ) )", "choosing": "Max( ( ( RCSe + RCSe ) + MUM ),Max( ( ( RCSe + MUR ) + ( MUM - DS ) ),( MLU / Max( ( ( RRSe + ( ( MUR - RMSe ) / ( MUM + RMSe ) ) ) - MUR ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,Min( MUR ,RCSe ) ) )", "obj1": 0.5971943887775552, "obj2": 0.29055690931588735}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,CS ) ) ,MUR ) )", "obj1": 0.8156312625250501, "obj2": 0.08927672832653424}, {"determining": "( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) / ( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( RRSe - CS ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) / Max( ( DS + RMSe ),( DS + MUM ) ) )", "obj1": 0.8597194388777555, "obj2": 0.05475275563979275}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) * RRSe ) )", "obj1": 0.8797595190380761, "obj2": 0.05096978892442373}, {"determining": "( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) / ( MRS + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) / ( RRSe + MUC ) )", "obj1": 0.7474949899799599, "obj2": 0.13532210478528062}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( Min( ( ( MUC * MUM ) * Max( Min( RCSe ,MUC ),RRSe ) ) ,RCSe ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.9278557114228457, "obj2": 0.039408947340535995}, {"determining": "( ( CRS - AMS ) * ( AMS - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / Min( RCSe ,MUC ) ) ) )", "obj1": 0.7434869739478958, "obj2": 0.18419924289132572}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( Min( FirstVNF_CPU ,ACS ) - FirstVNF_CPU_Server ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( Min( ( DS + Min( Min( RMSe ,MUC ) ,RMSe ) ) ,RRSe ) + Min( Max( DS,MUM ) ,MUR ) ) ) + ( ( RRSe - ( Max( ( MUM * Min( ( MUC / CS ) ,( RMSe - MLU ) ) ),( MUM / MUM ) ) + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7995991983967936, "obj2": 0.10188249613470449}, {"determining": "( ( ( ( Max( CRS,MRS ) - BR ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / MLU ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 0.9378757515030061, "obj2": 0.027369204777045186}, {"determining": "( Min( ( Const + AMS ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( ( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7775551102204409, "obj2": 0.10741186238502803}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * RCSe )", "obj1": 0.9659318637274549, "obj2": 0.012170541403770154}, {"determining": "( ( FirstVNF_Mem + ( ( PN * FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( AMS + BR ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( MUR * ( RCSe + ( RMSe / Min( RRSe ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.228460884282238}, {"determining": "Min( ( ACS - ARS ) ,Max( FirstVNF_CPU_Server,( Min( ARS ,Min( MRS ,RRS ) ) / MRS ) ) )", "choosing": "( ( Min( CS ,( Min( ( ( MUR - ( MLU / RMSe ) ) * ( MLU + Min( MUC ,MUC ) ) ) ,CS ) + MLU ) ) - RMSe ) * ( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) ) )", "obj1": 0.7294589178356713, "obj2": 0.19598544388556244}, {"determining": "( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) / ( MRS + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) / ( RRSe + MUC ) )", "obj1": 0.7735470941883767, "obj2": 0.12072337735946646}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * Min( ACS ,AMS ) ),Min( ( ACS * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( ( DS + CS ),CS ) ) ) ),( MLU * Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) ) )", "obj1": 0.6653306613226453, "obj2": 0.22360142116462553}, {"determining": "( ( ( ARS - RRS ) / ( Const + ARS ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - RMSe ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6452905811623246, "obj2": 0.2409659350416466}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( Min( Max( ACS,FirstVNF_CPU ) ,MRS ),Min( AMS ,( RRS / ( ( AMS + DDR ) - FirstVNF_Mem ) ) ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Min( CS ,RRSe ) - RMSe ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( Min( MLU ,RMSe ) / RRSe ) ) ) * RRSe ) )", "obj1": 0.7655310621242485, "obj2": 0.12753082324643317}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,( MDR / MDR ) ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / MLU ) * Max( CS,MLU ) ) )", "obj1": 0.6332665330661322, "obj2": 0.24536423615510555}, {"determining": "Min( ( ACS - ARS ) ,Max( FirstVNF_CPU_Server,( Min( ARS ,FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Min( CS ,( Min( ( ( MUR - ( RCSe / RMSe ) ) * ( MLU + Min( MUC ,RMSe ) ) ) ,CS ) + MLU ) ) - RMSe ) * ( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) ) )", "obj1": 0.7414829659318637, "obj2": 0.18712755775284703}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( MLU * Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) ) )", "obj1": 0.6813627254509018, "obj2": 0.21254161974732633}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Max( FirstVNF_CPU_Server,Min( DDR ,FirstVNF_RAM ) ) + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( Max( MUM,CS ) / ( MUM + RMSe ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7555110220440882, "obj2": 0.13256414526582339}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,RMSe ) )", "obj1": 0.6052104208416834, "obj2": 0.2871765223542591}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,( CS / Min( RMSe ,MLU ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.2771422415110298}, {"determining": "Min( ( MDR * PN ) ,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - MUC ) + MUM ) + Min( RRSe ,( Min( MUR ,Max( DS,MUC ) ) / RRSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.19716402851161383}, {"determining": "Min( ( ACS / CRS ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( DS ,Min( DS ,RRSe ) ) - MUC ) ) ,( MLU * Max( MLU,RMSe ) ) )", "obj1": 0.6112224448897795, "obj2": 0.27110315377099303}, {"determining": "Min( Min( CRS ,( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Const ) + ACS ) ) ,( Min( ( FirstVNF_CPU / Const ) ,( FirstVNF_CPU + BR ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( ( MUC + Min( MUR ,MLU ) ) / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6933867735470942, "obj2": 0.20734698586409608}, {"determining": "Min( Min( DDR ,Const ) ,( ( Max( ( AMS + MDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) / ( MDR + Min( FirstVNF_Mem ,Const ) ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Max( MUC,MUC ) )", "obj1": 0.6292585170340681, "obj2": 0.25998741765504313}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6172344689378757, "obj2": 0.26429471665032755}, {"determining": "Max( ( BR / Min( MRS ,Min( MDR ,( FirstVNF_Mem - ( FirstVNF_Mem * Min( FirstVNF_CPU ,( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + Max( RRSe,Min( MUM ,( RMSe * ( MLU + RRSe ) ) ) ) ) * Min( RMSe ,DS ) ) / Min( Min( MUR ,MUM ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.6773547094188377, "obj2": 0.22196817557253973}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,( MDR / FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( Max( Min( DS ,RMSe ),Min( RMSe ,DS ) ) ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / MLU ) * Max( CS,MLU ) ) )", "obj1": 0.6192384769539078, "obj2": 0.261244618325456}, {"determining": "Min( FirstVNF_Mem_Server ,( ( ( AMS / FirstVNF_Mem ) / CRS ) / ( Const + ARS ) ) )", "choosing": "( DS + ( ( MUR * ( RMSe * RMSe ) ) + MUM ) )", "obj1": 0.7034068136272545, "obj2": 0.2028024578164599}, {"determining": "( ( FirstVNF_Mem + ( ( PN * Min( DDR ,Const ) ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( AMS + BR ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( ( RMSe * ( ( DS + CS ) * RRSe ) ) / MUR ) )", "obj1": 0.6793587174348698, "obj2": 0.21886719552976602}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( Min( ( FirstVNF_CPU + ( RRS - FirstVNF_CPU ) ) ,( ACS + PN ) ) ,( ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) ) - ( MDR / BR ) ) * ( ARS - CRS ) ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Min( ( ( Max( MUC,MUC ) + CS ) + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( ( MUC + RCSe ) - ( RMSe + MUM ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( ( MUC * MUM ) ,RCSe ) * MUC ) )", "obj1": 0.9739478957915831, "obj2": 0.010819807265991929}, {"determining": "Min( ( MDR * PN ) ,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - MUC ) + MUM ) + Min( RRSe ,( Min( MUR ,Max( DS,MUC ) ) / RRSe ) ) )", "obj1": 0.6993987975951904, "obj2": 0.2071467534015969}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Const ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( Max( ( RRSe + ( MUC - Max( MUC,RCSe ) ) ),( MUR - RMSe ) ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.935871743486974, "obj2": 0.03246030585540604}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( Min( ( FirstVNF_CPU + ( RRS - FirstVNF_CPU ) ) ,( ACS + PN ) ) ,( ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) ) - ( MDR / BR ) ) * ( ARS - CRS ) ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Min( ( ( Max( MUC,MUC ) + CS ) + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( ( MUC + RCSe ) - ( RMSe + MUM ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( ( MUC * MUM ) ,RCSe ) * MUC ) )", "obj1": 0.9799599198396793, "obj2": 0.00807260495040589}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.9819639278557114, "obj2": 0.005880913839146858}, {"determining": "( ( ( ( ACS + PN ) + AMS ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( ( MLU - MUC ) + ( DS + CS ) ),( MUR - ( RMSe + MUM ) ) )", "obj1": 0.9899799599198397, "obj2": 0.005018862824678711}, {"determining": "Min( Min( DDR ,Const ) ,Max( Max( MDR,( FirstVNF_CPU_Server * PN ) ),Const ) )", "choosing": "Min( ( ( ( Min( ( RMSe + RMSe ) ,( Min( MUR ,Max( RRSe,MLU ) ) - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6312625250501002, "obj2": 0.25316997621438464}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.935871743486974, "obj2": 0.03246030585540604}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( Max( FirstVNF_Mem_Server,DDR ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,( DS * CS ) ) ) ) ),( MLU * CS ) )", "obj1": 0.7054108216432866, "obj2": 0.19879500398710914}, {"determining": "Min( Min( DDR ,Const ) ,Max( Max( MDR,( FirstVNF_CPU_Server * PN ) ),Const ) )", "choosing": "Min( ( ( ( Min( ( RMSe + RMSe ) ,( Min( MUR ,Max( RRSe,MLU ) ) - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6312625250501002, "obj2": 0.25316997621438464}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - ( ( Min( Min( MRS ,DDR ) ,Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ) ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( MLU * CS ) ) )", "obj1": 0.9679358717434869, "obj2": 0.011556329381296188}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,DS ) * MUC ) )", "obj1": 0.9939879759519038, "obj2": 0.0017265630914301351}, {"determining": "Min( Min( ( FirstVNF_Mem_Server + RRS ) ,Const ) ,( ( ( MRS / MRS ) + AMS ) - ( MDR / BR ) ) )", "choosing": "Min( MLU ,( ( CS + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + CS ) ) * Max( CS,MLU ) ) )", "obj1": 0.9919839679358717, "obj2": 0.003199401349085537}, {"determining": "( ( Max( ( ( ( Max( CRS,MRS ) - BR ) / ( RRS - Const ) ) / ( MDR - PN ) ),CRS ) + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MUR - ( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) - ( RMSe + MUR ) ) ) ) + CS ) )", "obj1": 0.9979959919839679, "obj2": 0.0009446277924015417}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( MLU * CS ) )", "obj1": 0.7054108216432866, "obj2": 0.19879500398710914}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server * DDR ) ) * FirstVNF_Mem ) / ( FirstVNF_RAM / ( Min( DDR ,ARS ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - Min( DS ,( Max( ( CS / MUM ),Max( MUR,CS ) ) / MUC ) ) ) ,Min( MUR ,( RRSe / ( RRSe / DS ) ) ) ) / Max( ( MLU - ( MUR - DS ) ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( ( ( Max( BR,MRS ) - FirstVNF_RAM_Server ) + PN ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) * MUR ) ,MLU ),Min( MUM ,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( ( ( MRS * BR ) / BR ) + ACS ) / FirstVNF_CPU ) ) - ( MDR / BR ) )", "choosing": "( ( CS + RMSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( ACS + ( ACS + DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Min( Min( MUR ,CS ) ,CS ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_Mem - ( Const - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem - Max( ( PN / FirstVNF_RAM_Server ),ACS ) ) / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( RMSe / ( ( ( MUC * RMSe ) + DS ) / MUR ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + ( RMSe + CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + ( ( CRS * CRS ) / RRS ) ) - ( DDR * ACS ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + ( Max( MUR,( ( ( Min( RCSe ,RCSe ) / ( MUR + CS ) ) + MUR ) / RCSe ) ) / ( ( ( ( CS + ( MUR + RRSe ) ) / MUC ) * Min( Min( ( MLU - MUR ) ,Max( MUC,RCSe ) ) ,( ( DS + RMSe ) / RMSe ) ) ) - ( ( MUC + RCSe ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - MDR ) * BR ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( Min( DS ,RMSe ) + ( DS + CS ) ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + ( RCSe / Max( CS,CS ) ) ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) / ( MUR * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) / ( Min( ( FirstVNF_Mem / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( MUC - RMSe ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,MLU ) ,( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RRSe,RCSe ) * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_RAM ) / ARS ) )", "choosing": "( ( RMSe * CS ) / Max( ( Max( ( RRSe - ( ( RMSe - MLU ) * MUM ) ),MUM ) - RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( Min( ( CRS * ( ( MDR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server / CRS ) ) ) ,( PN - ( Max( FirstVNF_Mem,CRS ) * MRS ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * Max( Max( MUM,RRSe ),MUR ) ),( RRSe + MLU ) ) * ( RMSe * ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( Max( DDR,MRS ) - ( MDR / BR ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( MUM ,( DS / MLU ) ) ) ,( ( CS - MUC ) / Min( RMSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS * AMS ) * ( Const - PN ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( RMSe / RMSe ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( ( MUM + MUR ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( MRS / ( ( Max( ( RRS * BR ),Max( FirstVNF_RAM,Const ) ) + FirstVNF_RAM ) + ( ( ( CRS * ( MDR - FirstVNF_CPU_Server ) ) / ACS ) * ( MRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MUR ,RCSe ),( ( Min( RRSe ,( CS + CS ) ) - Min( ( RMSe + DS ) ,DS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ( Min( DDR ,FirstVNF_RAM ) * Max( RRS,Const ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - ( CS + Min( ( MUC / RCSe ) ,( ( Min( ( RMSe - CS ) ,MUM ) - DS ) + MUC ) ) ) ) / Min( ( MUC * ( Max( MUC,CS ) * ( MUM + DS ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( ( ( FirstVNF_Mem_Server / MRS ) * ( ARS * Max( ARS,RRS ) ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( MLU - MUC ) + ( DS + Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + ( BR / FirstVNF_Mem ) ) - ( MDR / BR ) ) * ( ARS * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( ( MUC * MUM ) + ( Min( Min( Min( MUR ,( RMSe / ( MUM - RRSe ) ) ) ,MUR ) ,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / Max( Min( RRS ,FirstVNF_Mem ),ACS ) )", "choosing": "( RMSe - Min( RCSe ,Min( ( Max( ( MLU - RRSe ),MUM ) - RMSe ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( RRSe + ( CS - CS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Max( Min( ACS ,DDR ),Min( DDR ,AMS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( RMSe - ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ARS + ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( ( MUC * CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( Min( FirstVNF_RAM_Server ,DDR ),BR ) ) * ( ( Min( ( FirstVNF_Mem_Server * CRS ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RMSe + RRSe ) * ( RRSe / ( Min( MLU ,( MUR - RRSe ) ) / CS ) ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server * PN ),FirstVNF_Mem ) * PN ) )", "choosing": "( Max( Min( RCSe ,( ( Min( RCSe ,( MUC / ( RMSe - RRSe ) ) ) - Min( DS ,MLU ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( ( Min( ( RCSe * ( ( RMSe * MUC ) * Max( DS,( MUM / DS ) ) ) ) ,RRSe ) - RMSe ) * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( Min( FirstVNF_CPU ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * CS ) / Max( Min( ( ( MLU + MLU ) * ( ( RMSe * RRSe ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( MRS - MDR ) * PN ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RCSe + MUR ) + ( MUM - DS ) ),( MLU / Max( ( ( RRSe + ( ( RRSe + RMSe ) / ( MUM + RMSe ) ) ) - MUR ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( DS * DS ) / Max( ( DS + RMSe ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( Max( FirstVNF_CPU,Max( FirstVNF_CPU,ARS ) ) - Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Max( Min( MUR ,RCSe ),( ( RRSe - ( RMSe + Max( ( RRSe / Min( MUC ,MUR ) ),MUM ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Const / PN ) ) )", "choosing": "Min( ( CS / ( ( ( DS * MLU ) - CS ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,CRS ) + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MUR - ( MUR - ( RMSe + MUR ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / RRS ) / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( ( ( MUM + MLU ) - ( MUM - RMSe ) ) - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_RAM_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + ( ( ( PN / ( BR - MDR ) ) * PN ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( MUM - ( Max( RCSe,CS ) * Max( MUM,MUC ) ) ) * ( Min( MUM ,MUC ) - ( CS - CS ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( FirstVNF_CPU + DDR ) * FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( RMSe * ( ( DS + CS ) * RRSe ) ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( ( RMSe + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,( PN + ARS ) ) - ACS )", "choosing": "Min( ( RCSe / RMSe ) ,Min( Min( Min( ( Min( ( Min( MLU ,MLU ) * MUR ) ,CS ) + DS ) ,MUC ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) ) - ( ACS / ( ( MRS * RRS ) + RRS ) ) )", "choosing": "( ( CS * CS ) * Max( Min( ( RCSe * MUR ) ,Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) ) ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( ( Min( Min( RRS ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem ) ) / ARS ) - Min( BR ,PN ) ) ) - ( ( ( ARS - FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ) / ( ( MRS * FirstVNF_Mem_Server ) * Max( PN,ARS ) ) ) )", "choosing": "( ( ( MUR + MLU ) - ( CS / MLU ) ) / ( ( RRSe * ( RCSe + RMSe ) ) - Max( Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) ),( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Min( DDR ,Min( MRS ,RRS ) ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MUR - ( MUR - ( RMSe + MUR ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( CRS * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( Min( ( ( MUR - ( RRSe / MUC ) ) * ( MLU + Min( MUC ,RMSe ) ) ) ,CS ) * ( ( DS + CS ) * RRSe ) ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,Min( MUR ,RCSe ) ) )", "obj1": 0.5971943887775552, "obj2": 0.29055690931588735}, {"determining": "( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + AMS ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) / ( MRS + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( MLU * CS ) * DS ) ) / ( RRSe + MUC ) )", "obj1": 0.8256513026052105, "obj2": 0.07253942654503417}, {"determining": "( ( ( ( ( Max( Min( DDR ,AMS ),FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) / ( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( RMSe - ( RCSe + CS ) ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) / Max( ( DS + RMSe ),( DS + MUM ) ) )", "obj1": 0.8597194388777555, "obj2": 0.05463553951758183}, {"determining": "( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) / ( MRS + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) / ( RRSe + MUC ) )", "obj1": 0.7474949899799599, "obj2": 0.13532210478528062}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( RCSe * MUC ) )", "obj1": 0.6953907815631263, "obj2": 0.1949872168687484}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Max( FirstVNF_CPU_Server,Min( DDR ,FirstVNF_RAM ) ) + AMS ),( ARS / ( Min( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,( PN + ARS ) ) - ACS ) ) ) ) )", "choosing": "( ( RMSe - ( Max( MUM,CS ) / ( MUM + RMSe ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7454909819639278, "obj2": 0.1805119459751056}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,CS ) ) ,MUR ) )", "obj1": 0.8156312625250501, "obj2": 0.08927672832653424}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / Min( ( ( ( BR + FirstVNF_Mem_Server ) * ( ( CRS - AMS ) * ( AMS - FirstVNF_RAM ) ) ) / PN ) ,FirstVNF_RAM_Server ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( Min( ( ( MUC * MUM ) * Max( Min( RCSe ,MUC ),RRSe ) ) ,RCSe ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( ( MUR / Min( RCSe ,MUC ) ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.9138276553106213, "obj2": 0.04583997895062207}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( Min( FirstVNF_CPU ,ACS ) - FirstVNF_CPU_Server ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( Min( ( DS + Min( Min( RMSe ,MUC ) ,RMSe ) ) ,RRSe ) + Min( Max( DS,MUM ) ,MUR ) ) ) + ( ( RRSe - ( Max( ( MUM * Min( ( MUC / CS ) ,( RMSe - MLU ) ) ),( MUM / MUM ) ) + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7995991983967936, "obj2": 0.10188249613470449}, {"determining": "Min( ( ACS - ARS ) ,Max( FirstVNF_CPU_Server,( Min( ARS ,FirstVNF_Mem_Server ) / MRS ) ) )", "choosing": "( ( Min( CS ,( Min( ( ( MUR - ( RCSe / RMSe ) ) * ( MLU + Min( MUC ,RMSe ) ) ) ,CS ) + MLU ) ) - RMSe ) * ( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) ) )", "obj1": 0.7414829659318637, "obj2": 0.18712755775284703}, {"determining": "( ( ( ( Max( CRS,MRS ) - BR ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / MLU ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,CS ) )", "obj1": 0.9378757515030061, "obj2": 0.027369204777045186}, {"determining": "( Min( ( Const + AMS ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( ( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7775551102204409, "obj2": 0.10741186238502803}, {"determining": "( ( FirstVNF_Mem + Min( Min( ( FirstVNF_Mem_Server + RRS ) ,Const ) ,( ( ( MRS / MRS ) + AMS ) - ( MDR / BR ) ) ) ) * ( AMS + BR ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( ( RMSe * ( ( DS + CS ) * Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) ) ) / MUR ) )", "obj1": 0.9639278557114228, "obj2": 0.01498041433637936}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) * RRSe ) )", "obj1": 0.8797595190380761, "obj2": 0.05096978892442373}, {"determining": "( ( FirstVNF_Mem + ( ( PN * FirstVNF_CPU ) + ( MDR + FirstVNF_CPU_Server ) ) ) * ( AMS + BR ) )", "choosing": "( ( ( DS / RRSe ) - ( RCSe - RMSe ) ) / ( MUR * ( RCSe + ( RMSe / Min( RRSe ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.228460884282238}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / Min( ( ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) / PN ) ,FirstVNF_RAM_Server ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( Min( ( ( MUC * MUM ) * Max( Min( RCSe ,MUC ),RRSe ) ) ,RCSe ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.9278557114228457, "obj2": 0.039408947340535995}, {"determining": "( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) / ( MRS + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( ( RRSe - ( RRSe + RCSe ) ) * DS ) ) / ( RRSe + MUC ) )", "obj1": 0.7735470941883767, "obj2": 0.12072337735946646}, {"determining": "Min( Min( CRS ,( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Const ) + ACS ) ) ,( Min( ( FirstVNF_CPU / Const ) ,( FirstVNF_CPU + BR ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( ( MUC + Min( MUR ,MLU ) ) / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6933867735470942, "obj2": 0.20734698586409608}, {"determining": "( ( ( ARS - RRS ) / ( Const + ARS ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - RMSe ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6452905811623246, "obj2": 0.2409659350416466}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * Min( ACS ,AMS ) ),Min( ( ACS * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( ( DS + CS ),CS ) ) ) ),( MLU * Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) ) )", "obj1": 0.6653306613226453, "obj2": 0.22360142116462553}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( Min( Max( ACS,FirstVNF_CPU ) ,MRS ),Min( AMS ,( RRS / ( ( AMS + DDR ) - FirstVNF_Mem ) ) ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / MRS ) ) )", "choosing": "( ( Min( CS ,RRSe ) - RMSe ) * ( ( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( Min( MLU ,RMSe ) / RRSe ) ) ) * RRSe ) )", "obj1": 0.7655310621242485, "obj2": 0.12753082324643317}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( MLU * Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) ) )", "obj1": 0.6813627254509018, "obj2": 0.21254161974732633}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,( MDR / MDR ) ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / MLU ) * Max( CS,MLU ) ) )", "obj1": 0.6332665330661322, "obj2": 0.24536423615510555}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Max( FirstVNF_CPU_Server,Min( DDR ,FirstVNF_RAM ) ) + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( Max( MUM,CS ) / ( MUM + RMSe ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7555110220440882, "obj2": 0.13256414526582339}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,RMSe ) )", "obj1": 0.6052104208416834, "obj2": 0.2871765223542591}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM + AMS ) - ( MDR / ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( RRSe ,MUM ) ) ,( CS / Min( RMSe ,MLU ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.2771422415110298}, {"determining": "Min( ( ACS / CRS ) ,( MRS / MRS ) )", "choosing": "Min( ( RMSe / ( Min( DS ,Min( DS ,RRSe ) ) - MUC ) ) ,( MLU * Max( MLU,RMSe ) ) )", "obj1": 0.6112224448897795, "obj2": 0.27110315377099303}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU_Server,( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) * ( ( ( ( MLU * CS ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) * RRSe ) )", "obj1": 0.8777555110220441, "obj2": 0.054156692834085654}, {"determining": "Min( Min( DDR ,Const ) ,( ( Max( ( AMS + MDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) / ( MDR + Min( FirstVNF_Mem ,Const ) ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MLU + MLU ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Max( MUC,MUC ) )", "obj1": 0.6292585170340681, "obj2": 0.25998741765504313}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( MDR ,( ( PN / ARS ) / CRS ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,Min( RRSe ,DS ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.6172344689378757, "obj2": 0.26429471665032755}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_CPU_Server ) * BR ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( ( DS + ( MUM - DS ) ),CS ) ) ) ),( MLU * Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) ) )", "obj1": 0.6753507014028056, "obj2": 0.2174135881557715}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( ( Max( Min( ( Const + AMS ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + ( RCSe / Max( ( RRSe - ( RRSe + RCSe ) ),( DS * CS ) ) ) ) ),( MLU * CS ) )", "obj1": 0.6713426853707415, "obj2": 0.21942083151157468}, {"determining": "Min( Min( DDR ,Const ) ,( Min( Min( RRS ,( MDR / FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) )", "choosing": "Min( ( ( Min( Max( Min( DS ,RMSe ),Min( RMSe ,DS ) ) ,MLU ) + ( MUM - MLU ) ) + ( ( MUR + MLU ) - ( CS / MLU ) ) ) ,( ( MUM / MLU ) * Max( CS,MLU ) ) )", "obj1": 0.6192384769539078, "obj2": 0.261244618325456}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( Min( ( FirstVNF_CPU + ( RRS - FirstVNF_CPU ) ) ,( ACS + PN ) ) ,( ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) ) - ( MDR / BR ) ) * ( ARS - CRS ) ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Min( ( ( Max( MUC,MUC ) + CS ) + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( ( MUC + RCSe ) - ( RMSe + MUM ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( ( MUC * MUM ) ,RCSe ) * MUC ) )", "obj1": 0.9739478957915831, "obj2": 0.010819807265991929}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Const ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( Max( ( RRSe + ( MUC - Max( MUC,RCSe ) ) ),( MUR - RMSe ) ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.935871743486974, "obj2": 0.03246030585540604}, {"determining": "( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) + ( Min( Min( ( FirstVNF_CPU + ( RRS - FirstVNF_CPU ) ) ,( ACS + PN ) ) ,( ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server - ( MDR * FirstVNF_Mem ) ) ) - ( MDR / BR ) ) * ( ARS - CRS ) ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Min( ( ( Max( MUC,MUC ) + CS ) + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( ( MUC + RCSe ) - ( RMSe + MUM ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( ( MUC * MUM ) ,RCSe ) * MUC ) )", "obj1": 0.9799599198396793, "obj2": 0.00807260495040589}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - Max( DDR,CRS ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) )", "obj1": 0.9819639278557114, "obj2": 0.005880913839146858}, {"determining": "( ( CRS - AMS ) * ( AMS - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / Min( RCSe ,MUC ) ) ) )", "obj1": 0.7434869739478958, "obj2": 0.18419924289132572}, {"determining": "Min( Min( DDR ,Const ) ,Max( Max( MDR,( FirstVNF_CPU_Server * PN ) ),Const ) )", "choosing": "Min( ( ( ( Min( ( RMSe + RMSe ) ,( Min( MUR ,Max( RRSe,MLU ) ) - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6312625250501002, "obj2": 0.25316997621438464}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Min( ( ACS / Min( ( AMS - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ) ,( MRS / MRS ) ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Min( ( RMSe / ( Min( CS ,RRSe ) - MUC ) ) ,( MLU * CS ) ) ) ,MUR ) )", "obj1": 0.935871743486974, "obj2": 0.03246030585540604}, {"determining": "Min( Min( DDR ,Const ) ,Max( Max( MDR,( FirstVNF_CPU_Server * PN ) ),Const ) )", "choosing": "Min( ( ( ( Min( ( RMSe + RMSe ) ,( Min( MUR ,Max( RRSe,MLU ) ) - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * ( ( RMSe * ( RRSe / MLU ) ) / MUR ) ) ,Min( RRSe ,DS ) )", "obj1": 0.6312625250501002, "obj2": 0.25316997621438464}, {"determining": "( ( ( ( ACS + PN ) + AMS ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( ( MLU - MUC ) + ( DS + CS ) ),( MUR - ( RMSe + MUM ) ) )", "obj1": 0.9899799599198397, "obj2": 0.005018862824678711}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - ( ( Min( Min( MRS ,DDR ) ,Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ) ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * Max( Min( RRSe ,( RMSe + ( RCSe / Max( CS,CS ) ) ) ),( MLU * CS ) ) )", "obj1": 0.9679358717434869, "obj2": 0.011556329381296188}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * ( Min( MUM ,DS ) * MUC ) )", "obj1": 0.9939879759519038, "obj2": 0.0017265630914301351}, {"determining": "( Max( Min( AMS ,( FirstVNF_RAM_Server * ACS ) ),Max( FirstVNF_Mem_Server,DDR ) ) + ( ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) - ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) ) )", "choosing": "( ( ( ( Max( DS,( DS * CS ) ) * ( ( MUR - ( ( MUC / DS ) - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) * RMSe ) * RCSe )", "obj1": 0.9659318637274549, "obj2": 0.012170541403770154}, {"determining": "Min( Min( ( FirstVNF_Mem_Server + RRS ) ,Const ) ,( ( ( MRS / MRS ) + AMS ) - ( MDR / BR ) ) )", "choosing": "Min( MLU ,( ( CS + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + CS ) ) * Max( CS,MLU ) ) )", "obj1": 0.9919839679358717, "obj2": 0.003199401349085537}, {"determining": "( ( Max( ( ( ( Max( CRS,MRS ) - BR ) / ( RRS - Const ) ) / ( MDR - PN ) ),CRS ) + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MUR - ( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) - ( RMSe + MUR ) ) ) ) + CS ) )", "obj1": 0.9979959919839679, "obj2": 0.0009446277924015417}, {"determining": "( ( ( ( ACS + PN ) + AMS ) - ( MDR / BR ) ) / ( ( CRS / RRS ) / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) + ( DS + CS ) ),( MUR - ( RMSe + MUM ) ) )", "obj1": 0.9899799599198397, "obj2": 0.005018862824678711}, {"determining": "( ( ( ( ACS + ( Max( CRS,MRS ) - BR ) ) + AMS ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( ( MLU - MUC ) + ( DS + CS ) ),Max( MLU,RMSe ) )", "obj1": 0.9979959919839679, "obj2": 0.0009446277924015417}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) ) ) * PN ) )", "choosing": "Max( ( ( RCSe + RCSe ) + MUM ),Max( ( ( RCSe + MUR ) + ( MUM - DS ) ),( MLU / Max( ( ( RRSe + ( ( MUR - RMSe ) / ( MUM + RMSe ) ) ) - MUR ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server * DDR ) ) * FirstVNF_Mem ) / ( FirstVNF_RAM / ( Min( DDR ,ARS ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - Min( DS ,( Max( ( CS / MUM ),Max( MUR,CS ) ) / MUC ) ) ) ,Min( MUR ,( RRSe / ( RRSe / DS ) ) ) ) / Max( ( MLU - ( MUR - DS ) ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( ( ( Max( BR,MRS ) - FirstVNF_RAM_Server ) + PN ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) * MUR ) ,MLU ),Min( MUM ,( Min( ( MLU - RCSe ) ,MUC ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( ( ( MRS * BR ) / BR ) + ACS ) / FirstVNF_CPU ) ) - ( MDR / BR ) )", "choosing": "( ( CS + RMSe ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( ACS + ( ACS + DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,( MUM / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Min( Min( MUR ,CS ) ,CS ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,( RCSe + Max( MLU,( RMSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ( ( DDR * Max( FirstVNF_Mem_Server,ARS ) ) + BR ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - MUR ) - Max( Min( MLU ,MLU ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_Mem - ( Const - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem - Max( ( PN / FirstVNF_RAM_Server ),ACS ) ) / FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( RMSe / ( ( ( MUC * RMSe ) + DS ) / MUR ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + ( RMSe + CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe * MUC ) - ( MLU * Min( ( RRSe * CS ) ,( MUM * DS ) ) ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + ( ( CRS * CRS ) / RRS ) ) - ( DDR * ACS ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) + ( Max( MUR,( ( ( Min( RCSe ,RCSe ) / ( MUR + CS ) ) + MUR ) / RCSe ) ) / ( ( ( ( CS + ( MUR + RRSe ) ) / MUC ) * Min( Min( ( MLU - MUR ) ,Max( MUC,RCSe ) ) ,( ( DS + RMSe ) / RMSe ) ) ) - ( ( MUC + RCSe ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - MDR ) * BR ) - ( MDR / BR ) ) / ( ACS / ( MRS * ARS ) ) )", "choosing": "Max( ( Min( DS ,RMSe ) + ( DS + CS ) ),Min( ( RCSe - MUM ) ,( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ( BR - MRS ) * ( MDR / FirstVNF_RAM ) ),Min( ( DDR * BR ) ,Max( MDR,ACS ) ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + ( RCSe / Max( CS,CS ) ) ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) / ( MUR * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) / ( Min( ( FirstVNF_Mem / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( MUC - RMSe ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,MLU ) ,( MLU * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RRSe,RCSe ) * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_RAM ) / ARS ) )", "choosing": "( ( RMSe * CS ) / Max( ( Max( ( RRSe - ( ( RMSe - MLU ) * MUM ) ),MUM ) - RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( Min( ( CRS * ( ( MDR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server / CRS ) ) ) ,( PN - ( Max( FirstVNF_Mem,CRS ) * MRS ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * Max( Max( MUM,RRSe ),MUR ) ),( RRSe + MLU ) ) * ( RMSe * ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU ) + Min( ( Max( DDR,MRS ) - ( MDR / BR ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( RMSe - CS ),( CS - MUM ) ) + ( ( ( DS + CS ) * RRSe ) + ( MUC / DS ) ) ),Min( Min( ( MUC / RMSe ) ,Min( MUM ,( DS / MLU ) ) ) ,( ( CS - MUC ) / Min( RMSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS * AMS ) * ( Const - PN ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( RMSe / RMSe ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( ( MUM + MUR ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( PN * BR ) * ( MRS / ( ( Max( ( RRS * BR ),Max( FirstVNF_RAM,Const ) ) + FirstVNF_RAM ) + ( ( ( CRS * ( MDR - FirstVNF_CPU_Server ) ) / ACS ) * ( MRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MUR ,RCSe ),( ( Min( RRSe ,( CS + CS ) ) - Min( ( RMSe + DS ) ,DS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ( Min( DDR ,FirstVNF_RAM ) * Max( RRS,Const ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - ( CS + Min( ( MUC / RCSe ) ,( ( Min( ( RMSe - CS ) ,MUM ) - DS ) + MUC ) ) ) ) / Min( ( MUC * ( Max( MUC,CS ) * ( MUM + DS ) ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( ( ( FirstVNF_Mem_Server / MRS ) * ( ARS * Max( ARS,RRS ) ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( MLU - MUC ) + ( DS + Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + ( BR / FirstVNF_Mem ) ) - ( MDR / BR ) ) * ( ARS * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( ARS,ACS ) ) )", "choosing": "( ( MUC * MUM ) + ( Min( Min( Min( MUR ,( RMSe / ( MUM - RRSe ) ) ) ,MUR ) ,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,Const ) / Max( Min( RRS ,FirstVNF_Mem ),ACS ) )", "choosing": "( RMSe - Min( RCSe ,Min( ( Max( ( MLU - RRSe ),MUM ) - RMSe ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( RRSe + ( CS - CS ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( Min( Min( MRS ,DDR ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( CS + DS ) / ( MLU * RCSe ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( Max( Min( ACS ,DDR ),Min( DDR ,AMS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( RMSe - ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ARS + ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( ( MUC * CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( Min( FirstVNF_RAM_Server ,DDR ),BR ) ) * ( ( Min( ( FirstVNF_Mem_Server * CRS ) ,FirstVNF_CPU_Server ) * BR ) * ( FirstVNF_Mem_Server / RRS ) ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RMSe + RRSe ) * ( RRSe / ( Min( MLU ,( MUR - RRSe ) ) / CS ) ) ),( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) * ( FirstVNF_Mem_Server * ARS ) )", "choosing": "( Min( RCSe ,MUR ) - ( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Max( ( FirstVNF_Mem_Server * PN ),FirstVNF_Mem ) * PN ) )", "choosing": "( Max( Min( RCSe ,( ( Min( RCSe ,( MUC / ( RMSe - RRSe ) ) ) - Min( DS ,MLU ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( ( Min( ( RCSe * ( ( RMSe * MUC ) * Max( DS,( MUM / DS ) ) ) ) ,RRSe ) - RMSe ) * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) + ( Min( FirstVNF_CPU ,PN ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe * CS ) / Max( Min( ( ( MLU + MLU ) * ( ( RMSe * RRSe ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) * ( ( MRS - MDR ) * PN ) )", "choosing": "Max( Min( MUR ,RCSe ),Max( ( ( RCSe + MUR ) + ( MUM - DS ) ),( MLU / Max( ( ( RRSe + ( ( RRSe + RMSe ) / ( MUM + RMSe ) ) ) - MUR ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( MRS - ACS ) )", "choosing": "( ( DS * DS ) / Max( ( DS + RMSe ),( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( CS - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - Min( ( Max( Const,MDR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( Max( FirstVNF_CPU,Max( FirstVNF_CPU,ARS ) ) - Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Max( Min( MUR ,RCSe ),( ( RRSe - ( RMSe + Max( ( RRSe / Min( MUC ,MUR ) ),MUM ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( MDR - PN ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( AMS,FirstVNF_RAM_Server ) ) + ( Const / PN ) ) )", "choosing": "Min( ( CS / ( ( ( DS * MLU ) - CS ) - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,RMSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,CRS ) + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( ( RCSe - MUM ) ,( MUR - ( MUR - ( RMSe + MUR ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / RRS ) / ( AMS / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( BR ,BR ) ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( Min( DDR ,Const ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUM ,MUC ) - ( ( ( MUM + MLU ) - ( MUM - RMSe ) ) - CS ) ) / ( RCSe * DS ) ) / Min( ( RCSe + RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_RAM_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + ( ( ( PN / ( BR - MDR ) ) * PN ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( MUM - ( Max( RCSe,CS ) * Max( MUM,MUC ) ) ) * ( Min( MUM ,MUC ) - ( CS - CS ) ) ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( ( ( FirstVNF_CPU + DDR ) * FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( ( RMSe * ( ( DS + CS ) * RRSe ) ) / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( Const - Min( DDR ,RRS ) ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( ( RMSe + RMSe ) ,( RRSe - MUC ) ) * ( ( MUR - ( MUR - ( RMSe + MUR ) ) ) * MLU ) ) * Max( MLU,Max( MLU,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}