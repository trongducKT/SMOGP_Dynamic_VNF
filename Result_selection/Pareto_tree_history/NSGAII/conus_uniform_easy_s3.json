{"1": [{"determining": "( ( Const + PN ) + Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Max( MLU,MUM ) * ( MLU - MLU ) )", "obj1": 0.35039370078740156, "obj2": 0.5085152914367752}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) )", "choosing": "( ( RMSe * RRSe ) / Max( RMSe,RMSe ) )", "obj1": 0.37598425196850394, "obj2": 0.48226417775012187}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) / Max( PN,CRS ) )", "choosing": "( Max( MLU,DS ) + Min( MUC ,DS ) )", "obj1": 0.6732283464566929, "obj2": 0.24638229968636013}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Max( Max( MUC,DS ),( RRSe * RRSe ) )", "obj1": 0.3720472440944882, "obj2": 0.4963103179874561}, {"determining": "( Min( FirstVNF_RAM ,DDR ) - ( MDR / DDR ) )", "choosing": "( ( MUR - MUC ) - ( RRSe * MUR ) )", "obj1": 0.6909448818897638, "obj2": 0.23629071389260425}, {"determining": "( ( Min( AMS ,PN ) + ( ARS - DDR ) ) * ( Max( MRS,ARS ) - Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "( ( Min( CS ,RMSe ) + Max( MLU,RMSe ) ) * ( ( RRSe - RMSe ) - ( DS / MUC ) ) )", "obj1": 0.07283464566929133, "obj2": 0.7422221175110953}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6403849111532507}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,RRSe ) ) )", "obj1": 0.905511811023622, "obj2": 0.07769247668676625}, {"determining": "( ( ( RRS / FirstVNF_CPU_Server ) - ( MDR - DDR ) ) - ( ( CRS + PN ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / RRS ) ) )", "choosing": "( ( Max( RCSe,DS ) + Max( DS,MUC ) ) + Min( Min( ( ( RMSe + RCSe ) * ( MUM * ( ( RCSe * Max( CS,MLU ) ) - MUC ) ) ) ,RRSe ) ,Max( MUM,RCSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4704653643019507}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,Const ) + Const ) * MDR ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( DS * MUM ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6230344138606304}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - MDR ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( RRS - MDR ) + ( ACS + BR ) )", "choosing": "( ( ( RMSe - RCSe ) + ( RCSe - DS ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.47055196014583095}, {"determining": "( ( ACS - ( MRS + MDR ) ) - Min( BR ,DDR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( RCSe + ( Min( MUC ,MUR ) * ( MUR - MUR ) ) ) - ( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,CRS ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / ( RMSe * RMSe ) ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ( AMS - FirstVNF_RAM_Server ) ) - ( Max( PN,FirstVNF_CPU ) / ( ACS - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,( RCSe + DS ) ) ) * Min( MUC ,Min( Min( ( ( RRSe + Min( MUM ,( RMSe / RMSe ) ) ) / Min( MUM ,DS ) ) ,MUR ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5312650921502309}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( CS + MLU ) - ( Max( RCSe,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}], "2": [{"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "( ( PN - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.15551181102362205, "obj2": 0.635020844195456}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( ARS * FirstVNF_Mem ) + Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) )", "choosing": "( ( MUM + DS ) * Max( ( RRSe / RMSe ),( MLU * RMSe ) ) )", "obj1": 0.5885826771653543, "obj2": 0.3040336677055916}, {"determining": "( ( ( FirstVNF_CPU_Server + RRS ) / ( ( FirstVNF_CPU * AMS ) + ( RRS + Min( MRS ,BR ) ) ) ) / Min( ( FirstVNF_RAM_Server / ARS ) ,( FirstVNF_CPU * ARS ) ) )", "choosing": "Min( ( RRSe * CS ) ,( MUR / DS ) )", "obj1": 0.3464566929133858, "obj2": 0.4518524654429496}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( ARS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + ( ( MUM + DS ) * ( ( MLU * RRSe ) - RRSe ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.19251879998460505}, {"determining": "( ( Const - CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ),PN ) )", "choosing": "( ( Max( ( CS - CS ),Min( MUM ,RCSe ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + ( RMSe * RRSe ) ) - MLU ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5414504762126503}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.4035433070866142, "obj2": 0.40039855835542704}, {"determining": "Max( FirstVNF_Mem_Server,Max( ( MRS * ( Max( MDR,( Min( FirstVNF_CPU ,BR ) * AMS ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * FirstVNF_CPU ) ) ),FirstVNF_Mem ) )", "choosing": "Max( ( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) * ( ( RCSe + MUM ) / ( MUM - CS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ),( CS * ( ( ( MUR - DS ) + MUR ) * MUC ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5046431768662295}, {"determining": "( ( Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) / Max( AMS,Min( ( FirstVNF_Mem_Server * Max( Max( BR,FirstVNF_RAM ),( ( Const + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) / AMS ) ) ) ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( ( Min( RRSe ,DS ) + Max( ( CS * MUM ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( FirstVNF_Mem_Server + MRS ),Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),( FirstVNF_RAM * MDR ) ) )", "choosing": "( ( RRSe / MUM ) / ( DS * ( ( ( ( Min( ( RCSe / RRSe ) ,Min( MUR ,RMSe ) ) * ( ( RMSe / RRSe ) * RRSe ) ) - MUR ) + RCSe ) - MUM ) ) )", "obj1": 0.0688976377952756, "obj2": 0.701516183166269}, {"determining": "Max( ( DDR - FirstVNF_RAM ),Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Min( DS ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.22321563753945392}, {"determining": "( ( ACS - ( MRS + MDR ) ) - Min( BR ,DDR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.40039855835542704}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,CRS ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / ( RMSe * RMSe ) ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "Max( ( FirstVNF_Mem_Server + MRS ),Max( Const,( FirstVNF_RAM * MDR ) ) )", "choosing": "( ( RRSe / MUM ) / ( DS * MUR ) )", "obj1": 0.0688976377952756, "obj2": 0.701516183166269}, {"determining": "( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / ( DDR - FirstVNF_RAM ) ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RMSe,Min( DS ,RCSe ) ) - MUC ) - ( DS + Max( DS,MUM ) ) )", "obj1": 0.9547244094488189, "obj2": 0.03481695227041434}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( Min( MUM ,RRSe ) * Min( CS ,( MUC - RCSe ) ) )", "obj1": 0.9114173228346457, "obj2": 0.052218710086023336}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( Min( MRS ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( DS + RCSe ) + ( MLU / MUM ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5051207443229211}, {"determining": "Min( ( Const + PN ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR / DS ) + ( DS - ( Max( CS,( MUR - CS ) ) - Max( MLU,( ( ( RCSe + RCSe ) / CS ) / CS ) ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7416550339898682}, {"determining": "( Min( Const ,CRS ) * Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( ( ( ( ( RMSe * MUC ) * RCSe ) + MUM ) + ( ( MUC - MUR ) * ( RRSe * MUM ) ) ),RMSe ) ) ) / ( Max( MLU,Min( RMSe ,CS ) ) + DS ) )", "obj1": 0.20866141732283464, "obj2": 0.5297738747993619}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_Mem_Server * ACS ) ) - ( MDR / DDR ) )", "choosing": "( ( MUR - MUC ) - ( ( ( ( ( CS + MUM ) + ( MUR * DS ) ) + Min( Min( CS ,MLU ) ,( DS * DS ) ) ) - ( ( ( RCSe * MUC ) * ( RRSe * CS ) ) * ( ( RRSe - RCSe ) / ( MUM * MUR ) ) ) ) * MUR ) )", "obj1": 0.24606299212598426, "obj2": 0.5191777017835593}, {"determining": "Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) )", "choosing": "( Max( MLU,DS ) + Min( MUC ,DS ) )", "obj1": 0.6732283464566929, "obj2": 0.2405742354810914}, {"determining": "( Max( ( FirstVNF_RAM + ACS ),BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( Min( ( MUC / MUR ) ,( MLU / MUM ) ),MUM ) )", "obj1": 0.655511811023622, "obj2": 0.2481813739816897}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( MLU,MUM ) )", "obj1": 0.6850393700787402, "obj2": 0.2263680126058502}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,RRSe ) ) )", "obj1": 0.905511811023622, "obj2": 0.07769247668676625}, {"determining": "( ( ( MDR * ARS ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,Min( CS ,( MUC - RCSe ) ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.07346286175686427}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - MDR ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - MDR ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( RCSe + ( Min( MUC ,MUR ) * ( MUR - MUR ) ) ) - ( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ( AMS - FirstVNF_RAM_Server ) ) - ( Max( PN,FirstVNF_CPU ) / ( ACS - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,( RCSe + DS ) ) ) * Min( MUC ,Min( Min( ( ( RRSe + Min( MUM ,( RMSe / RMSe ) ) ) / Min( MUM ,DS ) ) ,MUR ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( CS + MLU ) - ( Max( RCSe,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Min( BR ,DDR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( ( Min( MUM ,CS ) / ( MUM / MUM ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( BR,BR ) / Max( RRS,BR ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( CS + MLU ) - ( ( MUC * DS ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - Min( DDR ,PN ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,( RCSe + DS ) ) ) * Min( MUC ,( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ACS - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - MDR ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( RCSe + ( Min( MUC ,MUR ) * ( MUR - MUR ) ) ) - ( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( DDR,FirstVNF_CPU ) ,BR ) + Const ) - ( MDR - DDR ) ) - ( ( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) + CRS ) - ( PN * RRS ) ) )", "choosing": "( ( Max( RCSe,DS ) + Max( DS,MUC ) ) + Min( Max( MUM,RCSe ) ,( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,CS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * ( RMSe + ( MUM / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MDR ,FirstVNF_RAM ) ,( Const * FirstVNF_RAM_Server ) ) - ( ( DDR / ARS ) * ( ACS + RRS ) ) ) * ( ( Min( Min( MDR ,FirstVNF_RAM ) ,( Const * FirstVNF_RAM_Server ) ) - ( ( DDR / ARS ) * ( ACS + RRS ) ) ) * ( Min( ( PN * BR ) ,( FirstVNF_Mem * ACS ) ) - ( Min( MDR ,ARS ) * ( BR + MDR ) ) ) ) )", "choosing": "Max( ( ( ( MLU + MUM ) * Min( DS ,DS ) ) / ( ( MUR - MUC ) / ( MUM * MUM ) ) ),Min( Min( Min( MLU ,MLU ) ,( MLU + MUM ) ) ,Min( ( MLU + RCSe ) ,Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( MRS,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( CS + MLU ) - ( Max( ( DS * MUR ),MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) * ( ( Max( AMS,MDR ) + ( RRS / FirstVNF_Mem ) ) - ( Min( MRS ,( DDR / ACS ) ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( CS + MLU ) - ( Max( Max( ( MUR - MUM ),( ( ( ( MUM + RRSe ) / ( RCSe - CS ) ) / MUC ) * CS ) ),RRSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( MRS + BR ) * ( BR * FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - ( ( ( MUC / ( RCSe - ( ( RCSe - MUM ) + Max( RRSe,Max( MUM,MUC ) ) ) ) ) * Min( ( DS - CS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5295275590551181, "obj2": 0.28003463424416114}, {"determining": "Min( AMS ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / DS ) + ( DS - RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.6207749268547958}, {"determining": "Max( ( FirstVNF_Mem_Server + MRS ),( ( ( MDR * ARS ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( RRSe / CS ) / ( DS * MUR ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.09055118110236221, "obj2": 0.6351494200576486}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( Min( ( MUC / RMSe ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) + Max( RRSe,RRSe ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.1836662631499756}, {"determining": "( ( FirstVNF_RAM * MDR ) * Max( Max( ( Max( FirstVNF_RAM_Server,ARS ) / Const ),CRS ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( ( RRSe / MUM ) + RMSe ) ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5575671343302376}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.4035433070866142, "obj2": 0.40039855835542704}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),Max( Min( RRS ,MDR ),( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( CS - CS ) * Min( MUM ,RCSe ) ) - ( ( RCSe / MUR ) - Min( MUM ,RMSe ) ) ) / ( MUM + MUC ) )", "obj1": 0.8405511811023622, "obj2": 0.09834840362165216}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.36811023622047245, "obj2": 0.4454940144000826}, {"determining": "( Max( ( ACS - ( MRS + ( MRS / MDR ) ) ),RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( RCSe / ( MUC / ( CS - DS ) ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( DS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.4035433070866142, "obj2": 0.40039855835542704}, {"determining": "Max( ( DDR - FirstVNF_RAM ),Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Min( DS ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.22321563753945392}, {"determining": "Min( ( Const + PN ) ,( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) )", "choosing": "( ( MUM / DS ) + Max( Max( MUR,DS ),( DS * MUM ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7412119834042326}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,RRS ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( Min( RCSe ,( RCSe + DS ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7755905511811023, "obj2": 0.1532787163073876}, {"determining": "( Min( MRS ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( DS + RCSe ) + ( MLU / MUM ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5051207443229211}, {"determining": "Max( FirstVNF_Mem_Server,Max( ( MRS * ( Max( MDR,( Min( FirstVNF_CPU ,BR ) * AMS ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * FirstVNF_CPU ) ) ),FirstVNF_Mem ) )", "choosing": "Max( ( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) * ( ( RCSe + MUM ) / ( MUM - CS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ),( CS * ( ( ( MUR - DS ) + MUR ) * MUC ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5046431768662295}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48764186418962685}, {"determining": "( ( Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) / Max( AMS,Min( ( FirstVNF_Mem_Server * Max( Max( BR,FirstVNF_RAM ),( ( Const + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) / AMS ) ) ) ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( ( Min( RRSe ,DS ) + Max( ( CS * MUM ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( ( Const - CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ),PN ) )", "choosing": "( ( Max( ( CS - CS ),Min( MUM ,RCSe ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + ( RMSe * RRSe ) ) - MLU ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5414504762126503}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.9468503937007874, "obj2": 0.030964659581247455}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( Min( MUM ,RRSe ) * Min( CS ,( MUC - RCSe ) ) )", "obj1": 0.9114173228346457, "obj2": 0.052218710086023336}, {"determining": "( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( RMSe ,Min( CS ,( ( Max( RRSe,Min( MUR ,MLU ) ) - ( MUM + RMSe ) ) * DS ) ) ) / ( MUR / RRSe ) ) / Min( DS ,MUR ) )", "obj1": 0.8976377952755905, "obj2": 0.07059904957292286}, {"determining": "( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) / Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ) ) ) + MUR ) )", "obj1": 0.3425196850393701, "obj2": 0.4608095848768153}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_Mem_Server * ACS ) ) - ( MDR / DDR ) )", "choosing": "( ( MUR - MUC ) - ( ( ( ( ( CS + MUM ) + ( MUR * DS ) ) + Min( Min( CS ,MLU ) ,( DS * DS ) ) ) - ( ( ( RCSe * MUC ) * ( RRSe * CS ) ) * ( ( RRSe - RCSe ) / ( MUM * MUR ) ) ) ) * MUR ) )", "obj1": 0.24606299212598426, "obj2": 0.5191777017835593}, {"determining": "( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / ( DDR - FirstVNF_RAM ) ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02550731200920984}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5007099493951758}, {"determining": "( Max( ( FirstVNF_RAM + ACS ),BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( Min( ( MUC / MUR ) ,( MLU / MUM ) ),MUM ) )", "obj1": 0.655511811023622, "obj2": 0.2481813739816897}, {"determining": "( ( PN - FirstVNF_CPU ) * ( MRS * ( MDR + ( BR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,Min( MUC ,MUR ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.5216446802905659}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.9291338582677166, "obj2": 0.045379015704097955}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8937007874015748, "obj2": 0.08428043254470538}, {"determining": "Min( ( ( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) + CRS ) - ( Max( PN,FirstVNF_CPU ) / ( ACS - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( CS - MUC ) - ( Max( DS,MUC ) + Max( DS,MUM ) ) )", "obj1": 0.984251968503937, "obj2": 0.008552716917969338}, {"determining": "( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) )", "choosing": "( ( ( MUC * DS ) / Max( RMSe,MUM ) ) / Max( Min( ( MUC / MUR ) ,( MLU / MUM ) ),MUM ) )", "obj1": 0.6614173228346457, "obj2": 0.24070435973360324}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( Const / FirstVNF_Mem_Server ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( Max( ( RRSe / RMSe ),( MLU - RMSe ) ) + MUR ) )", "obj1": 0.3464566929133858, "obj2": 0.4518524654429496}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( MLU,MUM ) )", "obj1": 0.6850393700787402, "obj2": 0.2263680126058502}, {"determining": "Min( ( Const + PN ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR / DS ) + ( DS - ( Max( CS,( MUR - CS ) ) - Max( MLU,( ( ( RCSe + RCSe ) / CS ) / CS ) ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.09677168418883837}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),Max( ( MRS - FirstVNF_Mem_Server ),( PN - Const ) ) ) / ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( FirstVNF_RAM_Server / Max( PN,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MLU ,( CS + DS ) ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8818897637795275, "obj2": 0.0916880827231117}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( PN,Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( ( RCSe / DS ) * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.046954523734496156}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / MUM )", "obj1": 0.6712598425196851, "obj2": 0.23399563086150166}, {"determining": "( ( FirstVNF_CPU - DDR ) * ( AMS * Const ) )", "choosing": "( ( ( ( RMSe * MUM ) * RMSe ) - MUC ) - ( DS + Max( DS,MUM ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0019290379497078137}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.013876790469668726}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.781496062992126, "obj2": 0.14656606583405127}, {"determining": "Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.20669291338582677, "obj2": 0.532796878448728}, {"determining": "Min( ( Const + PN ) ,( FirstVNF_RAM - ACS ) )", "choosing": "( ( MUR / DS ) + ( DS - ( Max( CS,( MUR - CS ) ) - Max( MLU,( ( ( RCSe + RCSe ) / CS ) / CS ) ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.09677168418883837}], "4": [{"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Max( BR,BR ) / ( Max( BR,BR ) / Max( RRS,BR ) ) )", "choosing": "( DS / MUM )", "obj1": 0.6417322834645669, "obj2": 0.2575713243204302}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( Min( ( MUC / MUM ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5295275590551181, "obj2": 0.28003463424416114}, {"determining": "Max( ( FirstVNF_Mem_Server + MRS ),( ( ( MDR * ARS ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( RRSe / CS ) / ( DS * MUR ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.781496062992126, "obj2": 0.10390394535546521}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),( Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Const ) + Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Max( MUR,( RMSe + ( DS * MLU ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.09448818897637795, "obj2": 0.6084253346626266}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.4035433070866142, "obj2": 0.40039855835542704}, {"determining": "( ( MRS + BR ) * ( BR * FirstVNF_CPU ) )", "choosing": "( ( DS * DS ) - ( ( ( MUC / ( RCSe - ( ( RCSe - MUM ) + Max( RRSe,Max( MUM,MUC ) ) ) ) ) * Min( ( DS - CS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5295275590551181, "obj2": 0.28003463424416114}, {"determining": "( ( FirstVNF_RAM * MDR ) * Max( Max( ( Max( FirstVNF_RAM_Server,ARS ) / Const ),CRS ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( ( RRSe / MUM ) + RMSe ) ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5575671343302376}, {"determining": "( ( ( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * Min( MDR ,( ( ACS / Const ) / CRS ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,Min( Max( DS,( MUR * MLU ) ) ,MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7049008008103471}, {"determining": "Max( ( DDR - FirstVNF_RAM ),( MDR + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4844429719408891}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( ( RRSe / MUM ) + RMSe ) ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5575671343302376}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( ( Min( RRSe ,DS ) + Max( ( CS * MUM ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.35826771653543305, "obj2": 0.44490781450113526}, {"determining": "( Max( BR,BR ) / ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,RMSe ) )", "obj1": 0.7224409448818898, "obj2": 0.20072263584165412}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,MUR ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( Min( ( DS - ( CS - RCSe ) ) ,Min( Min( CS ,Min( ( MUC + MUC ) ,CS ) ) ,Max( CS,RRSe ) ) ) * ( DS - ( MLU + RRSe ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4249699296767345}, {"determining": "Min( ACS ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) ) + ( DS - RMSe ) )", "obj1": 0.31496062992125984, "obj2": 0.4755482220903676}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.09055118110236221, "obj2": 0.6351494200576486}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),Max( Min( RRS ,MDR ),( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( CS - CS ) * Min( MUM ,RCSe ) ) - ( ( RCSe / MUR ) - Min( MUM ,RMSe ) ) ) / ( MUM + MUC ) )", "obj1": 0.8405511811023622, "obj2": 0.09834840362165216}, {"determining": "( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.4035433070866142, "obj2": 0.40039855835542704}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.09448818897637795, "obj2": 0.6084253346626266}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Min( PN ,BR ) ) ) - Max( PN,Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,BR ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( Min( MUR ,( CS / MUC ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( RMSe / MLU ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.041233127914823246}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( Min( ( MUC / RMSe ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) + Max( RRSe,RRSe ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.1836662631499756}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.9468503937007874, "obj2": 0.030964659581247455}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / RRSe ) )", "obj1": 0.3169291338582677, "obj2": 0.4541110738148179}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7795275590551181, "obj2": 0.14514151125905253}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.860236220472441, "obj2": 0.08812092015307643}, {"determining": "Max( ( DDR - FirstVNF_RAM ),Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Min( DS ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.22321563753945392}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( Const / FirstVNF_Mem_Server ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( Max( ( RRSe / RMSe ),( MLU - RMSe ) ) + MUR ) )", "obj1": 0.3464566929133858, "obj2": 0.4518524654429496}, {"determining": "( ( PN - FirstVNF_CPU ) * ( MRS * ( MDR + ( BR - Max( AMS,Min( MRS ,( CRS + ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * RMSe ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,Min( MUC ,MUR ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5022601934021206}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( Const + DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,Min( Const ,PN ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( MUM / DS ) + Max( Max( MUR,DS ),( MUM * DS ) ) ) + ( DS - Min( CS ,RCSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.739721984978261}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Const )", "choosing": "Min( ( MUR / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7440944881889764, "obj2": 0.16649319938311494}, {"determining": "( Min( MRS ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( DS + RCSe ) + ( MLU / MUM ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5467869607844456}, {"determining": "Min( AMS ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.09055118110236221, "obj2": 0.6351494200576486}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.7460629921259843, "obj2": 0.15473314486055628}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( RRS ,( ( Const / FirstVNF_Mem ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * DS ) )", "obj1": 0.6692913385826772, "obj2": 0.23135127851644066}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( FirstVNF_Mem_Server / Const ) / ( PN - Const ) ) ) / ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) ),( MLU * MLU ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.08509809511558626}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( MUM / DS ) + Max( Max( MUR,DS ),( DS * MUM ) ) )", "obj1": 0.8956692913385826, "obj2": 0.06667022993616324}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / RRS ) + ACS )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,CS ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.4015748031496063, "obj2": 0.4184687383060078}, {"determining": "Min( ( Const + PN ) ,( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - MLU ) ) )", "obj1": 0.23031496062992127, "obj2": 0.518996561975332}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,( AMS - MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MUM / MUR ) - ( Min( ( MUC / RMSe ) ,Max( DS,MUC ) ) + Max( RCSe,MUC ) ) )", "obj1": 0.9803149606299213, "obj2": 0.00677670369821698}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( Max( ( FirstVNF_RAM + BR ),BR ) - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( MUC * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - MLU ) ) )", "obj1": 0.84251968503937, "obj2": 0.0946753359404392}, {"determining": "( ( Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) / ( Min( DDR ,DDR ) + FirstVNF_Mem_Server ) )", "choosing": "Min( DS ,( Max( ( ( Min( RRSe ,RMSe ) + Max( ( CS * ( CS / MUR ) ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.8917322834645669, "obj2": 0.08004315012518252}, {"determining": "( ( DDR / AMS ) / Max( AMS,Min( MRS ,( CRS + MRS ) ) ) )", "choosing": "Min( ( MUR / ( MUM * ( CS / CS ) ) ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7716535433070866, "obj2": 0.15381505156620867}, {"determining": "( ( ( MDR * ARS ) * ( ARS - RRS ) ) * ( ( Const * FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( ( RMSe * RMSe ) / ( Max( RMSe,( ( ( ( RMSe * DS ) + Max( DS,DS ) ) * RMSe ) / MLU ) ) + MUM ) ) )", "obj1": 0.8976377952755905, "obj2": 0.05227098305580021}, {"determining": "( ( ( MDR * ARS ) * Max( Max( Max( CRS,( Min( FirstVNF_RAM ,( MDR + DDR ) ) + Const ) ),PN ),BR ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( RRSe / MUM ) / ( Max( RMSe,Max( MUR,( RMSe + ( MUC + RRSe ) ) ) ) * MUR ) )", "obj1": 0.90748031496063, "obj2": 0.05199364020697505}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,Min( ( ( ARS * FirstVNF_CPU ) / FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) - ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( DS + MUC ) )", "obj1": 0.968503937007874, "obj2": 0.01594094117620752}], "5": [{"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "Min( DS ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( RRS ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * ( CS * RRSe ) ) )", "obj1": 0.4015748031496063, "obj2": 0.39386766407854956}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MUM,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) ),( MLU * MLU ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.6240157480314961, "obj2": 0.27162424285263465}, {"determining": "( Min( ( AMS + ( Max( RRS,BR ) / ( ( MRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server - Const ) ) ) ) ,( AMS + FirstVNF_Mem ) ) * ( ( MRS - MDR ) / ( Min( CRS ,MRS ) - FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( RRSe + MUM ) )", "obj1": 0.5295275590551181, "obj2": 0.28003463424416114}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.38779527559055116, "obj2": 0.411280928984277}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( RRS ,( ( Const / FirstVNF_Mem ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * DS ) )", "obj1": 0.6692913385826772, "obj2": 0.23135127851644066}, {"determining": "( ( ( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * Min( MDR ,( ( ACS / Const ) / CRS ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,Min( Max( DS,( MUR * MLU ) ) ,MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7049008008103471}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( Min( ( MUC / MUM ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5295275590551181, "obj2": 0.28003463424416114}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.6228432569728412}, {"determining": "Min( ( FirstVNF_Mem + AMS ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.06692913385826772, "obj2": 0.6553224526364057}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.14763779527559054, "obj2": 0.5798108017715623}, {"determining": "( Max( MDR,Const ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( AMS ,ACS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( ( ( RCSe + MUM ) + ( CS - MUM ) ) / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2952755905511811, "obj2": 0.4661616742574713}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( Max( AMS,Min( MRS ,( CRS + ( Max( DDR,MDR ) * ( BR + ( Max( MRS,BR ) * FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_Mem / Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( Max( ( ( RRSe + RRSe ) + DS ),( MLU - MUR ) ) ,( CS - DS ) ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7736220472440944, "obj2": 0.14206162182921905}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( FirstVNF_Mem_Server / Const ) / ( PN - Const ) ) ) / ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) ),( MLU * MLU ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.08295835023195142}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / RRSe ) )", "obj1": 0.3169291338582677, "obj2": 0.4541110738148179}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.781496062992126, "obj2": 0.10390394535546521}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.812992125984252, "obj2": 0.08928552568302509}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( Const + DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,Min( Const ,PN ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( MUM / DS ) + Max( Max( MUR,DS ),( MUM * DS ) ) ) + ( DS - Min( CS ,RCSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.739721984978261}, {"determining": "( ( ( MDR * ACS ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Min( CS ,( ( MUR + DS ) + ( CS / DS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1141732283464567, "obj2": 0.5923057616866003}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,MUR ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.7086614173228346, "obj2": 0.19632772414750646}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / Const ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.5681302576519606}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( ( Min( RRSe ,DS ) + Max( ( CS * MUM ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.35826771653543305, "obj2": 0.44490781450113526}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( Const / FirstVNF_Mem_Server ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( DS ,( Max( ( ( Min( RRSe ,RMSe ) + Max( ( CS * ( CS / MUR ) ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.702755905511811, "obj2": 0.22402113757617112}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( Const / FirstVNF_Mem_Server ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( CS ,MUC ) ,( Max( ( RRSe / RMSe ),( MLU - RMSe ) ) + MUR ) )", "obj1": 0.3464566929133858, "obj2": 0.4518524654429496}, {"determining": "( Max( BR,BR ) / ( Max( BR,BR ) / Max( RRS,BR ) ) )", "choosing": "( DS / MUM )", "obj1": 0.6417322834645669, "obj2": 0.2575713243204302}, {"determining": "Min( ( ( AMS - ACS ) / ( MRS + ( FirstVNF_RAM - AMS ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( Min( MUC ,MUC ) + ( ( MUC * DS ) / Max( RMSe,MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05254252085182487}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) ) + ( DS - RMSe ) )", "obj1": 0.7992125984251969, "obj2": 0.0963993129260367}, {"determining": "( Min( MRS ,FirstVNF_Mem ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MUC * DS ) / Max( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) ),MUM ) )", "obj1": 0.7362204724409449, "obj2": 0.16189710338636704}, {"determining": "( Max( ( Min( ARS ,RRS ) + FirstVNF_Mem ),( ( MRS - FirstVNF_Mem_Server ) / ( Max( ( FirstVNF_RAM + BR ),BR ) - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / CS )", "obj1": 0.8543307086614174, "obj2": 0.08863179584595413}, {"determining": "( Min( Const ,CRS ) * Max( ( DDR - FirstVNF_RAM ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( Max( RMSe,Min( DS ,RCSe ) ),RCSe ) ) ,MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.5411487051885446}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.7460629921259843, "obj2": 0.15473314486055628}, {"determining": "( Max( BR,BR ) / ( Max( BR,BR ) / Max( RRS,BR ) ) )", "choosing": "( DS / MUM )", "obj1": 0.6417322834645669, "obj2": 0.2575713243204302}, {"determining": "( ( ( ACS - ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,MUM ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.531388987913387}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( Min( ( MUC / RMSe ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) + Max( RRSe,RRSe ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.1836662631499756}, {"determining": "( ( Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) / Max( AMS,Min( ( FirstVNF_Mem_Server * Max( Max( BR,FirstVNF_RAM ),( ( Min( Const ,CRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) / AMS ) ) ) ,( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7224409448818898, "obj2": 0.18430683725933658}, {"determining": "( ( ( ( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) ) - ( MRS + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.2204724409448819, "obj2": 0.5182144488148569}, {"determining": "( Min( ( ( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) + CRS ) - ( Max( PN,FirstVNF_CPU ) / ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) ) ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / RRSe ) - ( Min( ( MUC / RMSe ) ,Max( DS,( MUM / MLU ) ) ) + Max( RCSe,RRSe ) ) )", "obj1": 0.937007874015748, "obj2": 0.02909234227725667}, {"determining": "( ( DDR / AMS ) / Max( AMS,Min( MRS ,( CRS + MRS ) ) ) )", "choosing": "Min( ( MUR / ( MUM * ( CS / CS ) ) ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7716535433070866, "obj2": 0.15381505156620867}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( ( Min( RRSe ,DS ) + Max( ( CS * MUM ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.9251968503937008, "obj2": 0.03306704848516901}, {"determining": "( Min( Const ,CRS ) * ( BR / ACS ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( ( Min( RRSe ,DS ) + Max( ( ( MUM / RMSe ) * RCSe ),MLU ) ) / RMSe ),Max( MLU,RMSe ) ) + MUR ) )", "obj1": 0.35826771653543305, "obj2": 0.44490781450113526}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5133692375509716}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5462748814896049}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.09448818897637795, "obj2": 0.6084253346626266}, {"determining": "Min( ACS ,Min( MRS ,Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) ) )", "choosing": "( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) ) + MUR ) ) + ( DS - RMSe ) )", "obj1": 0.952755905511811, "obj2": 0.022831976806076654}], "6": [{"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "Min( DS ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( RRS ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * ( CS * RRSe ) ) )", "obj1": 0.4015748031496063, "obj2": 0.39386766407854956}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( Max( BR,BR ),BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( Min( ( MUC / MUM ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) + Max( RRSe,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5236220472440944, "obj2": 0.2789371230489927}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,AMS ) * Max( Max( FirstVNF_Mem,BR ),ARS ) )", "choosing": "Max( ( RCSe / MLU ),( Min( ( ( MUC - ( ( DS / MUM ) + ( RMSe * ( DS * RMSe ) ) ) ) * ( Min( Min( RMSe ,RCSe ) ,( CS * DS ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) / ( MUC / CS ) ) )", "obj1": 0.6594488188976378, "obj2": 0.20599658797375853}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.1488648680198516}, {"determining": "( Min( ( AMS * FirstVNF_Mem ) ,Max( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( MRS / PN ) ),AMS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( DS / Max( MUR,Max( DS,DS ) ) )", "obj1": 0.6968503937007874, "obj2": 0.18400362824849364}, {"determining": "( Max( ( Max( RRS,BR ) + MRS ),( ( ( MDR * ARS ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( Min( ( MUC / MUM ) ,( RRSe + Max( RMSe,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) ) ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3010066296919495}, {"determining": "( Max( AMS,Min( MRS ,( CRS + ( Max( DDR,MDR ) * ( BR + ( Max( MRS,BR ) * FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_Mem / Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( Max( ( ( RRSe + RRSe ) + DS ),( MLU - MUR ) ) ,( CS - DS ) ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7736220472440944, "obj2": 0.14206162182921905}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MUM,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) ),( MLU * MLU ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.6240157480314961, "obj2": 0.27162424285263465}, {"determining": "Min( ACS ,Min( MRS ,Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) ) )", "choosing": "( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) ) + MUR ) ) + ( DS - RMSe ) )", "obj1": 0.952755905511811, "obj2": 0.022831976806076654}, {"determining": "Min( ( FirstVNF_Mem + AMS ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.06692913385826772, "obj2": 0.6553224526364057}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.14763779527559054, "obj2": 0.5798108017715623}, {"determining": "( Max( MDR,Const ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( AMS ,ACS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( ( ( RCSe + MUM ) + ( CS - MUM ) ) / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2952755905511811, "obj2": 0.4661616742574713}, {"determining": "( Max( BR,BR ) / ( Max( BR,BR ) / Max( RRS,BR ) ) )", "choosing": "( DS / MUM )", "obj1": 0.6417322834645669, "obj2": 0.2575713243204302}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( ( Min( RRSe ,DS ) + Max( ( CS * MUM ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.9251968503937008, "obj2": 0.03306704848516901}, {"determining": "( ( DDR + MDR ) * ( MRS * ( MDR + ( AMS * ( ( BR * Const ) + PN ) ) ) ) )", "choosing": "( ( ( Min( Min( MUM ,( RMSe * ( ( MLU / MUR ) / Min( MUR ,MUR ) ) ) ) ,( CS - CS ) ) / ( ( MUR - Max( RMSe,Max( ( MLU * MLU ),( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS - DS ) ) / ( CS + Max( RMSe,CS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5375936682379557}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / CS )", "obj1": 0.860236220472441, "obj2": 0.06584949092539223}, {"determining": "Min( ( ( AMS - ACS ) / ( MRS + ( FirstVNF_RAM - AMS ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( Min( MUC ,MUC ) + ( ( MUC * DS ) / Max( RMSe,MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05254252085182487}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.8326771653543307, "obj2": 0.07970390945709438}, {"determining": "( ( ( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * Min( MDR ,( ( ACS / Const ) / CRS ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,Min( Max( DS,( MUR * MLU ) ) ,MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7049008008103471}, {"determining": "( ( ( ACS - ( MRS + MDR ) ) / Const ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.5681302576519606}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.781496062992126, "obj2": 0.10390394535546521}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( RRS - Const ) ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),Min( ACS ,FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,( MUC / ( DS - Min( ( MUR * RMSe ) ,Max( RCSe,MUC ) ) ) ) ) * RRSe ) - Max( ( MUM - MUM ),DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7392612471247122}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "Min( ( ( ( FirstVNF_Mem + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + ( ( MUC * DS ) / Max( Max( CS,DS ),MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4515726318671283}, {"determining": "( Max( ( Min( ARS ,RRS ) + FirstVNF_Mem ),( ( MRS - FirstVNF_Mem_Server ) / ( Max( ( FirstVNF_RAM + BR ),BR ) - Const ) ) ) / ACS )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( MLU * RMSe ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / CS )", "obj1": 0.3838582677165354, "obj2": 0.43197171190329436}, {"determining": "( ( ( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + ( BR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( Const + PN ) ,( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.6228432569728412}, {"determining": "( ( ( ACS - ( MRS + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1141732283464567, "obj2": 0.5923057616866003}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / RRSe ) )", "obj1": 0.3169291338582677, "obj2": 0.4541110738148179}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.3779527559055118, "obj2": 0.44357695323036606}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ,Max( ( DS + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MUR ) ) ) ),MUR ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5366275958640121}, {"determining": "( Min( ( ( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) + CRS ) - ( Max( PN,FirstVNF_CPU ) / ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) ) ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / RRSe ) - ( Min( ( MUC / RMSe ) ,Max( DS,( MUM / MLU ) ) ) + Max( RCSe,RRSe ) ) )", "obj1": 0.937007874015748, "obj2": 0.02909234227725667}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.10039370078740158, "obj2": 0.6014312248075275}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.38779527559055116, "obj2": 0.411280928984277}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - BR ) ,FirstVNF_RAM ) ) / Max( ( ACS / FirstVNF_Mem ),Min( FirstVNF_CPU ,( CRS + ACS ) ) ) )", "choosing": "( ( ( ( ( ( Max( CS,( RCSe * RMSe ) ) - RRSe ) / MUC ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RMSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5079391962361047}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8740157480314961, "obj2": 0.059004802102807084}, {"determining": "( Min( Max( BR,AMS ) ,CRS ) * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.09448818897637795, "obj2": 0.6084253346626266}, {"determining": "( Max( BR,BR ) / ( Max( BR,BR ) / Max( RRS,BR ) ) )", "choosing": "( DS / MUM )", "obj1": 0.6259842519685039, "obj2": 0.2688627465890956}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( Const + PN ) ,( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( MUM + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.08661417322834646, "obj2": 0.6192680116200776}, {"determining": "( Max( BR,BR ) / ( Max( BR,BR ) / Max( RRS,BR ) ) )", "choosing": "( DS / MUM )", "obj1": 0.6417322834645669, "obj2": 0.2575713243204302}, {"determining": "( ( ( ACS - ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,MUM ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( CS * RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5309592936365348}, {"determining": "( Max( BR,BR ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),( DS / MUM ) ) + MUR ) ) + ( DS - RMSe ) )", "obj1": 0.8228346456692913, "obj2": 0.08578628734818348}, {"determining": "( ( ( MDR * ACS ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + CS ),Min( CS ,( ( MUR + DS ) + ( CS / DS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1141732283464567, "obj2": 0.5923057616866003}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( ( Min( RRSe ,DS ) + Max( ( CS * MUM ),MLU ) ) / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.35826771653543305, "obj2": 0.44490781450113526}], "7": [{"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * Max( ( Const - BR ),MRS ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( ( DS / CS ) / CS ) / Min( ( DS + ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.59251968503937, "obj2": 0.2503605641373879}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.1488648680198516}, {"determining": "( Min( ( AMS * FirstVNF_Mem ) ,Max( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( MRS / PN ) ),AMS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( DS / Max( MUR,Max( DS,DS ) ) )", "obj1": 0.6968503937007874, "obj2": 0.18400362824849364}, {"determining": "( Max( AMS,Min( MRS ,( CRS + ( Max( DDR,MDR ) * ( BR + ( Max( MRS,BR ) * FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_Mem / Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( Max( ( ( RRSe + RRSe ) + DS ),( MLU - MUR ) ) ,( CS - DS ) ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7736220472440944, "obj2": 0.14206162182921905}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "Min( ( ( AMS - ACS ) / ( MRS + ( FirstVNF_RAM - AMS ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) ) + MUR ) ) + ( DS - RMSe ) )", "obj1": 0.44881889763779526, "obj2": 0.3663302793166145}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( Min( ( MUC / MUM ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) + Max( RRSe,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2778124486445422}, {"determining": "( Min( Min( Const ,CRS ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.6377952755905512, "obj2": 0.2113990056603045}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( DDR,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( ( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) / CS ) / Min( ( MUR + ( Min( ( ( DS - MLU ) * ( RCSe / MUR ) ) ,( RRSe * ( MUC * MUC ) ) ) * MUC ) ) ,MUR ) ) )", "obj1": 0.781496062992126, "obj2": 0.1026161504586371}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "Min( ( FirstVNF_Mem + AMS ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * ( CS * RRSe ) ) )", "obj1": 0.42322834645669294, "obj2": 0.3795811271554574}, {"determining": "Min( ( ( AMS - ACS ) / ( MRS + ( FirstVNF_RAM - AMS ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4154292362978201}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUM ,Max( MUR,( DS + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - MUC ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MUR ) ) ) ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( Max( MDR,Const ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( AMS ,ACS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( ( ( RCSe + MUM ) + ( CS - MUM ) ) / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2952755905511811, "obj2": 0.4661616742574713}, {"determining": "Min( ACS ,Min( MRS ,Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) ) )", "choosing": "( ( ( MUR - CS ) / ( Min( MUC ,MUC ) + ( ( MUC * DS ) / Max( RMSe,MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.01637553431628522}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( Max( BR,BR ),BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( Min( ( MUC / MUM ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) + Max( RRSe,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5236220472440944, "obj2": 0.2789371230489927}, {"determining": "( ( ( ACS - ( ( Max( BR,Max( ( Const / AMS ),BR ) ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( ( CS / RRSe ) + MLU ),Max( MUR,( Min( MLU ,RCSe ) + MUM ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.14566929133858267, "obj2": 0.5784015592443327}, {"determining": "( ( DDR + MDR ) * ( MRS * ( MDR + ( AMS * ( ( BR * Const ) + PN ) ) ) ) )", "choosing": "( ( ( Min( Min( MUM ,( RMSe * ( ( MLU / MUR ) / Min( MUR ,MUR ) ) ) ) ,( CS - CS ) ) / ( ( MUR - Max( RMSe,Max( ( MLU * MLU ),( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS - DS ) ) / ( CS + Max( RMSe,CS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5375936682379557}, {"determining": "Min( ( ( AMS - ACS ) / ( MRS + ( FirstVNF_RAM - AMS ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( Min( MUC ,MUC ) + ( ( MUC * DS ) / Max( RMSe,MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05254252085182487}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.8110236220472441, "obj2": 0.10260752505072597}, {"determining": "( ( FirstVNF_CPU - ( Min( Const ,CRS ) * Max( Max( FirstVNF_CPU_Server,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( ( ( ( RRSe + ( CS + CS ) ) * MUM ) - MLU ) * RRSe ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7030848458688007}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( RRS - Const ) ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),Min( ACS ,FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,( MUC / ( DS - Min( ( MUR * RMSe ) ,Max( RCSe,MUC ) ) ) ) ) * RRSe ) - Max( ( MUM - MUM ),DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7392612471247122}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( RRS ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * ( CS * RRSe ) ) )", "obj1": 0.4015748031496063, "obj2": 0.39386766407854956}, {"determining": "( ( ( ( FirstVNF_CPU * ( DDR - Min( Const ,AMS ) ) ) - ( Max( ( Max( DDR,CRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( CS,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( Max( RMSe,( CS / MUC ) ) * ( ( ( ( RCSe / RMSe ) - ( Max( MUC,( DS - RMSe ) ) + CS ) ) + CS ) * MUR ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6311626456265382}, {"determining": "( ( ( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + ( BR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "( BR * Max( Min( FirstVNF_RAM ,Const ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( Const + PN ) ,( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( MUM + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) )", "obj1": 0.12598425196850394, "obj2": 0.5914089864000122}, {"determining": "( Min( ( ( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) + CRS ) - ( Max( PN,FirstVNF_CPU ) / ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) ) ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.0439659038008041}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,AMS ) * Max( Max( FirstVNF_Mem,BR ),ARS ) )", "choosing": "Max( ( RCSe / MLU ),( Min( ( ( MUC - ( ( DS / MUM ) + ( RMSe * ( DS * RMSe ) ) ) ) * ( Min( Min( RMSe ,RCSe ) ,( CS * DS ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) / ( MUC / CS ) ) )", "obj1": 0.6594488188976378, "obj2": 0.20599658797375853}, {"determining": "( ( Min( ( Max( Min( ( MRS - BR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ,Max( ( ( CS + DS ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MUR ) ) ) ),MUR ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.31299212598425197, "obj2": 0.4352695884079436}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MUC * DS ) / ( ( MLU * RCSe ) * ( CS * RRSe ) ) )", "obj1": 0.8523622047244095, "obj2": 0.06987842239008793}, {"determining": "( ( ( ACS - ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,MUM ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( CS * RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5309592936365348}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.6594488188976378, "obj2": 0.20599658797375853}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) * ( ( ( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) + CRS ) - ( Max( PN,FirstVNF_CPU ) / ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) ) ) * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / ( ( RMSe / RRSe ) - ( Min( ( MUC / RMSe ) ,Max( DS,( MUM / MLU ) ) ) + Max( RCSe,RRSe ) ) ) ),( ( MUC / CS ) / RRSe ) )", "obj1": 0.9507874015748031, "obj2": 0.018945044530844432}, {"determining": "( Min( ( ( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) + CRS ) - ( Max( PN,FirstVNF_CPU ) / ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) ) ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / RRSe ) - ( Min( ( MUC / RMSe ) ,Max( DS,( MUM / MLU ) ) ) + Max( RCSe,RRSe ) ) )", "obj1": 0.937007874015748, "obj2": 0.02909234227725667}, {"determining": "( ( Min( ( FirstVNF_Mem + Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( Max( DDR,( FirstVNF_RAM - MDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - Max( ( MLU + CS ),Max( MUR,( ( MLU / RMSe ) + RCSe ) ) ) ) - Min( MUM ,RMSe ) ) - ( Min( MUM ,RCSe ) * ( CS - CS ) ) ) / ( CS + DS ) )", "obj1": 0.1830708661417323, "obj2": 0.5325367120045115}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.8326771653543307, "obj2": 0.07970390945709438}, {"determining": "( Max( BR,BR ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),( DS / MUM ) ) + MUR ) ) + ( DS - RMSe ) )", "obj1": 0.8228346456692913, "obj2": 0.08578628734818348}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "Min( ( MDR * ACS ) ,( MRS - FirstVNF_Mem ) )", "choosing": "( ( Min( Min( RCSe ,RMSe ) ,( RCSe / ( Max( MLU,Min( ( MUR - RCSe ) ,( CS - MLU ) ) ) - RCSe ) ) ) - ( ( MUR + Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.0688976377952756, "obj2": 0.6539790760383888}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( RRS ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5044198054734532}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Max( BR,BR ) / Max( RRS,BR ) ) )", "choosing": "( ( DS / MUM ) / ( CS + DS ) )", "obj1": 0.3779527559055118, "obj2": 0.41049065345379687}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.10039370078740158, "obj2": 0.6014312248075275}, {"determining": "( Max( ( Min( ARS ,RRS ) + FirstVNF_Mem ),( ( MRS - FirstVNF_Mem_Server ) / ( Max( ( FirstVNF_RAM + BR ),BR ) - Const ) ) ) / ACS )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,MUM ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( CS * RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5081129920213426}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( RRS ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6587503200686091}], "8": [{"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * Max( ( Const - BR ),MRS ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( ( DS / CS ) / CS ) / Min( ( DS + ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.36361705150105844}, {"determining": "( Min( Min( FirstVNF_CPU ,AMS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( Const,CRS ) ) ) )", "choosing": "( Max( ( MUM / MLU ),( ( ( MUM / RRSe ) / MUC ) / Min( DS ,RMSe ) ) ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + ( RRSe + RRSe ) ) )", "obj1": 0.6594488188976378, "obj2": 0.1832668011321326}, {"determining": "Min( ( ( AMS - ACS ) / ( MRS + ( FirstVNF_RAM - AMS ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4154292362978201}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.4448818897637795, "obj2": 0.35484911738270136}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "Max( ( ( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),( DS / MUM ) ) + MUR ) ) + ( DS - RMSe ) ) / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.562992125984252, "obj2": 0.2595898768787359}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( RMSe,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.14880604564689945}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.10039370078740158, "obj2": 0.6014312248075275}, {"determining": "( ( ( ACS - ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.07677165354330709, "obj2": 0.6282884889471704}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + DS ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.7736220472440944, "obj2": 0.13355301575514794}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( Max( BR,BR ),BR ) / Max( BR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( Min( ( MUC / MUM ) ,( Max( MUM,RMSe ) + ( ( DS / MUM ) / ( CS + DS ) ) ) ) + Max( RRSe,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2825215284877919}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.20775186586317637}, {"determining": "( Max( MDR,Const ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / Min( AMS ,ACS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( ( ( RCSe + MUM ) + ( CS - MUM ) ) / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2952755905511811, "obj2": 0.4661616742574713}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( Min( Min( Const ,CRS ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.6141732283464567, "obj2": 0.23728765429025375}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),BR ) / Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUR + Max( RRSe,RRSe ) ) )", "obj1": 0.5275590551181102, "obj2": 0.27742378622869374}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( RRS,( Const - Const ) ) / Max( BR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe + CS ) ,CS ) / ( CS / MUM ) )", "obj1": 0.6299212598425197, "obj2": 0.22262459870628296}, {"determining": "( ( FirstVNF_CPU - ( Min( Const ,CRS ) * Max( Max( FirstVNF_CPU_Server,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( ( ( ( RRSe + ( CS + CS ) ) * MUM ) - MLU ) * RRSe ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7030848458688007}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUM ,Max( MUR,( DS + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - MUC ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MUR ) ) ) ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3110236220472441, "obj2": 0.4357114052545592}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( ( ( Const * PN ) + AMS ) / Min( ( FirstVNF_RAM_Server / RRS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( DS / CS ) - Max( ( MUM - MUM ),( Max( RMSe,CS ) - ( Max( RRSe,DS ) + ( ( RRSe + MLU ) / ( ( MUM / Min( RRSe ,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7388552669090919}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( DDR,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05704099825271192}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5543411549232635}, {"determining": "( ( ( ACS - ( ( Max( BR,Max( ( Const / AMS ),BR ) ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( ( CS / RRSe ) + MLU ),Max( MUR,( Min( MLU ,RCSe ) + MUM ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.14566929133858267, "obj2": 0.5784015592443327}, {"determining": "( ( ( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + ( BR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7322834645669292, "obj2": 0.14001227097537405}, {"determining": "Min( ACS ,Min( MRS ,Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) ) )", "choosing": "( ( ( MUR - CS ) / ( Min( MUC ,MUC ) + ( ( MUC * DS ) / Max( RMSe,MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.9724409448818898, "obj2": 0.013810744873020529}, {"determining": "( ( ( ACS - ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) + MDR ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,MUM ) ) ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( CS * RCSe ),Max( MUM,RMSe ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5309592936365348}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,Min( Min( DDR ,( CRS / MRS ) ) ,DDR ) ) + Const ) )", "choosing": "Max( Max( ( MUM - MUM ),DS ),( Min( ( DS * Max( MUR,RRSe ) ) ,MUR ) / ( MUC / Max( DS,MUC ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006461524885909597}, {"determining": "( ( ( Min( RRS ,( ( Const / Min( MDR ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU - PN ) ,( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( MUM / ( MUM * ( RMSe - RRSe ) ) ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.8031496062992126, "obj2": 0.0925756225633321}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.11043923152034095}, {"determining": "( ( Min( ( FirstVNF_Mem + Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( Max( DDR,( FirstVNF_RAM - MDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - Max( ( MLU + CS ),Max( MUR,( ( MLU / RMSe ) + RCSe ) ) ) ) - Min( MUM ,RMSe ) ) - ( Min( MUM ,RCSe ) * ( CS - CS ) ) ) / ( CS + DS ) )", "obj1": 0.1830708661417323, "obj2": 0.5325367120045115}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( MRS,CRS ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( ( DS * ( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ,MUR ) ) )", "obj1": 0.59251968503937, "obj2": 0.24651052403083765}, {"determining": "Min( ( FirstVNF_Mem + AMS ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.07480314960629922, "obj2": 0.6462061770162534}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( RRS ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5044198054734532}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( DDR,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( ( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) / CS ) / Min( ( MUR + ( Min( ( ( DS - MLU ) * ( RCSe / MUR ) ) ,( RRSe * ( MUC * MUC ) ) ) * MUC ) ) ,MUR ) ) )", "obj1": 0.781496062992126, "obj2": 0.1026161504586371}, {"determining": "Min( ( ( AMS - ACS ) / ( MRS + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_RAM_Server ) - BR ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( ( CS * ( ( RRSe / ( RMSe - RCSe ) ) + ( MUC * MUM ) ) ) + MUR ) ) + ( DS - RMSe ) )", "obj1": 0.8917322834645669, "obj2": 0.050088638254955915}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.12401574803149606, "obj2": 0.5965289836563203}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.59251968503937, "obj2": 0.24651052403083765}, {"determining": "( ( DDR + MDR ) * ( MRS * ( MDR + ( AMS * ( ( BR * Const ) + PN ) ) ) ) )", "choosing": "( ( ( Min( Min( MUM ,( RMSe * ( ( MLU / MUR ) / Min( MUR ,MUR ) ) ) ) ,( CS - CS ) ) / ( ( MUR - Max( RMSe,Max( ( MLU * MLU ),( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS - DS ) ) / ( CS + Max( RMSe,CS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5375936682379557}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) - FirstVNF_CPU ) * ( ( ( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) + CRS ) - ( Max( PN,FirstVNF_CPU ) / ( Min( ( AMS + FirstVNF_Mem ) ,( ACS + MRS ) ) - FirstVNF_CPU ) ) ) * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / ( ( RMSe / RRSe ) - ( Min( ( MUC / RMSe ) ,Max( DS,( MUM / MLU ) ) ) + Max( RCSe,RRSe ) ) ) ),( ( MUC / CS ) / RRSe ) )", "obj1": 0.9330708661417323, "obj2": 0.034655414867613796}], "9": [{"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( ( ( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * Max( ( Const - BR ),MRS ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( ( DS / CS ) / CS ) / Min( ( DS + ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( ( ( ACS - Min( MRS ,FirstVNF_Mem ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06692913385826772, "obj2": 0.6281958081425318}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "Max( ( ( ( ( MUR - CS ) / ( Max( ( RRSe / RMSe ),( DS / MUM ) ) + MUR ) ) + ( DS - RMSe ) ) / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.562992125984252, "obj2": 0.2595898768787359}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.36361705150105844}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.4448818897637795, "obj2": 0.35484911738270136}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),( CRS - ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( Min( ( MLU / ( RMSe / CS ) ) ,MUR ) - MUM ) * RRSe ) )", "obj1": 0.28346456692913385, "obj2": 0.46069657677639153}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3661417322834646, "obj2": 0.3656597162236746}, {"determining": "Min( ACS ,Min( MRS ,Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) ) )", "choosing": "( ( ( MUR - CS ) / ( Min( MUC ,MUC ) + ( ( MUC * DS ) / Max( RMSe,MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.9724409448818898, "obj2": 0.013810744873020529}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.20775186586317637}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + DS ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.7736220472440944, "obj2": 0.13355301575514794}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.6594488188976378, "obj2": 0.1832668011321326}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),BR ) / Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUR + Max( RRSe,RRSe ) ) )", "obj1": 0.5137795275590551, "obj2": 0.2860704040861704}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( Max( BR,BR ),BR ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( Min( MUM ,( RMSe * ( ( MLU / MUR ) / Min( MUR ,MUR ) ) ) ) ,( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( ( MLU * MLU ),( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS - DS ) ) / ( CS + DS ) )", "obj1": 0.8307086614173228, "obj2": 0.07847432385676165}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + PN ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,FirstVNF_Mem ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( ( Min( MUM ,Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ),( Max( MUC,CS ) / Max( CS,RMSe ) ) )", "obj1": 0.9488188976377953, "obj2": 0.027539945372730242}, {"determining": "( Min( Min( FirstVNF_CPU ,AMS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( Const,CRS ) ) ) )", "choosing": "( Max( ( MUM / MLU ),( ( ( MUM / RRSe ) / MUC ) / Min( DS ,RMSe ) ) ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + ( RRSe + RRSe ) ) )", "obj1": 0.6594488188976378, "obj2": 0.1832668011321326}, {"determining": "( Min( Min( Const ,CRS ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.6141732283464567, "obj2": 0.23728765429025375}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6181102362204725, "obj2": 0.21588454356731626}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( MRS ,AMS ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( ( ( RRSe * Max( MUC,MUM ) ) / MUC ) + MUR ) ) + ( ( DS - ( RMSe / MLU ) ) - RMSe ) )", "obj1": 0.9094488188976378, "obj2": 0.043038255015203905}, {"determining": "( ( FirstVNF_CPU - ( Min( Const ,CRS ) * Max( Max( FirstVNF_CPU_Server,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( ( ( ( RRSe + ( CS + CS ) ) * MUM ) - MLU ) * RRSe ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7030848458688007}, {"determining": "( Min( ( ( ACS - ( MRS + Min( MRS ,AMS ) ) ) - ( BR + DDR ) ) ,PN ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( ( MUC / DS ) ,( ( MUC / RMSe ) * ( ( CS - DS ) / RRSe ) ) ) ,MUR ) ) )", "obj1": 0.44881889763779526, "obj2": 0.3482332370596954}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),BR ) / Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUR + Max( Max( MUR,MUM ),RRSe ) ) )", "obj1": 0.531496062992126, "obj2": 0.27618794751764414}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_Mem + FirstVNF_Mem ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ,Max( ( ( CS + DS ) + CS ),MUR ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.30118110236220474, "obj2": 0.43672865617383305}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.10039370078740158, "obj2": 0.6014312248075275}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( DDR,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05704099825271192}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5543411549232635}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7322834645669292, "obj2": 0.14001227097537405}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( RRSe - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.12401574803149606, "obj2": 0.5823270731408123}, {"determining": "( ( ( ACS - ( ( Max( BR,Max( ( Const / AMS ),BR ) ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( ( ( CS / RRSe ) + MLU ),Max( MUR,( Min( MLU ,RCSe ) + MUM ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.14566929133858267, "obj2": 0.5784015592443327}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( RMSe,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.14880604564689945}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( RMSe,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.14880604564689945}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( ( ( ACS - ( ( Max( FirstVNF_CPU,BR ) / Max( RRS,Min( FirstVNF_RAM_Server ,ARS ) ) ) + ( Max( ( FirstVNF_CPU_Server + BR ),BR ) / Max( BR,RRS ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,DS ) * ( CS - CS ) ) - ( ( MUM / MUC ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1220472440944882, "obj2": 0.5997627846161228}, {"determining": "( ( Min( ( FirstVNF_Mem + Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( Max( DDR,( FirstVNF_RAM - MDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - Max( ( MLU + CS ),Max( MUR,( ( MLU / RMSe ) + RCSe ) ) ) ) - Min( MUM ,RMSe ) ) - ( Min( MUM ,RCSe ) * ( CS - CS ) ) ) / ( CS + DS ) )", "obj1": 0.1830708661417323, "obj2": 0.5325367120045115}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.11043923152034095}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( MRS,CRS ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( ( DS * ( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ,MUR ) ) )", "obj1": 0.59251968503937, "obj2": 0.24651052403083765}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( ( ( Const * PN ) + AMS ) / Min( ( FirstVNF_RAM_Server / RRS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( DS / CS ) - Max( ( MUM - MUM ),( Max( RMSe,CS ) - ( Max( RRSe,DS ) + ( ( RRSe + MLU ) / ( ( MUM / Min( RRSe ,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7388552669090919}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) * ( Min( ( FirstVNF_Mem + AMS ) ,CRS ) * ( ( AMS - ACS ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( ( DS * ( Min( ( MUM / MLU ) ,( MUC * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ,MUR ) ) )", "obj1": 0.59251968503937, "obj2": 0.24651052403083765}, {"determining": "( ( DDR + MDR ) * ( MRS * ( MDR + ( AMS * ( ( BR * Const ) + PN ) ) ) ) )", "choosing": "( ( ( Min( Min( MUM ,( RMSe * ( ( MLU / MUR ) / Min( MUR ,MUR ) ) ) ) ,( CS - CS ) ) / ( ( MUR - Max( RMSe,Max( ( MLU * MLU ),( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS - DS ) ) / ( CS + Max( RMSe,CS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5375936682379557}], "10": [{"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN - MDR ) * MDR ) ) ) ) * ( ( FirstVNF_Mem / ( MDR - ( ( PN - MDR ) * MDR ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( ( ( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / MRS ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( ( RRSe / Max( ( Max( Min( ( CS * MUR ) ,CS ),MLU ) / ( ( RRSe + RCSe ) - MUR ) ),RMSe ) ) - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + PN ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,FirstVNF_Mem ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( ( Min( MUM ,Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ),( Max( MUC,CS ) / Max( CS,RMSe ) ) )", "obj1": 0.9488188976377953, "obj2": 0.027539945372730242}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem / ( DDR * FirstVNF_RAM_Server ) ) ) * Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( ( MUM / MUM ) - ( ( ( RMSe + DS ) - RMSe ) + Min( DS ,( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.237239048458964}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "Min( ACS ,Min( MRS ,Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) ) )", "choosing": "( ( ( MUR - CS ) / ( Min( MUC ,MUC ) + ( ( MUC * DS ) / Max( RMSe,MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.9724409448818898, "obj2": 0.013810744873020529}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( MRS ,AMS ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( ( ( RRSe * Max( MUC,MUM ) ) / MUC ) + MUR ) ) + ( ( DS - ( RMSe / MLU ) ) - RMSe ) )", "obj1": 0.9094488188976378, "obj2": 0.043038255015203905}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( MRS,CRS ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.20766876580485108}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) - ( Min( Const ,CRS ) * Max( Max( CRS,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( CS + Max( RMSe,MLU ) ) ,Max( ( ( CS + DS ) + MUR ),MUR ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5027881339526847}, {"determining": "( Min( Min( FirstVNF_CPU ,AMS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( Const,CRS ) ) ) )", "choosing": "( Max( ( MUM / MLU ),( ( ( MUM / RRSe ) / MUC ) / Min( DS ,RMSe ) ) ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + ( RRSe + RRSe ) ) )", "obj1": 0.6594488188976378, "obj2": 0.1832668011321326}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( BR + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.43503937007874016, "obj2": 0.36192302284919037}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.36361705150105844}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + DS ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,CS ) / ( MUM / MUM ) )", "obj1": 0.7736220472440944, "obj2": 0.13355301575514794}, {"determining": "Min( Min( ( AMS - ACS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),( DDR - ( PN / DDR ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Min( ( MUM * MLU ) ,MUC ) ) ) - Max( DS,MUR ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.14880604564689945}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUM / MLU ),( ( MUC / CS ) / Min( DS ,RMSe ) ) ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.6594488188976378, "obj2": 0.1832668011321326}, {"determining": "( Min( Min( Const ,CRS ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),BR ) / Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) ) ) ) )", "choosing": "Max( ( RCSe / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6520395566916519}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),BR ) / Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUR + Max( RRSe,RRSe ) ) )", "obj1": 0.5137795275590551, "obj2": 0.2860704040861704}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( DDR,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05704099825271192}, {"determining": "( Min( ( ( ACS - ( MRS + Min( MRS ,AMS ) ) ) - ( BR + DDR ) ) ,PN ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( ( MUC / DS ) ,( ( MUC / RMSe ) * ( ( CS - DS ) / RRSe ) ) ) ,MUR ) ) )", "obj1": 0.44881889763779526, "obj2": 0.3482332370596954}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.10039370078740158, "obj2": 0.6014312248075275}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( RMSe,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.14880604564689945}, {"determining": "( ( ACS - AMS ) + ( ( FirstVNF_CPU + Max( MDR,Max( FirstVNF_Mem,BR ) ) ) / RRS ) )", "choosing": "Max( Min( ( ( CS * CS ) - ( MUM / ( ( MUC + ( MLU / MUR ) ) * ( MUR - DS ) ) ) ) ,RRSe ),( Min( RCSe ,RRSe ) / Max( ( ( ( RMSe * CS ) / RCSe ) - MUC ),MUC ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5270995076775846}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( ( ( Const * PN ) + AMS ) / Min( ( FirstVNF_RAM_Server / RRS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( DS / CS ) - Max( ( MUM - MUM ),( Max( RMSe,CS ) - ( Max( RRSe,DS ) + ( ( RRSe + MLU ) / ( ( MUM / Min( RRSe ,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7388552669090919}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( BR * Max( ( MRS / MDR ),PN ) ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( Max( MUR,MUC ) - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,MLU ) ) )", "obj1": 0.5511811023622047, "obj2": 0.261635446876477}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7322834645669292, "obj2": 0.14001227097537405}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3661417322834646, "obj2": 0.3656597162236746}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.5728346456692913, "obj2": 0.25582170677155097}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1594488188976378, "obj2": 0.5466565005801063}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.2952755905511811, "obj2": 0.4521614319498673}, {"determining": "( ( ( ACS - ( ( Max( FirstVNF_CPU,BR ) / Max( RRS,Min( FirstVNF_RAM_Server ,ARS ) ) ) + ( Max( ( FirstVNF_CPU_Server + BR ),BR ) / Max( BR,RRS ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,DS ) * ( CS - CS ) ) - ( ( MUM / MUC ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1220472440944882, "obj2": 0.5997627846161228}, {"determining": "( ( FirstVNF_CPU - ( Min( Const ,CRS ) * Max( Max( FirstVNF_CPU_Server,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( ( ( ( RRSe + ( CS + CS ) ) * MUM ) - MLU ) * RRSe ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7030848458688007}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6181102362204725, "obj2": 0.21588454356731626}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6181102362204725, "obj2": 0.21588454356731626}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,MDR ) ) + ( FirstVNF_CPU / MRS ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) + ( RRSe - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / Max( MUR,MUC ) ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.12401574803149606, "obj2": 0.5823270731408123}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.2736220472440945, "obj2": 0.4648160036716121}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.11043923152034095}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,( Max( RRS,ARS ) / ( AMS - Const ) ) ) + Const ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Max( BR,Min( MRS ,FirstVNF_CPU ) ) ,MRS ) ) ) )", "choosing": "Max( ( ( CS / MUC ) / Min( DS ,RMSe ) ),( MLU * Max( MUR,( MUM - ( DS * ( RCSe - DS ) ) ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_Mem + FirstVNF_Mem ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5284498040226904}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),( CRS - ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( Min( ( MLU / ( RMSe / CS ) ) ,MUR ) - MUM ) * RRSe ) )", "obj1": 0.28346456692913385, "obj2": 0.46069657677639153}], "11": [{"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),( CRS - ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( Min( ( MLU / ( RMSe / CS ) ) ,MUR ) - MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN - MDR ) * MDR ) ) ) ) * ( ( FirstVNF_Mem / ( MDR - ( ( PN - MDR ) * MDR ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( FirstVNF_RAM_Server,DDR ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( MRS ,AMS ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( ( ( RRSe * Max( MUC,MUM ) ) / MUC ) + MUR ) ) + ( ( DS - ( RMSe / MLU ) ) - RMSe ) )", "obj1": 0.9094488188976378, "obj2": 0.043038255015203905}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_RAM_Server + CRS ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( ( CS - Max( DS,MUC ) ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.4311023622047244, "obj2": 0.35998948381770624}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + PN ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,FirstVNF_Mem ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( ( Min( MUM ,Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ),( Max( MUC,CS ) / Max( CS,RMSe ) ) )", "obj1": 0.9488188976377953, "obj2": 0.027539945372730242}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "Min( ACS ,Min( MRS ,Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) ) )", "choosing": "( ( ( MUR - CS ) / ( Min( MUC ,MUC ) + ( ( MUC * DS ) / Max( RMSe,MUM ) ) ) ) + ( DS - RMSe ) )", "obj1": 0.9724409448818898, "obj2": 0.013810744873020529}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + MUC ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.145021297409772}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( Min( RRS ,MRS ) - AMS ) ) / ( FirstVNF_Mem + CRS ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,Max( Min( Min( MUM ,MUC ) ,( MUM - RRSe ) ),( MUC + DS ) ) ) - ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / Max( RCSe,RRSe ) )", "obj1": 0.7578740157480315, "obj2": 0.11808625133778196}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Const - ( ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + MDR ) ) ) / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,Max( ( MUC * DS ),( RRSe * MUR ) ) ) ,( RRSe / CS ) ) ) - RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.3247419095190855}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7322834645669292, "obj2": 0.14001227097537405}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_CPU_Server + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.0688976377952756, "obj2": 0.628057955286567}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,MUR ) ) )", "obj1": 0.812992125984252, "obj2": 0.08928552568302509}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.36361705150105844}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( DDR,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05704099825271192}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( DDR,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.07959317340850214}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( CS * CS ) - ( MUM / ( ( ( MLU / MUR ) + MUC ) * Min( MUR ,DS ) ) ) ) ,RRSe ),( ( MUC + CS ) / Min( ( RRSe - Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2500596101787119}, {"determining": "( ( ACS - FirstVNF_Mem_Server ) + ( ( ACS - ( ( ( Const + RRS ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem * FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) / RRS ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5411680203791752}, {"determining": "( ( ( ACS - ( ( ( AMS - FirstVNF_CPU_Server ) / Max( RRS,BR ) ) + ( Max( BR,( FirstVNF_RAM + BR ) ) / Max( RRS,BR ) ) ) ) / RRS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM + Max( ( ( Max( RRSe,RCSe ) * RMSe ) + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08858267716535433, "obj2": 0.6149086903865056}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.2952755905511811, "obj2": 0.4521614319498673}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1594488188976378, "obj2": 0.5466565005801063}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( BR * Max( ( MRS / MDR ),PN ) ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( Max( MUR,MUC ) - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,MLU ) ) )", "obj1": 0.5511811023622047, "obj2": 0.261635446876477}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( ( FirstVNF_CPU - ( Min( Const ,CRS ) * Max( Max( FirstVNF_CPU_Server,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( ( ( ( RRSe + ( CS + CS ) ) * MUM ) - MLU ) * RRSe ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7030848458688007}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5905511811023622, "obj2": 0.23568228232655303}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) - ( Min( Const ,CRS ) * Max( Max( CRS,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( CS + Max( RMSe,MLU ) ) ,Max( ( ( CS + DS ) + MUR ),MUR ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5027881339526847}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.6476377952755905, "obj2": 0.19878757892396928}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( MRS,CRS ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.20766876580485108}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS * ACS ) / ( FirstVNF_Mem / Max( ( FirstVNF_Mem + Max( ACS,FirstVNF_Mem ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RMSe / MUC ) * Min( ( ( ( MUC / ( RRSe / MLU ) ) - CS ) - ( CS - CS ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7913385826771654, "obj2": 0.09920561662946685}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,( Max( RRS,ARS ) / ( AMS - Const ) ) ) + Const ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Max( BR,Min( MRS ,FirstVNF_CPU ) ) ,MRS ) ) ) )", "choosing": "Max( ( ( CS / MUC ) / Min( DS ,RMSe ) ),( MLU * Max( MUR,( MUM - ( DS * ( RCSe - DS ) ) ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.1220472440944882, "obj2": 0.5979175086924015}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_Mem + FirstVNF_Mem ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5284498040226904}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( RRSe - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.12401574803149606, "obj2": 0.5823270731408123}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6181102362204725, "obj2": 0.21588454356731626}, {"determining": "( Min( Min( Const ,CRS ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),BR ) / Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) ) ) ) )", "choosing": "Max( ( RCSe / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6520395566916519}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( ( ( Const * PN ) + AMS ) / Min( ( FirstVNF_RAM_Server / RRS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( DS / CS ) - Max( ( MUM - MUM ),( Max( RMSe,CS ) - ( Max( RRSe,DS ) + ( ( RRSe + MLU ) / ( ( MUM / Min( RRSe ,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7388552669090919}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem / ( DDR * FirstVNF_RAM_Server ) ) ) * Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( ( MUM / MUM ) - ( ( ( RMSe + DS ) - RMSe ) + Min( DS ,( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.237239048458964}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3661417322834646, "obj2": 0.3656597162236746}], "12": [{"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - Max( RRS,BR ) ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),( CRS - ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( Min( ( MLU / ( RMSe / CS ) ) ,MUR ) - MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + MUC ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.145021297409772}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_RAM_Server + CRS ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( ( CS - Max( DS,MUC ) ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.4311023622047244, "obj2": 0.35998948381770624}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( Min( RRS ,MRS ) - AMS ) ) / ( FirstVNF_Mem + CRS ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,Max( Min( Min( MUM ,MUC ) ,( MUM - RRSe ) ),( MUC + DS ) ) ) - ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / Max( RCSe,RRSe ) )", "obj1": 0.7578740157480315, "obj2": 0.11808625133778196}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.2952755905511811, "obj2": 0.4521614319498673}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6181102362204725, "obj2": 0.21588454356731626}, {"determining": "( ( Const - ( ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + MDR ) ) ) / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,Max( ( MUC * DS ),( RRSe * MUR ) ) ) ,( RRSe / CS ) ) ) - RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.3247419095190855}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.36361705150105844}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_Mem + FirstVNF_Mem ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6485660195559435}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) / Const ) ),PN ) )", "choosing": "Max( ( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.2795275590551181, "obj2": 0.46525228032254}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( BR * Max( ( MRS / MDR ),PN ) ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( Max( MUR,MUC ) - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,MLU ) ) )", "obj1": 0.5511811023622047, "obj2": 0.261635446876477}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) - DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( ( Max( ( ( RCSe - ( Min( MUM ,MUR ) / ( RCSe + RCSe ) ) ) + Min( MUR ,CS ) ),( ( ( ( RRSe * MUM ) / ( MLU + MUC ) ) / MUM ) / MUC ) ) * MUM ) - ( ( Min( RMSe ,RMSe ) - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ),( ( MUC / MUR ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.9488188976377953, "obj2": 0.027419545217963352}, {"determining": "( ( FirstVNF_CPU - ( Min( Const ,CRS ) * Max( Max( FirstVNF_CPU_Server,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( ( ( ( RRSe + ( CS + CS ) ) * MUM ) - MLU ) * RRSe ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7030848458688007}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( RRSe - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5798273491060073}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server + ( AMS + AMS ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RRSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RMSe,( ( MUM - RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7874015748031497, "obj2": 0.10327200031870587}, {"determining": "( BR * Max( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.1062992125984252, "obj2": 0.6045147938681409}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.6476377952755905, "obj2": 0.19878757892396928}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7362204724409449, "obj2": 0.132448824141771}, {"determining": "( ( ( ACS - ( ( ( AMS - FirstVNF_CPU_Server ) / Max( RRS,BR ) ) + ( Max( BR,( FirstVNF_RAM + BR ) ) / Max( RRS,BR ) ) ) ) / RRS ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM + Max( ( ( Max( RRSe,RCSe ) * RMSe ) + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08858267716535433, "obj2": 0.6149086903865056}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( ( CS * RRSe ) + MUR ) ) + Max( MUR,( RMSe + RCSe ) ) )", "obj1": 0.9212598425196851, "obj2": 0.039107337118140933}, {"determining": "( Min( DDR ,CRS ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / MUC ) / Min( ( DS * ( Max( ( MUC * ( RRSe - MUC ) ),CS ) + MUR ) ) ,MUR ) ) )", "obj1": 0.655511811023622, "obj2": 0.17914237078790288}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( CS,DS ) ) ) / ( CS + DS ) )", "obj1": 0.7322834645669292, "obj2": 0.14001227097537405}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( DDR,FirstVNF_CPU_Server ) / Max( MDR,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.07959317340850214}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_CPU / PN ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( ( MUR - CS ) / ( ( CS * RRSe ) + MUR ) ) + ( ( DS - ( RMSe / RCSe ) ) - RMSe ) )", "obj1": 0.9586614173228346, "obj2": 0.020016244692121304}, {"determining": "( ( Min( ( Max( Min( ( FirstVNF_Mem - RRS ) ,( MRS - DDR ) ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( Min( RRS ,Const ) ,Const ) ) ) - MDR ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) * ( CS - CS ) ) - ( MUR * ( DS * CS ) ) ) / ( CS + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.5424891375809325}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + ( FirstVNF_RAM - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( CS / MUC ) / Min( DS ,( ( MUR + MUM ) / CS ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( ( ( Const * PN ) + AMS ) / Min( ( FirstVNF_RAM_Server / RRS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( DS / CS ) - Max( ( MUM - MUM ),( Max( RMSe,CS ) - ( Max( RRSe,DS ) + ( ( RRSe + MLU ) / ( ( MUM / Min( RRSe ,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7388552669090919}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem / ( DDR * FirstVNF_RAM_Server ) ) ) * Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( ( MUM / MUM ) - ( ( ( RMSe + DS ) - RMSe ) + Min( DS ,( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.237239048458964}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_CPU_Server + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.0688976377952756, "obj2": 0.628057955286567}, {"determining": "( ( ( ACS - Min( ( Max( BR,BR ) / Max( RRS,BR ) ) ,( Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) / RRS ) + ( Const - Const ) )", "choosing": "( ( CS - DS ) / ( ( Max( MUC,( RCSe / Min( Min( MLU ,Min( RCSe ,MLU ) ) ,MUM ) ) ) * ( RRSe - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.5823270731408123}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3641732283464567, "obj2": 0.36723858840030454}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( AMS + FirstVNF_Mem ) * ( AMS + ( ( ( ( FirstVNF_RAM_Server / Min( Const ,MDR ) ) + FirstVNF_RAM ) - DDR ) / Max( MDR,BR ) ) ) ) )", "choosing": "( ( DS / CS ) - ( ( ( ( RRSe - MLU ) - MUR ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8307086614173228, "obj2": 0.08241026236667676}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + MDR ) / ( AMS - ACS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( CS / ( MUC + MUR ) ) + Min( ( RMSe / RCSe ) ,DS ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5511811023622047, "obj2": 0.261635446876477}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) + ( PN / DDR ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( ( RMSe + RRSe ) + CS ),Max( MUR,Max( RMSe,RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.6275783400554874}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}], "13": [{"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "Min( ( ( Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - CS ) / ( ( CS * RRSe ) + MUR ) ) + Max( MUR,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - Max( RRS,BR ) ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( BR * Max( ( MRS / MDR ),PN ) ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem / ( DDR * FirstVNF_RAM_Server ) ) ) * Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( ( MUM / MUM ) - ( ( ( RMSe + DS ) - RMSe ) + Min( DS ,( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.237239048458964}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_RAM_Server + CRS ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( ( CS - Max( DS,MUC ) ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.4311023622047244, "obj2": 0.35998948381770624}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6181102362204725, "obj2": 0.21588454356731626}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + MUC ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.145021297409772}, {"determining": "( ( Const - ( ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + MDR ) ) ) / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,Max( ( MUC * DS ),( RRSe * MUR ) ) ) ,( RRSe / CS ) ) ) - RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.3247419095190855}, {"determining": "( Min( ( AMS + Const ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( Max( DDR,AMS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / CS ) ) ) ) ,RRSe ) ) + ( MUC * Min( Max( ( Min( CS ,MUM ) - CS ),MLU ) ,Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) )", "obj1": 0.8622047244094488, "obj2": 0.0641569314939802}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RRSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( ( ( DS - DS ) - DS ),Max( ( RMSe - MUM ),Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.9035433070866141, "obj2": 0.047085872351135184}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( ( Min( Const ,CRS ) * Max( Max( ACS,( ACS / FirstVNF_CPU ) ),PN ) ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( MUR + Max( ( MUC * MUM ),CS ) ) ) ,MUR ) ) )", "obj1": 0.5570866141732284, "obj2": 0.25897752928414985}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5393700787401575, "obj2": 0.27401261083264866}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server + BR ),BR ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.36361705150105844}, {"determining": "( BR * Max( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.1062992125984252, "obj2": 0.6045147938681409}, {"determining": "( ( FirstVNF_CPU - ( Min( Const ,CRS ) * Max( Max( FirstVNF_CPU_Server,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( ( ( ( RRSe + ( CS + CS ) ) * MUM ) - MLU ) * RRSe ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7030848458688007}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( ( CS * RRSe ) + MUR ) ) + Max( MUR,( RMSe + RCSe ) ) )", "obj1": 0.9212598425196851, "obj2": 0.039107337118140933}, {"determining": "( ( ( ACS - ( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) + ( Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( RRSe - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),( CS * RRSe ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1377952755905512, "obj2": 0.573124831590555}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_CPU_Server + BR ),BR ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.1889763779527559, "obj2": 0.533535411941286}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( Max( ( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5273960375684632}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.20766876580485108}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.30708661417322836, "obj2": 0.4485577302591272}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) - DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( ( Max( ( ( RCSe - ( Min( MUM ,MUR ) / ( RCSe + RCSe ) ) ) + Min( MUR ,CS ) ),( ( ( ( RRSe * MUM ) / ( MLU + MUC ) ) / MUM ) / MUC ) ) * MUM ) - ( ( Min( RMSe ,RMSe ) - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ),( ( MUC / MUR ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.9488188976377953, "obj2": 0.027419545217963352}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + ( FirstVNF_RAM - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( CS / MUC ) / Min( DS ,( ( MUR + MUM ) / CS ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3641732283464567, "obj2": 0.36723858840030454}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.22244094488188976, "obj2": 0.5183618023718058}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( Min( RRS ,MRS ) - AMS ) ) / ( FirstVNF_Mem + CRS ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,Max( Min( Min( MUM ,MUC ) ,( MUM - RRSe ) ),( MUC + DS ) ) ) - ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / Max( RCSe,RRSe ) )", "obj1": 0.7874015748031497, "obj2": 0.10122647868383607}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( AMS + FirstVNF_Mem ) * ( AMS + ( ( ( ( FirstVNF_RAM_Server / Min( Const ,MDR ) ) + FirstVNF_RAM ) - DDR ) / Max( MDR,BR ) ) ) ) )", "choosing": "( ( DS / CS ) - ( ( ( ( RRSe - MLU ) - MUR ) * Min( ( CS - DS ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.8307086614173228, "obj2": 0.08241026236667676}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.16535433070866143, "obj2": 0.5441450301679122}, {"determining": "( ( ( ACS - ( ( Max( BR,BR ) / Max( RRS,BR ) ) + ( Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( RRS,BR ) ) ) ) / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( RRSe - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.12401574803149606, "obj2": 0.5823270731408123}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( ( ( Const * PN ) + AMS ) / Min( ( FirstVNF_RAM_Server / RRS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( DS / CS ) - Max( ( MUM - MUM ),( Max( RMSe,CS ) - ( Max( RRSe,DS ) + ( ( RRSe + MLU ) / ( ( MUM / Min( RRSe ,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7388552669090919}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / Max( RCSe,RRSe ) )", "obj1": 0.7578740157480315, "obj2": 0.11808625133778196}, {"determining": "( ( Min( ( Max( Min( ( FirstVNF_Mem - RRS ) ,( MRS - DDR ) ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( Min( RRS ,Const ) ,Const ) ) ) - MDR ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) * ( CS - CS ) ) - ( MUR * ( DS * CS ) ) ) / ( CS + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.5424891375809325}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( Max( MUR,MUC ) - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,MLU ) ) )", "obj1": 0.9704724409448819, "obj2": 0.011920636916760404}, {"determining": "( ( ( FirstVNF_Mem_Server / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.07677165354330709, "obj2": 0.6259079317538536}], "14": [{"determining": "Min( ( ( Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "Min( ( ( Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - CS ) / ( ( CS * RRSe ) + MUR ) ) + Max( MUR,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( BR * Max( ( MRS / MDR ),PN ) ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.1413923954393165}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.30708661417322836, "obj2": 0.4485577302591272}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_RAM_Server + CRS ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( ( CS - Max( DS,MUC ) ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.4311023622047244, "obj2": 0.35998948381770624}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "( ( Const - ( ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + MDR ) ) ) / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,Max( ( MUC * DS ),( RRSe * MUR ) ) ) ,( RRSe / CS ) ) ) - RRSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.3247419095190855}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe / CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,( MLU - RMSe ) ) ) - RRSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.36361705150105844}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( ( CS * RRSe ) + MUR ) ) + Max( MUR,( RMSe + RCSe ) ) )", "obj1": 0.9212598425196851, "obj2": 0.039107337118140933}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem / ( DDR * FirstVNF_RAM_Server ) ) ) * Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( ( MUM / MUM ) - ( ( ( RMSe + DS ) - RMSe ) + Min( DS ,( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.237239048458964}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) - DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( ( Max( ( ( RCSe - ( Min( MUM ,MUR ) / ( RCSe + RCSe ) ) ) + Min( MUR ,CS ) ),( ( ( ( RRSe * MUM ) / ( MLU + MUC ) ) / MUM ) / MUC ) ) * MUM ) - ( ( Min( RMSe ,RMSe ) - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ),( ( MUC / MUR ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.9488188976377953, "obj2": 0.027419545217963352}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Min( ( Max( Min( ( MRS - ( FirstVNF_RAM_Server + CRS ) ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( RRSe - CS ) ) - ( ( MUR - Max( ( MLU + ( CS / RRSe ) ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.2283464566929134, "obj2": 0.4981523172045288}, {"determining": "( ( FirstVNF_CPU - ( Min( Const ,CRS ) * Max( Max( FirstVNF_CPU_Server,( ACS / FirstVNF_CPU ) ),PN ) ) ) * ( MRS * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( ( ( ( RRSe + ( CS + CS ) ) * MUM ) - MLU ) * RRSe ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7030848458688007}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / Max( RCSe,RRSe ) )", "obj1": 0.905511811023622, "obj2": 0.0451011678953119}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / Max( RCSe,RRSe ) )", "obj1": 0.7578740157480315, "obj2": 0.11808625133778196}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3641732283464567, "obj2": 0.36723858840030454}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8740157480314961, "obj2": 0.04650375545085499}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,ARS ) + Const ) ),( ACS / FirstVNF_CPU ) ) )", "choosing": "( ( CS + DS ) / ( ( ( ( RMSe + MUM ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe - MUC ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.6196842792410494}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Min( Max( ( Min( CS ,MUM ) - CS ),MLU ) ,Max( RMSe,RCSe ) ) ) / Max( RCSe,RRSe ) )", "obj1": 0.562992125984252, "obj2": 0.25548459600929085}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + ( FirstVNF_RAM - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( CS / MUC ) / Min( DS ,( ( MUR + MUM ) / CS ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7087933643084723}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.20766876580485108}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( Max( MUR,MUC ) - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,MLU ) ) )", "obj1": 0.9704724409448819, "obj2": 0.011920636916760404}, {"determining": "( ( FirstVNF_RAM - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / Min( ( MUC / RMSe ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23878136938175318}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6181102362204725, "obj2": 0.21588454356731626}, {"determining": "( BR * Max( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.1062992125984252, "obj2": 0.6045147938681409}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( ( ( Const * PN ) + AMS ) / Min( ( FirstVNF_RAM_Server / RRS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( DS / CS ) - Max( ( MUM - MUM ),( Max( RMSe,CS ) - ( Max( RRSe,DS ) + ( ( RRSe + MLU ) / ( ( MUM / Min( RRSe ,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7388552669090919}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7775590551181102, "obj2": 0.10767644160975086}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8051181102362205, "obj2": 0.09208377881004112}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - ( FirstVNF_Mem / ( MDR - ( ( PN * MDR ) * MDR ) ) ) ) * ( ( ( ARS - AMS ) + FirstVNF_Mem ) / ( AMS - ACS ) ) ) ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( Min( DS ,Min( Min( Min( ( CS / CS ) ,Min( RCSe ,RCSe ) ) ,RMSe ) ,( MLU - RMSe ) ) ) - RRSe ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.8110236220472441, "obj2": 0.08981521704080415}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / ( Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) / Const ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - MLU ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.262477070358305}, {"determining": "( ( ( ( PN * FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU_Server - ARS ) + Const ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.8366141732283464, "obj2": 0.07853517142469763}, {"determining": "( ( Min( ( Max( Min( ( FirstVNF_Mem - RRS ) ,( MRS - DDR ) ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( Min( RRS ,Const ) ,Const ) ) ) - MDR ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) * ( CS - CS ) ) - ( MUR * ( DS * CS ) ) ) / ( CS + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.5424891375809325}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( Max( ( ( DS * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5273960375684632}], "15": [{"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( Min( RRS ,Const ) ,Const ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( BR * Max( ( MRS / MDR ),PN ) ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7487265339208364}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.1413923954393165}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.30708661417322836, "obj2": 0.4485577302591272}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.355953555701957}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( BR - ( AMS + FirstVNF_Mem ) ) ) / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( MUR * RMSe ) - Max( MLU,MUR ) ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4251968503937008, "obj2": 0.33493655472624473}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( FirstVNF_RAM - ( BR - ( AMS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * Max( MLU,MUR ) ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.045275590551181105, "obj2": 0.674757086838938}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( ( ( Const * PN ) + AMS ) / Min( ( FirstVNF_RAM_Server / RRS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( DS / CS ) - Max( ( MUM - MUM ),( Max( RMSe,CS ) - ( Max( RRSe,DS ) + ( ( RRSe + MLU ) / ( ( MUM / Min( RRSe ,RRSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7388552669090919}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8740157480314961, "obj2": 0.04650375545085499}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.12992125984251968, "obj2": 0.5852964189242984}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) - DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( ( Max( ( ( RCSe - ( Min( MUM ,MUR ) / ( RCSe + RCSe ) ) ) + Min( MUR ,CS ) ),( ( ( ( RRSe * MUM ) / ( MLU + MUC ) ) / MUM ) / MUC ) ) * MUM ) - ( ( Min( RMSe ,RMSe ) - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ),( ( MUC / MUR ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.9488188976377953, "obj2": 0.027419545217963352}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( ( Min( ( Max( Min( ( FirstVNF_Mem - RRS ) ,( MRS - DDR ) ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( Min( RRS ,Const ) ,Const ) ) ) - MDR ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) * ( CS - CS ) ) - ( MUR * ( DS * CS ) ) ) / ( CS + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.5424891375809325}, {"determining": "( ( ( Min( FirstVNF_RAM ,Const ) + ( FirstVNF_RAM - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( Min( DS ,( ( MUR + MUM ) / CS ) ) + DS ) )", "obj1": 0.6535433070866141, "obj2": 0.18432113910047734}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "Min( ( AMS - ACS ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,RRSe ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / Max( RCSe,RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.11543480352774231}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Min( Max( ( Min( CS ,MUM ) - CS ),MLU ) ,Max( RMSe,RCSe ) ) ) / Max( RCSe,RRSe ) )", "obj1": 0.562992125984252, "obj2": 0.25548459600929085}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MUR - CS ) / ( ( CS * RRSe ) + MUR ) ) + Max( MUR,( RMSe + RCSe ) ) )", "obj1": 0.9212598425196851, "obj2": 0.039107337118140933}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + Max( MUM,RMSe ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "( Min( ( AMS + AMS ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.22306699849215011}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) * DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( ACS / FirstVNF_CPU ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( Max( Const,Const ) * AMS ) ,( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ) ) / Max( RRS,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU + MUC ) ) / Max( RCSe,MUM ) )", "obj1": 0.19488188976377951, "obj2": 0.5365929060040532}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( ARS + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,( RMSe + RRSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.07874015748031496, "obj2": 0.6317332255904874}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7381889763779528, "obj2": 0.1315607511820321}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / ( Max( ( Max( ( FirstVNF_RAM + BR ),BR ) / Max( RRS,BR ) ),BR ) / Const ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - MLU ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.262477070358305}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( BR * Max( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.1062992125984252, "obj2": 0.6045147938681409}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.20766876580485108}, {"determining": "( ( FirstVNF_RAM - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / Min( ( MUC / RMSe ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5826771653543307, "obj2": 0.23878136938175318}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + AMS ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( ( ( RMSe * MUR ) - Max( MUM,RMSe ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS * ( ( Min( CS ,RMSe ) + DS ) / DS ) ) ) / ( CS + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.5940810378337549}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.23571980025439745}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6181102362204725, "obj2": 0.21588454356731626}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( Max( ( Max( DDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ,( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) * Min( ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( Max( MUR,MUC ) - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,MLU ) ) )", "obj1": 0.9704724409448819, "obj2": 0.011920636916760404}, {"determining": "( ( ( ( PN * FirstVNF_RAM_Server ) * ( ( ARS - FirstVNF_CPU_Server ) + Const ) ) - ( FirstVNF_Mem * ( MDR * ( Max( FirstVNF_CPU,FirstVNF_CPU ) / BR ) ) ) ) * ( ( AMS - ( FirstVNF_Mem / ( MDR - DDR ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( ( DS / MUM ),CS ) ) / ( MUR * ( Min( DS ,Max( RCSe,Max( ( ( DS - RCSe ) / CS ),RRSe ) ) ) - MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0017423699624803401}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "Min( ( ( Min( Min( ( ( ARS * ( AMS + FirstVNF_Mem ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ,FirstVNF_Mem ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( AMS + FirstVNF_Mem ) ,( Max( Const,Const ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( RRSe - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.968503937007874, "obj2": 0.01537629724031706}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem / ( DDR * FirstVNF_RAM_Server ) ) ) * Min( ( AMS + FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.08893640425532123}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3641732283464567, "obj2": 0.36723858840030454}], "16": [{"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( Const - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * Max( MUM,RMSe ) ),CS ) ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( Min( RRS ,Const ) ,Const ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "Max( Min( MDR ,ACS ),( FirstVNF_Mem / ( AMS - MRS ) ) )", "choosing": "( ( MUR + ( MUR - MLU ) ) / Max( RMSe,MLU ) )", "obj1": 0.25984251968503935, "obj2": 0.47489509595241225}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.355953555701957}, {"determining": "( ( FirstVNF_RAM - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / ( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / Min( ( MUC / RMSe ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) ) * Min( ( CS - ( ( ( RMSe + DS ) - ( DS * MUC ) ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.08852883430995927}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7381889763779528, "obj2": 0.1315607511820321}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) - DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5050033219260363}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1968503937007874, "obj2": 0.515271608579035}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( BR - ( AMS + FirstVNF_Mem ) ) ) / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( MUR * RMSe ) - Max( MLU,MUR ) ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4251968503937008, "obj2": 0.33493655472624473}, {"determining": "Max( ( ( ( MDR + FirstVNF_Mem_Server ) * ACS ) + CRS ),( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) )", "choosing": "( ( Max( RRSe,( DS * MUC ) ) * RCSe ) / ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6671541598342673}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.1413923954393165}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.30708661417322836, "obj2": 0.4485577302591272}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,( AMS + Min( ( AMS - ACS ) ,Min( MRS ,FirstVNF_Mem ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe / RMSe ) * Min( ( CS - ( RRSe + RMSe ) ) ,RRSe ) ) + Max( MUR,RRSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( ( Min( ( Max( Min( ( FirstVNF_Mem - RRS ) ,( MRS - DDR ) ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( Min( RRS ,Const ) ,Const ) ) ) - MDR ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) * ( CS - CS ) ) - ( MUR * ( DS * CS ) ) ) / ( CS + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.5424891375809325}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) * Min( Min( RRSe ,Max( ( ( RMSe * MLU ) * MLU ),RCSe ) ) ,MUR ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4963377592479967}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) - DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + AMS ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ,( Max( Const,Const ) * AMS ) ) ) / Max( RRS,BR ) )", "choosing": "Max( ( ( Max( ( ( RCSe - ( Min( MUM ,MUR ) / ( RCSe + RCSe ) ) ) + Min( MUR ,CS ) ),( ( ( ( RRSe * MUM ) / ( MLU + MUC ) ) / MUM ) / MUC ) ) * MUM ) - ( ( Min( RMSe ,RMSe ) - Max( ( MLU + CS ),Max( MUR,( RMSe + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ),( ( MUC / MUR ) / Min( Min( RRSe ,Max( ( MLU * RCSe ),RCSe ) ) ,MUR ) ) )", "obj1": 0.9488188976377953, "obj2": 0.027419545217963352}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( ( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ) / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8405511811023622, "obj2": 0.07038088514879981}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3641732283464567, "obj2": 0.36723858840030454}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + Max( MUM,RMSe ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.781496062992126, "obj2": 0.10350488894479071}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) * DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( ACS / FirstVNF_CPU ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( Max( Const,Const ) * AMS ) ,( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ) ) / Max( RRS,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU + MUC ) ) / Max( RCSe,MUM ) )", "obj1": 0.19488188976377951, "obj2": 0.5365929060040532}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.6000998430999951}, {"determining": "( BR * Max( Max( ( FirstVNF_RAM_Server + ARS ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * Min( Max( Max( ( CS / RMSe ),( RRSe + MUR ) ),RCSe ) ,( Min( RCSe ,DS ) - Max( Min( MUM ,RMSe ),MLU ) ) ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( MLU + DS ) ) / ( CS + DS ) )", "obj1": 0.1377952755905512, "obj2": 0.5792643640563085}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( ( Max( BR,( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) / Max( RRS,BR ) ) + AMS ) ) * ( ( Max( MRS,ARS ) - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( DS / MUM ) / Max( ( RMSe * Max( Min( RCSe ,MUM ),MUM ) ),Max( ( RMSe + RCSe ),Min( RMSe ,Max( MLU,MUM ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06776316684889912}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( BR - ( AMS + FirstVNF_Mem_Server ) ) ) / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) - ( ( ( MUR * RMSe ) - Max( MLU,MUR ) ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4251968503937008, "obj2": 0.33493655472624473}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( FirstVNF_Mem_Server / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + ( ( MUC / CS ) / Min( MUM ,RCSe ) ) ) ) ,MUR ) ) )", "obj1": 0.5748031496062992, "obj2": 0.24861546914342805}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.6134388953260702}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.1413923954393165}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17385454873282308}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.20766876580485108}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.30708661417322836, "obj2": 0.4485577302591272}, {"determining": "( ( ( Min( FirstVNF_RAM ,Const ) + ( FirstVNF_RAM - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( Min( DS ,( ( MUR + MUM ) / CS ) ) + DS ) )", "obj1": 0.6515748031496063, "obj2": 0.1865816248679379}, {"determining": "( BR * Max( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( BR - ( AMS + FirstVNF_Mem ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * MLU ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.1141732283464567, "obj2": 0.5903585779488321}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( Max( FirstVNF_RAM,FirstVNF_CPU ) - MRS ) ) * ( Const - ( FirstVNF_Mem / ( MDR * DDR ) ) ) )", "choosing": "( ( Max( ( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) / MUR ),CS ) * RCSe ) / ( RMSe - MUM ) )", "obj1": 0.8818897637795275, "obj2": 0.04157105611942711}, {"determining": "( ( ( ( PN * FirstVNF_RAM_Server ) * ( ( ARS - FirstVNF_CPU_Server ) + Const ) ) - ( FirstVNF_Mem * ( MDR * ( Max( FirstVNF_CPU,FirstVNF_CPU ) / BR ) ) ) ) * ( ( AMS - ( FirstVNF_Mem / ( MDR - DDR ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( ( DS / MUM ),CS ) ) / ( MUR * ( Min( DS ,Max( RCSe,Max( ( ( DS - RCSe ) / CS ),RRSe ) ) ) - MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0017423699624803401}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.9507874015748031, "obj2": 0.01394220017139053}, {"determining": "Min( ( AMS - ACS ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUR - Max( RMSe,Max( MUR,RRSe ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / Max( RCSe,RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.11543480352774231}, {"determining": "( ( ( FirstVNF_RAM - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( Min( DS ,RCSe ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + Max( MUM,RMSe ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.1073340896604769}, {"determining": "( Min( ( AMS + MRS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( ( AMS - ACS ) + FirstVNF_Mem ) ,( Max( ( MRS - PN ),FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( MLU / ( ( CS * RRSe ) + ( RCSe - RCSe ) ) ) + Max( MUR,( RMSe + RCSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.04103864731393196}], "17": [{"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + Min( ACS ,FirstVNF_Mem_Server ) ) ) / ( Max( FirstVNF_RAM,FirstVNF_CPU ) - MRS ) ) * ( Const - ( FirstVNF_Mem / ( MDR * DDR ) ) ) )", "choosing": "( ( Max( ( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) / MUR ),CS ) * RCSe ) / ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( Const - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * Max( MUM,RMSe ) ),CS ) ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * MLU ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.2283464566929134, "obj2": 0.48898563664725314}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.355953555701957}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1968503937007874, "obj2": 0.515271608579035}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.7007874015748031, "obj2": 0.16428832980782868}, {"determining": "( ( FirstVNF_RAM - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / ( ( ( FirstVNF_RAM + Const ) * ( FirstVNF_CPU_Server * ARS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( DDR / PN ) - ARS ) ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6358267716535433, "obj2": 0.20361747432981742}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( PN,( MRS + ( FirstVNF_CPU_Server - ACS ) ) ) ) - ( ACS * ACS ) ) * ( ( AMS * ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Min( RMSe ,Min( MUM ,RCSe ) ) ) ) ,MUR ) / ( MUC / MUR ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17322390340599886}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( BR - ( AMS + FirstVNF_Mem ) ) ) / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( MUR * RMSe ) - Max( MLU,MUR ) ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4251968503937008, "obj2": 0.33493655472624473}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,( AMS + Min( ( AMS - ACS ) ,Min( MRS ,FirstVNF_Mem ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe / RMSe ) * Min( ( CS - ( RRSe + RMSe ) ) ,RRSe ) ) + Max( MUR,RRSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7381889763779528, "obj2": 0.1315607511820321}, {"determining": "( Min( ( AMS + MRS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3641732283464567, "obj2": 0.36723858840030454}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + ( MRS - FirstVNF_CPU ) ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( RCSe + ( RCSe / ( CS * RMSe ) ) ),( ( MUC / CS ) / ( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) / MUR ) ) )", "obj1": 0.27755905511811024, "obj2": 0.4686796399255871}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.12992125984251968, "obj2": 0.5779130501738226}, {"determining": "( ( ( ( BR + ( ( BR + ( AMS + ARS ) ) * DDR ) ) / Min( ( ( Const / ( ACS - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ,( Max( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( ACS / FirstVNF_CPU ) ),( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) ) * Min( ( Max( Const,Const ) * AMS ) ,( FirstVNF_RAM - Min( ( FirstVNF_Mem + AMS ) ,CRS ) ) ) ) / Max( RRS,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU + MUC ) ) / Max( RCSe,MUM ) )", "obj1": 0.19488188976377951, "obj2": 0.5365929060040532}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ),CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.8818897637795275, "obj2": 0.04157105611942711}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( FirstVNF_Mem_Server / Max( ( FirstVNF_CPU_Server / Min( ACS ,FirstVNF_RAM_Server ) ),BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( ( RRSe - MUM ) ,( CS * RRSe ) ) + ( ( MUC / CS ) / Min( ( MUM / MLU ) ,MUM ) ) ) ) ,MUR ) ) )", "obj1": 0.5767716535433071, "obj2": 0.2473368905405556}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6650504077974142}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.01249987715924257}, {"determining": "( Min( ( AMS + MRS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( BR - ( AMS + FirstVNF_Mem_Server ) ) ) / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( Max( Min( Min( RMSe ,RCSe ) ,( CS * RRSe ) ),( RRSe * Max( RCSe,RRSe ) ) ) - ( ( ( MUR * RMSe ) - Max( MLU,MUR ) ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4251968503937008, "obj2": 0.33493655472624473}, {"determining": "Min( ( ( ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) - ACS ) / ( MRS + ( FirstVNF_RAM - Min( ( ( AMS - ACS ) + FirstVNF_Mem ) ,( Max( ( MRS - PN ),FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( MLU / ( ( CS * RRSe ) + ( RCSe - RCSe ) ) ) + Max( MUR,( RMSe + RCSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.04103864731393196}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + Max( MUM,RMSe ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( PN - FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_CPU * Max( ACS,FirstVNF_RAM ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / DS ) - ( MUM - ( ( Max( MLU,CS ) / ( RMSe * RMSe ) ) / DS ) ) )", "obj1": 0.8169291338582677, "obj2": 0.08505813123166131}, {"determining": "( ( Const - ( ( Const - ( ( ARS - FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.9291338582677166, "obj2": 0.022298574548371277}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.2933070866141732, "obj2": 0.4518547342647917}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( ( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ) / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8405511811023622, "obj2": 0.07038088514879981}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( ( ( PN * FirstVNF_RAM_Server ) * ( ( ARS - FirstVNF_CPU_Server ) + Const ) ) - ( FirstVNF_Mem * ( MDR * ( Max( FirstVNF_CPU,FirstVNF_CPU ) / BR ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,RCSe ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "( ( Const - ( FirstVNF_Mem / ( ( ( MRS - Max( RRS,Max( MDR,BR ) ) ) / ( PN / CRS ) ) - DDR ) ) ) * Max( ( AMS - ( ( ( ACS + ( MRS + ( ACS / FirstVNF_CPU_Server ) ) ) / PN ) - ARS ) ),( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) - MUC ) * Min( RCSe ,MUC ) ) / ( ( MLU + Max( ( RRSe / MLU ),Max( Min( Max( Min( RCSe ,CS ),MUR ) ,Min( DS ,RMSe ) ),DS ) ) ) / MUR ) )", "obj1": 0.8759842519685039, "obj2": 0.06028674273699483}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * MLU ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.11220472440944881, "obj2": 0.5851442379852057}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7145669291338582, "obj2": 0.136608421895408}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.16535433070866143, "obj2": 0.5441450301679122}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7066929133858267, "obj2": 0.1413923954393165}, {"determining": "( ( Min( ( Max( Min( ( FirstVNF_Mem - RRS ) ,( MRS - DDR ) ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( Min( RRS ,Const ) ,Const ) ) ) - MDR ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) * ( CS - CS ) ) - ( MUR * ( DS * CS ) ) ) / ( CS + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.5424891375809325}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.6437007874015748, "obj2": 0.18894390028760144}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * DDR ) ) * ( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + MUC ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9251968503937008, "obj2": 0.03328658119535968}, {"determining": "( ( ( Min( FirstVNF_RAM ,Const ) + ( FirstVNF_RAM - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RMSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( Min( DS ,( ( MUR + MUM ) / CS ) ) + DS ) )", "obj1": 0.6515748031496063, "obj2": 0.1865816248679379}, {"determining": "Min( Max( RRS,( DDR / MRS ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Min( ( MUR * RCSe ) ,MUR ) ) / ( RCSe / RRSe ) )", "obj1": 0.7933070866141733, "obj2": 0.0978441865089427}], "18": [{"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( ( ( PN * FirstVNF_RAM_Server ) * ( ( ARS - FirstVNF_CPU_Server ) + Const ) ) - ( FirstVNF_Mem * ( MDR * ( Max( FirstVNF_CPU,FirstVNF_CPU ) / BR ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + Min( ACS ,FirstVNF_Mem_Server ) ) ) / ( Max( FirstVNF_RAM,FirstVNF_CPU ) - MRS ) ) * ( Const - ( FirstVNF_Mem / ( MDR * DDR ) ) ) )", "choosing": "( ( Max( ( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) / MUR ),CS ) * RCSe ) / ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - RRSe ) ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( FirstVNF_RAM_Server - ( BR - AMS ) ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( ( CRS / MDR ) + PN ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe * ( CS - RRSe ) ) / Min( ( CS / MUC ) ,DS ) )", "obj1": 0.421259842519685, "obj2": 0.3282157838588729}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.355953555701957}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( BR * Max( Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.6000998430999951}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.01249987715924257}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.10746418296646647}, {"determining": "( ( Const - ( AMS * FirstVNF_Mem_Server ) ) * ( ( AMS - ( ( DDR + PN ) - ARS ) ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( Max( ( MUM + MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( ( ( CS + Max( ( RRSe + ( MUR - MUC ) ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ) / CS ) / Min( Min( RRSe ,( ( ( ( MUM + MUM ) / Max( MUC,RCSe ) ) / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.797244094488189, "obj2": 0.08148313412635737}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.281496062992126, "obj2": 0.44869974280579944}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.07086614173228346, "obj2": 0.627231248566025}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.7007874015748031, "obj2": 0.16428832980782868}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.3051181102362205, "obj2": 0.4427173438503553}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3641732283464567, "obj2": 0.36723858840030454}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( ( ( Min( FirstVNF_RAM ,Const ) + ( ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RCSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( Min( DS ,( ( MUR + MUM ) / CS ) ) + DS ) )", "obj1": 0.6338582677165354, "obj2": 0.21243450981069723}, {"determining": "( Min( ( AMS + MRS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( ( Const - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.9173228346456693, "obj2": 0.02788776404504291}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( FirstVNF_Mem_Server / Max( ( FirstVNF_CPU_Server / Min( ACS ,FirstVNF_RAM_Server ) ),BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( ( RRSe - MUM ) ,( CS * RRSe ) ) + ( ( MUC / CS ) / Min( ( MUM / MLU ) ,MUM ) ) ) ) ,MUR ) ) )", "obj1": 0.5767716535433071, "obj2": 0.2473368905405556}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( MUR,RRSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.25984251968503935, "obj2": 0.468062756320939}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17322390340599886}, {"determining": "( Min( ( Min( Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + ( MRS - FirstVNF_CPU ) ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6601693904186217}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ),CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.8877952755905512, "obj2": 0.03934798995881862}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7381889763779528, "obj2": 0.1315607511820321}, {"determining": "( ( ( ( Const - ( PN / ( Max( AMS,BR ) - Max( FirstVNF_RAM,ACS ) ) ) ) - DDR ) - Const ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( ( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUR ,RCSe ) ,RRSe ) ) ,RRSe ) ,( DS - Min( ( RCSe - ( ( CS * MUR ) + RCSe ) ) ,MUC ) ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.021582638907152313}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / Min( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ),( ( ( Const - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + Max( CS,RMSe ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "Min( Max( RRS,( DDR / MRS ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - Min( ( MUR * RCSe ) ,MUR ) ) / ( RCSe / RRSe ) )", "obj1": 0.7933070866141733, "obj2": 0.0978441865089427}, {"determining": "( Min( ( AMS + MRS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( ( Const - ( FirstVNF_Mem / ( ( ( MRS - Max( RRS,Max( MDR,BR ) ) ) / ( PN / CRS ) ) - DDR ) ) ) * Max( ( AMS - ( ( ( ACS + ( MRS + ( ACS / FirstVNF_CPU_Server ) ) ) / PN ) - ARS ) ),( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) - MUC ) * Min( RCSe ,MUC ) ) / ( ( MLU + Max( ( RRSe / MLU ),Max( Min( Max( Min( RCSe ,CS ),MUR ) ,Min( DS ,RMSe ) ),DS ) ) ) / MUR ) )", "obj1": 0.8759842519685039, "obj2": 0.06028674273699483}, {"determining": "( ( Const - ( FirstVNF_Mem / ( ( ( MRS - Max( RRS,Max( MDR,BR ) ) ) / ( PN / CRS ) ) - DDR ) ) ) * Max( ( AMS - ( ( ( ACS + ( MRS + ( ACS / FirstVNF_CPU_Server ) ) ) / PN ) - ARS ) ),( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ) - MUC ) * Min( RCSe ,MUC ) ) / ( ( MLU + Max( ( RRSe / MLU ),Max( Min( Max( Min( RCSe ,CS ),MUR ) ,Min( DS ,RMSe ) ),DS ) ) ) / MUR ) )", "obj1": 0.8385826771653543, "obj2": 0.07135616709621781}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ),CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.8818897637795275, "obj2": 0.04157105611942711}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7381889763779528, "obj2": 0.1315607511820321}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( ( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM,CRS ) - ( RRS + FirstVNF_RAM ) ) ) * AMS ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( Max( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ),MUC ) * RCSe ) / ( MUR * ( MLU + Max( ( ( Min( DS ,RMSe ) * RMSe ) * RMSe ),Max( Min( Max( Min( RCSe ,CS ),MUR ) ,Min( DS ,RMSe ) ),DS ) ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06532685778497058}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.19291338582677164, "obj2": 0.535792758795241}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7047244094488189, "obj2": 0.1430210696152097}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( FirstVNF_Mem_Server / Max( RRS,BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + ( ( MUC / CS ) / Min( MUM ,RCSe ) ) ) ) ,MUR ) ) )", "obj1": 0.5767716535433071, "obj2": 0.2473368905405556}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( ( ( PN * FirstVNF_RAM_Server ) * ( ( ARS - FirstVNF_CPU_Server ) + Const ) ) - ( FirstVNF_Mem * ( MDR * ( Max( FirstVNF_CPU,FirstVNF_CPU ) / BR ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,RCSe ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.12992125984251968, "obj2": 0.5779130501738226}], "19": [{"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( ( AMS * CRS ),( FirstVNF_CPU / CRS ) ) ) ) ) - ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( Max( MUR,( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( ( ( PN * FirstVNF_RAM_Server ) * ( ( ARS - FirstVNF_CPU_Server ) + Const ) ) - ( FirstVNF_Mem * ( MDR * ( Max( FirstVNF_CPU,FirstVNF_CPU ) / BR ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_Mem ) - ( AMS + MRS ) ) * ( ( ( FirstVNF_Mem * RRS ) - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( ( MUR + ( ( MUM + RRSe ) - ( MUR * MUM ) ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17322390340599886}, {"determining": "( ( ( Min( FirstVNF_RAM ,Const ) + ( ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RCSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( Min( DS ,( ( MUR + MUM ) / CS ) ) + DS ) )", "obj1": 0.6338582677165354, "obj2": 0.21243450981069723}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( ( FirstVNF_CPU / MRS ) * ( ( AMS - FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUC / CS ) / Min( ( DS * ( ( ( MUC + CS ) / Min( MUM ,MLU ) ) + Min( Min( RRSe ,MUM ) ,( MLU + MLU ) ) ) ) ,MUR ) ),( ( ( MUM * RRSe ) * ( RMSe + ( MLU + Max( RCSe,MLU ) ) ) ) / MLU ) )", "obj1": 0.5767716535433071, "obj2": 0.24723840045607998}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.12992125984251968, "obj2": 0.5779130501738226}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( CRS + ( ( ( CRS / ( PN + FirstVNF_Mem ) ) - ( MDR / FirstVNF_CPU ) ) / MDR ) ) / ( AMS - ACS ) ) )", "choosing": "Max( ( MUC - ( ( MUM + MUM ) * DS ) ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( MUM * RRSe ) ) - Max( ( MUC * DS ),CS ) ) ) ,Max( CS,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.16363648760745256}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.41929133858267714, "obj2": 0.3500185556421747}, {"determining": "( ( FirstVNF_RAM_Server - ( BR - AMS ) ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( ( CRS / MDR ) + PN ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe * ( CS - RRSe ) ) / Min( ( CS / MUC ) ,DS ) )", "obj1": 0.421259842519685, "obj2": 0.3282157838588729}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.10740172257233246}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8248031496062992, "obj2": 0.06685593413833907}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Min( ( ( Min( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( DS + RCSe ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7440944881889764, "obj2": 0.12950696627167713}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( MUR,RRSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( BR * Max( Max( ( ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( CRS ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,Max( RCSe,Min( MUM ,MLU ) ) ) - ( RMSe - ( ( RRSe * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.5339404606168053}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( ( ( MRS + ( ACS / FirstVNF_CPU_Server ) ) * AMS ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( Max( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ),MUC ) * RCSe ) / ( MUR * ( MLU + Max( CS,Max( Min( Max( Min( RCSe ,CS ),MUR ) ,Min( DS ,RMSe ) ),DS ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06034176465420671}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( BR + ACS ) * FirstVNF_RAM_Server ) ) ) * Max( ( Max( CRS,Max( ( CRS * FirstVNF_CPU ),AMS ) ) + FirstVNF_Mem ),( AMS + MRS ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( RMSe / MUR ) ,Max( RRSe,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( ( Const - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.9173228346456693, "obj2": 0.02788776404504291}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.11023622047244094, "obj2": 0.5945405318046217}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - ( RMSe * Max( Max( DS,MUM ),CS ) ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.17716535433070865, "obj2": 0.5465536174077131}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem * ( MDR * ( Max( FirstVNF_CPU,FirstVNF_CPU ) / BR ) ) ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( Min( Min( Min( Min( RCSe ,RCSe ) ,RCSe ) ,RMSe ) ,DS ),( ( MUC / CS ) / Min( Min( RRSe ,( ( MUC / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.9606299212598425, "obj2": 0.010806907657219375}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Min( FirstVNF_RAM ,ARS ),BR ) )", "choosing": "Max( ( ( ( ( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) - ( MUM - MUM ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( ( MUM - RMSe ) ,( CS * MLU ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.051312469809699696}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.355953555701957}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( Max( ( MUM + MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( ( ( CS + Max( ( RRSe + ( MUR - MUC ) ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ) / CS ) / Min( Min( RRSe ,( ( ( ( MUM + MUM ) / Max( MUC,RCSe ) ) / RMSe ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07815597295495089}, {"determining": "( ( FirstVNF_CPU_Server * ( ( AMS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) * ( ( AMS - Min( ( DDR / PN ) ,ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MUR - Min( CS ,( RMSe / RCSe ) ) ),CS ) * RCSe ) / Min( MUR ,( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.8917322834645669, "obj2": 0.0367711931876165}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_CPU ) ) - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + PN ) * ( ( PN + ( CRS / MDR ) ) - ARS ) ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( MUM / RCSe ) ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.0610236220472441, "obj2": 0.6597343078874754}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.2677165354330709, "obj2": 0.4618289618447255}, {"determining": "( Min( ( Min( Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + ( MRS - FirstVNF_CPU ) ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( BR * Max( Max( ( AMS - ACS ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.6138155186981382}, {"determining": "( Min( ( AMS + MRS ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( Const - ( PN / ( Max( AMS,BR ) - Max( FirstVNF_RAM,ACS ) ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / RRSe ) - Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.27194889046596166}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) + AMS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),DDR ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + Max( ( MUC * RMSe ),RCSe ) ),Max( ( DS + RCSe ),MLU ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.281496062992126, "obj2": 0.44869974280579944}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ),CS ) * RCSe ) / ( MUR * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.8818897637795275, "obj2": 0.04157105611942711}, {"determining": "( ( Const - ( ( ( ( RRS - CRS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem + AMS ) ) ) - Const ) * DDR ) ) * ( Max( CRS,( FirstVNF_Mem_Server / Const ) ) / PN ) )", "choosing": "Max( ( ( Max( ( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ),( MUM - MUM ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( ( ( MUC + MUR ) * DS ) * MUR ) ) ) ) / MLU ),( ( MUC / CS ) / Min( Min( MUM ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.9311023622047244, "obj2": 0.021582638907152313}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( ( RRS - DDR ) / Const ) ) ,Min( MRS ,Max( ( FirstVNF_Mem + FirstVNF_Mem ),( CRS - DDR ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / AMS ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),( Min( MUM ,MUC ) * ( CS - CS ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + ( ( RCSe * RCSe ) * ( DS / ( Max( ( ( MUR - CS ) / ( MUC * RRSe ) ),( ( MLU / MUM ) - RCSe ) ) + RCSe ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5024274805762314}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.0984251968503937, "obj2": 0.6045853992835187}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_Mem * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( MUM ,RCSe ) * ( CS - CS ) ) ) * ( CS - CS ) ) - ( ( MUM - Max( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9724409448818898, "obj2": 0.008936647331187262}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + ( Max( FirstVNF_Mem_Server,Const ) - Min( FirstVNF_CPU ,MRS ) ) ) ,( AMS + MRS ) ) * ( ( AMS - RRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( Max( MUM,RMSe ) - ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) ) ) / ( RCSe * ( CS / ( Min( Min( RCSe ,RCSe ) ,( RMSe / ( ( RMSe - RRSe ) - MLU ) ) ) - MUR ) ) ) )", "obj1": 0.7047244094488189, "obj2": 0.1430210696152097}], "20": [{"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( FirstVNF_RAM_Server - ( BR - AMS ) ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + PN ) * ( ( ( CRS / FirstVNF_RAM_Server ) + PN ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe * ( CS - RRSe ) ) / Min( ( CS / Max( RCSe,MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( ( AMS * CRS ),( FirstVNF_CPU / CRS ) ) ) ) ) - ( MDR - ( CRS / FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( Max( MUR,( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_Mem ) - ( AMS + MRS ) ) * ( ( ( FirstVNF_Mem * RRS ) - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( ( MUR + ( ( MUM + RRSe ) - ( MUR * MUM ) ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.1071124331139349}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.355953555701957}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( Const - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.7362204724409449, "obj2": 0.12163494455894626}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) + AMS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),DDR ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + Max( ( MUC * RMSe ),RCSe ) ),Max( ( DS + RCSe ),MLU ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.281496062992126, "obj2": 0.44869974280579944}, {"determining": "( ( FirstVNF_CPU / MRS ) * ( ( AMS - FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUC / CS ) / Min( ( DS * ( ( ( MUC + CS ) / Min( MUM ,MLU ) ) + Min( Min( RRSe ,MUM ) ,( MLU + MLU ) ) ) ) ,MUR ) ),( ( ( MUM * RRSe ) * ( RMSe + ( MLU + Max( RCSe,MLU ) ) ) ) / MLU ) )", "obj1": 0.5767716535433071, "obj2": 0.24723840045607998}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.41929133858267714, "obj2": 0.3500185556421747}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( ( AMS + MRS ) ,CRS ) * ( ( AMS - ACS ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,( MUR - MUC ) ) ) ) ) ,MUR ) ) )", "obj1": 0.6377952755905512, "obj2": 0.19994092252386647}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( BR * Max( Max( ( ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( CRS ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,Max( RCSe,Min( MUM ,MLU ) ) ) - ( RMSe - ( ( RRSe * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.5339404606168053}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( CRS + ( ( ( CRS / ( PN + FirstVNF_Mem ) ) - ( MDR / FirstVNF_CPU ) ) / MDR ) ) / ( AMS - ACS ) ) )", "choosing": "Max( ( MUC - ( ( MUM + MUM ) * DS ) ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( MUM * RRSe ) ) - Max( ( MUC * DS ),CS ) ) ) ,Max( CS,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.16363648760745256}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( Min( ( Min( Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + ( MRS - FirstVNF_CPU ) ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( ( Const - ( FirstVNF_Mem / ( PN / ( Max( AMS,BR ) - Max( FirstVNF_RAM,ACS ) ) ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7165354330708661, "obj2": 0.13617336606417826}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( Min( ( ( Min( AMS ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * CS ) ,MUR ) ) )", "obj1": 0.65748031496063, "obj2": 0.17856857078114574}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.265748031496063, "obj2": 0.45780673526847104}, {"determining": "( ( ( FirstVNF_Mem / ( MDR - DDR ) ) - Const ) * ( ( AMS - ( ( DDR / PN ) - ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) / ( Min( DDR ,FirstVNF_Mem_Server ) + AMS ) ) )", "choosing": "Max( ( ( Max( ( MUM + MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( ( ( CS + Max( ( RRSe + ( MUR - MUC ) ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - Max( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ),( ( RCSe / CS ) + MLU ) ) ) ) / CS ) / Min( Min( RRSe ,( ( ( ( MUM + MUM ) / Max( MUC,RCSe ) ) / RMSe ) * Min( ( ( MLU * RRSe ) + ( RRSe + MUR ) ) ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07815597295495089}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( MUR,RRSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( ( FirstVNF_RAM_Server - ( BR - AMS ) ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( ( CRS / MDR ) + PN ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe * ( CS - RRSe ) ) / Min( ( CS / MUC ) ,DS ) )", "obj1": 0.421259842519685, "obj2": 0.3282157838588729}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - ( RMSe * Max( Max( DS,MUM ),CS ) ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1732283464566929, "obj2": 0.5440448620455723}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( Min( ( BR + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( MUR ,( DS * ( Max( MUR,( ( MUM * MUM ) / RRSe ) ) + RCSe ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17228794525209468}, {"determining": "( BR * Max( Max( ( AMS - ACS ),( Min( FirstVNF_RAM ,Const ) + Const ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( Max( MDR,RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.6138155186981382}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( Const - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( Max( AMS,BR ) - Max( FirstVNF_RAM,ACS ) ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / RRSe ) - ( MUR * RMSe ) )", "obj1": 0.4409448818897638, "obj2": 0.32776210008311507}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.0984251968503937, "obj2": 0.6045853992835187}, {"determining": "( Const * Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * ( CRS - AMS ) ) ) ,FirstVNF_Mem ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) + Const ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),( Min( MUM ,RCSe ) * ( CS - CS ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.1062992125984252, "obj2": 0.593604271900988}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - ( RMSe * Max( Max( DS,MUM ),CS ) ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.14763779527559054, "obj2": 0.5724164774249955}, {"determining": "( ( ( Min( FirstVNF_RAM ,Const ) + ( ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RCSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( Min( DS ,( ( MUR + MUM ) / CS ) ) + DS ) )", "obj1": 0.6338582677165354, "obj2": 0.21243450981069723}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + CS ) / ( CS + DS ) )", "obj1": 0.07480314960629922, "obj2": 0.6239284040872252}, {"determining": "( ARS * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),FirstVNF_RAM ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( ( MUC + CS ) - ( RMSe - ( ( RMSe * DS ) - Max( MUR,CS ) ) ) ) - ( RMSe * Max( Max( MUM,DS ),CS ) ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1279527559055118, "obj2": 0.5904851015595901}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.12992125984251968, "obj2": 0.5779130501738226}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_CPU ) ) - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + PN ) * ( ( PN + ( CRS / MDR ) ) - ARS ) ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( MUM / RCSe ) ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.0610236220472441, "obj2": 0.6597343078874754}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_Mem * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),( Min( MUM ,RCSe ) * ( CS - CS ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.952755905511811, "obj2": 0.021199487071746674}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( ( ( MRS + ( ACS / FirstVNF_CPU_Server ) ) * AMS ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( Max( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ),MUC ) * RCSe ) / ( MUR * ( MLU + Max( CS,Max( Min( Max( Min( RCSe ,CS ),MUR ) ,Min( DS ,RMSe ) ),DS ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06034176465420671}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( BR + ACS ) * FirstVNF_RAM_Server ) ) ) * Max( ( Max( CRS,Max( ( CRS * FirstVNF_CPU ),AMS ) ) + FirstVNF_Mem ),( AMS + MRS ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( RMSe / MUR ) ,Max( RRSe,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Min( ( ( Min( ( AMS + MRS ) ,( ARS + FirstVNF_Mem ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( Min( FirstVNF_Mem ,MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * ( CS - CS ) ) - ( ( Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) - MUM ) - Max( Max( MUC,RRSe ),MLU ) ) ) / ( CS + DS ) )", "obj1": 0.7047244094488189, "obj2": 0.1430210696152097}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( ( RRS - DDR ) / Const ) ) ,Min( MRS ,Max( ( FirstVNF_Mem + FirstVNF_Mem ),( CRS - DDR ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / AMS ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),( Min( MUM ,MUC ) * ( CS - CS ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + ( ( RCSe * RCSe ) * ( DS / ( Max( ( ( MUR - CS ) / ( MUC * RRSe ) ),( ( MLU / MUM ) - RCSe ) ) + RCSe ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5024274805762314}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( ( PN - MDR ) * ( ( FirstVNF_CPU_Server + Min( Const ,AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - Max( CS,( ( RRSe * ( MUR - RMSe ) ) - RMSe ) ) ) ) - ( ( Max( ( MLU + CS ),( Max( ( MUM - MUM ),( RRSe + RMSe ) ) * ( DS + RCSe ) ) ) - Min( ( CS / MUC ) ,Max( RCSe,CS ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8248031496062992, "obj2": 0.06685593413833907}], "21": [{"determining": "( ( ( FirstVNF_RAM - AMS ) - FirstVNF_RAM_Server ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * Min( ( DDR / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ARS ,Max( MDR,ACS ) ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( MLU + RRSe ) - ( Max( Min( ( MUR * Max( ( RRSe + MLU ),MUM ) ) ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( FirstVNF_RAM_Server - ( BR - AMS ) ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + PN ) * ( ( ( CRS / FirstVNF_RAM_Server ) + PN ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe * ( CS - RRSe ) ) / Min( ( CS / Max( RCSe,MUC ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS * ( MDR + FirstVNF_Mem_Server ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( Max( ( ( MUR - MUC ) + RRSe ),MUM ) / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( ( AMS - ( ( DDR / Max( DDR,( FirstVNF_CPU * ( ACS - DDR ) ) ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) * ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - MUM ) - MLU ) ),Min( ( DS * RRSe ) ,( ( Max( MUR,CS ) / RMSe ) / DS ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.028238695185468038}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( ( ( MRS + ( ACS / FirstVNF_CPU_Server ) ) * AMS ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( Max( ( MUR - ( RRSe - Min( DS ,Max( MUC,CS ) ) ) ),MUC ) * RCSe ) / ( MUR * ( MLU + Max( CS,Max( Min( Max( Min( RCSe ,CS ),MUR ) ,Min( DS ,RMSe ) ),DS ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.06034176465420671}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) + AMS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),DDR ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + Max( ( MUC * RMSe ),RCSe ) ),Max( ( DS + RCSe ),MLU ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.281496062992126, "obj2": 0.44869974280579944}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.355953555701957}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( CRS + ( ( ( CRS / ( PN + FirstVNF_Mem ) ) - ( MDR / FirstVNF_CPU ) ) / MDR ) ) / ( AMS - ACS ) ) )", "choosing": "Max( ( MUC - ( ( MUM + MUM ) * DS ) ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( MUM * RRSe ) ) - Max( ( MUC * DS ),CS ) ) ) ,Max( CS,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.16363648760745256}, {"determining": "( ( FirstVNF_CPU / MRS ) * ( ( AMS - FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUC / CS ) / Min( ( DS * ( ( ( MUC + CS ) / Min( MUM ,MLU ) ) + Min( Min( RRSe ,MUM ) ,( MLU + MLU ) ) ) ) ,MUR ) ),( ( ( MUM * RRSe ) * ( RMSe + ( MLU + Max( RCSe,MLU ) ) ) ) / MLU ) )", "obj1": 0.5767716535433071, "obj2": 0.24723840045607998}, {"determining": "( BR * Max( Max( ( ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( CRS ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,Max( RCSe,Min( MUM ,MLU ) ) ) - ( RMSe - ( ( RRSe * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.5339404606168053}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( ( ( Min( FirstVNF_RAM ,Const ) + ( ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RCSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( Min( DS ,( ( MUR + MUM ) / CS ) ) + DS ) )", "obj1": 0.6338582677165354, "obj2": 0.21243450981069723}, {"determining": "( ( Min( Max( ARS,( CRS - FirstVNF_Mem ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Max( ( ( CS + Max( ( ( MUR - MUC ) + RRSe ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ),MUR ) ,( RMSe * Max( ( ( DS + RRSe ) * RRSe ),MUM ) ) ),( ( MUC / CS ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4278414681810097}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_Mem * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,RRSe ) / ( ( RRSe + MLU ) - ( ( RCSe * RMSe ) - Max( MLU,MUR ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.015075713036833674}, {"determining": "( Min( ( ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( RMSe / MUR ) ,MUR ) ) ) - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7874015748031497, "obj2": 0.10297652808020999}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.1071124331139349}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( AMS - ACS ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( MLU ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( ( Const - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.7440944881889764, "obj2": 0.11879374968944811}, {"determining": "( ( PN - MDR ) * ( ( FirstVNF_CPU_Server + Min( Const ,AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - Max( CS,( ( RRSe * ( MUR - RMSe ) ) - RMSe ) ) ) ) - ( ( Max( ( MLU + CS ),( Max( ( MUM - MUM ),( RRSe + RMSe ) ) * ( DS + RCSe ) ) ) - Min( ( CS / MUC ) ,Max( RCSe,CS ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8248031496062992, "obj2": 0.06685593413833907}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( MUR,RRSe ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_Mem * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.952755905511811, "obj2": 0.02068471195076567}, {"determining": "( Min( ( ( ( FirstVNF_Mem * ( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_RAM_Server ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( ( ( Min( RRSe ,MLU ) / RMSe ) / Max( ( RCSe / RRSe ),RCSe ) ) / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RCSe ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.639763779527559, "obj2": 0.19616232830297353}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( Min( AMS ,ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) * MRS ) ) ) )", "choosing": "( ( RMSe * ( Min( Min( ( ( MUM - RRSe ) / RMSe ) ,MUC ) ,Min( Min( MUM ,MUC ) ,RCSe ) ) - RRSe ) ) / ( Max( RRSe,CS ) * RCSe ) )", "obj1": 0.3248031496062992, "obj2": 0.4182603398679515}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.65748031496063, "obj2": 0.17543006827865623}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( Const - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( Max( AMS,( MDR - DDR ) ) - Max( FirstVNF_RAM,ACS ) ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / RRSe ) - ( MUR * Min( RCSe ,RCSe ) ) )", "obj1": 0.43700787401574803, "obj2": 0.32434697306879406}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( Min( Min( RCSe ,RCSe ) ,Min( MUM ,MUC ) ) ,RMSe ) ,DS ) ) - RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.355953555701957}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_CPU ) ) - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + PN ) * ( ( PN + ( CRS / MDR ) ) - ARS ) ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( MUM / RCSe ) ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.0610236220472441, "obj2": 0.6597343078874754}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( Max( ( MUM + MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( ( ( CS + Max( ( RRSe + ( MUR - MUC ) ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ) / CS ) / Min( Min( RRSe ,( ( ( ( MUM + MUM ) / Max( MUC,RCSe ) ) / RMSe ) * Min( CS ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07815597295495089}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Min( ( AMS + ( ( CRS * FirstVNF_RAM ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) ) / ( CS + DS ) )", "obj1": 0.16535433070866143, "obj2": 0.5456030486280524}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( MRS + AMS ) ) * ( Max( DDR,AMS ) / ( BR - ( ( RRS - ARS ) * ACS ) ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( RCSe + RMSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( ( CS - RCSe ),RMSe ) )", "obj1": 0.7047244094488189, "obj2": 0.1430210696152097}, {"determining": "( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( RCSe / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17228794525209468}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ( Max( Min( ( MRS - DDR ) ,( ACS - FirstVNF_Mem_Server ) ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( Max( ( MUM + MUM ),DS ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),( RRSe * MUR ) ) ) ) / MLU ),( ( ( ( CS + Max( ( RRSe + ( MUR - MUC ) ),MUM ) ) + ( ( Max( Min( MLU ,RRSe ),RCSe ) / DS ) - ( Min( ( RRSe - RCSe ) ,Max( MLU,MLU ) ) / ( ( RCSe / CS ) + MLU ) ) ) ) / CS ) / Min( Min( RRSe ,( Max( ( MUC * DS ),CS ) * Min( CS ,RRSe ) ) ) ,MUR ) ) )", "obj1": 0.8090551181102362, "obj2": 0.07045290950651546}, {"determining": "( Const * Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) + Const ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - CS ) ) - ( ( MUR - Max( ( Max( MLU,RCSe ) - ( MUC * MUR ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) + DS ) )", "obj1": 0.05708661417322835, "obj2": 0.6597642493768943}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( CS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08464566929133858, "obj2": 0.6118284928630605}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - ( Min( MUM ,RCSe ) * ( CS - CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.5610236220472441, "obj2": 0.25193889462968644}, {"determining": "( ( FirstVNF_RAM_Server - ( BR - AMS ) ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( ( CRS / MDR ) + PN ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe * ( CS - RRSe ) ) / Min( ( CS / MUC ) ,DS ) )", "obj1": 0.421259842519685, "obj2": 0.3282157838588729}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7165354330708661, "obj2": 0.13579015695706803}], "22": [{"determining": "( ( FirstVNF_RAM_Server - ( BR - AMS ) ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( ( CRS / MDR ) + PN ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RMSe * ( Min( Min( ( ( MUM - RRSe ) / RMSe ) ,MUC ) ,Min( Min( MUM ,MUC ) ,RCSe ) ) - RRSe ) ) / ( Max( RRSe,CS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - FirstVNF_RAM_Server ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * Min( ( DDR / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ARS ,Max( MDR,ACS ) ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( MLU + RRSe ) - ( Max( Min( ( MUR * Max( ( RRSe + MLU ),MUM ) ) ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS * ( ( MDR / DDR ) + Const ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RMSe / MUM ) / MLU ),( Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( ( DS + RCSe ) * DS ),CS ) ) ) ,MUR ) / ( MUC / CS ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * ( ( CRS * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - ( RRS / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( RMSe,Min( MLU ,RMSe ) ) * RCSe ) / ( MUR * ( Min( DS ,Min( ( MLU / Max( CS,( MUC / MUR ) ) ) ,RCSe ) ) - RRSe ) ) )", "obj1": 0.37401574803149606, "obj2": 0.35432712984467785}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) ) / ( CS + DS ) )", "obj1": 0.12598425196850394, "obj2": 0.5967671559588796}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( ( AMS - ( ( DDR / Max( DDR,( FirstVNF_CPU * ( ACS - DDR ) ) ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) * ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - MUM ) - MLU ) ),Min( ( DS * RRSe ) ,( ( Max( MUR,CS ) / RMSe ) / DS ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.028238695185468038}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( Min( FirstVNF_CPU_Server ,RRS ) + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( ( FirstVNF_Mem_Server / MDR ),CRS ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( RRSe + RCSe ),MUR ) ) ) - ( Min( DS ,DS ) + RMSe ) ) ) / Max( ( Max( DS,RRSe ) - Max( RMSe,MUC ) ),( RCSe + Min( Max( MUC,MUC ) ,MLU ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4274937305613415}, {"determining": "( BR * Max( Max( ( ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( CRS ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,Max( RCSe,Min( MUM ,MLU ) ) ) - ( RMSe - ( ( RRSe * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.5339404606168053}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( CRS + ( ( ( CRS / ( PN + FirstVNF_Mem ) ) - ( MDR / FirstVNF_CPU ) ) / MDR ) ) / ( AMS - ACS ) ) )", "choosing": "Max( ( MUC - ( ( MUM + MUM ) * DS ) ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( MUM * RRSe ) ) - Max( ( MUC * DS ),CS ) ) ) ,Max( CS,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.16363648760745256}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * Min( ( DDR * AMS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_CPU - RRS ) ) * ( ( ( ACS / FirstVNF_RAM_Server ) * ( ( MDR + ( PN / ARS ) ) * MDR ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( MUM ,( ( Max( Min( MUR ,( RRSe * ( RRSe * CS ) ) ),( ( ( MUM / CS ) * MUM ) * MUC ) ) + RRSe ) - MLU ) ) - Min( DS ,DS ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.6259842519685039, "obj2": 0.20430326526484757}, {"determining": "( Min( ( ( Min( Max( AMS,FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( RRS - ( AMS + ACS ) ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_RAM + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( RRSe + MLU ) - ( Max( Min( DS ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2754276042135931}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( ( ( DDR / BR ) - ARS ) - AMS ) / ( ( BR * PN ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Min( MUM ,RCSe ),( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + MLU ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8858267716535433, "obj2": 0.041185386029248164}, {"determining": "( ( Const - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.7440944881889764, "obj2": 0.11879374968944811}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.281496062992126, "obj2": 0.44869974280579944}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ( FirstVNF_Mem * PN ) * ARS ) + MRS ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,( AMS * AMS ) ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - Max( ( MUC - RRSe ),( CS / MLU ) ) ) - MLU ) ),Min( ( DS * MLU ) ,( MUR - CS ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.010827546278921385}, {"determining": "( ( PN - MDR ) * ( ( FirstVNF_CPU_Server + Min( Const ,AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - Max( CS,( ( RRSe * ( MUR - RMSe ) ) - RMSe ) ) ) ) - ( ( Max( ( MLU + CS ),( Max( ( MUM - MUM ),( RRSe + RMSe ) ) * ( DS + RCSe ) ) ) - Min( ( CS / MUC ) ,Max( RCSe,CS ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8248031496062992, "obj2": 0.06685593413833907}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( Min( AMS ,ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) * MRS ) ) ) )", "choosing": "( ( RMSe * ( Min( Min( ( ( MUM - RRSe ) / RMSe ) ,MUC ) ,Min( Min( MUM ,MUC ) ,RCSe ) ) - RRSe ) ) / ( Max( RRSe,CS ) * RCSe ) )", "obj1": 0.3248031496062992, "obj2": 0.4182603398679515}, {"determining": "( Min( ( ( ( FirstVNF_Mem * ( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_RAM_Server ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( ( ( Min( RRSe ,MLU ) / RMSe ) / Max( ( RCSe / RRSe ),RCSe ) ) / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RCSe ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.639763779527559, "obj2": 0.19616232830297353}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) - ( ( Const - ( FirstVNF_Mem - ( ( ARS * ( FirstVNF_Mem * PN ) ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - ( Min( MUM ,RCSe ) * ( CS - CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.5885826771653543, "obj2": 0.23917513298840504}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS - ( FirstVNF_CPU_Server / ACS ) ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS - ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - Max( ( ( MUR * MUM ) - MUR ),( RMSe * Max( CS,MUM ) ) ) ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + Max( RRSe,CS ) ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.09645669291338582, "obj2": 0.6037860198994979}, {"determining": "( ( ( ( ( ( ( Const - ( MRS * FirstVNF_Mem_Server ) ) - ( CRS + MRS ) ) * ARS ) + DDR ) + ( PN / DDR ) ) - FirstVNF_CPU ) * ( AMS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( Max( MUM,Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( MUC ,DS ) + RMSe ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9507874015748031, "obj2": 0.021312507990623147}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) + AMS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),DDR ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + Max( ( MUC * RMSe ),RCSe ) ),Max( ( DS + RCSe ),MLU ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.281496062992126, "obj2": 0.44869974280579944}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7381889763779528, "obj2": 0.1315607511820321}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,( Max( PN,MDR ) + ARS ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe * ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RRSe + DS ) ) ) / ( CS + DS ) )", "obj1": 0.21456692913385828, "obj2": 0.49489770335751293}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}, {"determining": "( ( Const - ( FirstVNF_Mem / Max( MDR,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) / ( MUR / ( DS - Max( ( MUC / ( ( RCSe - RRSe ) / CS ) ),( ( MUM + ( MUR * RCSe ) ) * ( ( MLU - MUR ) + Min( MUC ,MUC ) ) ) ) ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.08689451633484004}, {"determining": "( Min( ( AMS + ( ( CRS * FirstVNF_RAM ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6327400919762047}, {"determining": "( ( ( Min( FirstVNF_RAM ,Const ) + ( ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - Max( ( AMS / MDR ),FirstVNF_RAM ) ) ) - ( FirstVNF_Mem * ( MDR - ( FirstVNF_RAM_Server / BR ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( MUR - Max( RCSe,( ( RMSe * MUR ) - Max( MLU,MUR ) ) ) ) - Max( CS,RMSe ) ) ) / ( CS + DS ) ) / ( Min( DS ,( ( MUR + MUM ) / CS ) ) + DS ) )", "obj1": 0.6535433070866141, "obj2": 0.18308713685456995}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_CPU ) ) - ( BR - AMS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + PN ) * ( ( PN + ( CRS / MDR ) ) - ARS ) ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( MUM / RCSe ) ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.0610236220472441, "obj2": 0.6597343078874754}, {"determining": "( ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( DDR * RRS ) ,( MRS + AMS ) ) )", "choosing": "Max( ( MLU / Max( MLU,DS ) ),( ( MUC / CS ) / Min( ( DS * ( Min( ( ( RCSe / RCSe ) - ( RCSe - CS ) ) ,( CS * RRSe ) ) + Min( ( RCSe - ( DS + MUR ) ) ,Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Min( ( AMS + ( ( CRS * FirstVNF_RAM ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.6238605359538097}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( AMS - ACS ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( MLU ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_Mem_Server + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( RCSe / CS ) / Min( ( RRSe * ( Min( Min( RRSe ,MUM ) ,( MUR / RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17228794525209468}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( AMS + MRS ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) / ( CS + DS ) )", "obj1": 0.1673228346456693, "obj2": 0.5427695799755456}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( ( ( MRS + ( ACS / FirstVNF_CPU_Server ) ) * AMS ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - ( Min( MUM ,RCSe ) * ( CS - CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.8720472440944882, "obj2": 0.04809951271674153}, {"determining": "( ( FirstVNF_CPU / MRS ) * ( ( AMS - FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUC / CS ) / Min( ( DS * ( ( ( MUC + CS ) / Min( MUM ,MLU ) ) + Min( Min( RRSe ,MUM ) ,( MLU + MLU ) ) ) ) ,MUR ) ),( ( ( MUM * RRSe ) * ( RMSe + ( MLU + Max( RCSe,MLU ) ) ) ) / MLU ) )", "obj1": 0.5767716535433071, "obj2": 0.24723840045607998}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7047244094488189, "obj2": 0.1430210696152097}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) ) / ( CS + DS ) )", "obj1": 0.16535433070866143, "obj2": 0.5456030486280524}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.1071124331139349}], "23": [{"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - FirstVNF_RAM_Server ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * Min( ( DDR / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ARS ,Max( MDR,ACS ) ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( MLU + RRSe ) - ( Max( Min( ( MUR * Max( ( RRSe + MLU ),MUM ) ) ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( BR - AMS ) ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * ( ( ( CRS / MDR ) + PN ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RMSe * ( Min( Min( ( ( MUM - RRSe ) / RMSe ) ,MUC ) ,Min( Min( MUM ,MUC ) ,RCSe ) ) - RRSe ) ) / ( Max( RRSe,CS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_Mem ) + ( AMS + MRS ) ) * ( ( ARS + Const ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( RRSe * ( MUR / CS ) ) ) / Min( Min( DS ,( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * ( ( CRS * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - ( RRS / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( RMSe,Min( MLU ,RMSe ) ) * RCSe ) / ( MUR * ( Min( DS ,Min( ( MLU / Max( CS,( MUC / MUR ) ) ) ,RCSe ) ) - RRSe ) ) )", "obj1": 0.37401574803149606, "obj2": 0.35432712984467785}, {"determining": "( ( PN - MDR ) * ( ( FirstVNF_CPU_Server + Min( Const ,AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - Max( CS,( ( RRSe * ( MUR - RMSe ) ) - RMSe ) ) ) ) - ( ( Max( ( MLU + CS ),( Max( ( MUM - MUM ),( RRSe + RMSe ) ) * ( DS + RCSe ) ) ) - Min( ( CS / MUC ) ,Max( RCSe,CS ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8248031496062992, "obj2": 0.06685593413833907}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7755905511811023, "obj2": 0.10599259988888268}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * Min( ( DDR * AMS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_CPU - RRS ) ) * ( ( ( ACS / FirstVNF_RAM_Server ) * ( ( MDR + ( PN / ARS ) ) * MDR ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( MUM ,( ( Max( Min( MUR ,( RRSe * ( RRSe * CS ) ) ),( ( ( MUM / CS ) * MUM ) * MUC ) ) + RRSe ) - MLU ) ) - Min( DS ,DS ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( CRS + ( ( ( CRS / ( PN + FirstVNF_Mem ) ) - ( MDR / FirstVNF_CPU ) ) / MDR ) ) / ( AMS - ACS ) ) )", "choosing": "Max( ( MUC - ( ( MUM + MUM ) * DS ) ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( MUM * RRSe ) ) - Max( ( MUC * DS ),CS ) ) ) ,Max( CS,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.16363648760745256}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) - Max( ( MUC * DS ),CS ) ) ) ,Max( CS,CS ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.27445782178116784}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_Mem_Server + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( RCSe / CS ) / Min( ( RRSe * ( Min( Min( RRSe ,MUM ) ,( MUR / RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17228794525209468}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( MUR - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( MUR,RRSe ) ) )", "obj1": 0.8661417322834646, "obj2": 0.06171125348489363}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( AMS / ( CRS - FirstVNF_RAM_Server ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( RCSe - CS ) ) - ( ( Min( ( CS / MUC ) ,Max( RCSe,CS ) ) - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( Max( ( RRSe / RCSe ),MLU ) - CS ),MUR ) ) ) / ( CS + DS ) )", "obj1": 0.8858267716535433, "obj2": 0.03955075791893544}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.2874015748031496, "obj2": 0.4464387128059899}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.6259842519685039, "obj2": 0.20430326526484757}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}, {"determining": "( ( ( AMS - ( ( DDR / Max( DDR,( FirstVNF_CPU * ( ACS - DDR ) ) ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) * ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - MUM ) - MLU ) ),Min( ( DS * RRSe ) ,( ( Max( MUR,CS ) / RMSe ) / DS ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.028238695185468038}, {"determining": "( BR * Max( Max( ( ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( CRS ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,Max( RCSe,Min( MUM ,MLU ) ) ) - ( RMSe - ( ( RRSe * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.5339404606168053}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + Max( RRSe,CS ) ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.08267716535433071, "obj2": 0.6119653705246353}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) ) / ( CS + DS ) )", "obj1": 0.12598425196850394, "obj2": 0.5967671559588796}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5, "obj2": 0.28849659684401363}, {"determining": "( ( FirstVNF_CPU / MRS ) * ( ( AMS - FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUC / CS ) / Min( ( DS * ( ( ( MUC + CS ) / Min( MUM ,MLU ) ) + Min( Min( RRSe ,MUM ) ,( MLU + MLU ) ) ) ) ,MUR ) ),( ( ( MUM * RRSe ) * ( RMSe + ( MLU + Max( RCSe,MLU ) ) ) ) / MLU ) )", "obj1": 0.5767716535433071, "obj2": 0.24723840045607998}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( ( ( ( Max( Max( MRS,MRS ),FirstVNF_CPU_Server ) - MDR ) / CRS ) - ARS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( MUM / RCSe ) ) / Min( ( DS * ( Min( Min( ( CS + DS ) ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.08689451633484004}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( Min( AMS ,ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) * MRS ) ) ) )", "choosing": "( ( RMSe * ( Min( Min( ( ( MUM - RRSe ) / RMSe ) ,MUC ) ,Min( Min( MUM ,MUC ) ,RCSe ) ) - RRSe ) ) / ( Max( RRSe,CS ) * RCSe ) )", "obj1": 0.3248031496062992, "obj2": 0.4182603398679515}, {"determining": "( ( Const - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.7440944881889764, "obj2": 0.11879374968944811}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUM / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6530625485009968}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7106299212598425, "obj2": 0.1278854259280162}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,( Max( PN,MDR ) + ARS ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe * ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RRSe + DS ) ) ) / ( CS + DS ) )", "obj1": 0.21456692913385828, "obj2": 0.49489770335751293}, {"determining": "( Max( Max( ( FirstVNF_Mem * Min( DDR ,FirstVNF_CPU ) ),( FirstVNF_Mem_Server / Const ) ),PN ) * ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,( RCSe - MUM ) ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.265748031496063, "obj2": 0.45780673526847104}, {"determining": "( Min( AMS ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,RRSe ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.13582677165354332, "obj2": 0.5733883389555181}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ( FirstVNF_Mem * PN ) * ARS ) + MRS ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,( AMS * AMS ) ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - Max( ( MUC - RRSe ),( CS / MLU ) ) ) - MLU ) ),Min( ( DS * MLU ) ,( MUR - CS ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.010827546278921385}, {"determining": "( ( Const - ( FirstVNF_Mem / Max( MDR,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) / ( MUR / ( DS - Max( ( MUC / ( ( RCSe - RRSe ) / CS ) ),( ( MUM + ( MUR * RCSe ) ) * ( ( MLU - MUR ) + Min( MUC ,MUC ) ) ) ) ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.08689451633484004}, {"determining": "( Min( ( ( ( FirstVNF_Mem * ( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_RAM_Server ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( ( ( Min( RRSe ,MLU ) / RMSe ) / Max( ( RCSe / RRSe ),RCSe ) ) / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( RCSe ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.639763779527559, "obj2": 0.19616232830297353}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( Min( FirstVNF_CPU_Server ,RRS ) + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( ( FirstVNF_Mem_Server / MDR ),CRS ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( RRSe + RCSe ),MUR ) ) ) - ( Min( DS ,DS ) + RMSe ) ) ) / Max( ( Max( DS,RRSe ) - Max( RMSe,MUC ) ),( RCSe + Min( Max( MUC,MUC ) ,MLU ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4274937305613415}, {"determining": "( Min( ( ( ( ( AMS + FirstVNF_Mem ) - ( AMS + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( Min( AMS ,( FirstVNF_CPU_Server / RRS ) ) + ( FirstVNF_RAM - ( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( RRSe * ( Min( Min( MLU ,MUM ) ,( MUR * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( ( MUC / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) + Max( RRSe,RRSe ) ) )", "obj1": 0.9291338582677166, "obj2": 0.026879271039649977}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS / FirstVNF_RAM_Server ) ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + ( RRSe / RCSe ) ),DS ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.13385826771653545, "obj2": 0.5799201001704076}, {"determining": "( ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( DDR * RRS ) ,( MRS + AMS ) ) )", "choosing": "Max( ( MLU / Max( MLU,DS ) ),( ( MUC / CS ) / Min( ( DS * ( Min( ( ( RCSe / RCSe ) - ( RCSe - CS ) ) ,( CS * RRSe ) ) + Min( ( RCSe - ( DS + MUR ) ) ,Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Min( ( AMS + ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + ( MDR / ARS ) ) ) ) - Min( DDR ,RRS ) ) ) ,( AMS + MDR ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - ( RRSe - MUR ) ) ) / ( CS + DS ) )", "obj1": 0.07086614173228346, "obj2": 0.6284796768105703}, {"determining": "( Min( ( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS - ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + MLU ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.10039370078740158, "obj2": 0.599072954751232}], "24": [{"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( Max( Max( RRS,( MRS * FirstVNF_CPU ) ),PN ) - AMS ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( RRSe + DS ) - CS ) ) - ( ( Min( RMSe ,DS ) + RMSe ) - ( MUM - RMSe ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - AMS ) - FirstVNF_RAM_Server ) * ( ( AMS / ACS ) / ( ( ( ( FirstVNF_CPU_Server * ARS ) * ( FirstVNF_RAM + Const ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + PN ) * Min( ( DDR / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ARS ,Max( MDR,ACS ) ) ) ) ) / ( DDR / AMS ) ) ) )", "choosing": "( ( RCSe / RRSe ) / ( ( MLU + RRSe ) - ( Max( Min( ( MUR * Max( ( RRSe + MLU ),MUM ) ) ,DS ),MUR ) - ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_Mem ) + ( AMS + MRS ) ) * ( ( ARS + Const ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( RRSe * ( MUR / CS ) ) ) / Min( Min( DS ,( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( BR * Max( Max( ( ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( CRS ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,Max( RCSe,Min( MUM ,MLU ) ) ) - ( RMSe - ( ( RRSe * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.5339404606168053}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + ( MDR / ARS ) ) ) ) - Min( DDR ,RRS ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( CS - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.6909448818897638, "obj2": 0.14501195469856556}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( PN - MDR ) * ( ( FirstVNF_CPU_Server + Min( Const ,AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - Max( CS,( ( RRSe * ( MUR - RMSe ) ) - RMSe ) ) ) ) - ( ( Max( ( MLU + CS ),( Max( ( MUM - MUM ),( RRSe + RMSe ) ) * ( DS + RCSe ) ) ) - Min( ( CS / MUC ) ,Max( RCSe,CS ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8248031496062992, "obj2": 0.06685593413833907}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUM / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05447152864829249}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( AMS / ( CRS - FirstVNF_RAM_Server ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( RCSe - CS ) ) - ( ( Min( ( CS / MUC ) ,Max( RCSe,CS ) ) - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( Max( ( RRSe / RCSe ),MLU ) - CS ),MUR ) ) ) / ( CS + DS ) )", "obj1": 0.8858267716535433, "obj2": 0.03955075791893544}, {"determining": "( ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * ( ( CRS * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - ( RRS / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( RMSe,Min( MLU ,RMSe ) ) * RCSe ) / ( MUR * ( Min( DS ,Min( ( MLU / Max( CS,( MUC / MUR ) ) ) ,RCSe ) ) - RRSe ) ) )", "obj1": 0.37401574803149606, "obj2": 0.35432712984467785}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUM / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6530625485009968}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_Mem_Server + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( RCSe / CS ) / Min( ( RRSe * ( Min( Min( RRSe ,MUM ) ,( MUR / RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.6633858267716536, "obj2": 0.17228794525209468}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * Min( ( DDR * AMS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_CPU - RRS ) ) * ( ( ( ACS / FirstVNF_RAM_Server ) * ( ( MDR + ( PN / ARS ) ) * MDR ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( MUM ,( ( Max( Min( MUR ,( RRSe * ( RRSe * CS ) ) ),( ( ( MUM / CS ) * MUM ) * MUC ) ) + RRSe ) - MLU ) ) - Min( DS ,DS ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.6259842519685039, "obj2": 0.20430326526484757}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) - Max( ( MUC * DS ),CS ) ) ) ,Max( CS,CS ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.27445782178116784}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( ( ( AMS - ( ( DDR / Max( DDR,( FirstVNF_CPU * ( ACS - DDR ) ) ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) * ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - MUM ) - MLU ) ),Min( ( DS * RRSe ) ,( ( Max( MUR,CS ) / RMSe ) / DS ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.028238695185468038}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5, "obj2": 0.28849659684401363}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( ( ( ( Max( Max( MRS,MRS ),FirstVNF_CPU_Server ) - MDR ) / CRS ) - ARS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( MUM / RCSe ) ) / Min( ( DS * ( Min( Min( ( CS + DS ) ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.797244094488189, "obj2": 0.08479085535934547}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.29133858267716534, "obj2": 0.43321969548832356}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( Min( AMS ,ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) * MRS ) ) ) )", "choosing": "( ( RMSe * ( Min( Min( ( ( MUM - RRSe ) / RMSe ) ,MUC ) ,Min( Min( MUM ,MUC ) ,RCSe ) ) - RRSe ) ) / ( Max( RRSe,CS ) * RCSe ) )", "obj1": 0.3248031496062992, "obj2": 0.4182603398679515}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ( ( Const + FirstVNF_RAM_Server ) + ( AMS + FirstVNF_Mem ) ) ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUM * RRSe ) * ( RMSe + ( MLU + Max( RCSe,MLU ) ) ) ) / RCSe ),( ( MUC / CS ) / Min( ( DS * ( ( ( MUC / CS ) / Min( MUM ,MLU ) ) + Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.5846456692913385, "obj2": 0.24191971109879803}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_Mem * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9507874015748031, "obj2": 0.02261031781646179}, {"determining": "( Max( Max( ( FirstVNF_Mem * Min( DDR ,FirstVNF_CPU ) ),( FirstVNF_Mem_Server / Const ) ),PN ) * ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,( RCSe - MUM ) ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.265748031496063, "obj2": 0.45780673526847104}, {"determining": "( ( FirstVNF_CPU / MRS ) * ( ( AMS - FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUC / CS ) / Min( ( DS * ( ( ( MUC + CS ) / Min( MUM ,MLU ) ) + Min( Min( RRSe ,MUM ) ,( MLU + MLU ) ) ) ) ,MUR ) ),( ( ( MUM * RRSe ) * ( RMSe + ( MLU + Max( RCSe,MLU ) ) ) ) / MLU ) )", "obj1": 0.5767716535433071, "obj2": 0.24723840045607998}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - RMSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.13385826771653545, "obj2": 0.572895392244616}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ( FirstVNF_Mem * PN ) * ARS ) + MRS ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,( AMS * AMS ) ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - Max( ( MUC - RRSe ),( CS / MLU ) ) ) - MLU ) ),Min( ( DS * MLU ) ,( MUR - CS ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.010827546278921385}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) / ( ( ARS / MDR ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( MUR ,Min( Min( ( ( RMSe + RRSe ) - RMSe ) ,( MUR / ( CS + MLU ) ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.3457982000605634}, {"determining": "( ( Const - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.7460629921259843, "obj2": 0.11690993312810578}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( AMS - ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( MLU ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,CS ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( Min( ( ( ( ( AMS + FirstVNF_Mem ) - ( AMS + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( Min( AMS ,( FirstVNF_CPU_Server / RRS ) ) + ( FirstVNF_RAM - ( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( RRSe * ( Min( Min( MLU ,MUM ) ,( MUR * RRSe ) ) + Max( Min( Min( MUM ,RCSe ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( Min( ( ( AMS - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - ( MUM / ( DS + ( MUC * ( MUC * MUR ) ) ) ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7106299212598425, "obj2": 0.1278854259280162}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7795275590551181, "obj2": 0.1040104131404556}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.655511811023622, "obj2": 0.18426961776028078}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( Max( Const,FirstVNF_CPU_Server ) / BR ) ),PN ) )", "choosing": "( ( ( Min( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) ,RCSe ) * ( MUR - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + ( MUR / RCSe ) ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.13188976377952755, "obj2": 0.5806810468772671}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( FirstVNF_Mem_Server / ( FirstVNF_RAM * ( ( Const + FirstVNF_RAM_Server ) + MDR ) ) ) ),PN ) )", "choosing": "( ( ( Min( MUM ,Min( RRSe ,MUM ) ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + ( RMSe / RCSe ) ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.5927186242184963}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,( Max( PN,MDR ) + ARS ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe * ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RRSe + DS ) ) ) / ( CS + DS ) )", "obj1": 0.21456692913385828, "obj2": 0.49489770335751293}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.07086614173228346, "obj2": 0.6284796768105703}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( Min( FirstVNF_CPU_Server ,RRS ) + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( ( FirstVNF_Mem_Server / MDR ),CRS ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( RRSe + RCSe ),MUR ) ) ) - ( Min( DS ,DS ) + RMSe ) ) ) / Max( ( Max( DS,RRSe ) - Max( RMSe,MUC ) ),( RCSe + Min( Max( MUC,MUC ) ,MLU ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.4274937305613415}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( RRSe + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.4516245804691428}], "25": [{"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( ( AMS + BR ) + ( AMS + MRS ) ) * Min( ( ( AMS - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( Min( Min( Max( FirstVNF_Mem_Server,ACS ) ,ARS ) ,ARS ),( CRS - DDR ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( Min( MUC ,CS ) - ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( Max( Max( RRS,( MRS * FirstVNF_CPU ) ),PN ) - AMS ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( RRSe + DS ) - CS ) ) - ( ( Min( RMSe ,DS ) + RMSe ) - ( MUM - RMSe ) ) ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( BR * Max( Max( ( ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( ( MDR + RRS ) / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( CRS ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,Max( RCSe,Min( MUM ,MLU ) ) ) - ( RMSe - ( ( RRSe * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.1889763779527559, "obj2": 0.5339404606168053}, {"determining": "( ( PN - MDR ) * ( ( FirstVNF_CPU_Server + Min( Const ,AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - Max( CS,( ( RRSe * ( MUR - RMSe ) ) - RMSe ) ) ) ) - ( ( Max( ( MLU + CS ),( Max( ( MUM - MUM ),( RRSe + RMSe ) ) * ( DS + RCSe ) ) ) - Min( ( CS / MUC ) ,Max( RCSe,CS ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8248031496062992, "obj2": 0.06685593413833907}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + ( RMSe / RCSe ) ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8562992125984252, "obj2": 0.05103150879917761}, {"determining": "( ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * ( ( CRS * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - ( RRS / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( RMSe,Min( MLU ,RMSe ) ) * RCSe ) / ( MUR * ( Min( DS ,Min( ( MLU / Max( CS,( MUC / MUR ) ) ) ,RCSe ) ) - RRSe ) ) )", "obj1": 0.37401574803149606, "obj2": 0.35432712984467785}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) / ( FirstVNF_RAM * ( ( Const + FirstVNF_RAM_Server ) + MDR ) ) ) ),PN ) )", "choosing": "( ( ( Min( MUM ,Min( RRSe ,MUM ) ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + ( RMSe / RCSe ) ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) + DS ) )", "obj1": 0.09645669291338582, "obj2": 0.6136854216591239}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( AMS / ( CRS - FirstVNF_RAM_Server ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( RCSe - CS ) ) - ( ( Min( ( CS / MUC ) ,Max( RCSe,CS ) ) - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( Max( ( RRSe / RCSe ),MLU ) - CS ),MUR ) ) ) / ( CS + DS ) )", "obj1": 0.8858267716535433, "obj2": 0.03955075791893544}, {"determining": "( ( ( AMS - ( ( DDR / Max( DDR,( FirstVNF_CPU * ( ACS - DDR ) ) ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) * ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - MUM ) - MLU ) ),Min( ( DS * RRSe ) ,( ( Max( MUR,CS ) / RMSe ) / DS ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.028238695185468038}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * Min( ( DDR * AMS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_CPU - RRS ) ) * ( ( ( ACS / FirstVNF_RAM_Server ) * ( ( MDR + ( PN / ARS ) ) * MDR ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( MUM ,( ( Max( Min( MUR ,( RRSe * ( RRSe * CS ) ) ),( ( ( MUM / CS ) * MUM ) * MUC ) ) + RRSe ) - MLU ) ) - Min( DS ,DS ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + ( MDR / ARS ) ) ) ) - Min( DDR ,RRS ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( CS - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.6909448818897638, "obj2": 0.14501195469856556}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUM / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6530625485009968}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_Mem * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9507874015748031, "obj2": 0.02261031781646179}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( ( ( ( AMS - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( MRS ,Max( ( CRS - PN ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / RCSe ) / Min( ( DS * ( Min( Min( MLU ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,CS ) ,RRSe ),( MUR * MUC ) ) ) ) ,MUR ) ) )", "obj1": 0.6653543307086615, "obj2": 0.17054548936845168}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( Min( AMS ,ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) * MRS ) ) ) )", "choosing": "( ( RMSe * ( Min( Min( ( ( MUM - RRSe ) / RMSe ) ,MUC ) ,Min( Min( MUM ,MUC ) ,RCSe ) ) - RRSe ) ) / ( Max( RRSe,CS ) * RCSe ) )", "obj1": 0.3248031496062992, "obj2": 0.4182603398679515}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( ( ( ( Max( Max( MRS,MRS ),FirstVNF_CPU_Server ) - MDR ) / CRS ) - ARS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / ( MUM / RCSe ) ) / Min( ( DS * ( Min( Min( ( CS + DS ) ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.797244094488189, "obj2": 0.08479085535934547}, {"determining": "( ( Const - ( ( Const - ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,RRS ) + ( FirstVNF_Mem + AMS ) ) ) ) * DDR ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( ( Max( ( MUM - MUM ),( MUR - Max( ( ( RMSe * MUR ) - Max( MLU,MUR ) ),RMSe ) ) ) * ( Min( Max( Max( MUR,MUM ),RRSe ) ,( CS * RRSe ) ) + RMSe ) ) / MLU ),( ( MUC / CS ) / Min( Min( RRSe ,( ( RRSe - Min( DS ,Max( MUC,CS ) ) ) * Min( Min( MUM ,RCSe ) ,CS ) ) ) ,MUR ) ) )", "obj1": 0.7460629921259843, "obj2": 0.11690993312810578}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5, "obj2": 0.28849659684401363}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.6259842519685039, "obj2": 0.20430326526484757}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.7106299212598425, "obj2": 0.1263702326754559}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,MUR ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.3090551181102362, "obj2": 0.4259916544478543}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.6259842519685039, "obj2": 0.20430326526484757}, {"determining": "( Max( Max( ( FirstVNF_Mem * Min( DDR ,FirstVNF_CPU ) ),( FirstVNF_Mem_Server / Const ) ),PN ) * ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,( RCSe - MUM ) ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.2559055118110236, "obj2": 0.4859460855090328}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,( Max( PN,MDR ) + ARS ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe * ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RRSe + DS ) ) ) / ( CS + DS ) )", "obj1": 0.21456692913385828, "obj2": 0.49489770335751293}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server / Const ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / ( MLU + CS ) ) - ( Max( MUR,RRSe ) + ( Min( MUC ,RMSe ) * Min( ( CS - ( ( ( MUR + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.2735167966053559}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( RRSe + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.4516245804691428}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ( FirstVNF_Mem * PN ) * ARS ) + MRS ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,( AMS * AMS ) ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - Max( ( MUC - RRSe ),( CS / MLU ) ) ) - MLU ) ),Min( ( DS * MLU ) ,( MUR - CS ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.010827546278921385}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( Const - ( ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( ( AMS * CRS ),( FirstVNF_CPU / CRS ) ) ) ) ) - ( MDR - ( CRS / FirstVNF_Mem ) ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.07283464566929133, "obj2": 0.6270688913062211}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( ( ( FirstVNF_Mem / ( MDR - DDR ) ) + FirstVNF_Mem ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + ( RMSe / RCSe ) ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9980314960629921, "obj2": 0.002067090712062151}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),Min( ( FirstVNF_RAM / ( DDR - Min( FirstVNF_CPU ,( RRS / PN ) ) ) ) ,( Min( ( ( ARS * ( FirstVNF_CPU_Server * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,RCSe ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / Min( MUR ,Min( Min( ( ( RMSe + RRSe ) - RMSe ) ,( MUR / ( CS + MLU ) ) ) ,DS ) ) ) / ( CS + DS ) )", "obj1": 0.047244094488188976, "obj2": 0.6670021029251051}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) ) + FirstVNF_Mem ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUR / RCSe ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.59251968503937, "obj2": 0.2311500972243048}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( AMS - ( ( AMS - ACS ) / ( FirstVNF_Mem + ( FirstVNF_RAM / MDR ) ) ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( MLU ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,CS ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.6023622047244095, "obj2": 0.22480941926213505}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( FirstVNF_Mem_Server / ( FirstVNF_RAM * ( ( Const + FirstVNF_RAM_Server ) + MDR ) ) ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.14173228346456693, "obj2": 0.5724939288756395}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( ( Const - ( FirstVNF_Mem - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( MUR ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.33783203557475877}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.265748031496063, "obj2": 0.45780673526847104}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.07086614173228346, "obj2": 0.6284796768105703}, {"determining": "( MRS * ( ( PN + ( ( DDR / FirstVNF_CPU ) / MDR ) ) / ( ( ( MDR * DDR ) / FirstVNF_Mem ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe - ( Min( DS ,Min( Min( ( CS * ( CS - CS ) ) ,( ( RMSe + RRSe ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.25324483485639765}], "26": [{"determining": "( Min( ( FirstVNF_Mem + AMS ) ,( FirstVNF_CPU + MRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU / MUM ),( ( MUC / CS ) / Min( ( DS * ( ( Min( RRSe ,MUM ) / ( CS * RRSe ) ) + Min( MUM ,RCSe ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( ( Max( Max( RRS,( MRS * FirstVNF_CPU ) ),PN ) - AMS ) - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * ( Min( Min( ( ( MUM - RRSe ) / RMSe ) ,MUC ) ,Min( Min( MUM ,MUC ) ,RCSe ) ) - RRSe ) ) / ( Max( RRSe,CS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + BR ) + ( AMS + MRS ) ) * Min( ( ( AMS - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( Min( Min( Max( FirstVNF_Mem_Server,ACS ) ,ARS ) ,ARS ),( CRS - DDR ) ) ) ) )", "choosing": "Max( ( MUM / MLU ),( Min( MUC ,CS ) - ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.03937007874015748, "obj2": 0.6720778037755624}, {"determining": "( ( PN - MDR ) * ( ( FirstVNF_CPU_Server + Min( Const ,AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.7263779527559056, "obj2": 0.08478377303457982}, {"determining": "( ( PN - MDR ) * ( ( FirstVNF_CPU_Server + Min( Const ,AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - Max( CS,( ( RRSe * ( MUR - RMSe ) ) - RMSe ) ) ) ) - ( ( Max( ( MLU + CS ),( Max( ( MUM - MUM ),( RRSe + RMSe ) ) * ( DS + RCSe ) ) ) - Min( ( CS / MUC ) ,Max( RCSe,CS ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8248031496062992, "obj2": 0.06685593413833907}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) / ( FirstVNF_RAM * ( ( Const + FirstVNF_RAM_Server ) + MDR ) ) ) ),PN ) )", "choosing": "( ( ( Min( MUM ,Min( RRSe ,MUM ) ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + ( RMSe / RCSe ) ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) + DS ) )", "obj1": 0.09645669291338582, "obj2": 0.6136854216591239}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( Min( ( DS * RRSe ) ,( RRSe * ( ( ( MUR + MUC ) * ( MUR / RMSe ) ) + MUC ) ) ),( ( Max( MUR,RMSe ) - Max( RMSe,( RMSe / MUM ) ) ) / RMSe ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3133794985488679}, {"determining": "( ( Const - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,CRS ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( Min( DS ,Min( Min( Min( Max( RRSe,RCSe ) ,( MUM - MUC ) ) ,Max( ( RRSe * MUR ),( MUC * DS ) ) ) ,DS ) ) - ( ( CS + ( DS - ( MUR - ( MUM / MUC ) ) ) ) / MUC ) ) ) / ( Max( CS,RRSe ) * RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.38762679765706887}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + ( RMSe / RCSe ) ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.8562992125984252, "obj2": 0.05103150879917761}, {"determining": "( Min( ( AMS + ( ( CRS * AMS ) - Min( DDR ,RRS ) ) ) ,( AMS + MRS ) ) * ( ( PN - ( ( MDR - ( ( Min( FirstVNF_RAM_Server ,BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) - Const ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.12401574803149606, "obj2": 0.5831423404790278}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( AMS / ( CRS - FirstVNF_RAM_Server ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( RCSe - CS ) ) - ( ( Min( ( CS / MUC ) ,Max( RCSe,CS ) ) - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( Max( ( RRSe / RCSe ),MLU ) - CS ),MUR ) ) ) / ( CS + DS ) )", "obj1": 0.8858267716535433, "obj2": 0.03955075791893544}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / CS ) / Min( ( DS * ( Min( Min( MLU ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,CS ) ,RRSe ),Max( RCSe,RRSe ) ) ) ) ,MUR ) ) )", "obj1": 0.65748031496063, "obj2": 0.17688981352126448}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * Min( ( DDR * AMS ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( FirstVNF_CPU - RRS ) ) * ( ( ( ACS / FirstVNF_RAM_Server ) * ( ( MDR + ( PN / ARS ) ) * MDR ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( MUM ,( ( Max( Min( MUR ,( RRSe * ( RRSe * CS ) ) ),( ( ( MUM / CS ) * MUM ) * MUC ) ) + RRSe ) - MLU ) ) - Min( DS ,DS ) )", "obj1": 0.4566929133858268, "obj2": 0.289457876035069}, {"determining": "( ( ( ( FirstVNF_RAM_Server * PN ) * ( ( ARS - AMS ) + Const ) ) - ( MRS / FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_RAM_Server / MRS ) - DDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe * Max( Max( DS,MUM ),CS ) ) / ( CS + ( MLU / Max( MLU,RRSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.3993805537265636}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( ACS - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server / Const ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / ( MLU + CS ) ) - ( Max( MUR,RRSe ) + ( Min( MUC ,RMSe ) * Min( ( CS - ( ( ( MUR + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.2735167966053559}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) ) * DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - ( RCSe / Min( MUR ,( MUM * MLU ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.19881889763779528, "obj2": 0.5062481226516352}, {"determining": "( ( ( AMS - ACS ) / ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) * ( ( CRS * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - ( RRS / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( RMSe,Min( MLU ,RMSe ) ) * RCSe ) / ( MUR * ( Min( DS ,Min( ( MLU / Max( CS,( MUC / MUR ) ) ) ,RCSe ) ) - RRSe ) ) )", "obj1": 0.37401574803149606, "obj2": 0.35432712984467785}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,( FirstVNF_Mem / DDR ) ) ) + DDR ) ) ,CRS ) * Max( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( CS + DS ) ) ) / ( CS + DS ) )", "obj1": 0.7165354330708661, "obj2": 0.12597951231042528}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( Min( ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( ( Min( Max( CRS,( FirstVNF_Mem_Server / Const ) ) ,Min( MRS ,( ( FirstVNF_Mem / DDR ) + ( MDR / ARS ) ) ) ) - Min( DDR ,RRS ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( CS - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.6909448818897638, "obj2": 0.14501195469856556}, {"determining": "( Max( Max( DDR,( DDR * ACS ) ),RRS ) * ( Max( PN,FirstVNF_Mem ) / ( ARS - PN ) ) )", "choosing": "( ( DS + Max( Min( MUR ,CS ),( DS * MUR ) ) ) - ( ( ( DS / RMSe ) * Min( ( CS - ( ( ( RMSe + DS ) - RMSe ) + Min( CS ,Min( MUC ,MUC ) ) ) ) ,RRSe ) ) + ( MUM / ( Min( ( RCSe / ( RCSe / Max( DS,CS ) ) ) ,RRSe ) / ( ( Max( ( CS * RRSe ),RRSe ) * CS ) * Min( ( Max( MLU,MUC ) / MUM ) ,( Min( MUR ,MUM ) + Max( RRSe,CS ) ) ) ) ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.2766179989409113}, {"determining": "( ( ( AMS - ( ( DDR / Max( DDR,( FirstVNF_CPU * ( ACS - DDR ) ) ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) * ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - MUM ) - MLU ) ),Min( ( DS * RRSe ) ,( ( Max( MUR,CS ) / RMSe ) / DS ) ) ) ) )", "obj1": 0.9173228346456693, "obj2": 0.028238695185468038}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Max( CRS,( FirstVNF_Mem_Server / Const ) ) ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,MUR ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( ( MLU + CS ),Max( ( DS + ( RMSe / RCSe ) ),MUR ) ) ) / ( CS + DS ) )", "obj1": 0.3169291338582677, "obj2": 0.41783683752365797}, {"determining": "( Max( Max( BR,FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( Min( FirstVNF_RAM ,Const ) - Const ) ) ) * ( ARS * Max( ARS,BR ) ) )", "choosing": "( ( ( ( Min( RRSe ,CS ) * ( RMSe - MUR ) ) - ( ( MUR - Max( ( Max( RCSe,RCSe ) - ( MUR * MUC ) ),RMSe ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( RCSe + DS ) )", "obj1": 0.14960629921259844, "obj2": 0.5570521411777254}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.6259842519685039, "obj2": 0.20430326526484757}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ( BR - AMS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.2933070866141732, "obj2": 0.43911922586263297}, {"determining": "( Min( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.6259842519685039, "obj2": 0.20430326526484757}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5, "obj2": 0.28849659684401363}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( ( Const - ( FirstVNF_Mem - ( FirstVNF_Mem + FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( MUR ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.33783203557475877}, {"determining": "( ( ( Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( DDR,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + FirstVNF_Mem ) * Max( Max( CRS,( Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) / ( FirstVNF_RAM * ( ( Const + FirstVNF_RAM_Server ) + MDR ) ) ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,MUR ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.17716535433070865, "obj2": 0.551472201430798}, {"determining": "( Max( Max( ( FirstVNF_Mem * Min( DDR ,FirstVNF_CPU ) ),( FirstVNF_Mem_Server / Const ) ),PN ) * ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,( RCSe - MUM ) ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.2559055118110236, "obj2": 0.4859460855090328}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( ( Const - ( ( AMS - ( AMS + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( MUR ,Min( Min( Max( MUM,RMSe ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.38188976377952755, "obj2": 0.3526476508213001}, {"determining": "( ( ( AMS - ( ( DDR / Max( DDR,( FirstVNF_CPU * ( ACS - DDR ) ) ) ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) * ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) )", "choosing": "Max( ( MUM / MLU ),( ( MUM / CS ) / Min( ( DS * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUC * DS ),CS ) ) ) ,MUR ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6507946896142798}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( RRSe + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.28346456692913385, "obj2": 0.4516245804691428}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - ( Min( RMSe ,DS ) + RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.265748031496063, "obj2": 0.45780673526847104}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,Max( ( CRS - DDR ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.22440944881889763, "obj2": 0.4881763171963097}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - FirstVNF_CPU ) - MRS ) ) * ( Max( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,MUR ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) ) / ( CS + DS ) )", "obj1": 0.3090551181102362, "obj2": 0.4259916544478543}, {"determining": "( Min( ( ( ACS - ( MRS + MDR ) ) - ( Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,Min( MRS ,( Max( PN,MDR ) + ARS ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( ( Min( MUM ,RCSe ) * ( RMSe - CS ) ) - ( ( Min( MUC ,CS ) - ( RMSe * ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + ( RRSe + DS ) ) ) / ( CS + DS ) )", "obj1": 0.21456692913385828, "obj2": 0.49489770335751293}, {"determining": "( ( Const - ( ( Const - ( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - MRS ) ) * ( Max( Min( ( MDR - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( ( MUM - Max( ( MLU + CS ),Max( ( DS + RCSe ),MUR ) ) ) - Max( Max( MLU,CS ),Max( MUR,( DS + RCSe ) ) ) ) - Max( MUM,RMSe ) ) ) / Max( RMSe,( CS * RCSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.47166581637387517}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ( FirstVNF_Mem * PN ) * ARS ) + MRS ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,( AMS * AMS ) ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - RRSe ) - ( RRSe - Max( ( MUR * ( ( RRSe - Max( ( MUC - RRSe ),( CS / MLU ) ) ) - MLU ) ),Min( ( DS * MLU ) ,( MUR - CS ) ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.010827546278921385}, {"determining": "( BR * Max( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( MRS + MDR ) ),RRS ) )", "choosing": "( ( ( ( ( RMSe - CS ) * Min( MUM ,Min( MUR ,CS ) ) ) - ( ( Min( MUC ,CS ) - ( RMSe - ( ( MUR * RMSe ) - Max( MLU,MUR ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + Min( RMSe ,MLU ) ) ) / ( CS + DS ) )", "obj1": 0.19291338582677164, "obj2": 0.5336614916305358}, {"determining": "( MRS * ( ( PN + ( ( DDR / FirstVNF_CPU ) / MDR ) ) / ( ( ( MDR * DDR ) / FirstVNF_Mem ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe - ( Min( DS ,Min( Min( ( CS * ( CS - CS ) ) ,( ( RMSe + RRSe ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.25324483485639765}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ARS * ( FirstVNF_Mem * PN ) ) + PN ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,BR ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9507874015748031, "obj2": 0.02261031781646179}, {"determining": "( ( Const - ( ( Min( ( AMS + FirstVNF_Mem ) ,CRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( ( AMS * CRS ),( FirstVNF_CPU / CRS ) ) ) ) ) - ( MDR - ( CRS / FirstVNF_Mem ) ) ) ) * Max( ( AMS - ( MRS * ( FirstVNF_CPU * ( CRS / FirstVNF_CPU ) ) ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.06496062992125984, "obj2": 0.6321129537608672}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,( AMS + ( Max( CRS,ACS ) - FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_CPU_Server ,CRS ) * ( ( ACS - AMS ) / ( FirstVNF_Mem + Max( ( ( FirstVNF_Mem_Server * RRS ) - ( BR - FirstVNF_RAM_Server ) ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( DS / DS ) - ( RCSe * ( MUC + MUC ) ) )", "obj1": 0.5492125984251969, "obj2": 0.25369305989813784}, {"determining": "( ( Min( ( Max( Min( ( MRS - DDR ) ,PN ),FirstVNF_RAM ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Min( ( ( ( FirstVNF_Mem * PN ) * ARS ) + MRS ) ,( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,( AMS * AMS ) ) ) ) ) ) - FirstVNF_CPU ) * ( MRS * ( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUM - Max( ( MLU + CS ),Max( MUR,( DS + ( CS - CS ) ) ) ) ) - Max( MUM,RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "( Min( ( ( ACS - ( FirstVNF_Mem_Server + MDR ) ) - ( ( ( ( AMS - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( MRS ,Max( ( CRS - PN ),Min( CRS ,ARS ) ) ) ) + DDR ) ) ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Max( ( MUM / MLU ),( ( MUC / RCSe ) / Min( ( DS * ( Min( Min( MLU ,MUM ) ,( CS * RRSe ) ) + Max( Min( Min( MUM ,CS ) ,RRSe ),( MUR * MUC ) ) ) ) ,MUR ) ) )", "obj1": 0.6653543307086615, "obj2": 0.17054548936845168}, {"determining": "( ( Const - ( FirstVNF_Mem / ( MDR - DDR ) ) ) * ( ( AMS - ( ( DDR / PN ) - ARS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / ( MLU + CS ) ) - ( Max( MUR,RRSe ) + ( Min( MUC ,RMSe ) * Min( ( CS - ( ( ( MUR + DS ) - RMSe ) + ( DS - ( RMSe / RCSe ) ) ) ) ,RRSe ) ) ) )", "obj1": 0.9350393700787402, "obj2": 0.026976610613901605}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( AMS + FirstVNF_Mem ) ,( AMS + MRS ) ) ) + FirstVNF_Mem ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * ( CS - CS ) ) - ( ( MUR / RCSe ) - Max( ( RMSe / RCSe ),RMSe ) ) ) / ( CS + DS ) )", "obj1": 0.59251968503937, "obj2": 0.2311500972243048}, {"determining": "( MRS * ( ( AMS - ACS ) / ( ( FirstVNF_Mem / ( MDR * DDR ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,CS ) * RCSe ) / ( RMSe * ( Min( DS ,Min( Min( ( MUC * DS ) ,( ( RMSe + DS ) - RMSe ) ) ,DS ) ) - RRSe ) ) )", "obj1": 0.4153543307086614, "obj2": 0.33457948221757805}]}