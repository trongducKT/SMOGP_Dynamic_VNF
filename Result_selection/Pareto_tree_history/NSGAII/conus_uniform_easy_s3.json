{"1": [{"determining": "( ( PN - CRS ) + ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * DS ) + ( RRSe - DS ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Min( Min( AMS ,RRS ) ,Max( BR,BR ) )", "choosing": "( Max( RRSe,RMSe ) - Max( RMSe,RMSe ) )", "obj1": 0.3228346456692913, "obj2": 0.5154279607999267}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( CRS - ARS ) )", "choosing": "( Min( DS ,MUR ) + Min( MUR ,MUC ) )", "obj1": 0.5610236220472441, "obj2": 0.33092506206011146}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( ARS + RRS ) - ( BR + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,RMSe ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) * ( ( AMS * FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( RMSe / RMSe ),MUC ) ,( CS + MUC ) )", "obj1": 0.35039370078740156, "obj2": 0.5069774574846346}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) )", "obj1": 0.6358267716535433, "obj2": 0.26122705680727276}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM ) * Min( MRS ,MRS ) ) )", "choosing": "( Min( ( DS + MUM ) ,MLU ) + ( ( MUM / MUC ) * ( DS + MUC ) ) )", "obj1": 0.5767716535433071, "obj2": 0.3095821836765266}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MLU ) + ( RCSe + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.2612012907062255}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS * DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( Max( DS,RMSe ),Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_CPU_Server / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Max( RRSe,RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + Max( BR,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,Max( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ),Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( ( ( ( AMS * MRS ) - Min( ARS ,PN ) ) / ( ( AMS / ARS ) - ( FirstVNF_CPU_Server / ARS ) ) ) + ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( MRS ,MDR ) - ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RRSe ) + ( DS + MUC ) ) - Max( ( MLU - MLU ),Max( RCSe,RRSe ) ) ) - Max( Max( Min( RMSe ,MUR ),Max( RCSe,RRSe ) ),Max( ( MUM * DS ),( MUM * RRSe ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.22466671589670675}, {"determining": "Min( ( ( ( BR + ACS ) / Min( AMS ,DDR ) ) - Max( ( ARS * FirstVNF_Mem ),Max( PN,RRS ) ) ) ,( Max( ( ACS * AMS ),Max( FirstVNF_RAM,BR ) ) + ( ( Const * CRS ) + Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( Max( ( MUR / MUM ),Min( CS ,CS ) ) ,MUM ),( ( MUC / CS ) * ( ( MUR - MUC ) + CS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.49261112274572966}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( BR + Const ) ) )", "choosing": "Min( ( Min( ( MUR / DS ) ,( CS * MUM ) ) / Min( ( CS - MUM ) ,Min( CS ,RCSe ) ) ) ,Max( ( Max( DS,RCSe ) + ( DS / DS ) ),Max( ( CS * CS ),( RCSe / DS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4533074281550881}, {"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server + ARS ) ) ,Min( ARS ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( CS ,MUC ) / Min( CS ,RRSe ) ) * ( ( MUC - MLU ) / Max( RMSe,MUC ) ) ) * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6493180572595632}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}], "2": [{"determining": "( Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / FirstVNF_Mem ) ,( Const - ARS ) ) ) ) ) * ( ( AMS * FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( Min( CS ,MLU ) - ( RMSe / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + ( MLU - RCSe ) ) / ( ( RMSe / DS ) / ( MUM + RCSe ) ) ) ) ,( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + RRS ) - ( BR + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,RMSe ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 0.8169291338582677, "obj2": 0.08715194251401558}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / FirstVNF_RAM_Server )", "choosing": "( Min( MUC ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.468503937007874, "obj2": 0.3009781877489721}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( RRSe - Min( MLU ,RCSe ) )", "obj1": 0.5275590551181102, "obj2": 0.2672950894319356}, {"determining": "( ( FirstVNF_RAM_Server / ( DDR * FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "Max( AMS,( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.17716535433070865, "obj2": 0.5604191868377553}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * Max( ( Const + FirstVNF_CPU_Server ),( FirstVNF_Mem - PN ) ) ) / Min( ( ( FirstVNF_CPU / Const ) * ( PN / FirstVNF_Mem_Server ) ) ,( Min( PN ,FirstVNF_RAM_Server ) * Min( AMS ,MDR ) ) ) ) + Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - Max( PN,MRS ) ) + Max( Max( BR,ACS ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ),( ( Max( FirstVNF_RAM_Server,PN ) / Max( ARS,AMS ) ) + ( Max( MDR,MRS ) + ( CRS / FirstVNF_CPU ) ) ) ) ) + Max( ( ( ( ( FirstVNF_RAM + BR ) - Min( FirstVNF_RAM ,MRS ) ) * ( ( FirstVNF_CPU * Const ) / ( BR + MRS ) ) ) + Max( ( Min( DDR ,PN ) + ( FirstVNF_CPU * FirstVNF_RAM ) ),( ( DDR + Const ) - ( FirstVNF_CPU_Server * RRS ) ) ) ),( ( ( Max( MRS,ARS ) / Min( Const ,BR ) ) + ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * ( PN * MRS ) ) ) + Min( ( ( FirstVNF_CPU_Server / Const ) / Min( FirstVNF_Mem_Server ,DDR ) ) ,Max( ( FirstVNF_CPU_Server - MDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Max( ( ( PN + AMS ) + ( CRS * CRS ) ),Min( ( FirstVNF_CPU_Server - ACS ) ,( RRS * FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_CPU_Server / PN ) / Max( AMS,AMS ) ) / ( ( BR + MRS ) * ( Const + BR ) ) ) ) * ( ( ( ( RRS + FirstVNF_RAM ) * Max( FirstVNF_RAM,MDR ) ) - Max( ( ARS / FirstVNF_CPU ),Min( FirstVNF_Mem_Server ,MDR ) ) ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( PN * MDR ) ) - ( ( DDR / ACS ) + ( BR / FirstVNF_CPU_Server ) ) ) ) ) + Max( Min( ( ( ( CRS - RRS ) / Min( DDR ,BR ) ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( AMS + AMS ) ) ) ,( ( Max( FirstVNF_RAM_Server,BR ) + Min( FirstVNF_Mem ,CRS ) ) - ( Max( ARS,BR ) - ( DDR / FirstVNF_Mem_Server ) ) ) ),( ( ( ( CRS + FirstVNF_Mem ) / ( MRS + FirstVNF_Mem ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) / ( FirstVNF_CPU + MRS ) ) ) / ( Max( ( ACS + ACS ),( CRS * ARS ) ) - Max( ( DDR * AMS ),( ACS / Const ) ) ) ) ) ) ) + Min( ( ( ( Min( ( ( FirstVNF_CPU / ARS ) * Max( MRS,PN ) ) ,( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server * MDR ) ) ) * Max( ( ( DDR / RRS ) / ( DDR - FirstVNF_Mem ) ),( Max( MDR,FirstVNF_Mem ) - ( MRS - FirstVNF_CPU ) ) ) ) + ( ( Min( ( MDR - FirstVNF_Mem ) ,( Const - FirstVNF_RAM ) ) - ( Max( Const,ARS ) - Min( Const ,BR ) ) ) - ( ( Min( CRS ,MDR ) - ( ACS / FirstVNF_Mem ) ) * ( Min( FirstVNF_Mem ,Const ) - Min( RRS ,Const ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server + Const ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) * Min( ( Const * AMS ) ,( Const * FirstVNF_Mem_Server ) ) ) + ( Min( Min( FirstVNF_Mem ,PN ) ,( MRS + FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem * Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) + Max( Max( ( ( CRS + MRS ) - ( FirstVNF_Mem_Server + DDR ) ),Min( ( FirstVNF_Mem - AMS ) ,( MRS + ACS ) ) ),( ( ( FirstVNF_Mem * ARS ) / ( AMS - AMS ) ) * ( ( PN + BR ) - Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( ( ( ( Max( DDR,RRS ) * ( FirstVNF_Mem_Server - CRS ) ) / Min( Min( ARS ,CRS ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) + ( ( ( BR - FirstVNF_RAM ) - ( FirstVNF_CPU_Server + PN ) ) + Min( Min( CRS ,FirstVNF_CPU ) ,( MDR + MDR ) ) ) ) - Max( ( ( ( AMS * AMS ) + ( RRS + CRS ) ) + Max( ( FirstVNF_RAM * MRS ),( FirstVNF_Mem - Const ) ) ),( Max( ( RRS - MRS ),( ACS + AMS ) ) + ( ( FirstVNF_CPU * AMS ) / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) * ( Max( Max( ( ( AMS + FirstVNF_RAM_Server ) / ( MRS + FirstVNF_RAM_Server ) ),Max( ( FirstVNF_RAM * FirstVNF_Mem ),Max( CRS,MDR ) ) ),( Max( ( AMS - PN ),( FirstVNF_CPU / PN ) ) + Min( ( ARS + PN ) ,Min( ARS ,ACS ) ) ) ) + Min( ( ( ( PN - FirstVNF_Mem ) * ( FirstVNF_RAM + Const ) ) * ( ( ARS + PN ) + Max( FirstVNF_RAM,Const ) ) ) ,( Max( ( DDR / ACS ),( FirstVNF_Mem_Server / MRS ) ) / ( ( FirstVNF_RAM - ARS ) * ( FirstVNF_RAM_Server / PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( CS,RMSe ) + DS ) / ( Max( MUM,( MLU / RMSe ) ) * Min( MLU ,MUR ) ) )", "obj1": 0.905511811023622, "obj2": 0.08589724953700172}, {"determining": "Min( ( FirstVNF_CPU / Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) ) ) ,Min( ARS ,FirstVNF_CPU ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.2235737852127108}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06496062992125984, "obj2": 0.6550315479956984}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.9232283464566929, "obj2": 0.033617852285868825}, {"determining": "( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * ( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5113170145267549}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( MUM / RCSe ) / RMSe ) * ( DS * MUR ) )", "obj1": 0.6338582677165354, "obj2": 0.26004544012789654}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM ) * Min( MRS ,MRS ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 0.3031496062992126, "obj2": 0.5025878484160509}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.533426582843629}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) / CRS ) - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,MUC ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.4849406278119922}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( Min( RRSe ,MUC ) + Min( MUR ,MUC ) )", "obj1": 0.9625984251968503, "obj2": 0.01600169627230138}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RMSe ,DS ) - Max( RCSe,MLU ) )", "obj1": 0.6476377952755905, "obj2": 0.25716930373161384}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( ( MLU + CS ) - ( MLU + RCSe ) ),Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( Max( ( RRSe - MUC ),( MLU + MLU ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.004842429919276873}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4573259407125002}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( BR + Const ) ) )", "choosing": "Min( ( Min( ( MUR / DS ) ,( CS * MUM ) ) / Min( ( CS - MUM ) ,Min( CS ,RCSe ) ) ) ,Max( ( Max( DS,RCSe ) + ( DS / DS ) ),Max( ( CS * CS ),( RCSe / DS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4533074281550881}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07480314960629922, "obj2": 0.6488251869015066}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07480314960629922, "obj2": 0.6488251869015066}, {"determining": "Max( ( MDR - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.650531436931985}, {"determining": "( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( BR + Const ) ) )", "choosing": "Min( ( Min( ( MUR / DS ) ,( CS * MUM ) ) / Min( ( CS - MUC ) ,Min( CS ,RCSe ) ) ) ,Max( ( Max( DS,RCSe ) + ( DS / DS ) ),Max( ( CS * CS ),( RCSe / DS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4533074281550881}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS * DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( Max( DS,RMSe ),Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_CPU_Server / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Max( RRSe,RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + Max( BR,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,Max( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ),Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + RRS ) - ( BR + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,RMSe ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + RRS ) - ( BR + FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe + ( RMSe - MLU ) ) ,Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_RAM_Server / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( ( RRSe - MUC ),( MLU + MLU ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( MLU + CS ) - ( MLU + RCSe ) ),Max( Min( MUR ,RCSe ),( DS + MLU ) ) ) ,( Max( ( RRSe - MUC ),( MLU + MLU ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),FirstVNF_Mem_Server ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( CS - Min( CS ,DS ) ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - ( ACS - DDR ) )", "choosing": "Min( ( RMSe + ( RMSe - MLU ) ) ,Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - FirstVNF_RAM_Server )", "choosing": "( MUC + Min( MUR ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( Max( DS,RMSe ),Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / FirstVNF_Mem ) ,( Const - ARS ) ) ) ) ) * ( ( AMS * FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( Min( CS ,MLU ) - ( RMSe / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + ( MLU - RCSe ) ) / ( ( RMSe / DS ) / ( MUM + RCSe ) ) ) ) ,( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( RRS * FirstVNF_Mem ) - ( CRS - CRS ) ),( ( MRS * FirstVNF_CPU ) / ( MRS * DDR ) ) )", "choosing": "( ( ( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) ) - Max( DS,MUM ) ) / Max( Max( DS,RMSe ),Max( MUC,MUR ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7505653767594078}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,DS ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.33131933140946757}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 0.781496062992126, "obj2": 0.10743406963377797}, {"determining": "Max( ( MDR - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( RMSe ,DS ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.39838892583499746}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / FirstVNF_RAM_Server )", "choosing": "( Min( MUC ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.468503937007874, "obj2": 0.3009781877489721}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / DS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 0.17125984251968504, "obj2": 0.5921196607903775}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.16684157401538638}, {"determining": "( ( ( Const - ( Const / AMS ) ) - Min( RRS ,CRS ) ) * Max( ( FirstVNF_Mem / DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RRSe - CS ),( MUC * RRSe ) ),( Min( RRSe ,MUM ) / RMSe ) ) )", "obj1": 0.2952755905511811, "obj2": 0.46525855260083937}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( RRSe - Min( MLU ,RCSe ) )", "obj1": 0.5275590551181102, "obj2": 0.2672950894319356}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( Min( FirstVNF_RAM_Server ,Const ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.06299212598425197, "obj2": 0.6827006879689292}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RMSe ,DS ) - Max( RCSe,MLU ) )", "obj1": 0.6476377952755905, "obj2": 0.25716930373161384}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.8956692913385826, "obj2": 0.057357104639406124}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( MUM / RCSe ) / RMSe ) * ( DS * MUR ) )", "obj1": 0.6338582677165354, "obj2": 0.26004544012789654}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.533426582843629}, {"determining": "( FirstVNF_RAM_Server / ( ( ARS - Const ) * ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MUC + Min( MUR ,MUC ) ) ,CS ) )", "obj1": 0.3405511811023622, "obj2": 0.441901637556727}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4999098985054228}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 0.8169291338582677, "obj2": 0.08715194251401558}, {"determining": "Max( AMS,( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.17716535433070865, "obj2": 0.5604191868377553}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( RRSe - Min( MLU ,RCSe ) )", "obj1": 0.5275590551181102, "obj2": 0.2672950894319356}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * ( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5113170145267549}, {"determining": "Min( ( FirstVNF_CPU / Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) ) ) ,Min( ARS ,Max( FirstVNF_CPU_Server,AMS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( MLU ,CS ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.41663134213746844}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3562992125984252, "obj2": 0.4314871533803285}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.9232283464566929, "obj2": 0.033617852285868825}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 0.8070866141732284, "obj2": 0.09095557674566779}, {"determining": "( ( FirstVNF_RAM_Server / ( DDR * FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( Min( RRSe ,MUC ) + Min( MUR ,MUC ) )", "obj1": 0.9625984251968503, "obj2": 0.01600169627230138}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) ) + Min( MUR ,MUC ) )", "obj1": 0.9448818897637795, "obj2": 0.023757495019863375}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06496062992125984, "obj2": 0.6550315479956984}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 0.8169291338582677, "obj2": 0.08715194251401558}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( Min( RRSe ,MUR ) + Min( MUR ,MUC ) )", "obj1": 0.9192913385826772, "obj2": 0.048959191774368506}, {"determining": "( ( FirstVNF_RAM_Server / ( DDR * FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.6386116576316978}, {"determining": "( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * ( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5113170145267549}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.051976207353091324}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( ( MLU + CS ) - ( MLU + RCSe ) ),Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( Max( ( RRSe - MUC ),( MLU + MLU ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.004842429919276873}, {"determining": "( ( FirstVNF_RAM_Server / ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + Max( BR,Min( FirstVNF_RAM_Server ,Const ) ) ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.08070866141732283, "obj2": 0.6451851935055463}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( MUR / DS ) )", "obj1": 0.08464566929133858, "obj2": 0.6405673507642486}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * ( DDR / RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( MUM,( MLU / RMSe ) ) * Min( MLU ,MUR ) ) ,( Max( ( RRSe - MUC ),( MLU + MLU ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.0044581676145661}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.952755905511811, "obj2": 0.02122549406043968}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( DDR / FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUR ) + Min( ( MUM / RCSe ) ,RMSe ) )", "obj1": 0.9586614173228346, "obj2": 0.01908717984458366}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( ( MLU + CS ) - ( MLU + RCSe ) ),Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( Max( ( RRSe - MUC ),( MLU + MLU ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.004842429919276873}, {"determining": "Max( ( MDR - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.650531436931985}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07480314960629922, "obj2": 0.6488251869015066}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( Max( MLU,RCSe ) ,RMSe ) ,MUM ) )", "obj1": 0.812992125984252, "obj2": 0.09008730717720773}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07480314960629922, "obj2": 0.6488251869015066}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 0.8149606299212598, "obj2": 0.08839534492636412}], "4": [{"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( ( ( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) ) + Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( Const / CRS ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04921259842519685, "obj2": 0.7256812438069766}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( MUC + CS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.1436254588506734}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / FirstVNF_RAM_Server )", "choosing": "( Min( MUC ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.468503937007874, "obj2": 0.3009781877489721}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / DS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 0.17125984251968504, "obj2": 0.5921196607903775}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( RRSe - Min( MLU ,RCSe ) )", "obj1": 0.5275590551181102, "obj2": 0.2672950894319356}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) / ( ACS - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) - ( RRSe * RMSe ) ) * ( Max( MUM,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1780278981170537}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( PN * ARS ) ) / FirstVNF_Mem )", "choosing": "( ( MLU - CS ) + ( Max( RCSe,MLU ) / MUM ) )", "obj1": 0.8149606299212598, "obj2": 0.08585916751158525}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.4409448818897638, "obj2": 0.37778646474592037}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( MUM / RCSe ) / RMSe ) * ( DS * MUR ) )", "obj1": 0.6338582677165354, "obj2": 0.26004544012789654}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) )", "obj1": 0.6377952755905512, "obj2": 0.2596677070213333}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05708661417322835, "obj2": 0.6729738090931763}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 0.781496062992126, "obj2": 0.10743406963377797}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.8956692913385826, "obj2": 0.057357104639406124}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / PN ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.33131933140946757}, {"determining": "( ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / CS ) ) )", "obj1": 0.328740157480315, "obj2": 0.44912880229551866}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) )", "obj1": 0.2736220472440945, "obj2": 0.4913112274643891}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Min( RMSe ,DS ) - CS )", "obj1": 0.3956692913385827, "obj2": 0.3867981133707405}, {"determining": "Max( ( MDR - FirstVNF_RAM ),Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( RMSe / RCSe ) - CS )", "obj1": 0.2440944881889764, "obj2": 0.5204840060908316}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( RRSe - Min( MLU ,RCSe ) )", "obj1": 0.5275590551181102, "obj2": 0.2672950894319356}, {"determining": "( ( FirstVNF_RAM_Server / ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + Max( BR,Min( FirstVNF_RAM_Server ,Const ) ) ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) )", "obj1": 0.2952755905511811, "obj2": 0.46525855260083937}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 0.781496062992126, "obj2": 0.10743406963377797}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.35039370078740156, "obj2": 0.42350582540310794}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( FirstVNF_RAM_Server / ( ( ARS - Const ) * ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MUC + Min( MUR ,MUC ) ) ,CS ) )", "obj1": 0.3405511811023622, "obj2": 0.441901637556727}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.9232283464566929, "obj2": 0.033617852285868825}, {"determining": "Max( AMS,( Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * Min( RRSe ,MUR ) ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.17716535433070865, "obj2": 0.5604191868377553}, {"determining": "( ( FirstVNF_RAM * MDR ) / ( DDR - ACS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,CS ) * ( RRSe * RMSe ) ) * ( Max( MUM,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5325043132654971}, {"determining": "( ( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) ) * ( RRS * ( RRS / Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) / DS ) )", "obj1": 0.08464566929133858, "obj2": 0.6370808192335211}, {"determining": "( Const / ( ACS * ARS ) )", "choosing": "( ( MLU / CS ) + Min( ( MUC + ( MUR * MUC ) ) ,MUM ) )", "obj1": 0.7992125984251969, "obj2": 0.09377088782812205}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,DS ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.33131933140946757}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.8956692913385826, "obj2": 0.057357104639406124}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "Max( ( PN * BR ),( CRS - ( ARS * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,RRSe ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5470553438658328}, {"determining": "( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( Min( RMSe ,DS ) - CS ) )", "obj1": 0.25984251968503935, "obj2": 0.49410474744532107}, {"determining": "( ( ( Const - ( Const / AMS ) ) - Min( RRS ,CRS ) ) * Max( ( FirstVNF_Mem / DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RRSe - CS ),( MUC * RRSe ) ),( Min( RRSe ,MUM ) / RMSe ) ) )", "obj1": 0.2952755905511811, "obj2": 0.46525855260083937}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.06496062992125984, "obj2": 0.6515227940640285}, {"determining": "( ( PN - CRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + Max( Min( MLU ,RMSe ),MUM ) )", "obj1": 0.9724409448818898, "obj2": 0.007401584332561696}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.16684157401538638}, {"determining": "Max( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( FirstVNF_Mem + RRS ) ) * PN ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( ( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * ( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - DS ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ) ,DS ) - CS )", "obj1": 0.38779527559055116, "obj2": 0.390884081923255}, {"determining": "( ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) ) / ( AMS - BR ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( ( Min( RMSe ,DS ) - CS ),DS ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.030391827900750637}, {"determining": "( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * ( Max( Min( Min( MUM ,MUR ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5113170145267549}, {"determining": "Min( ( FirstVNF_CPU / Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.411917458460391}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( Max( ( ( DS * CS ) * ( MUC - MUR ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.90748031496063, "obj2": 0.044253772377505954}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Min( RMSe ,DS ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.39838892583499746}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.045216772530741356}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.16684157401538638}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}], "5": [{"determining": "( ( FirstVNF_RAM_Server / ( Const / CRS ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04921259842519685, "obj2": 0.7256812438069766}, {"determining": "( ( ( Const - ( Const / AMS ) ) - Min( RRS ,CRS ) ) * Max( ( FirstVNF_Mem / DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RRSe - CS ),( MUC * RRSe ) ),( Min( RRSe ,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( ( ( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Min( RRSe ,DS ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) ) + Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( Const / CRS ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04921259842519685, "obj2": 0.7256812438069766}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( ( ( DS * Min( RRSe ,MUR ) ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.45866141732283466, "obj2": 0.2687177656828568}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( PN - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( RMSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.8956692913385826, "obj2": 0.057023300763860744}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( PN * ARS ) ) / FirstVNF_Mem )", "choosing": "( ( MLU - CS ) + ( Max( RCSe,MLU ) / MUM ) )", "obj1": 0.8149606299212598, "obj2": 0.08585916751158525}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( RRSe - Min( MLU ,RCSe ) )", "obj1": 0.5275590551181102, "obj2": 0.2672950894319356}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( RRS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * Max( MUC,CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.12316438978882989}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.5885826771653543, "obj2": 0.21520526575018598}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.4409448818897638, "obj2": 0.37778646474592037}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05708661417322835, "obj2": 0.6729738090931763}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,MUC ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.6259842519685039, "obj2": 0.21518687521932706}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + Min( ( MUC + Min( MUR ,MUC ) ) ,CS ) )", "obj1": 0.7716535433070866, "obj2": 0.10702307074210236}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.33131933140946757}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) / ( ACS - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) - ( RRSe * RMSe ) ) * ( Max( MUM,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1780278981170537}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / PN ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.33131933140946757}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( MUC + CS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.1436254588506734}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS / BR ) )", "choosing": "( Min( RMSe ,DS ) - RCSe )", "obj1": 0.39763779527559057, "obj2": 0.3809075963950511}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( RRSe - Min( MLU ,RCSe ) )", "obj1": 0.5275590551181102, "obj2": 0.2672950894319356}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.5885826771653543, "obj2": 0.21520526575018598}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUM * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.4504358197496323}, {"determining": "( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( Min( RMSe ,DS ) - CS ) )", "obj1": 0.25, "obj2": 0.5045789567865486}, {"determining": "( FirstVNF_RAM_Server / ( ( ARS - Const ) * ( Const * Const ) ) )", "choosing": "( ( ( ( RRSe - CS ) * ( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.1732283464566929, "obj2": 0.5665134686538021}, {"determining": "( ( FirstVNF_RAM * MDR ) / ( DDR - ACS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,CS ) * ( RRSe * RMSe ) ) * ( Max( MUM,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5325043132654971}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Min( RMSe ,DS ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.39838892583499746}, {"determining": "Max( ( MDR - FirstVNF_RAM ),Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( RMSe / RCSe ) - CS )", "obj1": 0.2421259842519685, "obj2": 0.5255593516853303}, {"determining": "( RRS * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( ( MUR * MUR ),MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.6367576546514552}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * CS ) * ( MUC - MUR ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.7007874015748031, "obj2": 0.14442436161013014}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM_Server * BR ) ) / ( AMS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( ( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.3865300869673986}, {"determining": "( FirstVNF_RAM_Server / ( ( ARS - Const ) * ( PN * Const ) ) )", "choosing": "( Max( MLU,CS ) + Min( ( MUC + Min( MUR ,MUC ) ) ,CS ) )", "obj1": 0.281496062992126, "obj2": 0.47879028708076543}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Max( Max( MUM,MUM ),( RRSe * RCSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "( ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) ) / ( AMS - BR ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( ( Min( RMSe ,DS ) - CS ),DS ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.030391827900750637}, {"determining": "( ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / CS ) ) )", "obj1": 0.328740157480315, "obj2": 0.44912880229551866}, {"determining": "Min( ( FirstVNF_CPU / Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.411917458460391}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.006899565969893951}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4158116643494824}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.16684157401538638}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6587661556792654}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.9232283464566929, "obj2": 0.033617852285868825}, {"determining": "Max( ( MDR - FirstVNF_RAM ),Max( ( FirstVNF_Mem - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( RMSe / RCSe ) - CS )", "obj1": 0.2440944881889764, "obj2": 0.5204840060908316}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.2559055118110236, "obj2": 0.48921666745792863}, {"determining": "( FirstVNF_RAM_Server / ( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + MDR ) + RRS ) ),PN ) * ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( Min( MLU ,CS ) + Min( RMSe ,CS ) )", "obj1": 0.3425196850393701, "obj2": 0.43445118632058655}, {"determining": "Max( AMS,( Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * Min( RRSe ,MUR ) ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.17716535433070865, "obj2": 0.5604191868377553}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Const ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + Min( Max( RCSe,( MLU / RRSe ) ) ,MUM ) )", "obj1": 0.33661417322834647, "obj2": 0.4395303588253217}], "6": [{"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( RRS * ( DDR / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MUR,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( RRSe ,RMSe ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - ( Const / AMS ) ) - Min( RRS ,CRS ) ) * Max( ( FirstVNF_Mem / DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RRSe - CS ),( MUC * RRSe ) ),( Min( RRSe ,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( Const / CRS ) ) * ( RRS * ( RRS / ( FirstVNF_RAM_Server / ( ( ARS - Const ) * ( FirstVNF_RAM_Server * Const ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.047244094488188976, "obj2": 0.718361859983774}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.5610236220472441, "obj2": 0.24084090950252604}, {"determining": "( ( FirstVNF_RAM * ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) / ( AMS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3448263903225968}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( PN - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( RMSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) * CS ) )", "obj1": 0.4625984251968504, "obj2": 0.26085332137740497}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Max( Max( MUM,MUM ),( RRSe * RCSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.27542750092209656}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Min( RCSe ,DS ) - CS )", "obj1": 0.4035433070866142, "obj2": 0.37724149592869455}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,MUC ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.6259842519685039, "obj2": 0.21518687521932706}, {"determining": "( Max( Max( ( ACS - ARS ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) - CS ) )", "obj1": 0.23622047244094488, "obj2": 0.5134881051165634}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Min( RMSe ,DS ) - CS )", "obj1": 0.8405511811023622, "obj2": 0.07532619656034416}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.4504358197496323}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / PN ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.5885826771653543, "obj2": 0.21520526575018598}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( PN * ARS ) ) / FirstVNF_Mem )", "choosing": "( ( MLU - CS ) + ( Max( RCSe,MLU ) / MUM ) )", "obj1": 0.20866141732283464, "obj2": 0.5288296009136044}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * CS ) * ( MUC - MUR ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.7047244094488189, "obj2": 0.13844474751563593}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05708661417322835, "obj2": 0.6729738090931763}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ) / ( AMS - BR ) )", "choosing": "( Min( RMSe ,RCSe ) - CS )", "obj1": 0.8110236220472441, "obj2": 0.094988897759725}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * Min( MUC ,CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.17855591604759896}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ARS ) )", "choosing": "( Max( ( ( DS * ( Min( ( MUM / RCSe ) ,RMSe ) * ( Min( RMSe ,DS ) - CS ) ) ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.025547953708575256}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.045216772530741356}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.9232283464566929, "obj2": 0.033617852285868825}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUM * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4702431756047937}, {"determining": "Min( ( FirstVNF_CPU / Max( Min( ( MRS * ARS ) ,( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) + ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3405511811023622, "obj2": 0.4272865742238284}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4158116643494824}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( Const - ( Const / AMS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + Max( Min( MLU ,( MLU / CS ) ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.49948304701196233}, {"determining": "( Min( ( ACS - FirstVNF_RAM_Server ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RCSe + CS ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5620976931325291}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.8956692913385826, "obj2": 0.057023300763860744}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( PN * ARS ) ) / FirstVNF_Mem )", "choosing": "( ( MLU - CS ) + ( Max( RCSe,MLU ) / MUM ) )", "obj1": 0.8149606299212598, "obj2": 0.08585916751158525}, {"determining": "( ( ( Const - ( Const / AMS ) ) - Min( RRS ,CRS ) ) * Max( ( FirstVNF_Mem / DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RRSe - CS ),( MUC * RRSe ) ),( Min( RRSe ,MUM ) / RMSe ) ) )", "obj1": 0.8622047244094488, "obj2": 0.06424105790832736}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + Min( ( MUC + Min( MUR ,MUC ) ) ,CS ) )", "obj1": 0.7716535433070866, "obj2": 0.10702307074210236}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS * ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RRSe + CS ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.14801302357658067}, {"determining": "( ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / CS ) ) )", "obj1": 0.328740157480315, "obj2": 0.44912880229551866}, {"determining": "( Const / ( CRS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( RMSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "Min( ( FirstVNF_CPU / Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.411917458460391}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( RRS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * Max( MUC,CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7421259842519685, "obj2": 0.12316438978882989}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) / ( ACS - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) - ( RRSe * RMSe ) ) * ( Max( MUM,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1780278981170537}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.16684157401538638}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + Min( RMSe ,CS ) )", "obj1": 0.7519685039370079, "obj2": 0.1159166692200957}, {"determining": "( RRS * ( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( ( ( RRSe * RMSe ) * MUR ),MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.09448818897637795, "obj2": 0.6352970089103166}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.0063806937565431526}, {"determining": "( ( ( Const - ( Const / AMS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( MUC * RRSe ) ),( Min( RRSe ,MUM ) / RMSe ) ) )", "obj1": 0.8740157480314961, "obj2": 0.0576842591400245}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.2559055118110236, "obj2": 0.48921666745792863}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.47883725556329704}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM_Server * BR ) ) / ( AMS - ARS ) )", "choosing": "( Max( ( ( DS * Min( RRSe ,MUR ) ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( CS + MUC ) )", "obj1": 0.765748031496063, "obj2": 0.1100081893774825}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Max( Max( MUM,MUM ),( RRSe * RCSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.1552597333759202}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS / BR ) )", "choosing": "( Min( RMSe ,DS ) - RCSe )", "obj1": 0.39763779527559057, "obj2": 0.3809075963950511}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05708661417322835, "obj2": 0.6729738090931763}], "7": [{"determining": "( Const / ( CRS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( RMSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( RRS * ( DDR / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MUR,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( RRSe ,RMSe ) ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( FirstVNF_Mem * FirstVNF_Mem ) * FirstVNF_RAM ) / Const ) ) )", "choosing": "Max( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RMSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7472757932447445}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.5610236220472441, "obj2": 0.24084090950252604}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) * CS ) )", "obj1": 0.4625984251968504, "obj2": 0.26085332137740497}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( PN - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( RMSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( FirstVNF_RAM * ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) / ( AMS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3448263903225968}, {"determining": "( ( FirstVNF_RAM_Server / ( Const / CRS ) ) * ( RRS * ( RRS / ( FirstVNF_RAM_Server / ( ( ARS - Const ) * ( FirstVNF_RAM_Server * Const ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.047244094488188976, "obj2": 0.718361859983774}, {"determining": "( ( FirstVNF_RAM * ACS ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( MUM,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.27542750092209656}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.5885826771653543, "obj2": 0.21520526575018598}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Min( RCSe ,DS ) - CS )", "obj1": 0.4035433070866142, "obj2": 0.37724149592869455}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( FirstVNF_RAM_Server - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( MUC - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6466348580904498}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,MUC ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.6259842519685039, "obj2": 0.21518687521932706}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / PN ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( Max( Max( ( ACS - ARS ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05708661417322835, "obj2": 0.6729738090931763}, {"determining": "Min( ( FirstVNF_CPU / Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - ( ACS - ARS ) ) - ( ACS - FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),MUM ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.328740157480315, "obj2": 0.4312322410808964}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.0063806937565431526}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.045135088466841174}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.17855591604759896}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.9232283464566929, "obj2": 0.033617852285868825}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Max( Max( MUM,MUM ),( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5339628143472354}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / PN ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.08858267716535433, "obj2": 0.6274999468478382}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.4504358197496323}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.8956692913385826, "obj2": 0.057023300763860744}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUM * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6230928166627068}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( Min( ( ACS - FirstVNF_RAM_Server ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RCSe + CS ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5620976931325291}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.4504358197496323}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05708661417322835, "obj2": 0.6729738090931763}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3448263903225968}, {"determining": "( ( ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) + RRS ) / ( FirstVNF_Mem + ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( Max( DS,RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ARS ) )", "choosing": "( Max( ( ( DS * ( Min( ( MUM / RCSe ) ,RMSe ) * ( Min( RMSe ,DS ) - CS ) ) ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + Min( Min( MLU ,RMSe ) ,MUM ) ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.025547953708575256}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.2559055118110236, "obj2": 0.48921666745792863}, {"determining": "( Max( Max( ( ACS - ARS ),( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) - CS ) )", "obj1": 0.20866141732283464, "obj2": 0.5221819780610314}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1302564696269088}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4158116643494824}, {"determining": "Min( ( ( ACS - ARS ) / Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( MUR ,CS ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.09998611956997329}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5532827812402872}, {"determining": "( ( ( ACS - ARS ) * DDR ) / ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Max( Max( MUM,DS ),( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.17519605350506315}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.16650639866665484}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / CS ) ) )", "obj1": 0.8326771653543307, "obj2": 0.0811479462979303}, {"determining": "( ( ( Const - ( Const / AMS ) ) - Min( RRS ,CRS ) ) * Max( ( FirstVNF_Mem / DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06597605944114764}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.38779527559055116, "obj2": 0.38594686786466065}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( PN * ARS ) ) / FirstVNF_Mem )", "choosing": "( ( MLU - CS ) + ( Max( RCSe,MLU ) / MUM ) )", "obj1": 0.8149606299212598, "obj2": 0.08585916751158525}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.4258424181907967}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( Const - ( Const / AMS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + Max( Min( MLU ,( MLU / CS ) ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.49948304701196233}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( CS * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.687007874015748, "obj2": 0.1499975175426433}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.16684157401538638}, {"determining": "( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4702431756047937}, {"determining": "( ( ( Const - ( Const / AMS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const + ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.07427680414186527}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Min( RMSe ,DS ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.39838892583499746}], "8": [{"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( FirstVNF_Mem * FirstVNF_Mem ) * FirstVNF_RAM ) / Const ) ) )", "choosing": "Max( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RMSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7472757932447445}, {"determining": "( Const / ( ACS - ( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( CRS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( RMSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( FirstVNF_Mem * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "Max( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7472757932447445}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.20689119317763807}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.23615463262401634}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.1302564696269088}, {"determining": "( ( ( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server - ARS ) ) * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Min( RMSe ,( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) - CS )", "obj1": 0.4271653543307087, "obj2": 0.36917386675629266}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.28806541252907375}, {"determining": "( DDR * Max( RRS,( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( MLU - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1062992125984252, "obj2": 0.6134620137595764}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,( Max( RMSe,MUM ) / Max( RMSe,MUM ) ) ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.7736220472440944, "obj2": 0.10724242495119789}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * CS ) )", "obj1": 0.47244094488188976, "obj2": 0.25404169147135874}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( Max( FirstVNF_Mem,DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.05628553135878721}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.045135088466841174}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * CRS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( Max( Max( ( ACS - ARS ),( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05511811023622047, "obj2": 0.6941098297160297}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.0063806937565431526}, {"determining": "( ( ( FirstVNF_RAM * Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + RRS ) + RRS ) ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( Min( ( MUM / RCSe ) ,RMSe ) * ( Min( RMSe ,DS ) - CS ) ) * ( MUC - CS ) ) )", "obj1": 0.24606299212598426, "obj2": 0.49706121441870726}, {"determining": "( FirstVNF_CPU_Server / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( CS * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe / CS ) ) ) )", "obj1": 0.687007874015748, "obj2": 0.1499975175426433}, {"determining": "( Max( Max( ( ACS - ARS ),( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) - CS ) )", "obj1": 0.20866141732283464, "obj2": 0.5221819780610314}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.9232283464566929, "obj2": 0.033617852285868825}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16211906763819312}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.937007874015748, "obj2": 0.021382759576910722}, {"determining": "( ( FirstVNF_RAM_Server / ( Const / CRS ) ) * ( RRS * ( RRS / ( FirstVNF_RAM_Server / ( ( ARS - Const ) * ( FirstVNF_RAM_Server * Const ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.047244094488188976, "obj2": 0.718361859983774}, {"determining": "( Min( ( ACS - FirstVNF_RAM_Server ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RCSe + CS ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5620976931325291}, {"determining": "( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + ( Max( ( ( DS * RCSe ) * ( ( MLU / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5138090516081593}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / Max( Max( RRSe,MLU ),( MLU * RRSe ) ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.08612608342894437}, {"determining": "( ( ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) + RRS ) / ( FirstVNF_Mem + ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( Max( DS,RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05708661417322835, "obj2": 0.6704297599865406}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5532827812402872}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.0688976377952756, "obj2": 0.6514667908610785}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.47577124240567586}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - DDR )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Max( Max( MUM,MUM ),( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) ) ) - CS ) )", "obj1": 0.3188976377952756, "obj2": 0.44822968663954804}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( DS * RCSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4087332797818333}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.30118110236220474, "obj2": 0.4504358197496323}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.17855591604759896}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( PN - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( RMSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) / ( AMS - ARS ) ) ) * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05905511811023622, "obj2": 0.6664942787057242}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ACS - ACS ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( DS * ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) ) * ( MUC - CS ) ) )", "obj1": 0.29133858267716534, "obj2": 0.4658643048909891}, {"determining": "Min( ( ( ACS - ARS ) / Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( MUR ,CS ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.09998611956997329}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( CS * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.687007874015748, "obj2": 0.1499975175426433}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * Max( ( ACS - ARS ),( ( FirstVNF_Mem + RRS ) + RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6403958718141987}, {"determining": "( ( FirstVNF_RAM_Server / ( Const / CRS ) ) * ( RRS * ( RRS / ( FirstVNF_RAM_Server / ( ( ARS - Const ) * ( FirstVNF_RAM_Server * Const ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.047244094488188976, "obj2": 0.718361859983774}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.2637795275590551, "obj2": 0.486391088202729}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Max( Max( MUM,MUM ),( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5339628143472354}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / ACS )", "choosing": "( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5181803588062397}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) ) - BR ) )", "choosing": "( ( Min( RMSe ,DS ) - CS ) - CS )", "obj1": 0.33858267716535434, "obj2": 0.4227341339389117}, {"determining": "( ( ( ACS - ARS ) / BR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( RCSe,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( CS * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.55528559495276}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.16684157401538638}], "9": [{"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( FirstVNF_Mem * FirstVNF_Mem ) * FirstVNF_RAM ) / Const ) ) )", "choosing": "Max( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RMSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7472757932447445}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( Min( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) ,BR ) / FirstVNF_Mem ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),Min( CS ,CS ) ) / ( ( RCSe / RMSe ) / ( MUR * MUR ) ) ) ),Min( ( RRSe - MUC ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ACS - ( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) ) ) )", "choosing": "( ( MLU / CS ) + Max( Max( ( RCSe - CS ),( CS * RRSe ) ),Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( FirstVNF_Mem * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "Max( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7472757932447445}, {"determining": "( ( ( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server - ARS ) ) * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "( Min( RMSe ,( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) - CS )", "obj1": 0.42322834645669294, "obj2": 0.3945414785121689}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.20689119317763807}, {"determining": "( DDR * Max( RRS,( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( MLU - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1062992125984252, "obj2": 0.6134620137595764}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.2909474006755638}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.23615463262401634}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * Max( ( ACS - ARS ),( ( FirstVNF_Mem + RRS ) + RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6403958718141987}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( MUC + Min( MUR ,( Max( RMSe,MUM ) / Max( RMSe,MUM ) ) ) ) ) * CS ) )", "obj1": 0.2933070866141732, "obj2": 0.434868122554394}, {"determining": "( ( ( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server - ARS ) ) * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5183334016617694}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS * ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( RMSe,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11230004854059494}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( PN - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( RMSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.06276079597494869}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.23615463262401634}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * CS ) )", "obj1": 0.47244094488188976, "obj2": 0.25404169147135874}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ACS - ACS ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( DS * ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) ) * ( MUC - CS ) ) )", "obj1": 0.29133858267716534, "obj2": 0.4658643048909891}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.08343894020677294}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,( Max( RMSe,MUM ) / Max( RMSe,MUM ) ) ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.44291338582677164, "obj2": 0.28166453328274266}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( DS * RCSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4087332797818333}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( ACS / ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - MUR ) ),RCSe ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.13024806407899114}, {"determining": "( ( ( ( ( DDR * ( Max( ARS,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( CS / CS ) + Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.2590031782499264}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( Max( Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.937007874015748, "obj2": 0.021382759576910722}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - DDR )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.33070866141732286, "obj2": 0.43344733064316404}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.17855591604759896}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.16142840998871918}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( Max( FirstVNF_Mem,DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.05628553135878721}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14447629318235308}, {"determining": "( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5532827812402872}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.2637795275590551, "obj2": 0.486391088202729}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,BR ) / FirstVNF_Mem ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MLU,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) ) - BR ) )", "choosing": "( ( Min( RMSe ,DS ) - CS ) - CS )", "obj1": 0.33858267716535434, "obj2": 0.4227341339389117}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.045135088466841174}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( FirstVNF_Mem * FirstVNF_Mem ) * FirstVNF_RAM_Server ) / Const ) ) )", "choosing": "( ( Min( RMSe ,DS ) - CS ) - CS )", "obj1": 0.3562992125984252, "obj2": 0.4168341110361712}, {"determining": "( ( ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) + RRS ) / ( FirstVNF_Mem + ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( Max( DS,RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( FirstVNF_RAM_Server / ( Const / CRS ) ) * DDR )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7206578505750336}, {"determining": "( DDR * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / DS ) ) ),Min( MUR ,RMSe ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.051181102362204724, "obj2": 0.6964712020221437}, {"determining": "( Max( Max( ( ACS - ARS ),( ( PN - ( FirstVNF_RAM_Server * BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05511811023622047, "obj2": 0.6931755140473567}, {"determining": "( ( ( FirstVNF_RAM * Max( ( FirstVNF_Mem - FirstVNF_RAM ),( ( FirstVNF_Mem + RRS ) + RRS ) ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + ( ( Min( ( MUM / RCSe ) ,RMSe ) * ( Min( RMSe ,DS ) - CS ) ) * ( MUC - CS ) ) )", "obj1": 0.24606299212598426, "obj2": 0.49706121441870726}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / ACS )", "choosing": "( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5181803588062397}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05708661417322835, "obj2": 0.6704297599865406}, {"determining": "( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / CS ) + ( Max( ( ( DS * RCSe ) * ( ( MLU / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5138090516081593}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * CRS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( ( ACS - ARS ) / BR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( RCSe,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( CS * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.55528559495276}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RMSe,DS ) - CS )", "obj1": 0.9232283464566929, "obj2": 0.033617852285868825}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.47577124240567586}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( CS * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.687007874015748, "obj2": 0.1499975175426433}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,( Max( RMSe,MUM ) / Max( RMSe,MUM ) ) ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.7736220472440944, "obj2": 0.10724242495119789}], "10": [{"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( FirstVNF_Mem * FirstVNF_Mem ) * FirstVNF_RAM ) / Const ) ) )", "choosing": "Max( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RMSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7472757932447445}, {"determining": "( ( BR / ( CRS - ( RRS + FirstVNF_RAM ) ) ) - Min( BR ,FirstVNF_RAM ) )", "choosing": "( Min( MUR ,RCSe ) / ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( Min( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) ,BR ) / FirstVNF_Mem ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),Min( CS ,CS ) ) / ( ( RCSe / RMSe ) / ( MUR * MUR ) ) ) ),Min( ( RRSe - MUC ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( RRS * ( ( ( FirstVNF_Mem * FirstVNF_Mem ) * FirstVNF_RAM ) / Const ) ) )", "choosing": "Max( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RMSe / DS ) / ( MUR * Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7472757932447445}, {"determining": "( Max( Max( Min( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - DDR )", "choosing": "( Min( ( MUM / RCSe ) ,Max( ( RRSe - MUC ),Min( CS ,CS ) ) ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.38976377952755903, "obj2": 0.38668429863235976}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.2909474006755638}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( MUC + Min( MUR ,( Max( RMSe,MUM ) / Max( RMSe,MUM ) ) ) ) ) * CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.20689119317763807}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.2267595132053907}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.47577124240567586}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) ) - BR ) )", "choosing": "( ( Min( RMSe ,DS ) - CS ) - CS )", "obj1": 0.33858267716535434, "obj2": 0.4227341339389117}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.17855591604759896}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * CRS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( ACS / ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - MUR ) ),RCSe ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.13024806407899114}, {"determining": "( ( ( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server - ARS ) ) * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5183334016617694}, {"determining": "( FirstVNF_RAM / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.19163701545909834}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( DDR * Max( RRS,( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( MLU - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1062992125984252, "obj2": 0.6134620137595764}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.4862204724409449, "obj2": 0.2492431618143277}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.0065488218186375395}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.17913385826771652, "obj2": 0.53467762526317}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( Max( FirstVNF_Mem,DDR ),( Const + ACS ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.8031496062992126, "obj2": 0.09426864999240296}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( DDR * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1062992125984252, "obj2": 0.6134620137595764}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MLU,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5469555778593627}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.16142840998871918}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14447629318235308}, {"determining": "( DDR * ( RRS * FirstVNF_Mem ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) ) ),Min( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) ,RMSe ) )", "obj1": 0.10039370078740158, "obj2": 0.6257685378885082}, {"determining": "( ( ( ( ( DDR * ( Max( ARS,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( CS / CS ) + Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.2590031782499264}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ( FirstVNF_CPU - RRS ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( RMSe,DS ) - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * CS ) )", "obj1": 0.16929133858267717, "obj2": 0.5656059172060652}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / ACS )", "choosing": "( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5181803588062397}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS * ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( RMSe,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11230004854059494}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),Min( CS ,CS ) ) / ( ( RCSe / RMSe ) / RRSe ) ) ),Min( ( RRSe - MUC ) ,RMSe ) )", "obj1": 0.44291338582677164, "obj2": 0.274185135524959}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,BR ) / FirstVNF_Mem ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MLU,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( RMSe,RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.6397876376989364}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - RRS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RMSe ) ) + ( ( MLU - MUC ) - ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) * CS ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.13412457534196862}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / CRS ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7206578505750336}, {"determining": "( Min( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ,DDR ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.16142840998871918}, {"determining": "( Max( Max( ( ACS - ARS ),( ( PN - Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04921259842519685, "obj2": 0.7008979384629812}, {"determining": "( ( FirstVNF_RAM_Server + ( DDR + FirstVNF_RAM ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - DS ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.2690934077984002}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( PN - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( RMSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.045135088466841174}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11230004854059494}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15115317763198668}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( DS * RCSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4087332797818333}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + Min( ( MUC + Min( MUR ,( Max( RMSe,MUM ) / Max( RMSe,MUM ) ) ) ) ,CS ) ) ) - Min( MLU ,RCSe ) )", "obj1": 0.7736220472440944, "obj2": 0.10724242495119789}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( DS * RCSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4087332797818333}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * FirstVNF_RAM_Server )", "choosing": "( ( Min( RMSe ,DS ) - ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) ) - CS )", "obj1": 0.2421259842519685, "obj2": 0.5131780681840793}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05708661417322835, "obj2": 0.6704297599865406}, {"determining": "( ( ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) + RRS ) / ( FirstVNF_Mem + ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( Max( DS,RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}], "11": [{"determining": "( ( PN - MRS ) - ( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS / BR ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( ( Min( RMSe ,DS ) - CS ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( CRS - ( RRS + FirstVNF_RAM ) ) ) - Min( BR ,FirstVNF_RAM ) )", "choosing": "( Min( MUR ,RCSe ) / ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( AMS / FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7265531100729863}, {"determining": "( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) ) ,CS ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.36547602089028725}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.47577124240567586}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.2909474006755638}, {"determining": "( Max( Max( Min( ( ( Const - ( ( FirstVNF_RAM_Server - ARS ) / CRS ) ) - Min( RRS ,CRS ) ) ,DDR ),( ( FirstVNF_Mem + RRS ) + RRS ) ),PN ) - DDR )", "choosing": "( Min( ( MUM / RCSe ) ,Max( ( RRSe - MUC ),Min( CS ,CS ) ) ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.38779527559055116, "obj2": 0.38584220047492046}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( ARS - PN ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + ( MUR / ( Max( RMSe,MUM ) / ( RMSe * MUM ) ) ) ) ),CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.23031496062992127, "obj2": 0.49594477075515075}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( Max( FirstVNF_Mem,DDR ),( Const + ACS ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - MUR ) ),RCSe ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06503837968436803}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.20689119317763807}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) + ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.039168509550100004}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.217989234269285}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( PN - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( RMSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( RMSe ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.2267595132053907}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.09011482921720541}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / ACS )", "choosing": "( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5181803588062397}, {"determining": "( DDR * Max( RRS,( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( MLU - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1062992125984252, "obj2": 0.6134620137595764}, {"determining": "( ( FirstVNF_RAM_Server - ( RRS * ARS ) ) / ( ( ARS - Const ) / Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MLU,MUR ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5333872667139647}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * CRS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS - BR ) ) - BR ) )", "choosing": "( ( Min( RMSe ,DS ) - CS ) - CS )", "obj1": 0.33858267716535434, "obj2": 0.4227341339389117}, {"determining": "( ( ( ( FirstVNF_RAM * DDR ) / ( FirstVNF_RAM_Server - ARS ) ) * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5183334016617694}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem ) ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) * ( RMSe + MUC ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.1669625209539387}, {"determining": "( DDR * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1062992125984252, "obj2": 0.6134620137595764}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.045135088466841174}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( DS * RCSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4087332797818333}, {"determining": "( Max( Max( ( ARS - Const ),( ( PN - Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUM,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05511811023622047, "obj2": 0.6975433026478768}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6338582677165354, "obj2": 0.17761927806589875}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - MRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7480314960629921, "obj2": 0.12406354539051885}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) ) - BR ) )", "choosing": "( ( Min( Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ,DS ) - CS ) - CS )", "obj1": 0.34448818897637795, "obj2": 0.4192420684800238}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05708661417322835, "obj2": 0.6704297599865406}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14447629318235308}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - RRS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RMSe ) ) + ( ( MLU - MUC ) - ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) * CS ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.13412457534196862}, {"determining": "( Max( Max( ( ACS - ARS ),( ( PN - Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04921259842519685, "obj2": 0.7008979384629812}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / CRS ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7206578505750336}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) - CS )", "obj1": 0.5059055118110236, "obj2": 0.23974691703441395}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,BR ) / FirstVNF_Mem ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.6443750067349712}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( MUC + Min( MUR ,( MUC - CS ) ) ) ) * CS ) )", "obj1": 0.4389763779527559, "obj2": 0.2791735404611408}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( DS * RCSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4087332797818333}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MLU,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5469555778593627}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem ) - Const ) * Max( ACS,Const ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) * ( ( Min( ( RRSe - CS ) ,Min( RCSe ,MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.47834645669291337, "obj2": 0.25016255297810247}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.0065488218186375395}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( ACS - ARS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.10228677084189718}, {"determining": "( ( ( ( ( DDR * ( Max( ARS,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( CS / CS ) + Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.2590031782499264}, {"determining": "( FirstVNF_RAM / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.19163701545909834}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.19163701545909834}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( MRS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Min( MLU ,MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.7322834645669292, "obj2": 0.12660980013804257}], "12": [{"determining": "( FirstVNF_RAM / ( ( ACS - ARS ) - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MRS ) - ( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( AMS / BR ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( ( Min( RMSe ,DS ) - CS ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( AMS / FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7265531100729863}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( RCSe / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3612820649798935}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "( MUC * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ),( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.38365110089620186}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( ARS - PN ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + ( MUR / ( Max( RMSe,MUM ) / ( RMSe * MUM ) ) ) ) ),CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.23031496062992127, "obj2": 0.49594477075515075}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.2909474006755638}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - MRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7480314960629921, "obj2": 0.12406354539051885}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.2795275590551181, "obj2": 0.4700353397630197}, {"determining": "( FirstVNF_RAM / ( ACS - ARS ) )", "choosing": "( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.05222521045952132}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem ) - Const ) * Max( ACS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1220472440944882, "obj2": 0.6008892094407889}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.16213959606512615}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.031976605103240706}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.20689119317763807}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,BR ) / FirstVNF_Mem ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR - MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.09448818897637795, "obj2": 0.63159398926736}, {"determining": "( ( ( ( AMS - BR ) / ( FirstVNF_RAM_Server - ARS ) ) * FirstVNF_RAM_Server ) / ( AMS - BR ) )", "choosing": "Max( ( Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1377952755905512, "obj2": 0.5865020082380696}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( ACS - ARS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.10228677084189718}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.08738576678537126}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - RRS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RMSe ) ) + ( ( MLU - MUC ) - ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) * CS ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.13412457534196862}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( MRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - RCSe ) )", "obj1": 0.22244094488188976, "obj2": 0.512973130311958}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( MUC + Min( MUR ,( Max( RMSe,MUM ) / Max( RMSe,MUM ) ) ) ) ) * CS ) )", "obj1": 0.44881889763779526, "obj2": 0.27137975643802126}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.47577124240567586}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05708661417322835, "obj2": 0.6704297599865406}, {"determining": "( ARS / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) / ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.594488188976378, "obj2": 0.19596077367940815}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15397587217728456}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * ( ACS - ARS ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( RRSe,MLU ) ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6817032134081613}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.27879531347481584}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( MRS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Min( MLU ,MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.7322834645669292, "obj2": 0.12660980013804257}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( Max( FirstVNF_Mem,DDR ),( Const - ACS ) ) )", "choosing": "( ( ( ( DS * RCSe ) * ( MUC - MUR ) ) + RCSe ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06503837968436803}, {"determining": "( ( FirstVNF_RAM_Server - ( RRS * ARS ) ) / ( ( ARS - Const ) / Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MLU,MUR ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5333872667139647}, {"determining": "( Max( Max( ( ACS - ARS ),( ( PN - Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04921259842519685, "obj2": 0.7008979384629812}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5451708160820243}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.21145596869188743}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( ( MUM / MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.21484494508052504}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( Min( MLU ,RMSe ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6338582677165354, "obj2": 0.17761927806589875}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( ACS - ARS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.10228677084189718}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.5673534889852138}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( ( ACS / BR ) / FirstVNF_Mem ) - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) * ( ( Max( RRSe,MLU ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.49015748031496065, "obj2": 0.24231809886615133}, {"determining": "( ( FirstVNF_RAM_Server + Max( DDR,FirstVNF_RAM ) ) * ( Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,BR ) / FirstVNF_Mem ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.045275590551181105, "obj2": 0.707899012487653}, {"determining": "( BR / ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( MUM / MUR ) ) / ( Min( MUR ,MUR ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8031496062992126, "obj2": 0.09075574225857484}, {"determining": "( DDR * ( RRS * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1062992125984252, "obj2": 0.6134620137595764}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1889763779527559, "obj2": 0.5235045459673374}, {"determining": "( Const / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14447629318235308}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.22478857841517283}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.5132262681498544}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6338582677165354, "obj2": 0.17761927806589875}], "13": [{"determining": "( FirstVNF_RAM / ( ( ACS - ARS ) * ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( MUC - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM / ( ( ACS - ARS ) - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( AMS / FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7265531100729863}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( ARS - PN ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + ( MUR / ( Max( RMSe,MUM ) / ( RMSe * MUM ) ) ) ) ),CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "( MUC * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ),( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.3283088762653198}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.33858267716535434, "obj2": 0.3826370688197118}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.031976605103240706}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "( MUC * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ),( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.38365110089620186}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.23031496062992127, "obj2": 0.49594477075515075}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( ( MUM / MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem ) - Const ) * Max( ACS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1220472440944882, "obj2": 0.6008892094407889}, {"determining": "( FirstVNF_RAM / ( ACS - ARS ) )", "choosing": "( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.05222521045952132}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( ACS - ARS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( ( RCSe / ( Max( ( RRSe + MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10677815733206944}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( DS * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS / MUR ) ) ) ,CS ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.3166024913017171}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) )", "obj1": 0.281496062992126, "obj2": 0.4679745414859772}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( ( MUM / MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.6394365558508457}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.29785725949558034}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04921259842519685, "obj2": 0.7006359425919183}, {"determining": "( ( ( ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( MLU / CS ) )", "obj1": 0.13582677165354332, "obj2": 0.5821434254932191}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * ARS ) ) / ( ( ARS - Const ) * Max( Max( FirstVNF_RAM_Server,Const ),Const ) ) )", "choosing": "( ( MLU / CS ) + ( ( MLU / CS ) + ( ( DS * RCSe ) * ( MUC - CS ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.48452372802460447}, {"determining": "( ( FirstVNF_RAM_Server - ( RRS * ARS ) ) / ( ( ARS - Const ) / Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MLU,MUR ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5333872667139647}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - RRS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RMSe ) ) + ( ( MLU - MUC ) - ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) * CS ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.13412457534196862}, {"determining": "( ( ( FirstVNF_RAM_Server + Const ) - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RCSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.5039700613263008}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * BR ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( ( RRSe - MUC ) * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.18700787401574803, "obj2": 0.5152675293812652}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( MRS - ARS ) ) - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUR ) * ( RRSe * RMSe ) ) * ( Max( RRSe,Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( RMSe + CS ) ) ) )", "obj1": 0.6456692913385826, "obj2": 0.17602905485472553}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) / ( ACS - ARS ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / RCSe ) ) ) )", "obj1": 0.8228346456692913, "obj2": 0.08494161651667402}, {"determining": "( Max( Max( ( ACS - ARS ),( ( PN - Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05511811023622047, "obj2": 0.6709219221997129}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( MRS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Min( MLU ,MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.7322834645669292, "obj2": 0.12660980013804257}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.15551181102362205, "obj2": 0.5673534889852138}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14173228346456693, "obj2": 0.5714200109024782}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - MRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7480314960629921, "obj2": 0.12406354539051885}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( ( ACS / BR ) / FirstVNF_Mem ) - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) * ( ( Max( RRSe,MLU ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.49015748031496065, "obj2": 0.24231809886615133}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.0065488218186375395}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.27879531347481584}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "Min( DS ,( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.19336842025002116}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05708661417322835, "obj2": 0.6704297599865406}, {"determining": "( BR / ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( MUM / MUR ) ) / ( Min( MUR ,MUR ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8031496062992126, "obj2": 0.09075574225857484}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.25697899848745404}, {"determining": "( ( FirstVNF_RAM_Server - ( CRS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( CS ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5451708160820243}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( Max( FirstVNF_Mem,DDR ),( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8720472440944882, "obj2": 0.06048796918232042}, {"determining": "( ( FirstVNF_RAM_Server - ( CRS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUC * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.23615463262401634}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.23387278373077336}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.4822834645669291, "obj2": 0.24917354433069436}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.5132262681498544}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU / CS ) + Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.2660575413026147}, {"determining": "( FirstVNF_RAM / ( ACS - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.6241330273186072}, {"determining": "( Const / Min( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ,BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2082182888254712}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5451708160820243}], "14": [{"determining": "( FirstVNF_RAM / ( ( ACS - ARS ) - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM / ( ( ACS - ARS ) * ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( MUC - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7437905067373196}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( ARS - PN ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + ( MUR / ( Max( RMSe,MUM ) / ( RMSe * MUM ) ) ) ) ),CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( Const / ( ( ( ( Max( FirstVNF_RAM,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "Max( ( Max( Min( Min( RCSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.2421259842519685, "obj2": 0.4590623365483185}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "( MUC * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ),( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.38365110089620186}, {"determining": "( ARS / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) - FirstVNF_Mem ) )", "choosing": "( Max( ( CS / MLU ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( RMSe + CS ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.15849463331045202}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1728765112708176}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14447629318235308}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.35051763252678436}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - ARS ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,RRSe ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.5555509873428789}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.29804319905606147}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( DS * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.341960025239391}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / BR ) / FirstVNF_Mem ) + ACS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,DS ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.051383471629365275}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( DS * MUR ) * ( MUC - CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.3777055905908642}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.031976605103240706}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.23622047244094488, "obj2": 0.4861406693939048}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( ( MUM / MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( Const / Min( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ,BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.2082182888254712}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.22122436077139102}, {"determining": "( ( ( FirstVNF_RAM_Server + Const ) - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RCSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.5039700613263008}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.031976605103240706}, {"determining": "( ( Const - ( CRS / AMS ) ) * Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( ACS - ARS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( ( RCSe - ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.102415581919651}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8011811023622047, "obj2": 0.08850765656672908}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) - ( ARS * ARS ) ) * FirstVNF_RAM_Server ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RRSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + Min( MUR ,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ),CS ) )", "obj1": 0.3956692913385827, "obj2": 0.32633359830352504}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( ACS - ARS ) )", "choosing": "Min( DS ,( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.19336842025002116}, {"determining": "( ( ( ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( MLU / CS ) )", "obj1": 0.13582677165354332, "obj2": 0.5821434254932191}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.4822834645669291, "obj2": 0.24917354433069436}, {"determining": "( ( ( DDR * ( ( Const * ARS ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( ( MLU / MUM ) ,RMSe ) )", "obj1": 0.1220472440944882, "obj2": 0.5917612091502118}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( ( ARS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( ( MLU / CS ) ,( MLU / CS ) )", "obj1": 0.8641732283464567, "obj2": 0.06299090496043287}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( MLU / CS ) + Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.27879531347481584}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.11023622047244094, "obj2": 0.611468794417135}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.29785725949558034}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - MRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7480314960629921, "obj2": 0.12406354539051885}, {"determining": "( Const / Min( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ,BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5570866141732284, "obj2": 0.20907324086403922}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.26905027811214804}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9606299212598425, "obj2": 0.014499057702152646}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( MRS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Min( MLU ,MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.7322834645669292, "obj2": 0.12660980013804257}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( Max( FirstVNF_Mem,DDR ),( Const - ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8720472440944882, "obj2": 0.06048796918232042}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( ( RMSe - RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7215064970853602}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "Min( DS ,( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.19336842025002116}, {"determining": "( ( ( DDR * FirstVNF_RAM_Server ) / ( MRS - ARS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6953874493254179}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.23031496062992127, "obj2": 0.49594477075515075}, {"determining": "( DDR / Min( ACS ,ARS ) )", "choosing": "( DS * ( MUC / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.11492008603994867}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6001727218109485}, {"determining": "( ( FirstVNF_RAM_Server - ( CRS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( CS ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5451708160820243}, {"determining": "( ( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.04921259842519685, "obj2": 0.7006359425919183}, {"determining": "( Max( Max( ( ACS - ARS ),( ( PN - Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05511811023622047, "obj2": 0.6709219221997129}, {"determining": "( ( FirstVNF_RAM_Server - ( RRS * ARS ) ) / ( ( ARS - Const ) / Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MLU,MUR ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5333872667139647}], "15": [{"determining": "( ( PN - MRS ) - Max( ( Max( DDR,FirstVNF_Mem ) * MDR ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * MLU ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / ( RMSe * MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM / ( ( ACS - ARS ) - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7437905067373196}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.4822834645669291, "obj2": 0.24917354433069436}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( ARS - PN ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + ( MUR / ( Max( RMSe,MUM ) / ( RMSe * MUM ) ) ) ) ),CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "( MUC * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ),( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.38365110089620186}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1728765112708176}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.4426100718564589}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.35051763252678436}, {"determining": "( ( ( FirstVNF_RAM_Server + Const ) - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RCSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.5039700613263008}, {"determining": "( ( Const - ( Const / AMS ) ) * ( ( CRS / FirstVNF_Mem_Server ) * ( Const + ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.051307785300516974}, {"determining": "( DDR / Min( ACS ,ARS ) )", "choosing": "( DS * ( MUC / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.11492008603994867}, {"determining": "( Const / ( ( ( ( Max( FirstVNF_RAM,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "Max( ( Max( Min( Min( RCSe ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.2421259842519685, "obj2": 0.4590623365483185}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.26905027811214804}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( DS * MUR ) * ( MUC - CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.3777055905908642}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.22122436077139102}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.3278890552376632}, {"determining": "( ( Const - ( CRS / AMS ) ) * Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( ACS - ARS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( ( RCSe - ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.102415581919651}, {"determining": "( ARS / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) - FirstVNF_Mem ) )", "choosing": "( Max( ( CS / MLU ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( RMSe + CS ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.15849463331045202}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) - ( ARS * ARS ) ) * FirstVNF_RAM_Server ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RRSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + Min( MUR ,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ),CS ) )", "obj1": 0.3956692913385827, "obj2": 0.32633359830352504}, {"determining": "( Max( Max( ( ACS - ARS ),( ( PN - Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,BR ) ) - ( ( ( ACS - ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05511811023622047, "obj2": 0.6709219221997129}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19881889763779528, "obj2": 0.533276200656466}, {"determining": "( ( Const - ( Const + AMS ) ) * Max( Max( FirstVNF_Mem,DDR ),( Const - ACS ) ) )", "choosing": "( DS * Min( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) ,( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.07583890812785028}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - ARS ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,RRSe ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.5555509873428789}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( ( RMSe - RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7215064970853602}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.29804319905606147}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.11023622047244094, "obj2": 0.611468794417135}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,DS ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.003438910433946243}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - Min( MUR ,CS ) ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.019709117946911228}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.22122436077139102}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( ( MUM / MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( ( ARS - RRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) + ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.036537677338544176}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / RMSe ) / ( ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6328180170394921}, {"determining": "( Const / Min( ( ( ( FirstVNF_RAM_Server - PN ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) ,BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),RCSe ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.20110382469716062}, {"determining": "( FirstVNF_RAM / ( ( ACS - ARS ) * ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( MUC - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7244094488188977, "obj2": 0.13025393441294603}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( ACS - ARS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15336504302339923}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( RRS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5417518832312566}, {"determining": "( ( ( ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( MLU / CS ) )", "obj1": 0.13582677165354332, "obj2": 0.5821434254932191}, {"determining": "( ( DDR / ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Min( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) ,( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MLU / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.5733964711344683}, {"determining": "( ( ( DDR * FirstVNF_RAM_Server ) / ( MRS - ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6926264963908386}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( MRS / ( CRS - ARS ) )", "choosing": "( ( ( Min( ( MUR - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8011811023622047, "obj2": 0.08850765656672908}, {"determining": "( ( ( DDR * ( ( Const * ARS ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( ( MLU / MUM ) ,RMSe ) )", "obj1": 0.1220472440944882, "obj2": 0.5917612091502118}, {"determining": "( ( Const - ( Const / AMS ) ) * Max( ( ARS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( ( MLU / CS ) ,( MLU / CS ) )", "obj1": 0.8641732283464567, "obj2": 0.06299090496043287}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( Max( RRSe,MLU ),MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6440502812261332}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) * ( ( FirstVNF_RAM_Server - ( RRS * ARS ) ) / ( ( ARS - Const ) / Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( Min( Min( MUM ,MUM ) ,Max( MLU,MUR ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.48513899653600967}, {"determining": "( DDR / ( ACS - ARS ) )", "choosing": "( DS * ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7362204724409449, "obj2": 0.12314737781978707}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14447629318235308}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.23031496062992127, "obj2": 0.49594477075515075}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "Min( DS ,( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.19336842025002116}], "16": [{"determining": "( ( DDR / ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Min( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) ,( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MLU / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MRS ) - Max( ( Max( DDR,FirstVNF_Mem ) * MDR ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * MLU ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / ( RMSe * MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7437905067373196}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( ARS - PN ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + ( MUR / ( Max( RMSe,MUM ) / ( RMSe * MUM ) ) ) ) ),CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "( MUC * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ),( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.38365110089620186}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( ( MLU / RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.24536961547576164}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1728765112708176}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.4426100718564589}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.35051763252678436}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5198204949438243}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( AMS * Const ) )", "choosing": "( ( Min( MUM ,Max( MUR,MLU ) ) + ( Max( ( Min( MUM ,MUM ) + Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.4912515940456018}, {"determining": "( DDR / Min( ACS ,ARS ) )", "choosing": "( DS * ( MUC / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.11492008603994867}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( ( RMSe - RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7215064970853602}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( DS * MUR ) * ( MUC - CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.3777055905908642}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( ACS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14381118452376143}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - FirstVNF_CPU ) * Max( RRS,Const ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RRSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.27511618309218844}, {"determining": "( ( ( FirstVNF_RAM_Server + Const ) - ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RCSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.5039700613263008}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5570866141732284, "obj2": 0.20907324086403922}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR - MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.291986089670636}, {"determining": "( Min( FirstVNF_RAM_Server ,( ARS * AMS ) ) / ( ACS - ARS ) )", "choosing": "Max( ( Max( Min( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUC ) ),MUM ) ,Max( MUR,RRSe ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6679239959386848}, {"determining": "( ( PN - MRS ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RRSe * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.008189694858573524}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - ARS ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,RRSe ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.5555509873428789}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.22122436077139102}, {"determining": "( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) - ( ARS * ARS ) ) * FirstVNF_RAM_Server ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Max( ( ( DS * RRSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + Min( MUR ,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ),CS ) )", "obj1": 0.3956692913385827, "obj2": 0.32633359830352504}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.4676246423254192}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / RMSe ) / ( ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) * MUR ) ) ) )", "obj1": 0.45866141732283466, "obj2": 0.2593694824938856}, {"determining": "( ( PN - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / CS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.3278890552376632}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.22122436077139102}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( ( MUM / MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) + ( Min( ( RRSe - Min( MUR ,CS ) ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03584426385784851}, {"determining": "( MRS / ( CRS - ARS ) )", "choosing": "( ( ( Min( ( MUR - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8011811023622047, "obj2": 0.08850765656672908}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( RRS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5417518832312566}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) * ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) ) - CS ) )", "obj1": 0.4822834645669291, "obj2": 0.24917354433069436}, {"determining": "( ( ( ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( MLU / CS ) )", "obj1": 0.13582677165354332, "obj2": 0.5821434254932191}, {"determining": "( ( FirstVNF_CPU - MRS ) / ( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * CS ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.04510298631209285}, {"determining": "( ( DDR / ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Min( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) ,( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MLU / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.5733964711344683}, {"determining": "( ( Const - ( CRS / AMS ) ) * Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( ACS - ARS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( ( RCSe - ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.102415581919651}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( Max( RRSe,MLU ),MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6440502812261332}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.018906615141810534}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.9389763779527559, "obj2": 0.03194480293825155}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5417518832312566}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.29804319905606147}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,DS ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.003438910433946243}, {"determining": "( ( ( DDR * FirstVNF_RAM_Server ) / ( MRS - ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6926264963908386}, {"determining": "( ( Const - ( Const / AMS ) ) * ( ( CRS / FirstVNF_Mem_Server ) * ( Const + ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.051307785300516974}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8188976377952756, "obj2": 0.08801130312812325}, {"determining": "( ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) * ( ( FirstVNF_Mem / ACS ) * ( Const - ACS ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( Max( Min( MUR ,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6926264963908386}, {"determining": "( ( Const - ( Const * AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "( ( MLU / RCSe ) + ( Min( ( RRSe - Min( MUR ,CS ) ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.06287552366638846}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * Max( FirstVNF_RAM,PN ) ) )", "choosing": "Max( ( Max( ( Max( MLU,( Max( RMSe,MUM ) / Max( RMSe,MUM ) ) ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.11614173228346457, "obj2": 0.6054662615194157}], "17": [{"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7437905067373196}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Min( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) ,( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MLU / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7437905067373196}, {"determining": "( ( PN - MRS ) - Max( ( Max( DDR,FirstVNF_Mem ) * MDR ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * MLU ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / ( RMSe * MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.10349939971631719}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( ARS - PN ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + ( MUR / ( Max( RMSe,MUM ) / ( RMSe * MUM ) ) ) ) ),CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( ACS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14381118452376143}, {"determining": "( ( Const - ( CRS / AMS ) ) * Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( ACS - ARS ) ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( ( RCSe - ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.102415581919651}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.4426100718564589}, {"determining": "( ( Const + ACS ) / ( ARS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( CS / MUC ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Max( MUM,MUM ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.1572543668827075}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ),Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,( MUM / RCSe ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.38785205617519897}, {"determining": "( ( PN - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / CS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.3278890552376632}, {"determining": "( ( FirstVNF_CPU - ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.20534678477568102}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1728765112708176}, {"determining": "( Const / ( ( ( ( DDR * ( ARS - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.3543307086614173, "obj2": 0.34365113882953696}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.4999144885947228}, {"determining": "( ( Const - ( Const * AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "( ( MLU / RCSe ) + ( Min( ( RRSe - Min( MUR ,CS ) ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.06287552366638846}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( DS * MUR ) * ( MUC - CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.3777055905908642}, {"determining": "( ( ( Const - ( Const / AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( ( RMSe - DS ) / RMSe ) ) ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.051181102362204724, "obj2": 0.7153116389208568}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR - MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.291986089670636}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.39173228346456695, "obj2": 0.30056045442642826}, {"determining": "( ( ( ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( MLU / CS ) )", "obj1": 0.13582677165354332, "obj2": 0.5821434254932191}, {"determining": "( ( PN - MRS ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RRSe * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.008189694858573524}, {"determining": "( FirstVNF_CPU_Server / Min( ACS ,ARS ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - Max( RCSe,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.0531496062992126, "obj2": 0.6749001138261607}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - ARS ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Max( MUM,MUM ) ,Max( MUR,RRSe ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.5555509873428789}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( AMS * Const ) )", "choosing": "( ( Min( MUM ,Max( MUR,MLU ) ) + ( Max( ( Min( MUM ,MUM ) + Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.4912515940456018}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.07724716282883451}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( ( MLU / RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.24536961547576164}, {"determining": "( ( FirstVNF_RAM_Server - ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) / ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,RMSe ) / ( ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) * MUR ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6176961072545473}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( RRS,Const ) ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.230363937471268}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( ( MUM / MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.4676246423254192}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5209304972537905}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8070866141732284, "obj2": 0.08737186055413201}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( DDR / Min( ACS ,ARS ) ) - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MUC - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.11811023622047244, "obj2": 0.6011665680183091}, {"determining": "( MRS / ( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) ) )", "choosing": "( ( Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) - CS ) - CS )", "obj1": 0.48031496062992124, "obj2": 0.24545830649408612}, {"determining": "( ( Const - ( Const / AMS ) ) * ( ( CRS / FirstVNF_Mem_Server ) * ( Const + ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.051307785300516974}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( RRS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5417518832312566}, {"determining": "( ( DDR / ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Min( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) ,( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MLU / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.5733964711344683}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( ( RMSe - RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7215064970853602}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5198204949438243}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.018906615141810534}, {"determining": "( Min( FirstVNF_RAM_Server ,( ARS * AMS ) ) / ( ACS - ARS ) )", "choosing": "Max( ( Max( Min( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUC ) ),MUM ) ,Max( MUR,RRSe ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6679239959386848}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.4676246423254192}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( AMS - ARS ) )", "choosing": "( MUC * ( ( ( ( ( DS * RCSe ) * ( MUC - CS ) ) * ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Min( ( MUM / RCSe ) ,RMSe ) * Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) ),( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.38365110089620186}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,DS ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.003438910433946243}, {"determining": "( MRS / ( CRS - ARS ) )", "choosing": "( ( ( Min( ( MUR - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8011811023622047, "obj2": 0.08850765656672908}, {"determining": "( ( FirstVNF_RAM_Server - ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,( ( RCSe / DS ) / ( MUR * MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.6309813161016221}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.2132537361053956}], "18": [{"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7437905067373196}, {"determining": "( MRS / ( ( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS ) - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),( MUM - CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7437905067373196}, {"determining": "( ( PN - MRS ) - Max( ( Max( DDR,FirstVNF_Mem ) * MDR ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * MLU ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / ( RMSe * MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.10349939971631719}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( ACS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14381118452376143}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,( RMSe / RCSe ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08808582085442214}, {"determining": "( ( Const - ( Const / AMS ) ) * ( ( CRS / FirstVNF_Mem_Server ) * ( Const + ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.051307785300516974}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.4426100718564589}, {"determining": "( ( FirstVNF_CPU - ( ( ( ( DDR * ( ARS * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2042368679226806}, {"determining": "( ( AMS - RRS ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUM * MUR ) ) ) ),( MLU / CS ) )", "obj1": 0.9311023622047244, "obj2": 0.027339798788871782}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ),Const ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.27511618309218844}, {"determining": "( Const / ( ( ( ( DDR * ( ARS - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.3543307086614173, "obj2": 0.34365113882953696}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,( CRS - ARS ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) + MDR ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( ( ( Min( ( MUR - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,RCSe ) + ( CS / RRSe ) ) ) - CS ) - CS ) * ( MUC - CS ) ) )", "obj1": 0.452755905511811, "obj2": 0.2641003968796022}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR - MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.291986089670636}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1728765112708176}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8070866141732284, "obj2": 0.08737186055413201}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( RRS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5417518832312566}, {"determining": "( Const / ( FirstVNF_RAM_Server / BR ) )", "choosing": "( DS * ( ( Max( RRSe,MLU ) - CS ) - CS ) )", "obj1": 0.0688976377952756, "obj2": 0.6296082529920639}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ),Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,( MUM / RCSe ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.38785205617519897}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) * FirstVNF_RAM_Server ) / ( ARS - PN ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / Max( ( Max( MUM,MUM ) * ( MUC + ( MUR / ( Max( RMSe,MUM ) / ( RMSe * MUM ) ) ) ) ),CS ) )", "obj1": 0.2874015748031496, "obj2": 0.4279204140236444}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.39173228346456695, "obj2": 0.30056045442642826}, {"determining": "( Const / ( ( ( ( DDR * ( ARS - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.29133858267716534, "obj2": 0.4100866767345756}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( ( MUM / MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6492736965248543}, {"determining": "( ( Const + ACS ) / ( ARS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( CS / MUC ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Max( MUM,MUM ) ) ) )", "obj1": 0.6653543307086615, "obj2": 0.1572543668827075}, {"determining": "( MRS / ( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) ) )", "choosing": "( ( Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) - CS ) - CS )", "obj1": 0.48031496062992124, "obj2": 0.24545830649408612}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( AMS * Const ) )", "choosing": "( ( Min( MUM ,Max( MUR,MLU ) ) + ( Max( ( Min( MUM ,MUM ) + Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.4912515940456018}, {"determining": "( Min( MRS ,( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,DS ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( ( RMSe - RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.051181102362204724, "obj2": 0.7063595498581832}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.07724716282883451}, {"determining": "( ( FirstVNF_CPU - ( ( Min( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) ,FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RRSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.3248962961854587}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,Const ) * Const ) ) ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( DS * MUR ) * ( MUC - CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.3777055905908642}, {"determining": "( FirstVNF_CPU_Server / Min( ACS ,ARS ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - Max( RCSe,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.0531496062992126, "obj2": 0.6749001138261607}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( ( MLU / RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.24536961547576164}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.4676246423254192}, {"determining": "( ( DDR / ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Min( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) ,( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MLU / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.5733964711344683}, {"determining": "( ( PN - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / CS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.3278890552376632}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( DDR / Min( ACS ,ARS ) ) - Const ) * Max( RRS,Const ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.23236147499026732}, {"determining": "( ( Const - Max( Const,AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Min( Min( MLU ,CS ) ,( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) / ( CS / RCSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07494828025586951}, {"determining": "( MRS / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( DS * ( Max( Max( MUR,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / RRSe ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.16044585672623868}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5198204949438243}, {"determining": "( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.2132537361053956}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.018906615141810534}, {"determining": "( Min( FirstVNF_RAM_Server ,( ARS * AMS ) ) / ( ACS - ARS ) )", "choosing": "Max( ( Max( Min( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUC ) ),MUM ) ,Max( MUR,RRSe ) ),( ( DS / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6679239959386848}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.4676246423254192}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7195471362744102}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( MDR * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe / MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.5514545815151611}, {"determining": "( ( Const - ( Const * AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "( ( MLU / RCSe ) + ( Min( ( RRSe - Min( MUR ,CS ) ) ,( RCSe / MUR ) ) / ( Min( RRSe ,CS ) * ( CS / RCSe ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.06287552366638846}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Max( FirstVNF_RAM_Server,Const ) ,Const ) ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( ( ( MLU / CS ) + ( ( DS * MUR ) * ( MUC - CS ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( MUC - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.4914064091377082}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5209304972537905}, {"determining": "( ( PN - MRS ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RRSe * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.008189694858573524}], "19": [{"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),( MUM - CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS ) - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( DDR - ARS ) ) - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,( RCSe / DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7381409253299637}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * MLU ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.10349939971631719}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.2874015748031496, "obj2": 0.40603901883557353}, {"determining": "( ( FirstVNF_RAM_Server - ( CRS - ( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS ) ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.6075335030891865}, {"determining": "( ( DDR / ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Min( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) ,( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MLU / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.5733964711344683}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( ACS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14381118452376143}, {"determining": "( Const / ( FirstVNF_RAM_Server / BR ) )", "choosing": "( DS * ( ( Max( RRSe,MLU ) - CS ) - CS ) )", "obj1": 0.0688976377952756, "obj2": 0.6296082529920639}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.5961299481128775}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,( RMSe / RCSe ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.09883997962677418}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.34448818897637795, "obj2": 0.34689967313880854}, {"determining": "( ( ( ( ( DDR * ( ARS * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.43570574280002344}, {"determining": "( ( Const - ( Const / AMS ) ) * ( ( CRS / FirstVNF_Mem_Server ) * ( Const + ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8956692913385826, "obj2": 0.04810740604821415}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( DDR / Min( ACS ,ARS ) ) - Const ) * Max( RRS,Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.3761563625292497}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR - MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.291986089670636}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.39173228346456695, "obj2": 0.30056045442642826}, {"determining": "( Min( MRS ,( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( AMS - BR ) ) + BR ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,DS ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / RRSe ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( ( RMSe - RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.051181102362204724, "obj2": 0.7063595498581832}, {"determining": "( ( FirstVNF_CPU - ( ( ( ( DDR * ( ARS * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( Max( ACS,ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - RMSe ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2042368679226806}, {"determining": "( ( FirstVNF_CPU - ( ( ( ( DDR * ( ARS * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.39846584408008096}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( AMS * Const ) )", "choosing": "( ( Min( MUM ,Max( MUR,MLU ) ) + ( Max( ( Min( MUM ,MUM ) + Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.4912515940456018}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,( RMSe / RCSe ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08808582085442214}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( MDR * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe / MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.5514545815151611}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( DDR / Min( ACS ,ARS ) ) - Const ) * Max( RRS,Const ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.23236147499026732}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.27862600615662125}, {"determining": "( ( FirstVNF_CPU - ( ( Min( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) ,FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RRSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.3248962961854587}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1728765112708176}, {"determining": "( Const / ( ( ( ( DDR * ( ARS - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( CS + ( CS / RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.25, "obj2": 0.4555507310623167}, {"determining": "( ( ( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * MDR ) * FirstVNF_RAM_Server ) ) + ACS ) / ( ACS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Max( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ),MUM ) ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15144980916783424}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( ( MLU / RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.24536961547576164}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.3543307086614173, "obj2": 0.3348036835433192}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5492125984251969, "obj2": 0.21165005378998808}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7195471362744102}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.4999144885947228}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ),Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,( MUM / RCSe ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.38785205617519897}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( RRS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5417518832312566}, {"determining": "( ( FirstVNF_CPU - ( ( ( ( DDR * ( ( ARS - ARS ) * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( ( MUM - ( RCSe * MUC ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.22534990996713083}, {"determining": "( MRS / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( DS * ( Max( Max( MUR,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / RRSe ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.16044585672623868}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.02730031666191009}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5198204949438243}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8070866141732284, "obj2": 0.08737186055413201}, {"determining": "( ( ( DDR * ( Max( FirstVNF_RAM,( CRS - ARS ) ) - ( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM,PN ) - ( ( FirstVNF_RAM_Server / Const ) * Const ) ) ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( MLU / CS ) + ( ( ( ( Max( MUR,MUM ) / Max( RMSe,MUM ) ) - CS ) - CS ) * ( MUC - CS ) ) )", "obj1": 0.4625984251968504, "obj2": 0.25775863879010036}, {"determining": "( MRS / ( Const / ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) ) )", "choosing": "( ( Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) - CS ) - CS )", "obj1": 0.48031496062992124, "obj2": 0.24545830649408612}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS * RCSe ) * ( MUC - CS ) ) + ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.008189694858573524}, {"determining": "( ( Const - ( Const * AMS ) ) * ( ( CRS / FirstVNF_Mem_Server ) + ( Const + ACS ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RCSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.0531496062992126, "obj2": 0.6749001138261607}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.4676246423254192}, {"determining": "( ( Const - ACS ) / ( ACS - ARS ) )", "choosing": "( ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,MUR ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.17944772597133582}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5209304972537905}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Max( FirstVNF_RAM_Server,Const ) ,Const ) ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( ( ( MLU / CS ) + ( ( DS * MUR ) * ( MUC - CS ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( MUC - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.4914064091377082}, {"determining": "( ( PN - MRS ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RRSe * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.008189694858573524}], "20": [{"determining": "( ( PN - MRS ) - ( ( ( DDR * ACS ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),( MUM - CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( DDR - ARS ) ) - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( RCSe / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,( RCSe / DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7381409253299637}, {"determining": "( ( Const - ( Const / AMS ) ) * ( ( CRS / FirstVNF_Mem_Server ) * ( Const + ACS ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.8956692913385826, "obj2": 0.04810740604821415}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * ( ( DDR * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,( RMSe / RCSe ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.0710695052169979}, {"determining": "( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( DS * MLU ) * ( RRSe - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.10349939971631719}, {"determining": "( ( FirstVNF_CPU - ( ( ( ( DDR * ( ARS * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( Max( ACS,ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - RMSe ) - Min( ( MUM / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.2042368679226806}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR - ARS ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - RCSe ),Min( CS ,RMSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18906666049223864}, {"determining": "( ( DDR / ( ARS * ARS ) ) * FirstVNF_RAM_Server )", "choosing": "( Min( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) ,( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MLU / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.14763779527559054, "obj2": 0.5733964711344683}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( ACS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.7007874015748031, "obj2": 0.14381118452376143}, {"determining": "( MRS / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( DS * ( Max( Max( MUR,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / RRSe ) / ( MUR * MUR ) ) ) ) ,CS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.16044585672623868}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,( RMSe / RCSe ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.09883997962677418}, {"determining": "( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.02723050181589199}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem * ARS ) ) / ( ( ARS - FirstVNF_CPU_Server ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR - MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.4035433070866142, "obj2": 0.291986089670636}, {"determining": "( ( FirstVNF_RAM_Server - ( Const / ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) ) ) ) * RRS )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / ( Max( ( RCSe - MUC ),Min( MUM ,CS ) ) / ( ( RCSe / DS ) / ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / CS ) + Max( Max( ( RCSe - MUM ),( CS * MUR ) ),( Min( RMSe ,RMSe ) / RMSe ) ) ) ) ) ),Min( MUR ,RCSe ) )", "obj1": 0.045275590551181105, "obj2": 0.7195471362744102}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.27862600615662125}, {"determining": "( ( ( ( ( DDR * ( ( MRS / ( FirstVNF_RAM_Server - ARS ) ) * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / RRSe ) / ( MUR * MUR ) ) ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6906119352912408}, {"determining": "( Const / ( ( ( ( DDR * ( ARS - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) )", "choosing": "( DS * ( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( CS + ( CS / RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.25, "obj2": 0.4555507310623167}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6500733214860611}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.2992125984251969, "obj2": 0.3944425616033234}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / Max( ( ARS - Const ),Max( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ),Const ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,( MUM / RCSe ) ),( ( RMSe / RCSe ) - ( RCSe * RCSe ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.38785205617519897}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( RRS - Const ) * Max( RRS,Const ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5417518832312566}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.4676246423254192}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RRSe ) ) ) - CS ) - CS )", "obj1": 0.8070866141732284, "obj2": 0.08737186055413201}, {"determining": "( MRS / ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( Min( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.3687389122784253}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / BR ) + ACS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( Min( MLU ,RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.1728765112708176}, {"determining": "( ( ( ( ( DDR * ( ARS * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.43570574280002344}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.4999144885947228}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.2874015748031496, "obj2": 0.40603901883557353}, {"determining": "( ( ( ( ( DDR * ( ARS * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR * MUR ) / ( MUR * MUR ) ) ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.43570574280002344}, {"determining": "( ( FirstVNF_CPU - ( ( ( ( DDR * ( ( ARS - ARS ) * ARS ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( ( Max( RRSe,MLU ) - CS ) - CS ) )", "obj1": 0.37598425196850394, "obj2": 0.3113225191475172}, {"determining": "( ( ( ( ( DDR - ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( MUM / RCSe ) - MUC ) - Min( Max( ( MLU / RMSe ),( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) ) ,CS ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.24536961547576164}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( ( RCSe / DS ) / ( MUR * CS ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.3405511811023622, "obj2": 0.35742570947387686}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5198204949438243}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( MDR * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe / MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.1515748031496063, "obj2": 0.5514545815151611}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.34448818897637795, "obj2": 0.34689967313880854}, {"determining": "( ( FirstVNF_CPU - ( ( ( ( DDR * ( FirstVNF_RAM_Server / BR ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_Mem + ( ( ACS - ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( Max( Max( RRSe,MLU ),( MLU / CS ) ) + ( ( MLU - MUC ) - Min( ( MUM / ( ( MUM - ( RCSe * MUC ) ) / DS ) ) ,CS ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.23449355710944236}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / CS ) ,( Min( ( RRSe - CS ) ,( RMSe / RCSe ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08808582085442214}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Max( FirstVNF_RAM_Server,Const ) ,Const ) ) ) / ( FirstVNF_RAM_Server / BR ) )", "choosing": "( DS * ( ( Max( RRSe,MLU ) - CS ) - Max( ( MUC - MUC ),Min( CS ,CS ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6296082529920639}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.3543307086614173, "obj2": 0.3348036835433192}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "Max( ( Max( Min( Min( MUM ,MUM ) ,( MUR / MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS * CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),Min( MUR ,RMSe ) )", "obj1": 0.2874015748031496, "obj2": 0.40603901883557353}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_RAM,CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) / BR ) / FirstVNF_Mem )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.48687220613334486}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ( ( DDR * ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) ) * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,Max( ( RRSe - MUC ),Min( CS ,CS ) ) ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.612003384742083}, {"determining": "( ( PN - MRS ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RRSe * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.008189694858573524}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.5961299481128775}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS * ARS ) ) / ( ARS * ARS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5209304972537905}, {"determining": "( ( ( Max( FirstVNF_RAM,PN ) - ( FirstVNF_CPU_Server * BR ) ) - ( Const * AMS ) ) * Max( ( CRS / FirstVNF_Mem_Server ),( Const + ACS ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( ( RMSe / RCSe ) - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.05905511811023622, "obj2": 0.6694192519759898}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - ( ( FirstVNF_RAM_Server - ( Const / ( ( MRS - ARS ) - FirstVNF_CPU_Server ) ) ) * RRS ) ) ) / ( ARS * Const ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( MUM - ( RCSe * MUC ) ) ) / ( Max( ( ( RMSe / RCSe ) - Max( RMSe,Max( Max( RRSe,MLU ),( MLU / CS ) ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * CS ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.32129582742525997}, {"determining": "( ( ( ( PN - MRS ) - ( ( Max( DDR,FirstVNF_Mem ) * MDR ) * FirstVNF_RAM_Server ) ) + ACS ) / ( ACS - ARS ) )", "choosing": "( DS * ( ( RCSe / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUR ) / ( MUR * MUR ) ) ) ) + ( ( ( RMSe / RCSe ) - MUC ) - Max( ( Max( MUM,MLU ) * ( RRSe * RMSe ) ),MUM ) ) ) )", "obj1": 0.6850393700787402, "obj2": 0.15144980916783424}, {"determining": "( Const / ( FirstVNF_RAM_Server / BR ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ) + ( ( ( MLU / CS ) + ( ( DS * MUR ) * ( MUC - CS ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( MUC - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.6231224360223836}, {"determining": "( ( Const - ( Const * AMS ) ) * ( ( CRS / FirstVNF_Mem_Server ) + ( Const + ACS ) ) )", "choosing": "Max( ( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RCSe / RCSe ) - ( RCSe * MLU ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * Max( ( Max( MUR,MLU ) / MUM ),( MLU - RCSe ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.051181102362204724, "obj2": 0.673018882034885}]}