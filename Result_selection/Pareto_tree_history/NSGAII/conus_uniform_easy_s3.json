{"1": [{"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "Max( ( MRS / ACS ),( FirstVNF_RAM_Server - PN ) )", "choosing": "( Min( CS ,MUC ) * ( MUC - MLU ) )", "obj1": 0.1830708661417323, "obj2": 0.6409386748631742}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) )", "choosing": "( ( DS - RCSe ) + ( MUM + MLU ) )", "obj1": 0.5236220472440944, "obj2": 0.3908455794099943}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( ( ( ARS * FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ACS ) ),DDR ) )", "choosing": "Max( Max( MUR,DS ),( MUC * MUC ) )", "obj1": 0.40551181102362205, "obj2": 0.44853922955279313}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RCSe - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( ( DDR - AMS ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + RRSe ) / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) )", "choosing": "Min( ( CS + RRSe ) ,( DS / RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.35012501370771215}, {"determining": "( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU * ARS ) * ( AMS - ( ( CRS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ) + ( AMS - ( PN - MRS ) ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - Max( ( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) * RCSe ),DS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "Min( Min( ( FirstVNF_RAM_Server * CRS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( MUC * MUR ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( Max( AMS,( FirstVNF_Mem - ( ( CRS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ) ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( Min( MUC ,Max( MUR,MUM ) ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( AMS * CRS ) * RRS ) ,FirstVNF_CPU_Server ),( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( ( DS * MUR ) * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( ARS ,FirstVNF_CPU ) * ( BR * ARS ) ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7382402897575555}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( PN - FirstVNF_CPU_Server ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) )", "choosing": "Min( ( ( ( RRSe - RCSe ) - ( RRSe - RRSe ) ) + ( ( CS + ( RMSe + MUM ) ) - MUM ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.23643311435787392}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_Mem_Server / CRS ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( Max( ( MDR - ( FirstVNF_RAM_Server + BR ) ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( MUM / ( CS * ( ( MUR / ( Min( MUC ,RMSe ) * RCSe ) ) - MUR ) ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( PN / FirstVNF_Mem ) + FirstVNF_Mem_Server ) * AMS ) + Min( BR ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,( Min( RMSe ,RCSe ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_Mem + Min( RRS ,Const ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "( Min( DDR ,DDR ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / Max( RCSe,MUM ) ) ) * ( Max( ( ( RCSe / ( ( RRSe * MUM ) * CS ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - MDR ) + AMS ) ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * Max( DS,CS ) ) * Min( Min( ( RMSe + RRSe ) ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Const + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( Min( MUM ,( RCSe * ( ( RMSe + RCSe ) / RMSe ) ) ) - DS ) + ( ( RCSe * MUR ) - ( MUM + MUM ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( Max( ( MUC * MUC ),MUR ) / RCSe ) / Max( ( ( MUC * RCSe ) - Max( MUM,RRSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / ( ( RMSe + RRSe ) / ( Min( ( MLU + RCSe ) ,DS ) * MUR ) ) ) - MUR ) + ( Max( Min( ( MUR * CS ) ,CS ),( Min( Max( MLU,RMSe ) ,MUR ) / ( RCSe - MUC ) ) ) / MLU ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MLU ,RCSe ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05383662003701402}], "2": [{"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RCSe - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( ( DDR - AMS ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + RRSe ) / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU * ARS ) * ( AMS - ( ( CRS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ) + ( AMS - ( PN - MRS ) ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - Max( ( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) * RCSe ),DS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "Min( Min( ( FirstVNF_RAM_Server * CRS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( MUC * MUR ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( Max( AMS,( FirstVNF_Mem - ( ( CRS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ) ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( Min( MUC ,Max( MUR,MUM ) ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( AMS * CRS ) * RRS ) ,FirstVNF_CPU_Server ),( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( ( DS * MUR ) * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( ARS ,FirstVNF_CPU ) * ( BR * ARS ) ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7382402897575555}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_Mem_Server / CRS ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( Max( ( MDR - ( FirstVNF_RAM_Server + BR ) ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( MUM / ( CS * ( ( MUR / ( Min( MUC ,RMSe ) * RCSe ) ) - MUR ) ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( PN / FirstVNF_Mem ) + FirstVNF_Mem_Server ) * AMS ) + Min( BR ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,( Min( RMSe ,RCSe ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_Mem + Min( RRS ,Const ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "( Min( DDR ,DDR ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / Max( RCSe,MUM ) ) ) * ( Max( ( ( RCSe / ( ( RRSe * MUM ) * CS ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - MDR ) + AMS ) ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * Max( DS,CS ) ) * Min( Min( ( RMSe + RRSe ) ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Const + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( Min( MUM ,( RCSe * ( ( RMSe + RCSe ) / RMSe ) ) ) - DS ) + ( ( RCSe * MUR ) - ( MUM + MUM ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( Max( ( MUC * MUC ),MUR ) / RCSe ) / Max( ( ( MUC * RCSe ) - Max( MUM,RRSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / ( ( RMSe + RRSe ) / ( Min( ( MLU + RCSe ) ,DS ) * MUR ) ) ) - MUR ) + ( Max( Min( ( MUR * CS ) ,CS ),( Min( Max( MLU,RMSe ) ,MUR ) / ( RCSe - MUC ) ) ) / MLU ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MLU ,RCSe ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05383662003701402}, {"determining": "( ( PN - FirstVNF_Mem ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( MUM - RCSe ),( ( MLU - Min( ( ( RRSe - MUM ) + Max( ( ( MUM / MUC ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ) ,MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( MUR + MUM ) * Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) * CRS ) )", "choosing": "( Max( Min( MLU ,MLU ),MUR ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5094445939686736}, {"determining": "( ( ARS * PN ) + Min( ( MDR + FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( ( RCSe + RRSe ) / MUR ) )", "obj1": 0.3484251968503937, "obj2": 0.45693008087612313}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5312617769651132}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.6141732283464567, "obj2": 0.28469055764504836}, {"determining": "( ( ( CRS / PN ) * PN ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Const ) + ( PN - FirstVNF_Mem ) ) + ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe + RRSe ) * ( ( MUC / ( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) ) ) + MUM ) )", "obj1": 0.5531496062992126, "obj2": 0.33233497975049686}, {"determining": "Max( Min( ( ( AMS * CRS ) * RRS ) ,FirstVNF_CPU_Server ),( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( ( DS * MUR ) * MUR ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7380591443815517}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Max( DDR,Const ) + ( BR - BR ) ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - ( RMSe + RRSe ) ),( RMSe + MUC ) ) )", "obj1": 0.0531496062992126, "obj2": 0.7339849578430525}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( MDR / ( Max( ( MRS - ( ( CRS * Max( FirstVNF_CPU_Server,PN ) ) * ( MRS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ),( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( RMSe - RCSe ) + ( ( ( ( ( RCSe + ( RRSe - CS ) ) / ( RRSe / ( MUC + CS ) ) ) - CS ) + MLU ) - ( MUM * ( ( Max( RRSe,MUR ) - RMSe ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( ( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) ) / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( Min( CS ,MLU ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( Max( ( MUC * MUC ),MUR ) / RCSe ) / Max( ( ( MUC * RCSe ) - Max( MUM,RRSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / PN ) * PN ) * Max( ACS,( RRS + RRS ) ) )", "choosing": "( DS / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.6830708661417323, "obj2": 0.22288425471192974}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RMSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) + MUC ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - Max( ( ( ( RMSe * ( RCSe - Min( RRSe ,Max( DS,MLU ) ) ) ) + MLU ) / MUR ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( DDR,( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MLU ,RCSe ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7046354571881477}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Const + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( Min( MUM ,( RCSe * ( ( RMSe + RCSe ) / RMSe ) ) ) - DS ) + ( ( RCSe * MUR ) - ( MUM + MUM ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / MDR ) + ( DDR - RRS ) )", "choosing": "( ( MUC - Max( Min( RRSe ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.5621150997912331}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - Min( ACS ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( MUM ,RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.12876779215266757}, {"determining": "( ( CRS + FirstVNF_RAM ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( Min( DS ,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( ( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) )", "choosing": "Min( MUR ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_Mem + Min( ( AMS * FirstVNF_RAM_Server ) ,Const ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( ( MUR / MUM ) / ( CS + CS ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.4288441593176031}, {"determining": "Min( Max( MRS,FirstVNF_CPU ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MLU ,RCSe ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( RRSe,Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7046354571881477}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,Max( BR,( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( ( ( MUC * RCSe ) - Max( MUM,RMSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( Min( BR ,( MRS / ARS ) ) * AMS ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( RCSe - ( MUM * ( CS / DS ) ) ) / Max( ( ( MUC * RCSe ) - Max( MUM,RMSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( Min( RMSe ,RRSe ) / ( MUC * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5235549697584708}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MLU ,RCSe ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( ( Min( MUR ,RRSe ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) ) ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.7037839546626281}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) / ( CRS - PN ) )", "choosing": "( Max( ( ( MUM * MUC ) + Max( MLU,MUM ) ),( Min( MUM ,CS ) + ( CS * RMSe ) ) ) - ( RRSe / ( DS - ( ( MUR * ( ( MUM + Max( RCSe,CS ) ) * RCSe ) ) + Min( Max( MUR,MLU ) ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Min( ( MDR + FirstVNF_RAM ) ,FirstVNF_Mem ) + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,CRS ) ) ) ) ) ) ) - Max( Max( ( Const * CRS ),( MDR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM + FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * RCSe ),Min( ( MLU / RCSe ) ,( MUC - ( ( DS * RMSe ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( ARS * PN ) + Min( FirstVNF_CPU ,Min( ( Max( ARS,FirstVNF_RAM ) / RRS ) ,( ACS - ( FirstVNF_RAM_Server * Max( DDR,MDR ) ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Max( ( ( ( RRSe / CS ) - ( MUR / MUR ) ) / MLU ),( RRSe - MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5077298036415282}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.3405511811023622, "obj2": 0.4656640460787739}, {"determining": "Min( RRS ,Min( ( Min( FirstVNF_CPU_Server ,DDR ) * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + ( ( ( ( Min( MUC ,RRSe ) * MUR ) / MUC ) - MUC ) / Max( DS,( ( ( CS / DS ) - RMSe ) / MUM ) ) ) )", "obj1": 0.6712598425196851, "obj2": 0.23207982254026818}, {"determining": "( ( ( MDR * BR ) * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( DS / MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.5815786765678527}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUR * CS ) - ( RCSe / MLU ) ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ( CRS - CRS ) ,BR ) )", "choosing": "( CS * ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MDR ) + Max( MDR,( ( ( ARS * FirstVNF_Mem ) * CRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUM ) + Max( CS,( MUC * RMSe ) ) )", "obj1": 0.03740157480314961, "obj2": 0.7516069493207022}, {"determining": "Max( MRS,( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + ( MUC + Min( RCSe ,CS ) ) ) ) - Min( ( MUR * RMSe ) ,( ( DS * MUR ) * MUR ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7380591443815517}, {"determining": "( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU * ARS ) * ( AMS - ( ( CRS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ) + ( AMS - ( PN - MRS ) ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - Max( ( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) * RCSe ),DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.6954144790588941}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - ( MRS / Min( Min( MRS ,MRS ) ,Const ) ) ) ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( ( CS / DS ) - RMSe ) )", "obj1": 0.3700787401574803, "obj2": 0.43150816090225413}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - Min( Max( ( FirstVNF_CPU + FirstVNF_Mem ),( FirstVNF_RAM * CRS ) ) ,Max( ( FirstVNF_Mem_Server - PN ),Min( FirstVNF_CPU ,DDR ) ) ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + MUR ) / ( MLU / MLU ) ) ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - MDR ) + AMS ) ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ( BR * Max( ( DDR / ( ( FirstVNF_RAM + MDR ) - RRS ) ),RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( DS - Min( MUC ,( DS / MLU ) ) ) + ( MUM + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * AMS ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),( RRSe - MUC ) ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - DS ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( ( BR * MDR ) + BR ) * Max( FirstVNF_Mem_Server,DDR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.49606299212598426, "obj2": 0.35677790499781203}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * ( ( Max( ( AMS / FirstVNF_Mem ),RRS ) + FirstVNF_CPU ) + Const ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( ( Max( Min( CS ,RRSe ),DS ) + RRSe ) * ( ( MUC / DS ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * AMS ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( RCSe - ( MUM * ( CS / DS ) ) ) / Max( ( ( MUC * RCSe ) - Max( MUM,RMSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( ( RRSe / MUM ),RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * CRS ) * ( Min( BR ,FirstVNF_Mem ) * AMS ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RMSe ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( AMS * CRS ) * RRS ) ,ACS ),( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( ( DS * ( ( MUC * RCSe ) - Max( MUM,RMSe ) ) ) * MUR ) ) )", "obj1": 0.051181102362204724, "obj2": 0.7374009605914261}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - RRS ) )", "choosing": "Max( Min( RCSe ,( CS / MUM ) ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.46608443944136535}, {"determining": "Min( ( ( FirstVNF_Mem_Server * Const ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),( MUR + RRSe ) ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0174076476997433}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( DDR - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) ) - ( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_Mem_Server / MRS ) / ( CRS - PN ) ) ) )", "choosing": "( ( MUR - Max( ( ( MUM * MUC ) + Max( MLU,MUM ) ),( Min( MUM ,CS ) + ( CS * RMSe ) ) ) ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ACS )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ACS / CRS ) ) )", "choosing": "( ( RRSe + MUM ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5088233128464524}, {"determining": "Max( ( MRS / ACS ),( MDR * AMS ) )", "choosing": "( Min( CS ,MLU ) * ( MUC - MLU ) )", "obj1": 0.1673228346456693, "obj2": 0.6544313214517177}, {"determining": "( ( FirstVNF_CPU * BR ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,( RRSe - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / Max( RCSe,MUM ) ) ) * ( Max( ( ( RCSe / ( ( RRSe * MUM ) * CS ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( ( ( ARS / MDR ) + ( DDR - RRS ) ) ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MDR ) + Max( MDR,( ( ( ARS * FirstVNF_Mem ) * CRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUM ) + Max( CS,( MUC * RMSe ) ) )", "obj1": 0.03740157480314961, "obj2": 0.7516069493207022}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_Mem + Min( RRS ,Const ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( MLU / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.10777381162197072}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - Min( ACS ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( MUM ,RCSe ) )", "obj1": 0.7696850393700787, "obj2": 0.12876779215266757}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( Const + FirstVNF_Mem_Server ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + MUR ) / ( MLU / MLU ) ) ) + MUR ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04724615752490906}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "Min( ( Max( DDR,Const ) + ( ( MDR * BR ) * PN ) ) ,Min( ( Min( MDR ,MDR ) - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / Min( MUR ,DS ) ) * ( ( MUC / CS ) * RRSe ) )", "obj1": 0.42322834645669294, "obj2": 0.3802304804193347}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( ( BR * MDR ) + BR ) * Max( FirstVNF_Mem_Server,DDR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.49606299212598426, "obj2": 0.35677790499781203}, {"determining": "Max( ( MRS / ACS ),( MDR * AMS ) )", "choosing": "( Min( CS ,MLU ) * ( MUC - MLU ) )", "obj1": 0.1673228346456693, "obj2": 0.6544313214517177}, {"determining": "( ( ( MDR * BR ) * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( DS / MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.5815786765678527}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.46608443944136535}, {"determining": "Min( Min( ( FirstVNF_RAM_Server * CRS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( MUC * MUR ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( Max( AMS,( FirstVNF_Mem - ( ( CRS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ) ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( Min( MUC ,Max( MUR,MUM ) ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( ( RCSe / ( Min( RCSe ,( MUC + MUC ) ) + CS ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.32818042277369924}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "( ( FirstVNF_CPU * BR ) + BR )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + Min( MUR ,RRSe ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3499992331178012}, {"determining": "( ( FirstVNF_RAM + ( ( ARS * PN ) + Min( FirstVNF_CPU ,Min( ( Max( ARS,FirstVNF_RAM ) / RRS ) ,( ACS - ( FirstVNF_RAM_Server * Max( DDR,MDR ) ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Max( ( ( ( RRSe / CS ) - ( MUR / MUR ) ) / MLU ),( RRSe - MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5077298036415282}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_Mem + Min( ( AMS * FirstVNF_RAM_Server ) ,Const ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( ( MUR / MUM ) / ( CS + CS ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.4288441593176031}, {"determining": "( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU * ARS ) * ( AMS - ( ( CRS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ) + ( AMS - ( PN - MRS ) ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - Max( ( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) * RCSe ),DS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,( ACS - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( ( MUR * ( MUC / MUR ) ) + ( ( MUR / ( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3484251968503937, "obj2": 0.434854254235452}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.4544672931307714}, {"determining": "( ( ARS / MDR ) + ( DDR - RRS ) )", "choosing": "( ( MUC - Max( Min( RRSe ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.5621150997912331}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.6141732283464567, "obj2": 0.28469055764504836}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( Max( ( FirstVNF_RAM * ( ( Max( ( AMS / FirstVNF_Mem ),RRS ) + FirstVNF_CPU ) + Const ) ),Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ) + MLU ) ) )", "obj1": 0.9488188976377953, "obj2": 0.02507124917307372}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - ( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * AMS ) ) * ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * Min( MUC ,MUR ) ) + Min( MUM ,RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.2842960312658291}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( ( BR * MDR ) + BR ) * Max( FirstVNF_Mem_Server,DDR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.9212598425196851, "obj2": 0.0367744865104077}, {"determining": "Min( Max( MRS,FirstVNF_CPU ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MLU ,RCSe ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + MUR ) / ( MLU / MLU ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.7276733906949522}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( Const * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / ( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + MUR ) / ( MLU / MLU ) ) ) + MLU ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.6748241539377662}, {"determining": "( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU * ARS ) * ( AMS - ( ( CRS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ) + ( AMS - ( PN - MRS ) ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - Max( ( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) * RCSe ),DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.6954144790588941}, {"determining": "Min( ( ( Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / Min( Max( CRS,FirstVNF_RAM_Server ) ,CRS ) ) ) ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( Max( RRSe,RMSe ) + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.6969367229444248}, {"determining": "Min( RRS ,Min( ( Min( FirstVNF_CPU_Server ,DDR ) * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + ( ( ( ( Min( MUC ,RRSe ) * MUR ) / MUC ) - MUC ) / Max( DS,( ( ( CS / DS ) - RMSe ) / MUM ) ) ) )", "obj1": 0.6712598425196851, "obj2": 0.23207982254026818}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / ( ( RMSe + RRSe ) / ( Min( ( MLU + RCSe ) ,DS ) * MUR ) ) ) - MUR ) + ( Max( Min( ( MUR * CS ) ,CS ),( Min( Max( MLU,RMSe ) ,MUR ) / ( RCSe - MUC ) ) ) / MLU ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,FirstVNF_Mem ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( Min( MUM ,RRSe ) - ( ( DS - Min( MUC ,MUM ) ) + ( MUM + MLU ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.007839071967904858}, {"determining": "( FirstVNF_RAM - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / DS ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 0.7066929133858267, "obj2": 0.21961587942357227}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5235549697584708}, {"determining": "Min( RRS ,Min( ( Max( MDR,( ( AMS * CRS ) + FirstVNF_Mem_Server ) ) * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( Min( DS ,Max( ( MUR / DS ),( RCSe + CS ) ) ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,( MUM / RMSe ) ) ) )", "obj1": 0.6712598425196851, "obj2": 0.23207982254026818}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) * CRS ) )", "choosing": "( Max( Min( MLU ,MLU ),MUR ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5094445939686736}, {"determining": "Min( ( ( FirstVNF_Mem_Server * Const ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),( MUR + RRSe ) ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.0174076476997433}, {"determining": "( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5088233128464524}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_Mem_Server / CRS ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( ARS / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.1889763779527559, "obj2": 0.5468996427352621}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5312617769651132}, {"determining": "( ( ( CRS / PN ) * PN ) * Max( ACS,( RRS + RRS ) ) )", "choosing": "( DS / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.6830708661417323, "obj2": 0.22288425471192974}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,Min( CS ,Max( CS,( RCSe / RMSe ) ) ) ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.4544672931307714}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( MUM - RMSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.022496654915141235}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( ( ( ( ( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) + PN ) )", "choosing": "Min( ( CS / CS ) ,( MUM - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.0015974958690822565}, {"determining": "( ( ( Const - MDR ) * ( ( ( Min( AMS ,DDR ) / CRS ) * Min( Const ,BR ) ) + FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) )", "choosing": "( ( MLU - DS ) * Max( ( MLU + RRSe ),( ( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) - ( MUR + MUC ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.5366088688893743}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - ( MRS / Min( Min( MRS ,MRS ) ,Const ) ) ) ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( ( CS / DS ) - RMSe ) )", "obj1": 0.3700787401574803, "obj2": 0.43150816090225413}, {"determining": "Max( Min( ( ( AMS * CRS ) * RRS ) ,FirstVNF_CPU_Server ),( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( ( DS * MUR ) * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( MRS / ACS ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MLU ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5414263546033424}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( ARS ,FirstVNF_CPU ) * ( BR * ARS ) ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7382402897575555}, {"determining": "( ( MRS + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Max( BR,MRS ) ) + PN ) )", "choosing": "Min( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ) ,( MUM - CS ) )", "obj1": 0.3700787401574803, "obj2": 0.43150816090225413}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Max( DDR,Const ) + ( BR - BR ) ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - ( RMSe + RRSe ) ),( RMSe + MUC ) ) )", "obj1": 0.0531496062992126, "obj2": 0.7339849578430525}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( BR * ARS ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( MLU,( RMSe + MUC ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7341121707457293}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + RRSe ) / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( Max( ( MDR - ( FirstVNF_RAM_Server + BR ) ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( MUM / ( CS * ( ( MUR / ( Min( MUC ,RMSe ) * RCSe ) ) - MUR ) ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_Mem ) + FirstVNF_Mem_Server ) * AMS ) + Min( BR ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,( Min( RMSe ,RCSe ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / Max( RCSe,MUM ) ) ) * ( Max( ( ( RCSe / ( ( RRSe * MUM ) * CS ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - MDR ) + AMS ) ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * Max( DS,CS ) ) * Min( Min( ( RMSe + RRSe ) ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Const + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( Min( MUM ,( RCSe * ( ( RMSe + RCSe ) / RMSe ) ) ) - DS ) + ( ( RCSe * MUR ) - ( MUM + MUM ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( Max( ( MUC * MUC ),MUR ) / RCSe ) / Max( ( ( MUC * RCSe ) - Max( MUM,RRSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( MUM - RCSe ),( ( MLU - Min( ( ( RRSe - MUM ) + Max( ( ( MUM / MUC ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ) ,MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( MUR + MUM ) * Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / PN ) * PN ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( MDR / ( Max( ( MRS - ( ( CRS * Max( FirstVNF_CPU_Server,PN ) ) * ( MRS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ),( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( RMSe - RCSe ) + ( ( ( ( ( RCSe + ( RRSe - CS ) ) / ( RRSe / ( MUC + CS ) ) ) - CS ) + MLU ) - ( MUM * ( ( Max( RRSe,MUR ) - RMSe ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( ( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) ) / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( Min( CS ,MLU ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( Max( ( MUC * MUC ),MUR ) / RCSe ) / Max( ( ( MUC * RCSe ) - Max( MUM,RRSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RMSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) + MUC ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - Max( ( ( ( RMSe * ( RCSe - Min( RRSe ,Max( DS,MLU ) ) ) ) + MLU ) / MUR ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( DDR,( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Const + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( Min( MUM ,( RCSe * ( ( RMSe + RCSe ) / RMSe ) ) ) - DS ) + ( ( RCSe * MUR ) - ( MUM + MUM ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_RAM ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( Min( DS ,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( ( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) )", "choosing": "Min( MUR ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,Max( BR,( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( ( ( MUC * RCSe ) - Max( MUM,RMSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( Min( BR ,( MRS / ARS ) ) * AMS ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( RCSe - ( MUM * ( CS / DS ) ) ) / Max( ( ( MUC * RCSe ) - Max( MUM,RMSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( Min( RMSe ,RRSe ) / ( MUC * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) / ( CRS - PN ) )", "choosing": "( Max( ( ( MUM * MUC ) + Max( MLU,MUM ) ),( Min( MUM ,CS ) + ( CS * RMSe ) ) ) - ( RRSe / ( DS - ( ( MUR * ( ( MUM + Max( RCSe,CS ) ) * RCSe ) ) + Min( Max( MUR,MLU ) ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Min( ( MDR + FirstVNF_RAM ) ,FirstVNF_Mem ) + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,CRS ) ) ) ) ) ) ) - Max( Max( ( Const * CRS ),( MDR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM + FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * RCSe ),Min( ( MLU / RCSe ) ,( MUC - ( ( DS * RMSe ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUR * CS ) - ( RCSe / MLU ) ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ( CRS - CRS ) ,BR ) )", "choosing": "( CS * ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - Min( Max( ( FirstVNF_CPU + FirstVNF_Mem ),( FirstVNF_RAM * CRS ) ) ,Max( ( FirstVNF_Mem_Server - PN ),Min( FirstVNF_CPU ,DDR ) ) ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + MUR ) / ( MLU / MLU ) ) ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - MDR ) + AMS ) ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( ( ( ( ( FirstVNF_CPU * ( AMS - ACS ) ) / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * DDR )", "choosing": "( CS * ( ( ( ( MUC + MUR ) + Min( ( ( MLU * RCSe ) / RCSe ) ,MLU ) ) * Max( DS,DS ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( ( ( ARS / MDR ) + ( DDR - RRS ) ) ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MDR ) + Max( MDR,( ( ( ARS * FirstVNF_Mem ) * CRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUM ) + Max( CS,( MUC * RMSe ) ) )", "obj1": 0.03740157480314961, "obj2": 0.7516069493207022}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.12687728818619182}, {"determining": "( ( ( CRS / PN ) * PN ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( MLU - RRSe ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.20719022863004738}, {"determining": "( ( PN - Min( ( ( ( ARS + PN ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( Max( DS,RMSe ) - RCSe ),Min( ( Max( MUM,CS ) + Max( RRSe,Max( ( ( ( RCSe - MLU ) * MUM ) / Max( ( RCSe - CS ),RRSe ) ),RCSe ) ) ) ,MUC ) )", "obj1": 0.7874015748031497, "obj2": 0.07212448830289715}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.6380192006505168}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ,Max( BR,( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) - Max( RMSe,CS ) )", "obj1": 0.8956692913385826, "obj2": 0.06766230705554305}, {"determining": "Min( Min( ( FirstVNF_RAM_Server * CRS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( MUC * MUR ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "Min( ( Max( DDR,Const ) + ( ( MDR * BR ) * PN ) ) ,Min( ( Min( MDR ,MDR ) - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / Min( MUR ,DS ) ) * ( ( MUC / CS ) * RRSe ) )", "obj1": 0.42322834645669294, "obj2": 0.3802304804193347}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( ( ( AMS * CRS ) * RRS ) / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( ( DS * MUR ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2697498562474715}, {"determining": "( ( ( MDR * BR ) * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( DS / MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.5815786765678527}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * MUM ) * ( MUC - ( MLU / CS ) ) )", "obj1": 0.5334645669291339, "obj2": 0.3073214906020783}, {"determining": "Min( ( FirstVNF_Mem_Server - ( Const / CRS ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( ( CS / MUC ) + CS ) ) + MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3601626910311336}, {"determining": "( ( FirstVNF_RAM + ( ( ARS * PN ) + Min( FirstVNF_CPU ,Min( ( Max( ARS,FirstVNF_RAM ) / RRS ) ,( ACS - ( FirstVNF_RAM_Server * Max( DDR,MDR ) ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Max( ( ( ( RRSe / CS ) - ( MUR / MUR ) ) / MLU ),( RRSe - MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5077298036415282}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "( ( ARS / MDR ) + Min( DDR ,( ( FirstVNF_CPU * BR ) + BR ) ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) ) ) - Max( MUC,MUR ) )", "obj1": 0.13385826771653545, "obj2": 0.6549688415117165}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.46608443944136535}, {"determining": "Min( Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,( Max( PN,( Const + FirstVNF_RAM_Server ) ) / Max( BR,BR ) ) ) ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + RRSe ) ,( RCSe * Min( ( MUR / RMSe ) ,MUC ) ) )", "obj1": 0.6515748031496063, "obj2": 0.25250886303807496}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( ( BR * MDR ) + BR ) * Max( FirstVNF_Mem_Server,DDR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.49606299212598426, "obj2": 0.35677790499781203}, {"determining": "Min( Max( MRS,FirstVNF_CPU ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MLU ,RCSe ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + MUR ) / ( MLU / MLU ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.7276733906949522}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( Max( AMS,( FirstVNF_Mem - ( ( CRS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ) ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( Min( MUC ,Max( MUR,MUM ) ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU * ARS ) * ( AMS - ( ( CRS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ) + ( AMS - ( PN - MRS ) ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - Max( ( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) * RCSe ),DS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) )", "choosing": "( ( ( DS * Min( MUC ,MUR ) ) + Min( MUM ,RCSe ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,Min( CS ,Max( CS,( RCSe / RMSe ) ) ) ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.3490688108364851}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( Max( FirstVNF_CPU_Server,( ACS - FirstVNF_RAM_Server ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( Min( ( ( Min( DS ,CS ) / ( MLU - ( RMSe * MUM ) ) ) * RMSe ) ,RCSe ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "( ( ARS / MDR ) + ( DDR - RRS ) )", "choosing": "( ( MUC - Max( Min( RRSe ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.5621150997912331}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.41738979564218986}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,( ACS - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( ( MUR * ( MUC / MUR ) ) + ( ( MUR / ( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3484251968503937, "obj2": 0.434854254235452}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - Min( ACS ,MDR ) ) * MDR ) + BR ) * Max( FirstVNF_Mem_Server,DDR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( RCSe / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.905511811023622, "obj2": 0.055629716172650175}, {"determining": "( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.9192913385826772, "obj2": 0.035302602448769344}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - ( MUM * Min( MUR ,RMSe ) ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9468503937007874, "obj2": 0.02388284374504496}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( BR - MRS ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.035207632300316094}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( Min( MLU ,MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3031496062992126, "obj2": 0.4636480792499065}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ARS + BR ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( ( RMSe / DS ) / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.4471575426701407}, {"determining": "( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU * ARS ) * ( AMS - ( ( CRS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) ) + ( AMS - ( PN - MRS ) ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - Max( ( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) * RCSe ),DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.6954144790588941}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( ( Min( CRS ,MRS ) + BR ) * AMS ) / ( RRS * CRS ) ),( Const * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / ( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * MUM ) + MLU ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6790372737977759}, {"determining": "( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5085874503926111}, {"determining": "Max( Min( ( ( AMS * CRS ) * RRS ) ,FirstVNF_CPU_Server ),( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( ( DS * MUR ) * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_Mem + Min( ( AMS * FirstVNF_RAM_Server ) ,Const ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( ( MUR / MUM ) / ( CS + CS ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.4288441593176031}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,CS ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4578308214582349}, {"determining": "( ( ( Const - MDR ) * ( ( ( Min( AMS ,DDR ) / Max( ARS,FirstVNF_RAM ) ) * Min( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,BR ) ) + FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) )", "choosing": "( ( MLU - DS ) * Max( ( MLU + RRSe ),( Min( ( CS / MUM ) ,( ( CS / DS ) - RMSe ) ) - ( MUR + ( MUM * ( MUR / RCSe ) ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.699091470224105}, {"determining": "( ( ARS / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.1889763779527559, "obj2": 0.5468996427352621}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) * CRS ) )", "choosing": "( Max( Min( MLU ,MLU ),MUR ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5094445939686736}, {"determining": "( ( FirstVNF_CPU * BR ) + BR )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + Min( MUR ,RRSe ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3499992331178012}, {"determining": "( ( DDR + MDR ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * MUC )", "obj1": 0.21456692913385828, "obj2": 0.5301308951068104}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / ( ( RMSe + RRSe ) / ( Min( ( MLU + RCSe ) ,DS ) * MUR ) ) ) - MUR ) + ( Max( Min( ( MUR * CS ) ,CS ),( Min( Max( MLU,RMSe ) ,MUR ) / ( RCSe - MUC ) ) ) / MLU ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "( ( ( CRS / PN ) * PN ) * Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) ,( DDR - FirstVNF_RAM ) ) )", "choosing": "( DS / ( Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) + ( MLU + CS ) ) )", "obj1": 0.9803149606299213, "obj2": 0.012828851829221284}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( Max( ( FirstVNF_RAM * ( ( Max( ( AMS / FirstVNF_CPU_Server ),RRS ) + FirstVNF_CPU ) + Const ) ),Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( ( Min( MUC ,MUR ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ) + MLU ) ) )", "obj1": 0.9625984251968503, "obj2": 0.01600169627230138}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( Min( ( ( ACS - ( FirstVNF_RAM + CRS ) ) * ( ACS + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) ) * AMS ) / ( RRS * CRS ) ),( Const * FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - MLU ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.6811465179392295}, {"determining": "( ( ( Const - MDR ) * ( ( ( Min( AMS ,DDR ) / CRS ) * Min( Const ,BR ) ) + FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) )", "choosing": "( ( MLU - DS ) * Max( ( MLU + RRSe ),( ( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) - ( MUR + MUC ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.5366088688893743}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) * CRS ) )", "choosing": "( Max( Min( MLU ,MLU ),MUR ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.22440944881889763, "obj2": 0.5219785535081122}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( CRS + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,MUM ) + Min( Min( DS ,MLU ) ,RMSe ) )", "obj1": 0.9586614173228346, "obj2": 0.019216140619088204}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / ( ( RMSe + RRSe ) / ( Min( ( MLU + RCSe ) ,DS ) * MUR ) ) ) - MUR ) + ( Max( Min( ( MUR * CS ) ,CS ),( Min( Max( MLU,RMSe ) ,MUR ) / ( RCSe - MUC ) ) ) / MLU ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.9035433070866141, "obj2": 0.06591544965491071}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - ( MRS / Min( Min( MRS ,MRS ) ,Const ) ) ) ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( ( CS / DS ) - RMSe ) )", "obj1": 0.3700787401574803, "obj2": 0.43150816090225413}, {"determining": "( ( MRS / ACS ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MLU ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5414263546033424}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,FirstVNF_Mem ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( Min( MUM ,RRSe ) - ( ( DS - Min( MUC ,MUM ) ) + ( MUM + MLU ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.007839071967904858}, {"determining": "Min( ( ( Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / Min( Max( CRS,FirstVNF_RAM_Server ) ,CRS ) ) ) ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - ( Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) * MUR ) ) ) * ( Max( DS,RMSe ) + ( Max( RRSe,RMSe ) + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.6969367229444248}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5235549697584708}, {"determining": "( ( MRS + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Max( BR,MRS ) ) + PN ) )", "choosing": "Min( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ) ,( MUM - CS ) )", "obj1": 0.3700787401574803, "obj2": 0.43150816090225413}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) + PN ) )", "choosing": "Min( MUR ,( MUM - CS ) )", "obj1": 0.9901574803149606, "obj2": 0.0019451287123036475}, {"determining": "( ( FirstVNF_CPU * BR ) + ARS )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - MLU ) ) + Min( MUR ,RRSe ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3499992331178012}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RMSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.4544672931307714}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,Min( CS ,Max( CS,( RCSe / RMSe ) ) ) ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4572841115621424}, {"determining": "( MDR - ( DDR - PN ) )", "choosing": "( ( ( MUC + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0011482964912323003}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ACS + RRS ) ) + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,MLU ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.4544672931307714}, {"determining": "( ( PN - CRS ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + MUR ) + ( RMSe + RCSe ) ) * Max( DS,DS ) )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "( ( ( ( ( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,MLU ) / CS ) ,( MUM - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.0015974958690822565}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4572841115621424}, {"determining": "( ( ( ( ( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) + PN ) )", "choosing": "Min( ( CS / CS ) ,( MUM - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.0015974958690822565}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + RRSe ) / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( Max( ( MDR - ( FirstVNF_RAM_Server + BR ) ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( MUM / ( CS * ( ( MUR / ( Min( MUC ,RMSe ) * RCSe ) ) - MUR ) ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_Mem ) + FirstVNF_Mem_Server ) * AMS ) + Min( BR ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,( Min( RMSe ,RCSe ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / Max( RCSe,MUM ) ) ) * ( Max( ( ( RCSe / ( ( RRSe * MUM ) * CS ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - MDR ) + AMS ) ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * Max( DS,CS ) ) * Min( Min( ( RMSe + RRSe ) ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Const + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( Min( MUM ,( RCSe * ( ( RMSe + RCSe ) / RMSe ) ) ) - DS ) + ( ( RCSe * MUR ) - ( MUM + MUM ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( Max( ( MUC * MUC ),MUR ) / RCSe ) / Max( ( ( MUC * RCSe ) - Max( MUM,RRSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( MUM - RCSe ),( ( MLU - Min( ( ( RRSe - MUM ) + Max( ( ( MUM / MUC ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ) ,MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( MUR + MUM ) * Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / PN ) * PN ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( MDR / ( Max( ( MRS - ( ( CRS * Max( FirstVNF_CPU_Server,PN ) ) * ( MRS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ),( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( RMSe - RCSe ) + ( ( ( ( ( RCSe + ( RRSe - CS ) ) / ( RRSe / ( MUC + CS ) ) ) - CS ) + MLU ) - ( MUM * ( ( Max( RRSe,MUR ) - RMSe ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( ( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) ) / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( Min( CS ,MLU ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( Max( ( MUC * MUC ),MUR ) / RCSe ) / Max( ( ( MUC * RCSe ) - Max( MUM,RRSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RMSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) + MUC ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - Max( ( ( ( RMSe * ( RCSe - Min( RRSe ,Max( DS,MLU ) ) ) ) + MLU ) / MUR ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( DDR,( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( DDR - AMS ) - Min( ( ( AMS * CRS ) * RRS ) ,ACS ) )", "choosing": "( ( Min( CS ,Max( CS,( RCSe / RMSe ) ) ) / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU * ( AMS - ACS ) ) / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * DDR )", "choosing": "( CS * ( ( ( ( MUC + MUR ) + Min( ( ( MLU * RCSe ) / RCSe ) ,MLU ) ) * Max( DS,DS ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MDR ) + Max( MDR,( ( ( ARS * FirstVNF_Mem ) * CRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUM ) + Max( CS,( MUC * RMSe ) ) )", "obj1": 0.03740157480314961, "obj2": 0.7516069493207022}, {"determining": "( ( PN - Min( ( ( ( ARS + PN ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( Max( DS,RMSe ) - RCSe ),Min( ( Max( MUM,CS ) + Max( RRSe,Max( ( ( ( RCSe - MLU ) * MUM ) / Max( ( RCSe - CS ),RRSe ) ),RCSe ) ) ) ,MUC ) )", "obj1": 0.7874015748031497, "obj2": 0.07212448830289715}, {"determining": "( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) - ( ( MDR * Const ) + FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + ( ( MUM - RMSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.7559055118110236, "obj2": 0.16631494617139175}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.12687728818619182}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( DS * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6812403617721323}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * MUM ) * ( MUC - ( MLU / CS ) ) )", "obj1": 0.5334645669291339, "obj2": 0.3073214906020783}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( MUR * MUM ) ) ) ,( MUM - CS ) )", "obj1": 0.702755905511811, "obj2": 0.20027554634868477}, {"determining": "( Min( RRS ,CRS ) + Min( DDR ,( ( ( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) * BR ) + BR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( DS / MUC ) ) - Max( MUC,MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.6101613198251098}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ,Max( BR,( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) - Max( RMSe,CS ) )", "obj1": 0.8956692913385826, "obj2": 0.06766230705554305}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( DS,RMSe ) * MUM ) * ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2717984156864153}, {"determining": "Min( ( Max( DDR,Const ) + ( ( MDR * BR ) * PN ) ) ,Min( ( Min( MDR ,MDR ) - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / Min( MUR ,DS ) ) * ( ( MUC / CS ) * RRSe ) )", "obj1": 0.42322834645669294, "obj2": 0.3802304804193347}, {"determining": "Min( ( FirstVNF_Mem_Server - ( Const / CRS ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( ( CS / MUC ) + CS ) ) + MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3601626910311336}, {"determining": "( ( ( MDR * BR ) * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( DS / MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.5815786765678527}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.46608443944136535}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( ( MUR / MUM ) / ( CS + CS ) ),( RCSe - RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.4985101941944099}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( Min( ( ( ACS - ( FirstVNF_RAM + CRS ) ) * ( ACS + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) ) * AMS ) / ( RRS * CRS ) ),( Const * FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - MLU ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.6811465179392295}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.3918828254509184}, {"determining": "Min( Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,( Max( PN,( Const + FirstVNF_RAM_Server ) ) / Max( BR,BR ) ) ) ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + RRSe ) ,( RCSe * Min( ( MUR / RMSe ) ,MUC ) ) )", "obj1": 0.6515748031496063, "obj2": 0.25250886303807496}, {"determining": "( ( ( CRS / PN ) * PN ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( MLU - RRSe ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.20719022863004738}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.41738979564218986}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( Max( FirstVNF_CPU_Server,( ACS - FirstVNF_RAM_Server ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( Min( ( ( Min( DS ,CS ) / ( MLU - ( RMSe * MUM ) ) ) * RMSe ) ,RCSe ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( ( BR * MDR ) + BR ) * Max( FirstVNF_Mem_Server,DDR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.49606299212598426, "obj2": 0.35677790499781203}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) )", "choosing": "( ( ( DS * Min( MUC ,MUR ) ) + Min( MUM ,RCSe ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,Min( CS ,Max( CS,( RCSe / RMSe ) ) ) ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.3490688108364851}, {"determining": "( ( Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( CS + MUM ) ) ) - Max( MUC,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.5546163197487944}, {"determining": "( ( ARS / MDR ) + Min( DDR ,( ( FirstVNF_CPU * BR ) + BR ) ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) ) ) - Max( MUC,MUR ) )", "obj1": 0.13385826771653545, "obj2": 0.6549688415117165}, {"determining": "( ( MRS / ACS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * RCSe ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MLU ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.20532827016276886}, {"determining": "( ( ( Max( AMS,Max( BR,FirstVNF_RAM ) ) - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( MUC * ( RCSe + RRSe ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5255351391379045}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,( ACS - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( ( MUR * ( MUC / MUR ) ) + ( ( MUR / ( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3484251968503937, "obj2": 0.434854254235452}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( Max( AMS,( FirstVNF_Mem - ( ( CRS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ) ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( Min( MUC ,Max( MUR,MUM ) ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( ( CRS * RRS ) / Min( Const ,ARS ) ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / Min( ( ARS + FirstVNF_CPU ) ,ARS ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / ( Min( ( DS - MUC ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - Max( DS,CS ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4505813091248276}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( Min( MLU ,MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3031496062992126, "obj2": 0.4636480792499065}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( ( ( AMS * CRS ) * RRS ) / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( ( DS * MUR ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2697498562474715}, {"determining": "Min( Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,ACS ) ) ,( ( ( BR * MDR ) + BR ) * Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "Min( RMSe ,( ( MUC / CS ) * DS ) )", "obj1": 0.6082677165354331, "obj2": 0.26053436244342354}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ARS + BR ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( ( RMSe / DS ) / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.4471575426701407}, {"determining": "( ( ARS / ACS ) + Min( DDR ,( ( FirstVNF_CPU * BR ) + BR ) ) )", "choosing": "( ( MUC - Max( Min( Min( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) ,MLU ) ,DS ),Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) ) ) - Max( MUC,MUR ) )", "obj1": 0.13385826771653545, "obj2": 0.6549688415117165}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) * CRS ) )", "choosing": "( Max( Min( MLU ,MLU ),MUR ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5094445939686736}, {"determining": "( ( FirstVNF_CPU * BR ) + Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( CS - DS ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - MLU ) ) + Min( MUR ,RRSe ) ) )", "obj1": 0.5236220472440944, "obj2": 0.35506213878179627}, {"determining": "Min( ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + RRS ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + RMSe ) ) + CS ) ) + MUC ) )", "obj1": 0.9114173228346457, "obj2": 0.04302926348044501}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( ( Min( CRS ,MRS ) + BR ) * AMS ) / ( RRS * CRS ) ),( Const * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / ( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * MUM ) + MLU ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6790372737977759}, {"determining": "Max( Min( ( ( AMS * CRS ) * RRS ) ,FirstVNF_CPU_Server ),( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( ( DS * MUR ) * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_Mem + Min( ( AMS * FirstVNF_RAM_Server ) ,Const ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( ( MUR / MUM ) / ( CS + CS ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.4288441593176031}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - ( MUM * Min( MUR ,RMSe ) ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9468503937007874, "obj2": 0.02388284374504496}, {"determining": "( ( ( CRS / PN ) * PN ) * Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) ,( DDR - FirstVNF_RAM ) ) )", "choosing": "( DS / ( Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) + ( MLU + CS ) ) )", "obj1": 0.9803149606299213, "obj2": 0.012828851829221284}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - Min( ACS ,MDR ) ) * MDR ) + BR ) * Max( FirstVNF_Mem_Server,DDR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( RCSe / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.905511811023622, "obj2": 0.055629716172650175}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5235549697584708}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) * CRS ) )", "choosing": "( Max( Min( MLU ,MLU ),MUR ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.22440944881889763, "obj2": 0.5219785535081122}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RMSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,Min( Max( MUC,Min( ( MUM / CS ) ,Min( MLU ,RRSe ) ) ) ,Max( MUM,( RRSe * ( MLU + MUC ) ) ) ) ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.015815540801948677}, {"determining": "( ( ( MDR * BR ) * PN ) + ( ( PN - CRS ) - ( DDR - PN ) ) )", "choosing": "( RMSe - ( DS / MUR ) )", "obj1": 0.9586614173228346, "obj2": 0.0163310353669459}, {"determining": "( ( ARS / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.1889763779527559, "obj2": 0.5468996427352621}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + BR )", "choosing": "( ( RCSe - Min( Min( Min( CS ,DS ) ,( RRSe * RMSe ) ) ,( MUM * MUM ) ) ) + ( ( MUR * MLU ) / ( CS + MLU ) ) )", "obj1": 0.8996062992125984, "obj2": 0.05695314623503354}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - ( MRS / Min( Min( MRS ,MRS ) ,Const ) ) ) ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( ( CS / DS ) - RMSe ) )", "obj1": 0.3700787401574803, "obj2": 0.43150816090225413}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / AMS ) ,( CRS * ( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( ( MUC - MUC ) * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "( FirstVNF_Mem * ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RMSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( ( MUR + MUM ) ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.501229519655996}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / RMSe ) ),MLU ) * Max( RCSe,MLU ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.0348942962110166}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,FirstVNF_Mem ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( Min( MUM ,RRSe ) - ( ( DS - Min( MUC ,MUM ) ) + ( MUM + MLU ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.007839071967904858}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( MUM - RCSe ),( ( MLU - Min( ( ( RRSe - MUM ) + Max( ( ( MUM / MUC ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ) ,MUM ) ) / MUC ) )", "obj1": 0.937007874015748, "obj2": 0.025547953708575252}, {"determining": "( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.9192913385826772, "obj2": 0.035302602448769344}, {"determining": "( ( MRS + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Max( BR,MRS ) ) + PN ) )", "choosing": "Min( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ) ,( MUM - CS ) )", "obj1": 0.3700787401574803, "obj2": 0.43150816090225413}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - ( MUM * Min( MUR ,RMSe ) ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9330708661417323, "obj2": 0.028998562131908462}, {"determining": "( ( ( ( ( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( ( CRS / FirstVNF_CPU_Server ) * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,MLU ) / CS ) ,( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) - CS ) )", "obj1": 0.9881889763779528, "obj2": 0.002438157452266733}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5010691798517573}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - ( MUM * Min( MUR ,RMSe ) ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9330708661417323, "obj2": 0.028998562131908462}, {"determining": "( ( FirstVNF_CPU * BR ) + ARS )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - MLU ) ) + Min( MUR ,RRSe ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3499992331178012}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ,Max( BR,( FirstVNF_RAM / Max( ARS,( RRS - FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) - Max( RMSe,Max( Min( MLU ,MLU ),MUR ) ) )", "obj1": 0.8956692913385826, "obj2": 0.06766230705554305}, {"determining": "( MDR - ( DDR - PN ) )", "choosing": "( ( ( MUC + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0011482964912323003}, {"determining": "( ( PN - CRS ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + MUR ) + ( RMSe + RCSe ) ) * Max( DS,DS ) )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "( ( FirstVNF_CPU * BR ) + BR )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + Min( MUR ,RRSe ) ) )", "obj1": 0.5275590551181102, "obj2": 0.3499992331178012}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) + PN ) )", "choosing": "Min( MUR ,( MUM - CS ) )", "obj1": 0.9901574803149606, "obj2": 0.0019451287123036475}, {"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) )", "obj1": 0.9921259842519685, "obj2": 0.0015716523956945435}, {"determining": "( ( ( ( ( ARS / Max( DDR,FirstVNF_Mem_Server ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( RCSe * RRSe ) ,( CS - Min( MLU ,MUM ) ) ) ,( MUM - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.0015716523956945435}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( ( ( ARS / MDR ) + ( DDR - RRS ) ) ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + RRSe ) / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( Max( ( MDR - ( FirstVNF_RAM_Server + BR ) ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( MUM / ( CS * ( ( MUR / ( Min( MUC ,RMSe ) * RCSe ) ) - MUR ) ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_Mem ) + FirstVNF_Mem_Server ) * AMS ) + Min( BR ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,( Min( RMSe ,RCSe ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / Max( RCSe,MUM ) ) ) * ( Max( ( ( RCSe / ( ( RRSe * MUM ) * CS ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - MDR ) + AMS ) ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * Max( DS,CS ) ) * Min( Min( ( RMSe + RRSe ) ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Const + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( Min( MUM ,( RCSe * ( ( RMSe + RCSe ) / RMSe ) ) ) - DS ) + ( ( RCSe * MUR ) - ( MUM + MUM ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) * ( Min( BR ,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( MLU,( DS * Min( MUC ,MUR ) ) ),( ( ( Max( ( MUC * MUC ),MUR ) / RCSe ) / Max( ( ( MUC * RCSe ) - Max( MUM,RRSe ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) ) - MUR ) ),( Max( CS,RMSe ) + CS ) ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( MUM - RCSe ),( ( MLU - Min( ( ( RRSe - MUM ) + Max( ( ( MUM / MUC ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ) ,MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( MUR + MUM ) * Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / PN ) * PN ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( MDR / ( Max( ( MRS - ( ( CRS * Max( FirstVNF_CPU_Server,PN ) ) * ( MRS / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ),( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( RMSe - RCSe ) + ( ( ( ( ( RCSe + ( RRSe - CS ) ) / ( RRSe / ( MUC + CS ) ) ) - CS ) + MLU ) - ( MUM * ( ( Max( RRSe,MUR ) - RMSe ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( ( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) ) / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( Min( CS ,MLU ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( AMS * CRS ) - DDR )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Min( ( ( AMS * CRS ) * RRS ) ,ACS ) )", "choosing": "( ( Min( CS ,Max( CS,( RCSe / RMSe ) ) ) / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MDR ) + Max( MDR,( ( ( ARS * FirstVNF_Mem ) * CRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUM ) + Max( CS,( MUC * RMSe ) ) )", "obj1": 0.03740157480314961, "obj2": 0.7516069493207022}, {"determining": "( ( PN - Min( ( ( ( ARS + PN ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( Max( DS,RMSe ) - RCSe ),Min( ( Max( MUM,CS ) + Max( RRSe,Max( ( ( ( RCSe - MLU ) * MUM ) / Max( ( RCSe - CS ),RRSe ) ),RCSe ) ) ) ,MUC ) )", "obj1": 0.7874015748031497, "obj2": 0.07212448830289715}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( Max( DS,RMSe ) * Min( ( RCSe / ( MUM + DS ) ) ,MUM ) ) * ( Min( Min( Max( ( MUC - MUC ),RCSe ) ,Min( CS ,Max( CS,( RCSe / RMSe ) ) ) ) ,DS ) - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.29442162261444216}, {"determining": "( Min( RRS ,CRS ) + Min( DDR ,( ( ( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) * BR ) + BR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( DS / MUC ) ) - Max( MUC,MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.6101613198251098}, {"determining": "( ( ARS / MDR ) + Min( DDR ,( ( FirstVNF_CPU * BR ) + BR ) ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) ) ) - Max( MUC,MUR ) )", "obj1": 0.13385826771653545, "obj2": 0.6549688415117165}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.234251968503937, "obj2": 0.49830735555384115}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + Min( BR ,FirstVNF_RAM ) ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( DS * Max( RCSe,Min( RCSe ,( ( CS - RCSe ) - RCSe ) ) ) ) ) / ( CS + CS ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6754113161160067}, {"determining": "( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) - ( ( MDR * ( FirstVNF_Mem + Min( ( AMS * FirstVNF_RAM_Server ) ,Const ) ) ) + FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + ( ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8779527559055118, "obj2": 0.07173938732829105}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( ( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( DS,RMSe ) * MUM ) * ( MUC - Max( Min( Min( RMSe ,MLU ) ,( RMSe + RCSe ) ),( MLU * CS ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.33663048932292294}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.46608443944136535}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.12687728818619182}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( DS,RMSe ) * MUM ) * ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2717984156864153}, {"determining": "( ( ( MDR * BR ) * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( DS / MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.5815786765678527}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( DS * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6812403617721323}, {"determining": "Min( ( Max( DDR,Const ) + ( ( MDR * BR ) * PN ) ) ,Min( ( Min( MDR ,MDR ) - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / Min( MUR ,DS ) ) * ( ( MUC / CS ) * RRSe ) )", "obj1": 0.42322834645669294, "obj2": 0.3802304804193347}, {"determining": "( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) - ( ( MDR * Const ) + FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + ( ( MUM - RMSe ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.7559055118110236, "obj2": 0.16631494617139175}, {"determining": "Min( Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,( Max( PN,( Const + FirstVNF_RAM_Server ) ) / Max( BR,BR ) ) ) ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + RRSe ) ,( RCSe * Min( ( MUR / RMSe ) ,MUC ) ) )", "obj1": 0.6515748031496063, "obj2": 0.25250886303807496}, {"determining": "( ( Min( ( Min( PN ,FirstVNF_Mem_Server ) + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Min( MUC ,MLU ) ,CS ) ) / RMSe ) / DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.34294724265989684}, {"determining": "( ( ( CRS / PN ) * PN ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( MLU - RRSe ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.20719022863004738}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.41738979564218986}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( BR * ( MDR + BR ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + MUC ) ) + ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) ) + MUC ) )", "obj1": 0.4566929133858268, "obj2": 0.3681991190317517}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( Max( FirstVNF_CPU_Server,( ACS - FirstVNF_RAM_Server ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( Min( ( ( Min( DS ,CS ) / ( MLU - ( RMSe * MUM ) ) ) * RMSe ) ,RCSe ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - BR ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / CS ) - Max( MLU,MLU ) ) + ( ( MUM * MUM ) - ( RCSe / ( MUC * MLU ) ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.13224495053672405}, {"determining": "( ( Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( CS + MUM ) ) ) - Max( MUC,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.5546163197487944}, {"determining": "Min( ( FirstVNF_Mem_Server - ( Const / CRS ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( ( CS / MUC ) + CS ) ) + MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3601626910311336}, {"determining": "( ( Min( ( AMS + BR ) ,Min( BR ,BR ) ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( MLU,DS ) ) ,( ( MLU * DS ) + DS ) ) ) / RMSe ) / DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.3918828254509184}, {"determining": "( ( ( Max( AMS,Max( BR,FirstVNF_RAM ) ) - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( MUC * ( RCSe + RRSe ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5255351391379045}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( Max( AMS,( FirstVNF_Mem - ( ( CRS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ) ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( Min( MUC ,Max( MUR,MUM ) ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( Min( MLU ,MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3031496062992126, "obj2": 0.4636480792499065}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( MUM - RCSe ),( ( MLU - ( ( RRSe * MUC ) - ( MUC * MUR ) ) ) / MUC ) )", "obj1": 0.7421259842519685, "obj2": 0.18375631547349286}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( ( CRS * RRS ) / Min( Const ,ARS ) ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / Min( ( ARS + FirstVNF_CPU ) ,ARS ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / ( Min( ( DS - MUC ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - Max( DS,CS ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4505813091248276}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / Max( AMS,ARS ) ) ) ,( CRS * CRS ) ) * ( Min( DDR ,Max( PN,FirstVNF_RAM_Server ) ) / ARS ) ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUC * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( MUR / ( DS * Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5186780838123852}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) * CRS ) )", "choosing": "( Max( Min( MLU ,MLU ),MUR ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5094445939686736}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( ( ( AMS * CRS ) * RRS ) / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( ( DS * MUR ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2697498562474715}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( BR + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( Min( FirstVNF_Mem ,( RRS - ACS ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Min( ( Min( RMSe ,MLU ) / CS ) ,Min( MUM ,Max( RRSe,Min( MUR ,Max( MUR,( MUR * MUR ) ) ) ) ) ) ) ,( MUM - CS ) )", "obj1": 0.702755905511811, "obj2": 0.19818300711633396}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( DDR - ( ( FirstVNF_RAM + PN ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,MLU ) ) * Max( DS,Max( ( RRSe / MLU ),Max( ( ( MUC / CS ) - MLU ),MUR ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.2594102378866794}, {"determining": "( ( ( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) - ( ( MDR * Const ) + FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) ) * AMS ) / ( RRS * CRS ) ),( Const * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / ( CS + ( ( MUM - RMSe ) - ( CS * RCSe ) ) ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.7322834645669292, "obj2": 0.1944096964506766}, {"determining": "( ( ( FirstVNF_CPU * BR ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) ) - Max( MUC,MUR ) )", "obj1": 0.13385826771653545, "obj2": 0.6549688415117165}, {"determining": "( ( MRS + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),MRS ) ) + PN ) )", "choosing": "Min( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,Min( MLU ,MLU ) ) ) ,( MUM - CS ) )", "obj1": 0.3661417322834646, "obj2": 0.42876360365635796}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,( ACS - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( ( MUR * ( MUC / MUR ) ) + ( ( MUR / ( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3484251968503937, "obj2": 0.434854254235452}, {"determining": "Min( ( ( ( ACS + ( CRS / FirstVNF_Mem ) ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( Max( MUM,RCSe ) * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4277869111682816}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( FirstVNF_CPU_Server / ( ( Const + ( Const * MDR ) ) / FirstVNF_CPU_Server ) ) ,( CRS * ( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( Max( RRSe,MUR ) / CS ),Min( RMSe ,Min( ( RCSe + MUC ) ,MLU ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7335756776685025}, {"determining": "( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUM - CS ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.44267725107899686}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ( Const * PN ) + DDR ) + Max( AMS,ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - Min( MUR ,MUM ) ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.43865959623445233}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ,Max( BR,( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) - Max( RMSe,CS ) )", "obj1": 0.8956692913385826, "obj2": 0.06766230705554305}, {"determining": "( ( MRS / ACS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * RCSe ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MLU ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.20532827016276886}, {"determining": "( Max( FirstVNF_Mem,MDR ) - ( DDR - PN ) )", "choosing": "( ( MUC + ( ( Max( MUC,Min( RMSe ,( MUR + Min( DS ,MUC ) ) ) ) / RRSe ) - ( MUC - DS ) ) ) * Max( DS,DS ) )", "obj1": 0.9724409448818898, "obj2": 0.012307267226003943}, {"determining": "( ( ( Const - MDR ) * ( ( ( DDR / ( DDR / Const ) ) * Min( Const ,BR ) ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + Max( ( ( MUM / ( Max( RCSe,DS ) / RMSe ) ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.02127523203962284}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * Max( ARS,( RRS - FirstVNF_RAM ) ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( ( ( MUC * MLU ) / ( RMSe / CS ) ) * MUM ) ) ) ,( MUM - CS ) )", "obj1": 0.6909448818897638, "obj2": 0.19976224163177286}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + Max( BR,BR ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( Max( Min( ( MUR * Max( RRSe,CS ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) ,( ( ( RCSe / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05019724736352543}, {"determining": "( ( DDR / MDR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( MUR * Min( ( RRSe - ( Min( RRSe ,CS ) * MLU ) ) ,CS ) ) ) ) ,( MUM - CS ) )", "obj1": 0.6811023622047244, "obj2": 0.20450395187531265}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.3918828254509184}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + BR )", "choosing": "( ( RCSe - Min( Min( Min( CS ,DS ) ,( RRSe * RMSe ) ) ,( MUM * MUM ) ) ) + ( ( MUR * MLU ) / ( CS + MLU ) ) )", "obj1": 0.8996062992125984, "obj2": 0.05695314623503354}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RMSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ARS / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.1889763779527559, "obj2": 0.5468996427352621}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( ( ( MUM - MUM ) - Min( RCSe ,( ( CS - RCSe ) - RCSe ) ) ) / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.7381889763779528, "obj2": 0.1925757518133682}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / RMSe ) ),MLU ) * Max( RCSe,MLU ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.0348942962110166}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - ( MUM * Min( MUR ,RMSe ) ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9330708661417323, "obj2": 0.028998562131908462}, {"determining": "Min( ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + RRS ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + RMSe ) ) + CS ) ) + MUC ) )", "obj1": 0.9114173228346457, "obj2": 0.04302926348044501}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,Min( Max( MUC,Min( ( MUM / CS ) ,Min( MLU ,RRSe ) ) ) ,Max( MUM,( RRSe * ( MLU + MUC ) ) ) ) ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.015815540801948677}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,FirstVNF_Mem ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( Min( MUM ,RRSe ) - ( ( DS - Min( MUC ,MUM ) ) + ( MUM + MLU ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.007839071967904858}, {"determining": "( ( AMS - ( FirstVNF_RAM + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ) - Max( MUC,MUR ) )", "obj1": 0.952755905511811, "obj2": 0.0210789008814533}, {"determining": "( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.9192913385826772, "obj2": 0.035302602448769344}, {"determining": "( ( ACS + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - MLU ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - Min( DS ,CS ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9133858267716536, "obj2": 0.04282382329064865}, {"determining": "( ( ( MDR * BR ) * PN ) + ( ( PN - CRS ) - ( DDR - PN ) ) )", "choosing": "( RMSe - ( DS / MUR ) )", "obj1": 0.9586614173228346, "obj2": 0.0163310353669459}, {"determining": "( Min( CRS ,MRS ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + MUR ) + ( RMSe + RCSe ) ) * Max( DS,Min( Min( MUC ,MLU ) ,CS ) ) )", "obj1": 0.984251968503937, "obj2": 0.007126571681276679}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) + ( ( ( ( AMS / RRS ) * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( Max( ( MLU - Min( DS ,CS ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) ) )", "obj1": 0.9547244094488189, "obj2": 0.020839076679007463}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * ( ( AMS * CRS ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - ( MUM * Min( MUR ,RMSe ) ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9330708661417323, "obj2": 0.028998562131908462}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ,Max( BR,( FirstVNF_RAM / Max( ARS,( RRS - FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) - Max( RMSe,Max( Min( MLU ,MLU ),MUR ) ) )", "obj1": 0.8956692913385826, "obj2": 0.06766230705554305}, {"determining": "Min( ( ( AMS * CRS ) * RRS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / AMS ) ,( CRS * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( Min( RCSe ,MUM ) / ( MUM - ( RMSe - CS ) ) ) / CS ),Min( RMSe ,( Max( ( ( MUC - MUC ) * RCSe ),MLU ) * ( RCSe / RMSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "( ( ( ( ( MDR * ( ( FirstVNF_RAM_Server + CRS ) * MDR ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) ,( MUM - CS ) )", "obj1": 0.9881889763779528, "obj2": 0.002438157452266733}, {"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) )", "obj1": 0.9980314960629921, "obj2": 0.0004851174813883473}, {"determining": "( MDR - ( DDR - PN ) )", "choosing": "( ( ( MUC + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0011482964912323003}, {"determining": "( ( ( ( ( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( ( CRS / FirstVNF_CPU_Server ) * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,MLU ) / CS ) ,( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) - CS ) )", "obj1": 0.9881889763779528, "obj2": 0.002438157452266733}, {"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) * PN ) * ( ( FirstVNF_RAM_Server + AMS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( ( Min( Max( ( MUC - MUC ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ) - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.0015716523956945435}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( MUR ,( MUM - CS ) ) + CS ) ) + MUC ) )", "obj1": 0.9901574803149606, "obj2": 0.0019192852389159345}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS - ACS ) ) / PN ) * PN ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + ( ( RRSe - CS ) + MLU ) ) + ( ( ( MUC + MUR ) + Min( ( ( MLU * RCSe ) / RCSe ) ,MLU ) ) * Max( DS,DS ) ) ) * Max( DS,DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0011482964912323003}, {"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) )", "obj1": 0.9921259842519685, "obj2": 0.0015716523956945435}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) + PN ) ) )", "choosing": "( ( MUM - CS ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.9901574803149606, "obj2": 0.0019192852389159345}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU * ( AMS - ACS ) ) / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * DDR )", "choosing": "( CS * ( ( ( ( MUC + MUR ) + Min( ( ( MLU * RCSe ) / RCSe ) ,MLU ) ) * Max( DS,DS ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( ( ( ARS / MDR ) + ( DDR - RRS ) ) ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + RRSe ) / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( ( FirstVNF_Mem_Server * Min( DDR ,Min( AMS ,CRS ) ) ) + Const ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,MLU ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( Max( ( MDR - ( FirstVNF_RAM_Server + BR ) ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( MUM / ( CS * ( ( MUR / ( Min( MUC ,RMSe ) * RCSe ) ) - MUR ) ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_Mem ) + FirstVNF_Mem_Server ) * AMS ) + Min( BR ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,( Min( RMSe ,RCSe ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / Max( RCSe,MUM ) ) ) * ( Max( ( ( RCSe / ( ( RRSe * MUM ) * CS ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - MDR ) + AMS ) ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * Max( DS,CS ) ) * Min( Min( ( RMSe + RRSe ) ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( FirstVNF_RAM_Server,Max( BR,MRS ) ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / Min( ( Min( RCSe ,( MUC + MUC ) ) + CS ) ,RMSe ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * ( Const + ( DDR / ( FirstVNF_Mem_Server - Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( Min( MUM ,( RCSe * ( ( RMSe + RCSe ) / RMSe ) ) ) - DS ) + ( ( RCSe * MUR ) - ( MUM + MUM ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * MDR ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( ( DS / MUR ) / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - DDR )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MDR ) + Max( MDR,( ( ( ARS * FirstVNF_Mem ) * CRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUM ) + Max( CS,( MUC * RMSe ) ) )", "obj1": 0.03740157480314961, "obj2": 0.7516069493207022}, {"determining": "( ( ( PN - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( Min( ( ( MLU * RCSe ) / RCSe ) ,MLU ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.06867979660231689}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ,Max( BR,( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ),( ( MUC * MLU ) / ( RMSe / CS ) ) ) - Max( RMSe,CS ) )", "obj1": 0.8956692913385826, "obj2": 0.06766230705554305}, {"determining": "( Min( RRS ,CRS ) + Min( DDR ,( ( ( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) * BR ) + BR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( DS / MUC ) ) - Max( MUC,MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.6101613198251098}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.46608443944136535}, {"determining": "( ( ( MDR * BR ) * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( DS / MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.5815786765678527}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( Max( DS,RMSe ) * Min( ( RCSe / ( MUM + DS ) ) ,MUM ) ) * ( Min( Min( Max( ( MUC - MUC ),RCSe ) ,Min( CS ,Max( CS,( RCSe / RMSe ) ) ) ) ,DS ) - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.29442162261444216}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( Min( DDR ,PN ),PN ) - FirstVNF_CPU ) ) ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / ( DS - MUR ) ) - Max( MLU,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.15957807841837135}, {"determining": "( ( ARS / MDR ) + Min( DDR ,( ( FirstVNF_CPU * BR ) + BR ) ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) ) ) - Max( MUC,MUR ) )", "obj1": 0.13385826771653545, "obj2": 0.6549688415117165}, {"determining": "( ACS + Min( ( MDR - ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe - Min( Min( Min( CS ,DS ) ,( RRSe * Max( ( MLU / DS ),( MLU + MUR ) ) ) ) ,( MUM * MUM ) ) ) / CS ) - ( DS / MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.6549938519230378}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( DS * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6812403617721323}, {"determining": "( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( Max( Min( Min( MUC ,MLU ) ,CS ),( MLU - DS ) ) ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.32052899284126235}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.41738979564218986}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - BR ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / CS ) - Max( MLU,MLU ) ) + ( ( MUM * MUM ) - ( RCSe / ( MUC * MLU ) ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.13224495053672405}, {"determining": "Min( Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,( Max( PN,( Const + FirstVNF_RAM_Server ) ) / Max( BR,BR ) ) ) ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( MLU + RRSe ) ,( RCSe * Min( ( MUR / RMSe ) ,MUC ) ) )", "obj1": 0.6515748031496063, "obj2": 0.25250886303807496}, {"determining": "( ( ( CRS / PN ) * PN ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( MLU - RRSe ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.20719022863004738}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( Max( PN,PN ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Min( ( Min( MLU ,MLU ) / CS ) ,( MUM - CS ) ) ) ,( MUM - CS ) )", "obj1": 0.7047244094488189, "obj2": 0.19739557517073072}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + Min( BR ,FirstVNF_RAM ) ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( DS * Max( RCSe,Min( RCSe ,( ( CS - RCSe ) - RCSe ) ) ) ) ) / ( CS + CS ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6754113161160067}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * Min( CRS ,FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * Max( DDR,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( MUC,CS ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.234251968503937, "obj2": 0.49830735555384115}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * ( ( MRS / ACS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( ( Min( CS ,MUR ) - ( MUR + MLU ) ) - ( MUM * Min( MUR ,RMSe ) ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2908373093885608}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( DS,RMSe ) * MUM ) * ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2717984156864153}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( Max( FirstVNF_CPU_Server,( ACS - FirstVNF_RAM_Server ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( Min( ( ( Min( DS ,CS ) / ( MLU - ( RMSe * MUM ) ) ) * RMSe ) ,RCSe ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( BR * ( MDR + BR ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + MUC ) ) + ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) ) + MUC ) )", "obj1": 0.4566929133858268, "obj2": 0.3681991190317517}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( ( CRS * RRS ) / Min( Const ,ARS ) ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( RRS,( Min( ( AMS / ( FirstVNF_RAM / Min( ( ARS + FirstVNF_CPU ) ,ARS ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( ( ( MUC - MUC ) * RCSe ),MLU ) * ( RCSe / RMSe ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.42244193488069004}, {"determining": "( ( Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( CS + MUM ) ) ) - Max( MUC,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.5546163197487944}, {"determining": "( ( ( ACS / PN ) - CRS ) - ( DDR - PN ) )", "choosing": "( ( MUM - CS ) * Max( DS,DS ) )", "obj1": 0.5, "obj2": 0.34080169085028456}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( Max( AMS,( FirstVNF_Mem - ( ( CRS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ) ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( Min( MUC ,Max( MUR,MUM ) ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( Min( MLU ,MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3031496062992126, "obj2": 0.4636480792499065}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( ( CRS * RRS ) / Min( Const ,ARS ) ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / Min( ( ARS + FirstVNF_CPU ) ,ARS ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / ( Min( ( DS - MUC ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - Max( DS,CS ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4505813091248276}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( Min( PN ,FirstVNF_Mem_Server ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Min( Min( MUC ,MLU ) ,CS ) ,RCSe ),Min( Max( CS,Max( MLU,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3761891510191824}, {"determining": "( ( ( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) - ( ( MDR * Const ) + FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( Min( CRS ,MRS ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) ) * AMS ) / ( RRS * CRS ) ),Min( ( CRS - ACS ) ,( DDR + PN ) ) ) )", "choosing": "( ( ( MUM / ( CS + ( ( MUM - RMSe ) - ( CS * ( RRSe - RCSe ) ) ) ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.7381889763779528, "obj2": 0.14473697916272096}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( DDR - ( ( FirstVNF_RAM + PN ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,MLU ) ) * Max( DS,Max( ( RRSe / MLU ),Max( ( ( MUC / CS ) - MLU ),MUR ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.2594102378866794}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.234251968503937, "obj2": 0.49830735555384115}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( ( ( AMS * CRS ) * RRS ) / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( ( DS * MUR ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2697498562474715}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - PN ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,Min( MUC ,MUM ) ),Min( Max( CS,Max( MLU,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.3918828254509184}, {"determining": "Min( ( FirstVNF_Mem_Server - ( Const / CRS ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( ( CS / MUC ) + CS ) ) + MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3601626910311336}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - ( ( ( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,MUC ),Min( Max( CS,Max( MLU,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.38778287308439935}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( FirstVNF_CPU_Server / ( ( Const + ( Const * MDR ) ) / FirstVNF_CPU_Server ) ) ,( CRS * ( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( Max( RRSe,MUR ) / CS ),Min( RMSe ,Min( ( RCSe + MUC ) ,MLU ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7335756776685025}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( BR * ( ( ( MDR * ( ( FirstVNF_RAM_Server + CRS ) * MDR ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + MUC ) ) + ( RCSe - Min( Min( ( MUC + MUR ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) ) + MUC ) )", "obj1": 0.47244094488188976, "obj2": 0.3506084168976828}, {"determining": "( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUM - CS ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.44267725107899686}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Max( ( MDR * ( Max( Min( PN ,FirstVNF_Mem_Server ),( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / CS ) - Max( MLU,MLU ) ) + ( CS + ( ( MUM - RMSe ) - ( CS * RCSe ) ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.13651684058774172}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( Const * PN ) + DDR ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( ( CS / Max( RMSe,( MUR * MUM ) ) ) ,( MUM - CS ) ) + CS ) ) + MUC ) )", "obj1": 0.9488188976377953, "obj2": 0.016250333536642233}, {"determining": "( ( Min( ( AMS + BR ) ,Min( BR ,BR ) ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( MLU,DS ) ) ,( ( MLU * DS ) + DS ) ) ) / RMSe ) / DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.34294724265989684}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Min( Const ,BR ) ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) * ( ( MDR * BR ) * PN ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( DS / MUR ) + Max( ( ( MUM / MUC ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.027476576013293095}, {"determining": "( ( CRS - ( FirstVNF_Mem * AMS ) ) * ( ACS - ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,Max( Min( RMSe ,Min( Max( MUC,Min( ( MUM / CS ) ,Min( MLU ,RRSe ) ) ) ,Max( MUM,( RRSe * ( MLU + MUC ) ) ) ) ),( MUM - ( ( Max( Min( CS ,MUM ),MUM ) * RMSe ) - MUR ) ) ) ) * ( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.015815540801948677}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,( ACS - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( ( MUR * ( MUC / MUR ) ) + ( ( MUR / ( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3484251968503937, "obj2": 0.434854254235452}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + BR )", "choosing": "( ( RCSe - Min( Min( Min( CS ,DS ) ,( RRSe * RMSe ) ) ,( MUM * MUM ) ) ) + ( ( MUR * MLU ) / ( CS + MLU ) ) )", "obj1": 0.8996062992125984, "obj2": 0.05695314623503354}, {"determining": "( ( ( Max( AMS,Max( BR,FirstVNF_RAM ) ) - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( MUC * ( RCSe + RRSe ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5311959802048366}, {"determining": "Min( ( Max( DDR,Const ) + ( ( MDR * BR ) * PN ) ) ,Min( ( Min( MDR ,MDR ) - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / Min( MUR ,DS ) ) * ( ( MUC / CS ) * RRSe ) )", "obj1": 0.42322834645669294, "obj2": 0.3802304804193347}, {"determining": "( ( ( Const - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( AMS ,Const ) ) ) * Min( ACS ,( MRS / ACS ) ) )", "choosing": "( Min( ( MUR - ( RMSe / Min( Max( RCSe,( RRSe - Min( RMSe ,MLU ) ) ) ,RCSe ) ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RCSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5140507693384844}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RMSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( ( ( MUC * MLU ) / ( RMSe / CS ) ) * MUM ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5403341788593088}, {"determining": "( ( ARS / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.1889763779527559, "obj2": 0.5468996427352621}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * Max( ARS,( RRS - FirstVNF_RAM ) ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( ( ( MUC * MLU ) / ( RMSe / CS ) ) * MUM ) ) ) ,( MUM - CS ) )", "obj1": 0.6909448818897638, "obj2": 0.19976224163177286}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / Max( AMS,ARS ) ) ) ,( CRS * CRS ) ) * ( Min( DDR ,Max( PN,FirstVNF_RAM_Server ) ) / ARS ) ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUC * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( MUR / ( DS * Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5186780838123852}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( PN,PN ) - FirstVNF_CPU ) ) ) * CRS ) )", "choosing": "( Max( Min( MLU ,MLU ),MUR ) / ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5094445939686736}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ( Const * PN ) + DDR ) + Max( AMS,ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - Min( MUR ,MUM ) ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.43865959623445233}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) + ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( Min( ( AMS / AMS ) ,( CRS * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ACS ) ) ) ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( Max( ( ( MUC - MUC ) * RCSe ),MLU ) * ( RCSe / RMSe ) ) - ( ( Max( ( MLU - ( MUM * Min( MUR ,RMSe ) ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9251968503937008, "obj2": 0.03464550635026024}, {"determining": "( Max( FirstVNF_Mem,MDR ) - ( DDR - PN ) )", "choosing": "( ( MUC + ( ( Max( MUC,Min( RMSe ,( MUR + Min( DS ,MUC ) ) ) ) / RRSe ) - ( MUC - DS ) ) ) * Max( DS,DS ) )", "obj1": 0.9724409448818898, "obj2": 0.012307267226003943}, {"determining": "( ( Min( ( AMS + BR ) ,Min( BR ,BR ) ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( MLU,DS ) ) ,( ( MLU * DS ) + DS ) ) ) / RMSe ) / DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.3918828254509184}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + Max( BR,BR ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( Max( Min( ( MUR * Max( RRSe,CS ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) ,( ( ( RCSe / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.9035433070866141, "obj2": 0.04810426845309426}, {"determining": "( ( ( Const - MDR ) * Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ) * Min( ACS ,BR ) )", "choosing": "( Min( CS ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5244811458686724}, {"determining": "( ( ( Max( AMS,Max( BR,FirstVNF_RAM ) ) - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( MUC * ( RCSe + RRSe ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5255351391379045}, {"determining": "( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( DS / ( ( RRSe * MUC ) - ( MUC * MUR ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.021237103150274005}, {"determining": "( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.9192913385826772, "obj2": 0.035302602448769344}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,FirstVNF_Mem ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( Min( MUM ,RRSe ) - ( ( DS - Min( MUC ,MUM ) ) + ( MUM + MLU ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.007839071967904858}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Max( PN,( Max( PN,PN ) - FirstVNF_CPU ) ) ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / CS ) - Max( MLU,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( ( RRSe - RCSe ) - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7559055118110236, "obj2": 0.13290013300259784}, {"determining": "( ( DDR / MDR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( MUR * Min( ( RRSe - ( Min( RRSe ,CS ) * MLU ) ) ,CS ) ) ) ) ,( MUM - CS ) )", "obj1": 0.6811023622047244, "obj2": 0.20450395187531265}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( BR + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( Min( FirstVNF_Mem ,( RRS - ACS ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Min( ( Min( RMSe ,MLU ) / CS ) ,Min( MUM ,Max( RRSe,Min( MUR ,Max( MUR,( MUR * MUR ) ) ) ) ) ) ) ,( MUM - CS ) )", "obj1": 0.702755905511811, "obj2": 0.19818300711633396}, {"determining": "( ( MRS / ACS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * RCSe ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MLU ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.20532827016276886}, {"determining": "Min( ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + RRS ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + RMSe ) ) + CS ) ) + MUC ) )", "obj1": 0.9114173228346457, "obj2": 0.04302926348044501}, {"determining": "( ( DDR / MDR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( MUR * Min( ( RRSe - ( Min( RRSe ,CS ) * MLU ) ) ,CS ) ) ) ) ,( MUM - CS ) )", "obj1": 0.6850393700787402, "obj2": 0.20430547473246755}, {"determining": "( ( AMS - ( Min( ( CRS - ACS ) ,( MRS + PN ) ) + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),RRSe ) ) / ( CS * RCSe ) ) - ( CS + CS ) )", "obj1": 0.2263779527559055, "obj2": 0.5104658299445528}, {"determining": "( ( PN - Min( ( ( ( ( ( PN + FirstVNF_RAM ) / MDR ) + Min( DDR ,PN ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( Max( DS,RMSe ) - RCSe ),( ( MLU - Max( ( ( Min( MLU ,( RCSe + RCSe ) ) - MUM ) + CS ),CS ) ) / MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.009935184927386508}, {"determining": "( Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * RCSe ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + CS ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.20532827016276886}, {"determining": "( ( ( FirstVNF_CPU * BR ) + BR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) ) - Max( MUC,MUR ) )", "obj1": 0.13385826771653545, "obj2": 0.6549688415117165}, {"determining": "( ( ACS + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - MLU ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - Min( DS ,CS ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9133858267716536, "obj2": 0.04282382329064865}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ( Const * ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + DDR ) + Max( AMS,ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - Min( MUR ,MUM ) ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * ( RCSe / CS ) ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.43865959623445233}, {"determining": "( ( Min( ( Min( PN ,FirstVNF_Mem_Server ) + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Min( MUC ,MLU ) ,CS ) ) / RMSe ) / DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.34294724265989684}, {"determining": "( ( ( Max( RRS,ACS ) * FirstVNF_Mem ) + ( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) ,( ( ( Min( RCSe ,( MUC + MUC ) ) / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05019724736352543}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + Max( ( Max( RRSe,MUR ) / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.02127523203962284}, {"determining": "( ( ( ( ( MDR * ( ( FirstVNF_RAM_Server + CRS ) * MDR ) ) - MDR ) * ( ( BR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) + Min( RCSe ,MLU ) ) ,( MUM - CS ) )", "obj1": 0.984251968503937, "obj2": 0.003690008043330088}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( ( ( CRS / PN ) * PN ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( Min( CS ,MUR ),RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RMSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / RMSe ) ),MLU ) * Max( RCSe,MLU ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.0348942962110166}, {"determining": "( ( ACS + Max( BR,MRS ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - MLU ) ,( ( ( MUM * ( ( MUC * MLU ) / ( RMSe / CS ) ) ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - Min( DS ,CS ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9133858267716536, "obj2": 0.04282382329064865}, {"determining": "( ( ( Const - MDR ) * ( ( ( DDR / ( DDR / Const ) ) * Min( Const ,BR ) ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + Max( ( ( MUM / ( Max( RCSe,DS ) / RMSe ) ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.02127523203962284}, {"determining": "( ( ( ( ( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( ( CRS / FirstVNF_CPU_Server ) * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,( RCSe * ( CS / MUM ) ) ) / CS ) ,( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) - CS ) )", "obj1": 0.9862204724409449, "obj2": 0.003358021605090556}, {"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) )", "obj1": 0.9980314960629921, "obj2": 0.0004851174813883473}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) ,Max( ( MDR * Min( Const ,BR ) ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( ( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + ( ( MUC / DS ) + MUM ) ) / ( MLU / MLU ) ) ),( ( MUC * MLU ) / ( RMSe / ( MUC * MUR ) ) ) ) - Max( RMSe,CS ) )", "obj1": 0.8956692913385826, "obj2": 0.06766230705554305}, {"determining": "( MDR - ( DDR - PN ) )", "choosing": "( ( ( MUC + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0011482964912323003}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + Max( BR,BR ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( Max( Min( ( MUR * Max( RRSe,CS ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) ,( ( ( RCSe / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05019724736352543}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( ( MDR * RRS ) / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( MUM - RMSe ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( ( DS * MUR ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2697498562474715}, {"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) )", "obj1": 0.9921259842519685, "obj2": 0.0015716523956945435}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * ( ( AMS * CRS ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( ( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( ( CRS / FirstVNF_CPU_Server ) * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,MLU ) / CS ) ,( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) - CS ) )", "obj1": 0.9881889763779528, "obj2": 0.002438157452266733}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM - CS ) / ( RCSe * Min( MUM ,MUR ) ) )", "obj1": 0.9901574803149606, "obj2": 0.0019192852389159345}, {"determining": "( ( ( ( ( MDR * ( ( FirstVNF_RAM_Server + CRS ) * MDR ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) ,( MUM - CS ) )", "obj1": 0.9881889763779528, "obj2": 0.002438157452266733}, {"determining": "( ( ( ( FirstVNF_CPU * ( AMS - ACS ) ) / PN ) * PN ) - ( DDR - PN ) )", "choosing": "( ( ( MUC + ( ( RRSe - CS ) + MLU ) ) + ( ( ( MUC + MUR ) + Min( ( ( MLU * RCSe ) / RCSe ) ,MLU ) ) * Max( DS,DS ) ) ) * Max( DS,DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0011482964912323003}], "8": [{"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * ( MDR * Const ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * MDR ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( ( DS / MUR ) / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MDR ) + Max( MDR,( ( ( ARS * FirstVNF_Mem ) * CRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,MUM ) + Max( CS,( MUC * RMSe ) ) )", "obj1": 0.03740157480314961, "obj2": 0.7516069493207022}, {"determining": "( Min( ( Min( MDR ,MDR ) - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS / DS ) / CS ) - ( DS / MUR ) )", "obj1": 0.11220472440944881, "obj2": 0.5887016069540338}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / DDR ) - Min( ( FirstVNF_Mem_Server / PN ) ,FirstVNF_Mem ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( Min( MUM ,RRSe ) - ( ( DS - ( ( RRSe - CS ) + MLU ) ) + ( MUM + MLU ) ) ) )", "obj1": 0.8720472440944882, "obj2": 0.05871621987631967}, {"determining": "Min( ( ( ACS - ( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ) + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( Max( DS,RMSe ) * Min( ( RCSe / ( MUM + DS ) ) ,MUM ) ) * ( Min( ( ( ( MUC / ( DS - MUR ) ) - Max( MLU,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,DS ) - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) )", "obj1": 0.7381889763779528, "obj2": 0.1304162608348528}, {"determining": "( ( ACS - ( FirstVNF_RAM + ( MDR - MRS ) ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( ( MUM * ( CS / DS ) ) ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.4921259842519685, "obj2": 0.2839328191350846}, {"determining": "( ( Max( FirstVNF_CPU_Server,( MDR - ( DDR - PN ) ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( Max( Min( RCSe ,MLU ),MUC ) ,Max( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.27755905511811024, "obj2": 0.4631832508547377}, {"determining": "( ACS + Min( ( MDR - ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe - Min( Min( Min( CS ,DS ) ,( RRSe * Max( ( MLU / DS ),( MLU + MUR ) ) ) ) ,( MUM * MUM ) ) ) / CS ) - ( DS / MUR ) )", "obj1": 0.09055118110236221, "obj2": 0.6549938519230378}, {"determining": "( ( Min( ( AMS + BR ) ,Min( BR ,BR ) ) + FirstVNF_Mem ) - Max( ( ( ( DDR - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * ( CS + MUM ) ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( MLU,DS ) ) ,( ( MLU * DS ) + DS ) ) ) / RMSe ) / DS ) ) )", "obj1": 0.6200787401574803, "obj2": 0.24615467337385893}, {"determining": "( ( ( PN - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( Min( ( ( MLU * RMSe ) / RCSe ) ,MLU ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.06867979660231689}, {"determining": "( ( ( Const - MDR ) * Min( Max( Min( ( ( FirstVNF_CPU * BR ) + BR ) ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( AMS ,Const ) ) ) * Min( ACS ,( MRS / ACS ) ) )", "choosing": "( Min( ( MUR - ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) / Min( Max( RCSe,( RRSe - Min( RMSe ,MLU ) ) ) ,RCSe ) ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RCSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.5789057443506397}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Max( ( MDR * ( Max( ARS,( RRS - FirstVNF_RAM ) ) + AMS ) ),( Max( Min( DDR ,PN ),PN ) - FirstVNF_CPU ) ) ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( RCSe / CS ) + Min( ( ( ( MUC / ( DS - MUR ) ) - Max( MLU,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( MUC - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.15957807841837135}, {"determining": "( ( ( PN - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( ( BR * ( MDR + BR ) ) ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( Min( ( ( MLU * RCSe ) / RCSe ) ,MLU ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * MLU )", "obj1": 0.7618110236220472, "obj2": 0.0698341451113817}, {"determining": "( ( ( CRS / PN ) * PN ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( ( RCSe / MUR ) + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( MLU - RRSe ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.20719022863004738}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( Max( DS,RMSe ) * Min( ( RCSe / ( MUM + DS ) ) ,MUM ) ) * ( Min( Min( Max( ( MUC - MUC ),RCSe ) ,Min( CS ,Max( CS,( RCSe / RMSe ) ) ) ) ,DS ) - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.2801702180986942}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) ) * Min( MUM ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.38779527559055116, "obj2": 0.41738979564218986}, {"determining": "( ( AMS - ( Min( ( CRS - ACS ) ,( MRS + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),RRSe ) ) / ( CS * RCSe ) ) - ( CS + CS ) )", "obj1": 0.2440944881889764, "obj2": 0.4870317192318701}, {"determining": "( ( Min( ( AMS + BR ) ,Min( BR ,BR ) ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( MLU,DS ) ) ,( ( MLU * DS ) + DS ) ) ) / RMSe ) / DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.34294724265989684}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( DS * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6812403617721323}, {"determining": "( ( Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( CS + MUM ) ) ) - Max( MUC,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.5546163197487944}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( ( CRS * RRS ) / Min( Const ,ARS ) ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / Min( ( ARS + FirstVNF_CPU ) ,ARS ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / ( Min( ( DS - MUC ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - Max( DS,CS ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4505813091248276}, {"determining": "( Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( ( DDR / AMS ) + ARS ) / AMS ) ) * ( ( ( Max( Max( AMS,ARS ),ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( MUR * Min( ( RRSe - ( Min( RRSe ,CS ) * Min( RCSe ,RMSe ) ) ) ,CS ) ) ) ) ,( MUM - CS ) )", "obj1": 0.7066929133858267, "obj2": 0.1895748802558498}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( DS,RMSe ) * MUM ) * ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2717984156864153}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( Max( FirstVNF_CPU_Server,( ACS - FirstVNF_RAM_Server ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( Min( ( ( Min( DS ,CS ) / ( MLU - ( RMSe * MUM ) ) ) * RMSe ) ,RCSe ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "( ( Min( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( Min( PN ,FirstVNF_Mem_Server ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - MUR ) ) )", "obj1": 0.43700787401574803, "obj2": 0.3666969316103444}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( ( CRS * RRS ) / Min( Const ,ARS ) ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( RRS,( Min( ( AMS / ( FirstVNF_RAM / Min( ( ARS + FirstVNF_CPU ) ,ARS ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( ( ( MUC - MUC ) * RCSe ),MLU ) * ( RCSe / RMSe ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.42244193488069004}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + Max( AMS,ARS ) ) + ( PN / Const ) ) * ( Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) / ( FirstVNF_Mem_Server + ARS ) ) ) ,( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + Min( BR ,FirstVNF_RAM ) ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( DS * Max( RCSe,Min( RCSe ,( MLU - RCSe ) ) ) ) ) / ( CS + CS ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6717858201641742}, {"determining": "Min( ( FirstVNF_Mem_Server - ( Const / CRS ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( ( CS / MUC ) + CS ) ) + MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3601626910311336}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( Min( PN ,FirstVNF_Mem_Server ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,Min( MUR ,MUM ) ),Min( Max( CS,Max( MLU,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.3918828254509184}, {"determining": "( ACS + Min( ( Min( ( AMS / ( FirstVNF_RAM / Max( AMS,ARS ) ) ) ,( CRS * CRS ) ) * FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe - Min( Min( Min( CS ,DS ) ,( RRSe * ( DS * Max( RCSe,RRSe ) ) ) ) ,( MUM * MUM ) ) ) / CS ) - ( DS / MUR ) )", "obj1": 0.08661417322834646, "obj2": 0.6563618172967735}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( DDR - ( ( FirstVNF_RAM + PN ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( MUR - Min( RMSe ,RCSe ) ) - MLU ) + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,MLU ) ) * Max( DS,Max( ( RRSe / MLU ),Max( ( ( MUC / CS ) - MLU ),MUR ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.2594102378866794}, {"determining": "( ( Max( Max( ( BR - AMS ),ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + BR )", "choosing": "( ( RCSe - Min( Min( Min( CS ,DS ) ,( RRSe * RMSe ) ) ,( MUM * MUM ) ) ) + ( ( MUR * MLU ) / ( CS + MLU ) ) )", "obj1": 0.8996062992125984, "obj2": 0.05695314623503354}, {"determining": "Min( ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) ,( ( BR * ( MDR + BR ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + MUC ) ) + ( RCSe - Min( Min( Min( CS ,DS ) ,Max( CS,MLU ) ) ,( MUM * MUM ) ) ) ) ) + MUC ) )", "obj1": 0.5905511811023622, "obj2": 0.2708899544357449}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( FirstVNF_CPU_Server / ( ( Const + ( Const * MDR ) ) / FirstVNF_CPU_Server ) ) ,( CRS * ( Max( FirstVNF_CPU_Server,( MDR - MRS ) ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( Max( RRSe,MUR ) / CS ),Min( RMSe ,Min( ( RCSe + MUC ) ,MLU ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7335756776685025}, {"determining": "( ( AMS - ( Min( ( CRS - ACS ) ,( MRS + ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( Min( Max( ( Min( Max( ( MUC - DS ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),RRSe ) ) / ( CS * RCSe ) ) - ( CS + CS ) )", "obj1": 0.2263779527559055, "obj2": 0.5008723577038984}, {"determining": "( ( ARS / MDR ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.1889763779527559, "obj2": 0.5468996427352621}, {"determining": "( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUM - CS ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.44267725107899686}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( ( ( AMS * CRS ) * RRS ) / ( FirstVNF_Mem * AMS ) ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( ( DS * MUR ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.2680388840336706}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ( ARS + DDR ) + CRS ) + ( PN / Const ) ) * ( Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( Min( DS ,MUR ) + ( ( MUR / ( DS * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6752974134760811}, {"determining": "( ( DDR - PN ) + Min( DDR ,PN ) )", "choosing": "( ( Min( Max( ( Min( Max( ( MUC - MUC ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),RRSe ) ) / ( CS * RCSe ) ) - Max( MUC,MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.5393775783330707}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - ( ( ( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) + BR ) + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,MUC ),Min( Max( CS,Max( MLU,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.38778287308439935}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( Max( PN,PN ) * CRS ) ) - FirstVNF_RAM ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Min( ( Min( MLU ,RMSe ) / CS ) ,( MUM - CS ) ) ) ,( MUM - CS ) )", "obj1": 0.6988188976377953, "obj2": 0.19429785499213575}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( ( ( ( ( ARS + DDR ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( Const * PN ) + DDR ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( ( CS / Max( RMSe,( MUR * RCSe ) ) ) ,( MUM - CS ) ) + CS ) ) + MUC ) )", "obj1": 0.952755905511811, "obj2": 0.014969354637879103}, {"determining": "( Max( ( FirstVNF_RAM_Server / AMS ),( AMS * Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,( ACS - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) ) * Max( CRS,RRS ) )", "choosing": "( ( MUR * ( MUC / MUR ) ) + ( ( MUR / ( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ) / ( CS + CS ) ) )", "obj1": 0.3484251968503937, "obj2": 0.434854254235452}, {"determining": "( Max( FirstVNF_Mem,MDR ) - ( DDR - PN ) )", "choosing": "( ( MUC + ( ( Max( MUC,Min( RMSe ,( MUR + Min( DS ,MUC ) ) ) ) / RRSe ) - ( MUC - DS ) ) ) * Max( DS,DS ) )", "obj1": 0.9724409448818898, "obj2": 0.012307267226003943}, {"determining": "( ( ( Max( AMS,Max( BR,FirstVNF_RAM ) ) - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( MUC * ( RCSe + RRSe ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5311959802048366}, {"determining": "( ( ( Const - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( AMS ,Const ) ) ) * Min( ACS ,( MRS / ACS ) ) )", "choosing": "( Min( ( MUR - ( RMSe / Min( Max( RCSe,( RRSe - Min( RMSe ,MLU ) ) ) ,RCSe ) ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RCSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5140507693384844}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * Max( ARS,( RRS - FirstVNF_RAM ) ) ) + BR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( ( ( MUC * MLU ) / ( RMSe / CS ) ) * MUM ) ) ) ,( MUM - CS ) )", "obj1": 0.6909448818897638, "obj2": 0.19976224163177286}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( BR * ( ( ( MDR * ( ( FirstVNF_RAM_Server + CRS ) * MDR ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + MUC ) ) + ( RCSe - Min( Min( ( MUC + MUR ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) ) + MUC ) )", "obj1": 0.47244094488188976, "obj2": 0.3506084168976828}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * Min( CRS ,FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * Max( DDR,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( MUC,CS ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.234251968503937, "obj2": 0.49830735555384115}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( Const * PN ) + DDR ) ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( ( CS / Max( RMSe,( MUR * MUM ) ) ) ,( MUM - CS ) ) + CS ) ) + MUC ) )", "obj1": 0.9488188976377953, "obj2": 0.016250333536642233}, {"determining": "( ( Min( ( Min( PN ,FirstVNF_Mem_Server ) + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Min( MUC ,MLU ) ,CS ) ) / RMSe ) / DS ) ) )", "obj1": 0.48031496062992124, "obj2": 0.34294724265989684}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ( Const * PN ) + DDR ) + Max( AMS,ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - Min( MUR ,MUM ) ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.43865959623445233}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( RRS,Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Min( Min( MUC ,MLU ) ,CS ) ,RCSe ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) / RMSe ) / DS ) ) )", "obj1": 0.421259842519685, "obj2": 0.3844153116292789}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) ) - Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) )", "choosing": "( ( MLU * DS ) + Min( ( ( ( MUC / CS ) - Max( MLU,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( RRSe + ( ( RRSe - RCSe ) - MUM ) ) - ( RRSe - MLU ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.029096373733243332}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - PN ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,Min( MUC ,MUM ) ),Min( Max( CS,Max( MLU,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.4015748031496063, "obj2": 0.3918828254509184}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Min( Const ,BR ) ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) * ( ( MDR * BR ) * PN ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( DS / MUR ) + Max( ( ( MUM / MUC ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.027476576013293095}, {"determining": "( ( ( Const - MDR ) * Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ) * Min( ACS ,BR ) )", "choosing": "( Min( CS ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5244811458686724}, {"determining": "( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( DS / ( ( RRSe * MUC ) - ( MUC * MUR ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.021237103150274005}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * BR ) + BR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( Max( ( ( MUM / MUC ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) / ( Min( ( CS / Max( RMSe,( MUR * MUM ) ) ) ,( MUM - CS ) ) + CS ) ) + MUC ) )", "obj1": 0.4704724409448819, "obj2": 0.35573739450059016}, {"determining": "( ( MRS + BR ) * ( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,FirstVNF_Mem ) ) + PN ) )", "choosing": "Min( ( CS / MUM ) ,( Min( MUM ,RRSe ) - ( ( DS - Min( MUC ,MUM ) ) + ( MUM + MLU ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.007839071967904858}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / Max( AMS,ARS ) ) ) ,( CRS * CRS ) ) * ( Min( DDR ,Max( PN,FirstVNF_RAM_Server ) ) / ARS ) ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUC * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( MUR / ( DS * Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5186780838123852}, {"determining": "( ( DDR / MDR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( MUR * Min( ( RRSe - ( Min( RRSe ,CS ) * MLU ) ) ,CS ) ) ) ) ,( MUM - CS ) )", "obj1": 0.6811023622047244, "obj2": 0.20450395187531265}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( PN,Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Min( Min( MUC ,MLU ) ,CS ) ,RCSe ),Min( MUC ,MUM ) ) / RMSe ) / DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3761891510191824}, {"determining": "( ( MRS / ACS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * RCSe ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + MLU ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.20532827016276886}, {"determining": "( ( PN - Min( ( ( ( ( ( PN + FirstVNF_RAM ) / MDR ) + Min( DDR ,PN ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Min( CRS ,BR ) ) ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Max( ( Max( DS,RMSe ) - RCSe ),( ( MLU - Max( ( ( Min( MLU ,( RCSe + RCSe ) ) - MUM ) + CS ),CS ) ) / MUC ) )", "obj1": 0.9744094488188977, "obj2": 0.009935184927386508}, {"determining": "Min( ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( RCSe / CS ) ,( ( RCSe / ( Min( RCSe ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) + CS ) ) + MUC ) )", "obj1": 0.9173228346456693, "obj2": 0.03794326646129376}, {"determining": "( ( ( Const - MDR ) * ( ( Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( AMS ,Const ) ) * Const ) + FirstVNF_RAM ) ) * ( ( AMS * CRS ) * ( ( MDR * Min( Const ,BR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe * Min( RMSe ,( Max( ( MUM - RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( MUR - ( RMSe / Min( Max( RCSe,( RRSe - Min( RMSe ,MLU ) ) ) ,RCSe ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5255351391379045}, {"determining": "( ( ( PN - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( Min( ( ( MLU * RCSe ) / RCSe ) ,MLU ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.06867979660231689}, {"determining": "Min( ( Max( DDR,Const ) + ( ( MDR * BR ) * PN ) ) ,Min( ( Min( MDR ,MDR ) - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / Min( MUR ,DS ) ) * ( ( MUC / CS ) * RRSe ) )", "obj1": 0.42322834645669294, "obj2": 0.3802304804193347}, {"determining": "( ( ( Max( RRS,ACS ) / Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUM - CS ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),RMSe ) )", "obj1": 0.905511811023622, "obj2": 0.04592456429596595}, {"determining": "( Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * RCSe ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( MLU + RRSe ),( Min( CS ,MUR ) - ( MUR + CS ) ) ) )", "obj1": 0.6692913385826772, "obj2": 0.20532827016276886}, {"determining": "( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( Min( PN ,FirstVNF_Mem_Server ),Min( PN ,( FirstVNF_Mem - BR ) ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / ( ( Max( Min( Min( Min( MUC ,MLU ) ,CS ) ,RCSe ),Min( Max( CS,Max( MLU,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3761891510191824}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * ( CS / RMSe ) ),MLU ) * Max( RCSe,MLU ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - MUC ),RCSe ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.9212598425196851, "obj2": 0.0348942962110166}, {"determining": "( ( DDR * ( ( ( DDR / ( DDR / Const ) ) * Min( Const ,BR ) ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) ) - ( CS * RCSe ) ) ) * Max( ( MLU + Max( ( ( MUM / ( Max( RCSe,DS ) / RMSe ) ) - MUC ),Min( ( RMSe + MUR ) ,RRSe ) ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.9350393700787402, "obj2": 0.022204070834688488}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) ) - Max( PN,RRS ) ) - ( FirstVNF_Mem_Server * Min( DDR ,( BR / MDR ) ) ) )", "choosing": "Max( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * MUM ) ) ) ),MUC ) ,Max( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),MLU )", "obj1": 0.234251968503937, "obj2": 0.49830735555384115}, {"determining": "Min( ( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + RRS ) ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ,( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( RCSe / ( Min( RCSe ,( MUC + RMSe ) ) + CS ) ) + MUC ) )", "obj1": 0.9114173228346457, "obj2": 0.04302926348044501}, {"determining": "( ( ( Const - MDR ) * Min( Max( Min( PN ,( Const - MDR ) ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( AMS ,Const ) ) ) * Min( ACS ,( MRS / ACS ) ) )", "choosing": "( Min( Min( RMSe ,( Max( ( MUM - RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RCSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5140507693384844}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ( Const * ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + DDR ) + Max( AMS,ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( RCSe,RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( Max( ( Min( Max( ( MUC - Min( MUR ,MUM ) ),DS ) ,RCSe ) * ( CS / Max( RMSe,( MUR * ( RCSe / CS ) ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3425196850393701, "obj2": 0.43865959623445233}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + Max( BR,BR ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - PN ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,( FirstVNF_Mem - BR ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( Max( Min( ( MUR * Max( RRSe,CS ) ) ,RCSe ),Min( Max( CS,Max( MUC,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) ,( ( ( RCSe / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05019724736352543}, {"determining": "( ( DDR / MDR ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( MUR * Min( ( RRSe - ( Min( RRSe ,CS ) * MLU ) ) ,CS ) ) ) ) ,( MUM - CS ) )", "obj1": 0.6850393700787402, "obj2": 0.20430547473246755}, {"determining": "( ( ( ( ( MDR * ( ( FirstVNF_RAM_Server + CRS ) * MDR ) ) - MDR ) * ( ( BR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) + Min( RCSe ,MLU ) ) ,( MUM - CS ) )", "obj1": 0.984251968503937, "obj2": 0.003690008043330088}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + Max( BR,BR ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( Max( Min( ( MUR * Max( RRSe,CS ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) ,( ( ( RCSe / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.9035433070866141, "obj2": 0.04810426845309426}, {"determining": "Min( Min( ( ( AMS * CRS ) * RRS ) ,ACS ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * ( ( ( CRS / PN ) * PN ) / ACS ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( RMSe / CS ),Min( RMSe ,( Max( ( RCSe * RCSe ),MLU ) * Max( Min( CS ,MUR ),RRSe ) ) ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * ( MUM * ( CS / DS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7296492214623402}, {"determining": "( ( ACS + ( ( ( BR * ( MDR + BR ) ) + BR ) * ( ( AMS / RRS ) / BR ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - MLU ) ,( ( ( MUM * DS ) + ( MUC - MUM ) ) - ( ( Max( ( MLU - Min( DS ,CS ) ),CS ) * ( RCSe - Min( Min( Min( CS ,DS ) ,Max( MUR,MLU ) ) ,( MUM * MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9133858267716536, "obj2": 0.04282382329064865}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( AMS / ( FirstVNF_RAM / Max( AMS,ARS ) ) ) ,( CRS * CRS ) ) * ( Min( DDR ,Max( PN,FirstVNF_RAM_Server ) ) / ARS ) ) ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * RRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( Max( ( Min( Max( ( MUC - MUC ),CS ) ,RCSe ) * ( CS / Max( RMSe,( MUC * MUM ) ) ) ),MUC ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) / ( CS * RCSe ) ),( ( MUR / MUM ) / ( MUR / ( DS * Max( RCSe,RRSe ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5186780838123852}, {"determining": "( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) + Min( DDR ,PN ) )", "choosing": "( ( MUC - Max( Min( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,MLU ) ,DS ),( MLU * CS ) ) ) - Max( MUC,MUR ) )", "obj1": 0.9192913385826772, "obj2": 0.035302602448769344}, {"determining": "( Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ACS + RRS ) ) ,( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) ) * ( ( ( Max( RRS,ACS ) / FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) + PN ) )", "choosing": "Min( ( CS / Max( RMSe,( MUR * Min( ( RRSe - ( Min( RRSe ,CS ) * MLU ) ) ,MLU ) ) ) ) ,( MUM - CS ) )", "obj1": 0.6850393700787402, "obj2": 0.20430547473246755}, {"determining": "( ( ( ( ( ( RRS * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( ( CRS / FirstVNF_CPU_Server ) * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,( RCSe * ( CS / MUM ) ) ) / CS ) ,( ( ( MUR * MUM ) / Min( ( Max( RRSe,MLU ) / RCSe ) ,MUC ) ) - CS ) )", "obj1": 0.9881889763779528, "obj2": 0.0024213036015836805}, {"determining": "( ( ( ( ( ( ( ( CRS / FirstVNF_Mem ) - ( DDR / MRS ) ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ( ( ( PN - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) ) / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( Min( ( MUR / RCSe ) ,Max( RCSe,RRSe ) ) ,( DS - Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.00034763284322139116}, {"determining": "( MDR - ( DDR - PN ) )", "choosing": "( ( ( MUC + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,MLU ) ) * Max( DS,DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0011482964912323003}, {"determining": "( ( ( Max( RRS,ACS ) * FirstVNF_Mem ) + ( ( Min( ( AMS + BR ) ,FirstVNF_CPU ) + FirstVNF_Mem ) - Max( ( ( ( FirstVNF_Mem - ARS ) - MDR ) - Max( FirstVNF_Mem_Server,ARS ) ),Min( PN ,FirstVNF_Mem_Server ) ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( Max( Min( Max( RRSe,( MUM - MUC ) ) ,RCSe ),Min( Max( CS,Max( RRSe,DS ) ) ,RMSe ) ) / RMSe ) / DS ) ) ,( ( ( Min( RCSe ,( MUC + MUC ) ) / CS ) + ( MUC - MUM ) ) - ( RRSe - MLU ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05019724736352543}, {"determining": "( ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( BR + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) * ( Min( ( AMS / ( FirstVNF_RAM / Min( ( ARS + FirstVNF_CPU ) ,ARS ) ) ) ,( CRS * CRS ) ) / MDR ) )", "choosing": "Min( ( CS / Min( ( Min( RMSe ,MLU ) / CS ) ,Min( MUM ,Max( RRSe,MUC ) ) ) ) ,( MUM - CS ) )", "obj1": 0.9921259842519685, "obj2": 0.0015716523956945435}, {"determining": "( ( ACS + Max( BR,MRS ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( DDR - ARS ) ) ,( ( FirstVNF_CPU * BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( MUC - Max( Min( Min( RMSe ,MLU ) ,DS ),( MLU * CS ) ) ) - MLU ) ,( ( ( MUM * ( ( MUC * MLU ) / ( RMSe / CS ) ) ) + ( MUC - MUM ) ) - ( CS - MLU ) ) )", "obj1": 0.9133858267716536, "obj2": 0.04282382329064865}, {"determining": "( ( ( Max( AMS,Max( BR,FirstVNF_RAM ) ) - MDR ) * Min( Max( Min( PN ,AMS ),Max( BR,FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( ( ( ( ( CS + MUM ) + Min( MUR ,RCSe ) ) + MUM ) / ( MUR + MLU ) ) * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( MUC * ( RCSe + RRSe ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5255351391379045}, {"determining": "( ( ( ( ( ( ( ( ACS + FirstVNF_Mem ) + Min( FirstVNF_CPU ,CRS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( ( CRS / FirstVNF_CPU_Server ) * Const ) + FirstVNF_RAM ) ) + BR ) * ( ( ARS / MDR ) + Min( DDR ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,( RCSe * ( CS / MUM ) ) ) / CS ) ,( ( ( MUR * MUM ) / Min( ( Max( DS,MLU ) / RCSe ) ,MUC ) ) - CS ) )", "obj1": 0.9862204724409449, "obj2": 0.003358021605090556}, {"determining": "( ( ( Min( ( AMS / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( CRS * CRS ) ) / MDR ) * ( ( MDR * FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ARS ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( Min( RMSe ,( Max( ( RCSe * ( CS / MUM ) ),MLU ) * Max( RCSe,RRSe ) ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.02127523203962284}, {"determining": "( ( FirstVNF_Mem_Server / PN ) * ( ( ( ( ( ( ACS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) ) - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) + BR ) )", "choosing": "( ( MUM - CS ) / Min( MUR ,RCSe ) )", "obj1": 0.9901574803149606, "obj2": 0.0019192852389159345}, {"determining": "( MDR - ( DDR - PN ) )", "choosing": "( ( ( MUC + ( ( RRSe - CS ) + MLU ) ) + Min( RCSe ,( DS - Min( MUC ,MUM ) ) ) ) * Max( DS,DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0011482964912323003}]}