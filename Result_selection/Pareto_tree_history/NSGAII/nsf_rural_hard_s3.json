{"1": [{"determining": "( Max( BR,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( MUC - CS ) ,( DS - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + ( MRS * CRS ) )", "choosing": "Min( ( Max( ( ( MLU / Min( DS ,MLU ) ) - MUC ),RCSe ) - RCSe ) ,( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( ( RMSe - ( ( ( MUR - MUM ) / CS ) * ( ( MUC * DS ) * ( DS + Min( MLU ,MUC ) ) ) ) ) / ( RMSe * MUM ) ) )", "obj1": 0.7405857740585774, "obj2": 0.18907736587542795}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Max( BR,RRS ) )", "choosing": "Max( Min( MUM ,RRSe ),( MUC * RCSe ) )", "obj1": 0.8305439330543933, "obj2": 0.18225841066745768}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem * ACS ) ) * ACS ) )", "choosing": "( ( MUC / RMSe ) * Max( RCSe,Min( RMSe ,Min( Max( CS,RRSe ) ,Max( Max( ( Min( DS ,RRSe ) + RCSe ),MUM ),RMSe ) ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.2546776767694056}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.7154811715481172, "obj2": 0.204797864347604}, {"determining": "( ( ARS - Min( FirstVNF_RAM ,MRS ) ) / ( ACS - ( FirstVNF_RAM / ACS ) ) )", "choosing": "( ( ( MUC * MUM ) * MUM ) * ( RMSe / ( MUC + DS ) ) )", "obj1": 0.8556485355648535, "obj2": 0.12818313936461004}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( Max( DDR,( ( FirstVNF_RAM_Server / ARS ) + BR ) ) * FirstVNF_Mem_Server ) - BR ) ) ) * ( Const + RRS ) )", "choosing": "( Max( Max( Min( ( ( ( DS + CS ) - Max( ( MUR + DS ),Max( DS,RCSe ) ) ) * ( Min( ( MUC * MUR ) ,( MUM / RCSe ) ) + ( CS * Min( RMSe ,MUR ) ) ) ) ,MUC ),CS ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + FirstVNF_Mem ) )", "choosing": "Max( ( MUM / MUM ),( MUR / MUC ) )", "obj1": 0.6506276150627615, "obj2": 0.26236525304241065}, {"determining": "( Max( ( RRS * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,RCSe ) + Min( MUM ,DS ) ) )", "obj1": 0.6255230125523012, "obj2": 0.27792195924529667}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,PN ) ),CRS ) + Max( ( FirstVNF_RAM_Server - PN ),Max( ( MRS * FirstVNF_RAM ),( ARS / AMS ) ) ) ) - Max( MRS,( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( Min( ( RCSe + ( MUR + ( ( ( MUC * MUR ) + MUR ) * MLU ) ) ) ,MUM ),( ( RRSe * MLU ) + Max( MLU,MUM ) ) ) + Max( ( MLU * MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ACS / FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 0.6527196652719666, "obj2": 0.2560054464487389}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS + ( ( Min( RCSe ,MUC ) * CS ) + ( RRSe + MLU ) ) ) ) + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6338912133891214, "obj2": 0.27514924303565297}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) )", "choosing": "( ( DS + Min( ( DS + CS ) ,DS ) ) / ( RCSe + RMSe ) )", "obj1": 0.6213389121338913, "obj2": 0.2863197858460834}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem_Server ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( Min( ( Min( CRS ,( AMS + FirstVNF_RAM_Server ) ) / ( AMS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) - MRS ) / Min( ( BR + FirstVNF_Mem ) ,RRS ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( ( CS / MUR ) * MUM ) ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * Max( ( ARS / ( FirstVNF_RAM - DDR ) ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( ( Const + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( FirstVNF_RAM_Server * Const ),Min( FirstVNF_RAM ,Const ) ) * Max( ( FirstVNF_CPU * ACS ),( MRS + FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_RAM - AMS ) ) + ( ( FirstVNF_CPU + PN ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( CS + MUC ) + ( ( ( RMSe + MUC ) - ( MLU + MLU ) ) * RMSe ) )", "obj1": 0.7112970711297071, "obj2": 0.2522413707959509}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ACS / ARS ) ) )", "choosing": "( Max( MUR,RCSe ) * ( Min( ( MLU / MUC ) ,( CS / MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * PN ) ) - ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( ( ( ( CS - MUM ) - DS ) + MUC ) ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RCSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) - Max( ( MUC / MUR ),Min( MUC ,RCSe ) ) ) * ( Max( ( ( MUC - ( ( RCSe * MUC ) - Max( CS,( MUC - RCSe ) ) ) ) + ( MUM * ( RRSe * MLU ) ) ),RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( Min( Max( AMS,( RRS + Min( Min( PN ,RRS ) ,MRS ) ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Min( ( ( Max( ( ( MLU / ( MUC - ( CS * DS ) ) ) + RMSe ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( MRS ,FirstVNF_RAM ) ,MRS ) ,Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "( ( MUM / MUM ) - Max( CS,( MLU - CS ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2816252893454632}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.7510460251046025, "obj2": 0.1340713866783681}, {"determining": "( ( ( ( ( MDR * DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( ( Min( ACS ,FirstVNF_CPU ) * ( ACS / FirstVNF_CPU_Server ) ) - MDR ) ) ) * FirstVNF_Mem ) * CRS ) + ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( MUR ,RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( DS ,CS ) ) - ( DS - Max( RMSe,( MUR + ( Max( RRSe,( MLU + MUR ) ) + MLU ) ) ) ) ) )", "obj1": 0.7133891213389121, "obj2": 0.17353784542471118}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM / Min( Max( FirstVNF_CPU_Server,DDR ) ,( ACS - ARS ) ) ) )", "choosing": "( Min( Max( RMSe,RRSe ) ,( MUC / DS ) ) / ( RRSe + MLU ) )", "obj1": 0.8389121338912134, "obj2": 0.13399386343192704}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) )", "choosing": "( ( DS + Min( ( DS + CS ) ,DS ) ) / ( RCSe + RMSe ) )", "obj1": 0.8493723849372385, "obj2": 0.1186823386202471}, {"determining": "( ( ( ( AMS * AMS ) * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,CRS ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.9309623430962343, "obj2": 0.06038918282446703}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( ( ( AMS + PN ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) ),MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.9435146443514645, "obj2": 0.038690810582216295}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ACS / FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.2484441526909336}, {"determining": "( ( ( RRS / CRS ) + FirstVNF_RAM ) / BR )", "choosing": "( ( ( RMSe - MLU ) - RCSe ) * ( MUM - DS ) )", "obj1": 0.6841004184100419, "obj2": 0.23668667123306697}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 0.9644351464435147, "obj2": 0.027053467557419032}, {"determining": "( ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_Mem ) ,CRS ) )", "choosing": "Max( ( RRSe - DS ),( RCSe / ( RMSe * ( ( MUC - RCSe ) * MUC ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.20613073725848977}, {"determining": "Min( Min( ARS ,BR ) ,ARS )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6485355648535565, "obj2": 0.25575193222534304}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( AMS ,MDR ) ) ) ,( FirstVNF_CPU_Server - MRS ) )", "choosing": "Min( ( MUC - MUR ) ,( RMSe * Max( CS,RRSe ) ) )", "obj1": 0.9372384937238494, "obj2": 0.05907694823739207}, {"determining": "( ( ( MDR - ARS ) * Max( PN,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * ACS ) - ( ACS - MRS ) ) )", "choosing": "Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / ( DS - CS ) ) )", "obj1": 0.702928870292887, "obj2": 0.22552355193245935}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( MUC - CS ) ,( DS - MUM ) )", "obj1": 0.9790794979079498, "obj2": 0.009371390065775453}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) )", "choosing": "( ( DS + Min( ( DS + CS ) ,DS ) ) / ( RCSe + RMSe ) )", "obj1": 0.8493723849372385, "obj2": 0.1186823386202471}, {"determining": "( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / MDR ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) + Min( Min( ARS ,FirstVNF_CPU_Server ) ,CRS ) )", "choosing": "Max( ( RRSe - DS ),Max( MUR,( RCSe * ( MUM * ( RCSe + ( ( ( MUR * MUM ) + MUC ) * Max( Max( DS,RRSe ),( RCSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.20613073725848977}, {"determining": "( ( MDR / ( PN - ( ( ACS - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) + Max( RRS,ACS ) )", "choosing": "Min( Min( MUM ,MLU ) ,Max( CS,( ( RMSe + MUC ) - ( ( MUR - RCSe ) + ( Max( MUM,MUC ) + DS ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.2287526553561295}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( MRS ,( Const - BR ) ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( ( Max( RRSe,MLU ) * Min( RMSe ,DS ) ) - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6317991631799164, "obj2": 0.2601008547158147}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( MUC - CS ) ,( DS - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( ( ( ( FirstVNF_RAM * DDR ) / Min( FirstVNF_Mem_Server ,ARS ) ) + Max( ( DDR / BR ),( RRS / MRS ) ) ) - Min( Min( Min( ( BR + Const ) ,ARS ) ,( FirstVNF_RAM_Server / MDR ) ) ,( ( FirstVNF_RAM - AMS ) + ( Const * Const ) ) ) )", "choosing": "Min( Max( ( Min( CS ,MUM ) / ( RCSe / RMSe ) ),( Min( RRSe ,RRSe ) + ( MUR + DS ) ) ) ,( ( Max( RMSe,MUC ) + ( RRSe - RMSe ) ) * ( ( RCSe / MUM ) * ( CS / RMSe ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.26983455738091183}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe - RRSe ),( RRSe - MLU ) ) + ( ( CS / ( RCSe + DS ) ) / ( MUR / CS ) ) )", "obj1": 0.9916317991631799, "obj2": 0.003775018080573514}, {"determining": "( ( FirstVNF_Mem * RRS ) / ( AMS * DDR ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2792346712869801}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server + DDR ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( ( RMSe / CS ) / Max( ( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ),Min( RCSe ,CS ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.6297071129707112, "obj2": 0.26590910069282875}, {"determining": "( ( DDR * AMS ) - Min( RRS ,Min( BR ,Max( FirstVNF_CPU,Max( DDR,ACS ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) + ( Max( MUM,( RCSe * ( Max( DS,( CS / MUC ) ) + Max( CS,( MLU + RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6276150627615062, "obj2": 0.2673009391133878}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( MUC - CS ) ,( DS - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( RCSe + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * PN ) ) - ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( ( ( ( CS - MUM ) - DS ) + MUC ) ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RCSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,Max( Min( ( MDR * AMS ) ,Min( Min( MDR ,ARS ) ,BR ) ),ARS ) ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( ( ( MLU - DS ) / RMSe ) / ( MUC + DS ) ) + CS ) - ( RCSe + RRSe ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,Min( RCSe ,RRSe ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ,Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + ( MRS * CRS ) )", "choosing": "Min( ( Max( ( ( MLU / Min( DS ,MLU ) ) - MUC ),RCSe ) - RCSe ) ,( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( Max( DDR,( ( FirstVNF_RAM_Server / ARS ) + BR ) ) * FirstVNF_Mem_Server ) - BR ) ) ) * ( Const + RRS ) )", "choosing": "( Max( Max( Min( ( ( ( DS + CS ) - Max( ( MUR + DS ),Max( DS,RCSe ) ) ) * ( Min( ( MUC * MUR ) ,( MUM / RCSe ) ) + ( CS * Min( RMSe ,MUR ) ) ) ) ,MUC ),CS ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,PN ) ),CRS ) + Max( ( FirstVNF_RAM_Server - PN ),Max( ( MRS * FirstVNF_RAM ),( ARS / AMS ) ) ) ) - Max( MRS,( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( Min( ( RCSe + ( MUR + ( ( ( MUC * MUR ) + MUR ) * MLU ) ) ) ,MUM ),( ( RRSe * MLU ) + Max( MLU,MUM ) ) ) + Max( ( MLU * MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS + ( ( Min( RCSe ,MUC ) * CS ) + ( RRSe + MLU ) ) ) ) + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem_Server ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( Min( ( Min( CRS ,( AMS + FirstVNF_RAM_Server ) ) / ( AMS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) - MRS ) / Min( ( BR + FirstVNF_Mem ) ,RRS ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( ( CS / MUR ) * MUM ) ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * Max( ( ARS / ( FirstVNF_RAM - DDR ) ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( ( Const + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ACS / ARS ) ) )", "choosing": "( Max( MUR,RCSe ) * ( Min( ( MLU / MUC ) ,( CS / MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) - Max( ( MUC / MUR ),Min( MUC ,RCSe ) ) ) * ( Max( ( ( MUC - ( ( RCSe * MUC ) - Max( CS,( MUC - RCSe ) ) ) ) + ( MUM * ( RRSe * MLU ) ) ),RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( ( Min( MUC ,MUM ) * ( CS * MUR ) ) - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR * MRS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( Min( ( DDR + AMS ) ,Max( ACS,ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( CS + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),( Min( MUC ,MUM ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),( MUM * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS / MUC ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Max( ( ( RRS / FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) ) - ( Min( RRS ,PN ) / AMS ) )", "choosing": "( Max( ( Max( ( Min( ( MUM / Min( MUC ,MUC ) ) ,RCSe ) - RMSe ),MUM ) / ( MLU * RMSe ) ),DS ) - ( ( ( ( MLU - DS ) - Max( MUM,CS ) ) - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( BR * ( Const * Max( CRS,FirstVNF_RAM_Server ) ) ) - ACS ) + FirstVNF_Mem ),Min( FirstVNF_CPU ,Const ) ) * DDR ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RMSe - ( DS / ( MUC + DS ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * Min( ( BR - FirstVNF_CPU ) ,Min( Const ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_Mem * Const ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) - Min( RRS ,BR ) )", "choosing": "( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RRSe ) - ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( MDR + DDR ) + Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_RAM_Server + MDR ) / ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( CS ,( ( CS + RMSe ) + ( CS + MUC ) ) ),( Max( DS,Min( MUC ,MUM ) ) / Min( ( DS * ( DS + MLU ) ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / ARS ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( MDR / FirstVNF_Mem_Server ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - ( FirstVNF_CPU - Min( Max( FirstVNF_CPU_Server,( DDR - PN ) ) ,PN ) ) ) - DDR ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) ) - ( Const * ACS ) )", "choosing": "Max( MUM,Max( ( ( ( Max( RCSe,RCSe ) + MUC ) + ( MUC * DS ) ) / MLU ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( Const - FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MUC + MUM ) ) ) * ( MUM / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( ( MRS * Min( PN ,BR ) ) * RRS ) )", "choosing": "Max( Max( MUC,CS ),Min( ( RCSe - RCSe ) ,( Min( ( ( ( RCSe / DS ) - MUR ) / MUR ) ,( ( ( MUM - Min( RCSe ,MUC ) ) * RMSe ) * RCSe ) ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / FirstVNF_Mem ) ,( ( ( AMS * FirstVNF_Mem_Server ) - ( Max( PN,( ARS + FirstVNF_RAM ) ) - ( FirstVNF_CPU - DDR ) ) ) - ( FirstVNF_CPU_Server + DDR ) ) ) - AMS )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * MRS ) ) + BR ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( ( RRSe + ( ( Min( DS ,MUC ) - MUC ) - MUC ) ) ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "( ( Min( RMSe ,RMSe ) + ( MUR * MUC ) ) - ( ( MUC + RRSe ) - ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ( ( AMS - AMS ) * Const ) / ( FirstVNF_CPU * MRS ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,( BR + FirstVNF_RAM ) ) ,( FirstVNF_CPU + ARS ) ) )", "choosing": "( ( RMSe - Max( MUR,MUC ) ) - ( CS / ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Min( PN ,AMS ) - ( FirstVNF_CPU * ( AMS * ( ( FirstVNF_CPU + FirstVNF_RAM ) + ( DDR - MRS ) ) ) ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( ARS - RRS ) ) + ( Min( AMS ,ARS ) / Min( ARS ,PN ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) * ( Min( Min( Max( DS,MUM ) ,MUR ) ,( MUC * CS ) ) / ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,ARS ) ,( DDR - ( Min( ACS ,BR ) / DDR ) ) )", "choosing": "( ( MUM * DS ) * ( Max( RRSe,MUM ) * ( Max( MUC,MUR ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - Max( FirstVNF_Mem,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( CS,MUC ) - ( Min( Min( ( CS - MUC ) ,( CS / DS ) ) ,( MLU + RRSe ) ) + ( ( ( ( CS / RCSe ) / RCSe ) / RCSe ) * Max( MUC,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * Min( ( BR - FirstVNF_CPU ) ,Min( Const ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_Mem * Const ) - ( ( ACS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * Const ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) ,( BR / Min( BR ,CRS ) ) )", "choosing": "( ( MLU / MLU ) * ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS + MUM ) ,Min( RCSe ,Min( ( RMSe - DS ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Max( Min( Max( MUC,RCSe ) ,( RCSe + DS ) ),Max( ( MUR - MUM ),( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Max( ( RRS / Max( MRS,FirstVNF_Mem_Server ) ),ACS ) )", "choosing": "Min( Min( MUC ,( Min( ( Min( Max( RMSe,Min( RMSe ,MLU ) ) ,MUM ) / MUR ) ,MUR ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( MRS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( ( RCSe + DS ) + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_RAM ) * Min( Min( RRS ,Max( MDR,ARS ) ) ,( FirstVNF_Mem + AMS ) ) )", "choosing": "Min( ( ( Max( ( MUR + ( ( Max( RRSe,MUM ) + RMSe ) - MUC ) ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,( MUR / ( Max( MUM,RCSe ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Min( Const ,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RCSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,( RRS + Min( Min( PN ,RRS ) ,MRS ) ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Min( ( ( Max( ( ( MLU / ( MUC - ( CS * DS ) ) ) + RMSe ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) + ( ( Min( ARS ,FirstVNF_RAM ) + Min( ( ( AMS + PN ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( MUR ,RMSe ) - ( DS * RMSe ) ) ) + RMSe )", "obj1": 0.608786610878661, "obj2": 0.27914552123669834}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.698744769874477, "obj2": 0.15394168457379592}, {"determining": "( ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) + ( ( ( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) * FirstVNF_Mem ) * CRS ) )", "choosing": "( Max( Max( Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) ),MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.7949790794979079, "obj2": 0.10898531860291959}, {"determining": "( ( MDR / ( PN - ( ( ACS - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) + Max( RRS,ACS ) )", "choosing": "Min( Min( MUM ,MLU ) ,Max( CS,( ( RMSe + MUC ) - ( ( MUR - RCSe ) + ( Max( MUM,MUC ) + DS ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.20613560324330507}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / ( ( RMSe / CS ) / RCSe ) ),( MUM * RRSe ) )", "obj1": 0.6694560669456067, "obj2": 0.2331671527523793}, {"determining": "( FirstVNF_Mem - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.04647986121328017}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( DS / Max( Min( RCSe ,CS ),( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.7510460251046025, "obj2": 0.1340713866783681}, {"determining": "Min( Min( ( MRS * FirstVNF_RAM ) ,MRS ) ,( AMS * Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe - DS ),( RCSe / ( RMSe * ( ( MUC - RCSe ) * MUC ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2698794310542697}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( Min( MRS ,FirstVNF_Mem_Server ) - FirstVNF_RAM ) )", "choosing": "( ( ( MUM + ( ( RMSe / DS ) * RMSe ) ) / Min( ( ( MUM / ( RRSe * MUR ) ) * CS ) ,( ( RMSe * RCSe ) + RCSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.7510460251046025, "obj2": 0.1340713866783681}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.06438922268355299}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.04038701138326989}, {"determining": "( ( ( ( AMS * AMS ) * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,CRS ) )", "choosing": "Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / ( DS - CS ) ) )", "obj1": 0.9560669456066946, "obj2": 0.03757717955206626}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,Min( RCSe ,RRSe ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ,Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.020902569518675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007619668874774474}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / ( DS - CS ) ) )", "obj1": 0.9916317991631799, "obj2": 0.003134840365722016}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( ( ( AMS + PN ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) ),MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.9435146443514645, "obj2": 0.038690810582216295}, {"determining": "( ( FirstVNF_Mem_Server - ( ( Min( FirstVNF_CPU_Server ,ACS ) - ARS ) + BR ) ) - FirstVNF_Mem )", "choosing": "Min( ( ( ( RMSe - MUR ) - ( ( ( CS / MUC ) * RRSe ) + MLU ) ) + Max( ( ( ( RCSe + MUR ) * ( Max( RCSe,MUM ) / RMSe ) ) * MLU ),Min( ( ( RRSe - Max( ( MUC * MUC ),RCSe ) ) + MUM ) ,RCSe ) ) ) ,( DS - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.01403256724853354}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,Min( RCSe ,RRSe ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ,Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.020902569518675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( Max( PN,( ( RRS - DDR ) - ( DDR - Min( CRS ,Const ) ) ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / CS ) * RCSe ) * ( Min( Min( DS ,( ( CS / CS ) / CS ) ) ,MLU ) / MUR ) )", "obj1": 0.9686192468619247, "obj2": 0.010115211028117691}, {"determining": "( ( ( AMS * Max( ACS,FirstVNF_Mem_Server ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - DS ) * Min( RCSe ,RRSe ) )", "obj1": 0.9769874476987448, "obj2": 0.00913788156437985}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( RCSe + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "Min( ( ( CRS * RRS ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( ARS * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( BR / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( Max( MLU,( RRSe * RMSe ) ) ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( MUM + RMSe ),Min( MUC ,RCSe ) ) * Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,Max( Min( ( MDR * AMS ) ,Min( Min( MDR ,ARS ) ,BR ) ),ARS ) ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( ( ( MLU - DS ) / RMSe ) / ( MUC + DS ) ) + CS ) - ( RCSe + RRSe ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + ( MRS * CRS ) )", "choosing": "Min( ( Max( ( ( MLU / Min( DS ,MLU ) ) - MUC ),RCSe ) - RCSe ) ,( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( Max( DDR,( ( FirstVNF_RAM_Server / ARS ) + BR ) ) * FirstVNF_Mem_Server ) - BR ) ) ) * ( Const + RRS ) )", "choosing": "( Max( Max( Min( ( ( ( DS + CS ) - Max( ( MUR + DS ),Max( DS,RCSe ) ) ) * ( Min( ( MUC * MUR ) ,( MUM / RCSe ) ) + ( CS * Min( RMSe ,MUR ) ) ) ) ,MUC ),CS ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,PN ) ),CRS ) + Max( ( FirstVNF_RAM_Server - PN ),Max( ( MRS * FirstVNF_RAM ),( ARS / AMS ) ) ) ) - Max( MRS,( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( Min( ( RCSe + ( MUR + ( ( ( MUC * MUR ) + MUR ) * MLU ) ) ) ,MUM ),( ( RRSe * MLU ) + Max( MLU,MUM ) ) ) + Max( ( MLU * MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS + ( ( Min( RCSe ,MUC ) * CS ) + ( RRSe + MLU ) ) ) ) + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem_Server ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( Min( ( Min( CRS ,( AMS + FirstVNF_RAM_Server ) ) / ( AMS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) - MRS ) / Min( ( BR + FirstVNF_Mem ) ,RRS ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( ( CS / MUR ) * MUM ) ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * Max( ( ARS / ( FirstVNF_RAM - DDR ) ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( ( Const + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ACS / ARS ) ) )", "choosing": "( Max( MUR,RCSe ) * ( Min( ( MLU / MUC ) ,( CS / MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) - Max( ( MUC / MUR ),Min( MUC ,RCSe ) ) ) * ( Max( ( ( MUC - ( ( RCSe * MUC ) - Max( CS,( MUC - RCSe ) ) ) ) + ( MUM * ( RRSe * MLU ) ) ),RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( ( Min( MUC ,MUM ) * ( CS * MUR ) ) - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR * MRS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( Min( ( DDR + AMS ) ,Max( ACS,ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( CS + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),( Min( MUC ,MUM ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),( MUM * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS / MUC ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Max( ( ( RRS / FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) ) - ( Min( RRS ,PN ) / AMS ) )", "choosing": "( Max( ( Max( ( Min( ( MUM / Min( MUC ,MUC ) ) ,RCSe ) - RMSe ),MUM ) / ( MLU * RMSe ) ),DS ) - ( ( ( ( MLU - DS ) - Max( MUM,CS ) ) - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( BR * ( Const * Max( CRS,FirstVNF_RAM_Server ) ) ) - ACS ) + FirstVNF_Mem ),Min( FirstVNF_CPU ,Const ) ) * DDR ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RMSe - ( DS / ( MUC + DS ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * Min( ( BR - FirstVNF_CPU ) ,Min( Const ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_Mem * Const ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) - Min( RRS ,BR ) )", "choosing": "( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RRSe ) - ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( MDR + DDR ) + Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_RAM_Server + MDR ) / ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( CS ,( ( CS + RMSe ) + ( CS + MUC ) ) ),( Max( DS,Min( MUC ,MUM ) ) / Min( ( DS * ( DS + MLU ) ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / ARS ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( MDR / FirstVNF_Mem_Server ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - ( FirstVNF_CPU - Min( Max( FirstVNF_CPU_Server,( DDR - PN ) ) ,PN ) ) ) - DDR ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) ) - ( Const * ACS ) )", "choosing": "Max( MUM,Max( ( ( ( Max( RCSe,RCSe ) + MUC ) + ( MUC * DS ) ) / MLU ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( Const - FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MUC + MUM ) ) ) * ( MUM / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( ( MRS * Min( PN ,BR ) ) * RRS ) )", "choosing": "Max( Max( MUC,CS ),Min( ( RCSe - RCSe ) ,( Min( ( ( ( RCSe / DS ) - MUR ) / MUR ) ,( ( ( MUM - Min( RCSe ,MUC ) ) * RMSe ) * RCSe ) ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / FirstVNF_Mem ) ,( ( ( AMS * FirstVNF_Mem_Server ) - ( Max( PN,( ARS + FirstVNF_RAM ) ) - ( FirstVNF_CPU - DDR ) ) ) - ( FirstVNF_CPU_Server + DDR ) ) ) - AMS )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * MRS ) ) + BR ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( ( RRSe + ( ( Min( DS ,MUC ) - MUC ) - MUC ) ) ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "( ( Min( RMSe ,RMSe ) + ( MUR * MUC ) ) - ( ( MUC + RRSe ) - ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ( ( AMS - AMS ) * Const ) / ( FirstVNF_CPU * MRS ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,( BR + FirstVNF_RAM ) ) ,( FirstVNF_CPU + ARS ) ) )", "choosing": "( ( RMSe - Max( MUR,MUC ) ) - ( CS / ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Min( PN ,AMS ) - ( FirstVNF_CPU * ( AMS * ( ( FirstVNF_CPU + FirstVNF_RAM ) + ( DDR - MRS ) ) ) ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( ARS - RRS ) ) + ( Min( AMS ,ARS ) / Min( ARS ,PN ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) * ( Min( Min( Max( DS,MUM ) ,MUR ) ,( MUC * CS ) ) / ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,ARS ) ,( DDR - ( Min( ACS ,BR ) / DDR ) ) )", "choosing": "( ( MUM * DS ) * ( Max( RRSe,MUM ) * ( Max( MUC,MUR ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - Max( FirstVNF_Mem,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( CS,MUC ) - ( Min( Min( ( CS - MUC ) ,( CS / DS ) ) ,( MLU + RRSe ) ) + ( ( ( ( CS / RCSe ) / RCSe ) / RCSe ) * Max( MUC,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * Min( ( BR - FirstVNF_CPU ) ,Min( Const ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_Mem * Const ) - ( ( ACS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * Const ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) ,( BR / Min( BR ,CRS ) ) )", "choosing": "( ( MLU / MLU ) * ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS + MUM ) ,Min( RCSe ,Min( ( RMSe - DS ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Max( Min( Max( MUC,RCSe ) ,( RCSe + DS ) ),Max( ( MUR - MUM ),( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Max( ( RRS / Max( MRS,FirstVNF_Mem_Server ) ),ACS ) )", "choosing": "Min( Min( MUC ,( Min( ( Min( Max( RMSe,Min( RMSe ,MLU ) ) ,MUM ) / MUR ) ,MUR ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( MRS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( ( RCSe + DS ) + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_RAM ) * Min( Min( RRS ,Max( MDR,ARS ) ) ,( FirstVNF_Mem + AMS ) ) )", "choosing": "Min( ( ( Max( ( MUR + ( ( Max( RRSe,MUM ) + RMSe ) - MUC ) ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,( MUR / ( Max( MUM,RCSe ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( MUR,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( MRS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) - Min( RRS ,BR ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Max( Max( FirstVNF_CPU_Server,Min( ACS ,DDR ) ),FirstVNF_CPU ) + Min( PN ,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * MDR ) ) ) ) * ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) + ( DS + Max( MUR,RCSe ) ) ) / Max( MUC,DS ) ) + ( ( RRSe * RCSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Min( Const ,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RCSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.5899581589958159, "obj2": 0.2749681777724486}, {"determining": "( ( MDR / ( PN - ( ( ACS - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) + Max( RRS,ACS ) )", "choosing": "Min( Min( MUM ,MLU ) ,Max( CS,( ( RMSe + MUC ) - ( ( MUR - RCSe ) + ( Max( MUM,MUC ) + DS ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.20613560324330507}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / ( ( RMSe / CS ) / RCSe ) ),( MUM * RRSe ) )", "obj1": 0.6694560669456067, "obj2": 0.2331671527523793}, {"determining": "( ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) + ( ( ( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) * FirstVNF_Mem ) * CRS ) )", "choosing": "( Max( Max( Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) ),MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.7949790794979079, "obj2": 0.10898531860291959}, {"determining": "( Max( ( ( ( Max( RRS,FirstVNF_RAM ) * DDR ) / Min( FirstVNF_Mem_Server ,RRS ) ) / Min( ARS ,ACS ) ),Const ) - ( FirstVNF_Mem_Server - DDR ) )", "choosing": "Min( ( MLU / ( MUC - RCSe ) ) ,( ( MUM * DS ) + Min( RCSe ,RRSe ) ) )", "obj1": 0.891213389121339, "obj2": 0.045930003746343796}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.698744769874477, "obj2": 0.15394168457379592}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( DS / Max( Min( RCSe ,CS ),( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) ) ) + ( DS + Max( RCSe,RMSe ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "( ( MDR / FirstVNF_RAM ) * ( Max( Min( FirstVNF_RAM ,AMS ),CRS ) - AMS ) )", "choosing": "Min( ( MUC - CS ) ,( Max( MUC,CS ) - ( Min( Min( ( CS - MUC ) ,( CS / DS ) ) ,( MLU + MUC ) ) + ( CS * Max( MUC,RRSe ) ) ) ) )", "obj1": 0.9372384937238494, "obj2": 0.03509098465935679}, {"determining": "( ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) + ( ( ( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) * FirstVNF_Mem ) * CRS ) )", "choosing": "( Max( Max( Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) ),MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.8138075313807531, "obj2": 0.10665263271186566}, {"determining": "( Min( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( MDR + DDR ) + Min( ACS ,FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - ACS ) )", "choosing": "Max( Min( CS ,( ( CS + RMSe ) + ( CS + MUC ) ) ),( Max( DS,Min( MUC ,MUM ) ) / Min( ( DS * Min( ( CS + MUM ) ,Min( RCSe ,Min( ( RMSe - DS ) ,RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.6108786610878661, "obj2": 0.26410574759773797}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.7196652719665272, "obj2": 0.14535926328772675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / ( DDR - FirstVNF_RAM_Server ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) + ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RRSe ) - Min( RCSe ,( MUM + Min( DS ,( DS * RCSe ) ) ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.8640167364016736, "obj2": 0.054394663210716815}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06342528701960576}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( Min( MRS ,FirstVNF_Mem_Server ) - FirstVNF_RAM ) )", "choosing": "( ( ( MUM + ( ( RMSe / DS ) * RMSe ) ) / Min( ( ( MUM / ( RRSe * MUR ) ) * CS ) ,( ( RMSe * RCSe ) + RCSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.7510460251046025, "obj2": 0.1340713866783681}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.7510460251046025, "obj2": 0.1340713866783681}, {"determining": "( ( FirstVNF_RAM_Server - ( ( AMS * AMS ) * Max( RRS,DDR ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( ( Min( RMSe ,RMSe ) + ( MUR * MUC ) ) - ( ( RRSe + RRSe ) - ( MUC * ( ( ( Max( MUR,( MUC * MUM ) ) / ( ( MLU * MUR ) / MUR ) ) + ( Min( ( MUM + MUM ) ,MUC ) / MLU ) ) * MLU ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.032049173809895935}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUC ,( ( CS + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 0.7384937238493724, "obj2": 0.13899321494498398}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "Min( ( ACS - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( Const * AMS ) ) ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( RRSe - ( Max( RRSe,MUC ) / Max( CS,( RRSe + RMSe ) ) ) ) )", "obj1": 0.602510460251046, "obj2": 0.26668325205374777}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.06072895759975988}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( ( RCSe + DS ) + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005648758647944654}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.698744769874477, "obj2": 0.15394168457379592}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,Min( RCSe ,RRSe ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ,Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.020902569518675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( Max( PN,( ( RRS - DDR ) - ( DDR - Min( CRS ,Const ) ) ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / CS ) * RCSe ) * ( Min( Min( DS ,( ( CS / CS ) / CS ) ) ,MLU ) / MUR ) )", "obj1": 0.9686192468619247, "obj2": 0.010115211028117691}, {"determining": "( ( ( AMS * Max( ACS,FirstVNF_Mem_Server ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - DS ) * Min( RCSe ,RRSe ) )", "obj1": 0.9769874476987448, "obj2": 0.00913788156437985}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( DS / Max( Min( RCSe ,CS ),( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) ) ) + ( DS + RRSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,Min( RCSe ,RRSe ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ,Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.020902569518675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( ( ARS - ARS ) + ( ( RRS / FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) ) + Const ) )", "choosing": "Min( ( MUC - ( Min( ( RMSe / CS ) ,RCSe ) * ( Min( MUC ,RRSe ) / MUR ) ) ) ,( Min( MUM ,MUM ) / MUC ) )", "obj1": 0.9665271966527197, "obj2": 0.01403256724853354}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / ( DS - CS ) ) )", "obj1": 0.9916317991631799, "obj2": 0.003134840365722016}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007619668874774474}, {"determining": "( ( FirstVNF_Mem_Server - ( ( Min( FirstVNF_CPU_Server ,ACS ) - ARS ) + BR ) ) - FirstVNF_Mem )", "choosing": "Min( ( ( ( RMSe - MUR ) - ( ( ( CS / MUC ) * RRSe ) + MLU ) ) + Max( ( ( ( RCSe + MUR ) * ( Max( RCSe,MUM ) / RMSe ) ) * MLU ),Min( ( ( RRSe - Max( ( MUC * MUC ),RCSe ) ) + MUM ) ,RCSe ) ) ) ,( DS - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.01403256724853354}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / ( ( RRS - FirstVNF_CPU ) - ( Min( CRS ,( Const / FirstVNF_CPU_Server ) ) - MDR ) ) ) + Max( FirstVNF_Mem_Server,Const ) ) * ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( DS,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( MUM + RMSe ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007619668874774474}, {"determining": "( CRS * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "Min( ( ( CRS * RRS ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( ARS * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( BR / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( Max( MLU,( RRSe * RMSe ) ) ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( MUM + RMSe ),Min( MUC ,RCSe ) ) * Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( RCSe + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( Min( Max( AMS,( RRS + Min( Min( PN ,RRS ) ,MRS ) ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Min( ( ( Max( ( ( MLU / ( MUC - ( CS * DS ) ) ) + RMSe ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + ( MRS * CRS ) )", "choosing": "Min( ( Max( ( ( MLU / Min( DS ,MLU ) ) - MUC ),RCSe ) - RCSe ) ,( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( Max( DDR,( ( FirstVNF_RAM_Server / ARS ) + BR ) ) * FirstVNF_Mem_Server ) - BR ) ) ) * ( Const + RRS ) )", "choosing": "( Max( Max( Min( ( ( ( DS + CS ) - Max( ( MUR + DS ),Max( DS,RCSe ) ) ) * ( Min( ( MUC * MUR ) ,( MUM / RCSe ) ) + ( CS * Min( RMSe ,MUR ) ) ) ) ,MUC ),CS ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,PN ) ),CRS ) + Max( ( FirstVNF_RAM_Server - PN ),Max( ( MRS * FirstVNF_RAM ),( ARS / AMS ) ) ) ) - Max( MRS,( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( Min( ( RCSe + ( MUR + ( ( ( MUC * MUR ) + MUR ) * MLU ) ) ) ,MUM ),( ( RRSe * MLU ) + Max( MLU,MUM ) ) ) + Max( ( MLU * MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS + ( ( Min( RCSe ,MUC ) * CS ) + ( RRSe + MLU ) ) ) ) + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem_Server ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( Min( ( Min( CRS ,( AMS + FirstVNF_RAM_Server ) ) / ( AMS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) - MRS ) / Min( ( BR + FirstVNF_Mem ) ,RRS ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( ( CS / MUR ) * MUM ) ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * Max( ( ARS / ( FirstVNF_RAM - DDR ) ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( ( Const + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ACS / ARS ) ) )", "choosing": "( Max( MUR,RCSe ) * ( Min( ( MLU / MUC ) ,( CS / MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) - Max( ( MUC / MUR ),Min( MUC ,RCSe ) ) ) * ( Max( ( ( MUC - ( ( RCSe * MUC ) - Max( CS,( MUC - RCSe ) ) ) ) + ( MUM * ( RRSe * MLU ) ) ),RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( ( Min( MUC ,MUM ) * ( CS * MUR ) ) - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR * MRS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( Min( ( DDR + AMS ) ,Max( ACS,ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( CS + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),( Min( MUC ,MUM ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),( MUM * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS / MUC ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Max( ( ( RRS / FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) ) - ( Min( RRS ,PN ) / AMS ) )", "choosing": "( Max( ( Max( ( Min( ( MUM / Min( MUC ,MUC ) ) ,RCSe ) - RMSe ),MUM ) / ( MLU * RMSe ) ),DS ) - ( ( ( ( MLU - DS ) - Max( MUM,CS ) ) - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( BR * ( Const * Max( CRS,FirstVNF_RAM_Server ) ) ) - ACS ) + FirstVNF_Mem ),Min( FirstVNF_CPU ,Const ) ) * DDR ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RMSe - ( DS / ( MUC + DS ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * Min( ( BR - FirstVNF_CPU ) ,Min( Const ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_Mem * Const ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) - Min( RRS ,BR ) )", "choosing": "( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RRSe ) - ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( MDR + DDR ) + Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_RAM_Server + MDR ) / ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( CS ,( ( CS + RMSe ) + ( CS + MUC ) ) ),( Max( DS,Min( MUC ,MUM ) ) / Min( ( DS * ( DS + MLU ) ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / ARS ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( MDR / FirstVNF_Mem_Server ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - ( FirstVNF_CPU - Min( Max( FirstVNF_CPU_Server,( DDR - PN ) ) ,PN ) ) ) - DDR ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) ) - ( Const * ACS ) )", "choosing": "Max( MUM,Max( ( ( ( Max( RCSe,RCSe ) + MUC ) + ( MUC * DS ) ) / MLU ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( Const - FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MUC + MUM ) ) ) * ( MUM / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( ( MRS * Min( PN ,BR ) ) * RRS ) )", "choosing": "Max( Max( MUC,CS ),Min( ( RCSe - RCSe ) ,( Min( ( ( ( RCSe / DS ) - MUR ) / MUR ) ,( ( ( MUM - Min( RCSe ,MUC ) ) * RMSe ) * RCSe ) ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / FirstVNF_Mem ) ,( ( ( AMS * FirstVNF_Mem_Server ) - ( Max( PN,( ARS + FirstVNF_RAM ) ) - ( FirstVNF_CPU - DDR ) ) ) - ( FirstVNF_CPU_Server + DDR ) ) ) - AMS )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * MRS ) ) + BR ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( ( RRSe + ( ( Min( DS ,MUC ) - MUC ) - MUC ) ) ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "( ( Min( RMSe ,RMSe ) + ( MUR * MUC ) ) - ( ( MUC + RRSe ) - ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_CPU * MRS ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * MUR ) - Max( RCSe,Min( RCSe ,( RRSe / Max( ( ( DS + Min( RMSe ,RCSe ) ) + RMSe ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ( ( AMS - AMS ) * Const ) / ( FirstVNF_CPU * MRS ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,( BR + FirstVNF_RAM ) ) ,( FirstVNF_CPU + ARS ) ) )", "choosing": "( ( RMSe - Max( MUR,MUC ) ) - ( CS / ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Min( PN ,AMS ) - ( FirstVNF_CPU * ( AMS * ( ( FirstVNF_CPU + FirstVNF_RAM ) + ( DDR - MRS ) ) ) ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( ARS - RRS ) ) + ( Min( AMS ,ARS ) / Min( ARS ,PN ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) * ( Min( Min( Max( DS,MUM ) ,MUR ) ,( MUC * CS ) ) / ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,ARS ) ,( DDR - ( Min( ACS ,BR ) / DDR ) ) )", "choosing": "( ( MUM * DS ) * ( Max( RRSe,MUM ) * ( Max( MUC,MUR ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - Max( FirstVNF_Mem,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( CS,MUC ) - ( Min( Min( ( CS - MUC ) ,( CS / DS ) ) ,( MLU + RRSe ) ) + ( ( ( ( CS / RCSe ) / RCSe ) / RCSe ) * Max( MUC,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * Min( ( BR - FirstVNF_CPU ) ,Min( Const ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_Mem * Const ) - ( ( ACS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * Const ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) ,( BR / Min( BR ,CRS ) ) )", "choosing": "( ( MLU / MLU ) * ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS + MUM ) ,Min( RCSe ,Min( ( RMSe - DS ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.5899581589958159, "obj2": 0.2749681777724486}, {"determining": "( ( ( MDR * PN ) - ( Const * ACS ) ) - Max( ( Const - Min( FirstVNF_CPU_Server ,( ACS / FirstVNF_Mem_Server ) ) ),FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( MUM + DS ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( Max( RMSe,RRSe ) / ( DS - CS ) ),( ( DS - DS ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,Min( ACS ,DDR ) ),FirstVNF_CPU ) + Min( PN ,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * MDR ) ) ) ) * ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) + ( DS + Max( MUR,RCSe ) ) ) / Max( MUC,DS ) ) + ( ( RRSe * RCSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.5899581589958159, "obj2": 0.2749681777724486}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.6589958158995816, "obj2": 0.19209490505167148}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + ARS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( MUR + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.11176206486218433}, {"determining": "( ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) + ( ( ( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) * FirstVNF_Mem ) * CRS ) )", "choosing": "( Max( Max( Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) ),MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.7949790794979079, "obj2": 0.10898531860291959}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 0.6401673640167364, "obj2": 0.23020765335058127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 0.8075313807531381, "obj2": 0.085340392462333}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.698744769874477, "obj2": 0.15394168457379592}, {"determining": "( Min( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( MDR + DDR ) + Min( ACS ,FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - ACS ) )", "choosing": "Max( Min( CS ,( ( CS + RMSe ) + ( CS + MUC ) ) ),( Max( DS,Min( MUC ,MUM ) ) / Min( ( DS * Min( ( CS + MUM ) ,Min( RCSe ,Min( ( RMSe - DS ) ,RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.6108786610878661, "obj2": 0.26410574759773797}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( DS / Max( Min( RCSe ,CS ),( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) ) ) + ( DS + Max( RCSe,RMSe ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.7196652719665272, "obj2": 0.14535926328772675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( Min( MRS ,FirstVNF_Mem_Server ) - ACS ) ),Const ) )", "choosing": "Min( ( RRSe / RRSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9079497907949791, "obj2": 0.03790107666417403}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.698744769874477, "obj2": 0.15394168457379592}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( MUC ,MUM ) * ( CS * MUR ) ) + MUM ) ,Min( RCSe ,Min( ( RMSe - DS ) ,RRSe ) ) )", "obj1": 0.9351464435146444, "obj2": 0.029532803124736707}, {"determining": "Min( ( ACS - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( Const * AMS ) ) ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( RRSe - ( Max( RRSe,MUC ) / Max( CS,( RRSe + RMSe ) ) ) ) )", "obj1": 0.602510460251046, "obj2": 0.26668325205374777}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( PN + FirstVNF_RAM ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( MUR ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.060728957599759874}, {"determining": "( ( Max( PN,( DDR - ( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( Min( Min( MUR ,DS ) ,CS ),CS ) / MUM ) / MUM ) )", "obj1": 0.7133891213389121, "obj2": 0.1475217094372382}, {"determining": "( Max( ( ( RRS / FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUM / Min( MUC ,MUC ) ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.02746905321719809}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( ( DS - MUM ) ,RRSe ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06769928969936734}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) ),Const ) )", "choosing": "Min( ( DS + ( ( Min( RCSe ,MUC ) * CS ) + ( RRSe + MLU ) ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8849372384937239, "obj2": 0.0484930244274726}, {"determining": "( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * Min( ( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) ) ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.9560669456066946, "obj2": 0.01963329189405316}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.054394663210716815}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9016736401673641, "obj2": 0.0405943644920621}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( RMSe / CS ) * RCSe ) * ( Min( Min( DS ,( ( ( Min( MUC ,MUC ) / MUM ) * ( ( MUM * MUM ) + Min( MUC ,MLU ) ) ) / CS ) ) ,RRSe ) / MUR ) )", "obj1": 0.8430962343096234, "obj2": 0.06316461147635458}, {"determining": "Min( ( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( RRSe - RCSe ) ,( ( ( MUM * DS ) * Min( RCSe ,RRSe ) ) / RRSe ) )", "obj1": 0.9372384937238494, "obj2": 0.029419899568766464}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06342528701960576}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / ( DDR - FirstVNF_RAM_Server ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) + ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RRSe ) - Min( RCSe ,( MUM + Min( DS ,( DS * RCSe ) ) ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.8640167364016736, "obj2": 0.054394663210716815}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( DS / Max( Min( RCSe ,CS ),( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) ) ) + ( DS + Max( RCSe,RMSe ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR + CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,( MUR + ( RRSe + RMSe ) ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,CS ) ) ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.016209707856304517}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( ( CRS + DDR ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( ( RRSe + ( ( Min( ( MUC - MLU ) ,MUC ) - MUC ) - MUC ) ) ,RRSe ) / MUR ) )", "obj1": 0.9853556485355649, "obj2": 0.006557729697751347}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - RRSe ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.891213389121339, "obj2": 0.045930003746343796}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( Max( ( ( ( Max( RRS,FirstVNF_RAM ) * DDR ) / Min( FirstVNF_Mem_Server ,RRS ) ) / Min( ARS ,ACS ) ),Const ) - ( FirstVNF_Mem_Server - DDR ) )", "choosing": "Min( ( MLU / ( MUC - RCSe ) ) ,( ( MUM * DS ) + Min( RCSe ,RRSe ) ) )", "obj1": 0.891213389121339, "obj2": 0.045930003746343796}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,( ( Min( MUC ,MUM ) * ( CS * MUR ) ) - ( DS + MUM ) ) ) + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.00852487730328059}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - Max( ( ( Max( FirstVNF_CPU_Server,ARS ) * RRS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( Min( MUR ,( ( MUC * ( RCSe * RMSe ) ) + DS ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) ,( MLU / MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.009688844954923104}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04755377312106757}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007619668874774474}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.016209707856304517}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( Max( PN,( ( RRS - DDR ) - ( DDR - Min( CRS ,Const ) ) ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / CS ) * RCSe ) * ( Min( Min( DS ,( ( CS / CS ) / CS ) ) ,MLU ) / MUR ) )", "obj1": 0.9686192468619247, "obj2": 0.010115211028117691}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007619668874774474}, {"determining": "Min( ( ( CRS * RRS ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( ARS * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( BR / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( Max( MLU,( RRSe * RMSe ) ) ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( MUM + RMSe ),Min( MUC ,RCSe ) ) * Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( ( Min( AMS ,PN ) - ( Const * ACS ) ) - ( Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - RRS ) - ( PN / FirstVNF_Mem_Server ) ) ),Max( Const,FirstVNF_Mem_Server ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( Max( DS,MUR ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / ( ( RRS - FirstVNF_CPU ) - ( Min( CRS ,( Const / FirstVNF_CPU_Server ) ) - MDR ) ) ) + Max( FirstVNF_Mem_Server,Const ) ) * ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( DS,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( MUM + RMSe ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( FirstVNF_Mem * ( ACS - ( MDR + ( ( MDR * DDR ) * MRS ) ) ) )", "choosing": "( ( DS + Min( Max( ( MUM * CS ),( Min( MUR ,RCSe ) * ( CS / MUC ) ) ) ,DS ) ) / ( ( RRSe + ( RCSe + DS ) ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( CRS * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Min( Const ,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RCSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,( RRS + Min( Min( PN ,RRS ) ,MRS ) ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Min( ( ( Max( ( ( MLU / ( MUC - ( CS * DS ) ) ) + RMSe ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + ( MRS * CRS ) )", "choosing": "Min( ( Max( ( ( MLU / Min( DS ,MLU ) ) - MUC ),RCSe ) - RCSe ) ,( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( Max( DDR,( ( FirstVNF_RAM_Server / ARS ) + BR ) ) * FirstVNF_Mem_Server ) - BR ) ) ) * ( Const + RRS ) )", "choosing": "( Max( Max( Min( ( ( ( DS + CS ) - Max( ( MUR + DS ),Max( DS,RCSe ) ) ) * ( Min( ( MUC * MUR ) ,( MUM / RCSe ) ) + ( CS * Min( RMSe ,MUR ) ) ) ) ,MUC ),CS ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,PN ) ),CRS ) + Max( ( FirstVNF_RAM_Server - PN ),Max( ( MRS * FirstVNF_RAM ),( ARS / AMS ) ) ) ) - Max( MRS,( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( Min( ( RCSe + ( MUR + ( ( ( MUC * MUR ) + MUR ) * MLU ) ) ) ,MUM ),( ( RRSe * MLU ) + Max( MLU,MUM ) ) ) + Max( ( MLU * MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS + ( ( Min( RCSe ,MUC ) * CS ) + ( RRSe + MLU ) ) ) ) + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem_Server ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( Min( ( Min( CRS ,( AMS + FirstVNF_RAM_Server ) ) / ( AMS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) - MRS ) / Min( ( BR + FirstVNF_Mem ) ,RRS ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( ( CS / MUR ) * MUM ) ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * Max( ( ARS / ( FirstVNF_RAM - DDR ) ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( ( Const + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ACS / ARS ) ) )", "choosing": "( Max( MUR,RCSe ) * ( Min( ( MLU / MUC ) ,( CS / MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) - Max( ( MUC / MUR ),Min( MUC ,RCSe ) ) ) * ( Max( ( ( MUC - ( ( RCSe * MUC ) - Max( CS,( MUC - RCSe ) ) ) ) + ( MUM * ( RRSe * MLU ) ) ),RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( ( Min( MUC ,MUM ) * ( CS * MUR ) ) - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR * MRS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( Min( ( DDR + AMS ) ,Max( ACS,ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( CS + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),( Min( MUC ,MUM ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),( MUM * ( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS / MUC ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Max( ( ( RRS / FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem ) ),( ( FirstVNF_Mem * DDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) ) - ( Min( RRS ,PN ) / AMS ) )", "choosing": "( Max( ( Max( ( Min( ( MUM / Min( MUC ,MUC ) ) ,RCSe ) - RMSe ),MUM ) / ( MLU * RMSe ) ),DS ) - ( ( ( ( MLU - DS ) - Max( MUM,CS ) ) - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( BR * ( Const * Max( CRS,FirstVNF_RAM_Server ) ) ) - ACS ) + FirstVNF_Mem ),Min( FirstVNF_CPU ,Const ) ) * DDR ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RMSe - ( DS / ( MUC + DS ) ) ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * Min( ( BR - FirstVNF_CPU ) ,Min( Const ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_Mem * Const ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) - Min( RRS ,BR ) )", "choosing": "( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RRSe ) - ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( MDR + DDR ) + Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_RAM_Server + MDR ) / ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( CS ,( ( CS + RMSe ) + ( CS + MUC ) ) ),( Max( DS,Min( MUC ,MUM ) ) / Min( ( DS * ( DS + MLU ) ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / ARS ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( MDR / FirstVNF_Mem_Server ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - ( FirstVNF_CPU - Min( Max( FirstVNF_CPU_Server,( DDR - PN ) ) ,PN ) ) ) - DDR ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) ) - ( Const * ACS ) )", "choosing": "Max( MUM,Max( ( ( ( Max( RCSe,RCSe ) + MUC ) + ( MUC * DS ) ) / MLU ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( Const - FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MUC + MUM ) ) ) * ( MUM / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( ( MRS * Min( PN ,BR ) ) * RRS ) )", "choosing": "Max( Max( MUC,CS ),Min( ( RCSe - RCSe ) ,( Min( ( ( ( RCSe / DS ) - MUR ) / MUR ) ,( ( ( MUM - Min( RCSe ,MUC ) ) * RMSe ) * RCSe ) ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / FirstVNF_Mem ) ,( ( ( AMS * FirstVNF_Mem_Server ) - ( Max( PN,( ARS + FirstVNF_RAM ) ) - ( FirstVNF_CPU - DDR ) ) ) - ( FirstVNF_CPU_Server + DDR ) ) ) - AMS )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * MRS ) ) + BR ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( ( RRSe + ( ( Min( DS ,MUC ) - MUC ) - MUC ) ) ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "( ( Min( RMSe ,RMSe ) + ( MUR * MUC ) ) - ( ( MUC + RRSe ) - ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( BR,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe / RRSe ) ,Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const * ACS ) ) - Max( ( Const - Min( FirstVNF_CPU_Server ,( ACS / FirstVNF_Mem_Server ) ) ),FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( MUM + DS ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( Max( RMSe,RRSe ) / ( DS - CS ) ),( ( DS - DS ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,( RRS / FirstVNF_CPU ) ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * MUM ) * ( ( RMSe + MUC ) + ( DS / DS ) ) ) ,( ( DS - Min( MUR ,CS ) ) + MUM ) )", "obj1": 0.5899581589958159, "obj2": 0.26661761981010706}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + ARS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( MUR + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.11176206486218433}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.6820083682008368, "obj2": 0.15385300358685347}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.6338912133891214, "obj2": 0.22483385245387086}, {"determining": "( ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) + ( ( ( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) * FirstVNF_Mem ) * CRS ) )", "choosing": "( Max( Max( Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) ),MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.7949790794979079, "obj2": 0.10898531860291959}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.6589958158995816, "obj2": 0.19209490505167148}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.6589958158995816, "obj2": 0.19209490505167148}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.7196652719665272, "obj2": 0.14535926328772675}, {"determining": "Min( ( ACS - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),( RMSe / RRSe ) ) )", "obj1": 0.6108786610878661, "obj2": 0.2593539285599397}, {"determining": "Min( ( ( FirstVNF_CPU + ACS ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( ( ( MUM * MLU ) * ( DS * RRSe ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 0.6129707112970711, "obj2": 0.24605925351393382}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( Min( MRS ,FirstVNF_Mem_Server ) - ACS ) ),Const ) )", "choosing": "Min( ( RRSe / RRSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9079497907949791, "obj2": 0.03790107666417403}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / ( MDR - CRS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.799163179916318, "obj2": 0.09521947656543622}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.702928870292887, "obj2": 0.15006863970174406}, {"determining": "( Min( Const ,Const ) - Max( ( Min( ( ( FirstVNF_Mem_Server - DDR ) - ACS ) ,( FirstVNF_RAM - DDR ) ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( CS * CS ) / MUC ) ,( ( MUM * MLU ) * Min( Max( RCSe,RMSe ) ,RRSe ) ) )", "obj1": 0.9267782426778243, "obj2": 0.029983833277962797}, {"determining": "Min( ( ACS - ( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.8138075313807531, "obj2": 0.07383263908020053}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( ARS ,ACS ) ) + Const ) )", "choosing": "( Min( MLU ,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / Min( RMSe ,( ( RMSe / DS ) * ( ( Min( RCSe ,MLU ) / MUR ) * ( CS * MUM ) ) ) ) ) / CS ) )", "obj1": 0.805439330543933, "obj2": 0.0878692945363835}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( DS / Max( Min( RCSe ,CS ),( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) ) ) + ( DS + Max( RCSe,RMSe ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( ( ( FirstVNF_RAM + MRS ) + CRS ) + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( CRS + DDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( MUC ,MUM ) * ( CS / MUR ) ) + MUM ) ,Max( ( RMSe / MUC ),CS ) )", "obj1": 0.9497907949790795, "obj2": 0.020973748983845054}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 0.9414225941422594, "obj2": 0.023483758033051576}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8535564853556485, "obj2": 0.05566633992723557}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 0.8075313807531381, "obj2": 0.085340392462333}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,AMS ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8263598326359832, "obj2": 0.06777632214280982}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( Min( MRS ,FirstVNF_Mem_Server ) - ACS ) ),Const ) )", "choosing": "Min( ( RRSe / RRSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.891213389121339, "obj2": 0.045569518724591924}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( RRSe / Max( RCSe,Min( ( CS * MUR ) ,CS ) ) ) ) / MUR ) * Max( MUM,( MLU / RRSe ) ) )", "obj1": 0.8723849372384938, "obj2": 0.049985546971661916}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,FirstVNF_Mem ),Const ) )", "choosing": "Min( ( RRSe - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.05845585316344248}, {"determining": "( Max( ( ( FirstVNF_RAM / RRS ) + MDR ),( ( ( ARS / AMS ) * CRS ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) / ( BR / ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,RMSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( ( Max( ( Min( Max( ( RRSe / MLU ),Min( MUR ,RMSe ) ) ,Min( Max( MUM,RRSe ) ,MUR ) ) - MUM ),( RCSe / MUC ) ) / MUR ) * ( RRSe - Min( DS ,DS ) ) ) )", "obj1": 0.895397489539749, "obj2": 0.038839105995174865}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR + CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,( MUR + ( RRSe + RMSe ) ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,CS ) ) ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.016209707856304517}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( Max( ( Min( MUC ,MUM ) * ( CS * MUR ) ),( MUM * ( CS / MUC ) ) ) ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9330543933054394, "obj2": 0.027575866205336568}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 0.8702928870292888, "obj2": 0.05428526491222446}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( Const - FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( Max( MUR,MUR ) * ( MUC + MUM ) ) * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.06436624492332968}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( ACS * RRS ) * ( PN * FirstVNF_CPU_Server ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + Max( AMS,FirstVNF_CPU ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( ( MUR / RMSe ) - CS ) ,RCSe )", "obj1": 0.8410041841004184, "obj2": 0.06342528701960574}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8807531380753139, "obj2": 0.049548321612841235}, {"determining": "( Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) + ( ( AMS * ARS ) * ( ACS * DDR ) ) ) / Min( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ( DDR - AMS ) + Max( ACS,ACS ) ) ) ),Const ) - ( DDR - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( Max( Max( MUM,CS ),( MUM * ( CS / MUC ) ) ) ,( Min( DS ,RMSe ) + ( RCSe / ( Min( MUC ,( ( MLU - MLU ) / ( MUC * RCSe ) ) ) - Min( CS ,RCSe ) ) ) ) ) ,Max( ( MUM * DS ),Min( ( DS - MUR ) ,RRSe ) ) )", "obj1": 0.9372384937238494, "obj2": 0.02603986756432476}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( Max( RRSe,CS ) ,Max( Min( MUC ,RRSe ),( RCSe + RMSe ) ) )", "obj1": 0.8430962343096234, "obj2": 0.0601145837215298}, {"determining": "( ( Max( PN,( DDR - ( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( Min( Min( MUR ,DS ) ,CS ),CS ) / MUM ) / MUM ) )", "obj1": 0.7133891213389121, "obj2": 0.1475217094372382}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - RRSe ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( Const - FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) ,( Min( MRS ,FirstVNF_Mem_Server ) - ACS ) ),( ( MDR * ( ( FirstVNF_Mem_Server + Const ) * ( PN / FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe / RRSe ) ,( ( MUM * DS ) * Min( ( Max( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ),( Max( MUR,MUR ) * ( MUC + ( MLU * MLU ) ) ) ) * ( MUM / ( MUR * RRSe ) ) ) ,RRSe ) ) )", "obj1": 0.8619246861924686, "obj2": 0.0548299007385493}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - Max( ( ( Max( FirstVNF_CPU_Server,ARS ) * RRS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( Min( MUR ,( ( MUC * ( RCSe * RMSe ) ) + DS ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) ,( MLU / MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.009688844954923104}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.039409324626913746}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( MDR - FirstVNF_RAM ) * FirstVNF_CPU ),AMS ),Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem_Server / DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) ) ) ) )", "choosing": "( ( ( MUM / ( RRSe + DS ) ) - ( ( CS * MUR ) * ( MLU + MUR ) ) ) * Min( RRSe ,Max( ( Max( Min( ( ( RMSe - RMSe ) + ( MLU - RMSe ) ) ,( Max( DS,RCSe ) / MLU ) ),( Max( RRSe,MUC ) / RRSe ) ) - Min( ( RRSe + CS ) ,Max( ( RRSe - Max( RMSe,RMSe ) ),RMSe ) ) ),RRSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.00801347686766388}, {"determining": "( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * Min( ( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) ) ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.9560669456066946, "obj2": 0.01963329189405316}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( ( DS - MUM ) ,RRSe ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06769928969936734}, {"determining": "Min( ( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 0.8870292887029289, "obj2": 0.04709911885409251}, {"determining": "( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * Min( ( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) ) ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) ) + ( Max( MUM,MUC ) + DS ) )", "obj1": 0.9560669456066946, "obj2": 0.01963329189405316}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( RMSe / CS ) / Min( RCSe ,Min( ( RMSe - DS ) ,RRSe ) ) ) * ( Min( ( RRSe + ( ( Min( ( MUC - MLU ) ,MUC ) - MUC ) - MUC ) ) ,RRSe ) / MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.0075602348928451215}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.7133891213389121, "obj2": 0.1475217094372382}, {"determining": "( ( FirstVNF_Mem_Server - Max( ( ACS - ( BR / ARS ) ),BR ) ) - Max( ( Min( DDR ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( ( ( MUM / ( RRSe + DS ) ) / DS ) * Max( MLU,Max( DS,RCSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.085340392462333}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ),Const ) )", "choosing": "Max( DS,( RCSe / RMSe ) )", "obj1": 0.8849372384937239, "obj2": 0.04846016775808156}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004990202110540881}, {"determining": "( ( ( ( AMS * AMS ) * ( FirstVNF_RAM / MDR ) ) - FirstVNF_RAM_Server ) + ( ( ( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) * FirstVNF_Mem ) * CRS ) )", "choosing": "( Max( Max( Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) ),MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.7949790794979079, "obj2": 0.10898531860291959}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.016209707856304517}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.054394663210716815}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( Max( PN,( ( RRS - DDR ) - ( DDR - Min( CRS ,Const ) ) ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / CS ) * RCSe ) * ( Min( Min( DS ,( ( CS / CS ) / CS ) ) ,MLU ) / MUR ) )", "obj1": 0.9686192468619247, "obj2": 0.010115211028117691}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007619668874774474}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "Min( ( ( CRS * RRS ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( ARS * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( BR / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( Max( MLU,( RRSe * RMSe ) ) ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( MUM + RMSe ),Min( MUC ,RCSe ) ) * Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / ( ( RRS - FirstVNF_CPU ) - Min( RRS ,BR ) ) ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( ( Min( AMS ,PN ) - ( Const * ACS ) ) - ( Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - RRS ) - ( PN / FirstVNF_Mem_Server ) ) ),Max( Const,FirstVNF_Mem_Server ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( Max( DS,MUR ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( CRS * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / ( DDR - FirstVNF_RAM_Server ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) + ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RRSe ) - Min( RCSe ,( MUM + Min( DS ,( DS * RCSe ) ) ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.039409324626913746}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( FirstVNF_Mem * ( ACS - ( MDR + ( ( MDR * DDR ) * MRS ) ) ) )", "choosing": "( ( DS + Min( Max( ( MUM * CS ),( Min( MUR ,RCSe ) * ( CS / MUC ) ) ) ,DS ) ) / ( ( RRSe + ( RCSe + DS ) ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.054394663210716815}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( ( DS - MUM ) ,RRSe ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06769928969936734}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007619668874774474}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,Min( ACS ,DDR ) ),FirstVNF_CPU ) + Min( PN ,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * MDR ) ) ) ) * ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) + ( DS + Max( MUR,RCSe ) ) ) / Max( MUC,DS ) ) + ( ( RRSe * RCSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Min( Const ,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RCSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,( RRS + Min( Min( PN ,RRS ) ,MRS ) ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Min( ( ( Max( ( ( MLU / ( MUC - ( CS * DS ) ) ) + RMSe ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + ( MRS * CRS ) )", "choosing": "Min( ( Max( ( ( MLU / Min( DS ,MLU ) ) - MUC ),RCSe ) - RCSe ) ,( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( Max( DDR,( ( FirstVNF_RAM_Server / ARS ) + BR ) ) * FirstVNF_Mem_Server ) - BR ) ) ) * ( Const + RRS ) )", "choosing": "( Max( Max( Min( ( ( ( DS + CS ) - Max( ( MUR + DS ),Max( DS,RCSe ) ) ) * ( Min( ( MUC * MUR ) ,( MUM / RCSe ) ) + ( CS * Min( RMSe ,MUR ) ) ) ) ,MUC ),CS ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,PN ) ),CRS ) + Max( ( FirstVNF_RAM_Server - PN ),Max( ( MRS * FirstVNF_RAM ),( ARS / AMS ) ) ) ) - Max( MRS,( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( Min( ( RCSe + ( MUR + ( ( ( MUC * MUR ) + MUR ) * MLU ) ) ) ,MUM ),( ( RRSe * MLU ) + Max( MLU,MUM ) ) ) + Max( ( MLU * MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS + ( ( Min( RCSe ,MUC ) * CS ) + ( RRSe + MLU ) ) ) ) + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem_Server ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( Min( ( Min( CRS ,( AMS + FirstVNF_RAM_Server ) ) / ( AMS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) - MRS ) / Min( ( BR + FirstVNF_Mem ) ,RRS ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( ( CS / MUR ) * MUM ) ) ),( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( ACS * Max( ( ARS / ( FirstVNF_RAM - DDR ) ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( ( Const + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ACS / ARS ) ) )", "choosing": "( Max( MUR,RCSe ) * ( Min( ( MLU / MUC ) ,( CS / MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) - Max( ( MUC / MUR ),Min( MUC ,RCSe ) ) ) * ( Max( ( ( MUC - ( ( RCSe * MUC ) - Max( CS,( MUC - RCSe ) ) ) ) + ( MUM * ( RRSe * MLU ) ) ),RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( MRS - FirstVNF_CPU ) ) ,( ( CRS * Const ) - ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( BR ,DDR ) ) ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( Max( MUC,( CS - MUM ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( ( Min( MUC ,MUM ) * ( CS * MUR ) ) - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR * MRS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( Min( ( DDR + AMS ) ,Max( ACS,ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( CS + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),( Min( MUC ,MUM ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Max( FirstVNF_CPU,MRS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( DDR - AMS ),Max( ACS,ACS ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) / RCSe ) - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( BR,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe / RRSe ) ,Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * ( ( DDR + CRS ) + ARS ) ) ) ,( FirstVNF_CPU_Server - ( DDR * BR ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( RMSe + MUC ) + ( ( ( Min( RCSe ,MUM ) * ( ( MLU - CS ) * MUM ) ) + Min( ( ( RMSe / CS ) + MUM ) ,MLU ) ) / Min( ( RRSe * MUR ) ,Min( MUC ,MUR ) ) ) ) ) ,( RRSe - RCSe ) )", "obj1": 0.6589958158995816, "obj2": 0.1864214319760992}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.6820083682008368, "obj2": 0.15385300358685347}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( ( Min( PN ,BR ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( ( MUC * Max( Min( ( RRSe + ( RCSe / CS ) ) ,MUM ),MUC ) ) + DS ) ) - MUM )", "obj1": 0.7635983263598326, "obj2": 0.09326615472485482}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21418774123709738}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 0.7384937238493724, "obj2": 0.1062251113182755}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + PN ) ) - CRS ) ) ) ) / ( MDR - FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Max( RCSe,MUM ) - MUM )", "obj1": 0.7154811715481172, "obj2": 0.11517267913916086}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( MRS * PN ) / Min( DDR ,ARS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( RMSe + MUC ) )", "obj1": 0.797071129707113, "obj2": 0.08561462274923308}, {"determining": "( Min( Const ,Const ) - Max( ( Min( ( ( FirstVNF_Mem_Server - DDR ) - ACS ) ,( FirstVNF_RAM - DDR ) ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( CS * CS ) / MUC ) ,( ( MUM * MLU ) * Min( Max( RCSe,RMSe ) ,RRSe ) ) )", "obj1": 0.9267782426778243, "obj2": 0.029983833277962797}, {"determining": "Min( ( ACS - ( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6338912133891214, "obj2": 0.21818152911635863}, {"determining": "( Max( Max( ( FirstVNF_RAM / RRS ),( PN + FirstVNF_RAM ) ),( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( ( ACS / PN ),ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * MUR ) ) * ( Min( ( MLU / MUC ) ,( CS * MUR ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03730844893821252}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + ARS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( MUR + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.11176206486218433}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( DS / Max( Min( RCSe ,CS ),( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) ) ) + ( DS + Max( RCSe,RMSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.25050327964869834}, {"determining": "Min( ( ACS - ( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "Min( ( ACS - ( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Max( ( ACS - ( BR / ARS ) ),BR ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( ( ( MUM / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.6150627615062761, "obj2": 0.24255715409089285}, {"determining": "Min( ( ACS - ( ( FirstVNF_Mem - Max( FirstVNF_Mem,Const ) ) - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,MUC )", "obj1": 0.6213389121338913, "obj2": 0.23468290352380422}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,Max( MRS,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * CRS ) ) ) ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * ( MUR - ( MUC + MUC ) ) ) + DS ) ) / MUR ) / CS ) )", "obj1": 0.8117154811715481, "obj2": 0.07975705434461289}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( Max( MRS,PN ) - ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) / Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( MRS - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,AMS ) ) ) ) ) ) ) / ( BR / ARS ) )", "choosing": "( ( CS / ( ( Max( Min( DS ,RMSe ),RRSe ) / ( MUM - Min( ( MUR + ( RCSe * RCSe ) ) ,MUM ) ) ) * DS ) ) * ( Min( Max( ( RCSe / MUC ),( ( MUR / RRSe ) - MUM ) ) ,MUR ) * ( MUC * MUR ) ) )", "obj1": 0.9476987447698745, "obj2": 0.019876150029345376}, {"determining": "Min( ( ( FirstVNF_CPU + ACS ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( CS - ( ( MUR * ( ( DS + MLU ) / ( RCSe * MUC ) ) ) + CS ) ) * ( ( Max( MUR,( ( ( ( MUM * MLU ) * ( DS * RRSe ) ) / ( MUR / RCSe ) ) / DS ) ) / MUM ) / CS ) )", "obj1": 0.6129707112970711, "obj2": 0.24605925351393382}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) - Max( Min( Min( ( DDR - ACS ) ,BR ) ,FirstVNF_Mem ),Const ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( MUM * RCSe ),DS ) )", "obj1": 0.8472803347280334, "obj2": 0.057671829851074434}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( Max( ( Min( MUC ,MUM ) * ( CS * MUR ) ),( MUM * ( CS / MUC ) ) ) ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9330543933054394, "obj2": 0.027575866205336568}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Const ) )", "choosing": "Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8891213389121339, "obj2": 0.046866874030029364}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.891213389121339, "obj2": 0.03960931243642257}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR + CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,( MUR + ( RRSe + RMSe ) ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,CS ) ) ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.016209707856304517}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8807531380753139, "obj2": 0.049548321612841235}, {"determining": "( Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) + ( ( AMS * ARS ) * ( ACS * DDR ) ) ) / Min( ( ( Const - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ( DDR - AMS ) + Max( ACS,ACS ) ) ) ),Const ) - ( DDR - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( Max( Max( MUM,CS ),( MUM * ( CS / MUC ) ) ) ,( Min( DS ,RMSe ) + ( RCSe / ( Min( MUC ,( ( MLU - MLU ) / ( MUC * RCSe ) ) ) - Min( CS ,RCSe ) ) ) ) ) ,Max( ( MUM * DS ),Min( ( DS - MUR ) ,RRSe ) ) )", "obj1": 0.9372384937238494, "obj2": 0.02603986756432476}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - DDR )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06621069875853838}, {"determining": "( ( FirstVNF_Mem_Server - Min( Max( DDR,FirstVNF_CPU_Server ) ,( ( BR + Max( ( ( BR + ACS ) + MDR ),MDR ) ) + BR ) ) ) - DDR )", "choosing": "Min( ( ( RCSe * RMSe ) * ( RCSe / MUM ) ) ,Max( MUR,MUR ) )", "obj1": 0.8682008368200836, "obj2": 0.05039798459752677}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( FirstVNF_RAM_Server - DDR ) ) ) - ( Min( FirstVNF_CPU_Server ,ACS ) * FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( RCSe + ( DS / RRSe ) ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUC + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ,( MUC - ( DS - MUR ) ) )", "obj1": 0.9539748953974896, "obj2": 0.017695621620799882}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.805439330543933, "obj2": 0.08360960229360834}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - RRSe ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004990202110540881}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,( ( AMS + Const ) + FirstVNF_Mem ) ) ,( DDR - PN ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( MUR + CS ) )", "obj1": 0.8138075313807531, "obj2": 0.07383263908020053}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( RRS * ( Min( Const ,( BR - CRS ) ) + Const ) ) * ( DDR * BR ) ) + ( Min( Const ,FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Max( ( RCSe / CS ),( MUM + MUC ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.053957658528876115}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( RRS * PN ) / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server + BR ) ) / FirstVNF_Mem_Server ) ),Const ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - RMSe ) )", "obj1": 0.8347280334728033, "obj2": 0.06375376344840387}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "( Min( ( RMSe / CS ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 0.9581589958158996, "obj2": 0.01721171830720331}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) )", "choosing": "( ( ( MUM / ( RRSe + DS ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007200299984787574}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,AMS ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8263598326359832, "obj2": 0.06777632214280982}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( ACS * RRS ) * ( PN * FirstVNF_CPU_Server ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + Max( AMS,FirstVNF_CPU ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( ( MUR / RMSe ) - CS ) ,RCSe )", "obj1": 0.8410041841004184, "obj2": 0.06342528701960574}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 0.9414225941422594, "obj2": 0.023483758033051576}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 0.9414225941422594, "obj2": 0.023483758033051576}, {"determining": "( ( ACS * ( AMS / MRS ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / ( RCSe + ( MLU - MUM ) ) ) / CS ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - DDR )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.8430962343096234, "obj2": 0.0601145837215298}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.805439330543933, "obj2": 0.08360960229360834}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8221757322175732, "obj2": 0.06918333480909246}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 0.8723849372384938, "obj2": 0.049985546971661916}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - Max( ( ( Max( FirstVNF_CPU_Server,ARS ) * RRS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( Min( MUR ,( ( MUC * ( RCSe * RMSe ) ) + DS ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) ,( MLU / MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.009688844954923104}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ( CRS * ( ACS - ( MDR + FirstVNF_RAM ) ) ) ,ACS ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( RRSe / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8535564853556485, "obj2": 0.05566633992723557}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05560450804939221}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( Min( CRS ,AMS ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) - CS ) ,RCSe )", "obj1": 0.8242677824267782, "obj2": 0.0685823984338767}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ),Const ) )", "choosing": "Max( DS,( RCSe / RMSe ) )", "obj1": 0.8849372384937239, "obj2": 0.04846016775808156}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8535564853556485, "obj2": 0.05566633992723557}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007497610364910546}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + ( Const - FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) ,( Min( MRS ,FirstVNF_Mem_Server ) - ACS ) ),( ( MDR * ( ( FirstVNF_Mem_Server + Const ) * ( PN / FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe / RRSe ) ,( ( MUM * DS ) * Min( ( Max( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ),( Max( MUR,MUR ) * ( MUC + ( MLU * MLU ) ) ) ) * ( MUM / ( MUR * RRSe ) ) ) ,RRSe ) ) )", "obj1": 0.8619246861924686, "obj2": 0.0548299007385493}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( Max( RRSe,CS ) ,Max( Min( MUC ,RRSe ),( RCSe + RMSe ) ) )", "obj1": 0.8430962343096234, "obj2": 0.0601145837215298}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - ( Min( ( FirstVNF_RAM + ( ( ACS / ACS ) / Max( CRS,PN ) ) ) ,MRS ) / FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * Max( ACS,( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - ( Max( MUR,( DS * MUC ) ) + ( ( CS - RRSe ) - DS ) ) ) ,( RRSe / MUM ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( Max( PN,( ( RRS - DDR ) - ( DDR - Min( CRS ,Const ) ) ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / CS ) * RCSe ) * ( Min( Min( DS ,( ( CS / CS ) / CS ) ) ,MLU ) / MUR ) )", "obj1": 0.9686192468619247, "obj2": 0.010115211028117691}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Max( MUM,( MLU / Min( RCSe ,RRSe ) ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 0.8598326359832636, "obj2": 0.055177965742297504}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( RRSe / Max( RCSe,Min( ( CS * MUR ) ,CS ) ) ) ) / MUR ) * Max( MUM,( MLU / RRSe ) ) )", "obj1": 0.8723849372384938, "obj2": 0.049985546971661916}, {"determining": "( Max( ( ( FirstVNF_RAM / RRS ) + MDR ),( ( ( ARS / AMS ) * CRS ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) / ( BR / ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,RMSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( ( Max( ( Min( Max( ( RRSe / MLU ),Min( MUR ,RMSe ) ) ,Min( Max( MUM,RRSe ) ,MUR ) ) - MUM ),( RCSe / MUC ) ) / MUR ) * ( RRSe - Min( DS ,DS ) ) ) )", "obj1": 0.895397489539749, "obj2": 0.038839105995174865}, {"determining": "Min( ( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) ) ,( FirstVNF_Mem_Server * MDR ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( ( CS * RMSe ) * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 0.8870292887029289, "obj2": 0.04709911885409251}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "( ( ( Const * FirstVNF_RAM ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( FirstVNF_CPU,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / CS ),( RCSe + MUR ) ) ) ,Min( ( ( RRSe - MUC ) / ( CS / MLU ) ) ,( RRSe * MUC ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) ),Const ) )", "choosing": "Max( MUM,Max( ( ( ( Max( RCSe,RCSe ) + MUC ) + ( MUC * DS ) ) / MLU ),CS ) )", "obj1": 0.8849372384937239, "obj2": 0.04846016775808156}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - CRS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ARS ) * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( ( Max( ( RMSe + RRSe ),Max( ( Max( MUM,Min( RCSe ,RRSe ) ) + RRSe ),MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.016209707856304517}, {"determining": "Min( ( ( CRS * RRS ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( ARS * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( BR / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( Max( MLU,( RRSe * RMSe ) ) ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( MUM + RMSe ),Min( MUC ,RCSe ) ) * Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( ( Min( AMS ,PN ) - ( Const * ACS ) ) - ( Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - RRS ) - ( PN / FirstVNF_Mem_Server ) ) ),Max( Const,FirstVNF_Mem_Server ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( Max( DS,MUR ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.8138075313807531, "obj2": 0.07383263908020053}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / ( ( RRS - FirstVNF_CPU ) - Min( RRS ,BR ) ) ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( CRS * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) + Max( ( CRS + BR ),MRS ) ),( ( FirstVNF_RAM / RRS ) - DDR ) ) / ( ( ACS / MRS ) + ( ( MDR * ARS ) - ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe * DS ) - Min( RCSe ,( RMSe / ( DS + Min( MUM ,MUM ) ) ) ) ) - ( ( MUR + MUR ) * ( MUR + MUM ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.895397489539749, "obj2": 0.038839105995174865}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.039409324626913746}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_CPU_Server - AMS ) ) - Max( ( BR - Min( MDR ,Min( ARS ,ACS ) ) ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) / Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ) ,Max( ( ( MUM - DS ) - ( DS * CS ) ),Max( CS,( ( RCSe - ( ( Min( RMSe ,RRSe ) * MLU ) + RMSe ) ) * ( CS / Min( ( Max( RCSe,RRSe ) - DS ) ,( MUM / RRSe ) ) ) ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( CRS * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,RCSe )", "obj1": 0.8410041841004184, "obj2": 0.06342528701960574}, {"determining": "Min( ( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 0.8870292887029289, "obj2": 0.04709911885409251}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.039409324626913746}, {"determining": "( ( ( MDR * PN ) - ( Const * ACS ) ) - Max( ( Const - Min( FirstVNF_CPU_Server ,( ACS / FirstVNF_Mem_Server ) ) ),FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( MUM + DS ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( Max( RMSe,RRSe ) / ( DS - CS ) ),( ( DS - DS ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,Min( ACS ,DDR ) ),FirstVNF_CPU ) + Min( PN ,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * MDR ) ) ) ) * ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) + ( DS + Max( MUR,RCSe ) ) ) / Max( MUC,DS ) ) + ( ( RRSe * RCSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Min( Const ,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RCSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,( RRS + Min( Min( PN ,RRS ) ,MRS ) ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Min( ( ( Max( ( ( MLU / ( MUC - ( CS * DS ) ) ) + RMSe ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + ( MRS * CRS ) )", "choosing": "Min( ( Max( ( ( MLU / Min( DS ,MLU ) ) - MUC ),RCSe ) - RCSe ) ,( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( ( ( DS + RCSe ) * CS ) + CS ) ,( ( RCSe + MUM ) + Min( MUC ,RMSe ) ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( Max( DDR,( ( FirstVNF_RAM_Server / ARS ) + BR ) ) * FirstVNF_Mem_Server ) - BR ) ) ) * ( Const + RRS ) )", "choosing": "( Max( Max( Min( ( ( ( DS + CS ) - Max( ( MUR + DS ),Max( DS,RCSe ) ) ) * ( Min( ( MUC * MUR ) ,( MUM / RCSe ) ) + ( CS * Min( RMSe ,MUR ) ) ) ) ,MUC ),CS ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,PN ) ),CRS ) + Max( ( FirstVNF_RAM_Server - PN ),Max( ( MRS * FirstVNF_RAM ),( ARS / AMS ) ) ) ) - Max( MRS,( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( Min( ( RCSe + ( MUR + ( ( ( MUC * MUR ) + MUR ) * MLU ) ) ) ,MUM ),( ( RRSe * MLU ) + Max( MLU,MUM ) ) ) + Max( ( MLU * MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS + ( ( Min( RCSe ,MUC ) * CS ) + ( RRSe + MLU ) ) ) ) + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / Max( Max( ( BR + ( ARS / ( Max( ( DDR * DDR ),ARS ) + PN ) ) ),Const ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * MLU ) * ( DS + RRSe ) ) * Max( Max( MUM,CS ),( Min( Min( MUR ,( ( MUC - RMSe ) / ( MUC - Min( MLU ,MUM ) ) ) ) ,( ( MLU + RRSe ) * ( ( ( RCSe - MUR ) + ( RRSe - RRSe ) ) / MLU ) ) ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( DDR - AMS ),Max( ACS,ACS ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) / RCSe ) - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * ( ( DDR + CRS ) + ARS ) ) ) ,( FirstVNF_CPU_Server - ( DDR * BR ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( RMSe + MUC ) + ( ( ( Min( RCSe ,MUM ) * ( ( MLU - CS ) * MUM ) ) + Min( ( ( RMSe / CS ) + MUM ) ,MLU ) ) / Min( ( RRSe * MUR ) ,Min( MUC ,MUR ) ) ) ) ) ,( RRSe - RCSe ) )", "obj1": 0.6589958158995816, "obj2": 0.1864214319760992}, {"determining": "( ( ( PN - Const ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.6820083682008368, "obj2": 0.15385300358685347}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( Max( Min( Min( ( DDR - ACS ) ,BR ) ,FirstVNF_Mem ),Const ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( RCSe * RRSe ) * ( ( RMSe + MUC ) + ( DS / ( ( Min( MUC ,MUM ) * ( CS * MUR ) ) + MUM ) ) ) ) ,( RRSe - RCSe ) )", "obj1": 0.6464435146443515, "obj2": 0.21368947797368326}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.24212214347199884}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7343096234309623, "obj2": 0.1028827903535048}, {"determining": "( ( Min( PN ,BR ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( ( MUC * Max( Min( ( RRSe + ( RCSe / CS ) ) ,MUM ),MUC ) ) + DS ) ) - MUM )", "obj1": 0.7635983263598326, "obj2": 0.09326615472485482}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,RRSe ) ) - MUM )", "obj1": 0.7594142259414226, "obj2": 0.0943856887466872}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( MRS * PN ) / Min( DDR ,ARS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( RMSe + MUC ) )", "obj1": 0.797071129707113, "obj2": 0.08561462274923308}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + PN ) ) - CRS ) ) ) ) / ( MDR - FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Max( RCSe,MUM ) - MUM )", "obj1": 0.7154811715481172, "obj2": 0.11517267913916086}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "Min( ( ACS - ( ( MDR + ( ( FirstVNF_Mem_Server - DDR ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS / DS ) ),Max( RCSe,Min( MUC ,MUM ) ) )", "obj1": 0.7092050209205021, "obj2": 0.12966068890946902}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.9079497907949791, "obj2": 0.03344281823991047}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ),Const ) )", "choosing": "( Min( ( RMSe / CS ) ,Max( RCSe,MUR ) ) + Max( RMSe,RRSe ) )", "obj1": 0.8870292887029289, "obj2": 0.04631202812641005}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUM ,RRSe ) ) - MUM )", "obj1": 0.7280334728033473, "obj2": 0.10971949768519837}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( ( RCSe + DS ) * Min( MUR ,RRSe ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9225941422594143, "obj2": 0.03252554125529942}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7071129707112971, "obj2": 0.13166751176966732}, {"determining": "( ( Min( Const ,PN ) - MDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,( RMSe * MUM ) ) * ( ( Max( ( ( Max( MLU,MUR ) + Max( CS,RMSe ) ) / ( DS - ( MUM + CS ) ) ),( ( MUC * RCSe ) + Min( RCSe ,RRSe ) ) ) / MUM ) / CS ) )", "obj1": 0.801255230125523, "obj2": 0.07870561497909069}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21418774123709738}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( ( PN - Const ),Const ) )", "choosing": "( ( MUR - CS ) * Min( RCSe ,RRSe ) )", "obj1": 0.8744769874476988, "obj2": 0.046537290602803955}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( RRS / ( ( FirstVNF_Mem_Server * ( ( RRS * FirstVNF_RAM ) - FirstVNF_CPU ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MLU ) * ( MUM / ( ( ( ( DS - RRSe ) + MLU ) / MUM ) / MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.07695355967233604}, {"determining": "( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM_Server + ( MDR / BR ) ) ) - Max( Min( ( ARS / BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( Max( ( MUC * MLU ),Max( ( Min( MUC ,( CS - ( ( RCSe / RCSe ) * MLU ) ) ) / MUR ),RMSe ) ) ,( ( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Max( MUR,MUR ) * ( MUM + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9414225941422594, "obj2": 0.021718329019713125}, {"determining": "( Min( Const ,Const ) - Max( ( Min( ( ( FirstVNF_Mem_Server - DDR ) - ACS ) ,( FirstVNF_RAM - DDR ) ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( CS * CS ) / MUC ) ,( ( MUM * MLU ) * Min( Max( RCSe,RMSe ) ,RRSe ) ) )", "obj1": 0.9267782426778243, "obj2": 0.029983833277962797}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.891213389121339, "obj2": 0.039436099389934955}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( ( MUM / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.8535564853556485, "obj2": 0.05512569898529865}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.797071129707113, "obj2": 0.08561462274923308}, {"determining": "( ( PN + FirstVNF_RAM ) * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( ( MUC / MUC ) - MUC ) + RRSe ) + ( ( MUC * MUM ) + RRSe ) ) )", "obj1": 0.8661087866108786, "obj2": 0.05030956300601412}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) - Max( Min( Min( ( DDR - ACS ) ,BR ) ,FirstVNF_Mem ),Const ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( MUM * RCSe ),DS ) )", "obj1": 0.8472803347280334, "obj2": 0.057671829851074434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),Min( MUC ,MUM ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01593438194147408}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,AMS ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8263598326359832, "obj2": 0.06777632214280982}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * ( ACS - ( AMS + FirstVNF_RAM ) ) ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ( DDR - AMS ) - Max( ACS,ACS ) ) ) ),Const ) )", "choosing": "Min( Min( Max( Max( MUM,CS ),( MUM * ( CS / Min( RRSe ,Min( ( MLU * CS ) ,MUR ) ) ) ) ) ,DS ) ,( ( MUM * DS ) * Min( ( DS - MUM ) ,RRSe ) ) )", "obj1": 0.9372384937238494, "obj2": 0.026027134571928234}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06435624979633714}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( Max( MRS,PN ) - ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) / Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( MRS - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,AMS ) ) ) ) ) ) ) / ( BR / ARS ) )", "choosing": "( ( CS / ( ( Max( Min( DS ,RMSe ),RRSe ) / ( MUM - Min( ( MUR + ( RCSe * RCSe ) ) ,MUM ) ) ) * DS ) ) * ( Min( Max( ( RCSe / MUC ),( ( MUR / RRSe ) - MUM ) ) ,MUR ) * ( MUC * MUR ) ) )", "obj1": 0.9476987447698745, "obj2": 0.019876150029345376}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( Min( CRS ,AMS ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) - CS ) ,RCSe )", "obj1": 0.8389121338912134, "obj2": 0.06267458092136378}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 0.8619246861924686, "obj2": 0.05335772093129799}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + ARS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( MUR + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.11176206486218433}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( RMSe ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03730844893821252}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( Max( ( Min( MUC ,MUM ) * ( CS * MUR ) ),( MUM * ( CS / MUC ) ) ) ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9330543933054394, "obj2": 0.027575866205336568}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 0.8723849372384938, "obj2": 0.049985546971661916}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM + CRS ) + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * DDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),( MUC / CS ) ),RRSe ) ) - MUM )", "obj1": 0.7196652719665272, "obj2": 0.11264900806294391}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05504260990266357}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - RRSe ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( ( RRSe / ( MUC / RRSe ) ) / ( MUC / RCSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21418774123709738}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) * ( FirstVNF_CPU_Server + MRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( MUM / ( DS / ( MUM - Max( MUR,MLU ) ) ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.005443051344297223}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008310557101462631}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01788867745622226}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,( ( AMS + Const ) + FirstVNF_Mem ) ) ,( DDR - PN ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( MUR + CS ) )", "obj1": 0.8138075313807531, "obj2": 0.07383263908020053}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) )", "choosing": "( ( ( MUM / ( RRSe + DS ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007200299984787574}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( FirstVNF_RAM_Server - DDR ) ) ) - ( Min( FirstVNF_CPU_Server ,ACS ) * FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( RCSe + ( DS / RRSe ) ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUC + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ,( MUC - ( DS - MUR ) ) )", "obj1": 0.9539748953974896, "obj2": 0.017695621620799882}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.8138075313807531, "obj2": 0.07383263908020053}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - Max( ( ( Max( FirstVNF_CPU_Server,ARS ) * RRS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( Min( MUR ,( ( MUC * ( RCSe * RMSe ) ) + DS ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) ,( MLU / MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.009688844954923104}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "( Min( ( RMSe / CS ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 0.9581589958158996, "obj2": 0.01721171830720331}, {"determining": "( Max( Max( ( FirstVNF_RAM / RRS ),( PN + FirstVNF_RAM ) ),( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( ( ACS / PN ),ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * MUR ) ) * ( Min( ( MLU / MUC ) ,( CS * MUR ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03730844893821252}, {"determining": "( Min( FirstVNF_Mem_Server ,DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( ( FirstVNF_Mem_Server + CRS ) + FirstVNF_Mem ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) ) / ( MUC * ( ( ( CS + MUR ) - ( MUM + CS ) ) - ( ( RMSe * MUC ) + ( RMSe + RRSe ) ) ) ) ) / CS ) * ( ( Min( RMSe ,MUR ) / Min( MLU ,Min( MUR ,CS ) ) ) * ( Min( MUC ,( MLU + ( Min( RMSe ,RMSe ) - RMSe ) ) ) - MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.059544050534097684}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( ( ARS / CRS ) - Max( Const,( Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( ( ( RCSe / MUM ) / RCSe ) - ( RMSe + ( Min( MUM ,MUR ) * MUC ) ) ) - RRSe ) * Min( Max( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ),RMSe ) ,RRSe ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027190001341826156}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "( Min( ( RMSe / CS ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 0.9602510460251046, "obj2": 0.016284385352182178}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( Max( RRSe,CS ) ,Max( Min( MUC ,RRSe ),( RCSe + RMSe ) ) )", "obj1": 0.8430962343096234, "obj2": 0.0601145837215298}, {"determining": "( Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),( CRS * ACS ) ) - ( FirstVNF_Mem_Server - ACS ) )", "choosing": "Min( ( MUC - Max( ( RCSe + ( MUM - Min( ( ( MUM / RMSe ) / Min( MLU ,CS ) ) ,( MUC + MUM ) ) ) ),MLU ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8221757322175732, "obj2": 0.06918333480909246}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "( ( ( ( ( MDR * ( AMS / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / DS ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( Max( PN,( ( RRS - DDR ) - ( DDR - Min( CRS ,Const ) ) ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / CS ) * RCSe ) * ( Min( Min( DS ,( ( CS / CS ) / CS ) ) ,MLU ) / MUR ) )", "obj1": 0.9686192468619247, "obj2": 0.010115211028117691}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.06375376344840387}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - DDR )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.8430962343096234, "obj2": 0.0601145837215298}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - RRSe ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( Max( ( ( FirstVNF_RAM / RRS ) + MDR ),( ( ( ARS / AMS ) * CRS ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) / ( BR / ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,RMSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( ( Max( ( Min( Max( ( RRSe / MLU ),Min( MUR ,RMSe ) ) ,Min( Max( MUM,RRSe ) ,MUR ) ) - MUM ),( RCSe / MUC ) ) / MUR ) * ( RRSe - Min( DS ,DS ) ) ) )", "obj1": 0.895397489539749, "obj2": 0.038839105995174865}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( FirstVNF_RAM_Server + ( PN + ACS ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * ( RCSe + DS ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07167483424361769}, {"determining": "( ( ( ( ( FirstVNF_RAM - CRS ) * ( ACS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_Mem ) ) )", "choosing": "Min( ( RMSe - MUR ) ,Min( ( ( MUC - MUM ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_RAM / CRS ) ) / DDR ) - ( Min( ( FirstVNF_RAM + ( ( ACS / ACS ) / Max( CRS,PN ) ) ) ,MRS ) / FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) * Max( ACS,( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - ( Max( MUR,( DS * MUC ) ) + ( ( CS - RRSe ) - DS ) ) ) ,( RRSe / MUM ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( RRS * PN ) / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server + BR ) ) / FirstVNF_Mem_Server ) ),Const ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - RMSe ) )", "obj1": 0.8347280334728033, "obj2": 0.06375376344840387}, {"determining": "Min( ( ( CRS * RRS ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( ARS * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( BR / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( Max( MLU,( RRSe * RMSe ) ) ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( MUM + RMSe ),Min( MUC ,RCSe ) ) * Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) ) ) ,Max( MLU,CS ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( ( ( AMS * PN ) - ( Const * ACS ) ) - ( ( ( FirstVNF_RAM / ( ( RRS - FirstVNF_CPU ) - Min( RRS ,BR ) ) ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( DS + CS ) - Max( ( MUR + DS ),Max( DS,RCSe ) ) ) * ( Min( ( MUC * MUR ) ,( MUM / RCSe ) ) + ( CS * Min( RMSe ,MUR ) ) ) ) ,MUC ),CS ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,MRS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07296518699706413}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007497610364910546}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( Min( CRS ,AMS ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) - CS ) ,RCSe )", "obj1": 0.8242677824267782, "obj2": 0.0685823984338767}, {"determining": "( ( Min( AMS ,PN ) - ( Const * ACS ) ) - ( Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - RRS ) - ( PN / FirstVNF_Mem_Server ) ) ),Max( Const,FirstVNF_Mem_Server ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( Max( DS,MUR ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( Const * ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( RRSe + ( DS - Min( ( DS - ( RCSe + MLU ) ) ,CS ) ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( Min( CRS ,AMS ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) - CS ) ,RCSe )", "obj1": 0.8242677824267782, "obj2": 0.0685823984338767}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8221757322175732, "obj2": 0.06918333480909246}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) + Max( ( CRS + BR ),MRS ) ),( ( FirstVNF_RAM / RRS ) - DDR ) ) / ( ( ACS / MRS ) + ( ( MDR * ARS ) - ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RRSe * DS ) - Min( RCSe ,( RMSe / ( DS + Min( MUM ,MUM ) ) ) ) ) - ( ( MUR + MUR ) * ( MUR + MUM ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.895397489539749, "obj2": 0.038839105995174865}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.039409324626913746}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015265298981502256}, {"determining": "( CRS * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + RMSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0019952763903397044}, {"determining": "( ( DDR - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( RRSe / Max( RCSe,Min( ( CS * MUR ) ,CS ) ) ) ) / MUR ) * Max( MUM,( MLU / RRSe ) ) )", "obj1": 0.8723849372384938, "obj2": 0.049985546971661916}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007497610364910546}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.039409324626913746}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( BR,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe / RRSe ) ,Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const * ACS ) ) - Max( ( Const - Min( FirstVNF_CPU_Server ,( ACS / FirstVNF_Mem_Server ) ) ),FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( MUM + DS ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( Max( RMSe,RRSe ) / ( DS - CS ) ),( ( DS - DS ) - ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,Min( ACS ,DDR ) ),FirstVNF_CPU ) + Min( PN ,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * MDR ) ) ) ) * ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) + ( DS + Max( MUR,RCSe ) ) ) / Max( MUC,DS ) ) + ( ( RRSe * RCSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Min( Const ,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RCSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,( RRS + Min( Min( PN ,RRS ) ,MRS ) ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Min( ( ( Max( ( ( MLU / ( MUC - ( CS * DS ) ) ) + RMSe ),CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUM - MUC ) * RRSe ) / Min( RCSe ,( MLU * ( ( MUC * MUM ) + RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + ( MRS * CRS ) )", "choosing": "Min( ( Max( ( ( MLU / Min( DS ,MLU ) ) - MUC ),RCSe ) - RCSe ) ,( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Min( AMS ,PN ) - ( Const * ACS ) ) - ( Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - RRS ) - ( PN / FirstVNF_Mem_Server ) ) ),Max( Const,FirstVNF_Mem_Server ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / Max( Max( ( BR + ( ARS / ( Max( ( DDR * DDR ),ARS ) + PN ) ) ),Const ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * MLU ) * ( DS + RRSe ) ) * Max( Max( MUM,CS ),( Min( Min( MUR ,( ( MUC - RMSe ) / ( MUC - Min( MLU ,MUM ) ) ) ) ,( ( MLU + RRSe ) * ( ( ( RCSe - MUR ) + ( RRSe - RRSe ) ) / MLU ) ) ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * ( ( DDR + CRS ) + ARS ) ) ) ,( FirstVNF_CPU_Server - ( DDR * BR ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( RMSe + MUC ) + ( ( ( Min( RCSe ,MUM ) * ( ( MLU - CS ) * MUM ) ) + Min( ( ( RMSe / CS ) + MUM ) ,MLU ) ) / Min( ( RRSe * MUR ) ,Min( MUC ,MUR ) ) ) ) ) ,( RRSe - RCSe ) )", "obj1": 0.6589958158995816, "obj2": 0.1864214319760992}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( Max( DS,MUR ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.14570744705321692}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.24212214347199884}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( DDR + ( Max( Min( CRS ,ACS ),FirstVNF_Mem ) + ( AMS * MRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUC,( ( RRSe * RCSe ) + RCSe ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7719665271966527, "obj2": 0.08573245260570593}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.6569037656903766, "obj2": 0.19783140020082704}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6778242677824268, "obj2": 0.14478633636300683}, {"determining": "( ( ( PN * ( Max( ( RRS - MRS ),BR ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server * ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( Min( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) ) / MUM ) ,CS ) * Min( Max( Max( Min( MUR ,( ( RMSe - DS ) - ( RCSe / CS ) ) ),( Max( MLU,RCSe ) / CS ) ),( RMSe * CS ) ) ,RCSe ) ) )", "obj1": 0.7531380753138075, "obj2": 0.0959457996441847}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( MRS * PN ) / Min( DDR ,ARS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( RMSe + MUC ) )", "obj1": 0.797071129707113, "obj2": 0.08561462274923308}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) ) )", "choosing": "( ( ( ( ( MUM / ( RRSe + DS ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) ) + RRSe ) - MUM )", "obj1": 0.702928870292887, "obj2": 0.12578191079634482}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( ( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / DS ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.8807531380753139, "obj2": 0.04448591660440342}, {"determining": "( ( Min( PN ,BR ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( ( MUC * Max( Min( ( RRSe + ( RCSe / CS ) ) ,MUM ),MUC ) ) + DS ) ) - MUM )", "obj1": 0.7635983263598326, "obj2": 0.09326615472485482}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( PN * ( ( AMS / ( DDR / PN ) ) + ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - CRS ) ) ) ) / Min( MDR ,DDR ) ) )", "choosing": "Min( ( RRSe - ( ( MUC + ( CS * RMSe ) ) + ( ( CS - RRSe ) - Max( ( MUC / ( Min( MLU ,RCSe ) - MUR ) ),( RMSe / CS ) ) ) ) ) ,( RRSe / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.13102328255128984}, {"determining": "( ( Min( Const ,PN ) - MDR ) + ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,( RMSe * MUM ) ) * ( ( Max( ( ( Max( MLU,MUR ) + Max( CS,RMSe ) ) / ( DS - ( MUM + CS ) ) ),( ( MUC * RCSe ) + Min( RCSe ,RRSe ) ) ) / MUM ) / CS ) )", "obj1": 0.801255230125523, "obj2": 0.07870561497909069}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( Min( Const ,Const ) - Max( ( Min( ( ( FirstVNF_Mem_Server - DDR ) - ACS ) ,( FirstVNF_RAM - DDR ) ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( CS * CS ) / MUC ) ,( ( MUM * MLU ) * Min( Max( RCSe,RMSe ) ,RRSe ) ) )", "obj1": 0.9267782426778243, "obj2": 0.029983833277962797}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7301255230125523, "obj2": 0.10698069024069674}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * ( RCSe + DS ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03160240739204609}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,AMS ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8263598326359832, "obj2": 0.06777632214280982}, {"determining": "( Min( ( ( ACS / BR ) - ( Min( Min( ARS ,BR ) ,( FirstVNF_RAM_Server + ( PN + ACS ) ) ) + ( FirstVNF_RAM - BR ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - ( MRS / Const ) )", "choosing": "( Min( RCSe ,RMSe ) * Min( Max( Max( Min( CS ,RCSe ),RMSe ),Max( ( MUM + DS ),MLU ) ) ,MLU ) )", "obj1": 0.9058577405857741, "obj2": 0.03445394079874003}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUM ,RRSe ) ) - MUM )", "obj1": 0.7280334728033473, "obj2": 0.10971949768519837}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) - Max( Min( Min( ( DDR - ACS ) ,BR ) ,FirstVNF_Mem ),Const ) )", "choosing": "Min( ( RRSe - CS ) ,Max( ( MUM * RCSe ),DS ) )", "obj1": 0.8472803347280334, "obj2": 0.057671829851074434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * ( ACS - ( AMS + FirstVNF_RAM ) ) ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ( DDR - AMS ) - Max( ACS,ACS ) ) ) ),Const ) )", "choosing": "Min( Min( Max( Max( MUM,CS ),( MUM * ( CS / Min( RRSe ,Min( ( MLU * CS ) ,MUR ) ) ) ) ) ,DS ) ,( ( MUM * DS ) * Min( ( DS - MUM ) ,RRSe ) ) )", "obj1": 0.9372384937238494, "obj2": 0.026027134571928234}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,RRSe ) ) - MUM )", "obj1": 0.7594142259414226, "obj2": 0.0943856887466872}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + PN ) ) - CRS ) ) ) ) / ( MDR - FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Max( RCSe,MUM ) - MUM )", "obj1": 0.7154811715481172, "obj2": 0.11517267913916086}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( PN + ACS ) ) ) ) ) - DDR ) - Max( ( PN - Const ),Const ) )", "choosing": "( ( MUR - CS ) * Min( MUR ,RRSe ) )", "obj1": 0.8682008368200836, "obj2": 0.048590395787276676}, {"determining": "( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM_Server + ( MDR / BR ) ) ) - Max( Min( ( ARS / BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( Max( ( MUC * MLU ),Max( ( Min( MUC ,( CS - ( ( RCSe / RCSe ) * MLU ) ) ) / MUR ),RMSe ) ) ,( ( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Max( MUR,MUR ) * ( MUM + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9414225941422594, "obj2": 0.021718329019713125}, {"determining": "( ( PN + FirstVNF_RAM ) * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( ( MUC / MUC ) - MUC ) + RRSe ) + ( ( MUC * MUM ) + RRSe ) ) )", "obj1": 0.8661087866108786, "obj2": 0.05030956300601412}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ( PN + FirstVNF_RAM ) ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.07661336664571304}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( Min( CRS ,AMS ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) - CS ) ,RCSe )", "obj1": 0.8158995815899581, "obj2": 0.07194449681469389}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) - Max( Min( Min( ARS ,BR ) ,Min( Const ,MDR ) ),Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( Max( MUM,( ( Min( RMSe ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) * CS ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,RMSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9288702928870293, "obj2": 0.02752091937160108}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "( Max( MUM,( MLU / RRSe ) ) * ( ( MUC - CS ) / MUR ) )", "obj1": 0.8619246861924686, "obj2": 0.05335772093129799}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - Max( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( ACS - Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "( Max( ( MLU / MUM ),MLU ) * ( ( ( MUM / RMSe ) - Max( RCSe,MUM ) ) - CS ) )", "obj1": 0.8200836820083682, "obj2": 0.06955396684222487}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM + CRS ) + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * DDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),( MUC / CS ) ),RRSe ) ) - MUM )", "obj1": 0.7196652719665272, "obj2": 0.11264900806294391}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( RRS / ( ( FirstVNF_Mem_Server * ( ( RRS * FirstVNF_RAM ) - FirstVNF_CPU ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MLU ) * ( MUM / ( ( ( ( DS - RRSe ) + MLU ) / MUM ) / MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.07695355967233604}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( Max( MRS,PN ) - ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) / Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( MRS - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,AMS ) ) ) ) ) ) ) / ( BR / ARS ) )", "choosing": "( ( CS / ( ( Max( Min( DS ,RMSe ),RRSe ) / ( MUM - Min( ( MUR + ( RCSe * RCSe ) ) ,MUM ) ) ) * DS ) ) * ( Min( Max( ( RCSe / MUC ),( ( MUR / RRSe ) - MUM ) ) ,MUR ) * ( MUC * MUR ) ) )", "obj1": 0.9476987447698745, "obj2": 0.019876150029345376}, {"determining": "( ( ARS / CRS ) - Max( Const,( Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( ( ( RCSe / MUM ) / RCSe ) - ( RMSe + ( Min( MUM ,MUR ) * MUC ) ) ) - RRSe ) * Min( Max( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ),RMSe ) ,RRSe ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027190001341826156}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( PN * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),Min( MUC ,MUM ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01593438194147408}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.891213389121339, "obj2": 0.039436099389934955}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,RRS ) / Min( ARS ,( ACS * Min( FirstVNF_CPU_Server ,CRS ) ) ) ),Const ) )", "choosing": "Min( ( ( MUR - RMSe ) * ( ( ( MUM / ( RRSe + DS ) ) / DS ) * Min( RRSe ,( MUC / RMSe ) ) ) ) ,Max( MUR,MUR ) )", "obj1": 0.8535564853556485, "obj2": 0.05512569898529865}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.891213389121339, "obj2": 0.039436099389934955}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01788867745622226}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( Max( FirstVNF_CPU_Server,MDR ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + DS ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Min( ( MUM + ( Min( RRSe ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03730844893821252}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - Max( ( ( Max( FirstVNF_CPU_Server,ARS ) * RRS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( Min( MUR ,( ( MUC * ( RCSe * RMSe ) ) + DS ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) ,( MLU / MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.009688844954923104}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) )", "choosing": "( ( ( MUM / ( RRSe + DS ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007200299984787574}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( ( PN - Const ),Const ) )", "choosing": "( ( MUR - CS ) * Min( RCSe ,RRSe ) )", "obj1": 0.8744769874476988, "obj2": 0.046537290602803955}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( ( PN - Const ),Const ) )", "choosing": "( ( MUR - CS ) * Min( RCSe ,RRSe ) )", "obj1": 0.8744769874476988, "obj2": 0.046537290602803955}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( BR ,ARS ) ,( DDR - ( ( ( MDR - ( MDR / AMS ) ) / RRS ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.020961913102358856}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( RRS + FirstVNF_RAM_Server ) ,Max( ( ( BR + FirstVNF_CPU_Server ) + CRS ),MRS ) ) )", "choosing": "( ( ( Min( ( ( RCSe - RRSe ) / RRSe ) ,RCSe ) + Min( MLU ,MLU ) ) + MUC ) - MUM )", "obj1": 0.8221757322175732, "obj2": 0.06837359163117598}, {"determining": "( ( ACS * ( MRS - ( Min( ( MRS * DDR ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + DDR ) ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( Const * FirstVNF_Mem_Server ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUM - ( ( RCSe + DS ) * Min( Min( ( RCSe / ( ( ( RCSe + RMSe ) - Min( MUR ,MUM ) ) - MUR ) ) ,RMSe ) ,RCSe ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03243110236595148}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( Min( CRS ,AMS ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05435075076354774}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( RRSe - CS ) ,RCSe )", "obj1": 0.8410041841004184, "obj2": 0.061756988096249826}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RRSe ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.11176206486218433}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_CPU_Server ) ) ) ),Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( MUR + CS ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06435624979633714}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.895397489539749, "obj2": 0.03807037553737895}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( ( MUM / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.8535564853556485, "obj2": 0.05512569898529865}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06435624979633714}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,( ( AMS + Const ) + FirstVNF_Mem ) ) ,( DDR - PN ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( MUR + CS ) )", "obj1": 0.8138075313807531, "obj2": 0.07383263908020053}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( RMSe ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03730844893821252}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.8138075313807531, "obj2": 0.07383263908020053}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + Max( ( Min( CRS ,MRS ) / Min( ARS ,ACS ) ),Const ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.99581589958159, "obj2": 0.0013962163177859471}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - DDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( MUM / Max( MUC,CS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.0034781583800438665}, {"determining": "( Min( RRS ,( CRS * Const ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + ( ( ( RMSe / MLU ) + MLU ) - Min( ( RMSe + Min( ( RRSe - Min( RMSe ,MLU ) ) ,RCSe ) ) ,RRSe ) ) ) - MUM )", "obj1": 0.7154811715481172, "obj2": 0.11517267913916086}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.9100418410041841, "obj2": 0.032704374616373724}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( Max( PN,( ( RRS - DDR ) - ( DDR - Min( CRS ,Const ) ) ) ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe / CS ) * RCSe ) * ( Min( Min( DS ,( ( CS / CS ) / CS ) ) ,MLU ) / MUR ) )", "obj1": 0.9686192468619247, "obj2": 0.010115211028117691}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "( Min( ( RMSe / CS ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 0.9581589958158996, "obj2": 0.01721171830720331}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + ARS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( MUR + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.11176206486218433}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.06375376344840387}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),FirstVNF_Mem ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( RCSe + RRSe ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06235166233395608}, {"determining": "( Min( FirstVNF_Mem_Server ,DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( ( FirstVNF_Mem_Server + CRS ) + FirstVNF_Mem ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) ) / ( MUC * ( ( ( CS + MUR ) - ( MUM + CS ) ) - ( ( RMSe * MUC ) + ( RMSe + RRSe ) ) ) ) ) / CS ) * ( ( Min( RMSe ,MUR ) / Min( MLU ,Min( MUR ,CS ) ) ) * ( Min( MUC ,( MLU + ( Min( RMSe ,RMSe ) - RMSe ) ) ) - MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.059544050534097684}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - RRSe ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00805892986762803}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) * ( FirstVNF_CPU_Server + MRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( MUM / ( DS / ( MUM - Max( MUR,MLU ) ) ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.005443051344297223}, {"determining": "Min( ( ACS - ( ( MDR * ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Max( CS,MLU ),Min( MUC ,MUM ) ) )", "obj1": 0.6569037656903766, "obj2": 0.19783140020082704}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( FirstVNF_RAM_Server - DDR ) ) ) - ( Min( FirstVNF_CPU_Server ,ACS ) * FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( RCSe + ( DS / RRSe ) ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUC + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ,( MUC - ( DS - MUR ) ) )", "obj1": 0.9539748953974896, "obj2": 0.017695621620799882}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( MUM / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.005443051344297223}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),Min( MUC ,MUM ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01593438194147408}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - DDR )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * ( RCSe + DS ) ) )", "obj1": 0.8430962343096234, "obj2": 0.0601145837215298}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM + RRSe ) / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / RMSe ) ) ) * ( Min( MUC ,DS ) - RMSe ) )", "obj1": 0.9748953974895398, "obj2": 0.00805892986762803}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,FirstVNF_Mem ) ,( ( BR / ACS ) - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( DS + ( ( Max( Min( ( RRSe - DS ) ,MUM ),Min( RCSe ,Max( MUR,MUC ) ) ) + Min( ( MLU / ( RRSe * RRSe ) ) ,RCSe ) ) - ( CS * Min( MUC ,MUM ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.017695621620799882}, {"determining": "( ( FirstVNF_CPU - DDR ) - Max( ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( Min( DDR ,RRS ) * CRS ) ) + ( Min( CRS ,AMS ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) ),Const ) )", "choosing": "( ( ( RCSe * MUC ) - RMSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.797071129707113, "obj2": 0.08561462274923308}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( DDR ,ACS ),FirstVNF_Mem ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MLU / RMSe ) * Min( RCSe ,RRSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06235166233395608}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.06375376344840387}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.039409324626913746}, {"determining": "( ( ( ( ( MDR * ( AMS / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( MUC * RCSe ) + DS ) ) / MUM ) / CS ) )", "obj1": 0.9079497907949791, "obj2": 0.03344281823991047}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "( Min( ( RMSe / CS ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 0.9602510460251046, "obj2": 0.016284385352182178}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}], "10": [{"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( PN - FirstVNF_Mem ) * MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / Min( ARS ,( ( ARS * ( MRS * ( PN + FirstVNF_Mem_Server ) ) ) * ( DDR * ACS ) ) ) ),Const ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS - DS ) ),( Max( MUC,( CS + MUM ) ) + Min( MUR ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,PN ) - ( Const * ACS ) ) - ( Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - RRS ) - ( PN / FirstVNF_Mem_Server ) ) ),Max( Const,FirstVNF_Mem_Server ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * ( ( DDR + CRS ) + ARS ) ) ) ,( FirstVNF_CPU_Server - ( DDR * BR ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( RMSe + MUC ) + ( ( ( Min( RCSe ,MUM ) * ( ( MLU - CS ) * MUM ) ) + Min( ( ( RMSe / CS ) + MUM ) ,MLU ) ) / Min( ( RRSe * MUR ) ,Min( MUC ,MUR ) ) ) ) ) ,( RRSe - RCSe ) )", "obj1": 0.6589958158995816, "obj2": 0.1864214319760992}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.797071129707113, "obj2": 0.0705952900456081}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.24212214347199884}, {"determining": "Min( ( ( BR * CRS ) - ( ( MDR + ( ( Const * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( DDR ,AMS ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( AMS ,Const ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( ( RCSe * ( RCSe / RRSe ) ) / DS ) - CS ) ,Max( Min( RRSe ,MUC ),Max( RRSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + MUM ) - MUM )", "obj1": 0.7740585774058577, "obj2": 0.08446454288641349}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8598326359832636, "obj2": 0.04492910859539063}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.6569037656903766, "obj2": 0.19783140020082704}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ARS / ( FirstVNF_RAM_Server * DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,MUR ) * RCSe ) - MUM )", "obj1": 0.6903765690376569, "obj2": 0.135491384579338}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - ( Max( MUR,( DS * MUC ) ) + ( ( CS - RRSe ) - DS ) ) ) ,( RRSe / MUM ) )", "obj1": 0.702928870292887, "obj2": 0.12344257975932313}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,RRS ) / Min( ARS ,( ACS * Min( FirstVNF_CPU_Server ,CRS ) ) ) ),Const ) )", "choosing": "Min( ( ( MUR - RMSe ) * ( ( ( MUM / ( RRSe + DS ) ) / DS ) * Min( RRSe ,( MUC / RMSe ) ) ) ) ,Max( MUR,MUR ) )", "obj1": 0.8535564853556485, "obj2": 0.05512569898529865}, {"determining": "( ( ( PN * ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( RCSe,MLU ),MUC ) ,( ( CS / MUC ) * Max( ( ( CS - Min( MLU ,( RMSe + MUR ) ) ) + MLU ),MUR ) ) ) * ( Min( ( MUM / RMSe ) ,Max( RCSe,MUM ) ) - CS ) )", "obj1": 0.7426778242677824, "obj2": 0.09899645899497234}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( ( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / DS ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.8807531380753139, "obj2": 0.04448591660440342}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( PN * ( ( AMS / ( DDR / PN ) ) + ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - CRS ) ) ) ) / Min( MDR ,DDR ) ) )", "choosing": "Min( ( RRSe - ( ( MUC + ( CS * RMSe ) ) + ( ( CS - RRSe ) - Max( ( MUC / ( Min( MLU ,RCSe ) - MUR ) ),( RMSe / CS ) ) ) ) ) ,( RRSe / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.13102328255128984}, {"determining": "( ( Min( PN ,BR ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( ( MUC * Max( Min( ( RRSe + ( RCSe / CS ) ) ,MUM ),MUC ) ) + DS ) ) - MUM )", "obj1": 0.7635983263598326, "obj2": 0.09326615472485482}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( Min( FirstVNF_CPU_Server ,Const ) * MRS ) ) ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,( Max( MLU,MLU ) * ( ( DS / CS ) / ( CS + MUC ) ) ) ) ) - MUM )", "obj1": 0.8410041841004184, "obj2": 0.05679506633341771}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - Max( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( ACS - Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "( Max( ( MLU / MUM ),MLU ) * ( ( ( MUM / RMSe ) - Max( RCSe,MUM ) ) - CS ) )", "obj1": 0.8200836820083682, "obj2": 0.06955396684222487}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( DDR + ( Max( Min( CRS ,ACS ),FirstVNF_Mem ) + ( AMS * MRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUC,( ( RRSe * RCSe ) + RCSe ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7719665271966527, "obj2": 0.08573245260570593}, {"determining": "( ( ( PN * ( Max( ( RRS - MRS ),BR ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server * ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( Min( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) ) / MUM ) ,CS ) * Min( Max( Max( Min( MUR ,( ( RMSe - DS ) - ( RCSe / CS ) ) ),( Max( MLU,RCSe ) / CS ) ),( RMSe * CS ) ) ,RCSe ) ) )", "obj1": 0.7531380753138075, "obj2": 0.0959457996441847}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * Max( ( Max( DDR,DDR ) - ( FirstVNF_Mem * ( RRS + ( ( AMS - Const ) * ARS ) ) ) ),BR ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Max( RCSe,Min( ( Max( ( Max( RRSe,MUM ) / DS ),( RRSe + ( MUC / RCSe ) ) ) / DS ) ,Max( ( RMSe - DS ),MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( BR - ( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.7259414225941423, "obj2": 0.10401020816915879}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( Max( DDR,FirstVNF_CPU ),Min( AMS ,ACS ) ) ) ) ) ) / ( FirstVNF_RAM_Server * DDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS - MUM ),Max( MLU,MUC ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.10667444017324221}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM + CRS ) + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * DDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),( MUC / CS ) ),RRSe ) ) - MUM )", "obj1": 0.7196652719665272, "obj2": 0.11264900806294391}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( MUC * Max( Min( ( RRSe + ( RCSe / CS ) ) ,MUM ),MUC ) ) )", "obj1": 0.9372384937238494, "obj2": 0.025933784139167842}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + ( MLU / MUC ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.9288702928870293, "obj2": 0.025961245561228197}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( RCSe + DS ) + RRSe ) + ( ( MUC * MUM ) + RRSe ) ) )", "obj1": 0.8849372384937239, "obj2": 0.04313029900989485}, {"determining": "( Min( Const ,Const ) - Max( ( Min( ( ( FirstVNF_Mem_Server - DDR ) - ACS ) ,( FirstVNF_RAM - DDR ) ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( CS * CS ) / MUC ) ,( ( MUM * MLU ) * Min( Max( RCSe,RMSe ) ,RRSe ) ) )", "obj1": 0.9267782426778243, "obj2": 0.029983833277962797}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,RRSe ) ) - MUM )", "obj1": 0.7594142259414226, "obj2": 0.0943856887466872}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + PN ) ) - CRS ) ) ) ) / ( MDR - FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Max( RCSe,MUM ) - MUM )", "obj1": 0.7154811715481172, "obj2": 0.11517267913916086}, {"determining": "( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM_Server + ( MDR / BR ) ) ) - Max( Min( ( ARS / BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( Max( ( MUC * MLU ),Max( ( Min( MUC ,( CS - ( ( RCSe / RCSe ) * MLU ) ) ) / MUR ),RMSe ) ) ,( ( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Max( MUR,MUR ) * ( MUM + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9414225941422594, "obj2": 0.021718329019713125}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),FirstVNF_Mem ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( RCSe + RRSe ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06235166233395608}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,( MUC / DS ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9644351464435147, "obj2": 0.011391900706653912}, {"determining": "( CRS * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8891213389121339, "obj2": 0.040077288991262824}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( ( AMS + FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( ( ( MUM / CS ) / MUM ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8284518828451883, "obj2": 0.06666262180689783}, {"determining": "Min( ( ACS - ( FirstVNF_Mem_Server - DDR ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.24212214347199884}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM * DS ) * ( RCSe + DS ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03160240739204609}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01788867745622226}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) - Max( ( ( Max( FirstVNF_CPU_Server,ARS ) * RRS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( Min( MUR ,( ( MUC * ( RCSe * RMSe ) ) + DS ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) ,( MLU / MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.009688844954923104}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),Min( MUC ,MUM ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01593438194147408}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( RRS + FirstVNF_RAM_Server ) ,Max( ( ( BR + FirstVNF_CPU_Server ) + CRS ),MRS ) ) )", "choosing": "( ( ( Min( ( ( RCSe - RRSe ) / RRSe ) ,RCSe ) + Min( MLU ,MLU ) ) + MUC ) - MUM )", "obj1": 0.8221757322175732, "obj2": 0.06837359163117598}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,AMS ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8263598326359832, "obj2": 0.06777632214280982}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,FirstVNF_Mem ) ,( ( BR / ACS ) - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( DS + ( ( Max( Min( ( RRSe - DS ) ,MUM ),Min( RCSe ,Max( MUR,MUC ) ) ) + Min( ( MLU / ( RRSe * RRSe ) ) ,RCSe ) ) - ( CS * Min( MUC ,MUM ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9037656903765691, "obj2": 0.03605531299570941}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ),Const ) )", "choosing": "Min( ( ( ( ( MUM / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.8535564853556485, "obj2": 0.05512569898529865}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "( Min( ( RMSe / CS ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 0.9581589958158996, "obj2": 0.01721171830720331}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( Min( ARS ,BR ) ,( FirstVNF_RAM_Server + ( PN + ACS ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( RCSe + DS ) ) / MUM ) / CS ) )", "obj1": 0.9058577405857741, "obj2": 0.034385908981897466}, {"determining": "( ( PN + Max( RRS,FirstVNF_Mem_Server ) ) * ( ( MDR + DDR ) - ACS ) )", "choosing": "( ( ( ( ( MUC / ( ( MLU + RCSe ) - RMSe ) ) - MUC ) + RRSe ) + ( ( MUC * MUM ) + RRSe ) ) / ( DS + Min( DS ,DS ) ) )", "obj1": 0.9205020920502092, "obj2": 0.03032342663219653}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) - Min( FirstVNF_CPU_Server ,( Max( MRS,PN ) - ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) / Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( MRS - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,AMS ) ) ) ) ) ) ) / ( BR / ARS ) )", "choosing": "( ( CS / ( ( Max( Min( DS ,RMSe ),RRSe ) / ( MUM - Min( ( MUR + ( RCSe * RCSe ) ) ,MUM ) ) ) * DS ) ) * ( Min( Max( ( RCSe / MUC ),( ( MUR / RRSe ) - MUM ) ) ,MUR ) * ( MUC * MUR ) ) )", "obj1": 0.9476987447698745, "obj2": 0.019876150029345376}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( ( RCSe + RRSe ) - MUM ) ) )", "obj1": 0.9121338912133892, "obj2": 0.031829210736846476}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03730844893821252}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Min( Min( ARS ,BR ) ,( DDR - ACS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUC / MUM ) / CS ) )", "obj1": 0.9079497907949791, "obj2": 0.033435673925921575}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.895397489539749, "obj2": 0.03807037553737895}, {"determining": "( ( ( AMS * Max( BR,ACS ) ) - DDR ) - Max( ( PN - MDR ),Const ) )", "choosing": "( Min( RCSe ,RCSe ) * ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03241128980746066}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( BR ,ARS ) ,( DDR - ( ( ( MDR - ( MDR / AMS ) ) / RRS ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.020961913102358856}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + DS ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Min( ( MUM + ( Min( CS ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.03895089241592781}, {"determining": "( ( Max( Const,( ACS * Max( Min( ( Const * ( RRS - ACS ) ) ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) * MRS ) - Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) )", "choosing": "( ( ( Max( MUR,( ( MUC * RCSe ) / DS ) ) / MUM ) / Min( ( Max( DS,Max( ( Max( MUC,MUC ) / RCSe ),CS ) ) + CS ) ,MUC ) ) * Max( MUR,MLU ) )", "obj1": 0.9769874476987448, "obj2": 0.0075636119836154795}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "( Min( ( RMSe / CS ) ,Max( RCSe,MUR ) ) + Max( RCSe,RRSe ) )", "obj1": 0.9602510460251046, "obj2": 0.016284385352182178}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - DDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( MUM / Max( MUC,CS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.0034781583800438665}, {"determining": "( ( PN + FirstVNF_RAM ) * ( ACS - ( MDR + Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) ) ) )", "choosing": "( ( MUR + Min( DS ,DS ) ) / ( ( ( ( MUC / MUC ) - MUC ) + RRSe ) + ( ( MUC * MUM ) + RRSe ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0021487691219877316}, {"determining": "( Min( RRS ,( CRS * Const ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + ( ( ( RMSe / MLU ) + MLU ) - Min( ( RMSe + Min( ( RRSe - Min( RMSe ,MLU ) ) ,RCSe ) ) ,RRSe ) ) ) - MUM )", "obj1": 0.7154811715481172, "obj2": 0.11517267913916086}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + PN ) ) - CRS ) ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( Max( RCSe,MUM ) - MUM ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.020220048664495227}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( CRS ,ACS ),( ARS / FirstVNF_RAM ) ) ) ) ) ),Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06435624979633714}, {"determining": "( Max( FirstVNF_Mem,Const ) - ( ( AMS * Max( BR,Const ) ) / DDR ) )", "choosing": "( ( ( Max( ( ( Max( MLU,Min( MUR ,MUM ) ) + Max( CS,RMSe ) ) / ( DS - ( RCSe + CS ) ) ),( ( MUC * RCSe ) + ( RCSe / RRSe ) ) ) / MUM ) / CS ) * Max( MLU,MLU ) )", "obj1": 0.9686192468619247, "obj2": 0.010067173289404254}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR / ( Min( ARS ,BR ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MLU ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( MUC - Max( MUM,RRSe ) ) + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( ( ( Min( MUR ,RMSe ) - ( MUM / MUM ) ) / RRSe ) ,RRSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006718368804737077}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.06375376344840387}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_CPU_Server ) ) ) ),Const ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( MUR + CS ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( Max( RCSe,MLU ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06435624979633714}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) * ( FirstVNF_CPU_Server + MRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( MUM / ( DS / ( MUM - Max( MUR,MLU ) ) ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.005443051344297223}, {"determining": "Min( ( ACS - ( ( MDR * ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Max( CS,MLU ),Min( MUC ,MUM ) ) )", "obj1": 0.6569037656903766, "obj2": 0.19783140020082704}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00805892986762803}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( FirstVNF_RAM_Server - DDR ) ) ) - ( Min( FirstVNF_CPU_Server ,ACS ) * FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( RCSe + ( DS / RRSe ) ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUC + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ,( MUC - ( DS - MUR ) ) )", "obj1": 0.9539748953974896, "obj2": 0.017695621620799882}, {"determining": "( ( PN + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / CS ) / ( ( ( ( MUC / MUC ) - MUC ) + RRSe ) * ( ( MUC * MUM ) + RRSe ) ) )", "obj1": 0.9205020920502092, "obj2": 0.03032342663219653}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM + RRSe ) / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / RMSe ) ) ) * ( Min( MUC ,DS ) - RMSe ) )", "obj1": 0.9748953974895398, "obj2": 0.00805892986762803}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) * ( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),Min( ( RCSe * Max( MLU,MUM ) ) ,DS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.017695621620799882}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,( Const - Min( FirstVNF_CPU_Server ,Max( Min( DDR ,ACS ),FirstVNF_Mem ) ) ) ) ),Const ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MLU / RMSe ) * Min( RCSe ,RRSe ) ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06235166233395608}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) ) ) / Max( RCSe,( RCSe / CS ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.06375376344840387}, {"determining": "( Max( FirstVNF_RAM_Server,PN ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( MLU + ( ( RMSe + MUM ) / MUM ) ) ,Max( ( ( DS - DS ) + CS ),MUM ) ) - CS ) - CS ) ,Max( MLU,MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.005443051344297223}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( PN + ACS ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( RRSe,( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - RMSe ) )", "obj1": 0.9790794979079498, "obj2": 0.006718368804737077}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,FirstVNF_Mem ) ,( ( BR / ACS ) - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( DS + ( ( Max( Min( ( RRSe - DS ) ,MUM ),Min( RCSe ,Max( MUR,MUC ) ) ) + Min( ( MLU / ( RRSe * RRSe ) ) ,RCSe ) ) - ( CS * Min( MUC ,MUM ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9037656903765691, "obj2": 0.03605531299570941}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( Max( FirstVNF_CPU_Server,MDR ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + DS ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Min( ( MUM + ( Min( RRSe ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03730844893821252}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,( ( AMS + FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) ) - ACS ) ),Const ) )", "choosing": "( Max( MLU,MLU ) * ( Min( ( RMSe / MUM ) ,Max( RCSe,MUR ) ) - CS ) )", "obj1": 0.8200836820083682, "obj2": 0.06955396684222487}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( ( ( ( ( MDR * ( AMS / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + Max( ( Min( CRS ,MRS ) / Min( ARS ,ACS ) ),Const ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.99581589958159, "obj2": 0.0013962163177859471}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + ARS ) + ( FirstVNF_RAM_Server + ( ( Min( MRS ,FirstVNF_Mem_Server ) + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( MUR + Min( MLU ,MLU ) ),CS ) ) ) - MUM )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + Max( ( Min( CRS ,MRS ) / Min( ARS ,ACS ) ),Const ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.99581589958159, "obj2": 0.0013962163177859471}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - RRSe ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.891213389121339, "obj2": 0.039436099389934955}, {"determining": "( ( ( PN * ( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( Min( CRS ,AMS ) * ( ACS * DDR ) ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( Min( ( MUC - CS ) ,( ( CS * DS ) * Min( RCSe ,RRSe ) ) ) + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}], "11": [{"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( BR - ( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( ( ( PN - FirstVNF_Mem ) * MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / Min( ARS ,( ( ARS * ( MRS * ( PN + FirstVNF_Mem_Server ) ) ) * ( DDR * ACS ) ) ) ),Const ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS - DS ) ),( Max( MUC,( CS + MUM ) ) + Min( MUR ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS - ( FirstVNF_RAM_Server + ( ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ARS ) ) - CRS ) ) ) ) / ( MDR / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * DDR ) ,Min( FirstVNF_CPU ,Min( AMS ,BR ) ) ) )", "choosing": "( Max( ( Min( ( ( ( Max( RRSe,MUM ) + Min( RMSe ,CS ) ) + MLU ) - Min( ( MUC - Min( RRSe ,DS ) ) ,MUR ) ) ,RRSe ) - MUR ),RRSe ) - MUM )", "obj1": 0.6610878661087866, "obj2": 0.16116128372139435}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) - MUM )", "obj1": 0.8242677824267782, "obj2": 0.06044150195752464}, {"determining": "Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * ( ( DDR + CRS ) + ARS ) ) ) ,( FirstVNF_CPU_Server - ( DDR * BR ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( RMSe + MUC ) + ( ( ( Min( RCSe ,MUM ) * ( ( MLU - CS ) * MUM ) ) + Min( ( ( RMSe / CS ) + MUM ) ,MLU ) ) / Min( ( RRSe * MUR ) ,Min( MUC ,MUR ) ) ) ) ) ,( RRSe - RCSe ) )", "obj1": 0.6589958158995816, "obj2": 0.1864214319760992}, {"determining": "Min( ( FirstVNF_Mem - ( ( CRS - Max( ARS,( ( ( FirstVNF_RAM * FirstVNF_Mem ) / FirstVNF_CPU_Server ) * ARS ) ) ) + ( BR / FirstVNF_CPU_Server ) ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU * Max( MUM,CS ) ) ,Max( Min( MUC ,( MUC + ( DS * RCSe ) ) ),Max( RMSe,RCSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6548117154811716, "obj2": 0.18895816575039542}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + ( FirstVNF_Mem_Server / MDR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( BR + CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,( MUC / MLU ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) / CS ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU - RMSe ),Max( ( RRSe * MUR ),MUR ) ),MUC ) ) ) )", "obj1": 0.7887029288702929, "obj2": 0.07981985673146527}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.799163179916318, "obj2": 0.06787297601455534}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6694560669456067, "obj2": 0.1509319085328085}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - Const ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) ) ) - MUM )", "obj1": 0.8472803347280334, "obj2": 0.054660155352659674}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8598326359832636, "obj2": 0.04492910859539063}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( DS ,( CS + ( RMSe - RRSe ) ) ) * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6799163179916318, "obj2": 0.14157252525558983}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( Min( FirstVNF_CPU_Server ,Const ) * MRS ) ) ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,( Max( MLU,MLU ) * ( ( DS / CS ) / ( CS + MUC ) ) ) ) ) - MUM )", "obj1": 0.8410041841004184, "obj2": 0.05679506633341771}, {"determining": "Min( ( ( BR * CRS ) - ( ( MDR + ( ( Const * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( DDR ,AMS ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( AMS ,Const ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( ( RCSe * ( RCSe / RRSe ) ) / DS ) - CS ) ,Max( Min( RRSe ,MUC ),Max( RRSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - ( Max( MUR,( DS * MUC ) ) + ( ( CS - RRSe ) - DS ) ) ) ,( RRSe / MUM ) )", "obj1": 0.702928870292887, "obj2": 0.12344257975932313}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - Min( ( BR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - RMSe ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( ( ( RMSe / DS ) * RMSe ) + MUM ) ,MUR ) ) )", "obj1": 0.7949790794979079, "obj2": 0.06888201707818503}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( RCSe + RRSe ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8723849372384938, "obj2": 0.0420713301035332}, {"determining": "( ( Min( PN ,BR ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( ( MUC * Max( Min( ( RRSe + ( RCSe / CS ) ) ,MUM ),MUC ) ) + DS ) ) - MUM )", "obj1": 0.7635983263598326, "obj2": 0.09326615472485482}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( DDR + ( Max( Min( CRS ,ACS ),FirstVNF_Mem ) + ( AMS * MRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUC,( ( RRSe * RCSe ) + RCSe ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7719665271966527, "obj2": 0.08573245260570593}, {"determining": "( CRS * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8891213389121339, "obj2": 0.040077288991262824}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( ( ACS - ACS ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( DS / ( MLU + ( ( MUC * RRSe ) / Min( MUC ,RMSe ) ) ) ) / MUM ) )", "obj1": 0.7092050209205021, "obj2": 0.11260780798120791}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - Const ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) * Min( MUM ,RRSe ) )", "obj1": 0.7175732217573222, "obj2": 0.11005929275850451}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( Min( MUR ,( ( MUC * ( RCSe * RMSe ) ) + DS ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) ,( MLU / MUC ) )", "obj1": 0.696652719665272, "obj2": 0.1300771180833084}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + ( ( DDR + FirstVNF_CPU ) - ( FirstVNF_Mem + DDR ) ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( DS / ( ( RMSe * Max( ( MUM - MUR ),MLU ) ) / ( RRSe + DS ) ) ) * DS ) * ( MUR - RMSe ) ) ,( MLU * MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( BR - ( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.7259414225941423, "obj2": 0.10401020816915879}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( DDR - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( Max( DDR,FirstVNF_CPU ),Min( AMS ,ACS ) ) ) ) ) ) / ( FirstVNF_RAM_Server * DDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS - MUM ),Max( MLU,MUC ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.10667444017324221}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.04359749911343486}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + MUM ) - MUM )", "obj1": 0.7740585774058577, "obj2": 0.08446454288641349}, {"determining": "( ( ( Const * ( ACS + ( ( MRS - AMS ) / FirstVNF_RAM ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * Min( ( MUM / ( DS - DS ) ) ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_CPU ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - ( Max( MUR,( DS * MUC ) ) + ( DS - ( Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) + ( MUR + DS ) ) ) ) ) ,( RRSe + MUM ) )", "obj1": 0.7510460251046025, "obj2": 0.09639744249777665}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( PN + ACS ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) ) / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7405857740585774, "obj2": 0.09786640298960653}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9225941422594143, "obj2": 0.02812125426781776}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,RRSe ) ) - MUM )", "obj1": 0.7594142259414226, "obj2": 0.0943856887466872}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ARS / ( FirstVNF_RAM_Server * DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,MUR ) * RCSe ) - MUM )", "obj1": 0.6903765690376569, "obj2": 0.135491384579338}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.7384937238493724, "obj2": 0.09831151413709173}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_Mem / Min( ARS ,ACS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * RCSe ) + DS ) - MUM )", "obj1": 0.9539748953974896, "obj2": 0.017628401882411455}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6903765690376569, "obj2": 0.135491384579338}, {"determining": "( ( ( PN * ( Max( ( RRS - MRS ),BR ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server * ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( Min( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) ) / MUM ) ,CS ) * Min( Max( Max( Min( MUR ,( ( RMSe - DS ) - ( RCSe / CS ) ) ),( Max( MLU,RCSe ) / CS ) ),( RMSe * CS ) ) ,RCSe ) ) )", "obj1": 0.7531380753138075, "obj2": 0.0959457996441847}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( PN * FirstVNF_RAM ),PN ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - ( RMSe * DS ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.01908712533043575}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01788867745622226}, {"determining": "Min( ( ACS - ( ( MDR + BR ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( ( MUC / MLU ),RMSe ) ) )", "obj1": 0.9163179916317992, "obj2": 0.031100574209700586}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( PN * ( ( AMS / ( DDR / PN ) ) + ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - CRS ) ) ) ) / Min( MDR ,DDR ) ) )", "choosing": "Min( ( RRSe - ( ( MUC + ( CS * RMSe ) ) + ( ( CS - RRSe ) - Max( ( MUC / ( Min( MLU ,RCSe ) - MUR ) ),( RMSe / CS ) ) ) ) ) ,( RRSe / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.13102328255128984}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( ( Max( MLU,Min( MUR ,MUM ) ) + Max( CS,RMSe ) ) / ( DS - ( RCSe + CS ) ) ),( ( MUC * RCSe ) + ( RCSe / RRSe ) ) ) / MUM ) / CS ) * Max( MLU,MLU ) )", "obj1": 0.9372384937238494, "obj2": 0.022549358745330775}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + MUM ) - MUM )", "obj1": 0.7740585774058577, "obj2": 0.08446454288641349}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9707112970711297, "obj2": 0.009437217721088501}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,( MUC / DS ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9644351464435147, "obj2": 0.011391900706653912}, {"determining": "( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM_Server + ( MDR / BR ) ) ) - Max( Min( ( ARS / BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( Max( ( MUC * MLU ),Max( ( Min( MUC ,( CS - ( ( RCSe / RCSe ) * MLU ) ) ) / MUR ),RMSe ) ) ,( ( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Max( MUR,MUR ) * ( MUM + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9414225941422594, "obj2": 0.021718329019713125}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( BR ,ARS ) ,( DDR - ( ( ( MDR - ( MDR / AMS ) ) / RRS ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.020961913102358856}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( ( PN - Const ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( RMSe ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03377752869491455}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,( ARS + ( DDR - ( ARS * Min( FirstVNF_Mem_Server ,ARS ) ) ) ) ) ,( DDR - ACS ) ),MRS ) )", "choosing": "( ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,( Max( Max( CS,RCSe ),( RRSe + MUR ) ) * CS ) ) ) ) / Min( RCSe ,( RCSe / DS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.031729539826310105}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ,( MUC - ( DS - MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03724683229527136}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ( ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03682578066905165}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * Max( ( Max( DDR,DDR ) - ( FirstVNF_Mem * ( RRS + ( ( AMS - Const ) * ARS ) ) ) ),BR ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Max( RCSe,Min( ( Max( ( Max( RRSe,MUM ) / DS ),( RRSe + ( MUC / RCSe ) ) ) / DS ) ,Max( ( RMSe - DS ),MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( PN + Max( RRS,FirstVNF_Mem_Server ) ) * ( ( MDR + DDR ) - ACS ) )", "choosing": "( ( ( ( ( MUC / ( ( MLU + RCSe ) - RMSe ) ) - MUC ) + RRSe ) + ( ( MUC * MUM ) + RRSe ) ) / ( DS + Min( DS ,DS ) ) )", "obj1": 0.9205020920502092, "obj2": 0.03032342663219653}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + DS ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Min( ( RRSe + ( Min( CS ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9351464435146444, "obj2": 0.023828927257909454}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Min( Min( ARS ,BR ) ,( ( Max( MDR,( CRS * DDR ) ) - FirstVNF_CPU ) - ACS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUC / ( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) ) ) / ( MUR * Max( Min( ( RMSe * ( Min( MUC ,MUR ) - RRSe ) ) ,( Max( MUR,Max( RRSe,RRSe ) ) + Max( MUC,( RCSe / RCSe ) ) ) ),( ( MUC * DS ) * Max( MUM,RCSe ) ) ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.024363587700703956}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + ( MLU / MUC ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.9288702928870293, "obj2": 0.025961245561228197}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9309623430962343, "obj2": 0.025639585727509552}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,( MUC / DS ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9644351464435147, "obj2": 0.011391900706653912}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + DS ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Min( ( MUM + ( Min( CS ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.03895089241592781}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUR - RRSe ) * Min( RCSe ,RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( ( PN + FirstVNF_RAM ) * ( ACS - ( MDR + Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.891213389121339, "obj2": 0.039436099389934955}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,FirstVNF_Mem ) ,( ( BR / ACS ) - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( DS + ( ( Max( Min( ( RRSe - DS ) ,MUM ),Min( RCSe ,Max( MUR,MUC ) ) ) + Min( ( MLU / ( RRSe * RRSe ) ) ,RCSe ) ) - ( CS * Min( MUC ,MUM ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9037656903765691, "obj2": 0.03605531299570941}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,( DDR - ACS ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + ( MLU / MUC ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( MUM ,MUR ) ) )", "obj1": 0.9288702928870293, "obj2": 0.025961245561228197}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( PN + ACS ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( RRSe,( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - RMSe ) )", "obj1": 0.9790794979079498, "obj2": 0.006718368804737077}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) * ( FirstVNF_CPU_Server + MRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( MUM / ( DS / ( MUM - Max( MUR,MLU ) ) ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.005443051344297223}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00805892986762803}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( Const,FirstVNF_Mem ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,( FirstVNF_Mem_Server + RRS ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - Const ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM + ( MLU - CS ) ) / MLU ) ,( CS * MUC ) ) / Max( ( CS + MUC ),( RCSe / RMSe ) ) ) * ( Min( MUC ,DS ) - RMSe ) )", "obj1": 0.9748953974895398, "obj2": 0.00805892986762803}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( MUM / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.005443051344297223}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR / ( Min( ARS ,BR ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MLU ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( MUC - Max( MUM,RRSe ) ) + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( ( ( Min( MUR ,RMSe ) - ( MUM / MUM ) ) / RRSe ) ,RRSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006718368804737077}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( ( ( ( ( MDR * ( AMS / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / MUM ),MLU ) * ( ( ( MUM / RMSe ) - Max( RCSe,MUM ) ) - CS ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( BR * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( ( PN - Const ),Const ) )", "choosing": "( ( ( Max( ( MUM + MUC ),( RCSe / CS ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( RMSe ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03241128980746066}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Min( Min( ARS ,BR ) ,( DDR - ACS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUC / MUM ) / CS ) )", "obj1": 0.9079497907949791, "obj2": 0.033435673925921575}, {"determining": "( ( RRS * RRS ) - Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) - Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) )", "choosing": "( ( Max( RMSe,( MUC / ( MUR - ( ( ( MUC / CS ) - Min( DS ,RRSe ) ) - ( Max( RRSe,MUM ) - MLU ) ) ) ) ) / RCSe ) * ( Max( MUR,( ( ( ( CS - RRSe ) - RRSe ) - Min( MLU ,MLU ) ) - CS ) ) / MUR ) )", "obj1": 0.895397489539749, "obj2": 0.03807037553737895}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - DDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( MUM / Max( MUC,CS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MUR,MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.0034781583800438665}, {"determining": "( ( Max( Const,( ACS * Max( Min( ( Const * ( RRS - ACS ) ) ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) * MRS ) - Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) )", "choosing": "( ( ( Max( MUR,( ( MUC * RCSe ) / DS ) ) / MUM ) / Min( ( Max( DS,Max( ( Max( MUC,MUC ) / RCSe ),CS ) ) + CS ) ,MUC ) ) * Max( MUR,MLU ) )", "obj1": 0.9769874476987448, "obj2": 0.0075636119836154795}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.895397489539749, "obj2": 0.03807037553737895}, {"determining": "( ( PN + FirstVNF_RAM ) * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( DS + Min( DS ,DS ) ) / ( ( ( ( MUC / MUC ) - MUC ) + RRSe ) + ( ( MUC * MUM ) + RRSe ) ) )", "obj1": 0.9205020920502092, "obj2": 0.03032342663219653}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( FirstVNF_RAM_Server ,BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( DS + ( ( Max( Min( ( RRSe - DS ) ,MUM ),Min( RCSe ,Max( MUR,MUC ) ) ) + Min( ( MLU / ( RRSe * RRSe ) ) ,RCSe ) ) - ( CS * Min( MUC ,MUM ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9037656903765691, "obj2": 0.03605531299570941}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + Max( ( Min( CRS ,MRS ) / Min( ARS ,ACS ) ),Const ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( Min( ( MUC - CS ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.99581589958159, "obj2": 0.0013962163177859471}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + Max( ( Min( CRS ,MRS ) / Min( ARS ,ACS ) ),Const ) ) + ( FirstVNF_RAM_Server + ( ( MDR + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( Min( ( MUC - CS ) ,( MUC * Min( RCSe ,RRSe ) ) ) + ( RRSe / ( MUC / DS ) ) ),CS ) ) ) - MUM )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( ( ( AMS * Max( BR,ACS ) ) - DDR ) - Max( ( PN - MDR ),Const ) )", "choosing": "( Min( RCSe ,RCSe ) * ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03241128980746066}, {"determining": "( ( ( PN * ( ( FirstVNF_Mem_Server + ARS ) + ( FirstVNF_RAM_Server + ( ( Min( MRS ,FirstVNF_Mem_Server ) + ( PN + ACS ) ) - CRS ) ) ) ) * Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + ( MUR * Max( ( MUR + Min( MLU ,MLU ) ),CS ) ) ) - MUM )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( Max( FirstVNF_Mem,Const ) - ( ( AMS * Max( BR,Const ) ) / DDR ) )", "choosing": "( ( ( Max( ( ( Max( MLU,Min( MUR ,MUM ) ) + Max( CS,RMSe ) ) / ( DS - ( RCSe + CS ) ) ),( ( MUC * RCSe ) + ( RCSe / RRSe ) ) ) / MUM ) / CS ) * Max( MLU,MLU ) )", "obj1": 0.9686192468619247, "obj2": 0.010067173289404254}], "12": [{"determining": "( CRS - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - Min( MUC ,( ( RRSe + ( MUR / CS ) ) / Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( BR - ( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * ( ( DDR + CRS ) + ARS ) ) ) ,( FirstVNF_CPU_Server - ( DDR * BR ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( RMSe + MUC ) + ( ( ( Min( RCSe ,MUM ) * ( ( MLU - CS ) * MUM ) ) + Min( ( ( RMSe / CS ) + MUM ) ,MLU ) ) / Min( ( RRSe * MUR ) ,Min( MUC ,MUR ) ) ) ) ) ,( RRSe - RCSe ) )", "obj1": 0.6589958158995816, "obj2": 0.1864214319760992}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ( BR * CRS ) - ( ( MDR + ( ( Const * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( DDR ,AMS ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( AMS ,Const ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( ( RCSe * ( RCSe / RRSe ) ) / DS ) - CS ) ,Max( Min( RRSe ,MUC ),Max( RRSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6548117154811716, "obj2": 0.18895816575039542}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM + CRS ) + ( FirstVNF_Mem_Server + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * DDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),RRSe ),RRSe ) ) - MUM )", "obj1": 0.6610878661087866, "obj2": 0.16116128372139435}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( DDR + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( DDR * FirstVNF_Mem_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( RRSe,( ( Max( MUR,RRSe ) + Min( RMSe ,( MUM / MUC ) ) ) * ( ( CS * CS ) - ( CS + DS ) ) ) ) * MUM ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.7510460251046025, "obj2": 0.09086553266520381}, {"determining": "Min( ( FirstVNF_Mem - ( ( CRS - Max( ARS,( ( ( FirstVNF_RAM * FirstVNF_Mem ) / FirstVNF_CPU_Server ) * ARS ) ) ) + ( BR / FirstVNF_CPU_Server ) ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU * Max( MUM,CS ) ) ,Max( Min( MUC ,( MUC + ( DS * RCSe ) ) ),Max( RMSe,RCSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - Const ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) ) ) - MUM )", "obj1": 0.8472803347280334, "obj2": 0.054660155352659674}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( ( ACS + ( CRS * FirstVNF_Mem_Server ) ) * PN ) ) - Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS * ( RCSe * DS ) ) ,( DS + Max( MUC,( CS + Min( ( RRSe * RCSe ) ,MUR ) ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08819695849935194}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8284518828451883, "obj2": 0.05651895364057412}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.8577405857740585, "obj2": 0.04638400827710814}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( PN + ACS ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUR,Min( ( MUC * RCSe ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) ) ) / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7405857740585774, "obj2": 0.09786640298960653}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.8200836820083682, "obj2": 0.06454893499604422}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS - ( FirstVNF_RAM_Server + ( ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ARS ) ) - CRS ) ) ) ) / ( MDR / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * DDR ) ,Min( FirstVNF_CPU ,Min( AMS ,BR ) ) ) )", "choosing": "( Max( ( Min( ( ( ( Max( RRSe,MUM ) + Min( RMSe ,CS ) ) + MLU ) - Min( ( MUC - Min( RRSe ,DS ) ) ,MUR ) ) ,RRSe ) - MUR ),RRSe ) - MUM )", "obj1": 0.6610878661087866, "obj2": 0.16116128372139435}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) - MUM )", "obj1": 0.7928870292887029, "obj2": 0.0750008965478112}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - ( Max( MUR,( DS * MUC ) ) + ( ( CS - RRSe ) - DS ) ) ) ,( RRSe / MUM ) )", "obj1": 0.702928870292887, "obj2": 0.12344257975932313}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6882845188284519, "obj2": 0.13766254808234415}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,( MUC / DS ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) / CS ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Max( ( RRSe * MUR ),MUR ) ),MUC ) ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10970560574982924}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / MDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) * ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( CS * Min( ( MUC - DS ) ,Max( MLU,Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06586293577884719}, {"determining": "( ( Max( PN,( ACS + ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + PN ) ) + CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( ( Min( MLU ,( ( RCSe * DS ) - DS ) ) + DS ) ,( ( RCSe / DS ) * MUM ) ) ) - ( ( ( ( Max( MUR,RMSe ) / CS ) / CS ) + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MLU / MUC ) ,( CS * MUC ) ) / Min( ( MUC + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8242677824267782, "obj2": 0.057925603381103946}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( DDR + ( Max( Min( CRS ,ACS ),FirstVNF_Mem ) + ( AMS * MRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUC,( ( RRSe * RCSe ) + RCSe ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7719665271966527, "obj2": 0.08573245260570593}, {"determining": "( ( Min( DDR ,( ACS / FirstVNF_Mem ) ) + BR ) * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( Max( MLU,MUC ) / Max( ( ( RCSe * MLU ) / RRSe ),Max( RRSe,MUC ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04086576840526173}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( RCSe + RRSe ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8723849372384938, "obj2": 0.0420713301035332}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( DDR - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( ( ACS - ACS ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( DS / ( MLU + ( ( MUC * RRSe ) / Min( MUC ,RMSe ) ) ) ) / MUM ) )", "obj1": 0.7092050209205021, "obj2": 0.11260780798120791}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02587716331144243}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ( ( ( MDR + FirstVNF_RAM ) * Max( FirstVNF_RAM_Server,Min( AMS ,FirstVNF_RAM ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUR ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,Min( RMSe ,MLU ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7845188284518828, "obj2": 0.08107605579221487}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + ( FirstVNF_Mem_Server / MDR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( BR + CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,( MUC / MLU ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) / CS ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU - RMSe ),Max( ( RRSe * MUR ),MUR ) ),MUC ) ) ) )", "obj1": 0.7887029288702929, "obj2": 0.07981985673146527}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Min( ( ( ( Max( RRSe,MUM ) + Min( RMSe ,CS ) ) + MLU ) - Min( ( MUC - Min( RRSe ,DS ) ) ,MUR ) ) ,RRSe ) - MUR ),RRSe ) - MUM )", "obj1": 0.698744769874477, "obj2": 0.12676106260457415}, {"determining": "( ( ( PN * ( ACS + Min( FirstVNF_RAM_Server ,( ( Min( RRS ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( ACS ,FirstVNF_RAM_Server ) ) - ( PN - Max( Const,PN ) ) )", "choosing": "( Max( Max( RRSe,( RCSe / ( MUM - ( CS * MUR ) ) ) ),Min( ( MUC / MLU ) ,( ( MLU * MUC ) * MUC ) ) ) * ( Max( DS,MUC ) - RMSe ) )", "obj1": 0.7761506276150628, "obj2": 0.08340858070894351}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server - BR ) )", "choosing": "( Max( MLU,MLU ) * ( Min( ( CS + MUM ) ,( MLU / ( MUR * ( ( ( DS * MLU ) / MUR ) / MUM ) ) ) ) / MUM ) )", "obj1": 0.803347280334728, "obj2": 0.06765182016920955}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9037656903765691, "obj2": 0.03294946789103321}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( Max( DDR,FirstVNF_CPU ),Min( AMS ,ACS ) ) ) ) ) ) / ( FirstVNF_RAM_Server * DDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS - MUM ),Max( MLU,MUC ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.10667444017324221}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.9309623430962343, "obj2": 0.02490520949683462}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + ( FirstVNF_Mem_Server / MDR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9163179916317992, "obj2": 0.02742557914316715}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( BR - ( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.7259414225941423, "obj2": 0.10401020816915879}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + Const ) ) - CRS ) ) ) ) / Min( MDR ,( RRS * Max( ( RRS * ( Const * Min( FirstVNF_Mem_Server ,DDR ) ) ),( ( FirstVNF_CPU_Server + ( AMS + ACS ) ) * FirstVNF_Mem ) ) ) ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7949790794979079, "obj2": 0.06888201707818503}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * Max( ( Max( DDR,DDR ) - ( FirstVNF_Mem * ( RRS + ( ( AMS - Const ) * ARS ) ) ) ),BR ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Max( RCSe,Min( ( Max( ( Max( RRSe,MUM ) / DS ),( RRSe + ( MUC / RCSe ) ) ) / DS ) ,Max( ( RMSe - DS ),MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( ( FirstVNF_RAM * ( Min( AMS ,MDR ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - Const ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,( Max( Max( RRSe,RMSe ),RMSe ) * ( ( MUM / CS ) / MUM ) ) ) ) - MUM )", "obj1": 0.8472803347280334, "obj2": 0.054660155352659674}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ( ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03682578066905165}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) - FirstVNF_Mem_Server ) ) ) + ACS ) ) / ( AMS + MDR ) ) - Min( MDR ,BR ) )", "choosing": "( ( ( ( CS + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / RRSe ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( Min( MLU ,( Max( MUR,DS ) + RRSe ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( ( MLU * MUM ) - MLU ) ) - RMSe ) ) ,MUR ) ) )", "obj1": 0.7364016736401674, "obj2": 0.09831014237488442}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( FirstVNF_Mem - PN ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) + RRS ) + ( ( FirstVNF_Mem / ( MRS / ( ACS - BR ) ) ) * Max( Max( BR,( FirstVNF_Mem + FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( DS / ( ( RMSe * CS ) / ( RRSe + DS ) ) ) * DS ) * ( MUR - RMSe ) ) ,Max( Max( RRSe,CS ),MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + CRS ) ) - ( Min( FirstVNF_CPU_Server ,Const ) * MRS ) ) ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + DS ) * Min( MUR ,( MUR - MUM ) ) ) - MUM )", "obj1": 0.9518828451882845, "obj2": 0.016854964966117197}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,( FirstVNF_RAM_Server + ( ACS + ACS ) ) ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( ( MUR - MUM ) - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9142259414225942, "obj2": 0.031098500931284547}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( Min( MUR ,( ( MUC * ( RCSe * RMSe ) ) + DS ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) ,( MLU / MUC ) )", "obj1": 0.696652719665272, "obj2": 0.1300771180833084}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.799163179916318, "obj2": 0.06787297601455534}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - Const ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) * Min( MUM ,RRSe ) )", "obj1": 0.7071129707112971, "obj2": 0.11498276229775492}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01788867745622226}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( PN * ( ( AMS / ( DDR / PN ) ) + ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - CRS ) ) ) ) / Min( MDR ,DDR ) ) )", "choosing": "Min( ( RRSe - ( ( MUC + ( CS * RMSe ) ) + ( ( CS - RRSe ) - Max( ( MUC / ( Min( MLU ,RCSe ) - MUR ) ),( RMSe / CS ) ) ) ) ) ,( RRSe / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.13102328255128984}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_CPU_Server * DDR ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - Min( RCSe ,RRSe ) ) ),( CS / RCSe ) ) ) ) - MUM )", "obj1": 0.9372384937238494, "obj2": 0.021945781571648778}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,( MUC / DS ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9644351464435147, "obj2": 0.011391900706653912}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( FirstVNF_RAM_Server + ( ACS + ACS ) ) )", "choosing": "Min( ( ( ( ( MUM / MUR ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9832635983263598, "obj2": 0.005443051344297222}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + ( ( DDR + FirstVNF_CPU ) - ( FirstVNF_Mem + DDR ) ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( DS / ( ( RMSe * Max( ( MUM - MUR ),MLU ) ) / ( RRSe + DS ) ) ) * DS ) * ( MUR - RMSe ) ) ,( MLU * MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( RCSe + RRSe ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.042854563689476044}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_CPU ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7238493723849372, "obj2": 0.1040496320867902}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( BR ,ARS ) ,( DDR - ( ( ( MDR - ( MDR / AMS ) ) / RRS ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.020961913102358856}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ,( MUC - ( DS - MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03724683229527136}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( CRS + MRS ) / MRS ) - ARS ) ) ) + ( PN + ACS ) ) ) / ( Min( RRS ,ARS ) + ( ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + Max( Max( MLU,( ( MUC * RRSe ) - MUC ) ),RRSe ) ) * ( MLU + MUM ) ) ) * ( Min( ( CS * DS ) ,( MUC / MLU ) ) / Min( ( RRSe + ( Min( CS ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9351464435146444, "obj2": 0.023755578459529796}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server - Max( ( Max( FirstVNF_CPU,RRS ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ),Min( ARS ,MRS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * ( DS - CS ) ) )", "obj1": 0.7740585774058577, "obj2": 0.08441974828117435}, {"determining": "( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM_Server + ( MDR / BR ) ) ) - Max( Min( ( ARS / BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( Max( ( MUC * MLU ),Max( ( Min( MUC ,( CS - ( ( RCSe / RCSe ) * MLU ) ) ) / MUR ),RMSe ) ) ,( ( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Max( MUR,MUR ) * ( MUM + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9414225941422594, "obj2": 0.021718329019713125}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.04359749911343486}, {"determining": "( ( ( AMS * Max( ACS,( ( MDR - DDR ) * ( Max( Max( DDR,FirstVNF_CPU ),( BR * MDR ) ) - MRS ) ) ) ) - DDR ) - Max( ( PN - Const ),Const ) )", "choosing": "( ( ( Max( ( MUM + MUC ),( RCSe / CS ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( RMSe ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03241128980746066}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.01908712533043575}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8598326359832636, "obj2": 0.04492910859539063}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,( MUC / DS ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9644351464435147, "obj2": 0.011391900706653912}, {"determining": "( CRS * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8891213389121339, "obj2": 0.040077288991262824}, {"determining": "( ( ( ( ( MDR * ( AMS / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / MUM ),MLU ) * ( ( ( MUM / RMSe ) - Max( RCSe,MUM ) ) - CS ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) + DS ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9728033472803347, "obj2": 0.009381618165470111}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007435393221935383}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,( ARS + ( DDR - ( ARS * Min( FirstVNF_Mem_Server ,ARS ) ) ) ) ) ,( DDR - ACS ) ),MRS ) )", "choosing": "( ( Min( ( MUC / MLU ) ,Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,( Max( Max( CS,RCSe ),( RRSe + MUR ) ) * CS ) ) ) ) / Min( RCSe ,( RCSe / DS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.031729539826310105}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( Max( FirstVNF_Mem,Const ) - ( ( AMS * Max( BR,Const ) ) / DDR ) )", "choosing": "( ( ( Max( ( ( Max( MLU,Min( MUR ,MUM ) ) + Max( CS,RMSe ) ) / ( DS - ( RCSe + CS ) ) ),( ( MUC * RCSe ) + ( RCSe / RRSe ) ) ) / MUM ) / CS ) * Max( MLU,MLU ) )", "obj1": 0.9686192468619247, "obj2": 0.010067173289404254}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.8619246861924686, "obj2": 0.04457595878326985}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Min( Min( ARS ,BR ) ,( ( Max( MDR,( CRS * DDR ) ) - FirstVNF_CPU ) - ACS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUC / ( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) ) ) / ( MUR * Max( Min( ( RMSe * ( Min( MUC ,MUR ) - RRSe ) ) ,( Max( MUR,Max( RRSe,RRSe ) ) + Max( MUC,( RCSe / RCSe ) ) ) ),( ( MUC * DS ) * Max( MUM,RCSe ) ) ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.024363587700703956}, {"determining": "( Min( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) ,Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - Min( DDR ,( BR + MRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( Max( RRSe,MUR ),MLU ) * ( ( MUM + CS ) / MUM ) )", "obj1": 0.8640167364016736, "obj2": 0.043741621140601275}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( ( FirstVNF_Mem / ARS ) + DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + MLU ) - MUM )", "obj1": 0.6903765690376569, "obj2": 0.135491384579338}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( PN + ACS ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "Min( ( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ,( MUC - ( DS - MUR ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006718368804737077}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,BR ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + Max( ACS,ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( RMSe - DS ) )", "obj1": 0.6924686192468619, "obj2": 0.13358345540429725}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ARS / ( FirstVNF_RAM_Server * DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,MUR ) * RCSe ) - MUM )", "obj1": 0.6903765690376569, "obj2": 0.135491384579338}, {"determining": "( ( Min( BR ,CRS ) - Max( FirstVNF_Mem,Const ) ) - ( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUC ,DS ) / DS ),RMSe ) ) / RMSe ) ) ) * ( Min( MUC ,DS ) - RMSe ) )", "obj1": 0.9748953974895398, "obj2": 0.00805892986762803}, {"determining": "( ( ( Const * ( ACS + ( ( MRS - AMS ) / FirstVNF_RAM ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * Min( ( MUM / ( DS - DS ) ) ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( PN + ACS ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( RRSe,( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - RMSe ) )", "obj1": 0.9790794979079498, "obj2": 0.006718368804737077}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( PN * FirstVNF_RAM ),PN ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - ( RMSe * DS ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.01908712533043575}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - Min( ( BR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - RMSe ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( ( ( RMSe / DS ) * RMSe ) + MUM ) ,MUR ) ) )", "obj1": 0.7949790794979079, "obj2": 0.06888201707818503}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.895397489539749, "obj2": 0.03807037553737895}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + DS ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Min( ( MUM + ( Min( CS ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.893305439330544, "obj2": 0.03895089241592781}], "13": [{"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - Min( MUC ,( ( RRSe + ( MUR / CS ) ) / Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * ( ( DDR + CRS ) + ARS ) ) ) ,( FirstVNF_CPU_Server - ( DDR * BR ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( RMSe + MUC ) + ( ( ( Min( RCSe ,MUM ) * ( ( MLU - CS ) * MUM ) ) + Min( ( ( RMSe / CS ) + MUM ) ,MLU ) ) / Min( ( RRSe * MUR ) ,Min( MUC ,MUR ) ) ) ) ) ,( RRSe - RCSe ) )", "obj1": 0.6589958158995816, "obj2": 0.1864214319760992}, {"determining": "Min( ( FirstVNF_Mem - ( ( CRS - Max( ARS,( ( ( FirstVNF_RAM * FirstVNF_Mem ) / FirstVNF_CPU_Server ) * ARS ) ) ) + ( BR / FirstVNF_CPU_Server ) ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU * Max( MUM,CS ) ) ,Max( Min( MUC ,( MUC + ( DS * RCSe ) ) ),Max( RMSe,RCSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6548117154811716, "obj2": 0.18895816575039542}, {"determining": "( ( ( PN * ( ACS - ( FirstVNF_RAM_Server + ( ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ARS ) ) - CRS ) ) ) ) / ( MDR / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * DDR ) ,Min( FirstVNF_CPU ,Min( AMS ,BR ) ) ) )", "choosing": "( Max( ( Min( ( ( ( Max( RRSe,MUM ) + Min( RMSe ,CS ) ) + MLU ) - Min( ( MUC - Min( RRSe ,DS ) ) ,MUR ) ) ,RRSe ) - MUR ),RRSe ) - MUM )", "obj1": 0.6610878661087866, "obj2": 0.16116128372139435}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8451882845188284, "obj2": 0.051230142192935466}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( DDR + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( DDR * FirstVNF_Mem_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( RRSe,( ( Max( MUR,RRSe ) + Min( RMSe ,( MUM / MUC ) ) ) * ( ( CS * CS ) - ( CS + DS ) ) ) ) * MUM ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ( BR * CRS ) - ( ( MDR + ( ( Const * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( DDR ,AMS ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( AMS ,Const ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( ( RCSe * ( RCSe / RRSe ) ) / DS ) - CS ) ,Max( Min( RRSe ,MUC ),Max( RRSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8284518828451883, "obj2": 0.05651895364057412}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM + CRS ) + ( FirstVNF_Mem_Server + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * DDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),RRSe ),RRSe ) ) - MUM )", "obj1": 0.6610878661087866, "obj2": 0.16116128372139435}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUC ,DS ) / DS ),RMSe ) ) / RMSe ) ) ) * ( Min( MUC ,DS ) - RMSe ) )", "obj1": 0.7447698744769874, "obj2": 0.09559125526858844}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.7907949790794979, "obj2": 0.07360432249167558}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( Max( MDR,ACS ) - CRS ) ) / ACS ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Min( RRSe ,( Max( DS,DS ) - ( DS / ( MUM * ( RRSe - RMSe ) ) ) ) ) + ( Min( MUC ,RCSe ) / MUM ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.0806587622947572}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU ) * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) / ( Max( Max( CS,RMSe ),MLU ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04646813220201952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUM ) * ( ( ( CS * RRSe ) / CS ) / MUM ) )", "obj1": 0.8723849372384938, "obj2": 0.04090544244187886}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ( ARS + ACS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) - Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS * MUR ),( Max( CS,MLU ) * ( MLU + MUM ) ) ) * ( Min( MUM ,( CS * MUC ) ) / Min( ( MUM * ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.7845188284518828, "obj2": 0.07554727666981204}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + ( CS + ( MUR * Max( Min( MUC ,RMSe ),Min( MUM ,Max( MUM,( CS + RCSe ) ) ) ) ) ) ) ,Max( Min( MUR ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7092050209205021, "obj2": 0.11226306411600137}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.8179916317991632, "obj2": 0.06187064889289994}, {"determining": "( ( FirstVNF_Mem_Server + CRS ) - ( ( FirstVNF_CPU_Server * DDR ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUM - Min( ( MUR - RCSe ) ,CS ) )", "obj1": 0.694560669456067, "obj2": 0.12935646655351524}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,( MUC / DS ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) / CS ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Max( ( RRSe * MUR ),MUR ) ),MUC ) ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10970560574982924}, {"determining": "( ( Min( DDR ,( ACS / FirstVNF_Mem ) ) + BR ) * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( Max( MLU,MUC ) / Max( ( ( RCSe * MLU ) / RRSe ),Max( RRSe,MUC ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04086576840526173}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( MDR,ACS ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7698744769874477, "obj2": 0.0876701297070862}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.7510460251046025, "obj2": 0.09086553266520381}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02587716331144243}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( ACS * ACS ) + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) ) ) / Min( RRS ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( Min( ( RCSe - ( Max( CS,CS ) - MLU ) ) ,( RMSe - RRSe ) ),Max( MUC,( Max( Max( CS,MLU ),( RRSe + MUR ) ) * CS ) ) ) ,( MUC / MLU ) ) / Min( RCSe ,( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9079497907949791, "obj2": 0.03161007272912759}, {"determining": "( ( ( PN * ( Min( Min( MDR ,BR ) ,BR ) + ( FirstVNF_Mem_Server / MDR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( ( ( MUM * MLU ) / MUC ) * MUC ) / CS ) / MUM ) )", "obj1": 0.9142259414225942, "obj2": 0.02827613773543162}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08819695849935194}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( BR - ( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.7259414225941423, "obj2": 0.10401020816915879}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( Const * ( ACS + ( ( MRS - AMS ) / FirstVNF_RAM ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * Min( ( MUM / ( DS - DS ) ) ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - ( Max( MUR,( DS * MUC ) ) + ( ( CS - RRSe ) - DS ) ) ) ,( RRSe / MUM ) )", "obj1": 0.702928870292887, "obj2": 0.12344257975932313}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ( ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03682578066905165}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Min( ( ( ( Max( RRSe,MUM ) + Min( RMSe ,CS ) ) + MLU ) - Min( ( MUC - Min( RRSe ,DS ) ) ,MUR ) ) ,RRSe ) - MUR ),RRSe ) - MUM )", "obj1": 0.698744769874477, "obj2": 0.12676106260457415}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( ( AMS / MRS ) - ( RRS * FirstVNF_RAM_Server ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * ( ( ( MLU / Min( DS ,RMSe ) ) + Min( MLU ,Min( RMSe ,MUM ) ) ) + MUR ) )", "obj1": 0.7384937238493724, "obj2": 0.09704289430914724}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Min( ( ( CRS / FirstVNF_CPU_Server ) + ( ARS * BR ) ) ,Min( Max( Max( Const,BR ),Max( ACS,BR ) ) ,ACS ) ) ) / AMS ) / Min( FirstVNF_RAM_Server ,MDR ) ) - ( FirstVNF_CPU * ( PN - Const ) ) )", "choosing": "( MUM - ( Min( MUC ,MUR ) * ( Min( ( Max( CS,( DS - Min( RCSe ,MLU ) ) ) + ( Max( Min( MLU ,RCSe ),CS ) + MLU ) ) ,( CS + DS ) ) * MUR ) ) )", "obj1": 0.8158995815899581, "obj2": 0.06426864444614577}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RMSe ) / RCSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) - FirstVNF_Mem_Server ) ) ) + ACS ) ) / ( AMS + MDR ) ) - Min( MDR ,BR ) )", "choosing": "( ( ( ( CS + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / RRSe ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( Min( MLU ,( Max( MUR,DS ) + RRSe ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( ( MLU * MUM ) - MLU ) ) - RMSe ) ) ,MUR ) ) )", "obj1": 0.7364016736401674, "obj2": 0.09831014237488442}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - Min( ( BR + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - RMSe ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( ( ( RMSe / DS ) * RMSe ) + MUM ) ,MUR ) ) )", "obj1": 0.7949790794979079, "obj2": 0.06888201707818503}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.9309623430962343, "obj2": 0.02490520949683462}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9037656903765691, "obj2": 0.03294946789103321}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / MDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) * ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( CS * Min( ( MUC - DS ) ,Max( MLU,Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06586293577884719}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - Const ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) * Min( MUM ,RRSe ) )", "obj1": 0.7071129707112971, "obj2": 0.11498276229775492}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.7510460251046025, "obj2": 0.09086553266520381}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.799163179916318, "obj2": 0.06787297601455534}, {"determining": "( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01788867745622226}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( Max( DDR,FirstVNF_CPU ),Min( AMS ,ACS ) ) ) ) ) ) / ( FirstVNF_RAM_Server * DDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS - MUM ),Max( MLU,MUC ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.10667444017324221}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_CPU_Server * DDR ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - Min( RCSe ,RRSe ) ) ),( CS / RCSe ) ) ) ) - MUM )", "obj1": 0.9372384937238494, "obj2": 0.021945781571648778}, {"determining": "( ( ( ( ( ( AMS + Min( DDR ,RRS ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + ( ( ACS + ACS ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * Const ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),RRSe ),( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe * ( CS - Min( MLU ,RRSe ) ) ),( RCSe / CS ) ) ) ) ) - MUM )", "obj1": 0.700836820083682, "obj2": 0.12510359705723173}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9728033472803347, "obj2": 0.009376780909648937}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Max( MLU,MLU ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006530289714969578}, {"determining": "( ( ( PN * ( DDR + ( Max( Min( CRS ,ACS ),FirstVNF_Mem ) + ( AMS * MRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUC,( ( RRSe * RCSe ) + RCSe ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7719665271966527, "obj2": 0.08573245260570593}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),( BR * MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / MLU ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9602510460251046, "obj2": 0.011968910416946785}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( ( ACS + ( CRS * FirstVNF_Mem_Server ) ) * PN ) ) - Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS * ( RCSe * DS ) ) ,( DS + Max( MUC,( CS + Min( ( RRSe * RCSe ) ,MUR ) ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08819695849935194}, {"determining": "( Max( FirstVNF_Mem,Const ) - ( ( AMS * Max( BR,Const ) ) / DDR ) )", "choosing": "( ( ( Max( ( ( Max( MLU,Min( MUR ,MUM ) ) + Max( CS,RMSe ) ) / ( DS - ( RCSe + CS ) ) ),( ( MUC * RCSe ) + ( RCSe / RRSe ) ) ) / MUM ) / CS ) * Max( MLU,MLU ) )", "obj1": 0.9686192468619247, "obj2": 0.010067173289404254}, {"determining": "( ( ( PN * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ,CS ) * RMSe ) )", "obj1": 0.7196652719665272, "obj2": 0.10753158282260228}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.803347280334728, "obj2": 0.06765182016920955}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_CPU ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7238493723849372, "obj2": 0.1040496320867902}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - Min( RCSe ,RRSe ) ) * ( Min( ( CS * MUC ) ,Min( MUC ,MLU ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8242677824267782, "obj2": 0.057925603381103946}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ( MDR + FirstVNF_RAM ) ,( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( RRSe + DS ) / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.02003772918941563}, {"determining": "( ( ( PN * ( Min( MDR ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.01591731824056435}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server - Max( ( Max( FirstVNF_CPU,RRS ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ),Min( ARS ,MRS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * ( DS - CS ) ) )", "obj1": 0.7740585774058577, "obj2": 0.08441974828117435}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( RRSe,( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - RMSe ) )", "obj1": 0.7761506276150628, "obj2": 0.08340858070894351}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( RMSe * CS ) / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9581589958158996, "obj2": 0.013282891893273979}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.04359749911343486}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ARS ,( ( PN * FirstVNF_CPU_Server ) * ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) * Const ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( Max( ( Max( DS,MUR ) / MUC ),RRSe ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9518828451882845, "obj2": 0.0167839069569741}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( RCSe + RRSe ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.042854563689476044}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06586293577884719}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server - BR ) )", "choosing": "( Max( MLU,MLU ) * ( Min( ( CS + MUM ) ,( MLU / ( MUR * ( ( ( DS * MLU ) / MUR ) / MUM ) ) ) ) / MUM ) )", "obj1": 0.803347280334728, "obj2": 0.06765182016920955}, {"determining": "( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM_Server + ( MDR / BR ) ) ) - Max( Min( ( ARS / BR ) ,( DDR - ACS ) ),Const ) )", "choosing": "Min( Max( ( MUC * MLU ),Max( ( Min( MUC ,( CS - ( ( RCSe / RCSe ) * MLU ) ) ) / MUR ),RMSe ) ) ,( ( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Max( MUR,MUR ) * ( MUM + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9414225941422594, "obj2": 0.021718329019713125}, {"determining": "( CRS * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RRSe / RMSe ) ) - ( ( CS * Max( MUM,( ( Min( DS ,MUR ) - ( MUM / MUM ) ) / RRSe ) ) ) / ( MLU + MUR ) ) ) * ( ( ( ( MUC + RMSe ) * RMSe ) - MUC ) + ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * Max( MUR,MUR ) ) ) )", "obj1": 0.8891213389121339, "obj2": 0.040077288991262824}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - Min( CRS ,MDR ) )", "choosing": "( ( ( MUM / ( MUM / MUM ) ) + RRSe ) - ( ( RMSe - MUM ) * MLU ) )", "obj1": 0.9184100418410042, "obj2": 0.026805058086797354}, {"determining": "( ( ( ( ( MDR * ( AMS / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / MUM ),MLU ) * ( ( ( MUM / RMSe ) - Max( RCSe,MUM ) ) - CS ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( Max( PN,( ACS + ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + PN ) ) + CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( ( Min( MLU ,( ( RCSe * DS ) - DS ) ) + DS ) ,( ( RCSe / DS ) * MUM ) ) ) - ( ( ( ( Max( MUR,RMSe ) / CS ) / CS ) + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MLU / MUC ) ,( CS * MUC ) ) / Min( ( MUC + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8242677824267782, "obj2": 0.057925603381103946}, {"determining": "( ( ( PN * ( ACS + Min( FirstVNF_RAM_Server ,( ( Min( RRS ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( ACS ,FirstVNF_RAM_Server ) ) - ( PN - Max( Const,PN ) ) )", "choosing": "( Max( Max( RRSe,( RCSe / ( MUM - ( CS * MUR ) ) ) ),Min( ( MUC / MLU ) ,( ( MLU * MUC ) * MUC ) ) ) * ( Max( DS,MUC ) - RMSe ) )", "obj1": 0.7761506276150628, "obj2": 0.08340858070894351}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( CS - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8263598326359832, "obj2": 0.05772717582513472}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9058577405857741, "obj2": 0.032520038880641984}, {"determining": "( Min( ( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * ( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ) + DS ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9665271966527197, "obj2": 0.011131076996683142}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / AMS ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,Min( ( RMSe / CS ) ,Max( ( DS / ( Min( MLU ,RMSe ) / MUC ) ),MUR ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.003365433385978227}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.8619246861924686, "obj2": 0.04457595878326985}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( RCSe / CS ) - ( ( MUR + DS ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Min( ( RRSe + ( Min( CS ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9330543933054394, "obj2": 0.0243521554643264}, {"determining": "( ( PN + FirstVNF_RAM ) * ( ACS - ( MDR + DDR ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.039240609433834096}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + Const ) ) - CRS ) ) ) ) / Min( MDR ,( RRS * Max( ( RRS * ( Const * Min( FirstVNF_Mem_Server ,DDR ) ) ),( ( FirstVNF_CPU_Server + ( AMS + ACS ) ) * FirstVNF_Mem ) ) ) ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7949790794979079, "obj2": 0.06888201707818503}, {"determining": "( Min( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) ,Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - Min( DDR ,( BR + MRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( Max( RRSe,MUR ),MLU ) * ( ( MUM + CS ) / MUM ) )", "obj1": 0.8640167364016736, "obj2": 0.043741621140601275}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( ( PN * FirstVNF_CPU_Server ) * ( FirstVNF_RAM * DDR ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( Min( ( ( RRSe + MUR ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ,( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.01908712533043575}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ,( MUC - ( DS - MUR ) ) )", "obj1": 0.897489539748954, "obj2": 0.03724683229527136}], "14": [{"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS / FirstVNF_CPU_Server ) ) - Max( Max( DDR,FirstVNF_CPU ),Min( AMS ,ACS ) ) ) ) ) ) / ( FirstVNF_RAM_Server * DDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS - MUM ),Max( MLU,MUC ) ) - ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) - Max( FirstVNF_Mem,Const ) ) - Min( Min( FirstVNF_CPU_Server ,( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) ) ,( Min( CRS ,AMS ) / Min( ARS ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6548117154811716, "obj2": 0.18895816575039542}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6569037656903766, "obj2": 0.16048824266878148}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "Min( ( FirstVNF_CPU_Server - BR ) ,( DDR * ( AMS / FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - CS ) ,( MUM / ( RRSe / ( MLU * Max( ( ( DS * RMSe ) + ( MUC * ( CS - MUM ) ) ),( RRSe * ( RCSe / ( RMSe - DS ) ) ) ) ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.20338622036740703}, {"determining": "( ( ( PN * ( ACS + ( DDR + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( DDR * FirstVNF_Mem_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( RRSe,( ( Max( MUR,RRSe ) + Min( RMSe ,( MUM / MUC ) ) ) * ( ( CS * CS ) - ( CS + DS ) ) ) ) * MUM ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "( ( ( PN * ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6631799163179917, "obj2": 0.15713348887287185}, {"determining": "Min( ( ( BR * CRS ) - ( ( MDR + ( ( Const * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( DDR ,AMS ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( AMS ,Const ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( ( RCSe * ( RCSe / RRSe ) ) / DS ) - CS ) ,Max( Min( RRSe ,MUC ),Max( RRSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "Min( ( FirstVNF_Mem - ( ( CRS - Max( ARS,( ( ( FirstVNF_RAM * FirstVNF_Mem ) / FirstVNF_CPU_Server ) * ARS ) ) ) + ( BR / FirstVNF_CPU_Server ) ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU * Max( MUM,CS ) ) ,Max( Min( MUC ,( MUC + ( DS * RCSe ) ) ),Max( RMSe,RCSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( Min( ( MRS * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server + ( ACS + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( MLU + MUC ) * DS ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07591311405269663}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9372384937238494, "obj2": 0.019570362937212264}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( MDR * MDR ) * ( AMS * ACS ) ) - FirstVNF_RAM ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MLU / CS ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 0.8828451882845189, "obj2": 0.03984247397189421}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Max( MLU,MLU ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006530289714969577}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,RRS ) ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,BR ) - AMS ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( MUM,MLU ) * ( MUM / ( Min( RCSe ,MUR ) / ( ( MUR * ( ( MUR / RRSe ) / ( DS + MUC ) ) ) + ( RMSe / ( RCSe + ( ( CS + MLU ) + RRSe ) ) ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.1350922350674181}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( DDR + ( ( Const + AMS ) - FirstVNF_RAM ) ) ) ) ) - ( Min( Max( FirstVNF_RAM_Server,DDR ) ,CRS ) - FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( MUM ,RRSe ) / MUR ) ,( CS * MUC ) ) / Max( ( Max( ( ( ( CS / RRSe ) * DS ) * RCSe ),MUC ) + MUC ),( ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) / RMSe ) ) ) * ( Min( MUC ,DS ) * RMSe ) )", "obj1": 0.7447698744769874, "obj2": 0.09536550352684915}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + ( CS + ( MUR * Max( Min( MUC ,RMSe ),Min( MUM ,Max( MUM,( CS + RCSe ) ) ) ) ) ) ) ,Max( Min( MUR ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - ( Max( MUR,( DS * MUC ) ) + ( ( CS - RRSe ) - DS ) ) ) ,( RRSe / MUM ) )", "obj1": 0.702928870292887, "obj2": 0.12344257975932313}, {"determining": "( ( FirstVNF_Mem_Server + CRS ) - ( ( FirstVNF_CPU_Server * DDR ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUM - Min( ( MUR - RCSe ) ,CS ) )", "obj1": 0.694560669456067, "obj2": 0.12935646655351524}, {"determining": "( ( ( Const * ( ACS + ( ( MRS - AMS ) / FirstVNF_RAM ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * Min( ( MUM / ( DS - DS ) ) ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUM ) * ( ( ( CS * RRSe ) / CS ) / MUM ) )", "obj1": 0.8723849372384938, "obj2": 0.04090544244187886}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe - RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05478390712897766}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU ) * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) / ( Max( Max( CS,RMSe ),MLU ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04646813220201952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.0873316483252704}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8891213389121339, "obj2": 0.03856251371769347}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server / DDR ) + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( MLU * RMSe ) / CS ) / MUM ) )", "obj1": 0.801255230125523, "obj2": 0.06706913857442043}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02587716331144243}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060643055956409155}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUR + MUR ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9079497907949791, "obj2": 0.03161007272912758}, {"determining": "( ( ( PN * ( DDR + ( Max( Min( CRS ,ACS ),FirstVNF_Mem ) + ( AMS * MRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUC,( ( RRSe * RCSe ) + RCSe ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7719665271966527, "obj2": 0.08573245260570593}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,( ACS - ( MDR + DDR ) ) ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - ACS ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( FirstVNF_CPU * ( Const * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( Min( DS ,MUC ) / MUC ) / ( ( ( ( ( CS * DS ) + RMSe ) * MUC ) / MUR ) + Min( RCSe ,MUC ) ) ) + RRSe ) - MUM )", "obj1": 0.9309623430962343, "obj2": 0.024837461760064884}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Min( ( ( CRS / FirstVNF_CPU_Server ) + ( ARS * BR ) ) ,Min( Max( Max( Const,BR ),Max( ACS,BR ) ) ,ACS ) ) ) / AMS ) / Min( FirstVNF_RAM_Server ,MDR ) ) - ( FirstVNF_CPU * ( PN - Const ) ) )", "choosing": "( MUM - ( Min( MUC ,MUR ) * ( Min( ( Max( CS,( DS - Min( RCSe ,MLU ) ) ) + ( Max( Min( MLU ,RCSe ),CS ) + MLU ) ) ,( CS + DS ) ) * MUR ) ) )", "obj1": 0.8158995815899581, "obj2": 0.06426864444614577}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( RRSe,( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - RMSe ) )", "obj1": 0.7761506276150628, "obj2": 0.08340858070894351}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7887029288702929, "obj2": 0.07267546459987068}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ACS - ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( Max( ( ( ( ( ( Max( RRSe,MUM ) + Min( RMSe ,CS ) ) + MLU ) - Min( ( MUC - Min( RRSe ,DS ) ) ,MUR ) ) - RRSe ) - ( CS + MUR ) ),RRSe ) - MUM )", "obj1": 0.696652719665272, "obj2": 0.125447754967623}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7949790794979079, "obj2": 0.06878189649572197}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / MDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) * ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( CS * Min( ( MUC - DS ) ,Max( MLU,Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06586293577884719}, {"determining": "( ( ( PN * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ,CS ) * RMSe ) )", "obj1": 0.7154811715481172, "obj2": 0.10973650608693526}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.8619246861924686, "obj2": 0.04457595878326985}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.09044387046966783}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7928870292887029, "obj2": 0.07206606046150771}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( MDR,ACS ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( DS ,MUC ) - RMSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.016661859452541936}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "( ( ( PN * ( ACS + ( Min( CRS ,AMS ) / FirstVNF_CPU_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( MRS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Min( ( MUM - ( ( Max( MLU,RMSe ) * Max( RMSe,MUC ) ) / MLU ) ) ,Min( MLU ,DS ) ) ,( MUC / CS ) ),MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.7301255230125523, "obj2": 0.10326119052716103}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),( BR * MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / MLU ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9602510460251046, "obj2": 0.011968910416946785}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ( ARS + ACS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) - Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS * MUR ),( Max( CS,MLU ) * ( MLU + MUM ) ) ) * ( Min( MUM ,( CS * MUC ) ) / Min( ( MUM * ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.7845188284518828, "obj2": 0.07554727666981204}, {"determining": "( Min( ( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * ( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( MLU * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,DS ) ) ) + DS ) * ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) ) / MUR ) )", "obj1": 0.9665271966527197, "obj2": 0.011088116621577297}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.8514644351464435, "obj2": 0.048394310913867006}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server - ( ( ( MRS / ACS ) + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUR ) * ( ( ( Max( CS,CS ) - RRSe ) / MUM ) / MUM ) )", "obj1": 0.7092050209205021, "obj2": 0.11226306411600137}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( MLU * Max( MUM,CS ) ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8221757322175732, "obj2": 0.05852646271645541}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - Const ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) * Min( MUM ,RRSe ) )", "obj1": 0.7071129707112971, "obj2": 0.11498276229775492}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ( ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9016736401673641, "obj2": 0.036443999416553796}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9037656903765691, "obj2": 0.03294946789103321}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) + Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + ( MLU - CS ) ) * Max( MLU,MLU ) )", "obj1": 0.8493723849372385, "obj2": 0.04956763830577792}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ( ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.895397489539749, "obj2": 0.037794856276718795}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( RCSe / CS ) - ( ( MUR + DS ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Min( ( RRSe + ( Min( CS ,CS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9330543933054394, "obj2": 0.0243521554643264}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( Max( DDR,FirstVNF_CPU ),Min( AMS ,ACS ) ) ) ) ) ) / ( FirstVNF_RAM_Server * DDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS - MUM ),Max( MLU,MUC ) ) - MUM )", "obj1": 0.7217573221757322, "obj2": 0.10667444017324221}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server - ( DDR / MRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + ( ( RCSe - MUC ) - RRSe ) ) - MUM )", "obj1": 0.8451882845188284, "obj2": 0.051015076104648095}, {"determining": "( ( ( ( ( ( AMS + Min( DDR ,RRS ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + ( ( ACS + ACS ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * Const ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),RRSe ),( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe * ( CS - Min( MLU ,RRSe ) ) ),( RCSe / CS ) ) ) ) ) - MUM )", "obj1": 0.700836820083682, "obj2": 0.12510359705723173}, {"determining": "( ( Max( PN,( ACS + ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + PN ) ) + CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( ( Min( MLU ,( ( RCSe * DS ) - DS ) ) + DS ) ,( ( RCSe / DS ) * MUM ) ) ) - ( ( ( ( Max( MUR,RMSe ) / CS ) / CS ) + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MLU / MUC ) ,( CS * MUC ) ) / Min( ( MUC + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8430962343096234, "obj2": 0.051691950740700286}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.7510460251046025, "obj2": 0.09086553266520381}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( Min( CRS ,AMS ) / Min( ( CRS * FirstVNF_Mem_Server ) ,( ( PN * FirstVNF_CPU_Server ) * ( FirstVNF_RAM * DDR ) ) ) ),Const ) )", "choosing": "Min( ( MUC - CS ) ,( Min( ( ( RRSe + MUR ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ,( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.01908712533043575}, {"determining": "( ( ( PN * ( Max( FirstVNF_Mem,Max( ( BR / DDR ),AMS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( ( Max( ( Min( MUM ,RMSe ) + ( RMSe + DS ) ),Max( MUC,MLU ) ) - MUM ) + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8326359832635983, "obj2": 0.055513462170884105}, {"determining": "( Max( FirstVNF_Mem,Const ) - ( ( AMS * Max( BR,Const ) ) / DDR ) )", "choosing": "( ( ( Max( ( ( Max( MLU,Min( MUR ,MUM ) ) + Max( CS,RMSe ) ) / ( DS - ( RCSe + CS ) ) ),( ( MUC * RCSe ) + ( RCSe / RRSe ) ) ) / MUM ) / CS ) * Max( MLU,MLU ) )", "obj1": 0.9686192468619247, "obj2": 0.010067173289404254}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.7405857740585774, "obj2": 0.09638635248653936}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9728033472803347, "obj2": 0.009376780909648937}, {"determining": "( ( ( PN * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ,CS ) * RMSe ) )", "obj1": 0.7196652719665272, "obj2": 0.10753158282260228}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MLU / MUC ) ,( ( ( Max( MUR,Min( ( MUC * RCSe ) ,( RCSe + RRSe ) ) ) / MUM ) / CS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.042854563689476044}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_CPU ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7238493723849372, "obj2": 0.1040496320867902}, {"determining": "( ( ( PN * ( ACS + FirstVNF_Mem ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe - ( Max( Max( MUC,( MUR + Max( MUC,RMSe ) ) ),( DS * MUC ) ) + ( ( CS - RRSe ) - DS ) ) ) ,( RRSe / MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.01860619992771124}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server - Max( ( Max( FirstVNF_CPU,RRS ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ),Min( ARS ,MRS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * ( DS - CS ) ) )", "obj1": 0.7740585774058577, "obj2": 0.08441974828117435}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( RRSe,( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - RMSe ) )", "obj1": 0.7761506276150628, "obj2": 0.08340858070894351}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( ( ACS + ( CRS * FirstVNF_Mem_Server ) ) * PN ) ) - Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS * ( RCSe * DS ) ) ,( DS + Max( MUC,( CS + Min( ( RRSe * RCSe ) ,MUR ) ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08819695849935194}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,( MUC / DS ) ) - ( ( CS - RRSe ) - RRSe ) ) - CS ) / CS ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Max( ( RRSe * MUR ),MUR ) ),MUC ) ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10944422212543457}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08819695849935194}, {"determining": "( ( ( PN * ( Min( Min( MDR ,BR ) ,BR ) + ( FirstVNF_Mem_Server / MDR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( ( ( MUM * MLU ) / MUC ) * MUC ) / CS ) / MUM ) )", "obj1": 0.9142259414225942, "obj2": 0.02827613773543162}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - FirstVNF_RAM ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( BR - ( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR / ( MUR - MUR ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.7259414225941423, "obj2": 0.10401020816915879}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + ( FirstVNF_Mem_Server / MDR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9142259414225942, "obj2": 0.02827613773543162}, {"determining": "( Min( ( FirstVNF_CPU_Server - RRS ) ,( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ) - Min( ( Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) + DDR ) ,Min( ( ( ( ARS / ( FirstVNF_Mem + PN ) ) - ( Const * Max( AMS,FirstVNF_RAM ) ) ) + RRS ) ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),( RCSe - ( MUC + DS ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.009376780909648937}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( ( AMS / MRS ) - ( RRS * FirstVNF_RAM_Server ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * ( ( ( MLU / Min( DS ,RMSe ) ) + Min( MLU ,Min( RMSe ,MUM ) ) ) + MUR ) )", "obj1": 0.7384937238493724, "obj2": 0.09704289430914724}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + PN ) ) + CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( ( Min( MLU ,( ( RCSe * DS ) - DS ) ) + DS ) ,( ( RCSe / DS ) * MUM ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUC + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8430962343096234, "obj2": 0.051691950740700286}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.7510460251046025, "obj2": 0.09086553266520381}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - Min( CRS ,MDR ) )", "choosing": "( ( ( MUM / ( MUM / MUM ) ) + RRSe ) - ( ( RMSe - MUM ) * MLU ) )", "obj1": 0.9184100418410042, "obj2": 0.026805058086797354}, {"determining": "( ( ( ( ( MDR * ( AMS / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / MUM ),MLU ) * ( ( ( MUM / RMSe ) - Max( RCSe,MUM ) ) - CS ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + ( FirstVNF_Mem_Server / MDR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( Max( ( Max( DS,MUR ) / MUC ),RRSe ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9163179916317992, "obj2": 0.027454086925681537}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( RMSe * CS ) / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) - FirstVNF_Mem_Server ) ) ) + ACS ) ) / ( AMS + MDR ) ) - Min( MDR ,BR ) )", "choosing": "( ( ( ( CS + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / RRSe ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( Min( MLU ,( Max( MUR,DS ) + RRSe ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( ( MLU * MUM ) - MLU ) ) - RMSe ) ) ,MUR ) ) )", "obj1": 0.7364016736401674, "obj2": 0.09831014237488442}], "15": [{"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_CPU ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( RRSe,( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS / FirstVNF_CPU_Server ) ) - Max( Max( DDR,FirstVNF_CPU ),Min( AMS ,ACS ) ) ) ) ) ) / ( FirstVNF_RAM_Server * DDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS - MUM ),Max( MLU,MUC ) ) - ( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6548117154811716, "obj2": 0.18895816575039542}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6569037656903766, "obj2": 0.16048824266878148}, {"determining": "Min( ( FirstVNF_Mem - ( ( CRS - Max( ARS,( ( ( FirstVNF_RAM * FirstVNF_Mem ) / FirstVNF_CPU_Server ) * ARS ) ) ) + ( BR / FirstVNF_CPU_Server ) ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU * Max( MUM,CS ) ) ,Max( Min( MUC ,( MUC + ( DS * RCSe ) ) ),Max( RMSe,RCSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "Min( ( FirstVNF_CPU_Server - BR ) ,( DDR * ( AMS / FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - CS ) ,( MUM / ( RRSe / ( MLU * Max( ( ( DS * RMSe ) + ( MUC * ( CS - MUM ) ) ),( RRSe * ( RCSe / ( RMSe - DS ) ) ) ) ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.20338622036740703}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( Min( RCSe ,MUM ) - ( RCSe + MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / ( RRSe / MUR ) ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6631799163179917, "obj2": 0.155480881186464}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( MDR * MDR ) * ( AMS * ACS ) ) - FirstVNF_RAM ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MLU / CS ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 0.8828451882845189, "obj2": 0.03984247397189421}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,RRS ) ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,BR ) - AMS ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( MUM,MLU ) * ( MUM / ( Min( RCSe ,MUR ) / ( ( MUR * ( ( MUR / RRSe ) / ( DS + MUC ) ) ) + ( RMSe / ( RCSe + ( ( CS + MLU ) + RRSe ) ) ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.1350922350674181}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7092050209205021, "obj2": 0.11189183566980573}, {"determining": "Min( ( ( BR * CRS ) - ( ( MDR + ( ( Const * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( DDR ,AMS ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( AMS ,Const ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( ( RCSe * ( RCSe / RRSe ) ) / DS ) - CS ) ,Max( Min( RRSe ,MUC ),Max( RRSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6548117154811716, "obj2": 0.18895816575039542}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( BR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + ( CS + ( MUR * Max( Min( MUC ,RMSe ),Min( MUM ,Max( MUM,( CS + RCSe ) ) ) ) ) ) ) ,Max( Min( MUR ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "( ( ( ( ( ( AMS + Min( DDR ,RRS ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + ( ( ACS + ACS ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * Const ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),RRSe ),( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe * ( CS - Min( MLU ,RRSe ) ) ),( RCSe / CS ) ) ) ) ) - MUM )", "obj1": 0.700836820083682, "obj2": 0.12510359705723173}, {"determining": "( ( ( PN * ( ACS + ( AMS + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( DDR ,MDR ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( ( ( Max( RCSe,Max( RMSe,RCSe ) ) * RCSe ) / DS ) * ( MUC / Min( MUM ,MLU ) ) ) / MUC ) )", "obj1": 0.702928870292887, "obj2": 0.11786418896132173}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUM ) * ( ( ( CS * RRSe ) / CS ) / MUM ) )", "obj1": 0.8723849372384938, "obj2": 0.04090544244187886}, {"determining": "( ( ACS / CRS ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUR ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( DS - CS ) ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7782426778242678, "obj2": 0.08088763217601595}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.897489539748954, "obj2": 0.035646817717073696}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8891213389121339, "obj2": 0.03856251371769347}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02587716331144243}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,( ACS - ( MDR + DDR ) ) ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - ACS ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( FirstVNF_CPU * ( Const * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( Min( DS ,MUC ) / MUC ) / ( ( ( ( ( CS * DS ) + RMSe ) * MUC ) / MUR ) + Min( RCSe ,MUC ) ) ) + RRSe ) - MUM )", "obj1": 0.9309623430962343, "obj2": 0.024837461760064884}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "( ( ( PN * ( DDR + ( Max( Min( CRS ,ACS ),FirstVNF_Mem ) + ( AMS * MRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUC,( ( RRSe * RCSe ) + RCSe ) ) ,( ( MUM * DS ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7719665271966527, "obj2": 0.08573245260570593}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( MDR,ACS ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( DS ,MUC ) - RMSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.016661859452541936}, {"determining": "( ( ( PN * ( ACS + ( Min( ( MRS * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server + ( ACS + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( MLU + MUC ) * DS ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07591311405269663}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.8619246861924686, "obj2": 0.04457595878326985}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( Max( MDR,( ACS - ( MDR + DDR ) ) ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),( ( FirstVNF_RAM / Min( CRS ,( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / MRS ) - ARS ) ) ) + ( PN + FirstVNF_RAM ) ) ) / ( Min( RRS ,ARS ) + ( ( ( Const * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( Min( DS ,MUC ) / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.9330543933054394, "obj2": 0.024131436633081142}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Min( ( ( CRS / FirstVNF_CPU_Server ) + ( ARS * BR ) ) ,Min( Max( Max( Const,BR ),Max( ACS,BR ) ) ,ACS ) ) ) / AMS ) / Min( FirstVNF_RAM_Server ,MDR ) ) - ( FirstVNF_CPU * ( PN - Const ) ) )", "choosing": "( MUM - ( Min( MUC ,MUR ) * ( Min( ( Max( CS,( DS - Min( RCSe ,MLU ) ) ) + ( Max( Min( MLU ,RCSe ),CS ) + MLU ) ) ,( CS + DS ) ) * MUR ) ) )", "obj1": 0.8158995815899581, "obj2": 0.06426864444614577}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05395042184284247}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / MDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) * ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( CS * Min( ( MUC - DS ) ,Max( MLU,Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06586293577884719}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server / DDR ) + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( MLU * RMSe ) / CS ) / MUM ) )", "obj1": 0.801255230125523, "obj2": 0.06706913857442043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9372384937238494, "obj2": 0.019570362937212264}, {"determining": "( ( ( PN / ( ( BR / BR ) + ( FirstVNF_RAM_Server + ( ( Const - ( ARS * CRS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / ( MLU * CS ) ) / ( MUM + ( RCSe * ( RCSe + CS ) ) ) ) / MUM ) + DS ) - MUM )", "obj1": 0.7468619246861925, "obj2": 0.09297930303676791}, {"determining": "( ( ( PN * ( ACS - ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( Max( ( ( ( ( ( Max( RRSe,MUM ) + Min( RMSe ,CS ) ) + MLU ) - Min( ( MUC - Min( RRSe ,DS ) ) ,MUR ) ) - RRSe ) - ( CS + MUR ) ),RRSe ) - MUM )", "obj1": 0.696652719665272, "obj2": 0.125447754967623}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Max( Min( Min( ARS ,BR ) ,( DDR - ( ( ( FirstVNF_RAM_Server + ( DDR + ACS ) ) - Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) ) + ( PN + FirstVNF_RAM ) ) ) ),Const ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.895397489539749, "obj2": 0.037794856276718795}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),( BR * MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / MLU ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9602510460251046, "obj2": 0.011968910416946785}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUR + MUR ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9079497907949791, "obj2": 0.03161007272912758}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ,CS ) * RMSe ) )", "obj1": 0.8284518828451883, "obj2": 0.055341787627538115}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ACS + ACS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( ( Min( MLU ,( CS - DS ) ) + DS ) ,( ( RCSe / DS ) * MUM ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUC + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.7928870292887029, "obj2": 0.06997166105496232}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( Max( FirstVNF_Mem,Const ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( RCSe - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.06658630816095126}, {"determining": "( Min( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ACS / FirstVNF_CPU ) - CRS ) ) ) ) ,Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( ( ACS + ACS ) * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) ) )", "choosing": "( Max( MLU,MLU ) - Max( MUM,( CS - ( RCSe + RMSe ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.017683213366800468}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( ( ( PN * ( Min( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( AMS * BR ) ) ,ACS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM_Server,( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( ( MUR / ( MLU - RCSe ) ) * CS ) / MUR ) ,( MUC * MUC ) ) ) / MUM ) )", "obj1": 0.8389121338912134, "obj2": 0.05302362444171663}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) - FirstVNF_Mem_Server ) ) ) + ACS ) ) / ( AMS + MDR ) ) - Min( MDR ,BR ) )", "choosing": "( ( ( ( CS + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / RRSe ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( Min( MLU ,( Max( MUR,DS ) + RRSe ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( ( MLU * MUM ) - MLU ) ) - RMSe ) ) ,MUR ) ) )", "obj1": 0.7364016736401674, "obj2": 0.09831014237488442}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( DDR + ( ( Const + AMS ) - FirstVNF_RAM ) ) ) ) ) - ( Min( Max( FirstVNF_RAM_Server,DDR ) ,CRS ) - FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( MUM ,RRSe ) / MUR ) ,( CS * MUC ) ) / Max( ( Max( ( ( ( CS / RRSe ) * DS ) * RCSe ),MUC ) + MUC ),( ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) / RMSe ) ) ) * ( Min( MUC ,DS ) * RMSe ) )", "obj1": 0.7447698744769874, "obj2": 0.09536550352684915}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.030254314032482413}, {"determining": "( ( ( PN * ( ACS + ( Min( CRS ,AMS ) / FirstVNF_CPU_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( MRS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Min( ( MUM - ( ( Max( MLU,RMSe ) * Max( RMSe,MUC ) ) / MLU ) ) ,Min( MLU ,DS ) ) ,( MUC / CS ) ),MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.7301255230125523, "obj2": 0.10326119052716103}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + PN ) ) - CRS ) ) ) ) / Min( ( ACS / MRS ) ,MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR / MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( MLU ,MUR ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8514644351464435, "obj2": 0.047829001660969254}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( ARS - MRS ) ) - Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS / FirstVNF_CPU_Server ) ) - Max( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_CPU ),Min( AMS ,BR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,( Min( MUC ,Max( ( CS - MUM ),Max( MUR,MUC ) ) ) - Max( ( ( CS - MUR ) * MUC ),RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008637013513356525}, {"determining": "( ( ( PN * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ,CS ) * RMSe ) )", "obj1": 0.7196652719665272, "obj2": 0.10753158282260228}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.04312154081374037}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7887029288702929, "obj2": 0.07267546459987068}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6569037656903766, "obj2": 0.16048824266878148}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( MLU * Max( MUM,CS ) ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8221757322175732, "obj2": 0.05852646271645541}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006277544970236463}, {"determining": "Min( ( FirstVNF_Mem / ( MDR + Max( Const,FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( ( CS + RCSe ) ,( ( MUC / ( ( DS + ( ( CS - Min( MUR ,RRSe ) ) / CS ) ) + ( DS + DS ) ) ) / ( CS * MUC ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060643055956409155}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUR - MUM )", "obj1": 0.6924686192468619, "obj2": 0.12973851297070071}, {"determining": "( ( ( ( ( MDR * ( AMS / CRS ) ) / DDR ) - AMS ) - FirstVNF_Mem_Server ) * ( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / MUM ),MLU ) * ( ( ( MUM / RMSe ) - Max( RCSe,MUM ) ) - CS ) )", "obj1": 0.9874476987447699, "obj2": 0.0038578524631242}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( RMSe * CS ) / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS - MDR ) - PN ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * MUM ) - MUR ) * ( ( ( Min( DS ,MUC ) - RMSe ) - ( Min( MUR ,CS ) * RMSe ) ) / MUM ) )", "obj1": 0.7761506276150628, "obj2": 0.08271290966324271}, {"determining": "( ( ( PN * Max( Max( Const,AMS ),ACS ) ) / ( DDR / ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( ( RRSe - MLU ) * ( ( MLU + ( ( MUC * MUC ) * MUR ) ) - DS ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.10501311419067555}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.0873316483252704}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( ( DDR - RRS ) * ( MRS + ( FirstVNF_RAM_Server + ( ( DDR - ( Const / ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * ( ( ( MUC - DS ) + MUM ) - ( RCSe - MUR ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + Max( ( ( MLU / MUC ) - ( RMSe - RRSe ) ),( RCSe - MUM ) ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU ) * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) / ( Max( Max( CS,RMSe ),MLU ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04646813220201952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( DS ,MUC ) + RRSe ) - MUM )", "obj1": 0.9937238493723849, "obj2": 0.0023534218501501895}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( MLU * Max( MUM,CS ) ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8577405857740585, "obj2": 0.04583922585335004}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ( ARS + ACS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) - Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS * MUR ),( Max( CS,MLU ) * ( MLU + MUM ) ) ) * ( Min( MUM ,( CS * MUC ) ) / Min( ( MUM * ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.7845188284518828, "obj2": 0.07554727666981204}, {"determining": "( Max( FirstVNF_Mem,Const ) - ( ( AMS * Max( BR,Const ) ) / DDR ) )", "choosing": "( ( ( Max( ( ( Max( MLU,Min( MUR ,MUM ) ) + Max( CS,RMSe ) ) / ( DS - ( RCSe + CS ) ) ),( ( MUC * RCSe ) + ( RCSe / RRSe ) ) ) / MUM ) / CS ) * Max( MLU,MLU ) )", "obj1": 0.9686192468619247, "obj2": 0.010067173289404254}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + RRSe ) - MUM )", "obj1": 0.7405857740585774, "obj2": 0.09638635248653936}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( ( Const * ( ACS + ( ( MRS - AMS ) / FirstVNF_RAM ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * Min( ( MUM / ( DS - DS ) ) ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11627080621376841}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7866108786610879, "obj2": 0.07284513569827071}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9728033472803347, "obj2": 0.009376780909648936}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( Max( ACS,FirstVNF_Mem_Server ) + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Const ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( DS / ( MLU + RRSe ) ) ) )", "obj1": 0.9037656903765691, "obj2": 0.03294946789103321}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9037656903765691, "obj2": 0.03294946789103321}, {"determining": "( ( FirstVNF_Mem_Server + CRS ) - ( ( FirstVNF_CPU_Server * DDR ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( MUM - Min( ( MUR - RCSe ) ,CS ) )", "obj1": 0.694560669456067, "obj2": 0.12935646655351524}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,( ARS / Min( ACS ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,( ( ( DS - ( RMSe + DS ) ) * ( MUR * ( RMSe - RRSe ) ) ) + MUM ) ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7949790794979079, "obj2": 0.06878189649572197}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( RMSe * CS ) / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( ACS,MDR ) - PN ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( MRS,ARS ),ARS ) / FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( DS - ( ( DS + ( ( ( RMSe * MUR ) * ( RMSe / DS ) ) * RCSe ) ) - CS ) ) / MUM ) )", "obj1": 0.9456066945606695, "obj2": 0.01710129553719815}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ARS ) + ( ( DDR + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( ( DS + MUM ) + Min( RCSe ,MUM ) ) ) - MUM )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ACS + ( DDR + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( DDR * FirstVNF_Mem_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( RRSe,( ( Max( MUR,RRSe ) + Min( RMSe ,( MUM / MUC ) ) ) * ( ( CS * CS ) - ( CS + DS ) ) ) ) * MUM ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "( Min( ( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) ) - Min( ( Max( ( FirstVNF_Mem / Min( ARS ,ACS ) ),Const ) + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.011391900706653912}, {"determining": "( ( ( PN * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ,CS ) * RMSe ) )", "obj1": 0.7259414225941423, "obj2": 0.10368435615439842}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server - ( DDR / MRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + ( ( RCSe - MUC ) - RRSe ) ) - MUM )", "obj1": 0.8451882845188284, "obj2": 0.051015076104648095}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( MUR * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.05827538846578773}], "16": [{"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( MDR * MDR ) * ( FirstVNF_RAM * ACS ) ) - FirstVNF_CPU ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MUM / CS ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM + CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_CPU ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( RRSe,( RCSe / CS ) ) ) * ( Min( DS ,MUC ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( ACS * Min( Min( FirstVNF_CPU_Server ,( Const * ( PN * Min( FirstVNF_Mem ,RRS ) ) ) ) ,BR ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU / ( MUM - MUR ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17486245887573532}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "Min( ( FirstVNF_CPU_Server - BR ) ,( DDR * ( AMS / FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - CS ) ,( MUM / ( RRSe / ( MLU * Max( ( ( DS * RMSe ) + ( MUC * ( CS - MUM ) ) ),( RRSe * ( RCSe / ( RMSe - DS ) ) ) ) ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.20338622036740703}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * ( DS - CS ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.6506276150627615, "obj2": 0.16630181108603817}, {"determining": "Min( ( FirstVNF_Mem - ( ( CRS - Max( ARS,( ( ( FirstVNF_RAM * FirstVNF_Mem ) / FirstVNF_CPU_Server ) * ARS ) ) ) + ( BR / FirstVNF_CPU_Server ) ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU * Max( MUM,CS ) ) ,Max( Min( MUC ,( MUC + ( DS * RCSe ) ) ),Max( RMSe,RCSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( Min( RCSe ,MUM ) - ( RCSe + MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / ( RRSe / MUR ) ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6631799163179917, "obj2": 0.155480881186464}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( BR / ACS ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,CRS ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU / RRSe ) / RMSe ) )", "obj1": 0.895397489539749, "obj2": 0.035119848977776986}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - CRS ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,( MUM / CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.16033690478715729}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Min( ( ( CRS / FirstVNF_CPU_Server ) + ( ARS * BR ) ) ,Min( Max( Max( Const,BR ),Max( ACS,BR ) ) ,ACS ) ) ) / AMS ) / Min( FirstVNF_RAM_Server ,MDR ) ) - ( FirstVNF_CPU * ( PN - Const ) ) )", "choosing": "( MUM - ( Min( MUC ,MUR ) * ( Min( ( Max( CS,( DS - Min( RCSe ,MLU ) ) ) + ( Max( Min( MLU ,RCSe ),CS ) + MLU ) ) ,( CS + DS ) ) * MUR ) ) )", "obj1": 0.8158995815899581, "obj2": 0.06426864444614577}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.036377356089292316}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,RRS ) ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,BR ) - AMS ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( MUM,MLU ) * ( MUM / ( Min( RCSe ,MUR ) / ( ( MUR * ( ( MUR / RRSe ) / ( DS + MUC ) ) ) + ( RMSe / ( RCSe + ( ( CS + MLU ) + RRSe ) ) ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.1350922350674181}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( DDR - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,( Min( MUR ,( MUR + RCSe ) ) + Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( AMS + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( DDR ,MDR ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( ( ( Max( RCSe,Max( RMSe,RCSe ) ) * RCSe ) / DS ) * ( MUC / Min( MUM ,MLU ) ) ) / MUC ) )", "obj1": 0.702928870292887, "obj2": 0.11786418896132173}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.0654441187377864}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02587716331144243}, {"determining": "( ( ( ( ( ( AMS + Min( DDR ,RRS ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + ( ( ACS + ACS ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * Const ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),RRSe ),( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe * ( CS - Min( MLU ,RRSe ) ) ),( RCSe / CS ) ) ) ) ) - MUM )", "obj1": 0.700836820083682, "obj2": 0.12510359705723173}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12877069545039896}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + MDR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( PN ,Max( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,AMS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS + MUM ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.029617262883699216}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_CPU_Server * DDR ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + Min( DS ,MUC ) ) - MUM )", "obj1": 0.7698744769874477, "obj2": 0.08532291507196699}, {"determining": "( ( ACS / CRS ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUR ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( DS - CS ) ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7782426778242678, "obj2": 0.08088763217601595}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_RAM ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / Min( ( MLU + MLU ) ,( MUR * RRSe ) ) ) / RMSe ) * Max( MLU,MLU ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( MDR * MDR ) * ( AMS * ACS ) ) - FirstVNF_RAM ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MLU / CS ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 0.8828451882845189, "obj2": 0.03984247397189421}, {"determining": "Min( ( ACS - ( ( ( ( Const * ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) / Max( PN,Const ) ) + MDR ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( RRSe / CS ) / ( DS * Max( ( CS / Max( ( ( RMSe / MLU ) - CS ),MUM ) ),( ( RCSe + Max( MUM,RCSe ) ) * ( MUR - RRSe ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19966531501098445}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9330543933054394, "obj2": 0.021214842915077955}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9372384937238494, "obj2": 0.019570362937212264}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11582000978121115}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) * ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / MUR ) )", "obj1": 0.9267782426778243, "obj2": 0.02315870560905167}, {"determining": "( ( ( PN * ( ACS * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ARS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * ( MUM / CS ) ) ) ),MUR ) ) * ( Min( RCSe ,Min( RCSe ,( MUM - Min( DS ,( RCSe / CS ) ) ) ) ) / MUR ) )", "obj1": 0.9037656903765691, "obj2": 0.03256062408124452}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.08578358733007484}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Const / ( ( ( ( ( FirstVNF_RAM * MRS ) + FirstVNF_RAM ) / RRS ) * FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * ( BR - RRS ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( Max( MLU,MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( RCSe - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MUR,MUC ) )", "obj1": 0.7489539748953975, "obj2": 0.09238815146425598}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( MDR,ACS ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( DS ,MUC ) - RMSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.016661859452541936}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) - FirstVNF_Mem_Server ) ) ) + ACS ) ) / ( AMS + MDR ) ) - Min( MDR ,BR ) )", "choosing": "( ( ( ( CS + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / RRSe ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( Min( MLU ,( Max( MUR,DS ) + RRSe ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( ( MLU * MUM ) - MLU ) ) - RMSe ) ) ,MUR ) ) )", "obj1": 0.7364016736401674, "obj2": 0.09831014237488442}, {"determining": "( ( ( PN * ( ACS + ( Min( ( MRS * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server + ( ACS + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( MLU + MUC ) * DS ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07591311405269663}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.8619246861924686, "obj2": 0.04457595878326985}, {"determining": "( ( ( PN * ( ACS - ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( Max( ( ( ( ( ( Max( RRSe,MUM ) + Min( RMSe ,CS ) ) + MLU ) - Min( ( MUC - Min( RRSe ,DS ) ) ,MUR ) ) - RRSe ) - ( CS + MUR ) ),RRSe ) - MUM )", "obj1": 0.696652719665272, "obj2": 0.125447754967623}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 0.6589958158995816, "obj2": 0.1579920592494424}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS * FirstVNF_CPU ) * ARS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ACS - DDR ) )", "choosing": "( Min( MLU ,( ( MUM / Min( MUR ,RCSe ) ) / ( MUR * Min( Max( MUR,( Min( RCSe ,DS ) / ( MUR * MLU ) ) ) ,DS ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08827189389068642}, {"determining": "( ( ( PN * Max( Max( Const,AMS ),ACS ) ) / ( DDR / ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( ( RRSe - MLU ) * ( ( MLU + ( ( MUC * MUC ) * MUR ) ) - DS ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.10501311419067555}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006277544970236463}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ,CS ) * RMSe ) )", "obj1": 0.8284518828451883, "obj2": 0.055341787627538115}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( ( ( ( ( ( CRS / ( ( PN * MRS ) - FirstVNF_Mem ) ) - AMS ) * ( MDR + ( ( ARS - AMS ) + MRS ) ) ) + RRS ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( RCSe * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004891571306674728}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.8765690376569037, "obj2": 0.04017555909133276}, {"determining": "( Max( FirstVNF_CPU,RRS ) - ( ( FirstVNF_CPU_Server * DDR ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUR ) / ( Min( MUC ,RRSe ) - RMSe ) ) - MUC ) * Max( MLU,MLU ) )", "obj1": 0.6694560669456067, "obj2": 0.14596639855391175}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060643055956409155}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( DDR + ( ( Const + AMS ) - FirstVNF_RAM ) ) ) ) ) - ( Min( Max( FirstVNF_RAM_Server,DDR ) ,CRS ) - FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( MUM ,RRSe ) / MUR ) ,( CS * MUC ) ) / Max( ( Max( ( ( ( CS / RRSe ) * DS ) * RCSe ),MUC ) + MUC ),( ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) / RMSe ) ) ) * ( Min( MUC ,DS ) * RMSe ) )", "obj1": 0.7447698744769874, "obj2": 0.09536550352684915}, {"determining": "( Max( FirstVNF_Mem,Const ) - ( ( AMS * Max( BR,Const ) ) / DDR ) )", "choosing": "( ( ( Max( ( ( Max( MLU,Min( MUR ,MUM ) ) + Max( CS,RMSe ) ) / ( DS - ( RCSe + CS ) ) ),( ( MUC * RCSe ) + ( RCSe / RRSe ) ) ) / MUM ) / CS ) * Max( MLU,MLU ) )", "obj1": 0.9686192468619247, "obj2": 0.010067173289404254}, {"determining": "( ( ( PN * ( ACS + ( PN + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8472803347280334, "obj2": 0.050370679737747746}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7175732217573222, "obj2": 0.10617908054742785}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / Min( RCSe ,MUM ) ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7259414225941423, "obj2": 0.103340353875276}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( ( DDR - RRS ) * ( MRS + ( FirstVNF_RAM_Server + ( ( DDR - ( Const / ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * ( ( ( MUC - DS ) + MUM ) - ( RCSe - MUR ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + Max( ( ( MLU / MUC ) - ( RMSe - RRSe ) ),( RCSe - MUM ) ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + PN ) ) - CRS ) ) ) ) / Min( ( ACS / MRS ) ,MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR / MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( MLU ,MUR ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8514644351464435, "obj2": 0.047829001660969254}, {"determining": "( ( ( PN * ( ACS + ( Min( CRS ,AMS ) / FirstVNF_CPU_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( MRS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Min( ( MUM - ( ( Max( MLU,RMSe ) * Max( RMSe,MUC ) ) / MLU ) ) ,Min( MLU ,DS ) ) ,( MUC / CS ) ),MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.7301255230125523, "obj2": 0.10326119052716103}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7092050209205021, "obj2": 0.11189183566980573}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server / DDR ) + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( MLU * RMSe ) / CS ) / MUM ) )", "obj1": 0.801255230125523, "obj2": 0.06706913857442043}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( RMSe * CS ) / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUM ) * ( ( ( CS * RRSe ) / CS ) / MUM ) )", "obj1": 0.8723849372384938, "obj2": 0.04090544244187886}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS - MDR ) - PN ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * MUM ) - MUR ) * ( ( ( Min( DS ,MUC ) - RMSe ) - ( Min( MUR ,CS ) * RMSe ) ) / MUM ) )", "obj1": 0.7761506276150628, "obj2": 0.08271290966324271}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ( ARS + ACS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) - Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS * MUR ),( Max( CS,MLU ) * ( MLU + MUM ) ) ) * ( Min( MUM ,( CS * MUC ) ) / Min( ( MUM * ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.7845188284518828, "obj2": 0.07554727666981204}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Min( MUC ,( ( RRSe + ( MUR / CS ) ) / Max( DS,RCSe ) ) ) + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.799163179916318, "obj2": 0.06789193257635778}, {"determining": "( ( ( PN / ( ( BR / BR ) + ( FirstVNF_RAM_Server + ( ( Const - ( ARS * CRS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / ( MLU * CS ) ) / ( MUM + ( RCSe * ( RCSe + CS ) ) ) ) / MUM ) + DS ) - MUM )", "obj1": 0.7468619246861925, "obj2": 0.09297930303676791}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / MDR ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) * ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( CS * Min( ( MUC - DS ) ,Max( MLU,Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 0.9246861924686193, "obj2": 0.025871180956107177}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7907949790794979, "obj2": 0.07113992332847931}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server * DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe - RRSe ) * RMSe ) ) ,MUR ) ) / CS ) / MUM ) )", "obj1": 0.9769874476987448, "obj2": 0.007673874705781974}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( ACS,MDR ) - PN ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( MRS,ARS ),ARS ) / FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( DS - ( ( DS + ( ( ( RMSe * MUR ) * ( RMSe / DS ) ) * RCSe ) ) - CS ) ) / MUM ) )", "obj1": 0.9456066945606695, "obj2": 0.01710129553719815}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_RAM ,Max( ACS,CRS ) ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC * ( MUR / CS ) ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( MUM / CS ) / MUC ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.011968910416946785}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8702928870292888, "obj2": 0.042365173106097755}, {"determining": "( ( ( ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM + ( ARS + ACS ) ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) * Min( MLU ,MUR ) )", "obj1": 0.8200836820083682, "obj2": 0.05956131945598617}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8389121338912134, "obj2": 0.05302362444171663}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.04312154081374037}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7092050209205021, "obj2": 0.11189183566980573}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_RAM_Server ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * MUM ) + MUM ) * ( MUR / ( MUM / CS ) ) )", "obj1": 0.9100418410041841, "obj2": 0.030675745900289726}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server - ( DDR / MRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + ( ( RCSe - MUC ) - RRSe ) ) - MUM )", "obj1": 0.8451882845188284, "obj2": 0.051015076104648095}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( MUR * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.05827538846578773}, {"determining": "( ( ( ( FirstVNF_RAM_Server / CRS ) * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * ARS ) ,Min( ( PN * Const ) ,BR ) ) )", "choosing": "( ( Max( ( DS - RRSe ),MUC ) + RRSe ) - RCSe )", "obj1": 0.7405857740585774, "obj2": 0.09638635248653936}, {"determining": "( Min( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ACS / FirstVNF_CPU ) - CRS ) ) ) ) ,Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( ( ACS + ACS ) * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) ) )", "choosing": "( Max( MLU,MLU ) - Max( MUM,( CS - ( RCSe + RMSe ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.017683213366800468}, {"determining": "Min( ( FirstVNF_Mem / ( MDR + Max( Const,FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( ( CS + RCSe ) ,( ( MUC / ( ( DS + ( ( CS - Min( MUR ,RRSe ) ) / CS ) ) + ( DS + DS ) ) ) / ( CS * MUC ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7887029288702929, "obj2": 0.07267546459987068}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( ARS - MRS ) ) - Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS / FirstVNF_CPU_Server ) ) - Max( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_CPU ),Min( AMS ,BR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,( Min( MUC ,Max( ( CS - MUM ),Max( MUR,MUC ) ) ) - Max( ( ( CS - MUR ) * MUC ),RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008637013513356525}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU ) * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) / ( Max( Max( CS,RMSe ),MLU ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04646813220201952}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05395042184284247}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7866108786610879, "obj2": 0.07284513569827071}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( BR + FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( RMSe + Min( ( MUM - CS ) ,( RMSe / MLU ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM / ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8535564853556485, "obj2": 0.047519943226079886}], "17": [{"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( MDR * MDR ) * ( FirstVNF_RAM * ACS ) ) - FirstVNF_CPU ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MUM / CS ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM + CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( MDR * MDR ) * ( FirstVNF_RAM * ACS ) ) - FirstVNF_CPU ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MUM / CS ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM + CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,( ACS * Min( Min( FirstVNF_CPU_Server ,( Const * ( PN * Min( FirstVNF_Mem ,RRS ) ) ) ) ,BR ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU / ( MUM - MUR ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17486245887573532}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * ( MUM / ( ( RMSe + DS ) / MUR ) ) ) ) ,MUR ) ) )", "obj1": 0.6317991631799164, "obj2": 0.19905203355403553}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * ( DS - CS ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.6506276150627615, "obj2": 0.16630181108603817}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM / CS ) / MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "Min( ( FirstVNF_CPU_Server - BR ) ,( DDR * ( AMS / FirstVNF_RAM ) ) )", "choosing": "Min( ( RRSe - CS ) ,( MUM / ( RRSe / ( MLU * Max( ( ( DS * RMSe ) + ( MUC * ( CS - MUM ) ) ),( RRSe * ( RCSe / ( RMSe - DS ) ) ) ) ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.20338622036740703}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ( Min( FirstVNF_Mem_Server ,AMS ) + CRS ) / ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( MUC * CS ) ) / Min( ( MUR * ( MUM + ( ( Max( CS,MUR ) + Max( CS,RCSe ) ) + RCSe ) ) ) ,MUR ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15341278081888146}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) + Min( MDR ,BR ) ) ) ) / Min( MDR ,CRS ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,DS ) * ( ( MUM / CS ) / DS ) )", "obj1": 0.7740585774058577, "obj2": 0.07935132160137803}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - CRS ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,( MUM / CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.16033690478715729}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_RAM ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / Min( ( MLU + MLU ) ,( MUR * RRSe ) ) ) / RMSe ) * Max( MLU,MLU ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Min( ( ( CRS / FirstVNF_CPU_Server ) + ( ARS * BR ) ) ,Min( Max( Max( Const,BR ),Max( ACS,BR ) ) ,ACS ) ) ) / AMS ) / Min( FirstVNF_RAM_Server ,MDR ) ) - ( FirstVNF_CPU * ( PN - Const ) ) )", "choosing": "( MUM - ( Min( MUC ,MUR ) * ( Min( ( Max( CS,( DS - Min( RCSe ,MLU ) ) ) + ( Max( Min( MLU ,RCSe ),CS ) + MLU ) ) ,( CS + DS ) ) * MUR ) ) )", "obj1": 0.8158995815899581, "obj2": 0.06426864444614577}, {"determining": "( ( ( PN * ( FirstVNF_CPU + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( ACS + Min( AMS ,ARS ) ) ) ) )", "choosing": "( Max( ( ( RMSe / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.08445115359605877}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,RRS ) ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,BR ) - AMS ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( MUM,MLU ) * ( MUM / ( Min( RCSe ,MUR ) / ( ( MUR * ( ( MUR / RRSe ) / ( DS + MUC ) ) ) + ( RMSe / ( RCSe + ( ( CS + MLU ) + RRSe ) ) ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.1350922350674181}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( DDR - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( AMS + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( DDR ,MDR ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( ( ( Max( RCSe,Max( RMSe,RCSe ) ) * RCSe ) / DS ) * ( MUC / Min( MUM ,MLU ) ) ) / MUC ) )", "obj1": 0.702928870292887, "obj2": 0.11786418896132173}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.0654441187377864}, {"determining": "( ( ( PN * ( ACS + ( Min( ( MRS * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server + ( ACS + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( MLU + MUC ) * DS ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07591311405269663}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * DDR ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - RRS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + Min( DS ,Min( RCSe ,DS ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08376688431931327}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( MDR * MDR ) * ( AMS * ACS ) ) - FirstVNF_RAM ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MLU / CS ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 0.8828451882845189, "obj2": 0.03984247397189421}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11582000978121115}, {"determining": "( ( ( ( ( ( AMS + Min( DDR ,RRS ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + ( ( ACS + ACS ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * Const ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + Max( Max( ( MUC + RRSe ),RRSe ),( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe * ( CS - Min( MLU ,RRSe ) ) ),( RCSe / CS ) ) ) ) ) - MUM )", "obj1": 0.700836820083682, "obj2": 0.12510359705723173}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) - FirstVNF_Mem_Server ) ) ) + ACS ) ) / ( AMS + MDR ) ) - Min( MDR ,BR ) )", "choosing": "( ( ( ( CS + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / RRSe ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( Min( MLU ,( Max( MUR,DS ) + RRSe ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( ( MLU * MUM ) - MLU ) ) - RMSe ) ) ,MUR ) ) )", "obj1": 0.7364016736401674, "obj2": 0.09831014237488442}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8389121338912134, "obj2": 0.05302362444171663}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server - ( DDR / MRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + ( ( RCSe - MUC ) - RRSe ) ) - MUM )", "obj1": 0.8451882845188284, "obj2": 0.051015076104648095}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.036377356089292316}, {"determining": "( ( ( PN * ( ( DDR / RRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( Max( CS,RMSe ) * ( MUR - ( MLU / RRSe ) ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( ( FirstVNF_RAM_Server / CRS ) * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * ARS ) ,Min( ( PN * Const ) ,BR ) ) )", "choosing": "( ( Max( ( DS - RRSe ),MUC ) + RRSe ) - RCSe )", "obj1": 0.7405857740585774, "obj2": 0.09638635248653936}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU ) * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) / ( Max( Max( CS,RMSe ),MLU ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04646813220201952}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9330543933054394, "obj2": 0.021214842915077955}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02587716331144243}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( BR / ACS ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,CRS ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU / RRSe ) / RMSe ) )", "obj1": 0.895397489539749, "obj2": 0.035119848977776986}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.09044387046966783}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7907949790794979, "obj2": 0.07113992332847931}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( DDR + ( ( Const + AMS ) - FirstVNF_RAM ) ) ) ) ) - ( Min( Max( FirstVNF_RAM_Server,DDR ) ,CRS ) - FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( MUM ,RRSe ) / MUR ) ,( CS * MUC ) ) / Max( ( Max( ( ( ( CS / RRSe ) * DS ) * RCSe ),MUC ) + MUC ),( ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) / RMSe ) ) ) * ( Min( MUC ,DS ) * RMSe ) )", "obj1": 0.7447698744769874, "obj2": 0.09536550352684915}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server * AMS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.8619246861924686, "obj2": 0.04457595878326985}, {"determining": "( ( ( PN * ( ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - MDR ) ) ) + ACS ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / ( ( ( DS - ( MUC - MUC ) ) / DS ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9665271966527197, "obj2": 0.01167447717220478}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.053379511326896896}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( ( MUM * RMSe ) * MUR ) / RRSe ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.049431461683190535}, {"determining": "( ( ( PN * ( ACS * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ARS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * ( MUM / CS ) ) ) ),MUR ) ) * ( Min( RCSe ,Min( RCSe ,( MUM - Min( DS ,( RCSe / CS ) ) ) ) ) / MUR ) )", "obj1": 0.9037656903765691, "obj2": 0.03256062408124452}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) * RMSe ) )", "obj1": 0.7949790794979079, "obj2": 0.06923242201787214}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( ( DDR - RRS ) * ( MRS + ( FirstVNF_RAM_Server + ( ( DDR - ( Const / ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * ( ( ( MUC - DS ) + MUM ) - ( RCSe - MUR ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + Max( ( ( MLU / MUC ) - ( RMSe - RRSe ) ),( RCSe - MUM ) ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( PN * ( ACS + ( Min( CRS ,AMS ) / FirstVNF_CPU_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( MRS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( Min( ( MUM - ( ( Max( MLU,RMSe ) * Max( RMSe,MUC ) ) / MLU ) ) ,Min( MLU ,DS ) ) ,( MUC / CS ) ),MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.7301255230125523, "obj2": 0.10326119052716103}, {"determining": "( ( ( PN * Max( Max( Const,AMS ),ACS ) ) / ( DDR / ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( ( RRSe - MLU ) * ( ( MLU + ( ( MUC * MUC ) * MUR ) ) - DS ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.10501311419067555}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9246861924686193, "obj2": 0.023729864576864136}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7092050209205021, "obj2": 0.11189183566980573}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * ( MUM / CS ) ) ) ),MUR ) ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9037656903765691, "obj2": 0.03256062408124452}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.895397489539749, "obj2": 0.035119848977776986}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Const / ( ( ( ( ( FirstVNF_RAM * MRS ) + FirstVNF_RAM ) / RRS ) * FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * ( BR - RRS ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( Max( MLU,MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( RCSe - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MUR,MUC ) )", "obj1": 0.7489539748953975, "obj2": 0.09238815146425598}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / ACS ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) - ( ( MUM / CS ) / MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9874476987447699, "obj2": 0.003976132186424663}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_RAM ,Max( ACS,CRS ) ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC * ( MUR / CS ) ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( MUM / CS ) / MUC ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.011968910416946785}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( RMSe * CS ) / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUM ) * ( ( ( CS * RRSe ) / CS ) / MUM ) )", "obj1": 0.8723849372384938, "obj2": 0.04090544244187886}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * Max( MLU,Min( ( Min( RCSe ,MLU ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.04266318405773172}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.694560669456067, "obj2": 0.12683458464633476}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 0.6589958158995816, "obj2": 0.1579920592494424}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + ( ( MUM / CS ) / MUM ) ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9163179916317992, "obj2": 0.029013216757068975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.8305439330543933, "obj2": 0.05493562247471046}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + PN ) ) - CRS ) ) ) ) / Min( ( ACS / MRS ) ,MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR / MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( MLU ,MUR ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8514644351464435, "obj2": 0.047829001660969254}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) + Min( RRS ,RRS ) ) ) ) + ACS ) ) * Min( MDR ,DDR ) ) - Min( ( ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / MUR ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + DS ) ) ) * ( Min( RMSe ,( CS * MUC ) ) / Min( ( ( MLU / Min( DS ,RRSe ) ) / Max( MUC,DS ) ) ,MUR ) ) )", "obj1": 0.9184100418410042, "obj2": 0.027642042468844143}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + ( CS - ( MLU / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7845188284518828, "obj2": 0.07400844658775049}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8702928870292888, "obj2": 0.042365173106097755}, {"determining": "( ( ( PN / ( ( BR / BR ) + ( FirstVNF_RAM_Server + ( ( Const - ( ARS * CRS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / ( MLU * CS ) ) / ( MUM + ( RCSe * ( RCSe + CS ) ) ) ) / MUM ) + DS ) - MUM )", "obj1": 0.7468619246861925, "obj2": 0.09297930303676791}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + MDR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( PN ,Max( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,AMS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS + MUM ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.029617262883699216}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( ARS - MRS ) ) - Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS / FirstVNF_CPU_Server ) ) - Max( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_CPU ),Min( AMS ,BR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,( Min( MUC ,Max( ( CS - MUM ),Max( MUR,MUC ) ) ) - Max( ( ( CS - MUR ) * MUC ),RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008637013513356525}, {"determining": "( ( ( PN * ( ACS + ( MRS + ( ( Min( FirstVNF_RAM_Server ,Const ) + ( MDR + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( Max( RRSe,( RCSe / Min( DS ,MLU ) ) ),( ( MUR * MUR ) / RRSe ) ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( MUR * MUR ) / MUM ) ) ) * ( Min( DS ,MUC ) - Max( MUM,Min( CS ,RCSe ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010004429046927672}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( MUR * MUR ) / RRSe ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005365425274242837}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),( AMS - Const ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( Max( DS,MUC ) / MUC ),RRSe ) )", "obj1": 0.9707112970711297, "obj2": 0.00892979224798509}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS * FirstVNF_CPU ) * ARS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ACS - DDR ) )", "choosing": "( Min( MLU ,( ( MUM / Min( MUR ,RCSe ) ) / ( MUR * Min( Max( MUR,( Min( RCSe ,DS ) / ( MUR * MLU ) ) ) ,DS ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08827189389068642}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( RMSe * CS ) / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( MDR,ACS ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( DS ,MUC ) - RMSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.016661859452541936}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( CRS + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + ( ( MUM / Min( RCSe ,MUM ) ) / MUM ) ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.9769874476987448, "obj2": 0.0073774597520839015}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_RAM_Server ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * MUM ) + MUM ) * ( MUR / ( MUM / CS ) ) )", "obj1": 0.9100418410041841, "obj2": 0.030675745900289726}, {"determining": "( ( ( PN * ( ACS + ( ( ( RRS - AMS ) * ( FirstVNF_CPU * ( Const / FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server + ( PN * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MUR,Max( RCSe,DS ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060643055956409155}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( ACS,MDR ) - PN ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( MRS,ARS ),ARS ) / FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( DS - ( ( DS + ( ( ( RMSe * MUR ) * ( RMSe / DS ) ) * RCSe ) ) - CS ) ) / MUM ) )", "obj1": 0.9456066945606695, "obj2": 0.01710129553719815}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( MUM * ( MLU + MUM ) ) ) * ( Min( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9372384937238494, "obj2": 0.019570362937212264}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_RAM / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / Max( ( ( Max( RRSe,MUC ) * Min( MUR ,MUC ) ) + MUR ),( MUC * MUC ) ) ) / MUM ) + RRSe ) - ( ( MUM / RRSe ) / MUR ) )", "obj1": 0.8765690376569037, "obj2": 0.04017555909133276}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7092050209205021, "obj2": 0.11189183566980573}, {"determining": "( Max( FirstVNF_CPU,RRS ) - ( ( FirstVNF_CPU_Server * DDR ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUR ) / ( Min( MUC ,RRSe ) - RMSe ) ) - MUC ) * Max( MLU,MLU ) )", "obj1": 0.6694560669456067, "obj2": 0.14596639855391175}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12877069545039896}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8640167364016736, "obj2": 0.044473634390714126}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( MUR - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( ( MUM / CS ) / MUM ) ) )", "obj1": 0.9435146443514645, "obj2": 0.017676794444177364}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( ( RMSe / MUM ) * MUR ) ) ),MUR ) ) * ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / MUR ) )", "obj1": 0.9267782426778243, "obj2": 0.02315870560905167}, {"determining": "Min( ( FirstVNF_Mem / ( MDR + Max( Const,FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( ( CS + RCSe ) ,( ( MUC / ( ( DS + ( ( CS - Min( MUR ,RRSe ) ) / CS ) ) + ( DS + DS ) ) ) / ( CS * MUC ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Max( MDR,ACS ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( FirstVNF_CPU_Server * DDR ) + ( FirstVNF_Mem_Server - DDR ) ) - CRS ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( DS ,MUC ) - RMSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.016661859452541936}], "18": [{"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) - FirstVNF_Mem_Server ) ) ) + ACS ) ) / ( AMS + MDR ) ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / RRSe ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( Min( MLU ,( Max( MUM,DS ) + RRSe ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( ( MLU * MUM ) - MLU ) ) - RMSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( ( MDR * MDR ) * ( FirstVNF_RAM * ACS ) ) - FirstVNF_CPU ) ) ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( MLU + MUM ) - Min( RRSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( CS * MUC ) ,( MUC / MLU ) ) / Max( ( RCSe - ( CS + ( MUM / CS ) ) ),( CS / RCSe ) ) ) ) * Min( ( Max( MLU,MLU ) * ( ( MUM + CS ) / MUM ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,( RRSe + DS ) ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,( MUM / CS ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.18785273483770953}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM / CS ) / MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * ( DS - CS ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.6506276150627615, "obj2": 0.16630181108603817}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( ACS,ACS ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - ( ( MUM / CS ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1782461694418776}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.1740380822750669}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.1232919930326514}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( ( ( RRS - AMS ) * ( FirstVNF_CPU * ( Const / FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server + ( PN * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MUR,Max( RCSe,DS ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060643055956409155}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.1587401798742831}, {"determining": "( ( ( PN * ( ACS + ( AMS + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( DDR ,MDR ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( ( ( Max( RCSe,Max( RMSe,RCSe ) ) * RCSe ) / DS ) * ( MUC / Min( MUM ,MLU ) ) ) / MUC ) )", "obj1": 0.702928870292887, "obj2": 0.11786418896132173}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) * RMSe ) )", "obj1": 0.7949790794979079, "obj2": 0.06923242201787214}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_RAM ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / Min( ( MLU + MLU ) ,( MUR * RRSe ) ) ) / RMSe ) * Max( MLU,MLU ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Min( ( ( CRS / FirstVNF_CPU_Server ) + ( ARS * BR ) ) ,Min( Max( Max( Const,BR ),Max( ACS,BR ) ) ,ACS ) ) ) / AMS ) / Min( FirstVNF_RAM_Server ,MDR ) ) - ( FirstVNF_CPU * ( PN - Const ) ) )", "choosing": "( MUM - ( Min( MUC ,MUR ) * ( Min( ( Max( CS,( DS - Min( RCSe ,MLU ) ) ) + ( Max( Min( MLU ,RCSe ),CS ) + MLU ) ) ,( CS + DS ) ) * MUR ) ) )", "obj1": 0.8158995815899581, "obj2": 0.06426864444614577}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.036377356089292316}, {"determining": "( ( ( PN * ( FirstVNF_CPU + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ( ACS + Min( AMS ,ARS ) ) ) ) )", "choosing": "( Max( ( ( RMSe / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.08445115359605877}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,RRS ) ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,BR ) - AMS ) ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( MUM,MLU ) * ( MUM / ( Min( RCSe ,MUR ) / ( ( MUR * ( ( MUR / RRSe ) / ( DS + MUC ) ) ) + ( RMSe / ( RCSe + ( ( CS + MLU ) + RRSe ) ) ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.1350922350674181}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( Min( MDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * DDR ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - RRS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + Min( DS ,Min( RCSe ,DS ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08376688431931327}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7907949790794979, "obj2": 0.07113992332847931}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU_Server ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( Max( MUR,( RRSe - MLU ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7092050209205021, "obj2": 0.111647640533912}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( MDR + ( ACS + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) ) / ( MDR / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( ( ( CS / RRSe ) * ( RRSe + MUR ) ) + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC * MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.15737650014322035}, {"determining": "( ( ( PN * ( ( DDR / RRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( Max( CS,RMSe ) * ( MUR - ( MLU / RRSe ) ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.803347280334728, "obj2": 0.0660996936373536}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) + Min( MDR ,BR ) ) ) ) / Min( MDR ,CRS ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,DS ) * ( ( MUM / CS ) / DS ) )", "obj1": 0.7740585774058577, "obj2": 0.07935132160137803}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11582000978121115}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + ( CS - ( MLU / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7845188284518828, "obj2": 0.07400844658775049}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( MUR * MUR ) / RRSe ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005365425274242837}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.0654441187377864}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS * FirstVNF_CPU ) * ARS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ACS - DDR ) )", "choosing": "( Min( MLU ,( ( MUM / Min( MUR ,RCSe ) ) / ( MUR * Min( Max( MUR,( Min( RCSe ,DS ) / ( MUR * MLU ) ) ) ,DS ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08827189389068642}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_RAM ) ) + Const ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( AMS ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( RRSe / MUM ) ) * RCSe ) / MUM ) ) / MUM ) )", "obj1": 0.7782426778242678, "obj2": 0.07753054512795328}, {"determining": "( ( ( PN * ( ACS + ( MDR + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) ),MUR ) ) * ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / MUR ) )", "obj1": 0.9769874476987448, "obj2": 0.007346151884137487}, {"determining": "( Min( Min( PN ,FirstVNF_CPU ) ,FirstVNF_Mem ) - Min( DDR ,Min( ACS ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Max( ( Max( RMSe,MLU ) - MLU ),( DS * MUR ) ) ) * Max( ( MUM / CS ),MUM ) )", "obj1": 0.7280334728033473, "obj2": 0.10178493832723937}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12877069545039896}, {"determining": "( ( ( ( FirstVNF_RAM_Server / CRS ) * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * ARS ) ,Min( ( PN * Const ) ,BR ) ) )", "choosing": "( ( Max( ( DS - RRSe ),MUC ) + RRSe ) - RCSe )", "obj1": 0.7405857740585774, "obj2": 0.09638635248653936}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + PN ) ) - CRS ) ) ) ) / Min( ( ACS / MRS ) ,MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR / MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( MLU ,MUR ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8514644351464435, "obj2": 0.047829001660969254}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,( ACS / MRS ) ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8807531380753139, "obj2": 0.03846129225572666}, {"determining": "Min( ( FirstVNF_Mem / ( MDR + Max( Const,FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( ( CS + RCSe ) ,( ( MUC / ( ( DS + ( ( CS - Min( MUR ,RRSe ) ) / CS ) ) + ( DS + DS ) ) ) / ( CS * MUC ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.897489539748954, "obj2": 0.03298619579222466}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.09044387046966783}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( Max( FirstVNF_CPU,RRS ) - ( ( FirstVNF_CPU_Server * DDR ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUR ) / ( Min( MUC ,RRSe ) - RMSe ) ) - MUC ) * Max( MLU,MLU ) )", "obj1": 0.6694560669456067, "obj2": 0.14596639855391175}, {"determining": "( ( ( PN * ( ACS + ( Min( ( MRS * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server + ( ACS + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( MLU + MUC ) * DS ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07591311405269663}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7364016736401674, "obj2": 0.09821827318759338}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( BR / ACS ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,CRS ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU / RRSe ) / RMSe ) )", "obj1": 0.895397489539749, "obj2": 0.035119848977776986}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( DDR + ( ( Const + AMS ) - FirstVNF_RAM ) ) ) ) ) - ( Min( Max( FirstVNF_RAM_Server,DDR ) ,CRS ) - FirstVNF_RAM ) )", "choosing": "( ( Min( ( Min( MUM ,RRSe ) / MUR ) ,( CS * MUC ) ) / Max( ( Max( ( ( ( CS / RRSe ) * DS ) * RCSe ),MUC ) + MUC ),( ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) / RMSe ) ) ) * ( Min( MUC ,DS ) * RMSe ) )", "obj1": 0.7447698744769874, "obj2": 0.09536550352684915}, {"determining": "( ( ( PN * ( ( Min( FirstVNF_Mem_Server ,AMS ) + CRS ) / ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( MUC * CS ) ) / Min( ( MUR * ( MUM + ( ( Max( CS,MUR ) + Max( CS,RCSe ) ) + RCSe ) ) ) ,MUR ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15341278081888146}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( RCSe ,( CS / MLU ) ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7238493723849372, "obj2": 0.10369019249410137}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.053379511326896896}, {"determining": "( ( ( PN * ( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( ARS + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUR * Max( DS,( Min( RMSe ,( Max( RRSe,MUC ) + RMSe ) ) / RMSe ) ) ) ) )", "obj1": 0.8430962343096234, "obj2": 0.05214648084416208}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02587716331144243}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_RAM_Server + MDR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / ( CS * MUC ) ),MUR ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7196652719665272, "obj2": 0.10644859638783286}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9246861924686193, "obj2": 0.023729864576864136}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( ( DDR - RRS ) * ( MRS + ( FirstVNF_RAM_Server + ( ( DDR - ( Const / ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * ( ( ( MUC - DS ) + MUM ) - ( RCSe - MUR ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + Max( ( ( MLU / MUC ) - ( RMSe - RRSe ) ),( RCSe - MUM ) ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( MRS * Max( MDR,RRS ) ) ) ) + ACS ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( RCSe - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9163179916317992, "obj2": 0.02895647733030776}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15341278081888146}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_RAM_Server ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( FirstVNF_RAM_Server + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * MUM ) + MUM ) * ( MUR / ( MUM / CS ) ) )", "obj1": 0.9100418410041841, "obj2": 0.030675745900289726}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Const / ( ( ( ( ( FirstVNF_RAM * MRS ) + FirstVNF_RAM ) / RRS ) * FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * ( BR - RRS ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( Max( MLU,MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( RCSe - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MUR,MUC ) )", "obj1": 0.7489539748953975, "obj2": 0.09238815146425598}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8389121338912134, "obj2": 0.05302362444171663}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + Max( ACS,( ( MRS / MRS ) + FirstVNF_Mem_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / MUR ) - ( MUC / MUR ) ) - ( ( MUM / RRSe ) / MUR ) )", "obj1": 0.9539748953974896, "obj2": 0.01664455212632203}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU ) * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) / ( Max( Max( CS,RMSe ),MLU ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04646813220201952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem ,FirstVNF_CPU ) * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),( ( ( MUM / CS ) / MUM ) + ( ( MUM / CS ) / MUM ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8472803347280334, "obj2": 0.04916875094085808}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + ( CS - ( MLU / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9393305439330544, "obj2": 0.019212943595627998}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8702928870292888, "obj2": 0.04223176974719302}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( ( AMS * MRS ) + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) ) / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( RCSe + ( RRSe - MUM ) ) ) ) * ( Min( DS ,MUC ) - ( MUM + Min( CS ,RCSe ) ) ) )", "obj1": 0.9184100418410042, "obj2": 0.026851436822343176}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - Min( Const ,Const ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( ( MUR * ( RMSe / MUM ) ),MLU ) * ( MUC - ( MUC * RRSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.03977730796912029}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + MDR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( PN ,Max( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,AMS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS + MUM ) * ( ( MUM / CS ) / MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.029617262883699216}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + BR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8451882845188284, "obj2": 0.049860297860562654}, {"determining": "( ( ( PN / ( ( BR / BR ) + ( FirstVNF_RAM_Server + ( ( Const - ( ARS * CRS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / ( MLU * CS ) ) / ( MUM + ( RCSe * ( RCSe + CS ) ) ) ) / MUM ) + DS ) - MUM )", "obj1": 0.7468619246861925, "obj2": 0.09297930303676791}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * Max( MLU,Min( ( Min( RCSe ,MLU ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.04266318405773172}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_RAM ,Max( ACS,CRS ) ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.010708818497858317}, {"determining": "( ( ( PN * Max( Max( Const,AMS ),ACS ) ) / ( DDR / ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( ( RRSe - MLU ) * ( ( MLU + ( ( MUC * MUC ) * MUR ) ) - DS ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.10501311419067555}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - ( Min( MRS ,FirstVNF_Mem_Server ) + Min( Const ,AMS ) ) ) ,( ARS - MRS ) ) - Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS / FirstVNF_CPU_Server ) ) - Max( Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_CPU ),Min( AMS ,BR ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC - CS ) ,( Min( MUC ,Max( ( CS - MUM ),Max( MUR,MUC ) ) ) - Max( ( ( CS - MUR ) * MUC ),RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008637013513356525}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - CRS ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUC / ( MUM / CS ) ) - CS ) ,Max( ( Max( DS,MUC ) / MUC ),RRSe ) )", "obj1": 0.9707112970711297, "obj2": 0.008804153573392611}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8786610878661087, "obj2": 0.03904483459935473}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8723849372384938, "obj2": 0.04080674364836051}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( RMSe * CS ) / ( RRSe + DS ) ) / DS ) * DS ) * ( MUR - RMSe ) ) ,Max( MLU,MUR ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( PN * DDR ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + ( CS - ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7343096234309623, "obj2": 0.09984432717114831}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_RAM ,Max( ACS,CRS ) ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC * ( MUR / CS ) ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( MUM / CS ) / MUC ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.011968910416946785}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8640167364016736, "obj2": 0.043884267493932684}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.8305439330543933, "obj2": 0.05493562247471046}, {"determining": "( ( ( PN * ( ACS * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ARS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * ( MUM / CS ) ) ) ),MUR ) ) * ( Min( RCSe ,Min( RCSe ,( MUM - Min( DS ,( RCSe / CS ) ) ) ) ) / MUR ) )", "obj1": 0.9037656903765691, "obj2": 0.03256062408124452}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12877069545039896}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.8305439330543933, "obj2": 0.05493562247471046}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.02293767569148784}], "19": [{"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) )", "choosing": "Min( ( MUC * ( MUR / CS ) ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( MUM / CS ) / MUC ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( MUM / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( Max( FirstVNF_CPU_Server,Max( ACS,( ( MRS / MRS ) - FirstVNF_Mem_Server ) ) ) + ACS ) ) / ( AMS + MDR ) ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) - ( MLU - ( Max( DS,( ( MUR / MUR ) - ( MUC / RRSe ) ) ) + DS ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( Min( MLU ,( Max( MUM,DS ) + RRSe ) ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / ( ( MLU * MUM ) - MLU ) ) - RMSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,( RRSe + DS ) ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,( MUM / CS ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.18785273483770953}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.23017301722642106}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM / CS ) / MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MDR - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ( AMS - PN ) - Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUR + DS ) ,Max( ( MUM / RMSe ),Max( RCSe,DS ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( Min( MDR ,ACS ) / Max( PN,( ACS + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( FirstVNF_CPU_Server + MRS ) - Const ),FirstVNF_CPU ) ) ) ) ) - ( ( FirstVNF_CPU_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR * Min( RRSe ,( MUR * Min( CS ,MUR ) ) ) ) ,( ( Min( RRSe ,MUR ) + Max( Max( ( RCSe / RMSe ),RCSe ),Min( RRSe ,MUM ) ) ) - CS ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + Max( ACS,( ( MRS / MRS ) + FirstVNF_Mem_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / MUR ) - ( MUC / MUR ) ) - ( ( MUM / RRSe ) / MUR ) )", "obj1": 0.9539748953974896, "obj2": 0.01664455212632203}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.1587401798742831}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + ( CS - ( MLU / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9393305439330544, "obj2": 0.019212943595627998}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * ( DS - CS ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.6506276150627615, "obj2": 0.16630181108603817}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( ACS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server / PN ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( ( ( RCSe / CS ) / MUC ) - MUC ) * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6464435146443515, "obj2": 0.16779198848325685}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_RAM ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / Min( ( MLU + MLU ) ,( MUR * RRSe ) ) ) / RMSe ) * Max( MLU,MLU ) )", "obj1": 0.6652719665271967, "obj2": 0.14751900683703464}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.036377356089292316}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( MDR + ( ACS + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) ) / ( MDR / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( ( ( CS / RRSe ) * ( RRSe + MUR ) ) + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC * MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.15737650014322035}, {"determining": "( ( ( PN * ( ( DDR / RRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( Max( CS,RMSe ) * ( MUR - ( MLU / RRSe ) ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8640167364016736, "obj2": 0.043884267493932684}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( ACS,ACS ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - ( ( MUM / CS ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1782461694418776}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * DDR ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - RRS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe / RMSe ) / CS ) / MUM ) + Min( DS ,Min( RCSe ,DS ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08376688431931327}, {"determining": "( ( ( PN * ( ACS + ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server + ( MDR * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( MLU ,( ( ( MUM / CS ) / MUM ) + ( MUM / Max( MUR,Max( RCSe,( CS + MUM ) ) ) ) ) ) * RMSe ) )", "obj1": 0.7740585774058577, "obj2": 0.07916617162101328}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_RAM ) ) + Const ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( AMS ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( RRSe / MUM ) ) * RCSe ) / MUM ) ) / MUM ) )", "obj1": 0.7782426778242678, "obj2": 0.07753054512795328}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( BR / ACS ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,CRS ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU / RRSe ) / RMSe ) )", "obj1": 0.895397489539749, "obj2": 0.035119848977776986}, {"determining": "( ( ( ( FirstVNF_RAM_Server / CRS ) * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * ARS ) ,Min( ( PN * Const ) ,BR ) ) )", "choosing": "( ( Max( ( DS - RRSe ),MUC ) + RRSe ) - RCSe )", "obj1": 0.7405857740585774, "obj2": 0.09638635248653936}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RMSe / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9351464435146444, "obj2": 0.021379081677992094}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS * FirstVNF_CPU ) * ARS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ACS - DDR ) )", "choosing": "( Min( MLU ,( ( MUM / Min( MUR ,RCSe ) ) / ( MUR * Min( Max( MUR,( Min( RCSe ,DS ) / ( MUR * MLU ) ) ) ,DS ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08827189389068642}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( PN * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + ( ( MLU + MLU ) - ( MLU / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8117154811715481, "obj2": 0.06409216480649407}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( Min( MDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8221757322175732, "obj2": 0.05894621008019757}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( Min( MRS ,FirstVNF_CPU ) * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC - CS ) ,( Min( RCSe ,RRSe ) / ( Max( Max( CS,RMSe ),MLU ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( RCSe - ( CS - ( MLU / RRSe ) ) ),( CS / RCSe ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04646813220201952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.02293767569148784}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Min( RRS ,CRS ) - ( MDR / FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,CS ) * ( Min( ( ( ( DS / ( MUR / RMSe ) ) / RMSe ) / ( RCSe + DS ) ) ,DS ) / MUM ) )", "obj1": 0.696652719665272, "obj2": 0.12054527578049447}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) * RMSe ) )", "obj1": 0.7949790794979079, "obj2": 0.06923242201787214}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12877069545039896}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / MUR ) - ( MUC / MUR ) ) - ( ( ( RMSe / RMSe ) / CS ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.00501252597546887}, {"determining": "( ( ( PN * ( ACS + ( MDR + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) ),MUR ) ) * ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / MUR ) )", "obj1": 0.9769874476987448, "obj2": 0.007346151884137487}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.1740380822750669}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * Max( MLU,MUR ) ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.09006328797123582}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( AMS / CRS ) ) + ACS ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( ( MLU / MLU ) * ( MUC / MUC ) )", "obj1": 0.6820083682008368, "obj2": 0.1350922350674181}, {"determining": "( Max( FirstVNF_CPU,RRS ) - ( ( FirstVNF_CPU_Server * DDR ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUR ) / ( Min( MUC ,RRSe ) - RMSe ) ) - MUC ) * Max( MLU,MLU ) )", "obj1": 0.6694560669456067, "obj2": 0.14596639855391175}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07446549357639284}, {"determining": "( ( ( PN * ( ACS + ( ( ( RRS - AMS ) * ( FirstVNF_CPU * ( Const / FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server + ( PN * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MUR,Max( RCSe,DS ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060643055956409155}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7364016736401674, "obj2": 0.09821827318759338}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8158995815899581, "obj2": 0.06245081864371251}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( ACS * DDR ) - ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) ) ) ) / Min( ( CRS * BR ) ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( Max( MUC,( MUR - DS ) ) * DS ) ) ,( DS + ( CS / ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7447698744769874, "obj2": 0.09370624339046764}, {"determining": "( ( ( PN * ( ( Min( FirstVNF_Mem_Server ,AMS ) + CRS ) / ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( MUC * CS ) ) / Min( ( MUR * ( MUM + ( ( Max( CS,MUR ) + Max( CS,RCSe ) ) + RCSe ) ) ) ,MUR ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15341278081888146}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * MRS ) ) + ( Min( Const ,FirstVNF_CPU ) + ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ( ACS * ( BR + Max( MDR,CRS ) ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( Max( RMSe,MUM ) - ( MLU / CS ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10610013827039126}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.897489539748954, "obj2": 0.03298619579222466}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.1740380822750669}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_RAM ,Max( ACS,CRS ) ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.010708818497858317}, {"determining": "( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( ( DDR - RRS ) * ( MRS + ( FirstVNF_RAM_Server + ( ( DDR - ( Const / ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) * ( ( ( MUC - DS ) + MUM ) - ( RCSe - MUR ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + Max( ( ( MLU / MUC ) - ( RMSe - RRSe ) ),( RCSe - MUM ) ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.1232919930326514}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * AMS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem_Server * Const ) / AMS ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUC ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,CS ) ) - RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7071129707112971, "obj2": 0.11423680975368367}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7866108786610879, "obj2": 0.07282599228723573}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.700836820083682, "obj2": 0.1189663914130702}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15341278081888146}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + PN ) ) - CRS ) ) ) ) / Min( ( ACS / MRS ) ,MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR / MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( MLU ,MUR ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8514644351464435, "obj2": 0.047829001660969254}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * Max( Max( Const,AMS ),ACS ) ) / ( DDR / ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( ( RRSe - MLU ) * ( ( MLU + ( ( MUC * MUC ) * MUR ) ) - DS ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.10501311419067555}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11582000978121115}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6882845188284519, "obj2": 0.13167636662271645}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,( ACS / MRS ) ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( RCSe ,( CS / MLU ) ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8828451882845189, "obj2": 0.0381630826325238}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem ,FirstVNF_CPU ) * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),( ( ( MUM / CS ) / MUM ) + ( ( MUM / CS ) / MUM ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8472803347280334, "obj2": 0.04916875094085808}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7280334728033473, "obj2": 0.10140782555467057}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( MUR * MUR ) / RRSe ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005365425274242837}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( RCSe - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7656903765690377, "obj2": 0.08417820403077975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( MRS * Max( MDR,RRS ) ) ) ) ) )", "choosing": "( Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9037656903765691, "obj2": 0.03115247489875181}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010353209257402404}, {"determining": "( ( ( PN * ( ACS + ( AMS + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( DDR ,MDR ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( ( ( Max( RCSe,Max( RMSe,RCSe ) ) * RCSe ) / DS ) * ( MUC / Min( MUM ,MLU ) ) ) / MUC ) )", "obj1": 0.702928870292887, "obj2": 0.11786418896132173}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( RCSe - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03210694512917099}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUR + Max( RCSe,MUR ) ) ) ,MUR ) ) )", "obj1": 0.799163179916318, "obj2": 0.06816659587106164}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( ACS + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM_Server + ( PN + FirstVNF_Mem ) ),FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( MUR - ( RRSe + MUR ) ) * ( ( CS + MUM ) / MUM ) )", "obj1": 0.9079497907949791, "obj2": 0.030130307489726147}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * Max( MLU,Min( ( Min( RCSe ,MLU ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.04266318405773172}, {"determining": "( ( ( PN * ( Min( FirstVNF_RAM_Server ,MDR ) + Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) ) / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS - RCSe ) / MUM ) + RRSe ) - ( MUC + Min( DS ,Max( Max( ( MLU * RMSe ),Min( MUR ,( RRSe * MUR ) ) ),MUR ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02587716331144243}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.053379511326896896}, {"determining": "( ( ( PN * ( ACS + ( MDR + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) ),MUR ) ) * ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / MUR ) )", "obj1": 0.9748953974895398, "obj2": 0.00796326960720703}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8786610878661087, "obj2": 0.03904483459935473}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8430962343096234, "obj2": 0.05152835090173476}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( ( AMS * MRS ) + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) ) / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( RCSe + ( RRSe - MUM ) ) ) ) * ( Min( DS ,MUC ) - ( MUM + Min( CS ,RCSe ) ) ) )", "obj1": 0.9184100418410042, "obj2": 0.026851436822343176}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( ( ( Min( FirstVNF_CPU ,AMS ) / BR ) * MRS ) + ( CRS - Max( ( ARS * FirstVNF_RAM ),MRS ) ) ) ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUR ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.08445115359605877}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + BR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8451882845188284, "obj2": 0.049860297860562654}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.029377757185350937}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( ( CRS - Const ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUC ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * ( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) - MUR ) ) )", "obj1": 0.7259414225941423, "obj2": 0.10249985301668289}, {"determining": "( ( ( PN * ( ( Min( AMS ,AMS ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_RAM ,Max( ACS,CRS ) ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC * ( MUR / CS ) ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( MUM / CS ) / MUM ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),Max( MUM,DS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012601861785657621}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8389121338912134, "obj2": 0.05302362444171663}, {"determining": "( ( ( FirstVNF_Mem * ( ACS + ( ( ( Max( ARS,RRS ) + ACS ) + FirstVNF_RAM_Server ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - ( ( MUM / CS ) / Min( ( MUC / MLU ) ,MUC ) ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( DS,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.9121338912133892, "obj2": 0.02778116942384037}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + RRS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * RMSe ) / Min( ( MUM - ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.027148218055129535}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( ( MUM + ( Min( RCSe ,( CS / MLU ) ) * RMSe ) ) ,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.02394914254272664}], "20": [{"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) ) - ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem + ( Max( Min( PN ,AMS ),RRS ) + Const ) ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) * ( ( Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) / ( CS + RRSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) )", "choosing": "Min( ( MUC * ( MUR / CS ) ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( MUM / CS ) / MUC ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( MUM / CS ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6255230125523012, "obj2": 0.19462345684303103}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.23017301722642106}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,( RRSe + DS ) ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,( MUM / CS ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.18785273483770953}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM / CS ) / MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUR + Max( RCSe,MUR ) ) ) ,MUR ) ) )", "obj1": 0.799163179916318, "obj2": 0.06816659587106164}, {"determining": "( ( ( PN * ( ( Max( ACS,FirstVNF_RAM ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_Mem_Server ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) - RMSe ) - ( ( MUR + MUR ) * ( Min( RRSe ,MLU ) + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUM - RCSe ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06279883416573566}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17191182473889388}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.1447546382799679}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( AMS / CRS ) ) + ACS ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( ( MLU / MLU ) * ( MUC / MUC ) )", "obj1": 0.6820083682008368, "obj2": 0.1350922350674181}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * ( DS - CS ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.6506276150627615, "obj2": 0.16630181108603817}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( ACS,ACS ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - ( ( MUM / CS ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1782461694418776}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( CS ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) * RMSe ) )", "obj1": 0.7949790794979079, "obj2": 0.06923242201787214}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7656903765690377, "obj2": 0.08164229551964695}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.1587401798742831}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6631799163179917, "obj2": 0.1529361797650136}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( ACS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server / PN ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( ( ( RCSe / CS ) / MUC ) - MUC ) * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6464435146443515, "obj2": 0.16779198848325685}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7866108786610879, "obj2": 0.07249787343944301}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ( DDR / RRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( Max( CS,RMSe ) * ( MUR - ( MLU / RRSe ) ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( MDR - ( PN - FirstVNF_Mem ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server + MDR ) ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( RMSe ,MUC ) - ( RRSe / ( ( ( CS * MLU ) / Max( Min( RMSe ,RCSe ),( DS - CS ) ) ) + Min( CS ,RMSe ) ) ) ) * Min( RCSe ,( ( MUM + ( ( RMSe / DS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server + ( MDR * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( Min( MLU ,( ( ( MUM / CS ) / MUM ) + ( MUM / Max( MUR,Max( RCSe,( CS + MUM ) ) ) ) ) ) * RMSe ) )", "obj1": 0.7740585774058577, "obj2": 0.07916617162101328}, {"determining": "( Max( ( PN * ( Min( FirstVNF_RAM ,AMS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( ( MDR - BR ) * DDR ) ) ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * Max( MLU,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.13047920304389976}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( BR / ACS ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,CRS ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU / RRSe ) / RMSe ) )", "obj1": 0.895397489539749, "obj2": 0.035119848977776986}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS * FirstVNF_CPU ) * ARS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ACS - DDR ) )", "choosing": "( Min( MLU ,( ( MUM / Min( MUR ,RCSe ) ) / ( MUR * Min( Max( MUR,( Min( RCSe ,DS ) / ( MUR * MLU ) ) ) ,DS ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.08827189389068642}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12877069545039896}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + Max( ACS,( ( MRS / MRS ) + FirstVNF_Mem_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.01647476309111042}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( Min( MDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.08973290502978824}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010353209257402404}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.036377356089292316}, {"determining": "( ( ( PN * ( ACS + ( MDR + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) ),MUR ) ) * ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / MUR ) )", "obj1": 0.9748953974895398, "obj2": 0.00796326960720703}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9351464435146444, "obj2": 0.021301389975884162}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MDR - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ( AMS - PN ) - Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUR + DS ) ,Max( ( MUM / RMSe ),Max( RCSe,DS ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUM,Min( CS ,RCSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8305439330543933, "obj2": 0.05556633841433436}, {"determining": "( ( ( ( FirstVNF_RAM_Server / CRS ) * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem * ARS ) ,Min( ( PN * Const ) ,BR ) ) )", "choosing": "( ( Max( ( DS - RRSe ),MUC ) + RRSe ) - RCSe )", "obj1": 0.7405857740585774, "obj2": 0.09638635248653936}, {"determining": "( ( ( PN * ( ( ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM_Server ) ) - CRS ) + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Min( ( RMSe / ( CS * RMSe ) ) ,( RMSe / MLU ) ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * ( MUC / MLU ) ) )", "obj1": 0.7112970711297071, "obj2": 0.11175614748488286}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Min( RRS ,CRS ) - ( MDR / FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,CS ) * ( Min( ( ( ( DS / ( MUR / RMSe ) ) / RMSe ) / ( RCSe + DS ) ) ,DS ) / MUM ) )", "obj1": 0.696652719665272, "obj2": 0.12054527578049447}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server + ACS ) * Min( ACS ,RRS ) ) ) ) ) ) / Min( MDR ,( FirstVNF_Mem + ( PN / DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) - CS ) - CS ) ,( ( ( ( Min( DS ,RMSe ) - ( ( MUR + ( RRSe * RRSe ) ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( ( ( MUC / MLU ) - ( CS * MUC ) ) / ( Max( MLU,MLU ) - ( MUR / ( MUM / CS ) ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8535564853556485, "obj2": 0.04621702487682108}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( MDR + ( ACS + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) ) / ( MDR / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( ( ( CS / RRSe ) * ( RRSe + MUR ) ) + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC * MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.15737650014322035}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.053379511326896896}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8723849372384938, "obj2": 0.04145997120496111}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * Max( MLU,Min( ( Min( RCSe ,MLU ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.04266318405773172}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + BR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,( Max( ( MRS * AMS ),CRS ) / AMS ) ) ) - Min( ( Max( Max( FirstVNF_CPU,DDR ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( Min( DS ,( MLU * DS ) ) ,( DS + Max( MUC,( DS - MUC ) ) ) ) ) * ( Min( MLU ,( ( MUM - RCSe ) + RRSe ) ) * ( ( MLU + MUR ) / Min( MUR ,RCSe ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.04480959211449062}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( ACS * DDR ) - ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) ) ) ) / Min( ( CRS * BR ) ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( Max( MUC,( MUR - DS ) ) * DS ) ) ,( DS + ( CS / ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7447698744769874, "obj2": 0.09370624339046764}, {"determining": "( ( ( PN * ( ( Const / ( AMS * BR ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) / FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( ( RMSe / MUM ),MUM ) ) ) ) * ( ( MUM / Max( ( MUR + Max( RRSe,MUC ) ),Min( MUC ,MUC ) ) ) / MUM ) )", "obj1": 0.8786610878661087, "obj2": 0.03889422025095275}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8389121338912134, "obj2": 0.05302362444171663}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * MRS ) ) + ( Min( Const ,FirstVNF_CPU ) + ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ( ACS * ( BR + Max( MDR,CRS ) ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( Max( RMSe,MUM ) - ( MLU / CS ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10610013827039126}, {"determining": "( ( RRS / ( ( PN - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( ( AMS * ACS ) * DDR ) ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( FirstVNF_RAM_Server - ARS ) * CRS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( ( RCSe + MUC ) - ( ( MUM / CS ) / RCSe ) ) - ( Max( MUR,Max( RCSe,( Max( ( DS * DS ),Max( RRSe,CS ) ) - CS ) ) ) * ( MLU + MUM ) ) ) )", "obj1": 0.9309623430962343, "obj2": 0.022615433565329947}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server * DDR ) * Min( FirstVNF_Mem ,Max( RRS,Min( ( FirstVNF_Mem_Server * PN ) ,AMS ) ) ) ) )", "choosing": "( Max( ( ( DS - ( ( ( DS - MUM ) * RMSe ) + ( RCSe / CS ) ) ) * ( RMSe / MUM ) ),MLU ) * ( ( CS / MUM ) / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.1232919930326514}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8744769874476988, "obj2": 0.040127319249901476}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07446549357639284}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC * ( MUR / CS ) ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( MUM / CS ) / MUC ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),Min( ( MUC / MLU ) ,( CS * MUC ) ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.7217573221757322, "obj2": 0.10497427260933954}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8158995815899581, "obj2": 0.06245081864371251}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / MUR ) - ( MUC / MUR ) ) - ( ( ( RMSe / RMSe ) / CS ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.00501252597546887}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11582000978121115}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7364016736401674, "obj2": 0.09821827318759338}, {"determining": "( ( ( ( RRS - DDR ) - FirstVNF_Mem_Server ) / Min( MDR ,PN ) ) - FirstVNF_CPU )", "choosing": "( Max( MLU,Min( ( DS + ( ( MUC + Max( RCSe,( CS * DS ) ) ) * DS ) ) ,CS ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9769874476987448, "obj2": 0.006911110285593311}, {"determining": "( ( Min( MDR ,ACS ) / Max( PN,( ACS + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( FirstVNF_CPU_Server + MRS ) - Const ),FirstVNF_CPU ) ) ) ) ) - ( ( FirstVNF_CPU_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR * Min( RRSe ,( MUR * Min( CS ,MUR ) ) ) ) ,( ( Min( RRSe ,MUR ) + Max( Max( ( RCSe / RMSe ),RCSe ),Min( RRSe ,MUM ) ) ) - CS ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( ( MUM + ( Min( RCSe ,( CS / MLU ) ) * RMSe ) ) ,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.02394914254272664}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( MRS * Max( MDR,RRS ) ) ) ) ) )", "choosing": "( Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9037656903765691, "obj2": 0.03115247489875181}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( ACS ,FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( Max( RRSe,MUC ),( ( MUR * MUR ) / RRSe ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( DS / ( DS / MLU ) ) + ( RRSe * ( ( MUM - Max( RMSe,MUM ) ) + MUM ) ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005365425274242837}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + ( ACS + ACS ) ) ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( ( ( RCSe + MUC ) - Min( RCSe ,MLU ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.99581589958159, "obj2": 0.0014856798562255095}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_RAM ,Max( ACS,CRS ) ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.9602510460251046, "obj2": 0.011992153690279592}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( MLU + MUM ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( ( RCSe + DS ) * Min( ( RCSe - CS ) ,RRSe ) ) ) ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03210694512917099}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.9079497907949791, "obj2": 0.02998069550415875}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_CPU + ( CRS - Max( ( ARS * FirstVNF_RAM ),MRS ) ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR * ( RMSe / ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7803347280334728, "obj2": 0.0772170813321019}, {"determining": "( ( ( ( ( MDR + ( ( CRS * ( FirstVNF_Mem + DDR ) ) / DDR ) ) * Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( PN / ( ARS / RRS ) ) ) ) ) + BR ) + ( FirstVNF_Mem_Server - CRS ) ) / ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( RRSe * ( Min( RCSe ,RRSe ) - MUR ) ) ,DS ) ,Max( ( ( RCSe + MUC ) * ( CS + ( RRSe / DS ) ) ),DS ) )", "obj1": 0.9916317991631799, "obj2": 0.0026107791717389067}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ( Min( MDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,MUM ) ) ) ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.8828451882845189, "obj2": 0.03807870395538224}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Min( FirstVNF_RAM ,Max( ACS,CRS ) ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( ( MUM + ( Min( RCSe ,RRSe ) * RMSe ) ),( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.9811715481171548, "obj2": 0.005763807511138889}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( ( ( Min( FirstVNF_CPU ,AMS ) / BR ) * MRS ) + ( CRS - Max( ( ARS * FirstVNF_RAM ),MRS ) ) ) ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUR ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.08445115359605877}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15341278081888146}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_CPU + ( CRS - Max( ( ARS * FirstVNF_RAM ),MRS ) ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.08445115359605877}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7238493723849372, "obj2": 0.10357706492795125}, {"determining": "( ( ( PN * ( ACS + ( ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( RMSe + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * Max( MUM,Min( MUM ,Max( CS,MUM ) ) ) ) ) ,MUR ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060321425861745104}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + BR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8451882845188284, "obj2": 0.049860297860562654}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8242677824267782, "obj2": 0.057925603381103946}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + PN ) ) - CRS ) ) ) ) / Min( ( ACS / MRS ) ,MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR / MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( MLU ,MUR ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8514644351464435, "obj2": 0.047829001660969254}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.029377757185350937}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( PN * DDR ) - ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( PN,( ( FirstVNF_CPU_Server / MDR ) * ( PN * MRS ) ) ) ) )", "choosing": "( Max( Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Max( MLU,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,CS ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7468619246861925, "obj2": 0.09284501745793698}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( Const + Min( ( BR * MRS ) ,FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RMSe ,( CS + ( MUR - CS ) ) ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.897489539748954, "obj2": 0.03298619579222466}, {"determining": "( ( ( PN * ( ACS / ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) ) ) ) / ( RRS * ARS ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( MUM / MUR ) / MUM ) * ( ( MUM / CS ) / ( RMSe + MLU ) ) )", "obj1": 0.7845188284518828, "obj2": 0.07337450524460971}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7384937238493724, "obj2": 0.09821059962805312}, {"determining": "( ( ( PN * ( FirstVNF_RAM + ( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_CPU ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Min( ( MLU * MUR ) ,RCSe ) / MUM ) + MUM ) )", "obj1": 0.9142259414225942, "obj2": 0.027082194767984877}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( PN * DDR ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( ( DS + ( CS - ( MLU / RRSe ) ) ) + ( CS - ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7468619246861925, "obj2": 0.09284501745793698}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7280334728033473, "obj2": 0.10140782555467057}], "21": [{"determining": "Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + PN ) ) ) ,( AMS + ARS ) )", "choosing": "( Min( ( ( ( Max( Max( MUC,( RRSe + MLU ) ),MUM ) * Max( RRSe,Max( RMSe,RRSe ) ) ) * MUC ) / MUM ) ,Max( ( DS / ( Min( MLU ,MUM ) / MUC ) ),Min( MUC ,MUR ) ) ) + ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) ) - ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem + ( Max( Min( PN ,AMS ),RRS ) + Const ) ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) * ( ( Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) / ( CS + RRSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6255230125523012, "obj2": 0.19462345684303103}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,( RRSe + DS ) ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,( MUM / CS ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.18785273483770953}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.23017301722642106}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM / CS ) / MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUR * Max( DS,( Min( RMSe ,( Max( RRSe,MUC ) + RMSe ) ) / RMSe ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.22214862280031122}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + Max( ACS,( ( MRS / MRS ) + FirstVNF_Mem_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.016468344168487317}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.1587401798742831}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( Min( RRS ,CRS ) - ( MDR / FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,CS ) * ( Min( ( ( ( DS / ( MUR / RMSe ) ) / RMSe ) / ( RCSe + DS ) ) ,DS ) / MUM ) )", "obj1": 0.696652719665272, "obj2": 0.12054527578049447}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( AMS / CRS ) ) + ACS ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( ( MLU / MLU ) * ( MUC / MUC ) )", "obj1": 0.6820083682008368, "obj2": 0.1350922350674181}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.801255230125523, "obj2": 0.06703523088738594}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * ( DS - CS ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.6506276150627615, "obj2": 0.16630181108603817}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.1447546382799679}, {"determining": "( Max( ( PN * ( Min( FirstVNF_RAM ,AMS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( ( MDR - BR ) * DDR ) ) ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * Max( MLU,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.13047920304389976}, {"determining": "( Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) / CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( RRS * ( PN + ACS ) ) )", "choosing": "( ( ( MUM / CS ) / RCSe ) * Max( ( ( Min( ( RMSe - MLU ) ,( CS * MUC ) ) / MUM ) * MUR ),Min( MUC ,MLU ) ) )", "obj1": 0.9414225941422594, "obj2": 0.01940564228752934}, {"determining": "( ( ( PN * ( ( Max( ACS,FirstVNF_RAM ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_Mem_Server ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) - RMSe ) - ( ( MUR + MUR ) * ( Min( RRSe ,MLU ) + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUM - RCSe ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06279883416573566}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( ACS,ACS ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - ( ( MUM / CS ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1782461694418776}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( MDR - ( PN - FirstVNF_Mem ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server + MDR ) ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( RMSe ,MUC ) - ( RRSe / ( ( ( CS * MLU ) / Max( Min( RMSe ,RCSe ),( DS - CS ) ) ) + Min( CS ,RMSe ) ) ) ) * Min( RCSe ,( ( MUM + ( ( RMSe / DS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6631799163179917, "obj2": 0.15165136603569643}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12877069545039896}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUR + Max( RCSe,MUR ) ) ) ,MUR ) ) )", "obj1": 0.7740585774058577, "obj2": 0.07817418031262384}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server * DDR ) * Min( FirstVNF_Mem ,Max( RRS,Min( ( FirstVNF_Mem_Server * PN ) ,AMS ) ) ) ) )", "choosing": "( Max( ( ( DS - ( ( ( DS - MUM ) * RMSe ) + ( RCSe / CS ) ) ) * ( RMSe / MUM ) ),MLU ) * ( ( CS / MUM ) / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.1232919930326514}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( ACS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server / PN ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( ( ( RCSe / CS ) / MUC ) - MUC ) * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6464435146443515, "obj2": 0.16779198848325685}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( Max( Min( FirstVNF_RAM_Server ,Min( ARS ,( DDR / FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM * FirstVNF_CPU ) ) * ( ACS + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - CRS ) ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + Max( ARS,FirstVNF_CPU_Server ) ) ) - CRS ) ) ,Min( FirstVNF_Mem ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * Min( Min( CS ,MUR ) ,( Max( ( MUR + RMSe ),RRSe ) / MLU ) ) ) + MUC ) + MLU ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9079497907949791, "obj2": 0.028952072029269887}, {"determining": "( ( ( PN * ( ( DDR / RRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( Max( CS,RMSe ) * ( MUR - ( MLU / RRSe ) ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( Min( MDR ,ACS ) / Max( PN,( ACS + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( FirstVNF_CPU_Server + MRS ) - Const ),FirstVNF_CPU ) ) ) ) ) - ( ( FirstVNF_CPU_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR * Min( RRSe ,( MUR * Min( CS ,MUR ) ) ) ) ,( ( Min( RRSe ,MUR ) + Max( Max( ( RCSe / RMSe ),RCSe ),Min( RRSe ,MUM ) ) ) - CS ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( ( MUM + ( Min( RCSe ,( CS / MLU ) ) * RMSe ) ) ,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.02394914254272664}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9351464435146444, "obj2": 0.021301389975884162}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.893305439330544, "obj2": 0.03439193629215609}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) - ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( PN * DDR ) ) ) ) ) / Min( MDR ,( ( Max( RRS,CRS ) - ( AMS * MDR ) ) / AMS ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Min( RRSe ,MUM ) * ( ( MUM * CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.0863658063463759}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( Min( MDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "Min( Max( ( ( ( PN * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * ( BR - FirstVNF_CPU_Server ) ),MDR ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( ( ( MUC + DS ) - CS ) - ( ( RCSe / RRSe ) - Min( CS ,Min( MUC ,MUM ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17191182473889388}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - PN ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_CPU + ( CRS - Max( Max( MDR,FirstVNF_RAM ),MRS ) ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR - ( ( CS / ( RCSe - ( ( CS + RCSe ) + Min( RMSe ,CS ) ) ) ) / ( Min( ( MLU / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7803347280334728, "obj2": 0.07613586199929893}, {"determining": "( ( RRS / ( ( PN - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( ( AMS * ACS ) * DDR ) ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( FirstVNF_RAM_Server - ARS ) * CRS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( ( RCSe + MUC ) - ( ( MUM / CS ) / RCSe ) ) - ( Max( MUR,Max( RCSe,( Max( ( DS * DS ),Max( RRSe,CS ) ) - CS ) ) ) * ( MLU + MUM ) ) ) )", "obj1": 0.9309623430962343, "obj2": 0.022615433565329947}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + PN ) ) - CRS ) ) ) ) / Min( ( ACS / MRS ) ,MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR / MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( MLU ,MUR ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8514644351464435, "obj2": 0.047829001660969254}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7698744769874477, "obj2": 0.08053032022731282}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6213389121338913, "obj2": 0.20967560784267522}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7907949790794979, "obj2": 0.07033999172038644}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUM,Min( CS ,RCSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8305439330543933, "obj2": 0.05556633841433436}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( MRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( DS * MUC ) / CS ) / MUM ) / CS ) / ( CS * MUR ) ) + RRSe ) - ( RMSe * Min( CS ,CS ) ) )", "obj1": 0.7405857740585774, "obj2": 0.09612484471269177}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) / ( BR * ( ACS + ( FirstVNF_RAM_Server + ( ACS + Min( Const ,MDR ) ) ) ) ) ) - Min( ( ( ( FirstVNF_RAM + ARS ) / ( AMS * FirstVNF_CPU_Server ) ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( MUR + Max( RCSe,MUR ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) / Max( MLU,Max( RCSe,MUM ) ) ) + RRSe ) - MUM )", "obj1": 0.7322175732217573, "obj2": 0.10050319231620213}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15341278081888146}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.0360009130116885}, {"determining": "( ( ( PN * ( ( Const / ( AMS * BR ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) / FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( ( RMSe / MUM ),MUM ) ) ) ) * ( ( MUM / Max( ( MUR + Max( RRSe,MUC ) ),Min( MUC ,MUC ) ) ) / MUM ) )", "obj1": 0.8786610878661087, "obj2": 0.03889422025095275}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7280334728033473, "obj2": 0.10140782555467057}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7071129707112971, "obj2": 0.11351336078540367}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( Min( MDR ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,MUC )", "obj1": 0.9895397489539749, "obj2": 0.003957177979508566}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( MDR + ( ACS + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server / ACS ) ) ) ) ) / ( MDR / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( ( ( CS / RRSe ) * ( RRSe + MUR ) ) + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC * MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.15737650014322035}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.053379511326896896}, {"determining": "( ( ( PN * ( ( ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM_Server ) ) - CRS ) + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Min( ( RMSe / ( CS * RMSe ) ) ,( RMSe / MLU ) ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * ( MUC / MLU ) ) )", "obj1": 0.7112970711297071, "obj2": 0.11175614748488286}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.11582000978121115}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( Const + Min( ( BR * MRS ) ,FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RMSe ,( CS + ( MUR - CS ) ) ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.897489539748954, "obj2": 0.03298619579222466}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7238493723849372, "obj2": 0.10327300210280323}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( ACS * DDR ) - ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) ) ) ) / Min( ( CRS * BR ) ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( Max( MUC,( MUR - DS ) ) * DS ) ) ,( DS + ( CS / ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7447698744769874, "obj2": 0.09370624339046764}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9142259414225942, "obj2": 0.027082194767984877}, {"determining": "( ( ( PN * ( FirstVNF_RAM + ( Min( FirstVNF_CPU_Server ,( MDR * FirstVNF_CPU ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Min( ( MLU * MUR ) ,RCSe ) / MUM ) + MUM ) )", "obj1": 0.9142259414225942, "obj2": 0.027082194767984877}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * MRS ) ) + ( Min( Const ,FirstVNF_CPU ) + ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ( ACS * ( BR + Max( MDR,CRS ) ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( Max( RMSe,MUM ) - ( MLU / CS ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10610013827039126}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( ARS + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ACS ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005298867698625306}, {"determining": "( ( ( ( ( MDR + Max( DDR,FirstVNF_CPU ) ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011885745403114125}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( FirstVNF_RAM_Server - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9246861924686193, "obj2": 0.02367572317764778}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * Max( MLU,Min( ( Min( RCSe ,MLU ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.04266318405773172}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( ( FirstVNF_Mem_Server - ( ARS * AMS ) ) / FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( RCSe,MUR ) * ( MLU + MUM ) ) ) * Max( MLU,( RCSe - ( RMSe / MUM ) ) ) ) * Min( RCSe ,RRSe ) ) ,( MUC * ( MUR / CS ) ) )", "obj1": 0.8138075313807531, "obj2": 0.062272900194773995}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( CS + RRSe ) / MUR ) )", "obj1": 0.9707112970711297, "obj2": 0.008844829301725027}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8619246861924686, "obj2": 0.04324050256837122}, {"determining": "( ( ( Max( ACS,( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RMSe - RRSe ) * ( RMSe / MUM ) ),MLU ) * Max( ( ( Max( MLU,DS ) + Min( RCSe ,Min( RCSe ,( CS * ( CS / CS ) ) ) ) ) * ( CS + Min( ( ( CS + RRSe ) * CS ) ,MUC ) ) ),MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.11582000978121115}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060321425861745104}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server + ACS ) * Min( ACS ,RRS ) ) ) ) ) ) / Min( MDR ,( FirstVNF_Mem + ( PN / DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) - CS ) - CS ) ,( ( ( ( Min( DS ,RMSe ) - ( ( MUR + ( RRSe * RRSe ) ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( ( ( MUC / MLU ) - ( CS * MUC ) ) / ( Max( MLU,MLU ) - ( MUR / ( MUM / CS ) ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8535564853556485, "obj2": 0.04621702487682108}, {"determining": "( ( ( PN * ( ACS + ( MDR + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) ),MUR ) ) * ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / MUR ) )", "obj1": 0.9748953974895398, "obj2": 0.00796326960720703}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( ( RMSe / MUM ),MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8828451882845189, "obj2": 0.03734821939880825}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17191182473889388}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7656903765690377, "obj2": 0.08164229551964695}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * ( ACS + ( ( ( Min( FirstVNF_CPU ,AMS ) / BR ) * MRS ) + ( CRS - Max( ( ARS * FirstVNF_RAM ),MRS ) ) ) ) ) ,( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUR ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.08445115359605877}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( ( PN - FirstVNF_Mem ) - MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - AMS ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010353209257402404}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07446549357639284}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUM / CS ) / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.8577405857740585, "obj2": 0.04588532672935762}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + BR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,( Max( ( MRS * AMS ),CRS ) / AMS ) ) ) - Min( ( Max( Max( FirstVNF_CPU,DDR ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( Min( DS ,( MLU * DS ) ) ,( DS + Max( MUC,( DS - MUC ) ) ) ) ) * ( Min( MLU ,( ( MUM - RCSe ) + RRSe ) ) * ( ( MLU + MUR ) / Min( MUR ,RCSe ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.04480959211449062}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8242677824267782, "obj2": 0.057925603381103946}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8702928870292888, "obj2": 0.04194647102620712}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8389121338912134, "obj2": 0.05302362444171663}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + Min( BR ,Min( FirstVNF_Mem ,MRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( CS + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( Max( DS,Min( RMSe ,DS ) ) / CS ) / MUR ) ) ) ) )", "obj1": 0.8430962343096234, "obj2": 0.05092892588434649}, {"determining": "( ( ( PN * ( ACS + ( ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( RMSe + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * Max( MUM,Min( MUM ,Max( CS,MUM ) ) ) ) ) ,MUR ) ) )", "obj1": 0.8179916317991632, "obj2": 0.060321425861745104}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server - BR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,( FirstVNF_CPU * Min( FirstVNF_Mem_Server ,Max( DDR,PN ) ) ) ) )", "choosing": "( ( RCSe - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( ( RRSe * DS ) ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8451882845188284, "obj2": 0.049860297860562654}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.08973290502978824}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( PN * DDR ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( ( DS + ( CS - ( MLU / RRSe ) ) ) + ( CS - ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7468619246861925, "obj2": 0.09284501745793698}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8410041841004184, "obj2": 0.05225855022751831}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7384937238493724, "obj2": 0.09821059962805312}], "22": [{"determining": "( ( Min( MDR ,ACS ) / Max( PN,( ACS + ( ( FirstVNF_CPU_Server / Const ) + Max( ( Max( FirstVNF_CPU_Server,MRS ) - ( PN / ARS ) ),FirstVNF_CPU ) ) ) ) ) - ( ( DDR * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR * Min( RRSe ,( MUR * Min( CS ,MUR ) ) ) ) ,( ( Min( RRSe ,MUR ) + Max( Max( ( MUM * Min( DS ,MLU ) ),RCSe ),Min( RRSe ,MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server + ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + PN ) ) ) ,( AMS + ARS ) )", "choosing": "( Min( ( ( ( Max( Max( MUC,( RRSe + MLU ) ),MUM ) * Max( RRSe,Max( RMSe,RRSe ) ) ) * MUC ) / MUM ) ,Max( ( DS / ( Min( MLU ,MUM ) / MUC ) ),Min( MUC ,MUR ) ) ) + ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - DDR ) ,( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + ( Const / AMS ) ) ) )", "choosing": "Min( ( ( MUM + ( MUM - MUR ) ) + CS ) ,( MUC / ( Max( MLU,Min( ( DS + ( MUM * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( MUM / ( MUM / CS ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2566237515779489}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6192468619246861, "obj2": 0.1994417153177549}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,( RRSe + DS ) ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,( MUM / CS ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.18785273483770953}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.23017301722642106}, {"determining": "Min( Max( ( ( ( PN * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * ( BR - FirstVNF_CPU_Server ) ),MDR ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( ( ( MUC + DS ) - CS ) - ( ( RCSe / RRSe ) - Min( CS ,Min( MUC ,MUM ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "( Max( ( PN * ( Min( FirstVNF_RAM ,AMS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( ( MDR - BR ) * DDR ) ) ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * Max( MLU,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.13047920304389976}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.1587401798742831}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6820083682008368, "obj2": 0.13330526590034988}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * ( DS - CS ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.6506276150627615, "obj2": 0.16630181108603817}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( MDR - ( PN - FirstVNF_Mem ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server + MDR ) ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( RMSe ,MUC ) - ( RRSe / ( ( ( CS * MLU ) / Max( Min( RMSe ,RCSe ),( DS - CS ) ) ) + Min( CS ,RMSe ) ) ) ) * Min( RCSe ,( ( MUM + ( ( RMSe / DS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( Const - Const ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,( ( MRS - ( ( FirstVNF_CPU / ( Const * FirstVNF_RAM_Server ) ) / BR ) ) * ACS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( ( ( MUM / MUR ) / MLU ) - ( MUC + ( MUC * MUM ) ) ) ) / MUM ) )", "obj1": 0.6799163179916318, "obj2": 0.13869330053859888}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6631799163179917, "obj2": 0.15165136603569643}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) - ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( PN * DDR ) ) ) ) ) / Min( MDR ,( ( Max( RRS,CRS ) - ( AMS * MDR ) ) / AMS ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Min( RRSe ,MUM ) * ( ( MUM * CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.0863658063463759}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( RCSe ,RRSe ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7238493723849372, "obj2": 0.10320799180646942}, {"determining": "( ( ( PN * ( ( Max( ACS,FirstVNF_RAM ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_Mem_Server ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) - RMSe ) - ( ( MUR + MUR ) * ( Min( RRSe ,MLU ) + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUM - RCSe ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06279883416573566}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12360949677136769}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( ACS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server / PN ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( ( ( RCSe / CS ) / MUC ) - MUC ) * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6464435146443515, "obj2": 0.16779198848325685}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.1447546382799679}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUR + Max( RCSe,MUR ) ) ) ,MUR ) ) )", "obj1": 0.803347280334728, "obj2": 0.06691019552940405}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6255230125523012, "obj2": 0.19462345684303103}, {"determining": "( ( ( Max( Min( FirstVNF_RAM_Server ,Min( ARS ,( DDR / FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM * FirstVNF_CPU ) ) * ( ACS + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - CRS ) ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + Max( ARS,FirstVNF_CPU_Server ) ) ) - CRS ) ) ,Min( FirstVNF_Mem ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * Min( Min( CS ,MUR ) ,( Max( ( MUR + RMSe ),RRSe ) / MLU ) ) ) + MUC ) + MLU ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9079497907949791, "obj2": 0.028952072029269887}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ARS ) ) - DDR ) ) ) ) ,Min( FirstVNF_Mem ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( RCSe + DS ) ),RCSe ) ,RRSe ) * DS ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03190066140874991}, {"determining": "( ( ( PN * ( ( DDR / RRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( Max( CS,RMSe ) * ( MUR - ( MLU / RRSe ) ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.702928870292887, "obj2": 0.11744517206421527}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * ( ( MUM / MUM ) / MUM ) )", "obj1": 0.8702928870292888, "obj2": 0.04170929452713833}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * MRS ) ) + ( Min( Const ,FirstVNF_CPU ) + ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ( ACS * ( BR + Max( MDR,CRS ) ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( Max( RMSe,MUM ) - ( MLU / CS ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10610013827039126}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.035857962173574474}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( Min( RRS ,ACS ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( RCSe ,MUC ) / RRSe ) / RCSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7949790794979079, "obj2": 0.069916019681519}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( PN - Const ) ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,Max( RMSe,MLU ) ) ) * Max( MUC,MUM ) )", "obj1": 0.893305439330544, "obj2": 0.03380407371378166}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - PN ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_CPU + ( CRS - Max( ( ARS * FirstVNF_RAM ),MRS ) ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RCSe / RMSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Min( Max( ( RMSe / ( RCSe + DS ) ),RCSe ) ,RRSe ) * DS ) ,MUR ) ) )", "obj1": 0.7887029288702929, "obj2": 0.07351948340513537}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUR * Max( DS,( Min( RMSe ,( Max( RRSe,MUC ) + RMSe ) ) / RMSe ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.22214862280031122}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( Min( MDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17191182473889388}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( ACS,ACS ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - ( ( MUM / CS ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1782461694418776}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + PN ) ) - CRS ) ) ) ) / Min( ( ACS / MRS ) ,MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR / MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( MLU ,MUR ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8514644351464435, "obj2": 0.047829001660969254}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.0827410551058513}, {"determining": "( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( ( MUC / MLU ) / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9937238493723849, "obj2": 0.001987145532517755}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUM,Min( CS ,RCSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8305439330543933, "obj2": 0.05556633841433436}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( MRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( DS * MUC ) / CS ) / MUM ) / CS ) / ( CS * MUR ) ) + RRSe ) - ( RMSe * Min( CS ,CS ) ) )", "obj1": 0.7405857740585774, "obj2": 0.09612484471269177}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( ( RMSe / MUM ),MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8828451882845189, "obj2": 0.03734821939880825}, {"determining": "( ( ( DDR * ( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) + ACS ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( AMS,AMS ) ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( MLU - RMSe ) ) ) * ( ( MUM / MLU ) / Max( RCSe,Min( ( RMSe / MLU ) ,MUC ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.0389039743051551}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.08973290502978824}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( BR ,FirstVNF_RAM ) ) / Min( ( ( MRS - AMS ) + ( DDR - FirstVNF_RAM_Server ) ) ,Min( ( AMS + Const ) ,Max( MRS,ACS ) ) ) ) ) + ( RRS - Max( ( ( Max( MRS,CRS ) - MRS ) - AMS ),Min( CRS ,MRS ) ) ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - ( Max( ( MLU / MUC ),RMSe ) - DS ) ) ,( ( DS + MUR ) + Min( CS ,MLU ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUR * Max( DS,( Min( RMSe ,( Max( RRSe,MUC ) + RMSe ) ) / RMSe ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.22214862280031122}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( MUM / CS ) / MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9686192468619247, "obj2": 0.009943553462968028}, {"determining": "( ( ( PN * ( ( ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM_Server ) ) - CRS ) + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Min( ( RMSe / ( CS * RMSe ) ) ,( RMSe / MLU ) ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * ( MUC / MLU ) ) )", "obj1": 0.7112970711297071, "obj2": 0.11175614748488286}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,( ( RCSe * MLU ) - DS ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,CS ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6589958158995816, "obj2": 0.15695401392946376}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6255230125523012, "obj2": 0.19462345684303103}, {"determining": "( ( ( PN * ( ACS + ( PN + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( ( ( PN * MDR ) + FirstVNF_CPU_Server ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( Min( RCSe ,( Max( ( MLU * MUR ),RCSe ) * ( MUC + RRSe ) ) ),( MUR / ( ( MLU - MUC ) * RMSe ) ) ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7384937238493724, "obj2": 0.09816268367260729}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( ARS + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( MLU,Min( ( DS + ( Max( MUC,( MUR - DS ) ) * DS ) ) ,( DS + ( CS / ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.005163357246573839}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9623430962343096, "obj2": 0.011324917847766897}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - ( FirstVNF_RAM_Server + ACS ) ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( RMSe ,RMSe ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7447698744769874, "obj2": 0.09364722761388189}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( Const + Min( ( BR * MRS ) ,FirstVNF_Mem ) ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RMSe ,( CS + ( MUR - CS ) ) ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.897489539748954, "obj2": 0.03298619579222466}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Min( RCSe ,Min( RCSe ,( CS * ( CS / CS ) ) ) ) )", "obj1": 0.7489539748953975, "obj2": 0.0928183508359166}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.011968910416946785}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * Max( MLU,Min( ( Min( RCSe ,MLU ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.04266318405773172}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.696652719665272, "obj2": 0.12054527578049447}, {"determining": "( ( ( PN * ( ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.1154832313815684}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( ( FirstVNF_Mem_Server - ( ARS * AMS ) ) / FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( RCSe,MUR ) * ( MLU + MUM ) ) ) * Max( MLU,( RCSe - ( RMSe / MUM ) ) ) ) * Min( RCSe ,RRSe ) ) ,( MUC * ( MUR / CS ) ) )", "obj1": 0.8138075313807531, "obj2": 0.062272900194773995}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.053379511326896896}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUM,Min( CS ,RCSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8221757322175732, "obj2": 0.05856949371425522}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( ( PN * ( ( Min( CRS ,ACS ) / ( FirstVNF_CPU_Server * BR ) ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / MUR ) / MUM ) * ( ( MUM / CS ) / MUM ) ) * ( ( ( MLU - MLU ) / MUC ) / MUM ) )", "obj1": 0.7740585774058577, "obj2": 0.07751101781564555}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7343096234309623, "obj2": 0.0995498388431367}, {"determining": "( ( Min( MDR ,ACS ) / Max( PN,( ACS + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( FirstVNF_CPU_Server + MRS ) - Const ),FirstVNF_CPU ) ) ) ) ) - ( ( FirstVNF_CPU_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR * Min( RRSe ,( MUR * Min( CS ,MUR ) ) ) ) ,( ( Min( RRSe ,MUR ) + Max( Max( ( RCSe / RMSe ),RCSe ),Min( RRSe ,MUM ) ) ) - CS ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + Min( MDR ,FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS + ( MUR - CS ) ) ) ,( RMSe - MLU ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9811715481171548, "obj2": 0.006011214488199882}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9351464435146444, "obj2": 0.021301389975884162}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( ( MRS + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ,Min( ( Max( Max( DDR,FirstVNF_CPU ),Max( BR,MDR ) ) - MRS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) + RRSe ) - ( ( CS + RRSe ) / MUR ) )", "obj1": 0.9707112970711297, "obj2": 0.008844829301725025}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( MDR + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( MUM ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.003939503812460669}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( Max( Max( FirstVNF_CPU,DDR ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( AMS ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( ( DS - MUC ) / CS ) / MUR ) ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007187942008029446}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server + ACS ) * Min( ACS ,RRS ) ) ) ) ) ) / Min( MDR ,( FirstVNF_Mem + ( PN / DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) - CS ) - CS ) ,( ( ( ( Min( DS ,RMSe ) - ( ( MUR + ( RRSe * RRSe ) ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( ( ( MUC / MLU ) - ( CS * MUC ) ) / ( Max( MLU,MLU ) - ( MUR / ( MUM / CS ) ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8535564853556485, "obj2": 0.04621702487682108}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7907949790794979, "obj2": 0.07033999172038644}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.9121338912133892, "obj2": 0.027787588346463474}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7322175732217573, "obj2": 0.10042989134651222}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7719665271966527, "obj2": 0.07923589807742959}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - DDR ) ) ) ) / Min( MDR ,( RRS - MDR ) ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MLU,( Min( MUC ,( MUC / ( ( ( MUM + RRSe ) - ( DS - CS ) ) * ( ( MLU - CS ) * RCSe ) ) ) ) / CS ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07446549357639284}, {"determining": "( ( ( PN * ( ACS + ( MDR + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_RAM ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Max( Max( ( ( PN + ARS ) - FirstVNF_CPU ),( ( ACS - ARS ) * DDR ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,Max( Max( ( MLU * RMSe ),Min( MUR ,( ( ( MUM / CS ) / MUM ) + RRSe ) ) ),MUR ) ) * ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / MUR ) )", "obj1": 0.9748953974895398, "obj2": 0.00796326960720703}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + Max( ACS,( ( MRS / MRS ) + FirstVNF_Mem_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.016468344168487317}, {"determining": "( ( ( PN * ( ( Const / ( AMS * BR ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) / FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( ( RMSe / MUM ),MUM ) ) ) ) * ( ( MUM / Max( ( MUR + Max( RRSe,MUC ) ),Min( MUC ,MUC ) ) ) / MUM ) )", "obj1": 0.8786610878661087, "obj2": 0.03889422025095275}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17191182473889388}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUM / CS ) / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.8577405857740585, "obj2": 0.04588532672935762}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + ( CS * MUC ) ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.7782426778242678, "obj2": 0.07694100777306769}, {"determining": "( ( ( Max( ACS,( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.017683213366800468}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + BR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,( Max( ( MRS * AMS ),CRS ) / AMS ) ) ) - Min( ( Max( Max( FirstVNF_CPU,DDR ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( Min( DS ,( MLU * DS ) ) ,( DS + Max( MUC,( DS - MUC ) ) ) ) ) * ( Min( MLU ,( ( MUM - RCSe ) + RRSe ) ) * ( ( MLU + MUR ) / Min( MUR ,RCSe ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.04480959211449062}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - PN ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_CPU + ( CRS - Max( Max( MDR,FirstVNF_RAM ),MRS ) ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR - ( ( CS / ( RCSe - ( ( CS + RCSe ) + Min( RMSe ,CS ) ) ) ) / ( Min( ( MLU / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7803347280334728, "obj2": 0.07613586199929893}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + BR ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Max( DDR,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - MRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.8451882845188284, "obj2": 0.049860297860562654}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * ACS ) ,Min( ( FirstVNF_Mem_Server + BR ) ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - RMSe ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( RCSe / MLU ) ) ,( CS * MUC ) ) / Min( ( MUR + ( CS * RMSe ) ) ,MUR ) ) )", "obj1": 0.9267782426778243, "obj2": 0.02273511978076644}, {"determining": "( ( ( ARS * ( ACS + ( MDR + DDR ) ) ) / Min( FirstVNF_RAM_Server ,MDR ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,Min( MLU ,Max( MUM,CS ) ) ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC + MLU ) ,( CS * MUC ) ) / Min( MUR ,( MUM + ( ( RMSe / DS ) * RMSe ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15341278081888146}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + Min( BR ,Min( FirstVNF_Mem ,MRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( CS + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( Max( DS,Min( RMSe ,DS ) ) / CS ) / MUR ) ) ) ) )", "obj1": 0.8430962343096234, "obj2": 0.05092892588434649}], "23": [{"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( ACS ,( ACS / MRS ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( Min( RRSe ,MLU ) ,DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / Max( PN,( ACS + ( ( FirstVNF_CPU_Server / Const ) + Max( ( Max( FirstVNF_CPU_Server,MRS ) - ( PN / ARS ) ),FirstVNF_CPU ) ) ) ) ) - ( ( DDR * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR * Min( RRSe ,( MUR * Min( CS ,MUR ) ) ) ) ,( ( Min( RRSe ,MUR ) + Max( Max( ( MUM * Min( DS ,MLU ) ),RCSe ),Min( RRSe ,MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - DDR ) ,( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + ( Const / AMS ) ) ) )", "choosing": "Min( ( ( MUM + ( MUM - MUR ) ) + CS ) ,( MUC / ( Max( MLU,Min( ( DS + ( MUM * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( MUM / ( MUM / CS ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2566237515779489}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6192468619246861, "obj2": 0.1994417153177549}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( ( RCSe + MUC ) - Min( RCSe ,( RRSe + DS ) ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( MUM / CS ) ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) * Min( RCSe ,( MUM / CS ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.18785273483770953}, {"determining": "Min( Max( ( ( ( PN * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * ( BR - FirstVNF_CPU_Server ) ),MDR ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( ( ( MUC + DS ) - CS ) - ( ( RCSe / RRSe ) - Min( CS ,Min( MUC ,MUM ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.23017301722642106}, {"determining": "Min( Max( PN,FirstVNF_Mem_Server ) ,( PN - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUC * ( CS + ( MLU + ( ( MUM / ( MUC * RCSe ) ) / ( RCSe - MUC ) ) ) ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2504834597656873}, {"determining": "( ( ( PN * ( ACS + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * ( DS - CS ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.6506276150627615, "obj2": 0.16630181108603817}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.1447546382799679}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9351464435146444, "obj2": 0.021301389975884162}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( ( MUC / MLU ) / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6401673640167364, "obj2": 0.17309955685353784}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( MDR - ( PN - FirstVNF_Mem ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server + MDR ) ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( RMSe ,MUC ) - ( RRSe / ( ( ( CS * MLU ) / Max( Min( RMSe ,RCSe ),( DS - CS ) ) ) + Min( CS ,RMSe ) ) ) ) * Min( RCSe ,( ( MUM + ( ( RMSe / DS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "Min( Max( AMS,Min( ARS ,FirstVNF_Mem ) ) ,( FirstVNF_Mem + PN ) )", "choosing": "( Min( Max( MUR,MUM ) ,Max( Max( DS,( Min( MLU ,DS ) / MUC ) ),Min( Min( MUM ,RCSe ) ,Max( DS,Max( ( MLU * ( MUR / MUM ) ),MLU ) ) ) ) ) + ( RCSe - RRSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.1587401798742831}, {"determining": "( Max( ( PN * ( Min( FirstVNF_RAM ,AMS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( ( MDR - BR ) * DDR ) ) ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * Max( MLU,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.13047920304389976}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6778242677824268, "obj2": 0.13820891558439788}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) - ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( PN * DDR ) ) ) ) ) / Min( MDR ,( ( Max( RRS,CRS ) - ( AMS * MDR ) ) / AMS ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Min( RRSe ,MUM ) * ( ( MUM * CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.0863658063463759}, {"determining": "( ( ( PN * ( ( Max( ACS,FirstVNF_RAM ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_Mem_Server ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) - RMSe ) - ( ( MUR + MUR ) * ( Min( RRSe ,MLU ) + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUM - RCSe ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06279883416573566}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12360949677136769}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_RAM_Server + ( ( ( ACS + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server / PN ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( ( ( ( RCSe / CS ) / MUC ) - MUC ) * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6464435146443515, "obj2": 0.16779198848325685}, {"determining": "( ( ( Max( Min( FirstVNF_RAM_Server ,Min( ARS ,( DDR / FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM * FirstVNF_CPU ) ) * ( ACS + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - CRS ) ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + Max( ARS,FirstVNF_CPU_Server ) ) ) - CRS ) ) ,Min( FirstVNF_Mem ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * Min( Min( CS ,MUR ) ,( Max( ( MUR + RMSe ),RRSe ) / MLU ) ) ) + MUC ) + MLU ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9079497907949791, "obj2": 0.028952072029269887}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUR + Max( RCSe,MUR ) ) ) ,MUR ) ) )", "obj1": 0.803347280334728, "obj2": 0.06691019552940405}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6255230125523012, "obj2": 0.19462345684303103}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,( ( RCSe * MLU ) - DS ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,CS ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9205020920502092, "obj2": 0.025133930705042568}, {"determining": "( ( ( Max( ACS,( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.017683213366800468}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * MRS ) ) + ( Min( Const ,FirstVNF_CPU ) + ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ( ACS * ( BR + Max( MDR,CRS ) ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( Max( RMSe,MUM ) - ( MLU / CS ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10610013827039126}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.035687348978599744}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ( DDR / RRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( Max( CS,RMSe ) * ( MUR - ( MLU / RRSe ) ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "Min( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) * ( ( MUM / CS ) / MUM ) ) )", "obj1": 0.6108786610878661, "obj2": 0.23672742134385572}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - PN ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_CPU + ( CRS - Max( Max( MDR,FirstVNF_RAM ),MRS ) ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR - ( ( CS / ( RCSe - ( ( CS + RCSe ) + Min( RMSe ,CS ) ) ) ) / ( Min( ( MLU / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7887029288702929, "obj2": 0.07328828958670963}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUR * Max( DS,( Min( RMSe ,( Max( RRSe,MUC ) + RMSe ) ) / RMSe ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.22214862280031122}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * Max( MLU,Min( ( Min( RCSe ,MLU ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.04266318405773172}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * ACS ) ,Min( ( FirstVNF_Mem_Server + BR ) ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - RMSe ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( RCSe / MLU ) ) ,( CS * MUC ) ) / Min( ( MUR + ( CS * RMSe ) ) ,MUR ) ) )", "obj1": 0.9267782426778243, "obj2": 0.02273511978076644}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUM,Min( CS ,RCSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8221757322175732, "obj2": 0.05856949371425522}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - ( Min( ACS ,RRS ) * ( FirstVNF_Mem_Server + ACS ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),Min( ( MUC / MLU ) ,( CS * MUC ) ) ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7092050209205021, "obj2": 0.11135340798324975}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.053379511326896896}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( ( Max( MUR,( ( Min( MLU ,MLU ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.8598326359832636, "obj2": 0.04437476930235855}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUM,Min( CS ,RCSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8305439330543933, "obj2": 0.05556633841433436}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( ( RMSe / MUM ),MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8828451882845189, "obj2": 0.03734821939880825}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6631799163179917, "obj2": 0.15165136603569643}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( RCSe ,RRSe ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7238493723849372, "obj2": 0.10320799180646942}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( PN - Const ) ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,Max( RMSe,MLU ) ) ) * Max( MUC,MUM ) )", "obj1": 0.893305439330544, "obj2": 0.03380407371378166}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( Max( ACS,ACS ) ,( AMS - Const ) ) ) ) ) + Min( ( Min( MDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( BR ,FirstVNF_RAM ) ) / Min( ( ( MRS - AMS ) + ( DDR - FirstVNF_RAM_Server ) ) ,Min( ( AMS + Const ) ,Max( MRS,ACS ) ) ) ) ) + ( RRS - Max( ( ( Max( MRS,CRS ) - MRS ) - AMS ),Min( CRS ,MRS ) ) ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - ( Max( ( MLU / MUC ),RMSe ) - DS ) ) ,( ( DS + MUR ) + Min( CS ,MLU ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUR * Max( DS,( Min( RMSe ,( Max( RRSe,MUC ) + RMSe ) ) / RMSe ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.22214862280031122}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( MDR + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( MUM ,Max( ( MUM / RMSe ),Max( RCSe,RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.003939503812460669}, {"determining": "( ( ( ( ARS / ( ACS + ACS ) ) * ( ACS + Max( ( ( FirstVNF_RAM_Server + Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,MLU ) * Max( MUM,( MUM - Min( Min( ( DS - MUM ) ,CS ) ,Min( Min( RRSe ,( RCSe + RMSe ) ) ,MUR ) ) ) ) ) * ( Min( RRSe ,MUR ) * CS ) )", "obj1": 0.9686192468619247, "obj2": 0.009900277825741995}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9163179916317992, "obj2": 0.02676081073617465}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6820083682008368, "obj2": 0.13330526590034988}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,( ( RCSe * MLU ) - DS ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,CS ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6589958158995816, "obj2": 0.15695401392946376}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6255230125523012, "obj2": 0.19462345684303103}, {"determining": "( ( ( PN / ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) * ( ( Max( MUR,( ( ( Min( RRSe ,MUR ) - MUM ) - ( ( CS - RRSe ) * ( RMSe / MUM ) ) ) - CS ) ) / CS ) / MUM ) )", "obj1": 0.9121338912133892, "obj2": 0.02759693252671749}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUM / CS ) / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.895397489539749, "obj2": 0.03282145868036707}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( ARS + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( MLU,Min( ( DS + ( Max( MUC,( MUR - DS ) ) * DS ) ) ,( DS + ( CS / ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.005163357246573839}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - DDR ) ) ) ) / Min( MDR ,( RRS - MDR ) ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MLU,( Min( MUC ,( MUC / ( ( ( MUM + RRSe ) - ( DS - CS ) ) * ( ( MLU - CS ) * RCSe ) ) ) ) / CS ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07446549357639284}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ARS ) ) - DDR ) ) ) ) ,Min( FirstVNF_Mem ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( RCSe + DS ) ),RCSe ) ,RRSe ) * DS ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03190066140874991}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( CS + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( Max( DS,Min( RMSe ,DS ) ) / CS ) / MUR ) ) ) ) )", "obj1": 0.8179916317991632, "obj2": 0.059939926704519045}, {"determining": "( ( ( PN * ( ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.11450034681934763}, {"determining": "( Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( PN * ( FirstVNF_Mem_Server / MDR ) ) / Max( MDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MUM + MLU ) ) ) * Max( Min( ( MUC / MLU ) ,Max( ( DS + RRSe ),RMSe ) ),MUM ) )", "obj1": 0.6861924686192469, "obj2": 0.1310280236160227}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( RCSe ,RRSe ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7238493723849372, "obj2": 0.10320799180646942}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( MUM / CS ) )", "obj1": 0.9309623430962343, "obj2": 0.022694705174992027}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + ( CS * MUC ) ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.7782426778242678, "obj2": 0.07694100777306769}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7322175732217573, "obj2": 0.10042989134651222}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7907949790794979, "obj2": 0.07033999172038644}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - ( FirstVNF_RAM_Server + ACS ) ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( RMSe ,RMSe ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7447698744769874, "obj2": 0.09364722761388189}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.0827410551058513}, {"determining": "( ( ( PN * ( ( Min( CRS ,ACS ) / ( FirstVNF_CPU_Server * BR ) ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / MUR ) / MUM ) * ( ( MUM / CS ) / MUM ) ) * ( ( ( MLU - MLU ) / MUC ) / MUM ) )", "obj1": 0.7740585774058577, "obj2": 0.07751101781564555}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Min( RCSe ,Min( RCSe ,( CS * ( CS / CS ) ) ) ) )", "obj1": 0.7489539748953975, "obj2": 0.0928183508359166}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + Max( ACS,( ( MRS / MRS ) + FirstVNF_Mem_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.016468344168487317}, {"determining": "( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.9937238493723849, "obj2": 0.001980726609894649}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.797071129707113, "obj2": 0.06877725099160434}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7719665271966527, "obj2": 0.07923589807742959}, {"determining": "( ( PN * ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) * ( RMSe / ( ( DS / ( ( MUC / MLU ) / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006329513687108343}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server + ACS ) * Min( ACS ,RRS ) ) ) ) ) ) / Min( MDR ,( FirstVNF_Mem + ( PN / DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) - CS ) - CS ) ,( ( ( ( Min( DS ,RMSe ) - ( ( MUR + ( RRSe * RRSe ) ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( ( ( MUC / MLU ) - ( CS * MUC ) ) / ( Max( MLU,MLU ) - ( MUR / ( MUM / CS ) ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8535564853556485, "obj2": 0.04621702487682108}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ACS ) ) - CRS ) + Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + Min( BR ,Min( FirstVNF_Mem ,MRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Min( ( RMSe / ( CS * RMSe ) ) ,( RMSe / MLU ) ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * ( MUC / MLU ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.08096293276986666}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUM / CS ) / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.8577405857740585, "obj2": 0.04588532672935762}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( MDR * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - ( MUM + ( CS * MUC ) ) ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7510460251046025, "obj2": 0.09146722990662959}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.1232919930326514}, {"determining": "( ( ( PN * ( ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( FirstVNF_CPU_Server + MRS ) - Const ),FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,MUR ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.700836820083682, "obj2": 0.11837095807519929}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( MRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( DS * MUC ) / CS ) / MUM ) / CS ) / ( CS * MUR ) ) + RRSe ) - ( RMSe * Min( CS ,CS ) ) )", "obj1": 0.7405857740585774, "obj2": 0.09612484471269177}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7928870292887029, "obj2": 0.06959349216337428}, {"determining": "( ( ( PN * ( ( Const / ( AMS * BR ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) / FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( ( RMSe / MUM ),MUM ) ) ) ) * ( ( MUM / Max( ( MUR + Max( RRSe,MUC ) ),Min( MUC ,MUC ) ) ) / MUM ) )", "obj1": 0.8786610878661087, "obj2": 0.03889422025095275}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17191182473889388}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + Min( BR ,Min( FirstVNF_Mem ,MRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( CS + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.05231265254503374}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.08973290502978824}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * ( ( MUM / MUM ) / MUM ) )", "obj1": 0.8702928870292888, "obj2": 0.04170929452713833}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUM ),MUM ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7426778242677824, "obj2": 0.09519921611134645}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) * ( ( MUM / CS ) / MUM ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7803347280334728, "obj2": 0.07498852549486636}, {"determining": "( ( Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) / ( PN * ( ACS + ( MRS + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) ) - Min( Max( FirstVNF_Mem_Server,Min( BR ,( FirstVNF_CPU - PN ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUR ,( DS - MUC ) ) * ( ( MUM / RCSe ) + ( MLU / CS ) ) ) - ( Max( MUC,DS ) / MUC ) ) - RMSe ) / CS ) - MUM ) * ( ( MUM / MUM ) / MUM ) )", "obj1": 0.8744769874476988, "obj2": 0.04013305395211882}], "24": [{"determining": "Min( ( FirstVNF_CPU_Server - DDR ) ,( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + ( Const / AMS ) ) ) )", "choosing": "Min( ( ( MUM + ( MUM - MUR ) ) + CS ) ,( MUC / ( Max( MLU,Min( ( DS + ( MUM * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( MUM / ( MUM / CS ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2566237515779489}, {"determining": "( ( ( PN * ( ACS + DDR ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / Max( RCSe,RMSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( ACS ,( ACS / MRS ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * Min( ( MUM + ( Min( Min( RRSe ,MLU ) ,DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( MUC,MUM ) ) ) ) * ( ( MUM / CS ) / MUM ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2566237515779489}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6192468619246861, "obj2": 0.1994417153177549}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.18554878193549373}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,( ( ( ( MUM / CS ) / MUM ) * ( ( MUM / CS ) / MUM ) ) * ( ( MUM / CS ) / MUM ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6464435146443515, "obj2": 0.16441526716272645}, {"determining": "Min( Max( ( ( ( PN * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * ( BR - FirstVNF_CPU_Server ) ),MDR ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,Max( ( ( ( MUC + DS ) - CS ) - ( ( RCSe / RRSe ) - Min( CS ,Min( MUC ,MUM ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - AMS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( Min( Min( RCSe ,RRSe ) ,RMSe ) ,( MUC / ( MUM / CS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.23017301722642106}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6631799163179917, "obj2": 0.15165136603569643}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) * ( ( ( MDR - ( PN - FirstVNF_Mem ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server + MDR ) ) ) + RRS ) + ( FirstVNF_RAM_Server * ( PN + ACS ) ) ) / ( Max( RRS,FirstVNF_Mem ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( RMSe ,MUC ) - ( RRSe / ( ( ( CS * MLU ) / Max( Min( RMSe ,RCSe ),( DS - CS ) ) ) + Min( CS ,RMSe ) ) ) ) * Min( RCSe ,( ( MUM + ( ( RMSe / DS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.014219762176959548}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,( ( RCSe * MLU ) - DS ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,CS ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6589958158995816, "obj2": 0.15695401392946376}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6652719665271967, "obj2": 0.1447546382799679}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9351464435146444, "obj2": 0.021301389975884162}, {"determining": "Min( Max( CRS,FirstVNF_Mem ) ,( ( BR * ARS ) - DDR ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS + DS ) ),Max( Min( MUM ,Min( MUC ,( ( MUM + MUC ) / Max( DS,RCSe ) ) ) ),( RCSe * MUC ) ) )", "obj1": 0.5899581589958159, "obj2": 0.25391689032680814}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6401673640167364, "obj2": 0.17274505142922983}, {"determining": "( ( ( PN * ( ( Max( ACS,FirstVNF_RAM ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_Mem_Server ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) - RMSe ) - ( ( MUR + MUR ) * ( Min( RRSe ,MLU ) + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUM - RCSe ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06279883416573566}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( AMS + ( ACS + FirstVNF_Mem ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.17191182473889388}, {"determining": "Min( Max( PN,FirstVNF_Mem_Server ) ,( PN - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUC * ( CS + ( MLU + ( ( MUM / ( MUC * RCSe ) ) / ( RCSe - MUC ) ) ) ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2504834597656873}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * CS ) + MUC ) ,Max( Min( MUR ,RRSe ),Max( RCSe,MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.24304602178034057}, {"determining": "( ( ( PN * ( ACS + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.6255230125523012, "obj2": 0.19462345684303103}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6820083682008368, "obj2": 0.13330526590034988}, {"determining": "( Max( ( PN * ( Min( FirstVNF_RAM ,AMS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - ( ( MDR - BR ) * DDR ) ) ) ) ),Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) * ( RMSe / ( ( DS / ( MUC / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ),MLU ) * Max( MLU,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.13047920304389976}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),Min( ( MUC / MLU ) ,( CS * MUC ) ) ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6778242677824268, "obj2": 0.13739438998768413}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUM / CS ) / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.8493723849372385, "obj2": 0.04943576799920048}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6924686192468619, "obj2": 0.12360949677136769}, {"determining": "( ( ( Max( Min( FirstVNF_RAM_Server ,Min( ARS ,( DDR / FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM * FirstVNF_CPU ) ) * ( ACS + ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) - CRS ) ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + Max( ARS,FirstVNF_CPU_Server ) ) ) - CRS ) ) ,Min( FirstVNF_Mem ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * Min( Min( CS ,MUR ) ,( Max( ( MUR + RMSe ),RRSe ) / MLU ) ) ) + MUC ) + MLU ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9079497907949791, "obj2": 0.028952072029269887}, {"determining": "( ( ( Max( ACS,( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) * PN ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + RRSe ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.017683213366800468}, {"determining": "Min( ( ACS - ( ( Min( FirstVNF_RAM ,AMS ) + ( ( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_RAM_Server ) - Const ) / Min( ( ( MRS + ARS ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,( ACS * ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( ARS * Max( FirstVNF_CPU,PN ) ) )", "choosing": "( Max( ( ( RCSe / ( ( ( MUM - RRSe ) * RCSe ) / RRSe ) ) / MUC ),RRSe ) + ( DS / RMSe ) )", "obj1": 0.600418410041841, "obj2": 0.24365307128185043}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7635983263598326, "obj2": 0.0827410551058513}, {"determining": "( ( DDR - Const ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) / Min( MDR ,ACS ) ) )", "choosing": "( ( Min( Min( RRSe ,MUM ) ,( MLU - RRSe ) ) / ( ( RMSe - ( Min( MUC ,( RRSe - Max( MUR,MLU ) ) ) - ( CS * ( RMSe * MLU ) ) ) ) - RMSe ) ) - MUC )", "obj1": 0.6715481171548117, "obj2": 0.1439805909657028}, {"determining": "( ( ( PN * ( ( DDR / RRS ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS * ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / ( Max( CS,RMSe ) * ( MUR - ( MLU / RRSe ) ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.1393875607209738}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ACS + PN ) ) + ( ( MRS * FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / Min( MDR ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "Min( ( ( Min( RCSe ,( MUR + MLU ) ) * Min( RCSe ,MUM ) ) * Min( RCSe ,RRSe ) ) ,( MUC - CS ) )", "obj1": 0.9769874476987448, "obj2": 0.008132898946376971}, {"determining": "( ( ( ( ARS / ( ACS + ACS ) ) * ( ACS + Max( ( ( FirstVNF_RAM_Server + Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,MLU ) * Max( MUM,( MUM - Min( Min( ( DS - MUM ) ,CS ) ,Min( Min( RRSe ,( RCSe + RMSe ) ) ,MUR ) ) ) ) ) * ( Min( RRSe ,MUR ) * CS ) )", "obj1": 0.9686192468619247, "obj2": 0.009900277825741995}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.1587401798742831}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + Min( MDR ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9686192468619247, "obj2": 0.009900277825741995}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ACS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MUR + MUR ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7343096234309623, "obj2": 0.09891990785742175}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + Min( BR ,Min( FirstVNF_Mem ,MRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / Min( ( ( MUM + ( CS * MUC ) ) / MUR ) ,( CS * MUC ) ) ) / MUM ) )", "obj1": 0.8430962343096234, "obj2": 0.05099451247614957}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - PN ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_RAM_Server * ( ACS + ( FirstVNF_CPU + ( CRS - Max( Max( MDR,FirstVNF_RAM ),MRS ) ) ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR - ( ( CS / ( RCSe - ( ( CS + RCSe ) + Min( RMSe ,CS ) ) ) ) / ( Min( ( MLU / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( MUM / CS ) / MUR ) ) ) ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7887029288702929, "obj2": 0.07328828958670963}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUR * Max( DS,( Min( RMSe ,( Max( RRSe,MUC ) + RMSe ) ) / RMSe ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.22214862280031122}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( MRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( DS * MUC ) / CS ) / MUM ) / CS ) / ( CS * MUR ) ) + RRSe ) - ( RMSe * Min( CS ,CS ) ) )", "obj1": 0.7405857740585774, "obj2": 0.09612484471269177}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) - ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem_Server + ACS ) * Min( ACS ,RRS ) ) ) ) ) ) / Min( MDR ,( FirstVNF_Mem + ( PN / DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) - CS ) - CS ) ,( ( ( ( Min( DS ,RMSe ) - ( ( MUR + ( RRSe * RRSe ) ) / MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( ( ( MUC / MLU ) - ( CS * MUC ) ) / ( Max( MLU,MLU ) - ( MUR / ( MUM / CS ) ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.8535564853556485, "obj2": 0.04621702487682108}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( PN + ACS ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUR + Max( RCSe,MUR ) ) ) ,MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.0658583622060588}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) / MUM ) * Max( MLU,Min( ( Min( RCSe ,MLU ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.12053147051424712}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) * ( RMSe / ( ( DS / ( ( MUC / MLU ) / RRSe ) ) - Max( ( Min( MUM ,DS ) / DS ),RMSe ) ) ) ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6213389121338913, "obj2": 0.19601740229591366}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUM,Min( CS ,RCSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8221757322175732, "obj2": 0.05856949371425522}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - ( Min( ACS ,RRS ) * ( FirstVNF_Mem_Server + ACS ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),Min( ( MUC / MLU ) ,( CS * MUC ) ) ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7092050209205021, "obj2": 0.11135340798324975}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( CRS - ( ARS + ( PN + CRS ) ) ) ) ) ) / ( MDR - ( DDR - FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) - FirstVNF_RAM ) / ACS ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( MUM ,RCSe ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( RRSe * Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.053379511326896896}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUM,Min( CS ,RCSe ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( MUM * RMSe ) ) ,MUR ) ) )", "obj1": 0.8305439330543933, "obj2": 0.05556633841433436}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8870292887029289, "obj2": 0.035687348978599744}, {"determining": "( ( BR / Const ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Min( Min( MUR ,MUR ) ,( Max( ( RMSe / RCSe ),RCSe ) / MUM ) ) * ( MLU + MUM ) ) ) * ( ( ( RMSe * ( MUC + MUC ) ) * RMSe ) - ( MUC * ( ( CS + ( Min( CS ,MUR ) + Min( RRSe ,CS ) ) ) + MUR ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.056599975137588014}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( PN - Const ) ) )", "choosing": "( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,Max( RMSe,MLU ) ) ) * Max( MUC,MUM ) )", "obj1": 0.893305439330544, "obj2": 0.03380407371378166}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + CRS ) - ( FirstVNF_RAM_Server + ( CRS - FirstVNF_Mem ) ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( PN * DDR ) ) ) ) ) / Min( MDR ,( ( Max( RRS,CRS ) - ( AMS * MDR ) ) / AMS ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Min( RRSe ,MUM ) * ( ( MUM * CS ) / MUM ) )", "obj1": 0.7594142259414226, "obj2": 0.0863658063463759}, {"determining": "( ( ( PN * ( ( Const / ( AMS * BR ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ( PN + ACS ) ) / FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,Min( ( DS + ( MLU * DS ) ) ,( DS + Max( ( RMSe / MUM ),MUM ) ) ) ) * ( ( MUM / Max( ( MUR + Max( RRSe,MUC ) ),Min( MUC ,MUC ) ) ) / MUM ) )", "obj1": 0.8786610878661087, "obj2": 0.03889422025095275}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( BR ,FirstVNF_RAM ) ) / Min( ( ( MRS - AMS ) + ( DDR - FirstVNF_RAM_Server ) ) ,Min( ( AMS + Const ) ,Max( MRS,ACS ) ) ) ) ) + ( RRS - Max( ( ( Max( MRS,CRS ) - MRS ) - AMS ),Min( CRS ,MRS ) ) ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - ( Max( ( MLU / MUC ),RMSe ) - DS ) ) ,( ( DS + MUR ) + Min( CS ,MLU ) ) )", "obj1": 0.6171548117154811, "obj2": 0.21554548284232353}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - PN ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Min( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ,Min( MUC ,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( MUR * Max( DS,( Min( RMSe ,( Max( RRSe,MUC ) + RMSe ) ) / RMSe ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.22214862280031122}, {"determining": "Min( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUC - CS ) ,( Max( MLU,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( RMSe - MLU ) ) ) * ( ( MUM / CS ) / MUM ) ) )", "obj1": 0.6108786610878661, "obj2": 0.23672742134385572}, {"determining": "( ( ( PN * ( ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( FirstVNF_CPU_Server + MRS ) - Const ),FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,MUR ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.700836820083682, "obj2": 0.11837095807519929}, {"determining": "( ( ( PN * ( ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.702928870292887, "obj2": 0.11663956163410676}, {"determining": "( ( ( PN * ( ACS + ( BR + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - ( ( PN - FirstVNF_Mem ) - MDR ) ) ) ) ) / Min( MDR ,ACS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.6359832635983264, "obj2": 0.18043023806803826}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * MRS ) ) + ( Min( Const ,FirstVNF_CPU ) + ( ( ( MRS - FirstVNF_Mem_Server ) + ( ACS + PN ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ( ACS * ( BR + Max( MDR,CRS ) ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( MLU * DS ) ) ,( Max( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) / RMSe ),MUR ) * Max( CS,RRSe ) ) ) ) * ( Max( RMSe,MUM ) - ( MLU / CS ) ) )", "obj1": 0.7175732217573222, "obj2": 0.10610013827039126}, {"determining": "( ( ( PN * ( ( Min( CRS ,ACS ) / ( FirstVNF_CPU_Server * BR ) ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / MUR ) / MUM ) * ( ( MUM / CS ) / MUM ) ) * ( ( ( MLU - MLU ) / MUC ) / MUM ) )", "obj1": 0.7740585774058577, "obj2": 0.07751101781564555}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + Min( ( FirstVNF_CPU_Server * DDR ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + Min( BR ,Min( FirstVNF_Mem ,MRS ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( ( CS + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / ( Max( MLU,MLU ) * ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.05231265254503374}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + Max( ACS,( ( MRS / MRS ) + FirstVNF_Mem_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - CS ) ,( Max( Min( MLU ,RCSe ),CS ) + MLU ) )", "obj1": 0.9539748953974896, "obj2": 0.015403265330177314}, {"determining": "Min( ( MRS - ( MRS * ( FirstVNF_CPU_Server - Const ) ) ) ,( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( CS - CS ) * CS ) + MUC ) ,Max( ( Min( ( Max( ( MLU / RRSe ),CS ) / ( ( ( MLU / RCSe ) + RRSe ) - CS ) ) ,MUR ) + ( ( MUC * ( Max( ( MUR / CS ),MUM ) / Min( MLU ,( DS + RRSe ) ) ) ) * ( MUC * DS ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2369524927119975}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7719665271966527, "obj2": 0.07923589807742959}, {"determining": "( ( ( PN * ( ACS * Min( ( FirstVNF_CPU_Server - ( PN * Min( AMS ,MRS ) ) ) ,BR ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( Max( Const,BR ) * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( ( ( DS * CS ) + MUR ) / MUR ) ) / MUM ) - RRSe ) - ( Min( CS ,CS ) * ( Min( RCSe ,( ( Min( MUM ,MUR ) / CS ) * RMSe ) ) + RRSe ) ) )", "obj1": 0.7133891213389121, "obj2": 0.10988166036811339}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUM / CS ) / CS ) / MUM ) + RRSe ) - ( ( MUM + RRSe ) / MUR ) )", "obj1": 0.895397489539749, "obj2": 0.03282145868036707}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7322175732217573, "obj2": 0.10042989134651222}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) - DDR ) ) ) ) / Min( MDR ,( RRS - MDR ) ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * Max( MLU,( Min( MUC ,( MUC / ( ( ( MUM + RRSe ) - ( DS - CS ) ) * ( ( MLU - CS ) * RCSe ) ) ) ) / CS ) ) )", "obj1": 0.7824267782426778, "obj2": 0.07446549357639284}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + Min( MDR ,FirstVNF_RAM_Server ) ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Min( ( MUM / CS ) ,( CS * MUC ) ) / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9790794979079498, "obj2": 0.006694730492726448}, {"determining": "( ( ( PN * ( ACS + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ARS ) ) - DDR ) ) ) ) ,Min( FirstVNF_Mem ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( ( RMSe / ( RCSe + DS ) ),RCSe ) ,RRSe ) * DS ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03190066140874991}, {"determining": "( ( ( PN * ( Min( ARS ,FirstVNF_CPU ) + Max( ACS,( ( MRS / MRS ) + FirstVNF_Mem_Server ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,RRSe ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.016457163144376813}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + Min( Max( MUR,( MUC - ( CS + RRSe ) ) ) ,MUC ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.10435745894233195}, {"determining": "( ( ( PN * ( ACS + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( Min( RCSe ,MUM ) - ( RCSe + MUC ) ) - ( Min( ( RMSe / ( CS * RMSe ) ) ,( RMSe / MLU ) ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) * ( MUC / MLU ) ) ) )", "obj1": 0.8158995815899581, "obj2": 0.060073044282394544}, {"determining": "( Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( PN * ( FirstVNF_Mem_Server / MDR ) ) / Max( MDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MUM + MLU ) ) ) * Max( Min( ( MUC / MLU ) ,Max( ( DS + RRSe ),RMSe ) ),MUM ) )", "obj1": 0.6861924686192469, "obj2": 0.1310280236160227}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( MLU,MLU ) * ( MUM / CS ) )", "obj1": 0.9309623430962343, "obj2": 0.022694705174992027}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( MDR * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - ( MUM + ( CS * MUC ) ) ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7510460251046025, "obj2": 0.09146722990662959}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_RAM + ACS ) ) - DDR ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM / CS ) / MUM ) * ( ( MUM / CS ) / MUM ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7782426778242678, "obj2": 0.07552035170137235}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7154811715481172, "obj2": 0.108076691100723}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( BR - ( Const * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - ( Min( ACS ,RRS ) * ( FirstVNF_Mem_Server + ACS ) ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - MUM ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / Min( CS ,CS ) ),Min( ( MUC / MLU ) ,( CS * MUC ) ) ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7280334728033473, "obj2": 0.10211328541876724}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,Min( MDR ,FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( Max( ( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / MUM ) * MUR ),Min( MUC ,MLU ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9246861924686193, "obj2": 0.02497023692687794}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7907949790794979, "obj2": 0.07033999172038644}, {"determining": "( ( ( PN * ( Min( Max( ( PN * FirstVNF_Mem ),Max( RRS,ARS ) ) ,FirstVNF_CPU ) + ( Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( ARS + ( PN + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( MLU,Min( ( DS + ( Max( MUC,( MUR - DS ) ) * DS ) ) ,( DS + ( CS / ( ( ( RMSe / DS ) * RMSe ) / RRSe ) ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.005163357246573839}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * ACS ) ,Min( ( FirstVNF_Mem_Server + BR ) ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - RMSe ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / ( RCSe / MLU ) ) ,( CS * MUC ) ) / Min( ( MUR + ( CS * RMSe ) ) ,MUR ) ) )", "obj1": 0.9267782426778243, "obj2": 0.02273511978076644}, {"determining": "( ( ( PN * ( ( FirstVNF_RAM_Server + ( ( DDR - ( MDR * ACS ) ) - MRS ) ) + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,Min( ( DS + ( Min( ( MLU + ( MUC - DS ) ) ,Min( MLU ,Min( MUM ,DS ) ) ) - ( MUM + ( CS * MUC ) ) ) ) ,( Max( ( Max( MUR,Max( RCSe,MUR ) ) / RMSe ),RRSe ) * Max( CS,RRSe ) ) ) ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7468619246861925, "obj2": 0.09242658315826623}, {"determining": "Min( ( ACS - ( ( MDR + ( ( Const * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ( MDR + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( AMS - Const ) ,Max( ACS,ACS ) ) ) ) ) + Min( Const ,AMS ) ) ) ,( FirstVNF_CPU_Server - DDR ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.9895397489539749, "obj2": 0.0032343158174315536}, {"determining": "( ( ( PN * ( ( ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - CRS ) + ( FirstVNF_Mem_Server - MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( DDR ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( Min( DS ,MUC ) / CS ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.11450034681934763}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8577405857740585, "obj2": 0.045728145801192326}, {"determining": "( ( ( PN * ( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - CRS ) + ( Min( ( FirstVNF_CPU_Server * ACS ) ,Min( ( FirstVNF_Mem_Server + BR ) ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.04247054893464288}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + FirstVNF_CPU ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.1587401798742831}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( ACS + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS - RRSe ) * ( RMSe / MUM ) ),MLU ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.694560669456067, "obj2": 0.1232919930326514}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( RMSe / MUM ) * ( ( MUM / CS ) / MUM ) )", "obj1": 0.7928870292887029, "obj2": 0.06959349216337428}, {"determining": "( ( ( ACS * ( ( PN - CRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Max( Const,DDR ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( ( MUC * Max( ( Max( RCSe,( ( MUR * RCSe ) - ( RCSe - CS ) ) ) / MUC ),MUM ) ) + RRSe ) - ( RMSe / ( Min( ( DS + DS ) ,RMSe ) + ( Min( MUC ,( ( DS - ( MUC - MUC ) ) / DS ) ) * ( RMSe - DS ) ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.0887492054695952}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - ( FirstVNF_RAM_Server + ACS ) ) ) ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) + Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( RMSe ,RMSe ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7447698744769874, "obj2": 0.09364722761388189}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7531380753138075, "obj2": 0.08973290502978824}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( Max( DS,RCSe ) + ( Min( RCSe ,RRSe ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.797071129707113, "obj2": 0.06877725099160434}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( PN + ACS ) ) - FirstVNF_RAM ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Max( ( RMSe / MUM ),MUM ) / MUM ) / CS ) / MUM ) + RRSe ) - ( Min( CS ,CS ) * RMSe ) )", "obj1": 0.7426778242677824, "obj2": 0.09519921611134645}, {"determining": "( ( ( PN * ( ACS + ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ACS ) ) - CRS ) ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( ( MUR + MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Min( ( MUM + ( ( RMSe / DS ) * RMSe ) ) ,MUR ) ) )", "obj1": 0.7573221757322176, "obj2": 0.08689896488272236}]}