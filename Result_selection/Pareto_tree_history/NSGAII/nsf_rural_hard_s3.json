{"1": [{"determining": "( Max( MRS,CRS ) - ( RRS * DDR ) )", "choosing": "Max( Max( MUR,MLU ),( MUC * CS ) )", "obj1": 0.5983263598326359, "obj2": 0.28483337112547774}, {"determining": "( Min( MRS ,( RRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,MLU ) * CS ) ,RMSe ) / ( MLU + MUC ) )", "obj1": 0.8284518828451883, "obj2": 0.12833015925013772}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( DS - CS ) )", "obj1": 0.897489539748954, "obj2": 0.09925302851049352}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( Min( ( MUM * ( CS * ( DS + CS ) ) ) ,CS ) * RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.21908776109971975}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,ARS ),( Const + DDR ) ) * ( ( MDR / ARS ) / ( PN / FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( MLU,MUR ) / DS ) ,( RMSe * ( CS * MUC ) ) )", "obj1": 0.6317991631799164, "obj2": 0.2698182979069747}, {"determining": "( Max( MRS,Const ) + ( FirstVNF_Mem_Server - BR ) )", "choosing": "( Min( ( CS + CS ) ,Max( MUC,RRSe ) ) / Max( Min( CS ,MLU ),( MLU / RCSe ) ) )", "obj1": 0.6569037656903766, "obj2": 0.2660641457281467}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 0.8556485355648535, "obj2": 0.12592665992985308}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + RRS ) * ( CRS * CRS ) ) + ( ( RRS + ARS ) + Min( CRS ,DDR ) ) ) / ( ( ( DDR / FirstVNF_RAM ) / ( ACS + ARS ) ) + ( ( CRS / PN ) / ( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( RMSe ,MUM ) - ( MUR * MLU ) ) ,( ( RCSe * CS ) * ( MUM / MUR ) ) ) / ( Min( ( RCSe - RCSe ) ,Max( MUM,RMSe ) ) / ( ( RCSe / RMSe ) + Min( MUR ,RCSe ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.07325179114997701}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( BR - ( Const - AMS ) ) )", "choosing": "Min( Min( Max( ( CS / DS ),( RCSe - RCSe ) ) ,Max( Min( MUC ,RRSe ),Min( DS ,MUM ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28614917399150097}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem ) * ( ARS / RRS ) ) + Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),( ACS / RRS ) ) - ( Max( DDR,ACS ) + ( RRS * BR ) ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( CS + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS * RRSe ),( MUC * MUC ) ) * ( Min( MUR ,DS ) / ( RMSe * MUM ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.2525460281400707}], "2": [{"determining": "( Min( MRS ,( RRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,MLU ) * CS ) ,RMSe ) / ( MLU + MUC ) )", "obj1": 0.8284518828451883, "obj2": 0.12833015925013772}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU * ( FirstVNF_RAM_Server - DDR ) ) ,Const ) / ( AMS * FirstVNF_RAM ) ) + ( ( DDR * CRS ) / FirstVNF_CPU ) )", "choosing": "Min( Min( Max( Max( RMSe,CS ),( ( CS / MUC ) - ( ( CS * ( ( MUM / MLU ) / DS ) ) - DS ) ) ) ,Max( MUM,( ( MLU * RCSe ) * ( MLU + RMSe ) ) ) ) ,( RRSe / MUR ) )", "obj1": 0.6317991631799164, "obj2": 0.2634819793371233}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) / ( CRS / BR ) ) - ( MDR / FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( Min( MUR ,MUM ),( ( MUM / MLU ) * DS ) ) + RRSe ),CS ) + MUC ) - ( Min( MUM ,CS ) - MUM ) ) / ( ( MUR - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,ARS ) - ( Max( Min( AMS ,BR ),( FirstVNF_RAM + ACS ) ) - Const ) )", "choosing": "( ( ( CS / RMSe ) * MUM ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( RRS / DDR ) )", "choosing": "Max( Max( ( ( RMSe + ( RCSe * MUC ) ) - MUC ),DS ),( MUC * CS ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( Min( Const ,ACS ) - ( CRS - PN ) ) ) - ( MDR + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR * MUR ) * RCSe ) / DS ) / ( ( Min( RRSe ,MUR ) - ( RRSe * MLU ) ) * MLU ) ) * Min( MUR ,Min( ( MUC * MLU ) ,( Min( MUR ,MUC ) / ( MUC + MUR ) ) ) ) ) / RCSe ) * ( RCSe * RCSe ) ) ,Min( MUC ,Max( ( DS * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR / Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,ACS ) * Min( Const ,MDR ) ) + DDR ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( MUR + Max( RCSe,MUM ) ) ),Min( MUC ,DS ) ) + Min( RMSe ,( ( MUM * MLU ) + ( ( MLU + ( MUM / MUR ) ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_Mem ) - ( PN * ARS ) ) * ( ACS * BR ) ) ) ) + ACS ) * Max( ( FirstVNF_RAM * AMS ),FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( ( Max( MLU,Min( DS ,( MLU / DS ) ) ) - CS ) + ( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_Mem_Server ) - Const ) )", "choosing": "( ( Max( MUR,DS ) - ( MUM + RCSe ) ) + Min( Max( Min( RMSe ,( CS * ( ( ( MLU * MUC ) * MUC ) - MUM ) ) ),RRSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / PN ) ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS * RCSe ) / Min( RRSe ,RMSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,RRS ) + BR ) - BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * MUM ) / RCSe ) ,( Min( ( ( ( MUC + ( CS - DS ) ) + Max( ( CS + MLU ),( MUR * RRSe ) ) ) * ( ( Max( MLU,CS ) * MUM ) / RMSe ) ) ,MUM ) / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,Const ) ,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) ) - ( FirstVNF_CPU + ACS ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( RMSe / MUC ) ) / ( RMSe / ( Min( Max( ( MUC - DS ),CS ) ,( MUM + MUR ) ) / ( DS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( Min( PN ,AMS ) - ( ( FirstVNF_CPU_Server / BR ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MLU ) * ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_RAM ) * Min( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ) ,Const ) ) + ( ( DDR + MRS ) / ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "Min( Min( Max( Max( ( Max( MUM,MLU ) + DS ),( ( ( Min( MLU ,MUR ) + MUR ) * MUC ) - MLU ) ),MUM ) ,Max( MUM,MUC ) ) ,MLU )", "obj1": 0.606694560669456, "obj2": 0.2730528887263763}, {"determining": "( Min( Max( Max( RRS,MRS ),( ACS * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem + ( ( ARS + ACS ) / MDR ) ) ) - ( Const / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( MUR / RRSe ) * ( MUM + CS ) ) * ( ( DS + RMSe ) * Min( ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) ,MUC ) ) ) ,( ( Min( RRSe ,RMSe ) - ( MUR * MUR ) ) / ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.2701156806065208}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * MRS ) / Min( Const ,RRS ) ) - ( DDR + ( ( ACS / ( ACS + Max( CRS,( ( RRS * FirstVNF_Mem ) + BR ) ) ) ) * ACS ) ) )", "choosing": "( ( RCSe / ( MLU - MUC ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ) ,Max( ( ( MUR * MUC ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - MUM ) ) ,Max( Max( MUC,MUC ),Max( RCSe,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + ( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ),( RRS - MRS ) )", "choosing": "Max( Max( RMSe,MUR ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,Max( Max( MUC,MUC ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( Min( ( DS + MUC ) ,DS ) ,RMSe ) / Min( ( RCSe * MUM ) ,( MUR / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( FirstVNF_CPU * MRS ) ) - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( MUM * DS ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / CRS ) ) + RRS )", "choosing": "Max( ( MLU * DS ),( Max( RMSe,DS ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) + Min( DDR ,BR ) )", "choosing": "Max( Max( Max( MUR,( ( RRSe - ( ( MUR + DS ) * DS ) ) + Min( MLU ,RCSe ) ) ),( DS / MLU ) ),( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,DS ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,ARS ) ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( ( DS - RCSe ) - ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( DS - ( RRSe + ( RCSe * RCSe ) ) ) + Max( ( MUR - DS ),( ( RMSe + RMSe ) * ( MLU / RMSe ) ) ) ) + ( ( ( MUC + CS ) - ( DS - RMSe ) ) * Max( Min( RMSe ,MUM ),( RCSe + RCSe ) ) ) )", "obj1": 0.6485355648535565, "obj2": 0.23789414708839568}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.8619246861924686, "obj2": 0.06546582278719518}, {"determining": "( Max( ARS,Max( AMS,( ( MDR - ( AMS / CRS ) ) - FirstVNF_RAM_Server ) ) ) - Max( Min( ( ARS - PN ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( MUR + MLU ) * Max( Min( ( ( Max( MUR,MUR ) / Max( RCSe,CS ) ) / ( ( RRSe * MLU ) + RCSe ) ) ,( RRSe * Min( ( MUM - CS ) ,MUC ) ) ),( ( ( RMSe + MUM ) + MUM ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Max( ( ( MUM - MUC ) / CS ),( Max( RMSe,DS ) - MUC ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( BR / ( MRS * Const ) ) ) * FirstVNF_Mem_Server ) + Min( CRS ,DDR ) )", "choosing": "Max( Max( MLU,RRSe ),Min( Max( RMSe,DS ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( MLU + RCSe ) - ( CS - MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0019856588923306074}, {"determining": "( ( ( FirstVNF_RAM_Server / PN ) / FirstVNF_Mem ) + ( Max( FirstVNF_RAM_Server,MDR ) / ( AMS - AMS ) ) )", "choosing": "Max( ( Min( MUR ,MLU ) - ( ( Min( Max( DS,MLU ) ,( MLU / MUM ) ) * Max( Max( RCSe,RCSe ),( MUC * CS ) ) ) / RMSe ) ),( Min( MUC ,RMSe ) * Max( RCSe,RCSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2666948389752401}, {"determining": "( ( ( AMS - BR ) - Min( CRS ,RRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( Min( Max( DS,MLU ) ,( MLU / MUM ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) + Max( RRS,MRS ) )", "choosing": "( ( RCSe * MUM ) * ( MLU / RMSe ) )", "obj1": 0.6443514644351465, "obj2": 0.249253560803754}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( Max( ( RMSe * RRSe ),RCSe ) * ( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7133891213389121, "obj2": 0.17050667764038516}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - ( CRS + Min( ARS ,Min( MDR ,ARS ) ) ) )", "choosing": "( CS / ( MUR + MUC ) )", "obj1": 0.6799163179916318, "obj2": 0.18411814780313193}, {"determining": "Min( ( ( MDR - FirstVNF_Mem ) + ( FirstVNF_CPU * CRS ) ) ,( Max( CRS,PN ) - ( Const * MDR ) ) )", "choosing": "Max( ( ( MUC / DS ) * Min( RMSe ,MUC ) ),( ( MUC / DS ) + Min( RMSe ,( MUC + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + FirstVNF_RAM ),( RRS * AMS ) ) * Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUR ) ,( Min( Min( ( RCSe / ( DS + MLU ) ) ,CS ) ,Min( MUC ,RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,RMSe ) - ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / BR ) * ( Min( RRS ,RRS ) / FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUM / ( MUM * MUC ) ) ,( RRSe + MUR ) ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUR ) - ( MUC + MLU ) )", "obj1": 0.8221757322175732, "obj2": 0.15601948954434378}, {"determining": "( ( PN * MRS ) * ( CRS * ( FirstVNF_RAM - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe - MUR ) + ( ( DS * DS ) - MLU ) ) ,( Min( MUC ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( ( Min( Const ,RRS ) / ( FirstVNF_CPU * MRS ) ) - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( DDR + ( Const - DDR ) ) )", "choosing": "Max( ( Min( ( MLU - ( CS + ( MUM * RRSe ) ) ) ,MUR ) / ( MUM + RMSe ) ),( ( MUC / DS ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( RRS / DDR ) )", "choosing": "Max( Max( ( ( RMSe + ( RCSe * MUC ) ) - MUC ),DS ),( MUC * CS ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) ) ) ) - ( ( CRS - PN ) / Max( MRS,Max( ( ( ACS - ( FirstVNF_RAM + MDR ) ) * ( FirstVNF_RAM_Server - MRS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MUC ) * Max( CS,MUC ) ) ) ,Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,( RMSe + ( ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) / ( ( DS - MUM ) * ( RMSe / MUR ) ) ) + ( ( RMSe - RRSe ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,DDR ) - ( RRS * DDR ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( MUC * CS ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( ( ( CS - ( MUM * Min( MUC ,Min( RMSe ,RRSe ) ) ) ) + ( MUM * Max( ( ( Max( MUC,RRSe ) / DS ) / RRSe ),MUC ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 0.7050209205020921, "obj2": 0.14361191770911463}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.07553844593830589}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - ( CRS + Min( ARS ,Min( MDR ,ARS ) ) ) )", "choosing": "( CS / ( MUR + MUC ) )", "obj1": 0.6799163179916318, "obj2": 0.18411814780313193}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.8619246861924686, "obj2": 0.06546582278719518}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.9016736401673641, "obj2": 0.04149086182945919}, {"determining": "( Const - ( Max( Max( Max( PN,FirstVNF_CPU ),FirstVNF_Mem ),Max( FirstVNF_RAM,BR ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / Max( MUM,Min( MUC ,( DS - ( ( ( MUC + DS ) - MUM ) - RRSe ) ) ) ) ) - RRSe )", "obj1": 0.9225941422594143, "obj2": 0.03478173129134755}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( RCSe + RRSe ) ) )", "obj1": 0.6610878661087866, "obj2": 0.2225298051424298}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( MUM * ( CS * RRSe ) )", "obj1": 0.9728033472803347, "obj2": 0.022782458943593303}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( ( RRSe - MUM ) + RCSe ) + RMSe ) )", "obj1": 0.6338912133891214, "obj2": 0.2571912687508851}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( Max( ( ( MUM - MUC ) / CS ),( CS - MUC ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.005444615345268969}, {"determining": "( Min( ( Min( CRS ,( ( ARS / BR ) - PN ) ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "Min( ( ( ( ( Max( Max( DS,MUC ),RCSe ) - ( MUR / MLU ) ) / MUC ) / ( MUM * MUR ) ) + MUC ) ,( RRSe / MUR ) )", "obj1": 0.9790794979079498, "obj2": 0.018715293568145233}, {"determining": "( Min( Max( Max( RRS,MRS ),( ACS * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem + ( ( ARS + ACS ) / MDR ) ) ) - ( Const / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( MUR / RRSe ) * ( MUM + CS ) ) * ( ( DS + RMSe ) * Min( ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) ,MUC ) ) ) ,( ( Min( RRSe ,RMSe ) - ( MUR * MUR ) ) / ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.2701156806065208}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 0.9937238493723849, "obj2": 0.001900695946070544}, {"determining": "( ( ( RRS * MRS ) / Min( ( MDR * FirstVNF_CPU ) ,Const ) ) + ( RRS - FirstVNF_Mem ) )", "choosing": "( Min( DS ,MUM ) * ( MLU - CS ) )", "obj1": 0.6255230125523012, "obj2": 0.2578376202954714}, {"determining": "( ( ( FirstVNF_RAM_Server / PN ) / FirstVNF_Mem ) + ( Max( FirstVNF_RAM_Server,MDR ) / ( AMS - AMS ) ) )", "choosing": "Max( ( Min( MUR ,MLU ) - ( ( Min( Max( DS,MLU ) ,( MLU / MUM ) ) * Max( Max( RCSe,RCSe ),( MUC * CS ) ) ) / RMSe ) ),( Min( MUC ,RMSe ) * Max( RCSe,RCSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2666948389752401}, {"determining": "( ( ( RRS * FirstVNF_RAM ) * Min( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ) ,Const ) ) + ( ( DDR + MRS ) / ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "Min( Min( Max( Max( ( Max( MUM,MLU ) + DS ),( ( ( Min( MLU ,MUR ) + MUR ) * MUC ) - MLU ) ),MUM ) ,Max( MUM,MUC ) ) ,MLU )", "obj1": 0.606694560669456, "obj2": 0.2730528887263763}, {"determining": "( ( ( RRS * FirstVNF_RAM ) / Min( ( ( ( Max( MRS,DDR ) - ( RRS * DDR ) ) + ( FirstVNF_Mem_Server / MDR ) ) * MDR ) ,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( CS - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.6234309623430963, "obj2": 0.26551659958110324}, {"determining": "( ( ( RRS * FirstVNF_RAM ) / Min( ( ( ( Const - Const ) + ( FirstVNF_Mem_Server / MDR ) ) * MDR ) ,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( MUM,Max( RMSe,( MLU + RRSe ) ) ) / Max( RRSe,MUC ) ) ,MLU )", "obj1": 0.606694560669456, "obj2": 0.2730528887263763}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.9748953974895398, "obj2": 0.02136914853426484}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) / ( CRS / BR ) ) - ( MDR / FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( Min( MUR ,MUM ),( ( MUM / MLU ) * DS ) ) + RRSe ),CS ) + MUC ) - ( Min( MUM ,CS ) - MUM ) ) / ( ( MUR - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,ARS ) - ( Max( Min( AMS ,BR ),( FirstVNF_RAM + ACS ) ) - Const ) )", "choosing": "( ( ( CS / RMSe ) * MUM ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( Min( Const ,ACS ) - ( CRS - PN ) ) ) - ( MDR + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR * MUR ) * RCSe ) / DS ) / ( ( Min( RRSe ,MUR ) - ( RRSe * MLU ) ) * MLU ) ) * Min( MUR ,Min( ( MUC * MLU ) ,( Min( MUR ,MUC ) / ( MUC + MUR ) ) ) ) ) / RCSe ) * ( RCSe * RCSe ) ) ,Min( MUC ,Max( ( DS * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR / Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,ACS ) * Min( Const ,MDR ) ) + DDR ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( MUR + Max( RCSe,MUM ) ) ),Min( MUC ,DS ) ) + Min( RMSe ,( ( MUM * MLU ) + ( ( MLU + ( MUM / MUR ) ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_Mem ) - ( PN * ARS ) ) * ( ACS * BR ) ) ) ) + ACS ) * Max( ( FirstVNF_RAM * AMS ),FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( ( Max( MLU,Min( DS ,( MLU / DS ) ) ) - CS ) + ( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_Mem_Server ) - Const ) )", "choosing": "( ( Max( MUR,DS ) - ( MUM + RCSe ) ) + Min( Max( Min( RMSe ,( CS * ( ( ( MLU * MUC ) * MUC ) - MUM ) ) ),RRSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / PN ) ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS * RCSe ) / Min( RRSe ,RMSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,RRS ) + BR ) - BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * MUM ) / RCSe ) ,( Min( ( ( ( MUC + ( CS - DS ) ) + Max( ( CS + MLU ),( MUR * RRSe ) ) ) * ( ( Max( MLU,CS ) * MUM ) / RMSe ) ) ,MUM ) / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,Const ) ,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) ) - ( FirstVNF_CPU + ACS ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( RMSe / MUC ) ) / ( RMSe / ( Min( Max( ( MUC - DS ),CS ) ,( MUM + MUR ) ) / ( DS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - ( ( FirstVNF_CPU_Server / BR ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MLU ) * ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * MRS ) / Min( Const ,RRS ) ) - ( DDR + ( ( ACS / ( ACS + Max( CRS,( ( RRS * FirstVNF_Mem ) + BR ) ) ) ) * ACS ) ) )", "choosing": "( ( RCSe / ( MLU - MUC ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ) ,Max( ( ( MUR * MUC ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - MUM ) ) ,Max( Max( MUC,MUC ),Max( RCSe,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + ( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ),( RRS - MRS ) )", "choosing": "Max( Max( RMSe,MUR ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,Max( Max( MUC,MUC ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( Min( ( DS + MUC ) ,DS ) ,RMSe ) / Min( ( RCSe * MUM ) ,( MUR / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( FirstVNF_CPU * MRS ) ) - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( MUM * DS ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / CRS ) ) + RRS )", "choosing": "Max( ( MLU * DS ),( Max( RMSe,DS ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) + Min( DDR ,BR ) )", "choosing": "Max( Max( Max( MUR,( ( RRSe - ( ( MUR + DS ) * DS ) ) + Min( MLU ,RCSe ) ) ),( DS / MLU ) ),( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,DS ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,ARS ) ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( ( DS - RCSe ) - ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,Max( AMS,( ( MDR - ( AMS / CRS ) ) - FirstVNF_RAM_Server ) ) ) - Max( Min( ( ARS - PN ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( MUR + MLU ) * Max( Min( ( ( Max( MUR,MUR ) / Max( RCSe,CS ) ) / ( ( RRSe * MLU ) + RCSe ) ) ,( RRSe * Min( ( MUM - CS ) ,MUC ) ) ),( ( ( RMSe + MUM ) + MUM ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Max( ( ( MUM - MUC ) / CS ),( Max( RMSe,DS ) - MUC ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( BR / ( MRS * Const ) ) ) * FirstVNF_Mem_Server ) + Min( CRS ,DDR ) )", "choosing": "Max( Max( MLU,RRSe ),Min( Max( RMSe,DS ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - BR ) - Min( CRS ,RRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( Min( Max( DS,MLU ) ,( MLU / MUM ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - FirstVNF_Mem ) + ( FirstVNF_CPU * CRS ) ) ,( Max( CRS,PN ) - ( Const * MDR ) ) )", "choosing": "Max( ( ( MUC / DS ) * Min( RMSe ,MUC ) ),( ( MUC / DS ) + Min( RMSe ,( MUC + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + FirstVNF_RAM ),( RRS * AMS ) ) * Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUR ) ,( Min( Min( ( RCSe / ( DS + MLU ) ) ,CS ) ,Min( MUC ,RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,RMSe ) - ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / BR ) * ( Min( RRS ,RRS ) / FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUM / ( MUM * MUC ) ) ,( RRSe + MUR ) ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS * ( FirstVNF_RAM - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe - MUR ) + ( ( DS * DS ) - MLU ) ) ,( Min( MUC ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( FirstVNF_CPU * MRS ) ) - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( DDR + ( Const - DDR ) ) )", "choosing": "Max( ( Min( ( MLU - ( CS + ( MUM * RRSe ) ) ) ,MUR ) / ( MUM + RMSe ) ),( ( MUC / DS ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + RRS )", "choosing": "( CS / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / CRS ) ) + RRS )", "choosing": "Max( ( MLU * DS ),( Max( RMSe,DS ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - ( CRS + Min( ARS ,Min( MDR ,ARS ) ) ) )", "choosing": "( CS / ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - ( CRS + Min( ARS ,Min( MDR ,ARS ) ) ) )", "choosing": "( CS / ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / CRS ) ) + RRS )", "choosing": "Max( ( MLU * DS ),( Max( RMSe,DS ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - ( CRS + Min( ARS ,Min( MDR ,ARS ) ) ) )", "choosing": "( CS / ( MUR + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / CRS ) ) + RRS )", "choosing": "Max( ( MLU * DS ),( Max( RMSe,DS ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( CRS + Min( ARS ,( MRS - MRS ) ) ) )", "choosing": "( ( MUR + Min( ( DS - RMSe ) ,RRSe ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( CRS - ( FirstVNF_RAM - PN ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( Min( RRSe ,MUC ) * DS ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ARS / FirstVNF_CPU_Server ) ) * ( CRS - ( FirstVNF_RAM - PN ) ) )", "choosing": "Min( ( ( RRSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS * ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUR - RMSe ) + MUC ) ,( ( RRSe / MUC ) * ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - ( CRS + Min( ARS ,Min( MDR ,ARS ) ) ) )", "choosing": "Min( ( ( MUR - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( ( RRS / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( MUR / ( ( Max( ( DS + MLU ),RMSe ) - RMSe ) / ( MUM * ( ( RMSe - RCSe ) - ( MUR - RCSe ) ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) ) ) ) - ( ( CRS - PN ) / Max( MRS,Max( ( ( ACS - ( FirstVNF_RAM + MDR ) ) * ( FirstVNF_RAM_Server - MRS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MUC ) * Max( CS,MUC ) ) ) ,Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,( RMSe + ( ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) / ( ( DS - MUM ) * ( RMSe / MUR ) ) ) + ( ( RMSe - RRSe ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,DDR ) - ( RRS * PN ) )", "choosing": "Max( Max( ( Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) ,( ( MUC + RCSe ) / MUR ) ) - MUC ),MLU ),( MUC * CS ) )", "obj1": 0.5878661087866108, "obj2": 0.29367397227392916}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( ( ( CS - ( MUM * Min( MUC ,Min( RMSe ,RRSe ) ) ) ) + ( MUM * Max( ( ( Max( MUC,RRSe ) / DS ) / RRSe ),MUC ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 0.7050209205020921, "obj2": 0.14361191770911463}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07448164757418589}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( FirstVNF_RAM + ( MRS - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6757322175732218, "obj2": 0.17765303762987017}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( RCSe + RRSe ) ) )", "obj1": 0.6610878661087866, "obj2": 0.2225298051424298}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_RAM,Const ) + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( ( MUM + MUR ) ,MLU ) ) ) ) )", "obj1": 0.8744769874476988, "obj2": 0.05310672319279902}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.8619246861924686, "obj2": 0.06546582278719518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( Max( FirstVNF_Mem,Max( ( CRS / FirstVNF_RAM_Server ),ARS ) ) * Const ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( CS / ( MUR + MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.014572250357561089}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( ( RRSe - MUM ) + RCSe ) + RMSe ) )", "obj1": 0.6380753138075314, "obj2": 0.25521759946179223}, {"determining": "( Const - ( Min( ( ARS - AMS ) ,( Min( Max( FirstVNF_CPU,( CRS / ACS ) ) ,BR ) + ( ARS - MRS ) ) ) / ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( RMSe + ( Max( Min( MUR ,Max( MUC,RCSe ) ),Max( Max( MUR,MUC ),( RCSe + DS ) ) ) + MUM ) ) * Min( MUC ,MUM ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - ( ( MUR / ( MUR - ( Min( ( MUM - ( RMSe + MUR ) ) ,( RRSe + ( MUR - RMSe ) ) ) + ( ( CS * ( RMSe / MUR ) ) - ( RRSe - MUC ) ) ) ) ) / Max( RCSe,CS ) ) )", "obj1": 0.9497907949790795, "obj2": 0.023040879133946396}, {"determining": "( Const - Max( ( ( Max( FirstVNF_CPU,DDR ) * CRS ) - PN ),( ( FirstVNF_Mem_Server / PN ) / ( MDR * ACS ) ) ) )", "choosing": "( ( RCSe - ( RCSe * ( MUC * Min( RRSe ,( ( DS + MLU ) - MLU ) ) ) ) ) - ( RMSe + RRSe ) )", "obj1": 0.897489539748954, "obj2": 0.041824674903875536}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe )", "obj1": 0.9121338912133892, "obj2": 0.031797269730013365}, {"determining": "( ( ( PN * MRS ) / ( RRS * FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem / RRS ) ) * CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe / ( Max( RCSe,( ( ( RRSe + MUC ) + ( CS + ( DS + RMSe ) ) ) / MUR ) ) - RRSe ) ) * ( ( MUR + MUR ) - ( ( DS - MUR ) * Max( MLU,CS ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.26270875155121176}, {"determining": "( ( ( ACS * Min( MRS ,FirstVNF_Mem ) ) / Const ) - ( MDR - AMS ) )", "choosing": "( Min( ( RCSe / ( MLU * Min( RMSe ,MUR ) ) ) ,( RMSe / MUC ) ) / Min( Max( MLU,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00867798574048745}, {"determining": "( Max( MRS,DDR ) - ( RRS * ( FirstVNF_Mem - RRS ) ) )", "choosing": "Max( ( RCSe / MUR ),( MUC * CS ) )", "obj1": 0.604602510460251, "obj2": 0.2774187350716304}, {"determining": "( ( ( RRS * MRS ) / Min( ( MDR * FirstVNF_CPU ) ,Const ) ) + ( RRS - FirstVNF_Mem ) )", "choosing": "( Min( DS ,MUM ) * ( MLU - CS ) )", "obj1": 0.6255230125523012, "obj2": 0.2578376202954714}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( DS - MUR ) )", "obj1": 0.9288702928870293, "obj2": 0.029020277454623346}, {"determining": "( Const - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02955999023542542}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem_Server + ( AMS * Const ) ) ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) - ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM / Min( CS ,MUC ) ) / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6527196652719666, "obj2": 0.22339694310149144}, {"determining": "( ( CRS * AMS ) - ( Const + ARS ) )", "choosing": "Max( ( MUC * ( Min( MLU ,MUM ) - ( RCSe - ( DS - MUC ) ) ) ),Max( ( CS - MUC ),MLU ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( ( ( RRS * FirstVNF_RAM ) / Min( ( ( ( Max( MRS,DDR ) - ( RRS * DDR ) ) + ( CRS - FirstVNF_RAM_Server ) ) * MDR ) ,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.6129707112970711, "obj2": 0.2693411500908179}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9414225941422594, "obj2": 0.02627004471008609}, {"determining": "( ( Min( DDR ,BR ) - ( PN / CRS ) ) - ( MDR - AMS ) )", "choosing": "( Min( ( ( MLU * ( MUC + MLU ) ) / RCSe ) ,( RMSe / MUC ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),Max( ( DS / RMSe ),( RMSe / RMSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004913604083435382}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.9016736401673641, "obj2": 0.04149086182945919}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( ( Min( Const ,RRS ) / ( FirstVNF_CPU * MRS ) ) - MDR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( Min( MUM ,RMSe ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) ) - RRSe )", "obj1": 0.9393305439330544, "obj2": 0.028947541490442933}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( ( RRSe - MUM ) + RCSe ) + RMSe ) )", "obj1": 0.6338912133891214, "obj2": 0.2571912687508851}, {"determining": "( ACS - ( Max( FirstVNF_Mem,PN ) * ( ACS * ( ACS / ( ACS + AMS ) ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( MUM * RCSe ) ,( MLU - Max( MUR,Min( RRSe ,( MLU - Min( MUC ,MLU ) ) ) ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.07292545192348664}, {"determining": "( Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server * CRS ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ( Min( FirstVNF_RAM_Server ,ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( MUM * ( CS * ( ( ( ( Max( MLU,RMSe ) * Min( ( DS - MUM ) ,MLU ) ) - RMSe ) + MUC ) * ( Min( RRSe ,MUC ) * DS ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.004320080680545636}, {"determining": "( CRS - ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( ( Max( RMSe,DS ) - ( DS / MUR ) ) / MUC ),MLU ),( ( Min( RMSe ,Max( RMSe,RRSe ) ) * DS ) * CS ) )", "obj1": 0.5941422594142259, "obj2": 0.2822451627754556}, {"determining": "( Min( Max( Max( RRS,MRS ),( ACS * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem + ( ( ARS + ACS ) / MDR ) ) ) - ( Const / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( MUR / RRSe ) * ( MUM + CS ) ) * ( ( DS + RMSe ) * Min( ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) ,MUC ) ) ) ,( ( Min( RRSe ,RMSe ) - ( MUR * MUR ) ) / ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.2701156806065208}, {"determining": "( Max( MRS,( ( ( FirstVNF_Mem + PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Min( Const ,ACS ) ) ) ) - ( RRS * DDR ) )", "choosing": "Max( Max( Min( ( Max( ( DS + RMSe ),Min( MUM ,Max( RCSe,( RCSe / CS ) ) ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ),MLU ),( MUC * CS ) )", "obj1": 0.5941422594142259, "obj2": 0.2822451627754556}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.9016736401673641, "obj2": 0.04149086182945919}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 0.9937238493723849, "obj2": 0.001900695946070544}, {"determining": "( ( ( RRS * FirstVNF_RAM ) / Min( ( ( ( Const - Const ) + ( FirstVNF_Mem_Server / MDR ) ) * MDR ) ,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( MUM,Max( RMSe,( MLU + RRSe ) ) ) / Max( RRSe,MUC ) ) ,MLU )", "obj1": 0.606694560669456, "obj2": 0.2730528887263763}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM - ( Max( ARS,CRS ) / ( MRS / ARS ) ) ) ,MDR ) / ( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( Max( MUC,DS ) * ( ( ( RRSe - MUM ) + RCSe ) - RMSe ) )", "obj1": 0.6380753138075314, "obj2": 0.25521759946179223}, {"determining": "( ( ( RRS * FirstVNF_RAM ) * Min( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ) ,Const ) ) + ( ( DDR + MRS ) / ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "Min( Min( Max( Max( ( Max( MUM,MLU ) + DS ),( ( ( Min( MLU ,MUR ) + MUR ) * MUC ) - MLU ) ),MUM ) ,Max( MUM,MUC ) ) ,MLU )", "obj1": 0.606694560669456, "obj2": 0.2730528887263763}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 0.9937238493723849, "obj2": 0.001900695946070544}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( RRS / DDR ) )", "choosing": "Max( Max( ( ( RMSe + ( RCSe * MUC ) ) - MUC ),DS ),( MUC * CS ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) / ( CRS / BR ) ) - ( MDR / FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( Min( MUR ,MUM ),( ( MUM / MLU ) * DS ) ) + RRSe ),CS ) + MUC ) - ( Min( MUM ,CS ) - MUM ) ) / ( ( MUR - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,ARS ) - ( Max( Min( AMS ,BR ),( FirstVNF_RAM + ACS ) ) - Const ) )", "choosing": "( ( ( CS / RMSe ) * MUM ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( Min( Const ,ACS ) - ( CRS - PN ) ) ) - ( MDR + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR * MUR ) * RCSe ) / DS ) / ( ( Min( RRSe ,MUR ) - ( RRSe * MLU ) ) * MLU ) ) * Min( MUR ,Min( ( MUC * MLU ) ,( Min( MUR ,MUC ) / ( MUC + MUR ) ) ) ) ) / RCSe ) * ( RCSe * RCSe ) ) ,Min( MUC ,Max( ( DS * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR / Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,ACS ) * Min( Const ,MDR ) ) + DDR ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( MUR + Max( RCSe,MUM ) ) ),Min( MUC ,DS ) ) + Min( RMSe ,( ( MUM * MLU ) + ( ( MLU + ( MUM / MUR ) ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_Mem ) - ( PN * ARS ) ) * ( ACS * BR ) ) ) ) + ACS ) * Max( ( FirstVNF_RAM * AMS ),FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( ( Max( MLU,Min( DS ,( MLU / DS ) ) ) - CS ) + ( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_Mem_Server ) - Const ) )", "choosing": "( ( Max( MUR,DS ) - ( MUM + RCSe ) ) + Min( Max( Min( RMSe ,( CS * ( ( ( MLU * MUC ) * MUC ) - MUM ) ) ),RRSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / PN ) ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS * RCSe ) / Min( RRSe ,RMSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,RRS ) + BR ) - BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * MUM ) / RCSe ) ,( Min( ( ( ( MUC + ( CS - DS ) ) + Max( ( CS + MLU ),( MUR * RRSe ) ) ) * ( ( Max( MLU,CS ) * MUM ) / RMSe ) ) ,MUM ) / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,Const ) ,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) ) - ( FirstVNF_CPU + ACS ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( RMSe / MUC ) ) / ( RMSe / ( Min( Max( ( MUC - DS ),CS ) ,( MUM + MUR ) ) / ( DS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - ( ( FirstVNF_CPU_Server / BR ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MLU ) * ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * MRS ) / Min( Const ,RRS ) ) - ( DDR + ( ( ACS / ( ACS + Max( CRS,( ( RRS * FirstVNF_Mem ) + BR ) ) ) ) * ACS ) ) )", "choosing": "( ( RCSe / ( MLU - MUC ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ) ,Max( ( ( MUR * MUC ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - MUM ) ) ,Max( Max( MUC,MUC ),Max( RCSe,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + ( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ),( RRS - MRS ) )", "choosing": "Max( Max( RMSe,MUR ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,Max( Max( MUC,MUC ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( Min( ( DS + MUC ) ,DS ) ,RMSe ) / Min( ( RCSe * MUM ) ,( MUR / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( FirstVNF_CPU * MRS ) ) - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( MUM * DS ) / Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / CRS ) ) + RRS )", "choosing": "Max( ( MLU * DS ),( Max( RMSe,DS ) - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - CRS ) + Min( DDR ,BR ) )", "choosing": "Max( Max( Max( MUR,( ( RRSe - ( ( MUR + DS ) * DS ) ) + Min( MLU ,RCSe ) ) ),( DS / MLU ) ),( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,DS ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,ARS ) ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( ( DS - RCSe ) - ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,Max( AMS,( ( MDR - ( AMS / CRS ) ) - FirstVNF_RAM_Server ) ) ) - Max( Min( ( ARS - PN ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( MUR + MLU ) * Max( Min( ( ( Max( MUR,MUR ) / Max( RCSe,CS ) ) / ( ( RRSe * MLU ) + RCSe ) ) ,( RRSe * Min( ( MUM - CS ) ,MUC ) ) ),( ( ( RMSe + MUM ) + MUM ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Max( ( ( MUM - MUC ) / CS ),( Max( RMSe,DS ) - MUC ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( BR / ( MRS * Const ) ) ) * FirstVNF_Mem_Server ) + Min( CRS ,DDR ) )", "choosing": "Max( Max( MLU,RRSe ),Min( Max( RMSe,DS ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - BR ) - Min( CRS ,RRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( Min( Max( DS,MLU ) ,( MLU / MUM ) ) * ( DS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - FirstVNF_Mem ) + ( FirstVNF_CPU * CRS ) ) ,( Max( CRS,PN ) - ( Const * MDR ) ) )", "choosing": "Max( ( ( MUC / DS ) * Min( RMSe ,MUC ) ),( ( MUC / DS ) + Min( RMSe ,( MUC + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + FirstVNF_RAM ),( RRS * AMS ) ) * Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUR ) ,( Min( Min( ( RCSe / ( DS + MLU ) ) ,CS ) ,Min( MUC ,RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,RMSe ) - ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / BR ) * ( Min( RRS ,RRS ) / FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUM / ( MUM * MUC ) ) ,( RRSe + MUR ) ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( CRS - ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( ( Max( RMSe,DS ) - ( DS / MUR ) ) / MUC ),MLU ),( ( Min( RMSe ,Max( RMSe,RRSe ) ) * DS ) * CS ) )", "obj1": 0.5836820083682008, "obj2": 0.29061012437264144}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( PN * FirstVNF_CPU ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( ( ARS - ( ( DDR + ARS ) * AMS ) ) - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( MLU / Max( MUR,Min( RRSe ,RMSe ) ) ) ,( ( RCSe + RMSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( ( RRS / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( MUR / ( ( Max( ( DS + MLU ),RMSe ) - RMSe ) / ( MUM * ( ( RMSe - RCSe ) - ( MUR - RCSe ) ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( ( Max( RMSe,DS ) - ( DS / MUR ) ) / MUC ),MLU ),( ( Min( RMSe ,Max( RMSe,RRSe ) ) * DS ) * CS ) )", "obj1": 0.5836820083682008, "obj2": 0.29061012437264144}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( CRS + DDR ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 0.7322175732217573, "obj2": 0.13207630427217049}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( FirstVNF_RAM + ( MRS - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6757322175732218, "obj2": 0.17765303762987017}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( ( ( CS - ( MUM * Min( MUC ,Min( RMSe ,RRSe ) ) ) ) + ( MUM * Max( ( ( Max( MUC,RRSe ) / DS ) / RRSe ),MUC ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 0.7050209205020921, "obj2": 0.14361191770911463}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( RCSe + RRSe ) ) )", "obj1": 0.6610878661087866, "obj2": 0.2225298051424298}, {"determining": "( ( Min( ( MDR / ARS ) ,( DDR * BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) / ( CRS * DDR ) )", "choosing": "( Max( MUM,( RRSe / RRSe ) ) * ( ( RMSe - MLU ) * RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( ( RRSe - MUM ) + RCSe ) + RMSe ) )", "obj1": 0.6380753138075314, "obj2": 0.25521759946179223}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Min( DS ,( ( ( DS + MUM ) * MUM ) + ( Min( MUC ,RRSe ) - MUR ) ) ) * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) / Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8807531380753139, "obj2": 0.043996511054852014}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( MUC * CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8430962343096234, "obj2": 0.07042377452774636}, {"determining": "( FirstVNF_RAM_Server - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( RMSe / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8535564853556485, "obj2": 0.059750290032446515}, {"determining": "( ( RRS + MRS ) - Max( Min( ( Min( BR ,Max( FirstVNF_CPU,CRS ) ) + RRS ) ,( ARS - AMS ) ),( ( MDR * ACS ) / ( FirstVNF_Mem_Server - PN ) ) ) )", "choosing": "( ( ( ( DS + CS ) * Min( ( MUM + RMSe ) ,MUC ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - RRSe )", "obj1": 0.9581589958158996, "obj2": 0.0194660168803194}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_RAM,Const ) + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( ( MUM + MUR ) ,MLU ) ) ) ) )", "obj1": 0.8744769874476988, "obj2": 0.05310672319279902}, {"determining": "( ( ( RRS * MRS ) / Min( ( MDR * FirstVNF_CPU ) ,Const ) ) + ( RRS - FirstVNF_Mem ) )", "choosing": "( Min( DS ,MUM ) * ( MLU - CS ) )", "obj1": 0.6255230125523012, "obj2": 0.2578376202954714}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.8619246861924686, "obj2": 0.058484045226287404}, {"determining": "( Const - ( Min( ( ARS - AMS ) ,( Min( Max( FirstVNF_CPU,( CRS / ACS ) ) ,BR ) + ( ARS - MRS ) ) ) / ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( RMSe + ( Max( Min( MUR ,Max( MUC,RCSe ) ),Max( Max( MUR,MUC ),( RCSe + DS ) ) ) + MUM ) ) * Min( MUC ,MUM ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - ( ( MUR / ( MUR - ( Min( ( MUM - ( RMSe + MUR ) ) ,( RRSe + ( MUR - RMSe ) ) ) + ( ( CS * ( RMSe / MUR ) ) - ( RRSe - MUC ) ) ) ) ) / Max( RCSe,CS ) ) )", "obj1": 0.9497907949790795, "obj2": 0.023040879133946396}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem_Server + ( AMS * Const ) ) ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) - ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM / Min( CS ,MUC ) ) / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6527196652719666, "obj2": 0.22339694310149144}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_RAM,Const ) + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( ( MUM + MUR ) ,MLU ) ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.05606525137994958}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Min( MUC ,RMSe ) - ( MUC * DS ) )", "obj1": 0.9100418410041841, "obj2": 0.03829046124021113}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( CS / ( MUR + MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.014572250357561089}, {"determining": "( ( ( PN * MRS ) / ( RRS * FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem / RRS ) ) * CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe / ( Max( RCSe,( ( ( RRSe + MUC ) + ( CS + ( DS + RMSe ) ) ) / MUR ) ) - RRSe ) ) * ( ( MUR + MUR ) - ( ( DS - MUR ) * Max( MLU,CS ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.26270875155121176}, {"determining": "( ( Min( DDR ,BR ) - ( PN / CRS ) ) - ( MDR - AMS ) )", "choosing": "( Min( ( ( MLU * ( MUC + MLU ) ) / RCSe ) ,( RMSe / MUC ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),Max( ( DS / RMSe ),( RMSe / RMSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004913604083435382}, {"determining": "( Const - Max( ( ( Max( FirstVNF_CPU,DDR ) * CRS ) - PN ),( ( FirstVNF_Mem_Server / PN ) / ( MDR * ACS ) ) ) )", "choosing": "( ( RCSe - ( RCSe * ( MUC * Min( RRSe ,( ( DS + MLU ) - MLU ) ) ) ) ) - ( RMSe + RRSe ) )", "obj1": 0.897489539748954, "obj2": 0.041824674903875536}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 0.9435146443514645, "obj2": 0.024345375396973207}, {"determining": "( ( ( BR * ACS ) / CRS ) - ( CRS + ( RRS + ARS ) ) )", "choosing": "Max( Max( ( ( ( ( Min( MUC ,MUR ) + MUM ) - RCSe ) / ( ( ( RMSe - DS ) - Max( CS,RMSe ) ) + RMSe ) ) - MUC ),MLU ),( Max( MUR,MLU ) - CS ) )", "obj1": 0.600418410041841, "obj2": 0.27518642646680863}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( ( RRSe - MUM ) + RCSe ) + RMSe ) )", "obj1": 0.6338912133891214, "obj2": 0.2571912687508851}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( RCSe + RRSe ) ) )", "obj1": 0.6610878661087866, "obj2": 0.2225298051424298}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( RRS / DDR ) )", "choosing": "Max( Max( ( ( RMSe + ( RCSe * MUC ) ) - MUC ),DS ),( MUC * CS ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( CRS - ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( ( Max( RMSe,DS ) - ( DS / MUR ) ) / MUC ),MLU ),( ( Min( RMSe ,Max( RMSe,RRSe ) ) * DS ) * CS ) )", "obj1": 0.5941422594142259, "obj2": 0.2822451627754556}, {"determining": "( Const - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,( ( MUR + DS ) * DS ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02955999023542542}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe )", "obj1": 0.9121338912133892, "obj2": 0.031797269730013365}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.9372384937238494, "obj2": 0.026092547913623844}, {"determining": "( FirstVNF_CPU - Min( CRS ,ACS ) )", "choosing": "( RRSe - ( Min( MUM ,RMSe ) / Min( ( Min( CS ,( RCSe - MUR ) ) - RMSe ) ,( MLU / Max( ( RMSe + RMSe ),Min( RRSe ,MLU ) ) ) ) ) )", "obj1": 0.9267782426778243, "obj2": 0.029320128777492536}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( CS / ( MUR + MUC ) )", "obj1": 0.9707112970711297, "obj2": 0.014572250357561089}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - ( ( MUR - RCSe ) * MUC ) ) - RRSe )", "obj1": 0.9037656903765691, "obj2": 0.04005739328555712}, {"determining": "( Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server * CRS ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ( Min( FirstVNF_RAM_Server ,ARS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( MUM * ( CS * ( ( ( ( Max( MLU,RMSe ) * Min( ( DS - MUM ) ,MLU ) ) - RMSe ) + MUC ) * ( Min( RRSe ,MUC ) * DS ) ) ) )", "obj1": 0.9916317991631799, "obj2": 0.004320080680545636}, {"determining": "( ( ( RRS * FirstVNF_RAM ) / Min( ( ( ( Max( MRS,DDR ) - ( RRS * DDR ) ) + ( CRS - FirstVNF_RAM_Server ) ) * MDR ) ,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.6129707112970711, "obj2": 0.2693411500908179}, {"determining": "( Min( Max( Max( RRS,MRS ),( ACS * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ARS / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem + ( ( ARS + ACS ) / MDR ) ) ) - ( Const / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( MUR / RRSe ) * ( MUM + CS ) ) * ( ( DS + RMSe ) * Min( ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) ,MUC ) ) ) ,( ( Min( RRSe ,RMSe ) - ( MUR * MUR ) ) / ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.2701156806065208}, {"determining": "( ( ( RRS * FirstVNF_RAM ) / Min( ( ( ( Const - Const ) + ( FirstVNF_Mem_Server / MDR ) ) * MDR ) ,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( MUM,Max( RMSe,( MLU + RRSe ) ) ) / Max( RRSe,MUC ) ) ,MLU )", "obj1": 0.606694560669456, "obj2": 0.2730528887263763}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM - ( Max( ARS,CRS ) / ( MRS / ARS ) ) ) ,MDR ) / ( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( Max( MUC,DS ) * ( ( ( RRSe - MUM ) + RCSe ) - RMSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2637726072927586}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.27518642646680863}, {"determining": "( Const - Max( Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_Mem ) ) - BR ) ,( FirstVNF_Mem_Server + RRS ) ),( Max( Max( ARS,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) )", "choosing": "( ( DS - Min( ( ( DS - MUR ) - ( DS - RCSe ) ) ,Min( RMSe ,RRSe ) ) ) - RRSe )", "obj1": 0.997907949790795, "obj2": 0.0007917461657012916}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( Max( FirstVNF_Mem,Max( ( CRS / FirstVNF_RAM_Server ),ARS ) ) * Const ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.00999303046008842}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00867798574048745}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( Max( FirstVNF_Mem,Max( ( CRS / FirstVNF_RAM_Server ),ARS ) ) * Const ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.00999303046008842}, {"determining": "( ( FirstVNF_Mem_Server / ( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( Max( ( DS - MUC ),MLU ),( MUC * CS ) )", "obj1": 0.9330543933054394, "obj2": 0.02635984729471078}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 0.9937238493723849, "obj2": 0.001900695946070544}, {"determining": "( ( ( ACS * Min( MRS ,FirstVNF_Mem ) ) / Const ) - ( MDR - AMS ) )", "choosing": "( Min( ( RCSe / ( MLU * Min( RMSe ,MUR ) ) ) ,( RMSe / MUC ) ) / Min( Max( MLU,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00867798574048745}, {"determining": "( Max( MRS,DDR ) - CRS )", "choosing": "Max( Max( ( ( Max( RMSe,DS ) - ( MUR / DS ) ) - MUC ),MLU ),( MUC * CS ) )", "obj1": 0.5941422594142259, "obj2": 0.2822451627754556}, {"determining": "( ( CRS * AMS ) - ( Const + ARS ) )", "choosing": "Max( ( MUC * ( Min( MLU ,MUM ) - ( RCSe - ( DS - MUC ) ) ) ),Max( ( CS - MUC ),MLU ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.897489539748954, "obj2": 0.041824674903875536}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM - ( Max( ARS,CRS ) / ( MRS / ARS ) ) ) ,MDR ) / ( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( Max( MUC,DS ) * ( ( ( RRSe - MUM ) + RCSe ) - RMSe ) )", "obj1": 0.6380753138075314, "obj2": 0.25521759946179223}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.9016736401673641, "obj2": 0.04149086182945919}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( DS - MUR ) )", "obj1": 0.9288702928870293, "obj2": 0.029020277454623346}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe )", "obj1": 0.9121338912133892, "obj2": 0.031797269730013365}, {"determining": "( ( ( RRS * FirstVNF_RAM ) * Min( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ) ,Const ) ) + ( ( DDR + MRS ) / ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "Min( Min( Max( Max( ( Max( MUM,MLU ) + DS ),( ( ( Min( MLU ,MUR ) + MUR ) * MUC ) - MLU ) ),MUM ) ,Max( MUM,MUC ) ) ,MLU )", "obj1": 0.606694560669456, "obj2": 0.2730528887263763}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( ( MUR - RCSe ) * MUC ) )", "obj1": 0.9288702928870293, "obj2": 0.029020277454623346}, {"determining": "( Const - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Max( Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ),MLU ),( MUC * CS ) )", "obj1": 0.9330543933054394, "obj2": 0.02635984729471078}, {"determining": "( Const - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02955999023542542}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( Max( FirstVNF_Mem,Max( ( CRS / FirstVNF_RAM_Server ),ARS ) ) * Const ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 0.9937238493723849, "obj2": 0.001900695946070544}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM - ( Max( ARS,CRS ) / ( MRS / ARS ) ) ) ,MDR ) / ( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( Max( MUC,DS ) * ( ( ( RRSe - MUM ) + RCSe ) - RMSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2637726072927586}, {"determining": "( ( ( RRS * FirstVNF_RAM ) / Min( ( ( ( Max( MRS,DDR ) - ( RRS * DDR ) ) + ( CRS - FirstVNF_RAM_Server ) ) * MDR ) ,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.6129707112970711, "obj2": 0.2693411500908179}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.9016736401673641, "obj2": 0.04149086182945919}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) ) ) ) - ( ( CRS - PN ) / Max( MRS,Max( ( ( ACS - ( FirstVNF_RAM + MDR ) ) * ( FirstVNF_RAM_Server - MRS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MUC ) * Max( CS,MUC ) ) ) ,Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,( RMSe + ( ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) / ( ( DS - MUM ) * ( RMSe / MUR ) ) ) + ( ( RMSe - RRSe ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) / ( CRS / BR ) ) - ( MDR / FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( Min( MUR ,MUM ),( ( MUM / MLU ) * DS ) ) + RRSe ),CS ) + MUC ) - ( Min( MUM ,CS ) - MUM ) ) / ( ( MUR - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,ARS ) - ( Max( Min( AMS ,BR ),( FirstVNF_RAM + ACS ) ) - Const ) )", "choosing": "( ( ( CS / RMSe ) * MUM ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( Min( Const ,ACS ) - ( CRS - PN ) ) ) - ( MDR + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR * MUR ) * RCSe ) / DS ) / ( ( Min( RRSe ,MUR ) - ( RRSe * MLU ) ) * MLU ) ) * Min( MUR ,Min( ( MUC * MLU ) ,( Min( MUR ,MUC ) / ( MUC + MUR ) ) ) ) ) / RCSe ) * ( RCSe * RCSe ) ) ,Min( MUC ,Max( ( DS * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR / Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,ACS ) * Min( Const ,MDR ) ) + DDR ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( MUR + Max( RCSe,MUM ) ) ),Min( MUC ,DS ) ) + Min( RMSe ,( ( MUM * MLU ) + ( ( MLU + ( MUM / MUR ) ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_Mem ) - ( PN * ARS ) ) * ( ACS * BR ) ) ) ) + ACS ) * Max( ( FirstVNF_RAM * AMS ),FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( ( Max( MLU,Min( DS ,( MLU / DS ) ) ) - CS ) + ( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_Mem_Server ) - Const ) )", "choosing": "( ( Max( MUR,DS ) - ( MUM + RCSe ) ) + Min( Max( Min( RMSe ,( CS * ( ( ( MLU * MUC ) * MUC ) - MUM ) ) ),RRSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / PN ) ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS * RCSe ) / Min( RRSe ,RMSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,RRS ) + BR ) - BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * MUM ) / RCSe ) ,( Min( ( ( ( MUC + ( CS - DS ) ) + Max( ( CS + MLU ),( MUR * RRSe ) ) ) * ( ( Max( MLU,CS ) * MUM ) / RMSe ) ) ,MUM ) / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,Const ) ,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) ) - ( FirstVNF_CPU + ACS ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( RMSe / MUC ) ) / ( RMSe / ( Min( Max( ( MUC - DS ),CS ) ,( MUM + MUR ) ) / ( DS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - ( ( FirstVNF_CPU_Server / BR ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MLU ) * ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( CRS - ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( ( Max( RMSe,DS ) - ( DS / MUR ) ) / MUC ),MLU ),( ( Min( RMSe ,Max( RMSe,RRSe ) ) * DS ) * CS ) )", "obj1": 0.5836820083682008, "obj2": 0.29061012437264144}, {"determining": "( Min( ACS ,MRS ) - Max( Max( FirstVNF_Mem_Server,BR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - ( MUM * ( RRSe * ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - MUM ) ) ) + RRSe ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( PN * FirstVNF_CPU ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( ( ARS - ( ( DDR + ARS ) * AMS ) ) - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( MLU / Max( MUR,Min( RRSe ,RMSe ) ) ) ,( ( RCSe + RMSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( ( Max( RMSe,DS ) - ( DS / MUR ) ) / MUC ),MLU ),( ( Min( RMSe ,Max( RMSe,RRSe ) ) * DS ) * CS ) )", "obj1": 0.5836820083682008, "obj2": 0.29061012437264144}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.11087248676150893}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( FirstVNF_RAM + ( MRS - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6757322175732218, "obj2": 0.17765303762987017}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( CRS + DDR ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 0.7322175732217573, "obj2": 0.13207630427217049}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( ( ( CS - ( MUM * Min( MUC ,Min( RMSe ,RRSe ) ) ) ) + ( MUM * Max( ( ( Max( MUC,RRSe ) / DS ) / RRSe ),MUC ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 0.7050209205020921, "obj2": 0.14361191770911463}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * ( Max( Max( RRS,MRS ),( ACS * ARS ) ) - ( Max( FirstVNF_Mem,( ACS / MDR ) ) - ( ARS / FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( CS - DS ) ) ) * ( ( Min( Min( Max( ( CS - MUM ),MUR ) ,Min( Max( MUM,MUC ) ,MUC ) ) ,MUR ) * Min( MLU ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.24999451518417135}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( RCSe + RRSe ) ) )", "obj1": 0.6610878661087866, "obj2": 0.2225298051424298}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( Min( FirstVNF_RAM ,MDR ) + ( MDR * PN ) ) ) / ( FirstVNF_Mem / ARS ) )", "choosing": "( ( MLU - ( RRSe + RMSe ) ) * ( RMSe + RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ( Min( ( FirstVNF_CPU / ( ( BR + MDR ) * ACS ) ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_RAM * RRS ),( FirstVNF_CPU * ( RRS * Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RRSe ,Min( Max( DS,( RRSe * MUM ) ) ,Min( RRSe ,MUC ) ) ) * RCSe ) ) * ( ( ( RRSe - MUM ) + RCSe ) + Min( RRSe ,( Min( DS ,MUR ) + RCSe ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2535636792112383}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06778644786902054}, {"determining": "( FirstVNF_RAM_Server - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( RMSe / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8535564853556485, "obj2": 0.059750290032446515}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.26589862813026693}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_RAM,Const ) + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( ( MUM + MUR ) ,MLU ) ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.05606525137994958}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM - ( Max( ARS,CRS ) / ( MRS / ARS ) ) ) ,MDR ) / ( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( Max( MUC,DS ) * ( ( ( RRSe - MUM ) + RCSe ) - RMSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2637726072927586}, {"determining": "( Const - Max( ( ( Max( FirstVNF_CPU,DDR ) * CRS ) - PN ),( ( FirstVNF_Mem_Server / PN ) / ( MDR * ACS ) ) ) )", "choosing": "( ( RCSe - ( RCSe * ( MUC * Min( RRSe ,( ( DS + MLU ) - MLU ) ) ) ) ) - ( RMSe + RRSe ) )", "obj1": 0.897489539748954, "obj2": 0.041824674903875536}, {"determining": "( FirstVNF_RAM_Server - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( RMSe / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05831586380997673}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS - ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( ( Max( RMSe,DS ) - ( DS / MUR ) ) / MUC ) )", "obj1": 0.5941422594142259, "obj2": 0.2802401498311205}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - Max( ( CRS - ( CRS / FirstVNF_RAM_Server ) ),Min( Const ,ACS ) ) ) ) ) + ( FirstVNF_CPU / CRS ) )", "choosing": "Min( ( Max( MLU,( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) - MUC ) ) / Min( MUR ,DS ) ) ,MLU )", "obj1": 0.9016736401673641, "obj2": 0.03662083960936855}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( FirstVNF_CPU_Server + ( ARS / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( CS + MUR ),( MUC * CS ) )", "obj1": 0.604602510460251, "obj2": 0.27467859437972997}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8828451882845189, "obj2": 0.0432601790739456}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( ( MUR - RCSe ) * MUC ) )", "obj1": 0.9309623430962343, "obj2": 0.027847954088452507}, {"determining": "( Const - Max( ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03579531863912275}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem_Server + ( AMS * Const ) ) ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) - ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM / Min( CS ,MUC ) ) / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6527196652719666, "obj2": 0.22339694310149144}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_CPU_Server,AMS ) * AMS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe / Max( RMSe,( ( RMSe * MLU ) + RRSe ) ) ) / RMSe ) * MUR )", "obj1": 0.8723849372384938, "obj2": 0.049062683158232916}, {"determining": "( ( FirstVNF_CPU * PN ) - Max( CRS,( ARS + ( Max( BR,( ACS * FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( Min( DS ,( RCSe - ( DS / ( MUM * ( Max( MUM,MUM ) / RMSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.028918482851730595}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,( CRS / ACS ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( CS * ( RMSe * ( MUM / RMSe ) ) ) * ( MUR + RRSe ) )", "obj1": 0.9497907949790795, "obj2": 0.02230189475949848}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 0.9644351464435147, "obj2": 0.017739272002744066}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( RMSe + DS ) * Min( ( MUR + MUC ) ,MUC ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - RRSe )", "obj1": 0.9581589958158996, "obj2": 0.019309856718512753}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe / MUC ) ) / Min( ( MUM / MUR ) ,( RCSe + RRSe ) ) )", "obj1": 0.6610878661087866, "obj2": 0.2225298051424298}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( MUC * CS ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( Const - Max( ( ( FirstVNF_CPU * CRS ) - PN ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) / ( RMSe - RRSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * ( ( Min( CS ,RRSe ) * ( RRSe + CS ) ) - ( Max( MUC,MUR ) - ( MLU - RMSe ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.01455948947137741}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( Const - Max( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( CS / MUC )", "obj1": 0.9728033472803347, "obj2": 0.013516350048936272}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( CRS / Max( MDR,BR ) ) - ( CRS + ( RRS - ARS ) ) )", "choosing": "Max( Max( MLU,( DS - MUR ) ),( ( CS - CS ) / Min( ( MUM * RCSe ) ,( MLU / Max( MUR,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.27518642646680863}, {"determining": "( ACS - Min( Max( FirstVNF_Mem_Server,BR ) ,( ( ( Max( FirstVNF_RAM,Const ) + AMS ) / ACS ) * ACS ) ) )", "choosing": "( ( DS - Min( ( Min( ( RMSe - ( ( MUM + RMSe ) - MUR ) ) ,CS ) * DS ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe )", "obj1": 0.8786610878661087, "obj2": 0.04688749635447068}, {"determining": "( ( FirstVNF_CPU_Server - AMS ) - Max( PN,BR ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * ( MLU - MUR ) ) ,( RCSe / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004671341725851396}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,( CRS / ACS ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( RMSe + DS ) * Min( MUC ,MUM ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - ( ( MUR / ( MUR - ( Min( ( MUM - ( RMSe + MUR ) ) ,Min( RRSe ,( MUR - RMSe ) ) ) + ( ( CS * ( RMSe / MUR ) ) - ( RRSe - MUC ) ) ) ) ) / Max( RCSe,CS ) ) )", "obj1": 0.9393305439330544, "obj2": 0.025270541904611272}, {"determining": "( ACS - ( ( ACS + Min( Max( FirstVNF_CPU,FirstVNF_CPU ) ,MDR ) ) + ( ACS * ( Min( AMS ,Max( ACS,BR ) ) * ACS ) ) ) )", "choosing": "( ( ( MUR * ( RCSe - ( MUC * ( RCSe + Max( DS,RRSe ) ) ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( Max( MUR,Min( MUC ,MLU ) ) / MLU ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( Const - Max( Min( ( Min( FirstVNF_CPU_Server ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( Min( RRS ,AMS ) + FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02941137899589368}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( RRS / DDR ) )", "choosing": "Max( Max( ( ( RMSe + ( RCSe * MUC ) ) - MUC ),DS ),( MUC * CS ) )", "obj1": 0.5899581589958159, "obj2": 0.2830513990748432}, {"determining": "( MRS - Max( ( Const - MRS ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - Min( ( CS / RMSe ) ,( ( ( DS / MUR ) - CS ) / RCSe ) ) ) - RRSe )", "obj1": 0.9121338912133892, "obj2": 0.031797269730013365}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.2232796472649026}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( ( RRSe - MUM ) + RCSe ) + RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.047180927740301665}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8807531380753139, "obj2": 0.04364056196573218}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,( CRS / ACS ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( RMSe + DS ) * Min( MUC ,MUM ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - ( ( MUR / ( MUR - ( Min( ( MUM - ( RMSe + MUR ) ) ,Min( RRSe ,( MUR - RMSe ) ) ) + ( ( CS * ( RMSe / MUR ) ) - ( RRSe - MUC ) ) ) ) ) / Max( RCSe,CS ) ) )", "obj1": 0.9456066945606695, "obj2": 0.022316069519804475}, {"determining": "( Min( ( PN / FirstVNF_CPU ) ,Min( ( AMS / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,( ACS - Const ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( Max( FirstVNF_Mem,Max( ( CRS / PN ),ARS ) ) * Const ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) * ( ( MUM - Max( ( RRSe * MUR ),MUC ) ) * ( ( MUR - RCSe ) * MUC ) ) )", "obj1": 0.9790794979079498, "obj2": 0.008054626284284641}, {"determining": "( Const - Max( Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( MUC / ( DS - ( RCSe - ( DS - MUC ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006706781592803545}, {"determining": "( Const - Max( Min( ( Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( CS / RMSe ) / MUR ) )", "obj1": 0.9602510460251046, "obj2": 0.01845681422461426}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,CRS ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Min( ( Max( ( Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9351464435146444, "obj2": 0.02604619293505843}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( MRS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - Min( ARS ,( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.9769874476987448, "obj2": 0.00999303046008842}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 0.9435146443514645, "obj2": 0.024345375396973207}, {"determining": "( ( ( BR * ACS ) / CRS ) - ( CRS + ( RRS + ARS ) ) )", "choosing": "Max( Max( ( ( ( ( Min( MUC ,MUR ) + MUM ) - RCSe ) / ( ( ( RMSe - DS ) - Max( CS,RMSe ) ) + RMSe ) ) - MUC ),MLU ),( Max( MUR,MLU ) - CS ) )", "obj1": 0.600418410041841, "obj2": 0.27518642646680863}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( Max( FirstVNF_Mem,Max( ( CRS / FirstVNF_RAM_Server ),ARS ) ) * Const ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.00999303046008842}, {"determining": "( ( Min( ( DDR + RRS ) ,BR ) - FirstVNF_CPU ) - Max( MDR,AMS ) )", "choosing": "Max( Max( CS,( ( RMSe + ( RCSe * MUC ) ) - ( RRSe + ( ( Min( MLU ,Max( MUC,DS ) ) - MUM ) + DS ) ) ) ),( MUC * CS ) )", "obj1": 0.9832635983263598, "obj2": 0.006365842890893488}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( Max( FirstVNF_Mem,Max( ( CRS / FirstVNF_RAM_Server ),ARS ) ) * Const ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( Max( ( CS * MUC ),( MUR * MUM ) ) * ( MLU / ( CS + MLU ) ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 0.9811715481171548, "obj2": 0.006596291691331912}, {"determining": "( ( Min( ( MDR / ARS ) ,( DDR * BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) / ( CRS * DDR ) )", "choosing": "( Max( MUM,( RRSe / RRSe ) ) * ( ( RMSe - MLU ) * RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - RRSe )", "obj1": 0.897489539748954, "obj2": 0.041824674903875536}, {"determining": "( ( MRS - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - Min( Const ,( Max( FirstVNF_CPU,BR ) - ACS ) ) )", "choosing": "( ( DS / RCSe ) / Min( DS ,MUR ) )", "obj1": 0.9937238493723849, "obj2": 0.001900695946070544}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( ( MLU - MUC ) + RCSe ) / Min( DS ,CS ) )", "obj1": 0.9937238493723849, "obj2": 0.001900695946070544}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe )", "obj1": 0.9121338912133892, "obj2": 0.031797269730013365}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM - ( Max( ARS,CRS ) / ( MRS / ARS ) ) ) ,MDR ) / ( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( Max( MUC,DS ) * ( ( ( RRSe - MUM ) + RCSe ) - RMSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2637726072927586}, {"determining": "( Const - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Max( Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( CS,MUC ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ),MLU ),( MUC * CS ) )", "obj1": 0.9330543933054394, "obj2": 0.02635984729471078}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( CRS + RRS ) ),( ( MDR * ACS ) / Min( ARS ,Max( FirstVNF_RAM_Server,MDR ) ) ) ) )", "choosing": "Min( ( ( MUC + RCSe ) / MUR ) ,( ( ( RMSe + RMSe ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( RCSe / ( MUM * RRSe ) ) ),RCSe ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.024345375396973207}, {"determining": "( ( FirstVNF_Mem_Server / ( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( Max( ( DS - MUC ),MLU ),( MUC * CS ) )", "obj1": 0.9330543933054394, "obj2": 0.02635984729471078}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( ( RRS / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( MUR / ( ( Max( ( DS + MLU ),RMSe ) - RMSe ) / ( MUM * ( ( RMSe - RCSe ) - ( MUR - RCSe ) ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) ) ) ) - ( ( CRS - PN ) / Max( MRS,Max( ( ( ACS - ( FirstVNF_RAM + MDR ) ) * ( FirstVNF_RAM_Server - MRS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MUC ) * Max( CS,MUC ) ) ) ,Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,( RMSe + ( ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) / ( ( DS - MUM ) * ( RMSe / MUR ) ) ) + ( ( RMSe - RRSe ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) / ( CRS / BR ) ) - ( MDR / FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( Min( MUR ,MUM ),( ( MUM / MLU ) * DS ) ) + RRSe ),CS ) + MUC ) - ( Min( MUM ,CS ) - MUM ) ) / ( ( MUR - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,ARS ) - ( Max( Min( AMS ,BR ),( FirstVNF_RAM + ACS ) ) - Const ) )", "choosing": "( ( ( CS / RMSe ) * MUM ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( Min( Const ,ACS ) - ( CRS - PN ) ) ) - ( MDR + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR * MUR ) * RCSe ) / DS ) / ( ( Min( RRSe ,MUR ) - ( RRSe * MLU ) ) * MLU ) ) * Min( MUR ,Min( ( MUC * MLU ) ,( Min( MUR ,MUC ) / ( MUC + MUR ) ) ) ) ) / RCSe ) * ( RCSe * RCSe ) ) ,Min( MUC ,Max( ( DS * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR / Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,ACS ) * Min( Const ,MDR ) ) + DDR ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( MUR + Max( RCSe,MUM ) ) ),Min( MUC ,DS ) ) + Min( RMSe ,( ( MUM * MLU ) + ( ( MLU + ( MUM / MUR ) ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_Mem ) - ( PN * ARS ) ) * ( ACS * BR ) ) ) ) + ACS ) * Max( ( FirstVNF_RAM * AMS ),FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( ( Max( MLU,Min( DS ,( MLU / DS ) ) ) - CS ) + ( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_Mem_Server ) - Const ) )", "choosing": "( ( Max( MUR,DS ) - ( MUM + RCSe ) ) + Min( Max( Min( RMSe ,( CS * ( ( ( MLU * MUC ) * MUC ) - MUM ) ) ),RRSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / PN ) ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS * RCSe ) / Min( RRSe ,RMSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,RRS ) + BR ) - BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * MUM ) / RCSe ) ,( Min( ( ( ( MUC + ( CS - DS ) ) + Max( ( CS + MLU ),( MUR * RRSe ) ) ) * ( ( Max( MLU,CS ) * MUM ) / RMSe ) ) ,MUM ) / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,Const ) ,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) ) - ( FirstVNF_CPU + ACS ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( RMSe / MUC ) ) / ( RMSe / ( Min( Max( ( MUC - DS ),CS ) ,( MUM + MUR ) ) / ( DS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - ( ( FirstVNF_CPU_Server / BR ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MLU ) * ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Const ) - ( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( Min( ( RMSe * ( Max( CS,RMSe ) - Max( MLU,MUC ) ) ) ,MUC ),( MLU + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( ( Min( PN ,MDR ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( ( Const - ( BR + MRS ) ) ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * ( ( ( RRSe / ( Min( MLU ,RCSe ) - RRSe ) ) - MUM ) * RRSe ) ) ) ,( ( CS / RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,MRS ) - Max( Max( FirstVNF_Mem_Server,BR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - ( MUM * ( RRSe * ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - MUM ) ) ) + RRSe ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( FirstVNF_Mem_Server + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( DS - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.28062214526696394}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( FirstVNF_RAM + ( MRS - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6757322175732218, "obj2": 0.17765303762987017}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( ( ( CS - ( MUM * Min( MUC ,Min( RMSe ,RRSe ) ) ) ) + ( MUM * Max( ( ( Max( MUC,RRSe ) / DS ) / RRSe ),MUC ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 0.7050209205020921, "obj2": 0.14361191770911463}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( CRS + DDR ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 0.7322175732217573, "obj2": 0.13207630427217049}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.11266114932665934}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - Max( ( CS - MUC ),MLU ) )", "obj1": 0.797071129707113, "obj2": 0.09203124168567073}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * ( Max( Max( RRS,MRS ),( ACS * ARS ) ) - ( Max( FirstVNF_Mem,( ACS / MDR ) ) - ( ARS / FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( CS - DS ) ) ) * ( ( Min( Min( Max( ( CS - MUM ),MUR ) ,Min( Max( MUM,MUC ) ,MUC ) ) ,MUR ) * Min( MLU ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.24999451518417135}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - ( ACS / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Max( CS,MUC ),Min( CS ,RMSe ) ),( MUC * CS ) )", "obj1": 0.7887029288702929, "obj2": 0.09766458909734697}, {"determining": "( ( Min( ( FirstVNF_CPU / ( ( BR + MDR ) * ACS ) ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_RAM * RRS ),( FirstVNF_CPU * ( RRS * Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RRSe ,Min( Max( DS,( RRSe * MUM ) ) ,Min( RRSe ,MUC ) ) ) * RCSe ) ) * ( ( ( RRSe - MUM ) + RCSe ) + Min( RRSe ,( Min( DS ,MUR ) + RCSe ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2535636792112383}, {"determining": "( ( Min( ( MDR / ARS ) ,( DDR * BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) / ( CRS * DDR ) )", "choosing": "( Max( MUM,( RRSe / RRSe ) ) * ( ( RMSe - MLU ) * RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06778644786902054}, {"determining": "( ( ( PN + DDR ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( RCSe - CS ) / Min( ( RCSe * MUM ) ,( Max( ( ( DS / MUM ) / ( DS * ( CS - RMSe ) ) ),CS ) + Min( RRSe ,( RMSe - ( Min( ( RMSe - RRSe ) ,DS ) * Max( MUM,( MUM - MUM ) ) ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05401764933671236}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.11087248676150893}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.8493723849372385, "obj2": 0.061736126707671604}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM - ( Max( ARS,CRS ) / ( MRS / ARS ) ) ) ,MDR ) / ( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( Max( MUC,DS ) * ( ( ( RRSe - MUM ) + RCSe ) - RMSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2637726072927586}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( Min( FirstVNF_RAM ,MDR ) + ( MDR * PN ) ) ) / ( FirstVNF_Mem / ARS ) )", "choosing": "( ( MLU - ( RRSe + RMSe ) ) * ( RMSe + RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ACS - ( DDR + Max( CRS,RRS ) ) )", "choosing": "( Max( DS,Min( ( CS / RMSe ) ,( Max( MUR,Min( Min( DS ,MLU ) ,Max( MUM,( MUC + MUC ) ) ) ) / RCSe ) ) ) - RRSe )", "obj1": 0.8891213389121339, "obj2": 0.04099931120325698}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.26589862813026693}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( Max( AMS,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,Max( Max( ARS,PN ),( BR * FirstVNF_CPU ) ) ) ) + RRS ) ),( ( MDR * CRS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( CS * ( RMSe * ( MUM / RMSe ) ) ) * ( MUR + ( MLU / ( MUR * MUM ) ) ) )", "obj1": 0.9309623430962343, "obj2": 0.027403760807436155}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9476987447698745, "obj2": 0.018869059296330787}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS - ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( ( Max( RMSe,DS ) - ( DS / MUR ) ) / MUC ) )", "obj1": 0.5941422594142259, "obj2": 0.2802401498311205}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.897489539748954, "obj2": 0.03780877823530959}, {"determining": "( ( FirstVNF_CPU * PN ) - Max( CRS,( ARS + ( Max( BR,( ACS * FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( Min( DS ,( RCSe - ( DS / ( MUM * ( Max( MUM,MUM ) / RMSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.028918482851730595}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_CPU_Server,AMS ) * AMS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe / Max( RMSe,( ( RMSe * MLU ) + RRSe ) ) ) / RMSe ) * MUR )", "obj1": 0.8723849372384938, "obj2": 0.049062683158232916}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( FirstVNF_CPU_Server + ( ARS / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( CS + MUR ),( MUC * CS ) )", "obj1": 0.604602510460251, "obj2": 0.27467859437972997}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( DS ,DS ) ) * ( CS / ( MLU + ( ( Max( MUM,MLU ) - MUR ) - MUM ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.025052891682820305}, {"determining": "( Const - Max( Min( ( Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( CS / RMSe ) / MUR ) )", "obj1": 0.9602510460251046, "obj2": 0.01845681422461426}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.0063318413962237365}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 0.9435146443514645, "obj2": 0.024345375396973207}, {"determining": "( Const - Max( Min( ( ARS - Max( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MRS ),ARS ) ) ,( CRS + RRS ) ),Max( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ),( ( MDR * ACS ) / Max( PN,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + RCSe ) / MUR ) ,( ( ( RMSe + ( CS / MUC ) ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * ( RCSe - ( RMSe - ( RCSe / ( Min( MUR ,CS ) * RRSe ) ) ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.01575329282668686}, {"determining": "( ACS - ( DDR + Max( ( ( FirstVNF_CPU * CRS ) - PN ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( ( RMSe - RRSe ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.05874726596760015}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,( CRS / ACS ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( RMSe + DS ) * Min( MUC ,MUM ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - ( ( MUR / ( MUR - ( Min( ( MUM - ( RMSe + MUR ) ) ,Min( RRSe ,( MUR - RMSe ) ) ) + ( ( CS * ( RMSe / MUR ) ) - ( RRSe - MUC ) ) ) ) ) / Max( RCSe,CS ) ) )", "obj1": 0.9456066945606695, "obj2": 0.022316069519804475}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8828451882845189, "obj2": 0.0432601790739456}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - Max( ( CRS - ( CRS / FirstVNF_RAM_Server ) ),Min( Const ,ACS ) ) ) ) ) + ( FirstVNF_CPU / CRS ) )", "choosing": "Min( ( Max( MLU,( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) - MUC ) ) / Min( MUR ,DS ) ) ,MLU )", "obj1": 0.9016736401673641, "obj2": 0.03662083960936855}, {"determining": "( ( ( BR * ACS ) / CRS ) - ( CRS + ( RRS + ARS ) ) )", "choosing": "Max( Max( ( ( ( ( Min( MUC ,MUR ) + MUM ) - RCSe ) / ( ( ( RMSe - DS ) - Max( CS,RMSe ) ) + RMSe ) ) - MUC ),MLU ),( Max( MUR,MLU ) - CS ) )", "obj1": 0.600418410041841, "obj2": 0.27518642646680863}, {"determining": "( ACS - Min( Max( FirstVNF_Mem_Server,BR ) ,( ( ( Max( FirstVNF_RAM,Const ) + AMS ) / ACS ) * ACS ) ) )", "choosing": "( ( DS - Min( ( Min( ( RMSe - ( ( MUM + RMSe ) - MUR ) ) ,CS ) * DS ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe )", "obj1": 0.8786610878661087, "obj2": 0.04688749635447068}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.11087248676150893}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9016736401673641, "obj2": 0.03662083960936855}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( MRS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - Min( ARS ,( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.9769874476987448, "obj2": 0.00999303046008842}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8807531380753139, "obj2": 0.04364056196573218}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8723849372384938, "obj2": 0.049062683158232916}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,( CRS / Max( AMS,FirstVNF_RAM_Server ) ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( CS * ( Min( Min( DS ,MUC ) ,MUR ) * ( MUM / RMSe ) ) ) * ( MUR + RRSe ) )", "obj1": 0.9686192468619247, "obj2": 0.015388986443420691}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( MDR,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * MRS ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( Max( FirstVNF_Mem,Max( ( CRS / FirstVNF_RAM_Server ),ARS ) ) * Const ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( ( MUM * MLU ) + ( ( MLU + ( MUM * MUR ) ) * RMSe ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.00999303046008842}, {"determining": "( Const - Max( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( CS / MUC )", "obj1": 0.9728033472803347, "obj2": 0.013516350048936272}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.047123155733605135}, {"determining": "( ( CRS / Max( MDR,BR ) ) - ( CRS + ( RRS - ARS ) ) )", "choosing": "Max( Max( MLU,( DS - MUR ) ),( ( CS - CS ) / Min( ( MUM * RCSe ) ,( MLU / Max( MUR,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.27518642646680863}, {"determining": "( Const - Max( Min( ( Min( FirstVNF_CPU_Server ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( Min( RRS ,AMS ) + FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02941137899589368}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( ACS + AMS ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( ( Max( RMSe,Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) ) - ( DS / MUR ) ) / MUC ) )", "obj1": 0.5941422594142259, "obj2": 0.2802401498311205}, {"determining": "( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) ) ) - Max( Min( ( AMS - Min( MDR ,ARS ) ) ,Min( FirstVNF_CPU_Server ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( MUC / Max( MUM,Max( Min( CS ,CS ),DS ) ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.004660282952116675}, {"determining": "( ( FirstVNF_CPU_Server - AMS ) - Max( PN,BR ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * ( MLU - MUR ) ) ,( RCSe / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004671341725851396}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( Max( RRS,( FirstVNF_Mem * FirstVNF_Mem ) ),BR ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( MUM,Max( MUC,RCSe ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( Const - Max( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( CS / MUC )", "obj1": 0.9728033472803347, "obj2": 0.013516350048936272}, {"determining": "( FirstVNF_RAM_Server - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( RMSe / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8535564853556485, "obj2": 0.059750290032446515}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * DDR ) / Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( RMSe - MUM ) + RCSe ) - Max( RRSe,MUR ) ) * ( MLU / RCSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2637726072927586}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.26589862813026693}, {"determining": "( Const - Max( Min( ( ( FirstVNF_RAM_Server * PN ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02941137899589368}, {"determining": "( Const - Max( Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( MUC / ( DS - ( RCSe - ( DS - MUC ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006706781592803545}, {"determining": "( FirstVNF_RAM_Server - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( RMSe / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8535564853556485, "obj2": 0.059750290032446515}, {"determining": "( ( CRS * PN ) - ARS )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + Min( DS ,MLU ) ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( CS / RMSe ) / MUR ) )", "obj1": 0.9602510460251046, "obj2": 0.01845681422461426}, {"determining": "( ( FirstVNF_CPU - Min( ACS ,( Max( FirstVNF_CPU_Server,RRS ) * ( ( RRS / FirstVNF_CPU_Server ) + ( Max( ( Const * ARS ),Max( MDR,FirstVNF_Mem ) ) * BR ) ) ) ) ) - ( MDR - AMS ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( MUC * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( ( Min( ( RRSe + RCSe ) ,MUC ) * MUR ) / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004671341725851396}, {"determining": "( Const - Max( Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( MUC / ( DS - ( RCSe - ( DS - MUC ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006706781592803545}, {"determining": "( Const - Max( ( ( FirstVNF_CPU * CRS ) - PN ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) / ( RMSe - RRSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * ( ( Min( CS ,RRSe ) * ( RRSe + CS ) ) - ( Max( MUC,MUR ) - ( MLU - RMSe ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.01455948947137741}, {"determining": "( Const - Max( Min( ( Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) / ( RMSe - RRSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * ( ( Min( CS ,RRSe ) * ( RRSe + CS ) ) - ( Max( MUC,MUR ) - ( MLU - RMSe ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.01455948947137741}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( CRS + RRS ) ),( ( MDR * ACS ) / Min( ARS ,Max( FirstVNF_RAM_Server,MDR ) ) ) ) )", "choosing": "Min( ( ( MUC + RCSe ) / MUR ) ,( ( ( RMSe + RMSe ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( RCSe / ( MUM * RRSe ) ) ),RCSe ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.024345375396973207}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( MUC * CS ) )", "obj1": 0.604602510460251, "obj2": 0.27467859437972997}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.047123155733605135}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( PN * FirstVNF_CPU ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( ( ARS - ( ( DDR + ARS ) * AMS ) ) - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( MLU / Max( MUR,Min( RRSe ,RMSe ) ) ) ,( ( RCSe + RMSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( ( RRS / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( MUR / ( ( Max( ( DS + MLU ),RMSe ) - RMSe ) / ( MUM * ( ( RMSe - RCSe ) - ( MUR - RCSe ) ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) ) ) ) - ( ( CRS - PN ) / Max( MRS,Max( ( ( ACS - ( FirstVNF_RAM + MDR ) ) * ( FirstVNF_RAM_Server - MRS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MUC ) * Max( CS,MUC ) ) ) ,Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,( RMSe + ( ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) / ( ( DS - MUM ) * ( RMSe / MUR ) ) ) + ( ( RMSe - RRSe ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) / ( CRS / BR ) ) - ( MDR / FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( Min( MUR ,MUM ),( ( MUM / MLU ) * DS ) ) + RRSe ),CS ) + MUC ) - ( Min( MUM ,CS ) - MUM ) ) / ( ( MUR - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,ARS ) - ( Max( Min( AMS ,BR ),( FirstVNF_RAM + ACS ) ) - Const ) )", "choosing": "( ( ( CS / RMSe ) * MUM ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( Min( Const ,ACS ) - ( CRS - PN ) ) ) - ( MDR + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR * MUR ) * RCSe ) / DS ) / ( ( Min( RRSe ,MUR ) - ( RRSe * MLU ) ) * MLU ) ) * Min( MUR ,Min( ( MUC * MLU ) ,( Min( MUR ,MUC ) / ( MUC + MUR ) ) ) ) ) / RCSe ) * ( RCSe * RCSe ) ) ,Min( MUC ,Max( ( DS * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR / Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,ACS ) * Min( Const ,MDR ) ) + DDR ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( MUR + Max( RCSe,MUM ) ) ),Min( MUC ,DS ) ) + Min( RMSe ,( ( MUM * MLU ) + ( ( MLU + ( MUM / MUR ) ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_Mem ) - ( PN * ARS ) ) * ( ACS * BR ) ) ) ) + ACS ) * Max( ( FirstVNF_RAM * AMS ),FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( ( Max( MLU,Min( DS ,( MLU / DS ) ) ) - CS ) + ( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_Mem_Server ) - Const ) )", "choosing": "( ( Max( MUR,DS ) - ( MUM + RCSe ) ) + Min( Max( Min( RMSe ,( CS * ( ( ( MLU * MUC ) * MUC ) - MUM ) ) ),RRSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / PN ) ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS * RCSe ) / Min( RRSe ,RMSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,RRS ) + BR ) - BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * MUM ) / RCSe ) ,( Min( ( ( ( MUC + ( CS - DS ) ) + Max( ( CS + MLU ),( MUR * RRSe ) ) ) * ( ( Max( MLU,CS ) * MUM ) / RMSe ) ) ,MUM ) / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ACS - ( FirstVNF_Mem_Server + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( DS - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.28062214526696394}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( PN ,MDR ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( ( Const - ( BR + MRS ) ) ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * ( ( ( RRSe / ( Min( MLU ,RCSe ) - RRSe ) ) - MUM ) * RRSe ) ) ) ,( ( CS / RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( FirstVNF_Mem_Server + ( ( Max( FirstVNF_CPU,( ( ACS + FirstVNF_RAM ) - RRS ) ) / FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.28062214526696394}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( ( ( CS - ( MUM * Min( MUC ,Min( RMSe ,RRSe ) ) ) ) + ( MUM * Max( ( ( Max( MUC,RRSe ) / DS ) / RRSe ),MUC ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 0.7050209205020921, "obj2": 0.14361191770911463}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) )", "obj1": 0.7322175732217573, "obj2": 0.12497721433781143}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( FirstVNF_RAM + ( MRS - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6757322175732218, "obj2": 0.17765303762987017}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( Max( RMSe,( MUC - MUM ) ),( CS * ( MUM / MUC ) ) ) + RRSe ) * MUM ) / Max( DS,( DS + ( DS * DS ) ) ) ) * MUR )", "obj1": 0.7594142259414226, "obj2": 0.10982633867717713}, {"determining": "( ( Min( ( FirstVNF_CPU / Min( Min( Const ,MDR ) ,FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - Min( CRS ,MDR ) ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) )", "choosing": "( ( CS - ( RMSe / CS ) ) * RMSe )", "obj1": 0.6338912133891214, "obj2": 0.24816465536443508}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( DS ,DS ) ) * ( CS / ( MLU + ( ( ( Max( MUR,MLU ) - CS ) - MUR ) - MUM ) ) ) )", "obj1": 0.6652719665271967, "obj2": 0.2089984244764326}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR + ( MRS - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( MLU / RMSe ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6736401673640168, "obj2": 0.19213492861717443}, {"determining": "( ACS - ( DDR + ( ( Max( PN,( ( CRS - MRS ) + MDR ) ) / ( Min( FirstVNF_RAM ,( CRS / CRS ) ) + AMS ) ) * ACS ) ) )", "choosing": "( ( ( Max( DS,MUR ) - ( ( RRSe + MLU ) / DS ) ) + Min( Max( ( ( RMSe - MUR ) - Max( Min( RCSe ,Min( MUM ,MUR ) ),DS ) ),RRSe ) ,MUM ) ) - RRSe )", "obj1": 0.7656903765690377, "obj2": 0.10048565440693667}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - DDR ) ,( RRS + RRS ) ),( ( ACS * MDR ) / ( DDR / ( FirstVNF_Mem_Server / MDR ) ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( CS / MUM ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) * RMSe ) ) * ( ( MUM + RMSe ) * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.08211929060625034}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - ( ACS / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Max( CS,MUC ),Min( CS ,RMSe ) ),( MUC * CS ) )", "obj1": 0.7887029288702929, "obj2": 0.09766458909734697}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ( DDR + ( Min( ( Const * DDR ) ,Min( AMS ,DDR ) ) * ACS ) ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( ( CS - RCSe ) / Min( ( ( Max( DS,RCSe ) / Min( RCSe ,DS ) ) * RRSe ) ,( Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,Min( MUC ,( RMSe / MUM ) ) ) ) ) / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( Const ,( PN - FirstVNF_CPU ) ) ) ) - MDR ) - Max( Min( FirstVNF_Mem ,AMS ),FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * ( ( CS + MUR ) + Min( Min( Min( ( DS * MUR ) ,DS ) ,Max( ( ( MUC / ( MUC - MUR ) ) / MUR ),MUC ) ) ,Min( Min( ( ( RMSe / DS ) * Max( ( MUC / MLU ),( RRSe - RRSe ) ) ) ,( RRSe + MUC ) ) ,Min( CS ,( MUR + CS ) ) ) ) ) )", "obj1": 0.899581589958159, "obj2": 0.03304385000854811}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06778644786902054}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - Max( ( CS - MUC ),MLU ) )", "obj1": 0.797071129707113, "obj2": 0.09203124168567073}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( DDR * PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) - MRS ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( ( ( MLU - RCSe ) + Max( DS,MUR ) ) + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5899581589958159, "obj2": 0.279054226669685}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( DDR / RRS ) / DDR ) )", "choosing": "( ( ( MUC / RMSe ) * ( RRSe / ( ( MUR + DS ) * ( ( ( MUC + RMSe ) / DS ) / CS ) ) ) ) / Min( CS ,( RRSe + RCSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01204152811908803}, {"determining": "( ( Min( ( MDR / ARS ) ,( DDR * BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) / ( CRS * DDR ) )", "choosing": "( Max( MUM,( RRSe / RRSe ) ) * ( ( RMSe - MLU ) * RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "Max( Const,Max( Min( ( ( FirstVNF_RAM_Server * PN ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.6234309623430963, "obj2": 0.2528346848652394}, {"determining": "( Max( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ),( ( Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ( MRS / AMS ) )", "choosing": "( Max( ( MLU * ( Max( ( DS + ( ( MUM / DS ) / Min( RCSe ,RRSe ) ) ),( CS - ( ( CS * MUR ) * ( CS / MUR ) ) ) ) + RRSe ) ),Min( CS ,( ( MUM * MUM ) + RMSe ) ) ) / ( RMSe - ( Max( MUC,MLU ) - CS ) ) )", "obj1": 0.9560669456066946, "obj2": 0.016355587961709658}, {"determining": "( ACS - ( DDR + Max( ( ( FirstVNF_CPU * CRS ) - PN ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( ( RMSe - RRSe ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.05874726596760015}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8619246861924686, "obj2": 0.05319156593202539}, {"determining": "( ( Min( ( FirstVNF_CPU / Min( Min( Const ,MDR ) ,FirstVNF_Mem ) ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( CS * ( RMSe * ( MUM / RMSe ) ) ) ) * ( ( ( RRSe - MUM ) + RCSe ) + RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2535636792112383}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( Max( AMS,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,Max( Max( ARS,PN ),( BR * FirstVNF_CPU ) ) ) ) + RRS ) ),( ( MDR * CRS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( CS * ( RMSe * ( MUM / RMSe ) ) ) * ( MUR + ( MLU / ( MUR * MUM ) ) ) )", "obj1": 0.9309623430962343, "obj2": 0.027403760807436155}, {"determining": "( ( Min( Max( AMS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM - ( Max( ARS,CRS ) / ( MRS / ARS ) ) ) ,MDR ) / ( FirstVNF_RAM * RRS ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( Max( MUC,DS ) * ( ( ( RRSe - MUM ) + RCSe ) - RMSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2637726072927586}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.799163179916318, "obj2": 0.08588688342449421}, {"determining": "( ( FirstVNF_CPU * PN ) - Max( CRS,( ARS + ( Max( BR,( ACS * FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( Min( DS ,( RCSe - ( DS / ( MUM * ( Max( MUM,MUM ) / RMSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.028918482851730595}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.26589862813026693}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( FirstVNF_CPU_Server + ( ARS / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( CS + MUR ),( MUC * CS ) )", "obj1": 0.604602510460251, "obj2": 0.27467859437972997}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8828451882845189, "obj2": 0.0432601790739456}, {"determining": "( ( ( PN + DDR ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( RCSe - CS ) / Min( ( RCSe * MUM ) ,( Max( ( ( DS / MUM ) / ( DS * ( CS - RMSe ) ) ),CS ) + Min( RRSe ,( RMSe - ( Min( ( RMSe - RRSe ) ,DS ) * Max( MUM,( MUM - MUM ) ) ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05401764933671236}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9476987447698745, "obj2": 0.018869059296330787}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_CPU_Server,AMS ) * AMS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe / Max( RMSe,( ( RMSe * MLU ) + RRSe ) ) ) / RMSe ) * MUR )", "obj1": 0.8723849372384938, "obj2": 0.049062683158232916}, {"determining": "( Const - Max( Min( ( FirstVNF_Mem + AMS ) ,( CRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,Min( Max( MUR,CS ) ,RCSe ) ) ) - ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.9163179916317992, "obj2": 0.029362274413446632}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 0.9372384937238494, "obj2": 0.02435679398582072}, {"determining": "( ACS - ( DDR + ( ( ( CRS - ( ACS + AMS ) ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * MUM ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6108786610878661, "obj2": 0.2649370447942121}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04649687857728186}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_RAM,Const ) + AMS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS - Min( ( CS / DS ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe )", "obj1": 0.9435146443514645, "obj2": 0.023619551400102103}, {"determining": "( ( ( BR * ACS ) / CRS ) - ( CRS + ( RRS + ARS ) ) )", "choosing": "Max( Max( ( ( ( ( Min( MUC ,MUR ) + MUM ) - RCSe ) / ( ( ( RMSe - DS ) - Max( CS,RMSe ) ) + RMSe ) ) - MUC ),MLU ),( Max( MUR,MLU ) - CS ) )", "obj1": 0.600418410041841, "obj2": 0.27518642646680863}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8807531380753139, "obj2": 0.04364056196573218}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.0063318413962237365}, {"determining": "( ( Max( Min( DDR ,BR ),FirstVNF_CPU ) - ( MDR - ( Max( ( MRS / ( FirstVNF_Mem_Server - ( BR * FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / ( Max( FirstVNF_CPU,RRS ) + DDR ) ) )", "choosing": "( ( Min( RMSe ,MUC ) / Max( DS,DS ) ) * ( CS / ( ( MUR - ( ( RCSe * ( RMSe * MLU ) ) - MUM ) ) + ( MUM / ( RMSe - ( RRSe - MLU ) ) ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.024763947041231967}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07146233956151199}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.0063318413962237365}, {"determining": "( ( CRS / Max( MDR,BR ) ) - ( CRS + ( RRS - ARS ) ) )", "choosing": "Max( Max( MLU,( DS - MUR ) ),( ( CS - CS ) / Min( ( MUM * RCSe ) ,( MLU / Max( MUR,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.27518642646680863}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( FirstVNF_CPU / DDR ) + Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( MLU - RRSe ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,( RRSe - ( ( ( MLU - ( ( ( DS / DS ) - RMSe ) * MUR ) ) - CS ) / MUR ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( DDR + ( ( ACS / ( RRS + ( MRS - FirstVNF_CPU_Server ) ) ) * ACS ) ) - ACS )", "choosing": "( ( RMSe + DS ) * MUR )", "obj1": 0.8723849372384938, "obj2": 0.049062683158232916}, {"determining": "( ( FirstVNF_CPU_Server - AMS ) - Max( PN,BR ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * ( MLU - MUR ) ) ,( RCSe / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004671341725851396}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,( CRS / ACS ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( RMSe + DS ) * Min( MUC ,MUM ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - ( ( MUR / ( MUR - ( Min( ( MUM - ( RMSe + MUR ) ) ,Min( RRSe ,( MUR - RMSe ) ) ) + ( ( CS * ( RMSe / MUR ) ) - ( RRSe - MUC ) ) ) ) ) / Max( RCSe,CS ) ) )", "obj1": 0.9456066945606695, "obj2": 0.022316069519804475}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ( ( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) + ( CRS / ( MDR - FirstVNF_Mem ) ) )", "choosing": "Min( Max( Max( Min( MUR ,( CS + Max( MUM,RMSe ) ) ),Min( MUM ,( ( MUM * CS ) + MLU ) ) ),RRSe ) ,MLU )", "obj1": 0.9874476987447699, "obj2": 0.003792511340577818}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( Max( RRS,( FirstVNF_Mem * FirstVNF_Mem ) ),BR ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( MUM,Max( MUC,RCSe ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9476987447698745, "obj2": 0.018869059296330787}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.047123155733605135}, {"determining": "( ( FirstVNF_CPU - Min( ACS ,( Max( FirstVNF_CPU_Server,RRS ) * ( ( RRS / FirstVNF_CPU_Server ) + ( Max( ( Const * ARS ),Max( MDR,FirstVNF_Mem ) ) * BR ) ) ) ) ) - ( MDR - AMS ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( MUC * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( ( Min( ( RRSe + RCSe ) ,MUC ) * MUR ) / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004671341725851396}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( BR ,Max( FirstVNF_CPU,( CRS / ACS ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( ( ( RMSe + DS ) * Min( MUC ,MUM ) ) * ( ( CS + DS ) * Max( CS,MUC ) ) ) - ( ( MUR / ( MUR - ( Min( ( MUM - ( RMSe + MUR ) ) ,Min( RRSe ,( MUR - RMSe ) ) ) + ( ( CS * ( RMSe / MUR ) ) - ( RRSe - MUC ) ) ) ) ) / Max( RCSe,CS ) ) )", "obj1": 0.9456066945606695, "obj2": 0.022316069519804475}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * DDR ) / Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( ( RMSe - MUM ) + RCSe ) - Max( RRSe,MUR ) ) * ( MLU / RCSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2637726072927586}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.26589862813026693}, {"determining": "( ( Min( ( FirstVNF_CPU / ( ( BR + MDR ) * ACS ) ) ,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_RAM * RRS ),( FirstVNF_CPU * ( RRS * Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) / ( FirstVNF_CPU + DDR ) )", "choosing": "( ( MLU / ( Min( RRSe ,Min( Max( DS,( RRSe * MUM ) ) ,Min( RRSe ,MUC ) ) ) * RCSe ) ) * ( ( ( RRSe - MUM ) + RCSe ) + Min( RRSe ,( Min( DS ,MUR ) + RCSe ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2535636792112383}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.047123155733605135}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( Max( ( CS - MUC ),MLU ),( MUC * CS ) )", "obj1": 0.604602510460251, "obj2": 0.27467859437972997}, {"determining": "( Min( ACS ,MRS ) - Max( Max( FirstVNF_Mem_Server,BR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - ( MUM * ( RRSe * ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - MUM ) ) ) + RRSe ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( PN * FirstVNF_CPU ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( ( ARS - ( ( DDR + ARS ) * AMS ) ) - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( MLU / Max( MUR,Min( RRSe ,RMSe ) ) ) ,( ( RCSe + RMSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( ( RRS / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( MUR / ( ( Max( ( DS + MLU ),RMSe ) - RMSe ) / ( MUM * ( ( RMSe - RCSe ) - ( MUR - RCSe ) ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) ) ) ) - ( ( CRS - PN ) / Max( MRS,Max( ( ( ACS - ( FirstVNF_RAM + MDR ) ) * ( FirstVNF_RAM_Server - MRS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MUC ) * Max( CS,MUC ) ) ) ,Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,( RMSe + ( ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) / ( ( DS - MUM ) * ( RMSe / MUR ) ) ) + ( ( RMSe - RRSe ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) / ( CRS / BR ) ) - ( MDR / FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( Min( MUR ,MUM ),( ( MUM / MLU ) * DS ) ) + RRSe ),CS ) + MUC ) - ( Min( MUM ,CS ) - MUM ) ) / ( ( MUR - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,ARS ) - ( Max( Min( AMS ,BR ),( FirstVNF_RAM + ACS ) ) - Const ) )", "choosing": "( ( ( CS / RMSe ) * MUM ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - ( Min( Const ,ACS ) - ( CRS - PN ) ) ) - ( MDR + FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MUR * MUR ) * RCSe ) / DS ) / ( ( Min( RRSe ,MUR ) - ( RRSe * MLU ) ) * MLU ) ) * Min( MUR ,Min( ( MUC * MLU ) ,( Min( MUR ,MUC ) / ( MUC + MUR ) ) ) ) ) / RCSe ) * ( RCSe * RCSe ) ) ,Min( MUC ,Max( ( DS * MUR ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR / Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,ACS ) * Min( Const ,MDR ) ) + DDR ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( MUR + Max( RCSe,MUM ) ) ),Min( MUC ,DS ) ) + Min( RMSe ,( ( MUM * MLU ) + ( ( MLU + ( MUM / MUR ) ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_Mem ) - ( PN * ARS ) ) * ( ACS * BR ) ) ) ) + ACS ) * Max( ( FirstVNF_RAM * AMS ),FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( ( Max( MLU,Min( DS ,( MLU / DS ) ) ) - CS ) + ( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_Mem_Server ) - Const ) )", "choosing": "( ( Max( MUR,DS ) - ( MUM + RCSe ) ) + Min( Max( Min( RMSe ,( CS * ( ( ( MLU * MUC ) * MUC ) - MUM ) ) ),RRSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / PN ) ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( CS * RCSe ) / Min( RRSe ,RMSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,RRS ) + BR ) - BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * MUM ) / RCSe ) ,( Min( ( ( ( MUC + ( CS - DS ) ) + Max( ( CS + MLU ),( MUR * RRSe ) ) ) * ( ( Max( MLU,CS ) * MUM ) / RMSe ) ) ,MUM ) / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Max( MDR,FirstVNF_RAM ),Const ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - RRS ) ) - BR ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ACS - ( FirstVNF_Mem_Server + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( DS - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.28062214526696394}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - ( ACS / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Max( CS,MUC ),Min( CS ,RMSe ) ),( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( FirstVNF_Mem_Server + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( DS - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.28062214526696394}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.14773959775228324}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( FirstVNF_RAM + ( MRS - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6757322175732218, "obj2": 0.17765303762987017}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( Min( DDR ,BR ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + Min( DS ,MUC ) ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6506276150627615, "obj2": 0.1934344428470853}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) )", "obj1": 0.7322175732217573, "obj2": 0.12497721433781143}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7154811715481172, "obj2": 0.13484747962626667}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( MLU + ( ( Min( MUR ,DS ) - MUR ) - ( MUC * MUM ) ) ) ) )", "obj1": 0.7426778242677824, "obj2": 0.11318289850394896}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( Max( MUM,( RRSe / RRSe ) ) * ( RMSe + RMSe ) )", "obj1": 0.6150627615062761, "obj2": 0.25888916686442803}, {"determining": "( ACS - ( DDR + ( ( Const / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,MUR ) )", "obj1": 0.6589958158995816, "obj2": 0.17861275528635767}, {"determining": "( ACS - ( DDR + ( ( Max( PN,( ( CRS - MRS ) + MDR ) ) / ( Min( FirstVNF_RAM ,( CRS / CRS ) ) + AMS ) ) * ACS ) ) )", "choosing": "( ( ( Max( DS,MUR ) - ( ( RRSe + MLU ) / DS ) ) + Min( Max( ( ( RMSe - MUR ) - Max( Min( RCSe ,Min( MUM ,MUR ) ),DS ) ),RRSe ) ,MUM ) ) - RRSe )", "obj1": 0.7803347280334728, "obj2": 0.09740813623596305}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.22738982447292894}, {"determining": "( ( FirstVNF_Mem_Server / CRS ) - ( CRS + ( ARS + ARS ) ) )", "choosing": "Max( ( ( CS - ( MUM * Min( MUC ,Min( RMSe ,RRSe ) ) ) ) + ( MUM * Max( ( ( Max( MUC,RRSe ) / DS ) / RRSe ),MUC ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 0.7050209205020921, "obj2": 0.14361191770911463}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.23628584180291476}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( MUR * Min( ( MUC + RMSe ) ,MLU ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.8138075313807531, "obj2": 0.07647866674496383}, {"determining": "( ACS - ( MDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( RMSe * ( MUM / RMSe ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.27120413205358795}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - Max( ( CS - MUC ),MLU ) )", "obj1": 0.797071129707113, "obj2": 0.09203124168567073}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.7615062761506276, "obj2": 0.0999284184710108}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5899581589958159, "obj2": 0.279054226669685}, {"determining": "( ( DDR + ( Min( ( Const * DDR ) ,Min( AMS ,DDR ) ) * ACS ) ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( ( CS - RCSe ) / Min( ( ( Max( DS,RCSe ) / Min( RCSe ,DS ) ) * RRSe ) ,( Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,Min( MUC ,( RMSe / MUM ) ) ) ) ) / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server + AMS ) ) * Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) )", "choosing": "( MUM * MUR )", "obj1": 0.7573221757322176, "obj2": 0.10807387376114792}, {"determining": "( Min( ( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( ( MUM / MUC ),DS ) ) ) ) ) )", "obj1": 0.9309623430962343, "obj2": 0.027179894468712565}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.04317698376080622}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + Max( ( ( ( FirstVNF_Mem_Server + DDR ) * DDR ) * FirstVNF_CPU ),PN ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MUC / Max( Min( MUM ,CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.021563302192583816}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( DDR * ( BR - FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) + ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( ( CS - CS ) / Min( ( MUR * MUM ) ,( MLU / Min( ( CS + RRSe ) ,MLU ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8514644351464435, "obj2": 0.056573532315721715}, {"determining": "( Max( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ),( ( Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ( MRS / AMS ) )", "choosing": "( Max( ( MLU * ( Max( ( DS + ( ( MUM / DS ) / Min( RCSe ,RRSe ) ) ),( CS - ( ( CS * MUR ) * ( CS / MUR ) ) ) ) + RRSe ) ),Min( CS ,( ( MUM * MUM ) + RMSe ) ) ) / ( RMSe - ( Max( MUC,MLU ) - CS ) ) )", "obj1": 0.9560669456066946, "obj2": 0.016355587961709658}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06778644786902054}, {"determining": "( ( ACS / ( ACS + AMS ) ) - Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.799163179916318, "obj2": 0.08588688342449421}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / MDR ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( MUC + ( MLU / RMSe ) ) / MUR ) )", "obj1": 0.9456066945606695, "obj2": 0.021077755744001274}, {"determining": "( ( Max( PN,( ( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,( ( BR * PN ) / ( DDR / Const ) ) ) ) + Min( BR ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) + ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + CS ) - ( DS + CS ) ) / ( ( RRSe / ( RMSe + MUM ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.08211929060625034}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.897489539748954, "obj2": 0.033450642058391274}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( DDR / RRS ) / DDR ) )", "choosing": "( ( ( MUC / RMSe ) * ( RRSe / ( ( MUR + DS ) * ( ( ( MUC + RMSe ) / DS ) / CS ) ) ) ) / Min( CS ,( RRSe + RCSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01204152811908803}, {"determining": "( ( FirstVNF_CPU * PN ) - Max( CRS,( ARS + ( Max( BR,( ACS * FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( Min( DS ,( RCSe - ( DS / ( MUM * ( Max( MUM,MUM ) / RMSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.028918482851730595}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9476987447698745, "obj2": 0.018831334317401766}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.06859467497981867}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ( ( Min( BR ,DDR ) - ( ( CRS * ( ( CRS + FirstVNF_Mem ) - ARS ) ) * ( ARS - FirstVNF_CPU_Server ) ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Max( ( RMSe / CS ),( ( CS + ( RMSe / RCSe ) ) * RRSe ) ) / ( ( RRSe * DS ) - ( CS - RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05186049582037395}, {"determining": "( ( ( PN + DDR ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( RCSe - CS ) / Min( ( RCSe * MUM ) ,( Max( ( ( DS / MUM ) / ( DS * ( CS - RMSe ) ) ),CS ) + Min( RRSe ,( RMSe - ( Min( ( RMSe - RRSe ) ,DS ) * Max( MUM,( MUM - MUM ) ) ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05401764933671236}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.23628584180291476}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( DDR * PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) - MRS ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( ( ( MLU - RCSe ) + Max( DS,MUR ) ) + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ACS - ( Max( ( MDR * BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Max( ( ( MDR * ACS ) / ACS ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( Max( RMSe,( DS * RCSe ) ),( RMSe * ( MUC / MUM ) ) ) + RRSe ) * MUM ) / Max( DS,MLU ) ) * MUR )", "obj1": 0.8347280334728033, "obj2": 0.06849180841632502}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ACS - ( DDR + ( ( ( CRS - ( ACS + AMS ) ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * MUM ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6108786610878661, "obj2": 0.2649370447942121}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ACS - ( DDR + ( ( Max( PN,( ( CRS - MRS ) + MDR ) ) / ( Min( FirstVNF_RAM ,( CRS / CRS ) ) + AMS ) ) * ACS ) ) )", "choosing": "( ( ( Max( DS,MUR ) - ( ( RRSe + MLU ) / DS ) ) + Min( Max( ( ( RMSe - MUR ) - Max( Min( RCSe ,Min( MUM ,MUR ) ),DS ) ),RRSe ) ,MUM ) ) - RRSe )", "obj1": 0.7594142259414226, "obj2": 0.10711270529029891}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04649687857728186}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( BR + FirstVNF_CPU_Server ) ) * ACS ) + DDR ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.26589862813026693}, {"determining": "( ACS - ( DDR + ( ( ACS / ( Max( FirstVNF_CPU_Server,AMS ) * AMS ) ) * ACS ) ) )", "choosing": "( ( ( RCSe / Max( RMSe,( ( RMSe * MLU ) + RRSe ) ) ) / RMSe ) * MUR )", "obj1": 0.8723849372384938, "obj2": 0.049062683158232916}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( PN + Max( ( BR / ARS ),MDR ) ) / Const ) )", "choosing": "( ( MLU / RMSe ) * Max( DS,( ( MLU - ( RCSe - ( Min( ( RCSe * RCSe ) ,RRSe ) / MUC ) ) ) * RRSe ) ) )", "obj1": 0.899581589958159, "obj2": 0.03304385000854811}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012626935022234142}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - DDR ) ,( RRS + RRS ) ),( ( ACS * MDR ) / ( DDR / ( FirstVNF_Mem_Server / MDR ) ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( CS / MUM ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) * RMSe ) ) * ( ( MUM + RMSe ) * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.08211929060625034}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.26589862813026693}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ACS - ( DDR + ( ( ACS / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8619246861924686, "obj2": 0.05319156593202539}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( Min( ( MDR / ARS ) ,( DDR * BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) / ( CRS * DDR ) )", "choosing": "( Max( MUM,( RRSe / RRSe ) ) * ( ( RMSe - MLU ) * RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( Const - Max( Min( ( FirstVNF_Mem + AMS ) ,( CRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,Min( Max( MUR,CS ) ,RCSe ) ) ) - ( MUM * ( RMSe / MUR ) ) )", "obj1": 0.9163179916317992, "obj2": 0.029362274413446632}, {"determining": "( ( ( Min( AMS ,BR ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( MDR ,PN ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / ( ( RRSe + MUC ) / ( DS - RRSe ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.0037704289396397143}, {"determining": "( ( DDR + ( ( ACS / ( RRS + ( MRS - FirstVNF_CPU_Server ) ) ) * ACS ) ) - ACS )", "choosing": "( ( RMSe + DS ) * MUR )", "obj1": 0.8723849372384938, "obj2": 0.049062683158232916}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005959832595381951}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( Max( RRS,( FirstVNF_Mem * FirstVNF_Mem ) ),BR ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( MUM,Max( MUC,RCSe ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( MUR,Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ACS - ( DDR + ( ( ( CRS - ( ACS + AMS ) ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) * MUM ) ,( MLU / Max( ( RCSe * MUM ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6108786610878661, "obj2": 0.2649370447942121}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( Max( AMS,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,( CRS / ACS ) ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - ( MUM * ( RRSe * ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - MUM ) ) ) + RRSe ) * MUM ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.029362274413446632}, {"determining": "( ( FirstVNF_CPU / DDR ) + Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( MLU - RRSe ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,( RRSe - ( ( ( MLU - ( ( ( DS / DS ) - RMSe ) * MUR ) ) - CS ) / MUR ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.047123155733605135}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( Const ,( PN - FirstVNF_CPU ) ) ) ) - MDR ) - Max( Min( FirstVNF_Mem ,AMS ),FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * ( ( CS + MUR ) + Min( Min( Min( ( DS * MUR ) ,DS ) ,Max( ( ( MUC / ( MUC - MUR ) ) / MUR ),MUC ) ) ,Min( Min( ( ( RMSe / DS ) * Max( ( MUC / MLU ),( RRSe - RRSe ) ) ) ,( RRSe + MUC ) ) ,Min( CS ,( MUR + CS ) ) ) ) ) )", "obj1": 0.899581589958159, "obj2": 0.03304385000854811}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004671341725851396}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / ( Min( RCSe ,CS ) / ( DS - CS ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ACS - ( MDR - ( ( ( FirstVNF_Mem_Server + AMS ) / ( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / CRS ) ) + AMS ) ) * ACS ) ) )", "choosing": "( ( ( Max( DS,RRSe ) - ( ( RRSe + MLU ) / DS ) ) + Min( Max( Min( MLU ,( ( Max( MUC,MUR ) + RCSe ) - MUR ) ),( RMSe - RMSe ) ) ,MUM ) ) - MUC )", "obj1": 0.7594142259414226, "obj2": 0.10711270529029891}, {"determining": "( ( FirstVNF_CPU_Server - AMS ) - Max( PN,BR ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * ( MLU - MUR ) ) ,( RCSe / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004671341725851396}, {"determining": "( ACS - Max( DDR,( Max( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem + Const ) / ( FirstVNF_CPU - BR ) ) ),FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( ( MLU / RRSe ) / RMSe ) ,( RCSe * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06778644786902054}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.047123155733605135}, {"determining": "( ACS - ( ( ( ACS / ( ACS + ( MRS / Min( ACS ,PN ) ) ) ) * ACS ) + DDR ) )", "choosing": "( Max( MUM,( ( MUC / DS ) * MUM ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( MLU * CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005959832595381951}, {"determining": "Min( ( ( Min( PN ,MDR ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( ( Const - ( BR + MRS ) ) ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * ( ( ( RRSe / ( Min( MLU ,RCSe ) - RRSe ) ) - MUM ) * RRSe ) ) ) ,( ( CS / RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,MRS ) - Max( Max( FirstVNF_Mem_Server,BR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - ( MUM * ( RRSe * ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - MUM ) ) ) + RRSe ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( PN * FirstVNF_CPU ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( ( ARS - ( ( DDR + ARS ) * AMS ) ) - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( MLU / Max( MUR,Min( RRSe ,RMSe ) ) ) ,( ( RCSe + RMSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( ( RRS / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( MUR / ( ( Max( ( DS + MLU ),RMSe ) - RMSe ) / ( MUM * ( ( RMSe - RCSe ) - ( MUR - RCSe ) ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) ) ) ) - ( ( CRS - PN ) / Max( MRS,Max( ( ( ACS - ( FirstVNF_RAM + MDR ) ) * ( FirstVNF_RAM_Server - MRS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MUC ) * Max( CS,MUC ) ) ) ,Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,( RMSe + ( ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) / ( ( DS - MUM ) * ( RMSe / MUR ) ) ) + ( ( RMSe - RRSe ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( CRS / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( DDR - MRS ) )", "choosing": "( ( RMSe / MLU ) * Min( CS ,( ( Max( RCSe,RRSe ) + ( MUM + RMSe ) ) - Min( ( MLU / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( ( FirstVNF_Mem / PN ) + ( ARS / Max( ( Max( ARS,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ),RRS ) ) ) - Max( ( FirstVNF_RAM * CRS ),( CRS - ( Max( ( CRS - CRS ),FirstVNF_Mem_Server ) / ( ( ( DDR * ARS ) + ( MRS + FirstVNF_Mem_Server ) ) + ( ACS + ( MDR / BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * ( ( DS - RMSe ) - MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( RMSe,Min( CS ,RRSe ) ) - CS ) ),RCSe ) ) ) ,( ( MUC + RCSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) - Min( Max( ARS,Const ) ,( Min( FirstVNF_CPU_Server ,CRS ) - ACS ) ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( RMSe * ( ( ( ( CS * MUC ) - ( MUR * MUM ) ) * ( MUC * RRSe ) ) - MLU ) ) - RMSe ) ) - Max( ( ( CS / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) / ( CRS / BR ) ) - ( MDR / FirstVNF_CPU ) ) + ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( Min( MUR ,MUM ),( ( MUM / MLU ) * DS ) ) + RRSe ),CS ) + MUC ) - ( Min( MUM ,CS ) - MUM ) ) / ( ( MUR - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ( DDR / FirstVNF_RAM_Server ) - DDR ) ,( RRS + RRS ) ),( ( FirstVNF_Mem * ACS ) / ( DDR / ( FirstVNF_Mem_Server / MDR ) ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( ( RCSe / ( MUR / ( MUC - RRSe ) ) ) * ( Min( CS ,RMSe ) - ( MUR - ( RRSe + RRSe ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - ( ACS / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Max( CS,MUC ),Min( CS ,RMSe ) ),( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( BR * FirstVNF_RAM_Server ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.26311985638363017}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( Max( MUM,( RRSe / RRSe ) ) * ( RMSe + RMSe ) )", "obj1": 0.6150627615062761, "obj2": 0.25888916686442803}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( Min( DDR ,BR ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + Min( DS ,MUC ) ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6506276150627615, "obj2": 0.1934344428470853}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.1566086342742812}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( FirstVNF_RAM + ( MRS - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6757322175732218, "obj2": 0.17765303762987017}, {"determining": "( ACS - ( DDR + ( ( Const / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,MUR ) )", "obj1": 0.6589958158995816, "obj2": 0.17861275528635767}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.14773959775228324}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( ( MLU - CS ) * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.700836820083682, "obj2": 0.14169628590988195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7740585774058577, "obj2": 0.09326236329879468}, {"determining": "( ( ( Max( Min( ACS ,ACS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( ( MLU / RMSe ) * MLU ) )", "obj1": 0.7887029288702929, "obj2": 0.09051169775528585}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.23628584180291476}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( MUR * Min( ( MUC + RMSe ) ,MLU ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.8138075313807531, "obj2": 0.07647866674496383}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}, {"determining": "( ( DDR + ( Min( ( Const * DDR ) ,Min( AMS ,DDR ) ) * ACS ) ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( ( CS - RCSe ) / Min( ( ( Max( DS,RCSe ) / Min( RCSe ,DS ) ) * RRSe ) ,( Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,Min( MUC ,( RMSe / MUM ) ) ) ) ) / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.22738982447292894}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7405857740585774, "obj2": 0.11662771834770352}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.0415652388694345}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.799163179916318, "obj2": 0.08358410931606561}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ACS - ( DDR + ( ( Const / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,MUC ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( MUC / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13243987267874208}, {"determining": "( ACS - ( DDR + ( ( Max( PN,( ( CRS - MRS ) + MDR ) ) / ( Min( FirstVNF_RAM ,( CRS / CRS ) ) + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.7531380753138075, "obj2": 0.1065669134111713}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05131346782549194}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,RRS ) ) - Max( FirstVNF_CPU,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( DS / Max( MUR,Min( ( RMSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.021563302192583816}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * MUM ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7468619246861925, "obj2": 0.11227629298165936}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06398655648418627}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( MUC ,( RCSe / MUC ) ) ) ) ) )", "obj1": 0.6192468619246861, "obj2": 0.23470248973873065}, {"determining": "( Max( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ),( ( Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ( MRS / AMS ) )", "choosing": "( Max( ( MLU * ( Max( ( DS + ( ( MUM / DS ) / Min( RCSe ,RRSe ) ) ),( CS - ( ( CS * MUR ) * ( CS / MUR ) ) ) ) + RRSe ) ),Min( CS ,( ( MUM * MUM ) + RMSe ) ) ) / ( RMSe - ( Max( MUC,MLU ) - CS ) ) )", "obj1": 0.9560669456066946, "obj2": 0.016355587961709658}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) )", "obj1": 0.7322175732217573, "obj2": 0.12497721433781143}, {"determining": "( ( ( Const * ARS ) + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) - FirstVNF_CPU )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - ( DS - Min( ( MUM / ( Min( ( RMSe + CS ) ,CS ) * ( ( ( MUM * MLU ) * MUC ) - MUC ) ) ) ,Max( RCSe,( DS + CS ) ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) )", "obj1": 0.7322175732217573, "obj2": 0.12497721433781143}, {"determining": "( ( Max( BR,AMS ) - ( ( Min( Const ,BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( ( ( CRS - PN ) / Min( Const ,PN ) ) * Max( ACS,FirstVNF_Mem_Server ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( DS / Min( MUC ,RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.05607214999108812}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / MDR ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * Max( ( RMSe - ( Max( MUR,MLU ) - CS ) ),RCSe ) ) ) ,( ( MUC + ( MLU / RMSe ) ) / MUR ) )", "obj1": 0.9456066945606695, "obj2": 0.021077755744001274}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - ( FirstVNF_RAM * AMS ) ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( MUC - Min( CS ,DS ) ) * ( MUC * MLU ) )", "obj1": 0.7552301255230126, "obj2": 0.10290633528146505}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9476987447698745, "obj2": 0.018831334317401766}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.7615062761506276, "obj2": 0.0999284184710108}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7154811715481172, "obj2": 0.13484747962626667}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7154811715481172, "obj2": 0.13484747962626667}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8744769874476988, "obj2": 0.04670711401653331}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.7615062761506276, "obj2": 0.0999284184710108}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.026885279491127123}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( CRS - PN ) / ( BR + FirstVNF_CPU_Server ) ) ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( RRSe / ( DS - ( RCSe * ( ( MUR + MUM ) * RRSe ) ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.01183038944650929}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.08211929060625034}, {"determining": "( ( FirstVNF_CPU * PN ) - Max( CRS,( ARS + ( Max( BR,( ACS * FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( Min( DS ,( RCSe - ( DS / ( MUM * ( Max( MUM,MUM ) / RMSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.028918482851730595}, {"determining": "( Min( Min( DDR ,BR ) ,FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - Max( MDR,Const ) ) / Min( Const ,ACS ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( RMSe + ( Min( MUR ,RRSe ) / MUM ) ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.13326357014499893}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.054836173565040204}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( CS ,DS ) ) * ( CS / ( MLU + ( ( Min( MUR ,DS ) - MUR ) - ( MUC * MUM ) ) ) ) )", "obj1": 0.7426778242677824, "obj2": 0.11318289850394896}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( Max( AMS,FirstVNF_RAM_Server ) ,( CRS - MRS ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - ( MUM * ( RRSe * ( ( Max( ( CS * ( MUM / MUC ) ),Max( DS,MUR ) ) + RRSe ) * MUM ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.029339282070607722}, {"determining": "( ( CRS + AMS ) + ( FirstVNF_CPU - CRS ) )", "choosing": "( ( DS / Min( ( CS * DS ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),( RCSe + MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ( ( PN + DDR ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( RCSe - CS ) / Min( ( RCSe * MUM ) ,( Max( ( ( DS / MUM ) / ( DS * ( CS - RMSe ) ) ),CS ) + Min( RRSe ,( RMSe - ( Min( ( RMSe - RRSe ) ,DS ) * Max( MUM,( MUM - MUM ) ) ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05401764933671236}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.0666809072162423}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( Const ,( PN - FirstVNF_CPU ) ) ) ) - MDR ) - Max( Min( FirstVNF_Mem ,AMS ),FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * ( ( CS + MUR ) + Min( Min( Min( ( DS * MUR ) ,DS ) ,Max( ( ( MUC / ( MUC - MUR ) ) / MUR ),MUC ) ) ,Min( Min( ( ( RMSe / DS ) * Max( ( MUC / MLU ),( RRSe - RRSe ) ) ) ,( RRSe + MUC ) ) ,Min( CS ,( MUR + CS ) ) ) ) ) )", "obj1": 0.899581589958159, "obj2": 0.03304385000854811}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.897489539748954, "obj2": 0.033450642058391274}, {"determining": "( ( Max( PN,( ( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,( ( BR * PN ) / ( DDR / Const ) ) ) ) + Min( BR ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) + ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + CS ) - ( DS + CS ) ) / ( ( RRSe / ( RMSe + MUM ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.08211929060625034}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / ACS ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( Max( MUM,( RRSe / RRSe ) ) * ( RMSe + RMSe ) )", "obj1": 0.8263598326359832, "obj2": 0.07269504005542418}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.22738982447292894}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( DDR / RRS ) / DDR ) )", "choosing": "( ( ( MUC / RMSe ) * ( RRSe / ( ( MUR + DS ) * ( ( ( MUC + RMSe ) / DS ) / CS ) ) ) ) / Min( CS ,( RRSe + RCSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01204152811908803}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9267782426778243, "obj2": 0.026885279491127123}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06716987225949941}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.06859467497981867}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( DDR * PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) - MRS ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( ( ( MLU - RCSe ) + Max( DS,MUR ) ) + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) / Min( DDR ,( Const + FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.6422594142259415, "obj2": 0.2235953542597573}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / MLU ) )", "obj1": 0.9581589958158996, "obj2": 0.012626935022234142}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( ( RMSe / MUC ) * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004648098452518589}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.897489539748954, "obj2": 0.033450642058391274}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + Max( ( ( ( FirstVNF_Mem_Server + DDR ) * DDR ) * FirstVNF_CPU ),PN ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MUC / Max( Min( MUM ,CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.021563302192583816}, {"determining": "( ( ( Min( AMS ,BR ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( MDR ,PN ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / ( ( RRSe + MUC ) / ( DS - RRSe ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.0037704289396397143}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005959832595381951}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( Max( RRS,( FirstVNF_Mem * FirstVNF_Mem ) ),BR ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( MUM,Max( MUC,RCSe ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( MUC * CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( FirstVNF_CPU / DDR ) + Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( MLU - RRSe ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,( RRSe - ( ( ( MLU - ( ( ( DS / DS ) - RMSe ) * MUR ) ) - CS ) / MUR ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.23628584180291476}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( PN + Max( ( BR / ARS ),MDR ) ) / Const ) )", "choosing": "( ( MLU / RMSe ) * Max( DS,( ( MLU - ( RCSe - ( Min( ( RCSe * RCSe ) ,RRSe ) / MUC ) ) ) * RRSe ) ) )", "obj1": 0.899581589958159, "obj2": 0.03304385000854811}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.06859467497981867}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( MLU - RRSe ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012626935022234142}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005959832595381951}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( PN ,MDR ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( ( Const - ( BR + MRS ) ) ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * ( ( CS + DS ) * ( ( ( RRSe / ( Min( MLU ,RCSe ) - RRSe ) ) - MUM ) * RRSe ) ) ) ,( ( CS / RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,MRS ) - Max( Max( FirstVNF_Mem_Server,BR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - ( MUM * ( RRSe * ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - MUM ) ) ) + RRSe ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( PN * FirstVNF_CPU ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( ( ARS - ( ( DDR + ARS ) * AMS ) ) - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( MLU / Max( MUR,Min( RRSe ,RMSe ) ) ) ,( ( RCSe + RMSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - ( ( RRS / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( MUR / ( ( Max( ( DS + MLU ),RMSe ) - RMSe ) / ( MUM * ( ( RMSe - RCSe ) - ( MUR - RCSe ) ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) ) ) ) - ( ( CRS - PN ) / Max( MRS,Max( ( ( ACS - ( FirstVNF_RAM + MDR ) ) * ( FirstVNF_RAM_Server - MRS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MUC ) * Max( CS,MUC ) ) ) ,Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,( RMSe + ( ( Max( ( MUM - MUM ),Min( RMSe ,MUM ) ) / ( ( DS - MUM ) * ( RMSe / MUR ) ) ) + ( ( RMSe - RRSe ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * MDR ) - MDR ) - ( FirstVNF_CPU / Max( ( RRS / FirstVNF_CPU_Server ),DDR ) ) )", "choosing": "( ( MUM * ( RMSe * ( MUM / ( MLU - MLU ) ) ) ) * ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( Max( PN,( ( CRS - MRS ) + MDR ) ) + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( ( RRSe + RCSe ) / DS ) ) + Min( Max( MUC,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MRS ) * ( ACS - CRS ) )", "choosing": "Min( ( Min( RRSe ,MUC ) * DS ) ,( ( Min( DS ,RCSe ) - RRSe ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( DDR ,( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / Const ) / ( ARS * DDR ) ) ) + MDR ) ) )", "choosing": "Max( ( ( ( RMSe + CS ) - MUC ) / CS ),( Max( MLU,( ( DS + RRSe ) * RRSe ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( AMS ,( FirstVNF_Mem - PN ) ) ) + Min( ( RRS + ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - ( ( MLU - ( DS + DS ) ) * MUC ) ) / ( ( Max( ( Max( MUR,MUC ) * RMSe ),( ( Min( MUC ,MUC ) / MUM ) * Max( MUC,RRSe ) ) ) * ( MLU - RRSe ) ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,FirstVNF_RAM_Server ) ,Min( RRS ,MRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( Max( CRS,FirstVNF_RAM ) ,( ( ACS * ACS ) / Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( DDR + BR ) ) )", "choosing": "( ( ( RRSe - ( ( ( ( MUR * Max( MUM,RCSe ) ) / ( RCSe * CS ) ) * ( MUM + ( CS - MUR ) ) ) / MLU ) ) - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( DDR - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( BR * FirstVNF_RAM_Server ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.26311985638363017}, {"determining": "( Min( ACS ,MRS ) - Max( Max( FirstVNF_Mem_Server,BR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ( DDR / FirstVNF_RAM_Server ) - DDR ) ,( RRS + RRS ) ),( ( FirstVNF_Mem * ACS ) / ( DDR / ( FirstVNF_Mem_Server / MDR ) ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR * MUR ) - ( ( ( RCSe / ( MUR / ( MUC - RRSe ) ) ) * ( Min( CS ,RMSe ) - ( MUR - ( RRSe + RRSe ) ) ) ) * Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.26311985638363017}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( Min( DDR ,BR ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + Min( DS ,MUC ) ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6506276150627615, "obj2": 0.1934344428470853}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MUC / Max( Min( MUM ,CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2525720895164998}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( RRS * ( Max( Max( ACS,RRS ),FirstVNF_RAM_Server ) * ARS ) ) ) ) ) )", "choosing": "( Max( MLU,DS ) * ( MLU / RMSe ) )", "obj1": 0.7217573221757322, "obj2": 0.11890588283110867}, {"determining": "( ( BR * Max( CRS,DDR ) ) - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,MRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * Max( MUR,RCSe ) ),Max( ( MUC * Min( CS ,DS ) ),RMSe ) ) + RRSe ) * MUM ) / ( DS + RMSe ) ) * MUR )", "obj1": 0.6652719665271967, "obj2": 0.15975387655887555}, {"determining": "( ACS - ( ( Min( ( CRS - PN ) ,Min( Min( ( CRS + ( FirstVNF_RAM_Server * ACS ) ) ,FirstVNF_CPU ) ,ACS ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RMSe / ( DS - MUM ) ) ) - CS ) / Max( MLU,RCSe ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ACS - ( DDR + ( ( Max( ( ( MDR / FirstVNF_CPU_Server ) + Max( DDR,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) / Min( Const ,ACS ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( RRSe - RMSe ) / Min( ( RMSe + Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.222181338661305}, {"determining": "( ACS - ( DDR + ( ( Const / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,MUR ) )", "obj1": 0.6589958158995816, "obj2": 0.17861275528635767}, {"determining": "( ACS - ( DDR + ( ( Const / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.1402114616946673}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Min( MUC ,( RCSe / MUC ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( MUC * CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7866108786610879, "obj2": 0.08951863339331977}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7154811715481172, "obj2": 0.13484747962626667}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Min( DDR ,BR ) + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( ( ( MLU / RMSe ) * MUR ) * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7384937238493724, "obj2": 0.11354242820005896}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.6861924686192469, "obj2": 0.15226907900259562}, {"determining": "( ( DDR + ( Min( ( Const * DDR ) ,Min( AMS ,DDR ) ) * ACS ) ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( ( CS - RCSe ) / Min( ( ( Max( DS,RCSe ) / Min( RCSe ,DS ) ) * RRSe ) ,( Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,Min( MUC ,( RMSe / MUM ) ) ) ) ) / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( MUC ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2151308556662423}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( MDR * ACS ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) / ( ACS / MDR ) ) * ACS ) ) )", "choosing": "( ( ( MUC * MUR ) / RMSe ) * MUR )", "obj1": 0.6548117154811716, "obj2": 0.17892832868203587}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.700836820083682, "obj2": 0.13581754826146206}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.23628584180291476}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.799163179916318, "obj2": 0.08358410931606561}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( RRS + FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( ACS + AMS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( RMSe,RMSe ) - CS ) * Min( DS ,DS ) ) / Min( MUM ,( ( MUR * DS ) * ( ( Max( Min( RCSe ,MUC ),( MUC * MUM ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( RRSe + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.7426778242677824, "obj2": 0.10757800647380353}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7740585774058577, "obj2": 0.09326236329879468}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( MUC ,( RCSe / MUC ) ) ) ) ) )", "obj1": 0.6192468619246861, "obj2": 0.23470248973873065}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ACS ) - ( ( FirstVNF_RAM + ( ( ACS / Const ) - ARS ) ) + DDR ) )", "choosing": "Min( ( Max( MLU,( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / ( MLU / RCSe ) ) ) ,( ( Min( RMSe ,RRSe ) - Min( MUR ,MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ) ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.7489539748953975, "obj2": 0.1054654173883998}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.1566086342742812}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( ( Const / ( ACS + ARS ) ) * ACS ) / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( DS * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.10168608099084595}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05131346782549194}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9267782426778243, "obj2": 0.026234030027152626}, {"determining": "( ( Max( BR,AMS ) - ( ( Min( Const ,BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( ( ( CRS - PN ) / Min( Const ,PN ) ) * Max( ACS,FirstVNF_Mem_Server ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( DS / Min( MUC ,RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.05607214999108812}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7740585774058577, "obj2": 0.09326236329879468}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( Min( ( ( DS / ( MUR + RCSe ) ) + ( ( ( Min( MUC ,DS ) - ( DS + MLU ) ) + ( RMSe - Max( DS,MUC ) ) ) + RRSe ) ) ,MUM ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( ( ( MLU / MUC ) / ( ( MUC / Min( RMSe ,MUC ) ) - ( Max( DS,MUM ) - MLU ) ) ) + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 0.803347280334728, "obj2": 0.07893966725356634}, {"determining": "( ( ( Const * ARS ) + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) - FirstVNF_CPU )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - ( DS - Min( ( MUM / ( Min( ( RMSe + CS ) ,CS ) * ( ( ( MUM * MLU ) * MUC ) - MUC ) ) ) ,Max( RCSe,( DS + CS ) ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.02032916540582762}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.042020453252626974}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.7615062761506276, "obj2": 0.0999284184710108}, {"determining": "( Max( ( ( BR + ( FirstVNF_Mem_Server / AMS ) ) * MDR ),( ( Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ( MRS / AMS ) )", "choosing": "( Max( ( MLU * ( Max( ( DS + ( ( MUM / DS ) / Min( RCSe ,RRSe ) ) ),( CS - ( ( CS * MUR ) * ( CS / MUR ) ) ) ) + RRSe ) ),Min( CS ,( ( MUM * MUM ) + RMSe ) ) ) / ( RMSe - ( Max( MUC,MLU ) - CS ) ) )", "obj1": 0.9560669456066946, "obj2": 0.016355587961709658}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUR,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.054836173565040204}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.7615062761506276, "obj2": 0.0999284184710108}, {"determining": "( ( ( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - ( FirstVNF_RAM * AMS ) ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Max( ( MUR + RMSe ),CS ) * ( MUC * MLU ) )", "obj1": 0.8117154811715481, "obj2": 0.07707756160810622}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06372079011057641}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( MUR * Min( ( MUC + RMSe ) ,MLU ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.8221757322175732, "obj2": 0.07566849179849017}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( MUR * Min( ( MUC + RMSe ) ,MLU ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.8138075313807531, "obj2": 0.07647866674496383}, {"determining": "( Const - Max( Min( ( ARS - AMS ) ,( Min( Max( AMS,FirstVNF_RAM_Server ) ,( CRS - MRS ) ) + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS / Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - ( MUM * ( RRSe * ( ( Max( ( CS * ( MUM / MUC ) ),Max( DS,MUR ) ) + RRSe ) * MUM ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.029339282070607722}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.9769874476987448, "obj2": 0.008369132637701624}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MUC - Min( CS ,DS ) ) * ( MUC * MLU ) )", "obj1": 0.9497907949790795, "obj2": 0.017706698402867305}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05280516220263093}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}, {"determining": "( ( Min( CRS ,FirstVNF_RAM_Server ) - ( MRS / Const ) ) - ( AMS + MRS ) )", "choosing": "( ( CS / Min( MUM ,( ( ( Max( ( CS / RRSe ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( ( CS - RMSe ) - RRSe ) ) ) * ( DS + DS ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.04016176260571311}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.897489539748954, "obj2": 0.033450642058391274}, {"determining": "( ( CRS / FirstVNF_CPU ) + ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( CRS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.1566086342742812}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( Min( DDR ,BR ) - FirstVNF_CPU ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( Max( MUR,RCSe ) / RRSe ) ) ) )", "obj1": 0.8263598326359832, "obj2": 0.06987243519050333}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( CRS - PN ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * MLU ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.026608170275542322}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( DDR / RRS ) / DDR ) )", "choosing": "( ( ( MUC / RMSe ) * ( RRSe / ( ( MUR + DS ) * ( ( ( MUC + RMSe ) / DS ) / CS ) ) ) ) / Min( CS ,( RRSe + RCSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01204152811908803}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( CRS - PN ) / ( BR + FirstVNF_CPU_Server ) ) ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( RRSe / ( DS - ( RCSe * ( ( MUR + MUM ) * RRSe ) ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.01183038944650929}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03765456622312694}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06398655648418627}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ( ( ( RRS - CRS ) + Max( MRS,DDR ) ) / PN ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ACS ) ) ) ) )", "choosing": "( Max( MUM,( ( MUC * RRSe ) / RRSe ) ) * ( RMSe + RMSe ) )", "obj1": 0.9686192468619247, "obj2": 0.011272783558541267}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8786610878661087, "obj2": 0.04111509610301739}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9476987447698745, "obj2": 0.018831334317401766}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012626935022234142}, {"determining": "( Max( PN,ACS ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC + ( ( ( DS * Max( ( MUR + RCSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.028839336935119444}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( CS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7154811715481172, "obj2": 0.13484747962626667}, {"determining": "( ( DDR + ( Max( ( Max( ACS,PN ) / ACS ),( ( FirstVNF_RAM * PN ) - FirstVNF_RAM ) ) * ACS ) ) - ACS )", "choosing": "( ( MLU + RMSe ) * ( ( RMSe / CS ) / MLU ) )", "obj1": 0.8347280334728033, "obj2": 0.06545726415314312}, {"determining": "( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( ( RMSe / MUC ) * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004648098452518589}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.897489539748954, "obj2": 0.033450642058391274}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.08211929060625034}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06619234549126544}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ( CRS + AMS ) + ( FirstVNF_CPU - CRS ) )", "choosing": "( ( DS / Min( ( CS * DS ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),( RCSe + MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( Min( CRS ,FirstVNF_Mem_Server ) / ( CRS - PN ) ) * ( DDR + ( ( ACS / ( FirstVNF_Mem_Server + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * Min( MUM ,RMSe ) ),Min( MUC ,( RCSe / MUC ) ) ) ) ) )", "obj1": 0.6192468619246861, "obj2": 0.23470248973873065}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + AMS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.07289869072282665}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005959832595381951}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( Max( RRS,( FirstVNF_Mem * FirstVNF_Mem ) ),BR ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Max( MUM,Max( MUC,RCSe ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( MRS - FirstVNF_CPU ) - Min( Const ,( Max( MDR,BR ) - ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( MUC * CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( FirstVNF_CPU / DDR ) + Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( ( MLU - RRSe ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,( RRSe - ( ( ( MLU - ( ( ( DS / DS ) - RMSe ) * MUR ) ) - CS ) / MUR ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_CPU * PN ) - Max( CRS,( ARS + ( Max( BR,( ACS * FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( Min( DS ,( RCSe - ( DS / ( MUM * ( Max( MUM,MUM ) / RMSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.028918482851730595}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.23628584180291476}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9476987447698745, "obj2": 0.018831334317401766}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.08211929060625034}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.06859467497981867}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06716987225949941}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.06859467497981867}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06716987225949941}, {"determining": "( ( ( Min( DDR ,BR ) - DDR ) - ( FirstVNF_CPU - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( ACS ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( RCSe ,CS ) + ( DS - CS ) ) / MLU ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,Max( ( RMSe * MUR ),RRSe ) ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.0037704289396397143}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( MUR * Min( ( MUC + RMSe ) ,MLU ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.8221757322175732, "obj2": 0.07566849179849017}, {"determining": "( ( ( Min( AMS ,BR ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( MDR ,PN ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / ( ( RRSe + MUC ) / ( DS - RRSe ) ) ) * ( ( Min( Min( DS ,MUC ) ,MUR ) * Min( RRSe ,RRSe ) ) / ( MUC + ( MLU - RRSe ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.0037704289396397143}], "12": [{"determining": "( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( MLU - CS ) / Min( Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,MRS ) - Max( Max( FirstVNF_Mem_Server,BR ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5753138075313807, "obj2": 0.28179229527252303}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MUC / Max( Min( MUM ,CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2525720895164998}, {"determining": "( ( BR * Max( CRS,DDR ) ) - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,MRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * Max( MUR,RCSe ) ),Max( ( MUC * Min( CS ,DS ) ),RMSe ) ) + RRSe ) * MUM ) / ( DS + RMSe ) ) * MUR )", "obj1": 0.6652719665271967, "obj2": 0.15975387655887555}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.700836820083682, "obj2": 0.13581754826146206}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7154811715481172, "obj2": 0.12407873263628645}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - DDR )", "choosing": "( ( ( ( DS / DS ) - RMSe ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.21877548766327615}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( RRS * ( Max( Max( ACS,RRS ),FirstVNF_RAM_Server ) * ARS ) ) ) ) ) )", "choosing": "( Max( MLU,DS ) * ( MLU / RMSe ) )", "obj1": 0.7217573221757322, "obj2": 0.11890588283110867}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,Max( RMSe,DS ) ) - RMSe ) * CS ) - CS ) / Min( Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.6485355648535565, "obj2": 0.20723635606216492}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.26311985638363017}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( MUC ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2151308556662423}, {"determining": "( ACS - ( DDR + ( ( Const / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,MUR ) )", "obj1": 0.6589958158995816, "obj2": 0.17861275528635767}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( ( CRS - FirstVNF_CPU ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( CS - ( RMSe / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.06943971810983394}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( MDR * ACS ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) / ( ACS / MDR ) ) * ACS ) ) )", "choosing": "( ( ( MUC * MUR ) / RMSe ) * MUR )", "obj1": 0.6548117154811716, "obj2": 0.17892832868203587}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Min( DDR ,BR ) + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( ( ( MLU / RMSe ) * MUR ) * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7384937238493724, "obj2": 0.11354242820005896}, {"determining": "( ACS - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.23628584180291476}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( MUC ,( RCSe / MUC ) ) ) ) ) )", "obj1": 0.6192468619246861, "obj2": 0.23470248973873065}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( Min( DDR ,BR ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + Min( DS ,MUC ) ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6506276150627615, "obj2": 0.1934344428470853}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.6861924686192469, "obj2": 0.15226907900259562}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( Min( DDR ,BR ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + Min( DS ,MUC ) ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6506276150627615, "obj2": 0.1934344428470853}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( ( Const / ( ACS + ARS ) ) * ACS ) / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( DS * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.10168608099084595}, {"determining": "( ( Min( ( AMS + ( ( AMS * FirstVNF_RAM ) * Const ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( ( Max( DS,RCSe ) - MUR ) - ( CS - RCSe ) ) )", "obj1": 0.7426778242677824, "obj2": 0.10646012373909647}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.1566086342742812}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.06859467497981867}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( Const + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Max( MUR,MLU ),( MUR * Min( ( MUC + RMSe ) ,MLU ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6882845188284519, "obj2": 0.1457741347541935}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / ( ( MDR * Min( PN ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) + ( CRS / ( PN - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MLU * RRSe ) / ( ( RMSe + Max( ( CS + ( DS * RMSe ) ),Min( Min( MUM ,MUR ) ,RMSe ) ) ) * RRSe ) ) ,MLU ) ,MLU )", "obj1": 0.8075313807531381, "obj2": 0.07567137080972948}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.042020453252626974}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR / ( ( Const * FirstVNF_RAM_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUR + RMSe ) * ( RRSe / Min( RCSe ,( MLU - RMSe ) ) ) )", "obj1": 0.7907949790794979, "obj2": 0.08572878975448532}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.02032916540582762}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7803347280334728, "obj2": 0.08961984491734906}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7656903765690377, "obj2": 0.09537634053174625}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Min( MUC ,( RCSe / MUC ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( MUC * CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7866108786610879, "obj2": 0.08951863339331977}, {"determining": "( DDR - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( BR * FirstVNF_RAM_Server ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.26311985638363017}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Max( ( MUR + RMSe ),CS ) * ( MUC * MLU ) )", "obj1": 0.803347280334728, "obj2": 0.07857156990575026}, {"determining": "( ( ( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - ( FirstVNF_RAM * AMS ) ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Max( ( MUR + RMSe ),CS ) * ( MUC * MLU ) )", "obj1": 0.7949790794979079, "obj2": 0.08285843953885581}, {"determining": "( ( DDR + ( Min( ( Const * DDR ) ,Min( AMS ,DDR ) ) * ACS ) ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( ( CS - RCSe ) / Min( ( ( Max( DS,RCSe ) / Min( RCSe ,DS ) ) * RRSe ) ,( Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,Min( MUC ,( RMSe / MUM ) ) ) ) ) / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05131346782549194}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8493723849372385, "obj2": 0.05388640800738354}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.7573221757322176, "obj2": 0.0959831592393959}, {"determining": "( ACS - ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / ( MLU / RMSe ) )", "obj1": 0.9288702928870293, "obj2": 0.02560079520542403}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7740585774058577, "obj2": 0.09326236329879468}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.06372079011057641}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( MUC * MUR )", "obj1": 0.9560669456066946, "obj2": 0.01586711447258221}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.04949753200094924}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6903765690376569, "obj2": 0.14139714960755623}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( Min( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.9476987447698745, "obj2": 0.018456419541380113}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.9769874476987448, "obj2": 0.008369132637701624}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Min( DDR ,BR ) + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( ( ( MLU / RMSe ) * MUR ) * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7384937238493724, "obj2": 0.11354242820005896}, {"determining": "( ACS - ( ( Min( ( CRS - PN ) ,Min( Min( ( CRS + ( FirstVNF_RAM_Server * ACS ) ) ,FirstVNF_CPU ) ,ACS ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RMSe / ( DS - MUM ) ) ) - CS ) / Max( MLU,RCSe ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ACS ) - ( ( FirstVNF_RAM + ( ( ACS / Const ) - ARS ) ) + DDR ) )", "choosing": "Min( ( Max( MLU,( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / ( MLU / RCSe ) ) ) ,( ( Min( RMSe ,RRSe ) - Min( MUR ,MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ) ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.7489539748953975, "obj2": 0.1054654173883998}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.08211929060625034}, {"determining": "( ( ( Const * ARS ) + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) - FirstVNF_CPU )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - ( DS - Min( ( MUM / ( Min( ( RMSe + CS ) ,CS ) * ( ( ( MUM * MLU ) * MUC ) - MUC ) ) ) ,Max( RCSe,( DS + CS ) ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ( Min( CRS ,FirstVNF_RAM_Server ) - ( MRS / Const ) ) - ( AMS + MRS ) )", "choosing": "( ( CS / Min( MUM ,( ( ( Max( ( CS / RRSe ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( ( CS - RMSe ) - RRSe ) ) ) * ( DS + DS ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.04016176260571311}, {"determining": "( ( ( Min( Max( Max( ( ACS + FirstVNF_CPU ),MRS ),Const ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) * Min( ACS ,Const ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR - DS ) * ( ( Max( ( MUC * RRSe ),Min( RCSe ,MUC ) ) * Max( Min( DS ,RMSe ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.1566086342742812}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05280516220263093}, {"determining": "( ACS - ( DDR + ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.1402114616946673}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012626935022234142}, {"determining": "( ( Min( Const ,BR ) - FirstVNF_CPU ) - ( MDR + ( ( BR + ACS ) - ACS ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( RMSe ,Min( DS ,Max( MUC,DS ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.029881456647648456}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7740585774058577, "obj2": 0.09326236329879468}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( AMS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RMSe + RMSe ) )", "obj1": 0.7615062761506276, "obj2": 0.09587052557564006}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03765456622312694}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.9518828451882845, "obj2": 0.017260043398554952}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005959832595381951}, {"determining": "( ACS - ( DDR + ( ( Const / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.1402114616946673}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Max( RMSe,( MUC - Min( CS ,DS ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.21222076180898441}, {"determining": "( ( ( ( RRS - CRS ) + Max( MRS,DDR ) ) / PN ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ACS ) ) ) ) )", "choosing": "( Max( MUM,( ( MUC * RRSe ) / RRSe ) ) * ( RMSe + RMSe ) )", "obj1": 0.9686192468619247, "obj2": 0.011272783558541267}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9267782426778243, "obj2": 0.026234030027152626}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - ( FirstVNF_RAM * AMS ) ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.7489539748953975, "obj2": 0.1054654173883998}, {"determining": "( Max( PN,ACS ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC + ( ( ( DS * Max( ( MUR + RCSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.028839336935119444}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( CRS - PN ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * MLU ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.026608170275542322}, {"determining": "( ( Max( BR,AMS ) - ( ( Min( Const ,BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( ( ( CRS - PN ) / Min( Const ,PN ) ) * Max( ACS,FirstVNF_Mem_Server ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( DS / Min( MUC ,RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.05607214999108812}, {"determining": "( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011813231413320096}, {"determining": "( ( DDR + ( Max( ( Max( ACS,PN ) / ACS ),( ( FirstVNF_RAM * PN ) - FirstVNF_RAM ) ) * ACS ) ) - ACS )", "choosing": "( ( MLU + RMSe ) * ( ( RMSe / CS ) / MLU ) )", "obj1": 0.8347280334728033, "obj2": 0.06545726415314312}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( MUC ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06574569103728896}, {"determining": "( ACS - ( Min( Min( FirstVNF_Mem ,MRS ) ,Min( Const ,CRS ) ) / AMS ) )", "choosing": "( ( CS - CS ) / Min( ( ( Min( MUM ,DS ) - Min( ( DS - Max( Max( MUR,MUM ),MUR ) ) ,MUR ) ) * MUM ) ,MUR ) )", "obj1": 0.6589958158995816, "obj2": 0.17861275528635767}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.9623430962343096, "obj2": 0.01189064719593654}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ACS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8472803347280334, "obj2": 0.05607214999108812}, {"determining": "( ( CRS / FirstVNF_CPU ) + ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( CRS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06398655648418627}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( FirstVNF_CPU - PN ) / ( BR + FirstVNF_CPU_Server ) ) ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( RRSe / ( DS - ( RCSe * ( ( ( Max( MUR,RCSe ) / RRSe ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.001357904395306961}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MUC - Min( CS ,DS ) ) * ( MUC * MLU ) )", "obj1": 0.9497907949790795, "obj2": 0.017706698402867305}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( MUC * CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05280516220263093}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8786610878661087, "obj2": 0.04111509610301739}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8786610878661087, "obj2": 0.04111509610301739}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.897489539748954, "obj2": 0.033450642058391274}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( DDR / RRS ) / DDR ) )", "choosing": "( ( ( MUC / RMSe ) * ( RRSe / ( ( MUR + DS ) * ( ( ( MUC + RMSe ) / DS ) / CS ) ) ) ) / Min( CS ,( RRSe + RCSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01204152811908803}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}], "13": [{"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5753138075313807, "obj2": 0.28179229527252303}, {"determining": "( ( Min( CRS ,BR ) - FirstVNF_CPU ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU / MUM ) / CS ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( MLU - CS ) / Min( Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5753138075313807, "obj2": 0.28179229527252303}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.20745343607530733}, {"determining": "( ACS - ( ( ( ( CRS - MDR ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,Max( CRS,RRS ) ) ) ) ) * Max( RRS,FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( ( MUC + Max( RCSe,RMSe ) ) - ( MUM / MUR ) ) ) ,( MLU / Max( Min( RRSe ,MLU ),( RCSe * ( ( MUR + MUM ) * RRSe ) ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2501330016750609}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( ( ( DDR * MDR ) + FirstVNF_Mem ) / Max( MRS,FirstVNF_RAM ) ) ) - ( Min( BR ,ARS ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + Min( DS ,MUC ) ) ) / ( ( DS + ( CS / MLU ) ) - Min( Min( CS ,MUM ) ,MUM ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6380753138075314, "obj2": 0.2027101418243732}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ( AMS - AMS ) ) / ( FirstVNF_RAM_Server + Const ) ) * ACS ) ) )", "choosing": "( Min( ( ( Max( RMSe,CS ) + RRSe ) * MUM ) ,RMSe ) * MUR )", "obj1": 0.6443514644351465, "obj2": 0.17996614584396725}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ( BR * Max( CRS,DDR ) ) - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,MRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * Max( MUR,RCSe ) ),Max( ( MUC * Min( CS ,DS ) ),RMSe ) ) + RRSe ) * MUM ) / ( DS + RMSe ) ) * MUR )", "obj1": 0.6652719665271967, "obj2": 0.15975387655887555}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7217573221757322, "obj2": 0.11181103706860543}, {"determining": "( ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / ( Max( MRS,CRS ) * PN ) ) / ( Min( DDR ,BR ) + AMS ) ) * ACS ) ) - ( FirstVNF_CPU + ( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUM + DS ) * ( ( Max( ( MUC * MUM ),Min( DS ,MUC ) ) * ( Min( DS ,RRSe ) / DS ) ) - ( Max( Max( RMSe,RMSe ),RMSe ) / DS ) ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.12277383125611377}, {"determining": "( ACS - ( Min( FirstVNF_RAM_Server ,Min( ACS ,FirstVNF_CPU ) ) + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( RRSe * ( MLU + ( RCSe * RCSe ) ) )", "obj1": 0.6820083682008368, "obj2": 0.14537080035504318}, {"determining": "( ACS - ( DDR + ( ( Const / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,MUR ) )", "obj1": 0.6589958158995816, "obj2": 0.17861275528635767}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) / ( Min( DDR ,BR ) + AMS ) ) * ACS ) ) )", "choosing": "( ( Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) / RMSe ) * MUR )", "obj1": 0.7112970711297071, "obj2": 0.12766977151078113}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / ( MLU / RMSe ) )", "obj1": 0.9205020920502092, "obj2": 0.02500106018607062}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - DDR )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5962343096234309, "obj2": 0.25137663106194336}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.1566086342742812}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06697535309975644}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / ( ( MDR * Min( PN ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) + ( CRS / ( PN - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MLU * RRSe ) / ( ( RMSe + Max( ( CS + ( DS * RMSe ) ),Min( Min( MUM ,MUR ) ,RMSe ) ) ) * RRSe ) ) ,MLU ) ,MLU )", "obj1": 0.8075313807531381, "obj2": 0.07567137080972948}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7322175732217573, "obj2": 0.11102878049389706}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.7656903765690377, "obj2": 0.092097174310569}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( RMSe + DS ) * Min( MUM ,MUC ) ) * MLU ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.15793767957766597}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / Min( MUC ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06574569103728896}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.700836820083682, "obj2": 0.13581754826146206}, {"determining": "( ACS - ( DDR + ( ACS * ( ( ( MDR * ( AMS / Min( MDR ,MDR ) ) ) / Max( MDR,PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) ) ) )", "choosing": "( Min( ( MLU + MUM ) ,CS ) * ( RRSe / RMSe ) )", "obj1": 0.7740585774058577, "obj2": 0.0905329055028804}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.10707345204829682}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - AMS ) ,Min( DDR ,BR ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05131346782549194}, {"determining": "( ( Min( ( AMS + ( ( AMS * FirstVNF_RAM ) * Const ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( ( Max( DS,RCSe ) - MUR ) - ( CS - RCSe ) ) )", "obj1": 0.7426778242677824, "obj2": 0.10646012373909647}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ACS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS / DS ) - RMSe ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RCSe * RCSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.05257618286009419}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - AMS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Min( MUC ,( RCSe / MUC ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( MUC * CS ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7866108786610879, "obj2": 0.08951863339331977}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR / ( ( Const * FirstVNF_RAM_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUR + RMSe ) * ( RRSe / Min( RCSe ,( MLU - RMSe ) ) ) )", "obj1": 0.7907949790794979, "obj2": 0.08572878975448532}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.7573221757322176, "obj2": 0.0959831592393959}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( ( CRS - FirstVNF_CPU ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( CS - ( RMSe / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.06943971810983394}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - Min( FirstVNF_Mem_Server ,CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( Const - Min( PN ,ARS ) ) - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( CS + MUM ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RCSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.694560669456067, "obj2": 0.13623995595551303}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.020329165405827614}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ( MDR * ACS ) ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),RRSe ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.7615062761506276, "obj2": 0.09520712127089959}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7803347280334728, "obj2": 0.08961984491734906}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MUC * Max( RCSe,RMSe ) ) ,( RCSe / MUR ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06398655648418627}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.060324341106287566}, {"determining": "( ( ( ( AMS / FirstVNF_RAM_Server ) - FirstVNF_CPU ) - ( MDR / ( ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU - Const ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( RCSe + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),( MUM - RRSe ) ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.042020453252626974}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8493723849372385, "obj2": 0.05388640800738354}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9163179916317992, "obj2": 0.02887701854744367}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( ( Const / ( ACS + ARS ) ) * ACS ) / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( DS * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.10168608099084595}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9476987447698745, "obj2": 0.01652113009477411}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Max( ( MUR + RMSe ),CS ) * ( MUC * MLU ) )", "obj1": 0.803347280334728, "obj2": 0.07857156990575026}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( ( ACS / ( ACS + ARS ) ),PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * Max( MUM,RRSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010691824820367648}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.9769874476987448, "obj2": 0.008369132637701624}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03192802461621145}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.01789658320636432}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.7531380753138075, "obj2": 0.10176542300336061}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ACS ) - ( ( FirstVNF_RAM + ( ( ACS / Const ) - ARS ) ) + DDR ) )", "choosing": "Min( ( Max( MLU,( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / ( MLU / RCSe ) ) ) ,( ( Min( RMSe ,RRSe ) - Min( MUR ,MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ) ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.7489539748953975, "obj2": 0.1054654173883998}, {"determining": "( ( ( Const * ARS ) + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) - FirstVNF_CPU )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - ( DS - Min( ( MUM / ( Min( ( RMSe + CS ) ,CS ) * ( ( ( MUM * MLU ) * MUC ) - MUC ) ) ) ,Max( RCSe,( DS + CS ) ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.700836820083682, "obj2": 0.13581754826146206}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( MDR * ACS ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) / ( ACS / MDR ) ) * ACS ) ) )", "choosing": "( ( ( MUC * MUR ) / RMSe ) * MUR )", "obj1": 0.6548117154811716, "obj2": 0.17892832868203587}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) )", "choosing": "( Max( ( MUR + RMSe ),CS ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.799163179916318, "obj2": 0.08194571583609547}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9853556485355649, "obj2": 0.004470842158129415}, {"determining": "( ( Min( Const ,BR ) - FirstVNF_CPU ) - ( MDR + ( ( BR + ACS ) - ACS ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( RMSe ,Min( DS ,Max( MUC,DS ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.029881456647648456}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6903765690376569, "obj2": 0.14139714960755623}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,Max( RMSe,DS ) ) - RMSe ) * CS ) - CS ) / Min( Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.01261066343962924}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( MUC * MUR )", "obj1": 0.9560669456066946, "obj2": 0.01586711447258221}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( PN,FirstVNF_RAM_Server ) - ( Max( ( ( DDR + Min( MDR ,MRS ) ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server * AMS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MUC - MUC ) + Min( RCSe ,MUC ) ) * Max( Min( RRSe ,DS ),DS ) ) - ( ( MUC / Min( DS ,MUR ) ) + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03592114398764727}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,Max( ACS,FirstVNF_Mem_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( MUC * Max( Min( RMSe ,DS ),DS ) )", "obj1": 0.9539748953974896, "obj2": 0.01633179527771588}, {"determining": "( ( ( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( MDR * ACS ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Max( ( MUR + ( RMSe + RMSe ) ),CS ) * ( MUC * MLU ) )", "obj1": 0.801255230125523, "obj2": 0.07996933987235864}, {"determining": "( ( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_Mem + RRS ) / CRS ) / ( Const - ACS ) ) ) ) ) + ( Min( PN ,DDR ) / MRS ) )", "choosing": "( ( Min( CS ,( MUR * MUR ) ) + RRSe ) * MUR )", "obj1": 0.8786610878661087, "obj2": 0.040987408332802476}, {"determining": "( ACS - ( Max( AMS,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * RRS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) )", "choosing": "( ( ( RCSe * MUM ) / ( Max( ( ( MUC * MLU ) + RRSe ),( ( RMSe * Max( MUM,MLU ) ) * MLU ) ) / Max( ( ( RMSe - MLU ) * RCSe ),Min( RRSe ,MLU ) ) ) ) / Min( MUC ,( RCSe / MUC ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005959832595381951}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,ACS ) - FirstVNF_Mem ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) - ( MDR - ( Max( ACS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( RMSe - CS )", "obj1": 0.9937238493723849, "obj2": 0.0020248723230872753}, {"determining": "( ( ( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - ( FirstVNF_RAM * AMS ) ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "( Max( ( MUR + RMSe ),CS ) * ( MUC * MLU ) )", "obj1": 0.7928870292887029, "obj2": 0.0829616177648323}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6903765690376569, "obj2": 0.14139714960755623}, {"determining": "( ACS - ( DDR + ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.1402114616946673}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.04949753200094924}, {"determining": "( ( Min( CRS ,FirstVNF_RAM_Server ) - ( MRS / Const ) ) - ( AMS + MRS ) )", "choosing": "( ( CS / Min( MUM ,( ( ( Max( ( CS / RRSe ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( ( CS - RMSe ) - RRSe ) ) ) * ( DS + DS ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.04016176260571311}, {"determining": "( ACS - ( ( Min( ( ( ( MRS * ( FirstVNF_RAM / ACS ) ) / FirstVNF_RAM ) - RRS ) ,ACS ) * ACS ) + DDR ) )", "choosing": "( ( DS / Min( MUM ,Min( RRSe ,( Max( ( ( MUM / MUM ) - ( DS * MUC ) ),Min( ( MLU * MLU ) ,MUM ) ) + ( ( MUM + MUC ) / MUC ) ) ) ) ) - CS )", "obj1": 0.8117154811715481, "obj2": 0.06845041839847882}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( Max( BR,AMS ) - ( ( Min( Const ,BR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( ( ( CRS - PN ) / Min( Const ,PN ) ) * Max( ACS,FirstVNF_Mem_Server ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( DS / Min( MUC ,RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.05607214999108812}, {"determining": "( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011637902451203426}, {"determining": "( ( DDR + ( Max( ( Max( ACS,PN ) / ACS ),( ( FirstVNF_RAM * PN ) - FirstVNF_RAM ) ) * ACS ) ) - ACS )", "choosing": "( ( MLU + RMSe ) * ( ( RMSe / CS ) / MLU ) )", "obj1": 0.8347280334728033, "obj2": 0.06545726415314312}, {"determining": "( ACS - ( Min( Min( FirstVNF_Mem ,MRS ) ,Min( Const ,CRS ) ) / AMS ) )", "choosing": "( ( CS - CS ) / Min( ( ( Min( MUM ,DS ) - Min( ( DS - Max( Max( MUR,MUM ),MUR ) ) ,MUR ) ) * MUM ) ,MUR ) )", "obj1": 0.6589958158995816, "obj2": 0.17861275528635767}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ACS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8472803347280334, "obj2": 0.05607214999108812}, {"determining": "( ( ( Min( Max( Max( ( ACS + FirstVNF_CPU ),MRS ),Const ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) * Min( ACS ,Const ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR - DS ) * ( ( Max( ( MUC * RRSe ),Min( RCSe ,MUC ) ) * Max( Min( DS ,RMSe ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ( CRS / FirstVNF_CPU ) + ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( CRS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03765456622312694}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6548117154811716, "obj2": 0.17892832868203587}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.042020453252626974}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( ( FirstVNF_RAM + ( Max( Min( ( ARS - ( FirstVNF_RAM * AMS ) ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) )", "choosing": "Min( ( Max( ( Min( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( MUR,RCSe ) / RRSe ) ) ) - MUC ),MLU ) / Max( MUM,MUC ) ) ,MLU )", "obj1": 0.7489539748953975, "obj2": 0.1054654173883998}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( DDR / RRS ) / DDR ) )", "choosing": "( ( ( MUC / RMSe ) * ( RRSe / ( ( MUR + DS ) * ( ( ( MUC + RMSe ) / DS ) / CS ) ) ) ) / Min( CS ,( RRSe + RCSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01204152811908803}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8807531380753139, "obj2": 0.040162929396954386}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.897489539748954, "obj2": 0.033450642058391274}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( FirstVNF_CPU - PN ) / ( BR + FirstVNF_CPU_Server ) ) ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( RRSe / ( DS - ( RCSe * ( ( ( Max( MUR,RCSe ) / RRSe ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.001357904395306961}, {"determining": "( ACS - ( DDR + ( ( ACS / ( ACS + ( MDR * ( ( FirstVNF_Mem - ARS ) / ACS ) ) ) ) * ACS ) ) )", "choosing": "( ( DS / ( RRSe / MUM ) ) - Max( RCSe,MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.04949753200094924}], "14": [{"determining": "( Min( ( ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,FirstVNF_CPU ) - ( MDR / ( ( Const * ( ( Max( PN,FirstVNF_CPU_Server ) / ( CRS - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU_Server - PN ) ,CRS ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( MUM * Min( DS ,( MLU - CS ) ) ) / DS ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,BR ) - FirstVNF_CPU ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU / MUM ) / CS ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( FirstVNF_CPU / Min( Const ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( MUR - ( Min( ( RCSe - DS ) ,CS ) / MUR ) ) / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( Min( CS ,MUR ) * ( Max( DS,MUR ) / RCSe ) ),MLU ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.20745343607530733}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( PN / BR ) ,ACS ) ) ) ) * Max( RRS,FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( ( MLU + RMSe ) * ( ( RMSe / CS ) / MLU ) ) ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6108786610878661, "obj2": 0.2475228467443593}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( ( ( DDR * MDR ) + FirstVNF_Mem ) / Max( MRS,FirstVNF_RAM ) ) ) - ( Min( BR ,ARS ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + Min( DS ,MUC ) ) ) / ( ( DS + ( CS / MLU ) ) - Min( Min( CS ,MUM ) ,MUM ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6380753138075314, "obj2": 0.2027101418243732}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( RRS / FirstVNF_CPU_Server ),MRS ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( DS * Max( RCSe,RRSe ) ) ,MUC ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6443514644351465, "obj2": 0.17996614584396725}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5753138075313807, "obj2": 0.28179229527252303}, {"determining": "( ( BR * Max( CRS,DDR ) ) - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,MRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * Max( MUR,RCSe ) ),Max( ( MUC * Min( CS ,DS ) ),RMSe ) ) + RRSe ) * MUM ) / ( DS + RMSe ) ) * MUR )", "obj1": 0.6652719665271967, "obj2": 0.15975387655887555}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( CRS ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( MDR,FirstVNF_CPU ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) * RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RRSe * ( MUR + Max( CS,RMSe ) ) ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.15588008128637615}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) - ( ( ( MDR * ( AMS - DDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( CS - ( DS / ( MUC + RRSe ) ) )", "obj1": 0.7845188284518828, "obj2": 0.08281838089970289}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - Min( DDR ,DDR ) ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( CS - ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( ( MLU * MUC ) / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MUM ) ) ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.07623781917877964}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,RRS ) ,Const ) ) ) ) )", "choosing": "( ( CS - ( ( MUC - RMSe ) * CS ) ) / ( RCSe * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.024786389055476934}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( Min( Const ,ACS ) / ( CRS - PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,( RRS - FirstVNF_CPU ) ) ) - ( CRS + ( RRS + FirstVNF_CPU_Server ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( MUM / RMSe ) ) / ( RMSe + ( MUR - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.7133891213389121, "obj2": 0.11972710739813112}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7217573221757322, "obj2": 0.11181103706860543}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - DDR )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5962343096234309, "obj2": 0.25137663106194336}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ( AMS - AMS ) ) / ( FirstVNF_RAM_Server + Const ) ) * ACS ) ) )", "choosing": "( Min( ( ( Max( RMSe,CS ) + RRSe ) * MUM ) ,RMSe ) * MUR )", "obj1": 0.6443514644351465, "obj2": 0.17996614584396725}, {"determining": "( ACS - ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( Min( ( MDR - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / AMS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MLU ) / RCSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.14698549071151504}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( ( ( MLU / RMSe ) * MUR ) * MUC ) ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.11062380259575418}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.7112970711297071, "obj2": 0.12384440018608828}, {"determining": "( ( Min( CRS ,Const ) - ( DDR - BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7510460251046025, "obj2": 0.09451486648513044}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Const - PN ) / Min( ( PN * DDR ) ,( FirstVNF_RAM_Server / ( MRS + ( PN * ACS ) ) ) ) ) ) ) )", "choosing": "( ( DS - Max( MUM,( ( MUR + DS ) * Max( ( ( ( RMSe - CS ) / ( DS * DS ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.08718564096078145}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8284518828451883, "obj2": 0.061743867803376}, {"determining": "( ( ( Const * ARS ) + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) - FirstVNF_CPU )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - ( DS - Min( ( MUM / ( Min( ( RMSe + CS ) ,CS ) * ( ( ( MUM * MLU ) * MUC ) - MUC ) ) ) ,Max( RCSe,( DS + CS ) ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server / ( BR / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( Max( ( ( DS / Max( MUM,RMSe ) ) + Min( RRSe ,( MUC + RCSe ) ) ),Min( MUR ,MLU ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.801255230125523, "obj2": 0.07221262861646242}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.060324341106287566}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.049201395238188714}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( RMSe - CS )", "obj1": 0.7447698744769874, "obj2": 0.09970388785652907}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,Min( RRSe ,Max( RMSe,DS ) ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.05082867061944925}, {"determining": "( ( ( ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) - ACS ) ) - ( FirstVNF_Mem_Server + RRS ) ) - FirstVNF_CPU ) - ( ( DDR / PN ) - ( Max( RRS,FirstVNF_Mem_Server ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS * ( MUM * ( Min( MLU ,( CS * ( MUC * ( CS + MLU ) ) ) ) - MUM ) ) ) - ( MUM * DS ) )", "obj1": 0.7426778242677824, "obj2": 0.10064691136700407}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - Min( FirstVNF_Mem_Server ,CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( Const - Min( PN ,ARS ) ) - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( CS + MUM ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RCSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.694560669456067, "obj2": 0.13623995595551303}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.020329165405827614}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.09444965683065813}, {"determining": "( ACS - ( ( ( ( CRS - MDR ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,Max( CRS,RRS ) ) ) ) ) * Max( RRS,FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( ( MUC + Max( RCSe,RMSe ) ) - ( MUM / MUR ) ) ) ,( MLU / Max( Min( RRSe ,MLU ),( RCSe * ( ( MUR + MUM ) * RRSe ) ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2501330016750609}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) ) - CRS ) - ( ( FirstVNF_RAM / ( Max( ARS,FirstVNF_CPU ) - ARS ) ) + ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) )", "choosing": "( Max( ( MUR + RMSe ),CS ) * ( RRSe / ( MUC / ( ( Max( ( MUM * MUC ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( Max( MUM,MUM ) - MUC ) + ( MLU - RRSe ) ) ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.14535773236322763}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( CRS ,CRS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( MUR + ( MLU - RRSe ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.05451752911407787}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9163179916317992, "obj2": 0.02887701854744367}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - CRS ) - ( Min( DDR ,BR ) + DDR ) )", "choosing": "( ( CS * ( RMSe * Max( Min( CS ,( Min( RMSe ,MUC ) / Min( DS ,DS ) ) ),( ( ( CS + RRSe ) - ( DS + Min( DS ,MUC ) ) ) / ( ( DS + ( CS / MLU ) ) - Min( RMSe ,( MUR * MUC ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6380753138075314, "obj2": 0.2027101418243732}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ACS - ( DDR + ( ACS * ( ( ( MDR * ( AMS / Min( MDR ,MDR ) ) ) / Max( MDR,PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) ) ) )", "choosing": "( Min( ( MLU + MUM ) ,CS ) * ( RRSe / RMSe ) )", "obj1": 0.7740585774058577, "obj2": 0.0905329055028804}, {"determining": "( ACS - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,( CS - RRSe ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.07205664175813367}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( ( ACS / ( ACS + ARS ) ),PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * Max( MUM,RRSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010691824820367648}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ACS * Min( DDR ,MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( RMSe ,Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ) + ( ( ( Min( MUR ,Min( MUC ,MLU ) ) + ( Min( RRSe ,RCSe ) + MUC ) ) + ( Min( RRSe ,CS ) - RRSe ) ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( Max( ( RMSe + MUR ),( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.06564225363743302}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.694560669456067, "obj2": 0.13623995595551303}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_RAM ) - Max( MDR,( Max( RRS,( FirstVNF_Mem + ( Min( ( RRS * FirstVNF_CPU ) ,RRS ) - ( FirstVNF_Mem_Server * AMS ) ) ) ) - ( FirstVNF_RAM_Server + Min( MDR ,PN ) ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),( ( RRSe + ( MUR * RRSe ) ) * ( CS + ( MLU / MLU ) ) ) ) + RRSe ) + MUM ) / ( Max( MLU,Min( MLU ,( Max( ( MUM - RCSe ),( MUC - DS ) ) + ( Min( DS ,DS ) - RRSe ) ) ) ) * MUM ) ) * MUR )", "obj1": 0.9769874476987448, "obj2": 0.008364439330266933}, {"determining": "( ( ( DDR - ( ( DDR - BR ) * ACS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( ( AMS * Const ) + MDR ) + BR ) ) - ( ( PN - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( ( MUM / RCSe ) + Min( MUC ,Min( ( RRSe - ( MLU + MUC ) ) ,MUC ) ) ) - MLU ) ,( Min( ( Min( CS ,DS ) * RMSe ) ,MUR ) * ( ( ( RCSe + Max( ( MLU / RRSe ),RCSe ) ) * Max( ( MUC * MLU ),RCSe ) ) + MUR ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.06329633622802808}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,Max( ACS,FirstVNF_Mem_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.017678329046718858}, {"determining": "( ACS - ( DDR + ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.1402114616946673}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( ( CRS - FirstVNF_CPU ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( CS - ( RMSe / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.06943971810983394}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.042020453252626974}, {"determining": "( ( Min( CRS ,Const ) - ( DDR - BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( MDR - ( ( ( ( Min( MDR ,( FirstVNF_CPU / MDR ) ) + DDR ) - Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( BR - PN ) ) ) ) - ( Min( DDR ,BR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU * MRS ) ,( ( ACS * Const ) + Const ) ) ) ) )", "choosing": "( ( RRSe / Max( Max( RRSe,MUM ),( ( MUC - RCSe ) + ( ( MLU / RCSe ) - ( DS * ( RMSe / MUC ) ) ) ) ) ) * ( MLU / RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.03153557308183724}, {"determining": "( ACS - ( Min( FirstVNF_RAM_Server ,Min( ACS ,FirstVNF_CPU ) ) + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( RRSe * ( MLU + ( RCSe * RCSe ) ) )", "obj1": 0.6820083682008368, "obj2": 0.14537080035504318}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.7698744769874477, "obj2": 0.09160827896057044}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011637902451203426}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06596193197251811}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,( FirstVNF_RAM + MRS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe / ( DS / MUR ) ) )", "obj1": 0.7635983263598326, "obj2": 0.09323227914078962}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( PN,FirstVNF_RAM_Server ) - ( Max( ( ( DDR + Min( MDR ,MRS ) ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server * AMS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MUC - MUC ) + Min( RCSe ,MUC ) ) * Max( Min( RRSe ,DS ),DS ) ) - ( ( MUC / Min( DS ,MUR ) ) + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03592114398764727}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,Max( ACS,FirstVNF_Mem_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( MUC * Max( Min( RMSe ,DS ),DS ) )", "obj1": 0.9539748953974896, "obj2": 0.01633179527771588}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03765456622312694}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( ( FirstVNF_RAM + ( Max( Min( ( BR - FirstVNF_Mem ) ,( RRS + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) - ARS ) ) + DDR ) - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RRSe ,DS ),DS ) ) - ( MUR + ( ( MUR + RMSe ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.005345959333521904}, {"determining": "( ( ( Min( Max( Max( ( ACS + FirstVNF_CPU ),MRS ),Const ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) * Min( ACS ,Const ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR - DS ) * ( ( Max( ( MUC * RRSe ),Min( RCSe ,MUC ) ) * Max( Min( DS ,RMSe ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8870292887029289, "obj2": 0.03679716456805298}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.7656903765690377, "obj2": 0.092097174310569}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6903765690376569, "obj2": 0.14139714960755623}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9476987447698745, "obj2": 0.01652113009477411}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( FirstVNF_CPU + ( ( BR - Const ) + Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - FirstVNF_CPU ) - ( MDR - AMS ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8493723849372385, "obj2": 0.05388640800738354}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,Max( RMSe,DS ) ) - RMSe ) * CS ) - CS ) / Min( Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ,( MLU / ( ( MUR - RCSe ) - ( MLU - CS ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.01261066343962924}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( MUC * MUR )", "obj1": 0.9560669456066946, "obj2": 0.01586711447258221}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03192802461621145}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8493723849372385, "obj2": 0.05388640800738354}, {"determining": "( ( CRS / FirstVNF_CPU ) + ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( CRS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05903448732041832}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( FirstVNF_CPU - PN ) / ( ( DDR + PN ) + FirstVNF_CPU_Server ) ) ,PN ) / Min( ( FirstVNF_RAM / CRS ) ,ACS ) ) ) ) )", "choosing": "( RMSe - ( MUM * MLU ) )", "obj1": 0.99581589958159, "obj2": 0.0012613198123804944}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MDR / ( ( Const * FirstVNF_RAM_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) ) )", "choosing": "( RRSe - CS )", "obj1": 0.997907949790795, "obj2": 0.0007632649490751128}, {"determining": "( ACS - ( ( ( MDR / ( ( FirstVNF_RAM + AMS ) - FirstVNF_CPU_Server ) ) * ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( PN / BR ) ,ACS ) ) ) ) ) + DDR ) )", "choosing": "( Min( ( DS - ( CS - Min( ( RCSe + MLU ) ,CS ) ) ) ,Max( MLU,RMSe ) ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2501330016750609}, {"determining": "( ( Min( CRS ,FirstVNF_RAM_Server ) - ( MRS / Const ) ) - ( AMS + MRS ) )", "choosing": "( ( CS / Min( MUM ,( ( ( Max( ( CS / RRSe ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( ( CS - RMSe ) - RRSe ) ) ) * ( DS + DS ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.04016176260571311}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( ( RRS / ( FirstVNF_RAM_Server - DDR ) ) - ( Min( ( ( FirstVNF_CPU - PN ) / ( BR + FirstVNF_CPU_Server ) ) ,PN ) / Min( ( ( BR + FirstVNF_RAM ) / FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( RMSe - ( ( MUC * MLU ) * ( RRSe + MUC ) ) )", "obj1": 0.9916317991631799, "obj2": 0.0025162148597817737}, {"determining": "( ( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_Mem + RRS ) / CRS ) / ( Const - ACS ) ) ) ) ) + ( Min( PN ,DDR ) / MRS ) )", "choosing": "( ( Min( CS ,( MUR * MUR ) ) + RRSe ) * MUR )", "obj1": 0.8786610878661087, "obj2": 0.040987408332802476}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.0412333129843473}, {"determining": "( ( Min( Const ,BR ) - FirstVNF_CPU ) - ( MDR + ( ( BR + ACS ) - ACS ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( RMSe ,Min( DS ,Max( MUC,DS ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.029881456647648456}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( DDR / RRS ) / DDR ) )", "choosing": "( ( ( MUC / RMSe ) * ( RRSe / ( ( MUR + DS ) * ( ( ( MUC + RMSe ) / DS ) / CS ) ) ) ) / Min( CS ,( RRSe + RCSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01204152811908803}, {"determining": "( ACS - Max( DDR,( ( ACS / Max( FirstVNF_CPU_Server,Const ) ) * ACS ) ) )", "choosing": "( ( RRSe - MUR ) - MUR )", "obj1": 0.8702928870292888, "obj2": 0.048319972244948856}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9853556485355649, "obj2": 0.004470842158129415}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8807531380753139, "obj2": 0.040162929396954386}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.897489539748954, "obj2": 0.033450642058391274}, {"determining": "( ( ( ( AMS / FirstVNF_RAM_Server ) - FirstVNF_CPU ) - ( MDR / ( ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU - Const ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( RCSe + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),( MUM - RRSe ) ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.042020453252626974}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,FirstVNF_Mem ) ) - ( Const / ACS ) )", "choosing": "( Max( Min( MUC ,( ( MUC + RMSe ) + CS ) ),RCSe ) / ( ( RCSe * MUM ) * ( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( DS ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03192802461621145}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,DS ) ) * ( RRSe / Min( MUC ,RCSe ) ) )", "obj1": 0.9142259414225942, "obj2": 0.029881456647648456}], "15": [{"determining": "( MDR - ( FirstVNF_CPU / Min( Const ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( MUR - ( Min( ( RCSe - DS ) ,CS ) / MUR ) ) / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( Min( CS ,MUR ) * ( Max( DS,MUR ) / RCSe ) ),MLU ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) * ARS ) + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) - FirstVNF_CPU )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - ( DS - Min( ( MUM / ( ( ( RMSe - CS ) / ( MUR / RMSe ) ) * ( ( ( MUM * MLU ) * MUC ) - MUC ) ) ) ,Max( RCSe,( DS + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ,FirstVNF_CPU ) - ( MDR / ( ( Const * ( ( Max( PN,FirstVNF_CPU_Server ) / ( CRS - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU_Server - PN ) ,CRS ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( MUM * Min( DS ,( MLU - CS ) ) ) / DS ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ACS ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.20745343607530733}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( PN / BR ) ,ACS ) ) ) ) * Max( RRS,FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( ( MLU + RMSe ) * ( ( RMSe / CS ) / MLU ) ) ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6108786610878661, "obj2": 0.2475228467443593}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( RRS / FirstVNF_CPU_Server ),MRS ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( DS * Max( RCSe,RRSe ) ) ,MUC ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5753138075313807, "obj2": 0.28179229527252303}, {"determining": "( ACS - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) + ( ( ( ( ( Const * ACS ) * MDR ) / Max( ( Const + FirstVNF_Mem ),PN ) ) / ( AMS + AMS ) ) * ACS ) ) )", "choosing": "( ( Min( ( Max( ( ( RRSe / MUC ) * DS ),Max( RMSe,( MUC - Min( CS ,RRSe ) ) ) ) + Min( RRSe ,( Min( DS ,CS ) + RMSe ) ) ) ,MUM ) / RMSe ) * MUR )", "obj1": 0.6380753138075314, "obj2": 0.1846231500657932}, {"determining": "( ( BR * Max( CRS,DDR ) ) - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,MRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * Max( MUR,RCSe ) ),Max( ( MUC * Min( CS ,DS ) ),RMSe ) ) + RRSe ) * MUM ) / ( DS + RMSe ) ) * MUR )", "obj1": 0.6652719665271967, "obj2": 0.15975387655887555}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( CRS ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( MDR,FirstVNF_CPU ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) * RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RRSe * ( MUR + Max( CS,RMSe ) ) ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.15588008128637615}, {"determining": "( ACS - ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( Min( ( MDR - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / AMS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MLU ) / RCSe ) * MUR )", "obj1": 0.6380753138075314, "obj2": 0.1846231500657932}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,RRS ) ,Const ) ) ) ) )", "choosing": "( ( CS - ( ( MUC - RMSe ) * CS ) ) / ( RCSe * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ACS - ( DDR + ( ( ( ( ( MDR * ACS ) * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - RMSe ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6506276150627615, "obj2": 0.17881155913947705}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - DDR )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5962343096234309, "obj2": 0.25137663106194336}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - RRSe ) + RCSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.04399913520378932}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / MDR ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),RMSe ) * ( RRSe / ( DS / MUR ) ) )", "obj1": 0.7280334728033473, "obj2": 0.11017267013510071}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.12299820737151441}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( Min( Const ,ACS ) / ( CRS - PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,( RRS - FirstVNF_CPU ) ) ) - ( CRS + ( RRS + FirstVNF_CPU_Server ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( MUM / RMSe ) ) / ( RMSe + ( MUR - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.7133891213389121, "obj2": 0.11972710739813112}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.049201395238188714}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUM,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07515274413801927}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7154811715481172, "obj2": 0.11242284388911906}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07772900359893291}, {"determining": "( ( ( MDR - Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - RRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS * FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUR + ( ( ( MLU * MUR ) * MUM ) + RCSe ) ) ) - CS )", "obj1": 0.698744769874477, "obj2": 0.13340679754285556}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05927311267734156}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + RMSe ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9121338912133892, "obj2": 0.02751647322220085}, {"determining": "( ( Min( CRS ,Const ) - ( DDR - BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server / ( BR / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( Max( ( ( DS / Max( MUM,RMSe ) ) + Min( RRSe ,( MUC + RCSe ) ) ),Min( MUR ,MLU ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.801255230125523, "obj2": 0.07221262861646242}, {"determining": "( ( ( ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) - ACS ) ) - ( FirstVNF_Mem_Server + RRS ) ) - FirstVNF_CPU ) - ( ( DDR / PN ) - ( Max( RRS,FirstVNF_Mem_Server ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS * ( MUM * ( Min( MLU ,( CS * ( MUC * ( CS + MLU ) ) ) ) - MUM ) ) ) - ( MUM * DS ) )", "obj1": 0.7426778242677824, "obj2": 0.10064691136700407}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8284518828451883, "obj2": 0.061743867803376}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) - ( ( ( MDR * ( AMS - DDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( CS - ( DS / ( MUC + RRSe ) ) )", "obj1": 0.7845188284518828, "obj2": 0.08281838089970289}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( ( CRS - FirstVNF_CPU ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( CS - ( RMSe / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.06943971810983394}, {"determining": "( ACS - ( Min( FirstVNF_RAM_Server ,Min( ACS ,FirstVNF_CPU ) ) + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( RRSe * ( MLU + ( RCSe * RCSe ) ) )", "obj1": 0.6820083682008368, "obj2": 0.14537080035504318}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( DS / Max( MUM,RRSe ) ) ,( RMSe * MUC ) ) / Min( ( RCSe * MUM ) ,( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.7217573221757322, "obj2": 0.11181103706860543}, {"determining": "( ACS - ( DDR + ( ( ( ( Min( FirstVNF_RAM_Server ,Max( RRS,ARS ) ) * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC / ( ( CS + MLU ) / MUR ) ) + MUM ) - MUR ) / Max( RMSe,( DS + ( RRSe / CS ) ) ) ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.14698549071151504}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.09444965683065813}, {"determining": "( ACS - ( ( ( ( CRS - MDR ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,Max( CRS,RRS ) ) ) ) ) * Max( RRS,FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( ( MUC + Max( RCSe,RMSe ) ) - ( MUM / MUR ) ) ) ,( MLU / Max( Min( RRSe ,MLU ),( RCSe * ( ( MUR + MUM ) * RRSe ) ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2501330016750609}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( ( FirstVNF_CPU_Server * DDR ) * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( AMS + FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / Min( ( MLU + ( MLU - RMSe ) ) ,RCSe ) ) * MUR )", "obj1": 0.6882845188284519, "obj2": 0.14191136662805226}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.2564840780050454}, {"determining": "( ( ( Min( ( RRS * ( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem_Server ) ) + Max( MDR,CRS ) ) ) ,CRS ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + RMSe ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,( ( DS * MUC ) / Max( MLU,CS ) ) ) ) ),RRSe ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09611181998617364}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( MUC * MUR )", "obj1": 0.9560669456066946, "obj2": 0.01586711447258221}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05885324727731367}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.08718564096078145}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ( AMS - AMS ) ) / ( FirstVNF_RAM_Server + Const ) ) * ACS ) ) )", "choosing": "( Min( ( ( Max( RMSe,CS ) + RRSe ) * MUM ) ,RMSe ) * MUR )", "obj1": 0.6443514644351465, "obj2": 0.17996614584396725}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_CPU / Const ) / ( MRS * FirstVNF_CPU ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUR ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - Min( ( MUR + DS ) ,MLU ) )", "obj1": 0.9267782426778243, "obj2": 0.023165660933688985}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( RMSe - CS )", "obj1": 0.7447698744769874, "obj2": 0.09970388785652907}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( ( ( CS + RRSe ) * MUM ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.03150702884081203}, {"determining": "( ACS - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,( CS - RRSe ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.07205664175813367}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( ( ACS + ARS ),FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( DS ,MLU ) ) ) ) )", "obj1": 0.9184100418410042, "obj2": 0.026699564823375332}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_RAM ) - Max( MDR,( Max( RRS,( FirstVNF_Mem + ( Min( ( RRS * FirstVNF_CPU ) ,RRS ) - ( FirstVNF_Mem_Server * AMS ) ) ) ) - ( FirstVNF_RAM_Server + Min( MDR ,PN ) ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),( ( RRSe + ( MUR * RRSe ) ) * ( CS + ( MLU / MLU ) ) ) ) + RRSe ) + MUM ) / ( Max( MLU,Min( MLU ,( Max( ( MUM - RCSe ),( MUC - DS ) ) + ( Min( DS ,DS ) - RRSe ) ) ) ) * MUM ) ) * MUR )", "obj1": 0.9769874476987448, "obj2": 0.008364439330266933}, {"determining": "( ( ( DDR - ( ( DDR - BR ) * ACS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( ( AMS * Const ) + MDR ) + BR ) ) - ( ( PN - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( ( MUM / RCSe ) + Min( MUC ,Min( ( RRSe - ( MLU + MUC ) ) ,MUC ) ) ) - MLU ) ,( Min( ( Min( CS ,DS ) * RMSe ) ,MUR ) * ( ( ( RCSe + Max( ( MLU / RRSe ),RCSe ) ) * Max( ( MUC * MLU ),RCSe ) ) + MUR ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.06329633622802808}, {"determining": "( ( ( Min( Max( Min( Min( DDR ,MRS ) ,( Min( MDR ,ARS ) - ( MDR - CRS ) ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( ( CRS + Const ) - ( ( CRS - PN ) / ( Const - ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( ( RMSe * MUC ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( ( MUR + MLU ),RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( MUM * MUM ) ) )", "obj1": 0.6924686192468619, "obj2": 0.13859921765659972}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06697535309975644}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) - Min( Const ,ACS ) ) ) ) ) + ( Max( AMS,FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Max( RMSe,DS ) - ( DS / Max( MUM,RRSe ) ) )", "obj1": 0.8451882845188284, "obj2": 0.057135817512709575}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.08281838089970289}, {"determining": "( ACS - ( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) / ( Min( ( MDR - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / AMS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MLU ) / RCSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.14698549071151504}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7510460251046025, "obj2": 0.09451486648513044}, {"determining": "( ACS - ( DDR + ( ACS * ( ( ( MDR * ( AMS / Min( MDR ,MDR ) ) ) / Max( MDR,PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) ) ) )", "choosing": "( Min( ( MLU + MUM ) ,CS ) * ( RRSe / RMSe ) )", "obj1": 0.7740585774058577, "obj2": 0.0905329055028804}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06596193197251811}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - ( DDR / PN ) ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( RRSe ,Max( DS,RMSe ) ) - RMSe ) ,CS ) - CS ) / Min( Max( RMSe,Max( ( MUC / Min( DS ,RMSe ) ),( CS / Min( RMSe ,( RRSe * MUM ) ) ) ) ) ,( MLU / ( ( MUR - RCSe ) - Min( ( RRSe + ( MUM - Min( MUR ,MUM ) ) ) ,RMSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012604852621296039}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,( FirstVNF_RAM + MRS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe / ( DS / MUR ) ) )", "obj1": 0.7635983263598326, "obj2": 0.09323227914078962}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ACS * Min( DDR ,MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( RMSe ,Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ) + ( ( ( Min( MUR ,Min( MUC ,MLU ) ) + ( Min( RRSe ,RCSe ) + MUC ) ) + ( Min( RRSe ,CS ) - RRSe ) ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( Max( ( RMSe + MUR ),( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.06564225363743302}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( PN,FirstVNF_RAM_Server ) - ( Max( ( ( DDR + Min( MDR ,MRS ) ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server * AMS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MUC - MUC ) + Min( RCSe ,MUC ) ) * Max( Min( RRSe ,DS ),DS ) ) - ( ( MUC / Min( DS ,MUR ) ) + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03592114398764727}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( MLU ,( RRSe + RCSe ) ) )", "obj1": 0.9497907949790795, "obj2": 0.016320291253806206}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6903765690376569, "obj2": 0.14139714960755623}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ) + AMS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9372384937238494, "obj2": 0.020562672736840613}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.054034254187381475}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MLU / RMSe ) * MUR ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.00890405054815915}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Const - PN ) / Min( ( PN * DDR ) ,( FirstVNF_RAM_Server / ( MRS + ( PN * ACS ) ) ) ) ) ) ) )", "choosing": "( ( DS - Max( MUM,( ( MUR + DS ) * Max( ( ( ( RMSe - CS ) / ( DS * DS ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.08718564096078145}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / RMSe ) - CS )", "obj1": 0.9246861924686193, "obj2": 0.024108306605466954}, {"determining": "( ( Min( CRS ,Const ) - ( DDR - BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( DDR ,BR ) - FirstVNF_CPU ),Max( ACS,FirstVNF_Mem_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( RRS + ( DDR - MDR ) ) )", "choosing": "( CS - ( Min( MUM ,DS ) / Min( MUM ,( ( ( MUR + CS ) + DS ) * ( MUR + MUR ) ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.017678329046718858}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.020329165405827614}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,Min( RRSe ,Max( RMSe,DS ) ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.05082867061944925}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( ( ACS / ( ACS + ARS ) ),PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * Max( MUM,RRSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010691824820367648}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6443514644351465, "obj2": 0.17996614584396725}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,Min( RRSe ,Max( RMSe,DS ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.03881856368217629}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.694560669456067, "obj2": 0.13623995595551303}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( ( ACS / ( ACS + ARS ) ),PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( ( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * Max( MUM,RRSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ) / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.011431911283024414}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8807531380753139, "obj2": 0.040162929396954386}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / ( CRS / FirstVNF_CPU ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUM,RMSe ) ) + Max( MUR,RCSe ) ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.024786389055476934}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03192802461621145}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8493723849372385, "obj2": 0.05388640800738354}, {"determining": "( ( ( Min( Max( ( ( Min( MDR ,Const ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,Max( RMSe,DS ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.05082867061944925}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8577405857740585, "obj2": 0.04957084370227082}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8493723849372385, "obj2": 0.05388640800738354}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - Min( FirstVNF_Mem_Server ,CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( Const - Min( PN ,ARS ) ) - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( CS + MUM ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RCSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.694560669456067, "obj2": 0.13623995595551303}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( Min( ( PN / BR ) ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.003794353180515859}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( FirstVNF_CPU - PN ) / ( BR + FirstVNF_CPU_Server ) ) ,PN ) / Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( RMSe - ( ( ( ( DS / Max( MUM,RMSe ) ) + RMSe ) + MUM ) * RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.0018884603627581271}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,Max( ACS,FirstVNF_Mem_Server ) ) - ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / Min( MUM ,MLU ) ) - CS )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( ( FirstVNF_RAM / BR ) ,ACS ) ) ) ) * ( ( Const * FirstVNF_Mem ) * MDR ) ) + DDR ) )", "choosing": "( ( ( ( ( ( Min( ( MLU / MLU ) ,Max( RCSe,CS ) ) - RRSe ) - Min( CS ,DS ) ) / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2501330016750609}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ACS - ( ( Max( ( CRS - PN ),( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,Max( MRS,Const ) ) / Min( ( PN / BR ) ,ACS ) ) ) ) * Max( FirstVNF_Mem_Server,RRS ) ) + DDR ) )", "choosing": "( ( ( ( ( Min( CS ,DS ) - MUC ) / RMSe ) * ( RRSe / ( Max( MLU,DS ) / MUC ) ) ) - CS ) / Min( ( RCSe * ( ( MLU + RMSe ) * ( ( RMSe / CS ) / MLU ) ) ) ,( MLU / Max( ( RCSe * ( ( MUM + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6108786610878661, "obj2": 0.2475228467443593}], "16": [{"determining": "( MDR - ( FirstVNF_CPU / Min( Const ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( MUR - ( Min( ( RCSe - DS ) ,CS ) / MUR ) ) / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( Min( CS ,MUR ) * ( Max( DS,MUR ) / RCSe ) ),MLU ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ( BR * Max( CRS,DDR ) ) - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,MRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( ( MUR + MLU ),RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) * ARS ) + ( ( ACS / ( ACS + ARS ) ) * ACS ) ) - FirstVNF_CPU )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - ( DS - Min( ( MUM / ( ( ( RMSe - CS ) / ( MUR / RMSe ) ) * ( ( ( MUM * MLU ) * MUC ) - MUC ) ) ) ,Max( RCSe,( DS + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * ( FirstVNF_CPU / Min( DDR ,( PN / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) + DDR ) - ACS )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( Min( MUR ,( MUM * RCSe ) ) + MLU ) / ( DS - MUM ) ) ) - CS ) / Min( ( MLU / ( RMSe * MLU ) ) ,( RCSe * MUM ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.604602510460251, "obj2": 0.2213003563162913}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5857740585774058, "obj2": 0.24982745845604395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.20745343607530733}, {"determining": "( ACS - ( DDR + ( ( ( ( Min( Const ,ACS ) * MDR ) / Max( ( Const + FirstVNF_Mem ),PN ) ) / ( AMS + AMS ) ) * ACS ) ) )", "choosing": "( ( Min( ( Max( ( ( MUM / MUC ) * DS ),Max( RMSe,( MUC - Min( CS ,RRSe ) ) ) ) + RRSe ) ,MUM ) / RMSe ) * MUR )", "obj1": 0.6338912133891214, "obj2": 0.19461378817704061}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5753138075313807, "obj2": 0.28179229527252303}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( CRS ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( MDR,FirstVNF_CPU ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) * RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RRSe * ( MUR + Max( CS,RMSe ) ) ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.15588008128637615}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,RRS ) - ( FirstVNF_RAM_Server + ( Const - Const ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( Max( ( ( DS / Max( MUR,MUR ) ) + RMSe ),Min( MUR ,RMSe ) ) * ( Min( RCSe ,MUM ) + DS ) ) ) ) - RMSe )", "obj1": 0.7217573221757322, "obj2": 0.10883788200195715}, {"determining": "( ACS - ( DDR + ( ( ( ( FirstVNF_Mem_Server - ( ( RRS / PN ) / Min( Const ,ACS ) ) ) + DDR ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + ( DS - MUM ) ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6485355648535565, "obj2": 0.17800871787499575}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7426778242677824, "obj2": 0.0976559000023265}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( DDR + Min( ( ( ( ( RRS * RRS ) * Min( Const ,ACS ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) ,ACS ) ) )", "choosing": "( ( CS / ( RMSe * ( MUC + RCSe ) ) ) * ( ( Min( ( MLU * MUC ) ,Min( ( RMSe + CS ) ,DS ) ) - MLU ) / MUR ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( Min( Const ,ACS ) / ( CRS - PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,( RRS - FirstVNF_CPU ) ) ) - ( CRS + ( RRS + FirstVNF_CPU_Server ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( MUM / RMSe ) ) / ( RMSe + ( MUR - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.7133891213389121, "obj2": 0.11972710739813112}, {"determining": "( ACS - ( ( BR + ACS ) + ( ( ( ( MDR * Min( Const ,ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( DS / Min( Min( CS ,Max( CS,DS ) ) ,( ( MUR + DS ) * ( ( Max( Min( MUR ,MUC ),DS ) * Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) ) - ( MUR + ( MLU - Max( RRSe,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ACS - ( DDR + ( ACS * ( ( ( MDR * ( AMS / Min( MDR ,MDR ) ) ) / Max( MDR,PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) ) ) )", "choosing": "( Min( ( MLU + MUM ) ,CS ) * ( RRSe / RMSe ) )", "obj1": 0.7740585774058577, "obj2": 0.0905329055028804}, {"determining": "( ACS - ( DDR + ( ( ( ( Min( Const ,ACS ) * MDR ) / Max( PN,( Const + FirstVNF_Mem ) ) ) / ( AMS + AMS ) ) * Min( ( ( Max( Min( ACS ,FirstVNF_CPU_Server ),CRS ) * FirstVNF_CPU_Server ) + FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( MUM / MUC ) * DS ),Max( RMSe,( MUC - Min( CS ,RRSe ) ) ) ) + RRSe ) ,MUM ) / RMSe ) * MUR )", "obj1": 0.6380753138075314, "obj2": 0.1846231500657932}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.049201395238188714}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,( FirstVNF_RAM + MRS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe / ( DS / MUR ) ) )", "obj1": 0.7635983263598326, "obj2": 0.09323227914078962}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05927311267734156}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7154811715481172, "obj2": 0.11242284388911906}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) - ( ( ( MDR * ( AMS - DDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( CS - ( DS / ( MUC + RRSe ) ) )", "obj1": 0.7845188284518828, "obj2": 0.08281838089970289}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8096234309623431, "obj2": 0.06863047628253019}, {"determining": "( ACS - ( Min( FirstVNF_RAM_Server ,Min( ACS ,FirstVNF_CPU ) ) + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( RRSe * ( MLU + ( RCSe * RCSe ) ) )", "obj1": 0.6820083682008368, "obj2": 0.14537080035504318}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.14698549071151504}, {"determining": "( ( Min( CRS ,Const ) - ( BR - DDR ) ) - ( MDR - ( Max( RRS,( Max( MRS,FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - MLU )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( BR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( RCSe * MUR ) - CS )", "obj1": 0.7071129707112971, "obj2": 0.12718055403374273}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7573221757322176, "obj2": 0.09328191900056343}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( MRS,ARS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + MUC ),Min( MUR ,( MUM / ( MUM / MUM ) ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05774005833815936}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( ( FirstVNF_CPU_Server * DDR ) * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( AMS + FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / Min( ( MLU + ( MLU - RMSe ) ) ,RCSe ) ) * MUR )", "obj1": 0.6882845188284519, "obj2": 0.14191136662805226}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server / ( BR / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( Max( ( ( DS / Max( MUM,RMSe ) ) + Min( RRSe ,( MUC + RCSe ) ) ),Min( MUR ,MLU ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.801255230125523, "obj2": 0.07221262861646242}, {"determining": "( ( Min( DDR ,BR ) - Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( ( FirstVNF_Mem_Server * ARS ) - BR ) ) ) ) ) )", "choosing": "( Max( DS,( MUR * ( MUR / ( DS / ( ( ( RMSe / MUC ) * MUM ) / ( RCSe * DS ) ) ) ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) - Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.015272377247491175}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,RRS ) ,Const ) ) ) ) )", "choosing": "( ( CS - ( ( MUC - RMSe ) * CS ) ) / ( RCSe * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ACS - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,( CS - RRSe ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.07205664175813367}, {"determining": "( ( ( MDR - Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - RRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS * FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUR + ( ( ( MLU * MUR ) * MUM ) + RCSe ) ) ) - CS )", "obj1": 0.698744769874477, "obj2": 0.13340679754285556}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.08718564096078145}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( ( Min( ( RRS * ( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem_Server ) ) + Max( MDR,CRS ) ) ) ,CRS ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + RMSe ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,( ( DS * MUC ) / Max( MLU,CS ) ) ) ) ),RRSe ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09611181998617364}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9121338912133892, "obj2": 0.02749439082126275}, {"determining": "( ( RRS / ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) - ( FirstVNF_Mem_Server * DDR ) )", "choosing": "( CS - ( ( ( MUM + RCSe ) + ( MUM / MUR ) ) - Max( ( RCSe - ( ( ( Max( RCSe,RMSe ) / Max( MUC,RCSe ) ) * RMSe ) + RMSe ) ),MUM ) ) )", "obj1": 0.7949790794979079, "obj2": 0.07456114891048113}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( ( ( CS + RRSe ) * MUM ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.03150702884081203}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - RRSe ) + RCSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.04399913520378932}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7510460251046025, "obj2": 0.09451486648513044}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ACS * Min( DDR ,MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( RMSe ,Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ) + ( ( ( Min( MUR ,Min( MUC ,MLU ) ) + ( Min( RRSe ,RCSe ) + MUC ) ) + ( Min( RRSe ,CS ) - RRSe ) ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( Max( ( RMSe + MUR ),( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.06564225363743302}, {"determining": "( ( ( DDR - ( ( DDR - BR ) * ACS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( ( AMS * Const ) + MDR ) + BR ) ) - ( ( PN - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( ( MUM / RCSe ) + Min( MUC ,Min( ( RRSe - ( MLU + MUC ) ) ,MUC ) ) ) - MLU ) ,( Min( ( Min( CS ,DS ) * RMSe ) ,MUR ) * ( ( ( RCSe + Max( ( MLU / RRSe ),RCSe ) ) * Max( ( MUC * MLU ),RCSe ) ) + MUR ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.06329633622802808}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( Min( MDR ,ARS ) - Min( FirstVNF_Mem_Server ,CRS ) ) ,Min( DDR ,MRS ) ) / Min( ACS ,( RRS * BR ) ) ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / ( DS / Max( ( MUC / ( ( CS + MUM ) + ( RMSe + ( ( CS * MUR ) - MUR ) ) ) ),RRSe ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005778021561081537}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - RRSe ) + RCSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.04399913520378932}, {"determining": "( ( ( Min( Max( Min( Min( DDR ,MRS ) ,( Min( MDR ,ARS ) - ( MDR - CRS ) ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( ( CRS + Const ) - ( ( CRS - PN ) / ( Const - ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( ( RMSe * MUC ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( ( MUR + MLU ),RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( MUM * MUM ) ) )", "obj1": 0.6924686192468619, "obj2": 0.13859921765659972}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( RRS / FirstVNF_CPU_Server ),MRS ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( DS * Max( RCSe,RRSe ) ) ,MUC ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * Min( Const ,ACS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6443514644351465, "obj2": 0.17996614584396725}, {"determining": "( ACS - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) + ( ( ( ( ( Const * ACS ) * MDR ) / Max( ( Const + FirstVNF_Mem ),PN ) ) / ( AMS + AMS ) ) * ACS ) ) )", "choosing": "( ( Min( ( Max( ( ( RRSe / MUC ) * DS ),Max( RMSe,( MUC - Min( CS ,RRSe ) ) ) ) + Min( RRSe ,( Min( DS ,CS ) + RMSe ) ) ) ,MUM ) / RMSe ) * MUR )", "obj1": 0.6380753138075314, "obj2": 0.1846231500657932}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + Min( FirstVNF_RAM ,ARS ) ) - Max( ( ACS + ARS ),FirstVNF_RAM ) ),PN ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,( Max( ( ( ( RCSe - RCSe ) - MLU ) * MUM ),RRSe ) + MUC ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.0413461038476819}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.08281838089970289}, {"determining": "( ACS - ( DDR + ( ( ( ( Min( FirstVNF_RAM_Server ,Max( RRS,ARS ) ) * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC / ( ( CS + MLU ) / MUR ) ) + MUM ) - MUR ) / Max( RMSe,( DS + ( RRSe / CS ) ) ) ) * MUR )", "obj1": 0.6799163179916318, "obj2": 0.14698549071151504}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.020329165405827614}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.12299820737151441}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( MLU ,( RRSe + RCSe ) ) )", "obj1": 0.9497907949790795, "obj2": 0.016320291253806206}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( ( ACS / ( ACS + ARS ) ),PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( ( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * Max( MUM,RRSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ) / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.011431911283024414}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - BR ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.04246206488120598}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( CRS ,PN ) / Min( Min( ( PN / BR ) ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( ( RCSe * ( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.003794353180515859}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.8807531380753139, "obj2": 0.03926758811887842}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9602510460251046, "obj2": 0.011976833521398897}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.031783072729992576}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),( MLU - CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.025681521103283173}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Max( CRS,PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( FirstVNF_CPU - Min( ARS ,CRS ) ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( ( Min( RMSe ,Min( MUR ,DS ) ) / ( RRSe + MUR ) ) * DS ) ,MUM ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07772900359893291}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( FirstVNF_Mem_Server * MRS ) - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) )", "choosing": "( Max( MUM,RCSe ) - MUM )", "obj1": 0.8451882845188284, "obj2": 0.05664301440779155}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_RAM ) - Max( MDR,( Max( RRS,( FirstVNF_Mem + ( Min( ( RRS * FirstVNF_CPU ) ,RRS ) - ( FirstVNF_Mem_Server * AMS ) ) ) ) - ( FirstVNF_RAM_Server + Min( MDR ,PN ) ) ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),( ( RRSe + ( MUR * RRSe ) ) * ( CS + ( MLU / MLU ) ) ) ) + RRSe ) + MUM ) / ( Max( MLU,Min( MLU ,( Max( ( MUM - RCSe ),( MUC - DS ) ) + ( Min( DS ,DS ) - RRSe ) ) ) ) * MUM ) ) * MUR )", "obj1": 0.9769874476987448, "obj2": 0.008364439330266933}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ACS - ( DDR + ( ( ( Max( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ( AMS - AMS ) ) / ( FirstVNF_RAM_Server + Const ) ) * ACS ) ) )", "choosing": "( Min( ( ( Max( RMSe,CS ) + RRSe ) * MUM ) ,RMSe ) * MUR )", "obj1": 0.6443514644351465, "obj2": 0.17996614584396725}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9142259414225942, "obj2": 0.0271279784080413}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.08718564096078145}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8284518828451883, "obj2": 0.061743867803376}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / PN ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.696652719665272, "obj2": 0.13343797444722424}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8493723849372385, "obj2": 0.05388640800738354}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.054034254187381475}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( DDR ,BR ) - FirstVNF_CPU ),Max( ACS,FirstVNF_Mem_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - RMSe ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.016649509914979026}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( AMS ,BR ) - FirstVNF_CPU ),Max( ACS,FirstVNF_Mem_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( ( MUR + MUR ) + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.017678329046718858}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( RRS,FirstVNF_Mem_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + MLU ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07759133351640327}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8284518828451883, "obj2": 0.061743867803376}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06596193197251811}, {"determining": "( ( Min( DDR ,RRS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( DS / Max( MUM,MUR ) ) - CS )", "obj1": 0.9707112970711297, "obj2": 0.008781423715359834}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7154811715481172, "obj2": 0.11242284388911906}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) * ( ( ( MDR * ACS ) / ( ( ACS * Const ) / FirstVNF_CPU ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM / ( ( MUR + DS ) * Max( ( ( DS / Max( MUM,RMSe ) ) + Max( MUR,RCSe ) ),Min( MUR ,MLU ) ) ) ) ) - ( ( RRSe * ( ( Max( ( MUC / MUR ),MUR ) / Min( ( CS / DS ) ,( ( CS - RMSe ) * DS ) ) ) / DS ) ) - MUM ) )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.12299820737151441}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.8577405857740585, "obj2": 0.04957084370227082}, {"determining": "( ( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( ( FirstVNF_RAM_Server / BR ) - FirstVNF_RAM ) / Min( CRS ,MDR ) ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + ( MUC / MUM ) ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( Min( MUC ,MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008450588615993038}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( PN,FirstVNF_RAM_Server ) - ( Max( ( ( DDR + Min( MDR ,MRS ) ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server * AMS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MUC - MUC ) + Min( RCSe ,MUC ) ) * Max( Min( RRSe ,DS ),DS ) ) - ( ( MUC / Min( DS ,MUR ) ) + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03592114398764727}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / ( ACS / Min( ACS ,AMS ) ) ) - Max( ( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( RRSe,MUM ) ) - ( RRSe / MUC ) )", "obj1": 0.9205020920502092, "obj2": 0.024762763204443063}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.694560669456067, "obj2": 0.13623995595551303}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( MDR ,MDR ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MUM * RRSe ) / RMSe ) )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}], "17": [{"determining": "( MDR - ( FirstVNF_CPU / Min( Const ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( MUR - ( Min( ( RCSe - DS ) ,CS ) / MUR ) ) / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( Min( CS ,MUR ) * ( Max( DS,MUR ) / RCSe ) ),MLU ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( DDR ,BR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( CS - ( DS / ( MUC + RRSe ) ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Max( CRS,DDR ) ) - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,MRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( ( MUR + MLU ),RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * ( FirstVNF_CPU / Min( DDR ,( PN / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) + DDR ) - ACS )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( Min( MUR ,( MUM * RCSe ) ) + MLU ) / ( DS - MUM ) ) ) - CS ) / Min( ( MLU / ( RMSe * MLU ) ) ,( RCSe * MUM ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22987361828581399}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5857740585774058, "obj2": 0.24982745845604395}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ACS - ( DDR * ( ( ( ( Min( ( PN + ARS ) ,BR ) * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( Max( RMSe,( DS - CS ) ) - MUM )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( RRS + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( Max( MUM,RMSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6255230125523012, "obj2": 0.1946873214661808}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.604602510460251, "obj2": 0.2213003563162913}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / FirstVNF_Mem_Server ) - ( ( RRS / PN ) + Min( Const ,ACS ) ) ) + DDR ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,RCSe ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) / Max( MLU,( Max( CS,CS ) - ( MUC - MUM ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6338912133891214, "obj2": 0.1897862989025983}, {"determining": "( ACS - ( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) + DDR ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.5753138075313807, "obj2": 0.28179229527252303}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.08602101659762909}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,RRS ) - ( FirstVNF_RAM_Server + ( Const - Const ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( Max( ( ( DS / Max( MUR,MUR ) ) + RMSe ),Min( MUR ,RMSe ) ) * ( Min( RCSe ,MUM ) + DS ) ) ) ) - RMSe )", "obj1": 0.7217573221757322, "obj2": 0.10883788200195715}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.608786610878661, "obj2": 0.2113794366718939}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.08031521493998274}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / ( MUR + ( ( ( MLU * MUR ) * MUM ) + RCSe ) ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.04285779776178526}, {"determining": "( ACS - ( ( BR + ACS ) + ( ( ( ( MDR * Min( Const ,ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( DS / Min( Min( CS ,Max( CS,DS ) ) ,( ( MUR + DS ) * ( ( Max( Min( MUR ,MUC ),DS ) * Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) ) - ( MUR + ( MLU - Max( RRSe,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.20745343607530733}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( DDR + Min( ( ( ( ( RRS * RRS ) * Min( Const ,ACS ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) ,ACS ) ) )", "choosing": "( ( CS / ( RMSe * ( MUC + RCSe ) ) ) * ( ( Min( ( MLU * MUC ) ,Min( ( RMSe + CS ) ,DS ) ) - MLU ) / MUR ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.049201395238188714}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( CRS ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( MDR,FirstVNF_CPU ) ) * ACS ) ) )", "choosing": "( ( ( ( ( MUC - Min( CS ,DS ) ) * RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( RRSe * ( MUR + Max( CS,RMSe ) ) ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.15588008128637615}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.6778242677824268, "obj2": 0.1530537439403049}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( Min( Const ,ACS ) / ( CRS - PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,( RRS - FirstVNF_CPU ) ) ) - ( CRS + ( RRS + FirstVNF_CPU_Server ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( MUM / RMSe ) ) / ( RMSe + ( MUR - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.7133891213389121, "obj2": 0.11972710739813112}, {"determining": "( ( Min( CRS ,Const ) - ( BR - DDR ) ) - ( MDR - ( Max( RRS,( Max( MRS,FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - MLU )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05927311267734156}, {"determining": "( Max( ( BR / ARS ),ARS ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - MUR ) / ( MLU / Max( MLU,( RRSe * MUR ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.20745343607530733}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7384937238493724, "obj2": 0.09967218477048853}, {"determining": "( ( Min( FirstVNF_CPU ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( BR ,( MDR - ARS ) ) * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / ( ( Max( Max( RMSe,CS ),( MUR + RMSe ) ) - ( CS + RCSe ) ) - MUM ) ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RCSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7154811715481172, "obj2": 0.11242284388911906}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8096234309623431, "obj2": 0.06863047628253019}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7426778242677824, "obj2": 0.0976559000023265}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( AMS,FirstVNF_Mem_Server ) - ( Min( MDR ,MDR ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MUM * RRSe ) / RMSe ) )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( MRS,ARS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + MUC ),Min( MUR ,( MUM / ( MUM / MUM ) ) ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05774005833815936}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server / ( BR / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( Max( ( ( DS / Max( MUM,RMSe ) ) + Min( RRSe ,( MUC + RCSe ) ) ),Min( MUR ,MLU ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.801255230125523, "obj2": 0.07221262861646242}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7573221757322176, "obj2": 0.09328191900056343}, {"determining": "( ACS - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,( CS - RRSe ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.07205664175813367}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,Max( RRS,FirstVNF_Mem_Server ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( ( MUR + MLU ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.698744769874477, "obj2": 0.1318145035719297}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ( ( Min( ( RRS * ( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem_Server ) ) + Max( MDR,CRS ) ) ) ,CRS ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + RMSe ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,( ( DS * MUC ) / Max( MLU,CS ) ) ) ) ),RRSe ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09611181998617364}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.020329165405827614}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ACS * Min( DDR ,MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( RMSe ,Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ) + ( ( ( Min( MUR ,Min( MUC ,MLU ) ) + ( Min( RRSe ,RCSe ) + MUC ) ) + ( Min( RRSe ,CS ) - RRSe ) ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( Max( ( RMSe + MUR ),( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.06564225363743302}, {"determining": "( ( ( DDR - ( ( DDR - BR ) * ACS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( ( AMS * Const ) + MDR ) + BR ) ) - ( ( PN - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( ( MUM / RCSe ) + Min( MUC ,Min( ( RRSe - ( MLU + MUC ) ) ,MUC ) ) ) - MLU ) ,( Min( ( Min( CS ,DS ) * RMSe ) ,MUR ) * ( ( ( RCSe + Max( ( MLU / RRSe ),RCSe ) ) * Max( ( MUC * MLU ),RCSe ) ) + MUR ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.06329633622802808}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( RCSe + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.694560669456067, "obj2": 0.13623995595551303}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( Max( ( DS * ( MUM / MUC ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6841004184100419, "obj2": 0.14502988115132384}, {"determining": "( ACS - ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + ( ( ( FirstVNF_RAM_Server + AMS ) / ( ( MDR * ( Const / ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) * ACS ) ) )", "choosing": "( MUR * ( ( ( Max( ( DS * ( Min( RMSe ,RMSe ) / MUC ) ),Max( DS,( MUC - Min( CS ,DS ) ) ) ) + RRSe ) * MUM ) / RMSe ) )", "obj1": 0.6799163179916318, "obj2": 0.14698549071151504}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / PN ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.696652719665272, "obj2": 0.13343797444722424}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( MDR,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + ( ( DS / Max( MUR,RMSe ) ) + RMSe ) ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.07456114891048113}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8514644351464435, "obj2": 0.05265067707430277}, {"determining": "( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ( MDR / FirstVNF_Mem_Server ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( RRSe + ( ( MUM + ( MUC + DS ) ) - CS ) ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06697535309975644}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Max( CRS,PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( FirstVNF_CPU - Min( ARS ,CRS ) ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( ( Min( RMSe ,Min( MUR ,DS ) ) / ( RRSe + MUR ) ) * DS ) ,MUM ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07772900359893291}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.065889597207212}, {"determining": "( ( Min( DDR ,BR ) - Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( ( FirstVNF_Mem_Server * ARS ) - BR ) ) ) ) ) )", "choosing": "( Max( DS,( MUR * ( MUR / ( DS / ( ( ( RMSe / MUC ) * MUM ) / ( RCSe * DS ) ) ) ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) - Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.015272377247491175}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.031783072729992576}, {"determining": "( ( CRS / ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) + ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( Max( MRS,AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) - Min( Const ,ACS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),( MLU - CS ) ) * Max( Min( CS ,DS ),DS ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.025681521103283166}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( FirstVNF_Mem_Server * MRS ) - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) )", "choosing": "( Max( MUM,RCSe ) - MUM )", "obj1": 0.8451882845188284, "obj2": 0.05664301440779155}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( Min( Min( DDR ,BR ) ,Max( FirstVNF_Mem,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( ( MLU / ( RMSe * MUC ) ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6903765690376569, "obj2": 0.13888493774404134}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.0050155441903126305}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) ) ) ) - CS )", "obj1": 0.9769874476987448, "obj2": 0.006942710363996466}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - Min( DDR ,BR ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * RMSe ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0018948851277373422}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( PN,FirstVNF_RAM_Server ) - ( Max( ( ( DDR + Min( MDR ,MRS ) ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server * AMS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MUC - MUC ) + Min( RCSe ,MUC ) ) * Max( Min( RRSe ,DS ),DS ) ) - ( ( MUC / Min( DS ,MUR ) ) + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03592114398764727}, {"determining": "( ( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008192570127627882}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( AMS ,BR ) - FirstVNF_CPU ),Max( ACS,FirstVNF_Mem_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Min( Const ,ACS ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( ( MUR + MUR ) + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.017678329046718854}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( ( FirstVNF_CPU_Server * DDR ) * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( AMS + FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / Min( ( MLU + ( MLU - RMSe ) ) ,RCSe ) ) * MUR )", "obj1": 0.6882845188284519, "obj2": 0.14191136662805226}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / ( ACS / Min( ACS ,AMS ) ) ) - Max( ( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( RRSe,MUM ) ) - ( RRSe / MUC ) )", "obj1": 0.9205020920502092, "obj2": 0.024762763204443063}, {"determining": "( ( Min( ACS ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( Min( Const ,ACS ) ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( DS * ( MUM / MUC ) ) ) ) ) ) ) - CS )", "obj1": 0.9246861924686193, "obj2": 0.02404231619726312}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7510460251046025, "obj2": 0.09451486648513044}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8284518828451883, "obj2": 0.061743867803376}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - BR ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.04246206488120598}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.054034254187381475}, {"determining": "( ACS - ( DDR + ( Max( ( ( MDR * ACS ) / Max( ( ACS / ( ACS + ARS ) ),PN ) ),( ( ACS * PN ) - FirstVNF_RAM ) ) * ACS ) ) )", "choosing": "( ( ( ( CS - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * Max( MUM,RRSe ) ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ) / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.011431911283024414}, {"determining": "( ( ( Min( Max( Min( Min( DDR ,MRS ) ,( Min( MDR ,ARS ) - ( MDR - CRS ) ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( ( CRS + Const ) - ( ( CRS - PN ) / ( Const - ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( ( RMSe * MUC ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( ( MUR + MLU ),RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( MUM * MUM ) ) )", "obj1": 0.6924686192468619, "obj2": 0.13859921765659972}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9121338912133892, "obj2": 0.02749439082126275}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( ( ( CS + RRSe ) * MUM ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.03150702884081203}, {"determining": "( ( MDR - ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - DDR ) ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) ) ) ) ) - ( Min( FirstVNF_Mem_Server ,BR ) - FirstVNF_CPU ) )", "choosing": "( ( Max( MUC,( CS * RCSe ) ) / MLU ) / ( ( ( CS * CS ) / MUR ) - ( DS / ( MUC + RRSe ) ) ) )", "obj1": 0.8849372384937239, "obj2": 0.03759034674080206}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + Min( FirstVNF_RAM ,ARS ) ) - Max( ( ACS + ARS ),FirstVNF_RAM ) ),PN ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,( Max( ( ( ( RCSe - RCSe ) - MLU ) * MUM ),RRSe ) + MUC ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.0413461038476819}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8284518828451883, "obj2": 0.061743867803376}, {"determining": "( ( RRS / ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) - ( FirstVNF_Mem_Server * DDR ) )", "choosing": "( CS - ( ( ( MUM + RCSe ) + ( MUM / MUR ) ) - Max( ( RCSe - ( ( ( Max( RCSe,RMSe ) / Max( MUC,RCSe ) ) * RMSe ) + RMSe ) ),MUM ) ) )", "obj1": 0.7949790794979079, "obj2": 0.07456114891048113}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7154811715481172, "obj2": 0.11242284388911906}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - BR ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03992968710734035}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,RRSe ) ) - CS )", "obj1": 0.9602510460251046, "obj2": 0.011976833521398897}, {"determining": "( ACS - ( Min( FirstVNF_RAM_Server ,Min( ACS ,FirstVNF_CPU ) ) + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( RRSe * ( MLU + ( RCSe * RCSe ) ) )", "obj1": 0.6820083682008368, "obj2": 0.14537080035504318}, {"determining": "( ( Min( DDR ,RRS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( DS / Max( MUM,MUR ) ) - CS )", "obj1": 0.9707112970711297, "obj2": 0.008781423715359832}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / DDR ) ) - ( MDR - ( Max( ( ( Min( MRS ,MDR ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) * Min( MUM ,( ( MUR + DS ) * ( ( Max( ( CS * MUM ),Min( RCSe ,RCSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.023165660933688992}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / RMSe ) * MUR )", "obj1": 0.6882845188284519, "obj2": 0.14191136662805226}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( MLU ,( RRSe + RCSe ) ) )", "obj1": 0.9497907949790795, "obj2": 0.016320291253806206}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039080227111771004}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( RRS,FirstVNF_Mem_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + MLU ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07759133351640327}], "18": [{"determining": "( MDR - ( FirstVNF_CPU / Min( Const ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( MUR - ( Min( ( RCSe - DS ) ,CS ) / MUR ) ) / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( Min( CS ,MUR ) * ( Max( DS,MUR ) / RCSe ) ),MLU ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( DDR ,BR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( CS - ( DS / ( MUC + RRSe ) ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * ( FirstVNF_CPU / Min( DDR ,( PN / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) + DDR ) - ACS )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( Min( MUR ,( MUM * RCSe ) ) + MLU ) / ( DS - MUM ) ) ) - CS ) / Min( ( MLU / ( RMSe * MLU ) ) ,( RCSe * MUM ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22987361828581399}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5857740585774058, "obj2": 0.24982745845604395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.604602510460251, "obj2": 0.2213003563162913}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / FirstVNF_Mem_Server ) - ( ( RRS / PN ) + Min( Const ,ACS ) ) ) + DDR ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,RCSe ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) / Max( MLU,( Max( CS,CS ) - ( MUC - MUM ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6338912133891214, "obj2": 0.1897862989025983}, {"determining": "( ACS - ( DDR + ( ( ( ( Min( Const ,ACS ) * ARS ) / Max( FirstVNF_Mem_Server,Min( BR ,MDR ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( DS / Min( ( ( RRSe + CS ) / ( DS - DS ) ) ,MLU ) ) ) ) / DS ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( ACS + ARS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5732217573221757, "obj2": 0.26302561685196674}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - RRS ) / ( ACS + ACS ) ) ) ) / ( ( FirstVNF_Mem * RRS ) + ARS ) ) * Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MLU ) - MUM ) / Min( ( RCSe - ( RMSe / RMSe ) ) ,MUC ) ) ) * Min( MUC ,MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( RRS + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( Max( MUM,RMSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6255230125523012, "obj2": 0.1946873214661808}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10598848246167568}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.11277638998762249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * RMSe ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.15356548772268266}, {"determining": "( ACS - ( ( BR + ACS ) + ( ( ( ( MDR * Min( Const ,ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( DS / Min( Min( CS ,Max( CS,DS ) ) ,( ( MUR + DS ) * ( ( Max( Min( MUR ,MUC ),DS ) * Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) ) - ( MUR + ( MLU - Max( RRSe,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( DDR + Min( ( ( ( ( RRS * RRS ) * Min( Const ,ACS ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) ,ACS ) ) )", "choosing": "( ( CS / ( RMSe * ( MUC + RCSe ) ) ) * ( ( Min( ( MLU * MUC ) ,Min( ( RMSe + CS ) ,DS ) ) - MLU ) / MUR ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( Min( CRS ,Const ) - ( BR - DDR ) ) - ( MDR - ( Max( RRS,( Max( MRS,FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - MLU )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09218847227098735}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,Const ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( ( ( MUC - RMSe ) * CS ) ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.08469629982879974}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.08031521493998274}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.11034468722774728}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - ( DDR + ( ( ( ( ( FirstVNF_CPU_Server * DDR ) * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( AMS + FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( ( CS + RRSe ) * MUM ) / Min( ( MLU + ( MLU - RMSe ) ) ,RCSe ) ) * MUR )", "obj1": 0.6882845188284519, "obj2": 0.14191136662805226}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.08602101659762909}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Max( RRS,FirstVNF_Mem_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUC - ( Max( ( MUC * MUM ),( MLU - CS ) ) * Max( Min( RMSe ,DS ),DS ) ) ) * CS ) - CS ) / ( MLU / RMSe ) )", "obj1": 0.7677824267782427, "obj2": 0.0875028235620748}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( DS * ( MUM / MUC ) ) ) ) ) ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.04603896080045239}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,( DS / Max( MUR,RCSe ) ) ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8389121338912134, "obj2": 0.05559946794513507}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server / ( BR / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( Max( ( ( DS / Max( MUM,RMSe ) ) + Min( RRSe ,( MUC + RCSe ) ) ),Min( MUR ,MLU ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.801255230125523, "obj2": 0.07221262861646242}, {"determining": "( ( Min( DDR ,BR ) - Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( ( FirstVNF_Mem_Server * ARS ) - BR ) ) ) ) ) )", "choosing": "( Max( DS,( MUR * ( MUR / ( DS / ( ( ( RMSe / MUC ) * MUM ) / ( RCSe * DS ) ) ) ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) - Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.015272377247491175}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.047643688791660484}, {"determining": "( ( ( Min( ( RRS * ( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem_Server ) ) + Max( MDR,CRS ) ) ) ,CRS ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + RMSe ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,( ( DS * MUC ) / Max( MLU,CS ) ) ) ) ),RRSe ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09611181998617364}, {"determining": "( ACS - ( DDR + ( AMS / ( Max( FirstVNF_RAM,ARS ) / PN ) ) ) )", "choosing": "( Min( ( ( MLU + Min( ( RMSe * MUC ) ,( RMSe / Min( ( CS - DS ) ,RCSe ) ) ) ) - MLU ) ,( Min( ( RMSe * Min( CS ,DS ) ) ,MUR ) * Max( ( ( RCSe + Max( ( MLU / RRSe ),( RMSe - CS ) ) ) * Max( ( MUC * MLU ),RCSe ) ),MUR ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.1556163664955505}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,( MLU / RMSe ) ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05916013232714251}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8514644351464435, "obj2": 0.05265067707430277}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.020329165405827614}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ACS * Min( DDR ,MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( RMSe ,Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ) + ( ( ( Min( MUR ,Min( MUC ,MLU ) ) + ( Min( RRSe ,RCSe ) + MUC ) ) + ( Min( RRSe ,CS ) - RRSe ) ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( Max( ( RMSe + MUR ),( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.06564225363743302}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( MRS * FirstVNF_Mem_Server ) - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( DS / MLU ) + RMSe ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUC ,MUM ) ) * ( MUR * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9644351464435147, "obj2": 0.01078082225335355}, {"determining": "( ( ( DDR - ( ( DDR - BR ) * ACS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( ( AMS * Const ) + MDR ) + BR ) ) - ( ( PN - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( ( MUM / RCSe ) + Min( MUC ,Min( ( RRSe - ( MLU + MUC ) ) ,MUC ) ) ) - MLU ) ,( Min( ( Min( CS ,DS ) * RMSe ) ,MUR ) * ( ( ( RCSe + Max( ( MLU / RRSe ),RCSe ) ) * Max( ( MUC * MLU ),RCSe ) ) + MUR ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.06329633622802808}, {"determining": "( ( Min( CRS ,Const ) - ( DDR - BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.694560669456067, "obj2": 0.1351754032142119}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / ( MUR + ( ( ( MLU * MUR ) * MUM ) + RCSe ) ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.04285779776178526}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( MLU ,( RRSe + RCSe ) ) )", "obj1": 0.9497907949790795, "obj2": 0.016320291253806206}, {"determining": "( ACS - ( DDR * ( ( ( ( Min( ( PN + ARS ) ,BR ) * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( Max( RMSe,( DS - CS ) ) - MUM )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - CS ) / ( MLU / RMSe ) )", "obj1": 0.7364016736401674, "obj2": 0.10010538599818011}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ACS - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,( CS - RRSe ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.07205664175813367}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.054034254187381475}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Max( CRS,PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( FirstVNF_CPU - Min( ARS ,CRS ) ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( ( Min( RMSe ,Min( MUR ,DS ) ) / ( RRSe + MUR ) ) * DS ) ,MUM ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07772900359893291}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9100418410041841, "obj2": 0.030213758511170762}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( PN + Min( Min( ( Const * ( ( CRS - MRS ) / ARS ) ) ,( DDR * CRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MLU ) ) / Min( Max( ( ( ( DS + RMSe ) * ( MUC + ( ( RRSe + RCSe ) * DS ) ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06150992237883195}, {"determining": "( Max( ( BR / ARS ),ARS ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) * CS ) - MUR ) / ( MLU / Max( MLU,( RRSe * MUR ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( RRS / ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) - ( FirstVNF_Mem_Server * DDR ) )", "choosing": "( CS - ( ( ( MUM + RCSe ) + ( MUM / MUR ) ) - Max( ( RCSe - ( ( ( Max( RCSe,RMSe ) / Max( MUC,RCSe ) ) * RMSe ) + RMSe ) ),MUM ) ) )", "obj1": 0.7949790794979079, "obj2": 0.07456114891048113}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.031783072729992576}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7384937238493724, "obj2": 0.09967218477048853}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.065889597207212}, {"determining": "( ( ( Min( Max( Min( Min( DDR ,MRS ) ,( Min( MDR ,ARS ) - ( MDR - CRS ) ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( ( CRS + Const ) - ( ( CRS - PN ) / ( Const - ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( ( RMSe * MUC ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( ( MUR + MLU ),RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( MUM * MUM ) ) )", "obj1": 0.6924686192468619, "obj2": 0.13859921765659972}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - BR ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03992968710734035}, {"determining": "( ( Min( ( DDR * DDR ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_Mem_Server,( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + Min( DS ,( RCSe - MUC ) ) ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.06931561960631163}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( ( FirstVNF_RAM_Server / AMS ) * ACS ) / Min( FirstVNF_Mem_Server ,PN ) ) / ( Max( RRS,FirstVNF_Mem_Server ) + AMS ) ) ) ) ) )", "choosing": "( Min( ( RCSe / ( MLU * RRSe ) ) ,( RMSe / MUC ) ) / Min( CS ,( DS + DS ) ) )", "obj1": 0.8368200836820083, "obj2": 0.05712226097907235}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7426778242677824, "obj2": 0.0976559000023265}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ( CRS - PN ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * RMSe ) ) ) - CS )", "obj1": 0.9686192468619247, "obj2": 0.009445292649429053}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / PN ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.696652719665272, "obj2": 0.13343797444722424}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - PN ) / Min( ( ( CRS * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) - MDR ) )", "choosing": "( Min( ( RMSe / MUC ) ,( ( MLU * ( ( MLU / RMSe ) - MUR ) ) / RCSe ) ) / Min( ( RRSe / RMSe ) ,( ( ( MUR + DS ) - MUC ) + RCSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006384914357246463}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( Min( MDR ,MRS ) + DDR ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) / Min( MUM ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9853556485355649, "obj2": 0.004708757640658819}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( ( ( CS + RRSe ) * MUM ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03577999003429662}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9163179916317992, "obj2": 0.02663362217128832}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,Max( RRS,FirstVNF_Mem_Server ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( ( MUR + MLU ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.698744769874477, "obj2": 0.1318145035719297}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.0050155441903126305}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07708958798504748}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.049201395238188714}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04232850381850961}, {"determining": "( ( MDR - ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - DDR ) ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) ) ) ) ) - ( Min( FirstVNF_Mem_Server ,BR ) - FirstVNF_CPU ) )", "choosing": "( ( Max( MUC,( CS * RCSe ) ) / MLU ) / ( ( ( CS * CS ) / MUR ) - ( DS / ( MUC + RRSe ) ) ) )", "obj1": 0.8849372384937239, "obj2": 0.03759034674080206}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + Min( FirstVNF_RAM ,ARS ) ) - Max( ( ACS + ARS ),FirstVNF_RAM ) ),PN ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,( Max( ( ( ( RCSe - RCSe ) - MLU ) * MUM ),RRSe ) + MUC ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.0413461038476819}, {"determining": "( Min( Min( DDR ,BR ) ,Max( FirstVNF_Mem,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( ( MLU / ( RMSe * MUC ) ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( CRS / ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) + ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( Max( MRS,AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) - Min( Const ,ACS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),( MLU - CS ) ) * Max( Min( CS ,DS ),DS ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.025681521103283166}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8117154811715481, "obj2": 0.06759688525546347}, {"determining": "( ( DDR + ARS ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + MLU ) * ( RCSe * MLU ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06844988964390641}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ACS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( RMSe - RMSe ) * CS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06667894055302566}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6903765690376569, "obj2": 0.13888493774404134}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( MDR * ( FirstVNF_RAM * AMS ) ) / Max( FirstVNF_Mem_Server,PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( ( ( CS + RRSe ) * MUM ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.03150702884081203}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_Mem ,( Const / BR ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR - ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUM + DS ) ) ),MUR ) ,( ( CS - MUC ) + MLU ) ) )", "obj1": 0.8472803347280334, "obj2": 0.054034254187381475}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.7426778242677824, "obj2": 0.0976559000023265}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / ( ACS / Min( ACS ,AMS ) ) ) - Max( ( ( Min( Max( FirstVNF_RAM_Server,DDR ) ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( RRSe,MUM ) ) - ( RRSe / MUC ) )", "obj1": 0.9205020920502092, "obj2": 0.024762763204443063}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039080227111771004}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( CS * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.023165660933688985}], "19": [{"determining": "( MDR - ( FirstVNF_CPU / Min( Const ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( MUR - ( Min( ( RCSe - DS ) ,CS ) / MUR ) ) / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( Min( CS ,MUR ) * ( Max( DS,MUR ) / RCSe ) ),MLU ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ( Min( ( ( ( Min( Const ,CRS ) / MRS ) + FirstVNF_RAM_Server ) - MRS ) ,BR ) - FirstVNF_CPU ) - ( MDR - Min( Const ,( ( FirstVNF_RAM_Server / ( RRS - ( BR * AMS ) ) ) - BR ) ) ) )", "choosing": "( Min( ( ( MUR * RRSe ) / Min( Min( ( Min( RRSe ,( DS * MLU ) ) * Min( ( MUC - CS ) ,( MUC / DS ) ) ) ,MUC ) ,RMSe ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUC ,MUM ) ) * ( Max( MUC,( MLU * MUR ) ) * ( MUC + ( ( MUC + MUC ) + MUR ) ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * ( FirstVNF_CPU / Min( DDR ,( PN / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) + DDR ) - ACS )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( Min( MUR ,( MUM * RCSe ) ) + MLU ) / ( DS - MUM ) ) ) - CS ) / Min( ( MLU / ( RMSe * MLU ) ) ,( RCSe * MUM ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22987361828581399}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5857740585774058, "obj2": 0.24982745845604395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.604602510460251, "obj2": 0.2213003563162913}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / FirstVNF_Mem_Server ) - ( ( RRS / PN ) + Min( Const ,ACS ) ) ) + DDR ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,RCSe ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) / Max( MLU,( Max( CS,CS ) - ( MUC - MUM ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6338912133891214, "obj2": 0.1897862989025983}, {"determining": "( Max( DDR,BR ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( CS / ( Max( DS,Min( ( Min( Min( RMSe ,MUM ) ,( CS + MLU ) ) + RCSe ) ,MUM ) ) + ( MLU * ( ( RRSe / MUC ) / ( Min( RRSe ,Min( MUC ,MUR ) ) + MUC ) ) ) ) ) * ( MLU * MUC ) )", "obj1": 0.5732217573221757, "obj2": 0.26302561685196674}, {"determining": "( ( Min( DDR ,( MDR / ARS ) ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( DDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( ( PN - CRS ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( MUR + RMSe ) ) / ( RMSe - MUM ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07408666816075257}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.11277638998762249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09218847227098735}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( RCSe * ( ( CS * ( ( DS + MUR ) - ( MUR / RRSe ) ) ) - MUR ) ) - MUM ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16718342186463012}, {"determining": "( ( Min( ( ACS + ARS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server / ( BR / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( Max( ( ( DS / Max( MUM,RMSe ) ) + Min( RRSe ,( MUC + RCSe ) ) ),Min( MUR ,MLU ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.801255230125523, "obj2": 0.07221262861646242}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( DDR + Min( ( ( ( ( RRS * RRS ) * Min( Const ,ACS ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) ,ACS ) ) )", "choosing": "( ( CS / ( RMSe * ( MUC + RCSe ) ) ) * ( ( Min( ( MLU * MUC ) ,Min( ( RMSe + CS ) ,DS ) ) - MLU ) / MUR ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( ( ( ( BR + DDR ) / ( ( ( FirstVNF_RAM * ( ACS + ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ) + FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,MUC ) / RRSe ),Min( RRSe ,MLU ) ) * RMSe ) ,( MLU / Max( ( RCSe * ( ( CS + Max( MLU,MUM ) ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.15254423135750214}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.1948976522142888}, {"determining": "( ( Min( CRS ,Const ) - ( BR - DDR ) ) - ( MDR - ( Max( RRS,( Max( MRS,FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - MLU )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.7824267782426778, "obj2": 0.081368792390549}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - RRS ) / ( ACS + ACS ) ) ) ) / ( ( FirstVNF_Mem * RRS ) + ARS ) ) * Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MLU ) - MUM ) / Min( ( RCSe - ( RMSe / RMSe ) ) ,MUC ) ) ) * Min( MUC ,MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( ( DDR - ( ( DDR - BR ) * ACS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( ( AMS * Const ) + MDR ) + BR ) ) - ( ( PN - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( ( MUM / RCSe ) + Min( MUC ,Min( ( RRSe - ( MLU + MUC ) ) ,MUC ) ) ) - MLU ) ,( Min( ( Min( CS ,DS ) * RMSe ) ,MUR ) * ( ( ( RCSe + Max( ( MLU / RRSe ),RCSe ) ) * Max( ( MUC * MLU ),RCSe ) ) + MUR ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.06329633622802808}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( ( ( DDR + ( ( ( CRS - PN ) / ( Const / ACS ) ) * ACS ) ) - ( CRS + ( FirstVNF_CPU / Min( Max( ( ARS * ACS ),Min( FirstVNF_CPU_Server ,ARS ) ) ,FirstVNF_CPU_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUC ,( ( MUR + DS ) * ( ( CS + RMSe ) - ( MUR + ( RRSe - MLU ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.11018769647284314}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,CRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09557293276856405}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.08602101659762909}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ,RMSe ) + ( ( ( Min( MUR ,Min( CS ,CS ) ) + ( Min( RRSe ,RCSe ) + MUC ) ) + ( Min( RRSe ,CS ) - RRSe ) ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( ( ( RMSe + MUR ) / ( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.7656903765690377, "obj2": 0.08633265425081141}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,Const ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( ( ( MUC - RMSe ) * CS ) ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.08469629982879974}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - FirstVNF_CPU_Server ) / ( MRS - Max( FirstVNF_CPU,CRS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( DS ,( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + ( MLU + ( MLU + RMSe ) ) ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09689403877514773}, {"determining": "( ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( AMS / FirstVNF_RAM_Server ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) - Max( Min( DDR ,BR ),FirstVNF_CPU ) )", "choosing": "( ( MLU / Min( ( ( ( ( ( RMSe + DS ) + RCSe ) / DS ) / Max( RRSe,( Min( RMSe ,MUM ) * RRSe ) ) ) / MLU ) ,Min( MUC ,CS ) ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05481702758109756}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( ( DS / RMSe ) * ( ( MLU + MUC ) - Max( Max( RMSe,Min( MLU ,DS ) ),MUM ) ) ) * Max( CS,Min( MLU ,MUC ) ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10598848246167568}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.01769443313758975}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( ( MUC * MUM ) * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.13191446541705518}, {"determining": "( ACS - ( ( BR + ACS ) + ( ( ( ( MDR * Min( Const ,ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( DS / Min( Min( CS ,Max( CS,DS ) ) ,( ( MUR + DS ) * ( ( Max( Min( MUR ,MUC ),DS ) * Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) ) - ( MUR + ( MLU - Max( RRSe,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10598848246167568}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,RRS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / ( FirstVNF_CPU - ARS ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RMSe * CS ) ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Min( Min( RMSe ,DS ) ,DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06511877733878152}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.047643688791660484}, {"determining": "( ( ( Min( Max( Min( ( Min( MDR ,ARS ) - ( FirstVNF_Mem_Server - CRS ) ) ,Min( DDR ,MRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( Const ,Max( RRS,FirstVNF_Mem_Server ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( ( MUR + MLU ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) ) ,( RCSe * MUM ) ) )", "obj1": 0.698744769874477, "obj2": 0.1318145035719297}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( ( DDR + BR ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / ( FirstVNF_Mem_Server / ARS ) ) - Max( ( ( Max( FirstVNF_CPU,( Const + FirstVNF_Mem ) ) * RRS ) / AMS ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Min( MUM ,( RCSe + MUM ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8326359832635983, "obj2": 0.05886572522995808}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( Max( RRS,FirstVNF_Mem_Server ) * ACS ) / Max( ( CRS - PN ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + MUC ) * RMSe ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007566247009689113}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( ( FirstVNF_RAM_Server / AMS ) * ACS ) / Min( FirstVNF_Mem_Server ,PN ) ) / ( Max( RRS,FirstVNF_Mem_Server ) + AMS ) ) ) ) ) )", "choosing": "( Min( ( RCSe / ( MLU * RRSe ) ) ,( RMSe / MUC ) ) / Min( CS ,( DS + DS ) ) )", "obj1": 0.8368200836820083, "obj2": 0.05712226097907235}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ACS / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( ( ( DS - Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) ) ) - RRSe ) / RMSe ) * ( RRSe / ( MUC - ( ( ( DS * Max( ( MUR + RMSe ),CS ) ) * MUC ) * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.020329165405827614}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( DDR ,ARS ) ) - ( DDR + ( ( Min( Const ,ACS ) / ( CRS - PN ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS * CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( ( RRSe + ( RRSe - RRSe ) ) * RMSe ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / ( MUR + ( ( ( MLU * MUR ) * MUM ) + RCSe ) ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.04285779776178526}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.049201395238188714}, {"determining": "( ( Min( DDR ,BR ) - Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( ( FirstVNF_Mem_Server * ARS ) - BR ) ) ) ) ) )", "choosing": "( Max( DS,( MUR * ( MUR / ( DS / ( ( ( RMSe / MUC ) * MUM ) / ( RCSe * DS ) ) ) ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) - Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.015272377247491175}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( ( ( AMS / ( ( AMS / FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( AMS ,MRS ) ) * ( MDR * FirstVNF_RAM_Server ) ) ) ) ) - ( MDR - ( Min( Min( Const ,Const ) ,DDR ) - ( ( CRS - PN ) / Min( PN ,ACS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUR ) - ( Min( ( MLU * CS ) ,( Max( RRSe,MUM ) / MUC ) ) - DS ) ) * CS ) - CS ) / Max( MUM,Min( RMSe ,( ( Min( DS ,( CS * Min( MUR ,RMSe ) ) ) - Max( RMSe,Max( MUC,RCSe ) ) ) - ( ( RCSe * RMSe ) / ( ( RCSe / ( MUC - MUR ) ) - Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + Max( RMSe,( MUC - Min( CS ,DS ) ) ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( DS * ( MUM / MUC ) ) ) ) ) ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.04603896080045239}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( MLU ,( RRSe + RCSe ) ) )", "obj1": 0.9497907949790795, "obj2": 0.016320291253806206}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ACS - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,( CS - RRSe ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.07205664175813367}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( PN + Min( Min( ( Const * ( ( CRS - MRS ) / ARS ) ) ,( DDR * CRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MLU ) ) / Min( Max( ( ( ( DS + RMSe ) * ( MUC + ( ( RRSe + RCSe ) * DS ) ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06150992237883195}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.054034254187381475}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.031783072729992576}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MDR ) + FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( BR * PN ) ) )", "choosing": "( ( DS / Max( ( Max( ( ( DS / Max( MUR,MUM ) ) + RMSe ),Min( MUR ,MLU ) ) * ( MUR + MLU ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ACS - ( DDR + ( ( ( ( Min( Const ,ACS ) * ARS ) / Max( FirstVNF_Mem_Server,Min( BR ,MDR ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( DS / Min( ( ( RRSe + CS ) / ( DS - DS ) ) ,MLU ) ) ) ) / DS ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039080227111771004}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - BR ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03992968710734035}, {"determining": "( ( Min( ( DDR * DDR ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_Mem_Server,( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + Min( DS ,( RCSe - MUC ) ) ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.06931561960631163}, {"determining": "( ACS - ( DDR + ( ( ( ( FirstVNF_Mem_Server - ( ( RRS / PN ) / Min( Const ,ACS ) ) ) + DDR ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + ( DS - MUM ) ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6338912133891214, "obj2": 0.1897862989025983}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( RRS + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( Max( MUM,RMSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6255230125523012, "obj2": 0.1946873214661808}, {"determining": "( ACS - ( DDR + ( AMS / ( Max( FirstVNF_RAM,ARS ) / PN ) ) ) )", "choosing": "( Min( ( ( MLU + Min( ( RMSe * MUC ) ,( RMSe / Min( ( CS - DS ) ,RCSe ) ) ) ) - MLU ) ,( Min( ( RMSe * Min( CS ,DS ) ) ,MUR ) * Max( ( ( RCSe + Max( ( MLU / RRSe ),( RMSe - CS ) ) ) * Max( ( MUC * MLU ),RCSe ) ),MUR ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.1556163664955505}, {"determining": "( Min( Min( DDR ,BR ) ,Max( FirstVNF_Mem,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( ( MLU / ( RMSe * MUC ) ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8117154811715481, "obj2": 0.06678521356215547}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( Min( ( ( FirstVNF_CPU_Server * Const ) * CRS ) ,MRS ) + Const ) - ( Max( RRS,FirstVNF_Mem_Server ) - CRS ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( ( Max( RMSe,MUR ) / MUM ) + Max( ( ( MUR * MUC ) / Max( MUM,RCSe ) ),Min( ( ( RCSe * CS ) * ( CS / DS ) ) ,MUM ) ) ) ) ,( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) - MUC ) + RCSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004447598884796609}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ( CRS - PN ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Max( RMSe,RMSe ) - CS )", "obj1": 0.9707112970711297, "obj2": 0.009068165622346074}, {"determining": "( ( ( Min( Max( Min( Min( DDR ,MRS ) ,( Min( MDR ,ARS ) - ( MDR - CRS ) ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ,BR ) - MDR ) - ( MDR - ( ( CRS + Const ) - ( ( CRS - PN ) / ( Const - ACS ) ) ) ) ) + ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) )", "choosing": "( Min( ( DS / Max( ( MUC / ( ( ( RMSe * MUC ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) ),RRSe ) ) ,( RMSe * MUC ) ) / Min( ( MLU * Max( ( Max( ( MUR + MLU ),RCSe ) / RRSe ),Min( RRSe ,MUR ) ) ) ,( MUM * MUM ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002047255159748584}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( ( ( CS + RRSe ) * MUM ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03577999003429662}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + AMS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.026318465595216597}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6255230125523012, "obj2": 0.1946873214661808}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - BR ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04232850381850961}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( MRS * FirstVNF_Mem_Server ) - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( DS / MLU ) + RMSe ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUC ,MUM ) ) * ( MUR * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9644351464435147, "obj2": 0.01078082225335355}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - MRS ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + ( ( RMSe - RMSe ) * CS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( ACS + ARS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5732217573221757, "obj2": 0.26302561685196674}, {"determining": "( ( MDR - ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - DDR ) ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) ) ) ) ) - ( Min( FirstVNF_Mem_Server ,BR ) - FirstVNF_CPU ) )", "choosing": "( ( Max( MUC,( CS * RCSe ) ) / MLU ) / ( ( ( CS * CS ) / MUR ) - ( DS / ( MUC + RRSe ) ) ) )", "obj1": 0.8849372384937239, "obj2": 0.03759034674080206}, {"determining": "( ( DDR + ARS ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + MLU ) * ( RCSe * MLU ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06844988964390641}, {"determining": "( ( ACS - ( PN / Max( FirstVNF_Mem,AMS ) ) ) - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + Min( DDR ,BR ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( Max( MUR,( ( RRSe * MLU ) / RCSe ) ) * ( MUR + ( MUR - DS ) ) ) ) - CS )", "obj1": 0.9518828451882845, "obj2": 0.01594884198204}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + Min( FirstVNF_RAM ,ARS ) ) - Max( ( ACS + ARS ),FirstVNF_RAM ) ),PN ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,( Max( ( ( ( RCSe - RCSe ) - MLU ) * MUM ),RRSe ) + MUC ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.0413461038476819}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.0050155441903126305}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( Max( AMS,FirstVNF_Mem ) * PN ) ) - MDR ) )", "choosing": "( Min( ( Min( ( Min( RRSe ,CS ) * ( RCSe / MLU ) ) ,Min( MUR ,CS ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( ( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( MUR * Max( MUC,CS ) ) ) - MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9644351464435147, "obj2": 0.01078082225335355}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ACS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06516985287224089}], "20": [{"determining": "( MDR - ( FirstVNF_CPU / Min( Const ,Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( MUR - ( Min( ( RCSe - DS ) ,CS ) / MUR ) ) / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( Min( CS ,MUR ) * ( Max( DS,MUR ) / RCSe ) ),MLU ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,RRS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / ( FirstVNF_CPU - ARS ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( MUC,( CS * RCSe ) ) / MLU ) / ( ( ( CS * CS ) / MUR ) - ( DS / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( ( Min( Const ,CRS ) / MRS ) + FirstVNF_RAM_Server ) - MRS ) ,BR ) - FirstVNF_CPU ) - ( MDR - Min( Const ,( ( FirstVNF_RAM_Server / ( RRS - ( BR * AMS ) ) ) - BR ) ) ) )", "choosing": "( Min( ( ( MUR * RRSe ) / Min( Min( ( Min( RRSe ,( DS * MLU ) ) * Min( ( MUC - CS ) ,( MUC / DS ) ) ) ,MUC ) ,RMSe ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUC ,MUM ) ) * ( Max( MUC,( MLU * MUR ) ) * ( MUC + ( ( MUC + MUC ) + MUR ) ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * ( FirstVNF_CPU / Min( DDR ,( PN / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) + DDR ) - ACS )", "choosing": "( ( ( ( MUM / RMSe ) * ( ( Min( MUR ,( MUM * RCSe ) ) + MLU ) / ( DS - MUM ) ) ) - CS ) / Min( ( MLU / ( RMSe * MLU ) ) ,( RCSe * MUM ) ) )", "obj1": 0.5690376569037657, "obj2": 0.28275973297150125}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5857740585774058, "obj2": 0.24982745845604395}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ACS / ( ACS + ( ACS + ARS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( Max( CS,RCSe ) * MUC ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.600418410041841, "obj2": 0.22342098708597669}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS / PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / Max( Min( RRS ,AMS ),( FirstVNF_RAM * CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * ( RMSe / DS ) ) ) * ( MLU * MLU ) )", "obj1": 0.5732217573221757, "obj2": 0.26302561685196674}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_CPU - MRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const * Min( Const ,PN ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( DS + CS ) - ( CS - RRSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) / Max( ( ( ( MUC / MUR ) - DS ) - CS ),( ( RMSe * DS ) / ( ( RRSe * ( CS + Max( RCSe,MUC ) ) ) / ( MUR - Max( MUM,MUR ) ) ) ) ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07135545101029006}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( ( ( ( BR + DDR ) / ( ( ( FirstVNF_RAM * ( ACS + ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ) + FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,MUC ) / RRSe ),Min( RRSe ,MLU ) ) * RMSe ) ,( MLU / Max( ( RCSe * ( ( CS + Max( MLU,MUM ) ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.15254423135750214}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / ( FirstVNF_CPU_Server * BR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( MUC * MLU ) * ( CS * ( Max( DS,MUR ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) / CS ) ) ) ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2146829962064042}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( RCSe * ( ( CS * ( ( DS + MUR ) - ( MUR / RRSe ) ) ) - MUR ) ) - MUM ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16718342186463012}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Max( PN,RRS ) ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.5815899581589958, "obj2": 0.2550659517145709}, {"determining": "( ( Min( CRS ,Const ) - ( BR - DDR ) ) - ( MDR - ( Max( RRS,( Max( MRS,FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - MLU )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ( Min( ( DDR * DDR ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_Mem_Server,( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + Min( DS ,( RCSe - MUC ) ) ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.06931561960631163}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.031783072729992576}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - RRS ) / ( ACS + ACS ) ) ) ) / ( ( FirstVNF_Mem * RRS ) + ARS ) ) * Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MLU ) - MUM ) / Min( ( RCSe - ( RMSe / RMSe ) ) ,MUC ) ) ) * Min( MUC ,MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.7824267782426778, "obj2": 0.081368792390549}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ACS - ( ( BR + ACS ) + ( ( ( ( MDR * Min( Const ,ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( DS / Min( Min( CS ,Max( CS,DS ) ) ,( ( MUR + DS ) * ( ( Max( Min( MUR ,MUC ),DS ) * Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) ) - ( MUR + ( MLU - Max( RRSe,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.08602101659762909}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ( Min( DDR ,( MDR / ARS ) ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( DDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( ( PN - CRS ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( MUR + RMSe ) ) / ( RMSe - MUM ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ACS - ( DDR + ( AMS / ( Max( FirstVNF_RAM,ARS ) / PN ) ) ) )", "choosing": "( Min( ( ( MLU + Min( ( RMSe * MUC ) ,( RMSe / Min( ( CS - DS ) ,RCSe ) ) ) ) - MLU ) ,( Min( ( RMSe * Min( CS ,DS ) ) ,MUR ) * Max( ( ( RCSe + Max( ( MLU / RRSe ),( RMSe - CS ) ) ) * Max( ( MUC * MLU ),RCSe ) ),MUR ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.1556163664955505}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10423826012350808}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.06192111713261956}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ,RMSe ) + ( ( ( Min( MUR ,Min( CS ,CS ) ) + ( Min( RRSe ,RCSe ) + MUC ) ) + ( Min( RRSe ,CS ) - RRSe ) ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( ( ( RMSe + MUR ) / ( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.7656903765690377, "obj2": 0.08633265425081141}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) - CS )", "obj1": 0.8640167364016736, "obj2": 0.04560044068079833}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( Max( MDR,ACS ) / ( CRS - CRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) ) ) - CS )", "obj1": 0.9225941422594143, "obj2": 0.024586125879827846}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,Const ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( ( ( MUC - RMSe ) * CS ) ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.08402952154125191}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / ( MUR + ( ( ( MLU * MUR ) * MUM ) + RCSe ) ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.04285779776178526}, {"determining": "( ( ( ( DDR + ( ( ( ( FirstVNF_CPU_Server - MRS ) + DDR ) / ( DDR - PN ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU + RMSe ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RRSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9393305439330544, "obj2": 0.018604823369107498}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + AMS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.026318465595216597}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( PN + Min( Min( ( Const * ( ( CRS - MRS ) / ARS ) ) ,( DDR * CRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MLU ) ) / Min( Max( ( ( ( DS + RMSe ) * ( MUC + ( ( RRSe + RCSe ) * DS ) ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06150992237883195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.11277638998762249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_CPU ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( RMSe,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.09138245447419213}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.11277638998762249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( ( DDR + BR ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / ( FirstVNF_Mem_Server / ARS ) ) - Max( ( ( Max( FirstVNF_CPU,( Const + FirstVNF_Mem ) ) * RRS ) / AMS ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Min( MUM ,( RCSe + MUM ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8326359832635983, "obj2": 0.05886572522995808}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( DS / Min( ( ( RRSe + CS ) / ( DS - DS ) ) ,MLU ) ) ) ) / DS ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.05312707877162911}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( Max( RRS,FirstVNF_Mem_Server ) * ACS ) / Max( ( CRS - PN ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + MUC ) * RMSe ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007566247009689113}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( ( FirstVNF_RAM_Server / AMS ) * ACS ) / Min( FirstVNF_Mem_Server ,PN ) ) / ( Max( RRS,FirstVNF_Mem_Server ) + AMS ) ) ) ) ) )", "choosing": "( Min( ( RCSe / ( MLU * RRSe ) ) ,( RMSe / MUC ) ) / Min( CS ,( DS + DS ) ) )", "obj1": 0.8368200836820083, "obj2": 0.05712226097907235}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05481702758109756}, {"determining": "( ACS - ( DDR + ( ( Min( ( MDR * Min( Const ,ACS ) ) ,Max( FirstVNF_Mem_Server,PN ) ) / ( ( ( BR * MDR ) + Max( RRS,MDR ) ) / MDR ) ) * ACS ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC + ( DS / MUC ) ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - BR ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03992968710734035}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( DDR + Min( ( ( ( ( RRS * RRS ) * Min( Const ,ACS ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) ,ACS ) ) )", "choosing": "( ( CS / ( RMSe * ( MUC + RCSe ) ) ) * ( ( Min( ( MLU * MUC ) ,Min( ( RMSe + CS ) ,DS ) ) - MLU ) / MUR ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ( Min( DDR ,BR ) - Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( ( FirstVNF_Mem_Server * ARS ) - BR ) ) ) ) ) )", "choosing": "( Max( DS,( MUR * ( MUR / ( DS / ( ( ( RMSe / MUC ) * MUM ) / ( RCSe * DS ) ) ) ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) - Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.015272377247491175}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( ( ACS + ARS ),FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,( ( MUR + DS ) * Max( ( ( ( RMSe - CS ) / ( MUR / RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.037832404980958904}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( Max( MDR,ACS ) / ( CRS - CRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) - MUC ) + RCSe ) ) )", "obj1": 0.9267782426778243, "obj2": 0.02295708249786026}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.054034254187381475}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.047643688791660484}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.11018769647284314}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09218847227098735}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( RRS - PN ) / Max( MDR,( MDR / ( DDR - ARS ) ) ) ) ) ) )", "choosing": "( MUR * Max( Min( RRSe ,( Min( ( CS * ( RMSe / ( MLU / RCSe ) ) ) ,MLU ) + ( ( RRSe * DS ) / Max( RCSe,RMSe ) ) ) ),Min( Max( RCSe,MUR ) ,RMSe ) ) )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( Min( ( ( FirstVNF_CPU_Server * Const ) * CRS ) ,MRS ) + Const ) - ( Max( RRS,FirstVNF_Mem_Server ) - CRS ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( ( Max( RMSe,MUR ) / MUM ) + Max( ( ( MUR * MUC ) / Max( MUM,RCSe ) ),Min( ( ( RCSe * CS ) * ( CS / DS ) ) ,MUM ) ) ) ) ,( ( ( ( ( RMSe * MUC ) + ( CS * MUR ) ) / ( RMSe + ( MUM - MUR ) ) ) - MUC ) + RCSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004447598884796609}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( ( ( CS + RRSe ) * MUM ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03577999003429662}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.0050155441903126305}, {"determining": "( ( Min( ( RRS / PN ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( Max( RRS,FirstVNF_Mem_Server ) * ACS ) / Max( ( CRS - PN ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ACS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * RMSe ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8179916317991632, "obj2": 0.06384030707631658}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,ACS ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * Const ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( RRSe ,( ( ( RMSe * ( MUC - Min( RRSe ,RRSe ) ) ) - ( MUR + ( RCSe + ( MUM + DS ) ) ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.9623430962343096, "obj2": 0.011339664301357065}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,CRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09557293276856405}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( PN - CRS ) / ( Min( MDR ,MDR ) + FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( BR * PN ) ) )", "choosing": "( ( DS / Max( ( Max( ( ( DS / Max( MUR,MUM ) ) + RMSe ),Min( MUR ,MLU ) ) * ( MUR + MLU ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( ( ( AMS / ( ( AMS / FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( AMS ,MRS ) ) * ( MDR * FirstVNF_RAM_Server ) ) ) ) ) - ( MDR - ( Min( Min( Const ,Const ) ,DDR ) - ( ( CRS - PN ) / Min( PN ,ACS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUR ) - ( Min( ( MLU * CS ) ,( Max( RRSe,MUM ) / MUC ) ) - DS ) ) * CS ) - CS ) / Max( MUM,Min( RMSe ,( ( Min( DS ,( CS * Min( MUR ,RMSe ) ) ) - Max( RMSe,Max( MUC,RCSe ) ) ) - ( ( RCSe * RMSe ) / ( ( RCSe / ( MUC - MUR ) ) - Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.049201395238188714}, {"determining": "( ( ( ( DDR + ( ( ( CRS - PN ) / ( Const / ACS ) ) * ACS ) ) - ( CRS + ( FirstVNF_CPU / Min( Max( ( ARS * ACS ),Min( FirstVNF_CPU_Server ,ARS ) ) ,FirstVNF_CPU_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUC ,( ( MUR + DS ) * ( ( CS + RMSe ) - ( MUR + ( RRSe - MLU ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ( CRS - PN ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Max( RMSe,RMSe ) - CS )", "obj1": 0.9707112970711297, "obj2": 0.009068165622346074}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}, {"determining": "( ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) + ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - Min( Max( ( ( ARS - Min( FirstVNF_CPU ,DDR ) ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) - ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUM + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9456066945606695, "obj2": 0.01708058024706753}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( DDR ,ARS ) ) - ( DDR + ( ( Min( Const ,ACS ) / ( CRS - PN ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS * CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( CS * ( ( RRSe + ( RRSe - RRSe ) ) * RMSe ) ) * ( MUC * MLU ) )", "obj1": 0.5774058577405857, "obj2": 0.26040984797315386}, {"determining": "( Max( DDR,BR ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( CS / ( Max( DS,Min( ( Min( Min( RMSe ,MUM ) ,( CS + MLU ) ) + RCSe ) ,MUM ) ) + ( MLU * ( ( RRSe / MUC ) / ( Min( RRSe ,Min( MUC ,MUR ) ) + MUC ) ) ) ) ) * ( MLU * MUC ) )", "obj1": 0.5732217573221757, "obj2": 0.26302561685196674}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.11018769647284314}, {"determining": "( ( DDR + ARS ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + MLU ) * ( RCSe * MLU ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06844988964390641}, {"determining": "( ( ACS - ( PN / Max( FirstVNF_Mem,AMS ) ) ) - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + Min( DDR ,BR ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( Max( MUR,( ( RRSe * MLU ) / RCSe ) ) * ( MUR + ( MUR - DS ) ) ) ) - CS )", "obj1": 0.9518828451882845, "obj2": 0.01594884198204}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.04133467971903844}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020849830055409628}], "21": [{"determining": "( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * RMSe ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,DDR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,RRS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / ( FirstVNF_CPU - ARS ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( MUC,( CS * RCSe ) ) / MLU ) / ( ( ( CS * CS ) / MUR ) - ( DS / ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( ( ( ( ( RRS * RRS ) * Min( Const ,ACS ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( RMSe ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ACS / ( ACS + ( ACS + ARS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( Max( CS,RCSe ) * MUC ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.600418410041841, "obj2": 0.22342098708597669}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Max( PN,RRS ) ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.5815899581589958, "obj2": 0.2550659517145709}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ACS - ( DDR + ( ( ( ( Min( PN ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server - MRS ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MUM - ( DS - RMSe ) ) - RRSe ) / ( RMSe - RCSe ) ) ,MUM ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( ( ( ( BR + DDR ) / ( ( ( FirstVNF_RAM * ( ACS + ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ) + FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,MUC ) / RRSe ),Min( RRSe ,MLU ) ) * RMSe ) ,( MLU / Max( ( RCSe * ( ( CS + Max( MLU,MUM ) ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.15254423135750214}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / ( FirstVNF_CPU_Server * BR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( MUC * MLU ) * ( CS * ( Max( DS,MUR ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) / CS ) ) ) ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2146829962064042}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6799163179916318, "obj2": 0.14139339526041236}, {"determining": "( ( Min( CRS ,Const ) - ( BR - DDR ) ) - ( MDR - ( Max( RRS,( Max( MRS,FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - MLU )", "obj1": 0.700836820083682, "obj2": 0.12730539441219557}, {"determining": "( ACS - ( DDR + Max( ( FirstVNF_RAM / ACS ),( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( RCSe + ( MUR / ( MLU / Max( Max( ( MUC * Min( MUC ,DS ) ),RCSe ),RCSe ) ) ) ) - Max( RMSe,RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.19802176793809753}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,DDR ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Min( MUR ,MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7824267782426778, "obj2": 0.0798231490232444}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7112970711297071, "obj2": 0.11520943221042045}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - RRS ) / ( ACS + ACS ) ) ) ) / ( ( FirstVNF_Mem * RRS ) + ARS ) ) * Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MLU ) - MUM ) / Min( ( RCSe - ( RMSe / RMSe ) ) ,MUC ) ) ) * Min( MUC ,MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.805439330543933, "obj2": 0.06933581923673593}, {"determining": "( ACS - ( ( BR + ACS ) + ( ( ( ( MDR * Min( Const ,ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( DS / Min( Min( CS ,Max( CS,DS ) ) ,( ( MUR + DS ) * ( ( Max( Min( MUR ,MUC ),DS ) * Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) ) - ( MUR + ( MLU - Max( RRSe,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / ( MUR + ( ( ( MLU * MUR ) * MUM ) + RCSe ) ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.04285779776178526}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07135545101029006}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.06033961188681792}, {"determining": "( ( Min( DDR ,( MDR / ARS ) ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( DDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( ( PN - CRS ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( MUR + RMSe ) ) / ( RMSe - MUM ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ACS - ( DDR + ( AMS / ( Max( FirstVNF_RAM,ARS ) / PN ) ) ) )", "choosing": "( Min( ( ( MLU + Min( ( RMSe * MUC ) ,( RMSe / Min( ( CS - DS ) ,RCSe ) ) ) ) - MLU ) ,( Min( ( RMSe * Min( CS ,DS ) ) ,MUR ) * Max( ( ( RCSe + Max( ( MLU / RRSe ),( RMSe - CS ) ) ) * Max( ( MUC * MLU ),RCSe ) ),MUR ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.1556163664955505}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10423826012350808}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.02078033524751877}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ACS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * RMSe ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8138075313807531, "obj2": 0.06521003873019394}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) * Max( ( ( DS / Max( RMSe,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.08340238144277887}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) - CS )", "obj1": 0.8640167364016736, "obj2": 0.04560044068079833}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( Max( MDR,ACS ) / ( CRS - CRS ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) ) ) - CS )", "obj1": 0.9225941422594143, "obj2": 0.024586125879827846}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.06192111713261956}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8472803347280334, "obj2": 0.05393928187424359}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08345318301454323}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + AMS ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.026318465595216597}, {"determining": "( ACS - ( DDR + ( Min( ( ( MDR * Min( Const ,( FirstVNF_Mem / PN ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( MUC ,RCSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( RMSe + CS ) - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16718342186463012}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ,RMSe ) + ( ( ( Min( MUR ,Min( CS ,CS ) ) + ( Min( RRSe ,RCSe ) + MUC ) ) + ( Min( RRSe ,CS ) - RRSe ) ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( ( ( RMSe + MUR ) / ( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.7656903765690377, "obj2": 0.08633265425081141}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7510460251046025, "obj2": 0.09495512592499704}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.031783072729992576}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),( ACS + BR ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU_Server * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( MUM + MUC ) ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * DS ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - DS ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( DS / Min( ( ( RRSe + CS ) / ( DS - DS ) ) ,MLU ) ) ) ) / DS ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.05312707877162911}, {"determining": "( ( DDR + ARS ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( MUR + MLU ) * ( RCSe * MLU ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06844988964390641}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( ( DDR + ( ( ( CRS - PN ) / ( Const / ACS ) ) * ACS ) ) - ( CRS + ( FirstVNF_CPU / Min( Max( ( ARS * ACS ),Min( FirstVNF_CPU_Server ,ARS ) ) ,FirstVNF_CPU_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUC ,( ( MUR + DS ) * ( ( CS + RMSe ) - ( MUR + ( RRSe - MLU ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05481702758109756}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + AMS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MLU * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RCSe + ( MUM + DS ) ) ) ) ) ) ) - CS )", "obj1": 0.9686192468619247, "obj2": 0.009480492542896278}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7175732217573222, "obj2": 0.10832358697204338}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( RCSe * ( ( CS * ( ( DS + MUR ) - ( MUR / RRSe ) ) ) - MUR ) ) - MUM ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16718342186463012}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8598326359832636, "obj2": 0.049201395238188714}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( CRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( ( Max( Max( RRSe,CS ),MUR ) * Min( MUR ,Min( MLU ,MUM ) ) ) * CS ) ,( ( ( ( MUC / RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( RCSe,CS ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6589958158995816, "obj2": 0.1609973865036862}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}, {"determining": "( ACS - ( DDR + ( Min( ( ( FirstVNF_RAM / FirstVNF_RAM ) - RRS ) ,ACS ) * ( FirstVNF_Mem / ( ACS + ( ( FirstVNF_Mem * RRS ) + Min( DDR ,BR ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.015049659233156031}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.12054477686017315}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / ( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUR,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006316177917908739}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.047643688791660484}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * MUR )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_CPU - MRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const * Min( Const ,PN ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( DS + CS ) - ( CS - RRSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) / Max( ( ( ( MUC / MUR ) - DS ) - CS ),( ( RMSe * DS ) / ( ( RRSe * ( CS + Max( RCSe,MUC ) ) ) / ( MUR - Max( MUM,MUR ) ) ) ) ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07135545101029006}, {"determining": "( ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) + ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - Min( Max( ( ( ARS - Min( FirstVNF_CPU ,DDR ) ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) - ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) + ( ( MUR + DS ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUM + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9456066945606695, "obj2": 0.01708058024706753}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.0050155441903126305}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( ( ( CS + RRSe ) * MUM ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.891213389121339, "obj2": 0.03577999003429662}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.04133467971903844}, {"determining": "( ( ( ( DDR + ( ( ( ( FirstVNF_CPU_Server - MRS ) + DDR ) / ( DDR - PN ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU + RMSe ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( ( ( AMS / ( ( AMS / FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( AMS ,MRS ) ) * ( MDR * FirstVNF_RAM_Server ) ) ) ) ) - ( MDR - ( Min( Min( Const ,Const ) ,DDR ) - ( ( CRS - PN ) / Min( PN ,ACS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUR ) - ( Min( ( MLU * CS ) ,( Max( RRSe,MUM ) / MUC ) ) - DS ) ) * CS ) - CS ) / Max( MUM,Min( RMSe ,( ( Min( DS ,( CS * Min( MUR ,RMSe ) ) ) - Max( RMSe,Max( MUC,RCSe ) ) ) - ( ( RCSe * RMSe ) / ( ( RCSe / ( MUC - MUR ) ) - Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Max( RRS,Min( Const ,ACS ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.017666539918318448}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( FirstVNF_Mem / Max( ( RRS * FirstVNF_RAM_Server ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ,RMSe ) + ( ( ( MUC + RCSe ) + RRSe ) / ( Min( ( MUM * Max( MUR,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( ( ( RMSe + MUR ) / ( RMSe + ( ( CS + RRSe ) + RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01569173567425463}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * ACS ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RCSe + ( MUM + DS ) ) ) ) ) ) ) - CS )", "obj1": 0.9623430962343096, "obj2": 0.011339664301357065}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RRSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9393305439330544, "obj2": 0.018604823369107498}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( RRS - PN ) / Max( MDR,( MDR / ( DDR - ARS ) ) ) ) ) ) )", "choosing": "( MUR * Max( Min( RRSe ,( Min( ( CS * ( RMSe / ( MLU / RCSe ) ) ) ,MLU ) + ( ( RRSe * DS ) / Max( RCSe,RMSe ) ) ) ),Min( Max( RCSe,MUR ) ,RMSe ) ) )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_CPU ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( RMSe,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.09138245447419213}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * RMSe ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9393305439330544, "obj2": 0.018604823369107498}, {"determining": "( ( FirstVNF_CPU - ( BR - DDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( Min( Const ,ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS + ( Min( MUM ,RMSe ) + ( ( Max( Min( RMSe ,DS ),DS ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08698906420326118}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,ACS ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) * Const ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( RRSe ,( ( ( RMSe * ( MUC - Min( RRSe ,RRSe ) ) ) - ( MUR + ( RCSe + ( MUM + DS ) ) ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.9623430962343096, "obj2": 0.011339664301357065}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( ( ACS + ARS ),FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( MUM,( ( MUR + DS ) * Max( ( ( ( RMSe - CS ) / ( MUR / RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.037832404980958904}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_Mem_Server / BR ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) + ( Max( RRS,FirstVNF_Mem_Server ) + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RRSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + MLU ) * Max( MUC,CS ) ) ),MUR ) ,( ( MUR + Min( MLU ,RRSe ) ) - RMSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.058191589444769286}], "22": [{"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - Min( Const ,ACS ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * RMSe ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Max( PN,RRS ) ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.5815899581589958, "obj2": 0.2550659517145709}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.0661554646734533}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( MUC + Min( Min( MUR ,Max( ( ( MLU / DS ) - DS ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( Max( MUM,CS ),DS ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14661566518330882}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / ( FirstVNF_CPU_Server * BR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( MUC * MLU ) * ( CS * ( Max( DS,MUR ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) / CS ) ) ) ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2146829962064042}, {"determining": "( ACS - ( DDR + ( AMS / ( Max( FirstVNF_RAM,ARS ) / PN ) ) ) )", "choosing": "( Min( ( ( MLU + Min( ( RMSe * MUC ) ,( RMSe / Min( ( CS - DS ) ,RCSe ) ) ) ) - MLU ) ,( Min( ( RMSe * Min( CS ,DS ) ) ,MUR ) * Max( ( ( RCSe + Max( ( MLU / RRSe ),( RMSe - CS ) ) ) * Max( ( MUC * MLU ),RCSe ) ),MUR ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.1556163664955505}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR / ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,Min( FirstVNF_RAM_Server ,Max( ( CRS - DDR ),FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( ( RRSe / DS ) + ( MUM - MUC ) ) * MLU ) * Max( Max( ( DS / Max( MUR,RCSe ) ),RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10936046698952841}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( RCSe,Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12308750262637323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( RMSe ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7071129707112971, "obj2": 0.11754443763863331}, {"determining": "( ACS - ( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( Min( RCSe ,( ( RMSe * MLU ) - DS ) ) - MLU ) ,( ( ( RRSe + ( MUC + MUR ) ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23776711098977235}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07056725052800827}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - RRS ) / ( ACS + ACS ) ) ) ) / ( ( FirstVNF_Mem * RRS ) + ARS ) ) * Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MLU ) - MUM ) / Min( ( RCSe - ( RMSe / RMSe ) ) ,MUC ) ) ) * Min( MUC ,MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_Mem_Server ) ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( MUM + DS ) ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09368913064883519}, {"determining": "( ACS - ( ( BR + ACS ) + ( ( ( ( MDR * Min( Const ,ARS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_CPU ,CRS ) ) ) )", "choosing": "( ( DS / Min( Min( CS ,Max( CS,DS ) ) ,( ( MUR + DS ) * ( ( Max( Min( MUR ,MUC ),DS ) * Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) ) - ( MUR + ( MLU - Max( RRSe,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.16644075894762794}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8305439330543933, "obj2": 0.057365858796704666}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05481702758109756}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6799163179916318, "obj2": 0.14139339526041236}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7175732217573222, "obj2": 0.10832358697204338}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),( ACS + BR ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU_Server * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( MUM + MUC ) ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * DS ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( ( Min( ( FirstVNF_CPU - ( BR - DDR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / ( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUR,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) + ( Min( MUM ,RMSe ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) - ( Min( CRS ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( ( Max( MUR,RCSe ) / DS ) + RMSe ) * Max( ( ( DS / Max( MUR,RCSe ) ) + ( MLU - MUR ) ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MLU ,RMSe ) ) ) ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.22721838013010695}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ACS / ( ACS + ( ACS + ARS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( Max( CS,RCSe ) * MUC ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.600418410041841, "obj2": 0.22342098708597669}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - PN ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) / Min( MUM ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.0050155441903126305}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( ACS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * RMSe ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8138075313807531, "obj2": 0.06521003873019394}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Max( Max( FirstVNF_RAM,( FirstVNF_RAM_Server * FirstVNF_Mem ) ),FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR - DS ),( MUM + ( RMSe * ( Max( Min( RMSe ,DS ),DS ) + DS ) ) ) ) - CS )", "obj1": 0.9225941422594143, "obj2": 0.024193120034437816}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ACS - ( DDR + ( ARS / CRS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - CS ),MUM ) / DS ) )", "obj1": 0.6464435146443515, "obj2": 0.16718342186463012}, {"determining": "( ACS - ( DDR + ( ( ( ( Min( PN ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server - MRS ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MUM - ( DS - RMSe ) ) - RRSe ) / ( RMSe - RCSe ) ) ,MUM ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ACS - ( DDR + Max( ( FirstVNF_RAM / ACS ),( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( RCSe + ( MUR / ( MLU / Max( Max( ( MUC * Min( MUC ,DS ) ),RCSe ),RCSe ) ) ) ) - Max( RMSe,RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.19802176793809753}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUM,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7656903765690377, "obj2": 0.08468327801938329}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( RRS,FirstVNF_Mem_Server ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2283777744120465}, {"determining": "( ( Min( DDR ,( MDR / ARS ) ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( DDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( ( PN - CRS ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( MUR + RMSe ) ) / ( RMSe - MUM ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03161438452610465}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,DDR ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Min( MUR ,MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7824267782426778, "obj2": 0.0798231490232444}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05331001478052397}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ( Max( DDR,RRS ) - ( ( CRS - PN ) / ( ACS + ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( Min( Min( MUR ,MLU ) ,Max( Min( RMSe ,DS ),DS ) ) - ( MUR + RCSe ) ) ) ) ) - Max( ( RMSe - ( RRSe * ( ( ( MLU * ( MUM - RRSe ) ) - MUC ) / ( DS + RCSe ) ) ) ),CS ) )", "obj1": 0.9728033472803347, "obj2": 0.008718678040948608}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - DS ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RRSe ) / RCSe ) ,Max( ( ( DS / Max( MUR,RRSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8577405857740585, "obj2": 0.048192471754716325}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08345318301454323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( Min( Const ,ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7782426778242678, "obj2": 0.081563177183881}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( ( DDR + ( ( ( ( FirstVNF_CPU_Server - MRS ) + DDR ) / ( DDR - PN ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU + RMSe ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ACS - ( DDR + ( Min( ( ( MDR * Min( Const ,( FirstVNF_Mem / PN ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ,( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( MUC ,RCSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( RMSe + CS ) - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16718342186463012}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( CRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( ( Max( Max( RRSe,CS ),MUR ) * Min( MUR ,Min( MLU ,MUM ) ) ) * CS ) ,( ( ( ( MUC / RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( RCSe,CS ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6589958158995816, "obj2": 0.1609973865036862}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( MUR + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) - CS )", "obj1": 0.8640167364016736, "obj2": 0.04560044068079833}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_CPU ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( RMSe,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.09138245447419213}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.06033961188681792}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8221757322175732, "obj2": 0.06113312718065111}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( MDR - ( Max( MDR,( Const + FirstVNF_CPU_Server ) ) * ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) - ( Min( DDR ,BR ) - ( Min( ACS ,ACS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / ( ( CS * ( Min( Min( DS ,DS ) ,Max( ( RCSe / CS ),Max( RRSe,RCSe ) ) ) / MUC ) ) + ( MUM + RRSe ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( ( ( RMSe + DS ) + Max( RRSe,MLU ) ) + DS ) * ( MUC + DS ) ) ),( MUM - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8682008368200836, "obj2": 0.04394988344250996}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.02075244202824746}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( Max( RMSe,RMSe ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19802176793809753}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ACS / ( ACS + ( ACS + ARS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( Max( CS,RCSe ) * MUC ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.600418410041841, "obj2": 0.22342098708597669}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_CPU ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( RMSe,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.09138245447419213}, {"determining": "( ( FirstVNF_CPU - ( BR - DDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( Min( Const ,ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS + ( Min( MUM ,RMSe ) + ( ( Max( Min( RMSe ,DS ),DS ) + DS ) * RMSe ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08698906420326118}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.9937238493723849, "obj2": 0.002667019497637639}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - DS ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.9351464435146444, "obj2": 0.019720390310075105}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( RRS - PN ) / Max( MDR,( MDR / ( DDR - ARS ) ) ) ) ) ) )", "choosing": "( MUR * Max( Min( RRSe ,( Min( ( CS * ( RMSe / ( MLU / RCSe ) ) ) ,MLU ) + ( ( RRSe * DS ) / Max( RCSe,RMSe ) ) ) ),Min( Max( RCSe,MUR ) ,RMSe ) ) )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( FirstVNF_Mem / Max( ( RRS * FirstVNF_RAM_Server ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( RMSe * Min( ( MUR - RMSe ) ,RRSe ) ) ) ,RMSe ) + ( ( ( MUC + RCSe ) + RRSe ) / ( Min( ( MUM * Max( MUR,RCSe ) ) ,RMSe ) * RCSe ) ) ) / Max( ( ( RMSe + MUR ) / ( RMSe + ( ( CS + RRSe ) + RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01569173567425463}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( Min( Max( RRS,FirstVNF_Mem_Server ) ,BR ) - FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( MLU ,( ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) + ( ( MLU * RRSe ) / RCSe ) ) * ( MUR + MUR ) ) ) - CS )", "obj1": 0.9456066945606695, "obj2": 0.017038353326687298}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ACS,FirstVNF_Mem_Server ) - ( ( ( MRS / Max( CRS,( AMS * MDR ) ) ) * FirstVNF_RAM ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( Min( RMSe ,CS ) + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( Max( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ),Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.023279918017415423}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.08210228960910612}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011322064354623454}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6799163179916318, "obj2": 0.14139339526041236}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Min( MDR ,Max( FirstVNF_CPU_Server,MRS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( AMS / CRS ) / Const ) ) ) ) + ( ( FirstVNF_CPU - Min( Max( RRS,Min( Const ,ACS ) ) ,BR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RCSe ) ) + Max( ( MUR / ( MLU / ( MUC + RCSe ) ) ),Max( MUR,Min( Min( RMSe ,MUR ) ,RMSe ) ) ) ),Min( MUR ,MUM ) ) / DS ) - MUR )", "obj1": 0.9435146443514645, "obj2": 0.01764968789951619}, {"determining": "( ( ( ( AMS / ( ( AMS / FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( AMS ,MRS ) ) * ( MDR * FirstVNF_RAM_Server ) ) ) ) ) - ( MDR - ( Min( Min( Const ,Const ) ,DDR ) - ( ( CRS - PN ) / Min( PN ,ACS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUR ) - ( Min( ( MLU * CS ) ,( Max( RRSe,MUM ) / MUC ) ) - DS ) ) * CS ) - CS ) / Max( MUM,Min( RMSe ,( ( Min( DS ,( CS * Min( MUR ,RMSe ) ) ) - Max( RMSe,Max( MUC,RCSe ) ) ) - ( ( RCSe * RMSe ) / ( ( RCSe / ( MUC - MUR ) ) - Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10423826012350808}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,DDR ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Min( MUR ,MUR ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.0533001226595241}, {"determining": "( ( ( ( DDR + ( ( ( CRS - PN ) / ( Const / ACS ) ) * ACS ) ) - ( CRS + ( FirstVNF_CPU / Min( Max( ( ARS * ACS ),Min( FirstVNF_CPU_Server ,ARS ) ) ,FirstVNF_CPU_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUC ,( ( MUR + DS ) * ( ( CS + RMSe ) - ( MUR + ( RRSe - MLU ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04223138147000427}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.04133467971903844}], "23": [{"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( ( ( DDR + ( ( ( CRS - FirstVNF_Mem ) / ( Const / ACS ) ) * ACS ) ) - ( CRS + ( Min( Max( ( ARS * ACS ),Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( Min( RMSe ,CS ) + RMSe ),CS ) / Min( MUC ,( ( MUR + DS ) * Max( MUC,( MUM * ( ( MLU / MLU ) + ( MUM - MUC ) ) ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - Min( Const ,ACS ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_RAM_Server + AMS ) / ( FirstVNF_Mem - ACS ) ) * MDR ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) - RMSe ) + Min( ( MUC - ( MUM + ( ( MUR + MLU ) * MUC ) ) ) ,RCSe ) ) / MUM ) - CS )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Max( PN,RRS ) ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.5815899581589958, "obj2": 0.2550659517145709}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / ( PN / FirstVNF_CPU_Server ) ) * Min( ( ( DDR / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Min( ( Max( CS,RCSe ) * MUC ) ,RRSe ) ) ) ) ) * Max( Max( ( MLU / Max( CS,( MLU + ( Min( RRSe ,RRSe ) + ( RMSe + RCSe ) ) ) ) ),MUR ),RRSe ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07056725052800827}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ARS - Min( ( ( Max( FirstVNF_CPU_Server,( BR * DDR ) ) / FirstVNF_RAM ) - Const ) ,Const ) )", "choosing": "( ( RMSe / ( ( DS / ( Max( CS,DS ) / CS ) ) * ( ( MUR - Max( CS,RMSe ) ) - MUC ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( DS / Min( RMSe ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( DS ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.1516825342675939}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Min( ( RCSe + ( MUR + Max( ( RRSe + RRSe ),MUC ) ) ) ,RMSe ) * Min( Min( CS ,MUC ) ,( Max( ( Max( CS,RCSe ) * MUC ),( ( RMSe - RMSe ) * CS ) ) / ( ( CS + RRSe ) - ( DS + CS ) ) ) ) ) ) * Max( ( Max( CS,RCSe ) * MUC ),RRSe ) )", "obj1": 0.602510460251046, "obj2": 0.21564423929817153}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),( ACS + BR ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU_Server * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( MUM + MUC ) ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * DS ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) * ACS ) + DDR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( ( RCSe - DS ),( DS - MUM ) ) - MUM )", "obj1": 0.7092050209205021, "obj2": 0.10936046698952841}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6108786610878661, "obj2": 0.20379304807124468}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( RMSe ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7071129707112971, "obj2": 0.11754443763863331}, {"determining": "( ( DDR / ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( Min( FirstVNF_Mem ,( Max( FirstVNF_CPU_Server,AMS ) - CRS ) ) - Const ) ) ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.6506276150627615, "obj2": 0.16164700014928388}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ACS - ( DDR + ( ARS / CRS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - CS ),MUM ) / DS ) )", "obj1": 0.6464435146443515, "obj2": 0.16718342186463012}, {"determining": "( ( Min( BR ,PN ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( ( DS / ( MUM + ( ( ( DS + Min( MUC ,MUC ) ) + RRSe ) * ( MUC * DS ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06441075952037817}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( RCSe,Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12308750262637323}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( RRS - PN ) / Max( MDR,( MDR / ( DDR - ARS ) ) ) ) ) ) )", "choosing": "( MUR * Max( Min( RRSe ,( Min( ( CS * ( RMSe / ( MLU / RCSe ) ) ) ,MLU ) + ( ( RRSe * DS ) / Max( RCSe,RMSe ) ) ) ),Min( Max( RCSe,MUR ) ,RMSe ) ) )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - ( Const + FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUM * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( Min( MUM ,MUC ) + ( Max( RMSe,( MUM - MUC ) ) * RMSe ) ) * Min( ( MLU - MLU ) ,DS ) ) )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6799163179916318, "obj2": 0.14139339526041236}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( MDR - ( Max( MDR,( Const + FirstVNF_CPU_Server ) ) * ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) - ( Min( DDR ,BR ) - ( Min( ACS ,ACS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / ( ( CS * ( Min( Min( DS ,DS ) ,Max( ( RCSe / CS ),Max( RRSe,RCSe ) ) ) / MUC ) ) + ( MUM + RRSe ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( ( ( RMSe + DS ) + Max( RRSe,MLU ) ) + DS ) * ( MUC + DS ) ) ),( MUM - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8682008368200836, "obj2": 0.04394988344250996}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05481702758109756}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.025591373792927495}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - RRS ) / ( ACS + ACS ) ) ) ) / ( ( FirstVNF_Mem * RRS ) + ARS ) ) * Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MLU ) - MUM ) / Min( ( RCSe - ( RMSe / RMSe ) ) ,MUC ) ) ) * Min( MUC ,MLU ) )", "obj1": 0.608786610878661, "obj2": 0.21105402855870362}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - DS ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.9351464435146444, "obj2": 0.019720390310075105}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.0661554646734533}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( ( MUC + RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6129707112970711, "obj2": 0.2005193781156297}, {"determining": "( ACS - ( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( Min( RCSe ,( ( RMSe * MLU ) - DS ) ) - MLU ) ,( ( ( RRSe + ( MUC + MUR ) ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23776711098977235}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( CRS - ( Max( RRS,FirstVNF_Mem_Server ) - ( ACS * AMS ) ) ) )", "choosing": "( ( MLU / Min( Max( MUR,MLU ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - Max( RMSe,( RRSe * ( Min( MUM ,( ( DS - RCSe ) * MUC ) ) * ( RMSe * MUM ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.1182348727356194}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * ( MUC + DS ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010780822253353549}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ACS - ( DDR + Max( ( FirstVNF_RAM / ACS ),( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( RCSe + ( MUR / ( MLU / Max( Max( ( MUC * Min( MUC ,DS ) ),RCSe ),RCSe ) ) ) ) - Max( RMSe,RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.19802176793809753}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03161438452610465}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / ( FirstVNF_CPU_Server * BR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( MUC * MLU ) * ( CS * ( Max( DS,MUR ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) / CS ) ) ) ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2146829962064042}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.0661554646734533}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7175732217573222, "obj2": 0.10832358697204338}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03720305751693306}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04223138147000427}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05331001478052397}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - DS ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08345318301454323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_Mem_Server ) ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( MUM + DS ) ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09368913064883519}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ACS,( MDR - ( ( DDR - Max( AMS,ACS ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( ( MUC - CS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.056616365153003084}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16718342186463012}, {"determining": "( Max( DDR,BR ) - ( DDR + ( ( ( ( Max( FirstVNF_CPU,( RRS + ARS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) / Max( PN,FirstVNF_Mem_Server ) ) / Min( MRS ,AMS ) ) * ( FirstVNF_Mem + Min( AMS ,PN ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( MUR ,Max( ( MUC * ( RCSe / MUC ) ),MLU ) ) ,MUR ) ) - Min( RMSe ,Max( ( Min( RRSe ,DS ) * MUM ),Max( Max( CS,MUM ),DS ) ) ) ) - ( MUC * MUR ) )", "obj1": 0.6715481171548117, "obj2": 0.14661566518330882}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,DDR ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Min( MUR ,MUR ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.0533001226595241}, {"determining": "( ( ( ( DDR + ( ( ( ( FirstVNF_CPU_Server - MRS ) + DDR ) / ( DDR - PN ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU + RMSe ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( CRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( ( Max( Max( RRSe,CS ),MUR ) * Min( MUR ,Min( MLU ,MUM ) ) ) * CS ) ,( ( ( ( MUC / RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( RCSe,CS ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6589958158995816, "obj2": 0.1609973865036862}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUM,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7656903765690377, "obj2": 0.08468327801938329}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( Min( BR ,ACS ) - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) + DDR ) ) - FirstVNF_CPU ) - ( MDR - Max( Max( RRS,FirstVNF_Mem_Server ),( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( Min( RCSe ,MLU ),( MUC * MUM ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - ( ( RCSe * MUC ) * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09322118152700687}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8305439330543933, "obj2": 0.057365858796704666}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( ( Min( ( FirstVNF_CPU - ( BR - DDR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( DS / ( Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUR,CS ) ) ),MUR ) ,( ( CS - MUC ) + RCSe ) ) + ( Min( MUM ,RMSe ) * Max( ( ( DS / RMSe ) + Max( Min( RMSe ,DS ),DS ) ),( DS * Max( ( MUR + RMSe ),RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( RCSe,Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12308750262637323}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( Max( RMSe,RMSe ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19802176793809753}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( FirstVNF_CPU - Max( FirstVNF_Mem,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( RMSe * Min( ( DS - MUR ) ,RCSe ) ) ) ,RMSe ) + ( ( ( MUC + RCSe ) + RRSe ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RMSe ) ) ) / Max( ( ( RMSe + MUR ) / ( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01569173567425463}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.05970826578425942}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ARS + FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Min( ACS ,Const ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * ( DS - RMSe ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) + DS ) ) - ( Max( RRSe,MUC ) + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.008379014730263642}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server / MRS ) ) * ACS ) - RRS ),Const ) + Max( ( ( MDR * PN ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),ARS ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * PN ) ),( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( DS / ( ( MUC - ( CS - Min( MUC ,Max( ( CS - MUC ),CS ) ) ) ) + ( Max( ( MUC / ( MUR / MUM ) ),( MUC * MUM ) ) * ( Min( CS ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08537498719300683}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( MUC + Min( Min( MUR ,Max( ( ( MLU / DS ) - DS ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( Max( MUM,CS ),DS ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14661566518330882}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Min( MDR ,Max( FirstVNF_CPU_Server,MRS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( AMS / CRS ) / Const ) ) ) ) + ( ( FirstVNF_CPU - Min( Max( RRS,Min( Const ,ACS ) ) ,BR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RCSe ) ) + Max( ( MUR / ( MLU / ( MUC + RCSe ) ) ),Max( MUR,Min( Min( RMSe ,MUR ) ,RMSe ) ) ) ),Min( MUR ,MUM ) ) / DS ) - MUR )", "obj1": 0.9435146443514645, "obj2": 0.01764968789951619}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( ( ( BR + MDR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( RCSe,Min( MUR ,( MUR / MUC ) ) ) ) ) - CS )", "obj1": 0.99581589958159, "obj2": 0.0012555089940472928}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011322064354623454}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6799163179916318, "obj2": 0.14139339526041236}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ( Max( DDR,RRS ) - ( ( CRS - PN ) / ( ACS + ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( Min( Min( MUR ,MLU ) ,Max( Min( RMSe ,DS ),DS ) ) - ( MUR + RCSe ) ) ) ) ) - Max( ( RMSe - ( RRSe * ( ( ( MLU * ( MUM - RRSe ) ) - MUC ) / ( DS + RCSe ) ) ) ),CS ) )", "obj1": 0.9728033472803347, "obj2": 0.008718678040948608}, {"determining": "( ( ( ( AMS / ( ( AMS / FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( AMS ,MRS ) ) * ( MDR * FirstVNF_RAM_Server ) ) ) ) ) - ( MDR - ( Min( Min( Const ,Const ) ,DDR ) - ( ( CRS - PN ) / Min( PN ,ACS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUR ) - ( Min( ( MLU * CS ) ,( Max( RRSe,MUM ) / MUC ) ) - DS ) ) * CS ) - CS ) / Max( MUM,Min( RMSe ,( ( Min( DS ,( CS * Min( MUR ,RMSe ) ) ) - Max( RMSe,Max( MUC,RCSe ) ) ) - ( ( RCSe * RMSe ) / ( ( RCSe / ( MUC - MUR ) ) - Min( RRSe ,( MUC + RRSe ) ) ) ) ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10423826012350808}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.08148046488849778}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8221757322175732, "obj2": 0.06113312718065111}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem - ACS ),PN ) - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,CS ) ) ) * ( RCSe / DS ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.040998276493418626}], "24": [{"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( Max( FirstVNF_Mem_Server,PN ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR + ( ( ( CRS - FirstVNF_Mem ) / ( Const / ACS ) ) * ACS ) ) - ( CRS + ( Min( Max( ( ARS * ACS ),Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( Min( RMSe ,CS ) + RMSe ),CS ) / Min( MUC ,( ( MUR + DS ) * Max( MUC,( MUM * ( ( MLU / MLU ) + ( MUM - MUC ) ) ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_RAM_Server + AMS ) / ( FirstVNF_Mem - ACS ) ) * MDR ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) - RMSe ) + Min( ( MUC - ( MUM + ( ( MUR + MLU ) * MUC ) ) ) ,RCSe ) ) / MUM ) - CS )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( ACS ,Max( PN,RRS ) ) ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.5815899581589958, "obj2": 0.2550659517145709}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16656327969869783}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Const / FirstVNF_CPU_Server ),( ACS + BR ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_CPU_Server * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( DS - MUM ) ) ) - CS ) / Min( ( RCSe * ( MUM + MUC ) ) ,( MLU / Max( ( RCSe * ( ( MUR + MLU ) * DS ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15659699606679076}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + CRS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / DS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14890756106622768}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( AMS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),MUC ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( DDR / ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( Min( FirstVNF_Mem ,( Max( FirstVNF_CPU_Server,AMS ) - CRS ) ) - Const ) ) ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.6506276150627615, "obj2": 0.16164700014928388}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / ( PN / FirstVNF_CPU_Server ) ) * Min( ( ( DDR / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Min( ( Max( CS,RCSe ) * MUC ) ,RRSe ) ) ) ) ) * Max( Max( ( MLU / Max( CS,( MLU + ( Min( RRSe ,RRSe ) + ( RMSe + RCSe ) ) ) ) ),MUR ),RRSe ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( CRS - ( Max( RRS,FirstVNF_Mem_Server ) - ( ACS * AMS ) ) ) )", "choosing": "( ( MLU / Min( Max( MUR,MLU ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - Max( RMSe,( RRSe * ( Min( MUM ,( ( DS - RCSe ) * MUC ) ) * ( RMSe * MUM ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.1182348727356194}, {"determining": "( ACS - ( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( Min( RCSe ,( ( RMSe * MLU ) - DS ) ) - MLU ) ,( ( ( RRSe + ( MUC + MUR ) ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23776711098977235}, {"determining": "( ( MDR - ( Max( MDR,( Const + FirstVNF_CPU_Server ) ) * ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) - ( Min( DDR ,BR ) - ( Min( ACS ,ACS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / ( ( CS * ( Min( Min( DS ,DS ) ,Max( ( RCSe / CS ),Max( RRSe,RCSe ) ) ) / MUC ) ) + ( MUM + RRSe ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( ( ( RMSe + DS ) + Max( RRSe,MLU ) ) + DS ) * ( MUC + DS ) ) ),( MUM - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8682008368200836, "obj2": 0.04394988344250996}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,Const ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - Min( ( ( MUC + MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( MUM * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06581590959729476}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) * ACS ) + DDR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( ( RCSe - DS ),( DS - MUM ) ) - MUM )", "obj1": 0.7092050209205021, "obj2": 0.10936046698952841}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( RCSe,Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12308750262637323}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - AMS ) - ( ( RRS - PN ) / Min( Const ,ARS ) ) ) ) / Min( ACS ,Const ) ) * Max( Max( ( PN + FirstVNF_Mem_Server ),ARS ),MRS ) ) ) )", "choosing": "( Min( CS ,( RMSe * Min( Min( Min( DS ,MUM ) ,MUC ) ,Min( MUM ,( RRSe - RRSe ) ) ) ) ) * ( MLU * MUC ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7175732217573222, "obj2": 0.10832358697204338}, {"determining": "( ( ( Min( CRS ,( ( CRS - PN ) / ( ACS + ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Min( MUR ,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06842914289218854}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Min( ( ( CRS - PN ) / ( ( ( ACS * FirstVNF_RAM ) / ( ( CRS / FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / PN ) ) ,FirstVNF_CPU_Server ) - ( Max( RRS,( Min( MDR ,MRS ) + DDR ) ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Max( ( MUC * MUM ),Min( RCSe ,MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) + RMSe ),CS ) / Min( MUM ,( RCSe - CS ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13364322891909844}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.06983440771271196}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1410978106009447}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( DDR ,( ( ACS / FirstVNF_RAM ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( Min( CS ,RMSe ) - DS ) ,( RRSe - CS ) ) + Min( RRSe ,( MLU * DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MLU ,RMSe ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08225073036616716}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( ARS,( PN + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) - CS )", "obj1": 0.9811715481171548, "obj2": 0.006001709126664272}, {"determining": "( ARS - Min( ( ( Max( FirstVNF_CPU_Server,( BR * DDR ) ) / FirstVNF_RAM ) - Const ) ,Const ) )", "choosing": "( ( RMSe / ( ( DS / ( Max( CS,DS ) / CS ) ) * ( ( MUR - Max( CS,RMSe ) ) - MUC ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07232174056092257}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,MDR ) - BR ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.049715384566754776}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Min( MDR ,Max( FirstVNF_CPU_Server,MRS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( AMS / CRS ) / Const ) ) ) ) + ( ( FirstVNF_CPU - Min( Max( RRS,Min( Const ,ACS ) ) ,BR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RCSe ) ) + Max( ( MUR / ( MLU / ( MUC + RCSe ) ) ),Max( MUR,Min( Min( RMSe ,MUR ) ,RMSe ) ) ) ),Min( MUR ,MUM ) ) / DS ) - MUR )", "obj1": 0.9435146443514645, "obj2": 0.01764968789951619}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( FirstVNF_CPU - Min( DDR ,BR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( RRS - PN ) / Max( MDR,( MDR / ( DDR - ARS ) ) ) ) ) ) )", "choosing": "( MUR * Max( Min( RRSe ,( Min( ( CS * ( RMSe / ( MLU / RCSe ) ) ) ,MLU ) + ( ( RRSe * DS ) / Max( RCSe,RMSe ) ) ) ),Min( Max( RCSe,MUR ) ,RMSe ) ) )", "obj1": 0.899581589958159, "obj2": 0.03264873582418381}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.0253455573774261}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05331001478052397}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server + PN ) ,ACS ) - ( Const + MRS ) ) ) - ( MDR * Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( MDR * ACS ) ) / ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,Const ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( RCSe ,Max( ( ( MLU / DS ) - ( DS - MUM ) ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( DS,Max( MUM,CS ) ) ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03654456604388267}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( Min( BR ,PN ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( ( DS / ( MUM + ( ( ( DS + Min( MUC ,MUC ) ) + RRSe ) * ( MUC * DS ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06441075952037817}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,DDR ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Min( MUR ,MUR ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.0533001226595241}, {"determining": "( ( ( ( DDR + ( ( ( ( FirstVNF_CPU_Server - MRS ) + DDR ) / ( DDR - PN ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU + RMSe ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - CS )", "obj1": 0.9142259414225942, "obj2": 0.027436130201812785}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - CS ),MUM ) / DS ) )", "obj1": 0.9414225941422594, "obj2": 0.01889041360023075}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( ( RRS + FirstVNF_Mem_Server ) - ( RRS - FirstVNF_CPU ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( MRS / CRS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + Min( ( MUM - ( MUC * DS ) ) ,CS ) ) ) ) ) - CS )", "obj1": 0.9686192468619247, "obj2": 0.009449510500760053}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( CRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( ( Max( Max( RRSe,CS ),MUR ) * Min( MUR ,Min( MLU ,MUM ) ) ) * CS ) ,( ( ( ( MUC / RCSe ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( RCSe,CS ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6589958158995816, "obj2": 0.1609973865036862}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( Min( BR ,ACS ) - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) + DDR ) ) - FirstVNF_CPU ) - ( MDR - Max( Max( RRS,FirstVNF_Mem_Server ),( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( Min( RCSe ,MLU ),( MUC * MUM ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - ( ( RCSe * MUC ) * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09322118152700687}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.10229039208706762}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( CS * ( RMSe * Min( ( ( RCSe * ( MLU / Max( DS,CS ) ) ) - MLU ) ,( ( ( ( MUC + MUR ) + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.7761506276150628, "obj2": 0.08127356034111564}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + DS ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.9225941422594143, "obj2": 0.024497488543050876}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( DDR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( ( FirstVNF_CPU + MDR ) - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( CS - MLU ) ) ) - CS )", "obj1": 0.9351464435146444, "obj2": 0.019720390310075105}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( RCSe,Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12308750262637323}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( CRS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007566247009689113}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( DS / Min( ( DS * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039080227111771004}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03161438452610465}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server / MRS ) ) * ACS ) - RRS ),Const ) + Max( ( ( MDR * PN ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),ARS ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * PN ) ),( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( DS / ( ( MUC - ( CS - Min( MUC ,Max( ( CS - MUC ),CS ) ) ) ) + ( Max( ( MUC / ( MUR / MUM ) ),( MUC * MUM ) ) * ( Min( CS ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08537498719300683}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( MUM + DS ) ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.022756470523334345}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( ( ( CS / MLU ) - MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.014019999896742982}, {"determining": "( ( ( DDR + BR ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( ( BR * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( Min( MUM ,RMSe ) / ( MLU - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( Max( DDR,BR ) - ( DDR + ( ( ( ( Max( FirstVNF_CPU,( RRS + ARS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) / Max( PN,FirstVNF_Mem_Server ) ) / Min( MRS ,AMS ) ) * ( FirstVNF_Mem + Min( AMS ,PN ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( MUR ,Max( ( MUC * ( RCSe / MUC ) ),MLU ) ) ,MUR ) ) - Min( RMSe ,Max( ( Min( RRSe ,DS ) * MUM ),Max( Max( CS,MUM ),DS ) ) ) ) - ( MUC * MUR ) )", "obj1": 0.6715481171548117, "obj2": 0.14661566518330882}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.16139535751931203}, {"determining": "( ( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - ( Const + FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUM * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( Min( MUM ,MUC ) + ( Max( RMSe,( MUM - MUC ) ) * RMSe ) ) * Min( ( MLU - MLU ) ,DS ) ) )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ( Max( RRS,DDR ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Min( MUR ,MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + RCSe ) ) ) ) ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008718678040948606}, {"determining": "( ( Max( ( DDR - ( FirstVNF_Mem * ( DDR * MRS ) ) ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( CRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Min( MLU ,MLU ) * ( Min( RRSe ,MUM ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.001900695946070544}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * ( MUC + DS ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010780822253353549}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.06106305021864065}, {"determining": "( ( Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05643773682806096}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09880000289722697}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem - ACS ),PN ) - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,CS ) ) ) * ( RCSe / DS ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.040998276493418626}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( FirstVNF_CPU - BR ) + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( MUR + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.05841678216901023}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04223138147000427}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03720305751693306}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Min( DDR ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.04927013726192816}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9016736401673641, "obj2": 0.03166308037112061}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.06157485521279751}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( FirstVNF_CPU - Max( FirstVNF_Mem,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( RMSe * Min( ( DS - MUR ) ,RCSe ) ) ) ,RMSe ) + ( ( ( MUC + RCSe ) + RRSe ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RMSe ) ) ) / Max( ( ( RMSe + MUR ) / ( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01569173567425463}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( ( MUC + Min( Min( MUR ,Max( ( ( MLU / DS ) - DS ),MLU ) ) ,MUR ) ) * ( RMSe * ( ( RMSe * MUM ) / Max( Max( MUM,CS ),DS ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14661566518330882}], "25": [{"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + ( DS / Max( MUR,RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( Max( FirstVNF_Mem_Server,PN ) * ( DDR + ( ( ACS / ( ACS + ( MRS / CRS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ( ( ( ( DDR + BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( ARS / ACS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RRSe ) ) * ( ( MUM + MLU ) / Min( RCSe ,MLU ) ) ) - Max( MUR,( MLU - RRSe ) ) ) ) ) ) - Min( MUC ,MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,MRS ) ) * ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) ) + DDR ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( ( CS * RMSe ) ,Min( RRSe ,RCSe ) ) + ( MLU - RCSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( DS - ( MUR * RCSe ) ) - MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.27998221556524194}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( DDR + ( ( ( ( DDR + BR ) - FirstVNF_CPU ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - ( MUC * MLU ) ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.5815899581589958, "obj2": 0.24868409853264986}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( ( DDR / ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( Min( FirstVNF_Mem ,( Max( FirstVNF_CPU_Server,AMS ) - CRS ) ) - Const ) ) ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.6506276150627615, "obj2": 0.16164700014928388}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - Min( ( ( MUC + MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.1748269130110323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( ( ACS + FirstVNF_Mem ) - PN ) / ( Min( MDR ,MRS ) + FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR * DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( ( MUR * MLU ) ,RRSe ) * MLU ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09218847227098735}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1410978106009447}, {"determining": "( ( Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( Max( ( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.05643773682806096}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / ( PN / FirstVNF_CPU_Server ) ) * Min( ( ( DDR / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Min( ( Max( CS,RCSe ) * MUC ) ,RRSe ) ) ) ) ) * Max( Max( ( MLU / Max( CS,( MLU + ( Min( RRSe ,RRSe ) + ( RMSe + RCSe ) ) ) ) ),MUR ),RRSe ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( CRS - ( Max( RRS,FirstVNF_Mem_Server ) - ( ACS * AMS ) ) ) )", "choosing": "( ( MLU / Min( Max( MUR,MLU ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - Max( RMSe,( RRSe * ( Min( MUM ,( ( DS - RCSe ) * MUC ) ) * ( RMSe * MUM ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.1182348727356194}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ACS - ( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( Min( RCSe ,( ( RMSe * MLU ) - DS ) ) - MLU ) ,( ( ( RRSe + ( MUC + MUR ) ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23776711098977235}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server / MRS ) ) * ACS ) - RRS ),Const ) + Max( ( ( MDR * PN ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),ARS ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * PN ) ),( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( DS / ( ( MUC - ( CS - Min( MUC ,Max( ( CS - MUC ),CS ) ) ) ) + ( Max( ( MUC / ( MUR / MUM ) ),( MUC * MUM ) ) * ( Min( CS ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08537498719300683}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05331001478052397}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( DDR + BR ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( ( BR * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( Min( MUM ,RMSe ) / ( MLU - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( DDR ,( ( ACS / FirstVNF_RAM ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( Min( CS ,RMSe ) - DS ) ,( RRSe - CS ) ) + Min( RRSe ,( MLU * DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MLU ,RMSe ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08225073036616716}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( RCSe,Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12308750262637323}, {"determining": "( ACS - ( DDR + ( ACS * ( ( ( PN * Min( ( FirstVNF_CPU - ARS ) ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * Max( DS,( MUR + ( MLU - RRSe ) ) ) ) ) / ( Max( Max( ( MUC + MUR ),MLU ),( ( Min( MLU ,MLU ) + RRSe ) - ( Max( MUM,Max( DS,MLU ) ) - MUM ) ) ) * MLU ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16656327969869783}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10801381033663585}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,Min( Const ,ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.797071129707113, "obj2": 0.06830773954248012}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.10229039208706762}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Min( ( ( CRS - PN ) / ( ( ( ACS * FirstVNF_RAM ) / ( ( CRS / FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / PN ) ) ,FirstVNF_CPU_Server ) - ( Max( RRS,( Min( MDR ,MRS ) + DDR ) ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Max( ( MUC * MUM ),Min( RCSe ,MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) + RMSe ),CS ) / Min( MUM ,( RCSe - CS ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13364322891909844}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( ( ( MUC * Max( ( ( ( MLU - CS ) / ( RCSe * CS ) ) - Min( MUR ,( MUC / MLU ) ) ),( CS + MUM ) ) ) * ( CS * ( ( ( Min( CS ,CS ) * ( RRSe * RMSe ) ) - MLU ) * RCSe ) ) ) - MUC ) * MUR )", "obj1": 0.893305439330544, "obj2": 0.0346780453431997}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010775011435020345}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}, {"determining": "( ( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - ( Const + FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUM * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( Min( MUM ,MUC ) + ( Max( RMSe,( MUM - MUC ) ) * RMSe ) ) * Min( ( MLU - MLU ) ,DS ) ) )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ( RRS - ( ( ( FirstVNF_RAM_Server - ( AMS * MRS ) ) - CRS ) * ARS ) ) - ( ( ( ( CRS - FirstVNF_Mem ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( ACS,AMS ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) - ( DDR / ACS ) ) )", "choosing": "( CS - ( DS / ( MUM + ( ( ( MLU + RCSe ) + Max( ( MUM + ( DS - RRSe ) ),MUM ) ) * ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.060047779189590755}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( MDR - ( Max( MDR,( Const + FirstVNF_CPU_Server ) ) * ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) - ( Min( DDR ,BR ) - ( Min( ACS ,ACS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / ( ( CS * ( Min( Min( DS ,DS ) ,Max( ( RCSe / CS ),Max( RRSe,RCSe ) ) ) / MUC ) ) + ( MUM + RRSe ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( ( ( RMSe + DS ) + Max( RRSe,MLU ) ) + DS ) * ( MUC + DS ) ) ),( MUM - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8682008368200836, "obj2": 0.04394988344250996}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16656327969869783}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( FirstVNF_CPU - BR ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * ( MUC * MUM ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.05794023160596143}, {"determining": "( ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Min( MDR ,Max( FirstVNF_CPU_Server,MRS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( AMS / CRS ) / Const ) ) ) ) + ( ( FirstVNF_CPU - Min( Max( RRS,Min( Const ,ACS ) ) ,BR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( DS / Max( MUR,RCSe ) ) + Max( ( MUR / ( MLU / ( MUC + RCSe ) ) ),Max( MUR,Min( Min( RMSe ,MUR ) ,RMSe ) ) ) ),Min( MUR ,MUM ) ) / DS ) - MUR )", "obj1": 0.9435146443514645, "obj2": 0.01764968789951619}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,DDR ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Min( MUR ,MUR ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.0533001226595241}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( Min( Max( CRS,FirstVNF_Mem_Server ) ,AMS ) * FirstVNF_Mem ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * PN ) ) ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( Min( ( DS * ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) / MUM ) / Max( MUM,( ( MUM * RMSe ) + CS ) ) ) / Min( MUR ,MLU ) ) ) ,( ( MUR + DS ) * ( ( ( ( MUC * MUM ) / Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + ( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.899581589958159, "obj2": 0.0324376663935463}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04212229565990452}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( FirstVNF_CPU - Max( FirstVNF_Mem,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( RMSe * Min( ( DS - MUR ) ,RCSe ) ) ) ,RMSe ) + ( ( ( MUC + RCSe ) + RRSe ) / ( Min( ( MUM * Max( RCSe,RCSe ) ) ,RMSe ) * RMSe ) ) ) / Max( ( ( RMSe + MUR ) / ( RMSe + ( ( CS + RRSe ) * RMSe ) ) ),RRSe ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01569173567425463}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ),MUM ) / DS ) )", "obj1": 0.9853556485355649, "obj2": 0.004648098452518589}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - AMS ) - ( ( RRS - PN ) / Min( Const ,ARS ) ) ) ) / Min( ACS ,Const ) ) * Max( Max( ( PN + FirstVNF_Mem_Server ),ARS ),MRS ) ) ) )", "choosing": "( Min( CS ,( RMSe * Min( Min( Min( DS ,MUM ) ,MUC ) ,Min( MUM ,( RRSe - RRSe ) ) ) ) ) * ( MLU * MUC ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( MUM * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06581590959729476}, {"determining": "( ( Min( BR ,PN ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( ( DS / ( MUM + ( ( ( DS + Min( MUC ,MUC ) ) + RRSe ) * ( MUC * DS ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06441075952037817}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.0596673240547342}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MUM ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09756464396573}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.04579128788143429}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + DS ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.9225941422594143, "obj2": 0.024497488543050876}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( RCSe,Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.12308750262637323}, {"determining": "( ARS - Min( ( ( Max( FirstVNF_CPU_Server,( BR * DDR ) ) / FirstVNF_RAM ) - Const ) ,Const ) )", "choosing": "( ( RMSe / ( ( DS / ( Max( CS,DS ) / CS ) ) * ( ( MUR - Max( CS,RMSe ) ) - MUC ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( CRS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007566247009689113}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03161438452610465}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( MUM + DS ) ,( ( Max( Min( RMSe ,DS ),DS ) + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.022756470523334345}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( DDR + ( ( ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) / ( Min( MRS ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,MUC ) ,( ( MUR + RRSe ) * ( ( Max( Min( RCSe ,MUC ),( MUC * MUM ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( RCSe - DS ) ) ) ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.10120269067059}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( ( MLU * CS ) + ( Max( ( MUC * MUM ),( RCSe / MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.01386140511247736}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - ( ( Max( BR,CRS ) - MRS ) * ARS ) ) ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUC ,( ( MUR + DS ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( ( RMSe + RMSe ),( MUC * RCSe ) ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5690376569037657, "obj2": 0.2751079292420154}, {"determining": "( Max( DDR,BR ) - ( DDR + ( ( ( ( Max( FirstVNF_CPU,( RRS + ARS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) / Max( PN,FirstVNF_Mem_Server ) ) / Min( MRS ,AMS ) ) * ( FirstVNF_Mem + Min( AMS ,PN ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( MUR ,Max( ( MUC * ( RCSe / MUC ) ),MLU ) ) ,MUR ) ) - Min( RMSe ,Max( ( Min( RRSe ,DS ) * MUM ),Max( Max( CS,MUM ),DS ) ) ) ) - ( MUC * MUR ) )", "obj1": 0.6715481171548117, "obj2": 0.14661566518330882}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.026597351387369968}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( RRS - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( ( ( CS / MLU ) - MUM ) + DS ) * Max( MUC,Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.8891213389121339, "obj2": 0.03614665370451128}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( ARS,( PN + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) - CS )", "obj1": 0.9811715481171548, "obj2": 0.006001709126664272}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( CRS,PN ) ) / BR ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( MUM * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06581590959729476}, {"determining": "( ( ( ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Min( ARS ,( FirstVNF_RAM - ( MDR * FirstVNF_Mem ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / ( RCSe + MUM ) ) + RMSe ),Min( MUR ,DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10936046698952841}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( DDR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - ( MUC * MLU ) ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.9351464435146444, "obj2": 0.019720390310075105}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem - ACS ),PN ) - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,CS ) ) ) * ( RCSe / DS ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.040998276493418626}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03720305751693306}, {"determining": "( ( ( Min( CRS ,( ( CRS - PN ) / ( ACS + ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( MLU / MUM ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07177952842547246}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( ( ( DDR + ( ( ( ( FirstVNF_CPU_Server - MRS ) + DDR ) / ( DDR - PN ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU + RMSe ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - CS ),MUM ) / DS ) )", "obj1": 0.9393305439330544, "obj2": 0.0195139502459234}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.06983440771271196}], "26": [{"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ACS * CRS ) - ( ( CRS - PN ) / Min( Const ,Min( ARS ,RRS ) ) ) ) ) ) + Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ),MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + ( DS / Max( MUR,RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ( ( ( ( DDR + BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( ARS / ACS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RRSe ) ) * ( ( MUM + MLU ) / Min( RCSe ,MLU ) ) ) - Max( MUR,( MLU - RRSe ) ) ) ) ) ) - Min( MUC ,MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,Const ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUC / RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.11574149651418066}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( DDR + ( ( ( ( DDR + BR ) - FirstVNF_CPU ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - ( MUC * MLU ) ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.5815899581589958, "obj2": 0.24868409853264986}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,MRS ) ) * ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) ) + DDR ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( ( CS * RMSe ) ,Min( RRSe ,RCSe ) ) + ( MLU - RCSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( DS - ( MUR * RCSe ) ) - MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.27998221556524194}, {"determining": "( ( DDR / ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( Min( FirstVNF_Mem ,( Max( FirstVNF_CPU_Server,AMS ) - CRS ) ) - Const ) ) ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.6506276150627615, "obj2": 0.16164700014928388}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.1748269130110323}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( DDR ,( ( ACS / FirstVNF_RAM ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( Min( CS ,RMSe ) - DS ) ,( RRSe - CS ) ) + Min( RRSe ,( MLU * DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MLU ,RMSe ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08225073036616716}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,( ACS - ARS ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( AMS - FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( DS - Min( MUM ,( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) * ( MUR + Max( RCSe,( MUC + MLU ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / ( PN / FirstVNF_CPU_Server ) ) * Min( ( ( DDR / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Min( ( Max( CS,RCSe ) * MUC ) ,RRSe ) ) ) ) ) * Max( Max( ( MLU / Max( CS,( MLU + ( Min( RRSe ,RRSe ) + ( RMSe + RCSe ) ) ) ) ),MUR ),RRSe ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( CRS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007566247009689113}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ACS - ( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( Min( RCSe ,( ( RMSe * MLU ) - DS ) ) - MLU ) ,( ( ( RRSe + ( MUC + MUR ) ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23776711098977235}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5648535564853556, "obj2": 0.27998221556524194}, {"determining": "( ( ( DDR + BR ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( ( BR * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( Min( MUM ,RMSe ) / ( MLU - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server / MRS ) ) * ACS ) - RRS ),Const ) + Max( ( ( MDR * PN ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),ARS ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * PN ) ),( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( DS / ( ( MUC - ( CS - Min( MUC ,Max( ( CS - MUC ),CS ) ) ) ) + ( Max( ( MUC / ( MUR / MUM ) ),( MUC * MUM ) ) * ( Min( CS ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08537498719300683}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03711637638013346}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16656327969869783}, {"determining": "( ACS - ( DDR + ( ( ( ( FirstVNF_Mem_Server - ( AMS - AMS ) ) + DDR ) / Min( ACS ,Const ) ) - Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( CS + DS ) ) * Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10801381033663585}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,Min( Const ,ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.797071129707113, "obj2": 0.06830773954248012}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( ( ACS + FirstVNF_Mem ) - PN ) / ( Min( MDR ,MRS ) + FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR * DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( ( MUR * MLU ) ,RRSe ) * MLU ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09218847227098735}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Min( ( ( CRS - PN ) / ( ( ( ACS * FirstVNF_RAM ) / ( ( CRS / FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / PN ) ) ,FirstVNF_CPU_Server ) - ( Max( RRS,( Min( MDR ,MRS ) + DDR ) ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Max( ( MUC * MUM ),Min( RCSe ,MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) + RMSe ),CS ) / Min( MUM ,( RCSe - CS ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13364322891909844}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( FirstVNF_CPU - BR ) + AMS ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.0523458238762185}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.026597351387369968}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( AMS + ( FirstVNF_Mem_Server * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( ( ( DS / Max( MUR,RCSe ) ) + RMSe ) / Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( ( RRSe - CS ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( ( ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Min( ARS ,( FirstVNF_RAM - ( MDR * FirstVNF_Mem ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / ( RCSe + MUM ) ) + RMSe ),Min( MUR ,DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10936046698952841}, {"determining": "( Max( DDR,BR ) - ( DDR + ( ( ( ( Max( FirstVNF_CPU,( RRS + ARS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) / Max( PN,FirstVNF_Mem_Server ) ) / Min( MRS ,AMS ) ) * ( FirstVNF_Mem + Min( AMS ,PN ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( MUR ,Max( ( MUC * ( RCSe / MUC ) ),MLU ) ) ,MUR ) ) - Min( RMSe ,Max( ( Min( RRSe ,DS ) * MUM ),Max( Max( CS,MUM ),DS ) ) ) ) - ( MUC * MUR ) )", "obj1": 0.6715481171548117, "obj2": 0.14661566518330882}, {"determining": "( ( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - ( Const + FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUM * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( Min( MUM ,MUC ) + ( Max( RMSe,( MUM - MUC ) ) * RMSe ) ) * Min( ( MLU - MLU ) ,DS ) ) )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( RRS - ( ( ( FirstVNF_RAM_Server - ( AMS * MRS ) ) - CRS ) * ARS ) ) - ( ( ( ( CRS - FirstVNF_Mem ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( ACS,AMS ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) - ( DDR / ACS ) ) )", "choosing": "( CS - ( DS / ( MUM + ( ( ( MLU + RCSe ) + Max( ( MUM + ( DS - RRSe ) ),MUM ) ) * ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.060047779189590755}, {"determining": "( ( MDR - ( Max( MDR,( Const + FirstVNF_CPU_Server ) ) * ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) - ( Min( DDR ,BR ) - ( Min( ACS ,ACS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / ( ( CS * ( Min( Min( DS ,DS ) ,Max( ( RCSe / CS ),Max( RRSe,RCSe ) ) ) / MUC ) ) + ( MUM + RRSe ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( ( ( RMSe + DS ) + Max( RRSe,MLU ) ) + DS ) * ( MUC + DS ) ) ),( MUM - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8682008368200836, "obj2": 0.04394988344250996}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05331001478052397}, {"determining": "( ACS - ( DDR + ( ACS * ( ( ( PN * Min( ( FirstVNF_CPU - ARS ) ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * Max( DS,( MUR + ( MLU - RRSe ) ) ) ) ) / ( Max( Max( ( MUC + MUR ),MLU ),( ( Min( MLU ,MLU ) + RRSe ) - ( Max( MUM,Max( DS,MLU ) ) - MUM ) ) ) * MLU ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16656327969869783}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + ( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.899581589958159, "obj2": 0.0324376663935463}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05459127953993977}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MLU / Min( Max( MUR,MLU ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - Max( RMSe,( RRSe * ( Min( MUM ,( ( DS - RCSe ) * MUC ) ) * ( RMSe * MUM ) ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.01385932882041729}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - Min( ( ( MUC + MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03161438452610465}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( ( ( DDR + ( ( ( ( FirstVNF_CPU_Server - MRS ) + DDR ) / ( DDR - PN ) ) * ACS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MLU + RMSe ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04212229565990452}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ),MUM ) / DS ) )", "obj1": 0.9853556485355649, "obj2": 0.004648098452518589}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07682613533771589}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( ( ( MUR + DS ) * Max( ( ( ( ( MLU / MUM ) - CS ) / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010775011435020345}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.04579128788143429}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( Min( BR ,BR ) - ( ACS * DDR ) ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) * Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( ( Max( Min( Min( CS ,( ( RCSe - CS ) - RRSe ) ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( DS - Min( RRSe ,DS ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03364793170063126}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( RRS - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + ( DS / Max( MUR,RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8891213389121339, "obj2": 0.034952353020734496}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( DDR ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.0652666551648956}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ARS - Min( ( ( Max( FirstVNF_CPU_Server,( BR * DDR ) ) / FirstVNF_RAM ) - Const ) ,Const ) )", "choosing": "( ( RMSe / ( ( DS / ( Max( CS,DS ) / CS ) ) * ( ( MUR - Max( CS,RMSe ) ) - MUC ) ) ) - CS )", "obj1": 0.6359832635983264, "obj2": 0.1724063609676932}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( RMSe / ( ( DS / ( Max( CS,DS ) / CS ) ) * ( ( MUR - Max( CS,RMSe ) ) - MUC ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - Max( Min( BR ,Const ),BR ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - AMS ) ) ) ) ) )", "choosing": "( ( MLU + Min( Max( MUR,MLU ) ,( MLU * CS ) ) ) - Max( RMSe,( RRSe * ( Min( MUM ,( ( DS - RCSe ) * MUC ) ) * ( RMSe * MUM ) ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011366229156499659}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.0596673240547342}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MUM ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09756464396573}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( CS - CS )", "obj1": 0.9811715481171548, "obj2": 0.005665381088274381}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( CS,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - CS ),MUM ) / DS ) )", "obj1": 0.9393305439330544, "obj2": 0.01950118935973972}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.10229039208706762}, {"determining": "( ( ( Min( CRS ,( ( CRS - PN ) / ( ACS + ACS ) ) ) - Max( RRS,PN ) ) / ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( MUM ,RCSe ) + DS ) * Max( ( ( DS / ( MUR - RCSe ) ) + RMSe ),Min( ( MUC / ( MUC / RRSe ) ) ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7824267782426778, "obj2": 0.07436347228073296}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.8305439330543933, "obj2": 0.057409877755499175}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( ( PN - Min( ( Max( RRS,MRS ) - FirstVNF_CPU ) ,Min( BR ,( FirstVNF_Mem_Server + DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( CS - ( RMSe + RCSe ) )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( DDR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( Min( ( RCSe - ( MUC * MLU ) ) ,CS ) + MUR ) ) ) ) - CS )", "obj1": 0.9351464435146444, "obj2": 0.019720390310075105}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem - ACS ),PN ) - PN ) / ( ( Max( FirstVNF_Mem_Server,PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,CS ) ) ) * ( RCSe / DS ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.040998276493418626}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( MUM * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06581590959729476}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( CRS - Max( MDR,DDR ) ) / Min( Const ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( RRS,Max( Max( AMS,AMS ),( FirstVNF_CPU_Server / RRS ) ) ) - ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( Min( ( RMSe / MUM ) ,MUM ) + RCSe ) + ( Min( ( MLU / MUC ) ,RRSe ) / CS ) ) ) * CS ) - DS ) / ( MLU / RMSe ) )", "obj1": 0.7301255230125523, "obj2": 0.10130549732770051}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Min( DDR ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( RCSe - DS ) ) ) ) - CS )", "obj1": 0.8598326359832636, "obj2": 0.047240529169784023}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.10229039208706762}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09218847227098735}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( Min( Max( CRS,FirstVNF_Mem_Server ) ,AMS ) * FirstVNF_Mem ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * PN ) ) ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( Min( ( DS * ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) / MUM ) / Max( MUM,( ( MUM * RMSe ) + CS ) ) ) / Min( MUR ,MLU ) ) ) ,( ( MUR + DS ) * ( ( ( ( MUC * MUM ) / Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}, {"determining": "( ( Min( BR ,PN ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( ( DS / ( MUM + ( ( ( DS + Min( MUC ,MUC ) ) + RRSe ) * ( MUC * DS ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06441075952037817}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( DDR + ( ( ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) / ( Min( MRS ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,MUC ) ,( ( MUR + RRSe ) * ( ( Max( Min( RCSe ,MUC ),( MUC * MUM ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( RCSe - DS ) ) ) ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.10120269067059}], "27": [{"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,MDR ) * ( MDR - ( Const + FirstVNF_CPU ) ) ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( RMSe + MUR ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( Max( MUM,MUR ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RMSe ) ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ACS * CRS ) - ( ( CRS - PN ) / Min( Const ,Min( ARS ,RRS ) ) ) ) ) ) + Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ),MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ( ( ( ( DDR + BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( ARS / ACS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RRSe ) ) * ( ( MUM + MLU ) / Min( RCSe ,MLU ) ) ) - Max( MUR,( MLU - RRSe ) ) ) ) ) ) - Min( MUC ,MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,Const ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUC / RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,MRS ) ) * ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) ) + DDR ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( ( CS * RMSe ) ,Min( RRSe ,RCSe ) ) + ( MLU - RCSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( DS - ( MUR * RCSe ) ) - MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.27998221556524194}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) * FirstVNF_Mem_Server ) - ( CRS / ( Const + FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * ( Min( CS ,MUC ) / ( ( ( CS + RRSe ) - ( CS + DS ) ) / Max( ( Max( DS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5983263598326359, "obj2": 0.22164449066563097}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( DDR ,( ( ACS / FirstVNF_RAM ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( Min( CS ,RMSe ) - DS ) ,( RRSe - CS ) ) + Min( RRSe ,( MLU * DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MLU ,RMSe ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08225073036616716}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.11574149651418066}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MRS - ( Max( ( MDR - ( Max( RRS,RRS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Max( RCSe,MLU ) + Max( MUC,( Max( MUM,MLU ) + ( DS + RRSe ) ) ) ) * ( MUC * MUM ) ) ) ) - Min( MUC ,( RCSe / DS ) ) )", "obj1": 0.9497907949790795, "obj2": 0.015915826545427652}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ACS - ( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( Min( RCSe ,( ( RMSe * MLU ) - DS ) ) - MLU ) ,( ( ( RRSe + ( MUC + MUR ) ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23776711098977235}, {"determining": "( ( DDR / ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( Min( FirstVNF_Mem ,( Max( FirstVNF_CPU_Server,AMS ) - CRS ) ) - Const ) ) ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.6506276150627615, "obj2": 0.16164700014928388}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( CS,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - CS ),MUM ) / DS ) )", "obj1": 0.9393305439330544, "obj2": 0.01950118935973972}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * MUR ) )", "obj1": 0.5648535564853556, "obj2": 0.27998221556524194}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server / MRS ) ) * ACS ) - RRS ),Const ) + Max( ( ( MDR * PN ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),ARS ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * PN ) ),( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( DS / ( ( MUC - ( CS - Min( MUC ,Max( ( CS - MUC ),CS ) ) ) ) + ( Max( ( MUC / ( MUR / MUM ) ),( MUC * MUM ) ) * ( Min( CS ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08537498719300683}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + AMS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( ( ( MUR + DS ) * Max( ( ( ( ( MLU / MUM ) - CS ) / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010769200616687144}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( DDR + Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - ACS )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * Max( MLU,RCSe ) ) ) ) - DS )", "obj1": 0.6338912133891214, "obj2": 0.1748269130110323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03711637638013346}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ACS - Max( ( Max( DDR,FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( RCSe / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9225941422594143, "obj2": 0.02556455527008261}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( FirstVNF_CPU ,ACS ) ) ) ) - ( ( DDR - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) - MDR ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Max( RMSe,CS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8472803347280334, "obj2": 0.05042699218562567}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.11574149651418066}, {"determining": "( ( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - ( Const + FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MLU * MUM ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( MUR * DS ) )", "obj1": 0.6548117154811716, "obj2": 0.1612897874279657}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( ( ACS + FirstVNF_Mem ) - PN ) / ( Min( MDR ,MRS ) + FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR * DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( ( MUR * MLU ) ,RRSe ) * MLU ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09218847227098735}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Min( ( ( CRS - PN ) / ( ( ( ACS * FirstVNF_RAM ) / ( ( CRS / FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / PN ) ) ,FirstVNF_CPU_Server ) - ( Max( RRS,( Min( MDR ,MRS ) + DDR ) ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Max( ( MUC * MUM ),Min( RCSe ,MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) + RMSe ),CS ) / Min( MUM ,( RCSe - CS ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13364322891909844}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16656327969869783}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUC * MUM ),( MUC / ( MUR / MUM ) ) ) * ( Min( RRSe ,DS ) - DS ) ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.1711989547535059}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.053018791343003226}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( Max( DDR,BR ) - ( DDR + ( ( ( ( Max( FirstVNF_CPU,( RRS + ARS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) / Max( PN,FirstVNF_Mem_Server ) ) / Min( MRS ,AMS ) ) * ( FirstVNF_Mem + Min( AMS ,PN ) ) ) ) )", "choosing": "( ( ( MUC + Min( Min( MUR ,Max( ( MUC * ( RCSe / MUC ) ),MLU ) ) ,MUR ) ) - Min( RMSe ,Max( ( Min( RRSe ,DS ) * MUM ),Max( Max( CS,MUM ),DS ) ) ) ) - ( MUC * MUR ) )", "obj1": 0.6715481171548117, "obj2": 0.14661566518330882}, {"determining": "( ( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - ( Const + FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUM * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( Min( MUM ,MUC ) + ( Max( RMSe,( MUM - MUC ) ) * RMSe ) ) * Min( ( MLU - MLU ) ,DS ) ) )", "obj1": 0.6861924686192469, "obj2": 0.13306276203543904}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( Min( DDR ,BR ) - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + ( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.899581589958159, "obj2": 0.0324376663935463}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.01383724641947919}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.026597351387369968}, {"determining": "( ( Min( BR ,PN ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( ( DS / ( MUM + ( ( ( DS + Min( MUC ,MUC ) ) + RRSe ) * ( MUC * DS ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06441075952037817}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03161438452610465}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04212229565990452}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( ( FirstVNF_RAM_Server + AMS ) ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( RCSe + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.05466022106855029}, {"determining": "( ACS - ( DDR + ( ( ( ( FirstVNF_Mem_Server - ( AMS - AMS ) ) + DDR ) / Min( ACS ,Const ) ) - Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( CS + DS ) ) * Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( DDR + BR ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( ( BR * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( Min( MUM ,RMSe ) / ( MLU - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07682613533771589}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( Min( Max( CRS,FirstVNF_Mem_Server ) ,AMS ) * FirstVNF_Mem ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * PN ) ) ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( Min( ( DS * ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) / MUM ) / Max( MUM,( ( MUM * RMSe ) + CS ) ) ) / Min( MUR ,MLU ) ) ) ,( ( MUR + DS ) * ( ( ( ( MUC * MUM ) / Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16656327969869783}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( RRS - ( ( ( FirstVNF_RAM_Server - ( AMS * MRS ) ) - CRS ) * ARS ) ) - ( ( ( ( CRS - FirstVNF_Mem ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( ACS,AMS ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) - ( DDR / ACS ) ) )", "choosing": "( CS - ( DS / ( MUM + ( ( ( MLU + RCSe ) + Max( ( MUM + ( DS - RRSe ) ),MUM ) ) * ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.060047779189590755}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.04579128788143429}, {"determining": "( ( Min( BR ,BR ) - ( ACS * DDR ) ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) * Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( ( Max( Min( Min( CS ,( ( RCSe - CS ) - RRSe ) ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( DS - Min( RRSe ,DS ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03364793170063126}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( CRS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007566247009689113}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + ( DS / Max( MUR,RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.05867608641905234}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( DDR ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.0652666551648956}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,( ACS - ARS ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( AMS - FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( DS - Min( MUM ,( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) * ( MUR + Max( RCSe,( MUC + MLU ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUR * MUM ) ) ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.0209860242422327}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( MUM * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06581590959729476}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( DDR ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.801255230125523, "obj2": 0.06778192726649757}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( DDR + ( ( ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) / ( Min( MRS ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,MUC ) ,( ( MUR + RRSe ) * ( ( Max( Min( RCSe ,MUC ),( MUC * MUM ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( RCSe - DS ) ) ) ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.10120269067059}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( RRS - PN ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( CS - CS )", "obj1": 0.9811715481171548, "obj2": 0.005665381088274381}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ),MUM ) / DS ) )", "obj1": 0.9853556485355649, "obj2": 0.004648098452518589}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + AMS ) ) ) ) ) )", "choosing": "( ( MLU / Min( Max( MUR,MLU ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - Max( RMSe,( RRSe * ( Min( MUM ,( ( ( MUM + RCSe ) - RCSe ) * MUC ) ) * ( RMSe * MUM ) ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.0072416629313255204}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,Min( Const ,ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.797071129707113, "obj2": 0.06830773954248012}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8682008368200836, "obj2": 0.04394988344250996}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( AMS + ( FirstVNF_Mem_Server * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( ( ( DS / Max( MUR,RCSe ) ) + RMSe ) / Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( ( RRSe - CS ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,Min( Const ,ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.797071129707113, "obj2": 0.06830773954248012}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7824267782426778, "obj2": 0.07409564280906646}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( PN - Min( ( Max( RRS,MRS ) - FirstVNF_CPU ) ,Min( BR ,( FirstVNF_Mem_Server + DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( CS - ( RMSe + RCSe ) )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10936046698952841}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( Max( ( DDR - MRS ),ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( MRS / FirstVNF_Mem ) * FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) - FirstVNF_Mem ) ,Const ) ) ) ) )", "choosing": "( ( RMSe / ( ( DS / ( Max( CS,DS ) / CS ) ) * ( ( MUR - Max( CS,RMSe ) ) - MUC ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}], "28": [{"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + ( DS / Max( MUR,RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * MUC ) * Max( ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( Max( FirstVNF_Mem_Server,MDR ) * ( MDR - ( Const + FirstVNF_CPU ) ) ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( RMSe + MUR ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( Max( MUM,MUR ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RMSe ) ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ( ( ( ( DDR + BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( ARS / ACS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RRSe ) ) * ( ( MUM + MLU ) / Min( RCSe ,MLU ) ) ) - Max( MUR,( MLU - RRSe ) ) ) ) ) ) - Min( MUC ,MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - Max( Min( AMS ,PN ),PN ) ) )", "choosing": "( CS - ( MUC / MLU ) )", "obj1": 0.6903765690376569, "obj2": 0.1283715817722629}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) * FirstVNF_Mem_Server ) - ( CRS / ( Const + FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * ( Min( CS ,MUC ) / ( ( ( CS + RRSe ) - ( CS + DS ) ) / Max( ( Max( DS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5983263598326359, "obj2": 0.22164449066563097}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( ( ACS + FirstVNF_Mem ) - PN ) / ( Min( MDR ,MRS ) + FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / Min( MUM ,( ( MUR * DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( ( MUR * MLU ) ,RRSe ) * MLU ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.09218847227098735}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.11574149651418066}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ACS - ( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( Min( RCSe ,( ( RMSe * MLU ) - DS ) ) - MLU ) ,( ( ( RRSe + ( MUC + MUR ) ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( RMSe * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23776711098977235}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.1748269130110323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( Min( Max( CRS,FirstVNF_Mem_Server ) ,AMS ) * FirstVNF_Mem ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * PN ) ) ) - FirstVNF_CPU ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( Min( ( DS * ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) / MUM ) / Max( MUM,( ( MUM * RMSe ) + CS ) ) ) / Min( MUR ,MLU ) ) ) ,( ( MUR + DS ) * ( ( ( ( MUC * MUM ) / Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09590001146494194}, {"determining": "( ( BR / FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( Min( ( RRSe - MLU ) ,Max( MUM,MUC ) ) ,MLU ) - MUC ) * ( MUC * MUM ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9497907949790795, "obj2": 0.015819241962501184}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,Const ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUC / RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR + ( ( ( CRS - ( DDR * FirstVNF_Mem_Server ) ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / ( RRSe + Min( RMSe ,( Max( MUR,MLU ) * ( RMSe / MLU ) ) ) ) ) - MUR ) - Max( MUM,MUR ) ) / Max( RMSe,Min( MLU ,RRSe ) ) )", "obj1": 0.7196652719665272, "obj2": 0.10526142472070063}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( ( CRS / FirstVNF_CPU_Server ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( ( MUM * RRSe ) + CS ) ) / Max( ( ( MUC - RMSe ) * CS ),( Max( CS,RCSe ) * MUC ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( FirstVNF_CPU - BR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04212229565990452}, {"determining": "( ( ACS - Max( ( Max( DDR,FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( RMSe ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RCSe - Max( ( RRSe * MUC ),MLU ) ) ) ) ) ) - CS )", "obj1": 0.9225941422594143, "obj2": 0.025402668600969777}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( FirstVNF_CPU ,ACS ) ) ) ) - ( ( DDR - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) - MDR ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Max( RMSe,CS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8472803347280334, "obj2": 0.05042699218562567}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( DDR / ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( Min( FirstVNF_Mem ,( Max( FirstVNF_CPU_Server,AMS ) - CRS ) ) - Const ) ) ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.6506276150627615, "obj2": 0.16164700014928388}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) - DS ) ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.018411198537252066}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Max( ( PN / ACS ),CRS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( Min( DDR ,RRS ) - ( Max( Max( RRS,Const ),AMS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MLU + RMSe ),CS ) / ( ( Max( ( ( ( CS / MLU ) / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) * ( Min( Min( ( DS * CS ) ,Max( DS,MUR ) ) ,Min( MUM ,MUC ) ) + DS ) ) * Max( Min( MUR ,RMSe ),( MUC + DS ) ) ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010132747419187474}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6610878661087866, "obj2": 0.15481206332136524}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server / MRS ) ) * ACS ) - RRS ),Const ) + Max( ( ( MDR * PN ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),ARS ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * PN ) ),( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( DS / ( ( MUC - ( CS - Min( MUC ,Max( ( CS - MUC ),CS ) ) ) ) + ( Max( ( MUC / ( MUR / MUM ) ),( MUC * MUM ) ) * ( Min( CS ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08537498719300683}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( CRS,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) / Min( ( Min( RRSe ,DS ) - DS ) ,( ( MUR + DS ) * ( MUR + MUR ) ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007566247009689113}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.053018791343003226}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8682008368200836, "obj2": 0.04394988344250996}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( DDR + ( ( ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) / ( Min( MRS ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,MUC ) ,( ( MUR + RRSe ) * ( ( Max( Min( RCSe ,MUC ),( MUC * MUM ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( RCSe - DS ) ) ) ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.10120269067059}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.026597351387369968}, {"determining": "( ( DDR + BR ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUR ,RMSe ),( ( DS / Max( MUR,RCSe ) ) + ( ( CS - MUC ) * Max( RCSe,( RCSe / DS ) ) ) ) ) ) ) - CS )", "obj1": 0.899581589958159, "obj2": 0.032431855575213095}, {"determining": "( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( DDR - PN ) / Min( Const ,ACS ) ) ) ) - ( ( ( ( ( ACS - ( ( AMS - FirstVNF_RAM_Server ) + ( DDR - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_Mem_Server ) ) - Max( ACS,( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU_Server ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_RAM_Server ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( Max( ( RMSe / RMSe ),MUM ) + MUM ),Max( ( MUC * MUR ),Min( RCSe ,RCSe ) ) ) / ( RMSe * Min( RMSe ,CS ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.05824297568342794}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - Max( PN,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( Max( RRSe,DS ) * Max( ( RRSe + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7677824267782427, "obj2": 0.08260400149576586}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU ) - ( Max( ( ( CRS - ( Const + FirstVNF_Mem ) ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / PN ) ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MLU * MUM ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( MUR * DS ) )", "obj1": 0.6548117154811716, "obj2": 0.1612897874279657}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem - BR ) - PN ) / ( FirstVNF_RAM_Server * Const ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUC + RMSe ),CS ) / ( ( MUM + DS ) / Min( Max( MUR,( MUM / Max( ( MUR / MUC ),( RMSe * RMSe ) ) ) ) ,( ( RMSe / RRSe ) - MUM ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.06935923761307734}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03711637638013346}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( RRS - ( ( ( FirstVNF_RAM_Server - ( AMS * MRS ) ) - CRS ) * ARS ) ) - ( ( ( ( CRS - FirstVNF_Mem ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( ACS,AMS ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) - ( DDR / ACS ) ) )", "choosing": "( CS - ( DS / ( MUM + ( ( ( MLU + RCSe ) + Max( ( MUM + ( DS - RRSe ) ),MUM ) ) * ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.060047779189590755}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( DDR + BR ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( ( BR * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( Min( MUM ,RMSe ) / ( MLU - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( Min( BR ,PN ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( ( DS / ( MUM + ( ( ( DS + Min( MUC ,MUC ) ) + RRSe ) * ( MUC * DS ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06441075952037817}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.056021182246676675}, {"determining": "( ( DDR + Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - ACS )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * Max( MLU,RCSe ) ) ) ) - DS )", "obj1": 0.6338912133891214, "obj2": 0.1748269130110323}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ),MUM ) / DS ) )", "obj1": 0.9853556485355649, "obj2": 0.004648098452518589}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,( ACS - ARS ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( AMS - FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( DS - Min( MUM ,( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) * ( MUR + Max( RCSe,( MUC + MLU ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.11574149651418066}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.04579128788143429}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03656601355230046}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,( Const + ( FirstVNF_RAM_Server / PN ) ) ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR - RMSe ),CS ) / ( MUM * ( RMSe + MUM ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.0646764589825808}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUR ) * MUC ),RRSe ) ) ) ) / ( MUM + ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7845188284518828, "obj2": 0.07388310393995752}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Max( BR,MDR ) / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( CRS - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe / ( Max( Max( ( ( MUC + MUC ) + RRSe ),CS ),CS ) - RCSe ) ) * ( MLU + DS ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( RRSe / ( Min( ( ( RCSe + RMSe ) - RMSe ) ,CS ) - MUM ) ) ) - CS ) / Min( ( RCSe * MUM ) ,( MLU / Max( Max( RCSe,( ( MUR + MUM ) * RRSe ) ),Min( RRSe ,MLU ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.03161438452610465}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( CRS ,FirstVNF_Mem_Server ) ) - ( PN + ACS ) ) - Min( ( ( MDR - Min( ( FirstVNF_RAM * DDR ) ,( CRS + BR ) ) ) / BR ) ,( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,MUR ) / ( ( ( ( ( ( ( MLU * MUR ) / ( MUC * MUR ) ) + ( MLU / RMSe ) ) + ( ( ( CS - MUC ) - ( MUM + DS ) ) + MUR ) ) + MUM ) + ( ( Max( MUC,( DS * RMSe ) ) - CS ) / RCSe ) ) / MUR ) )", "obj1": 0.9895397489539749, "obj2": 0.003132928156336368}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( ( ( MDR * Min( Const ,ACS ) ) / Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ,( RMSe / MUC ) ) / Min( ( ( MUR + DS ) * Max( ( ( ( ( DS / MUM ) - CS ) / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.99581589958159, "obj2": 0.0012613198123804944}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUC * MUM ),( MUC / ( MUR / MUM ) ) ) * ( Min( RRSe ,DS ) - DS ) ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9623430962343096, "obj2": 0.01139005286602982}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.05925652162589873}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7824267782426778, "obj2": 0.07409564280906646}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( DDR ,( ( ACS / FirstVNF_RAM ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( Min( CS ,RMSe ) - DS ) ,( RRSe - CS ) ) + Min( RRSe ,( MLU * DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MLU ,RMSe ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08225073036616716}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( RRS,FirstVNF_Mem_Server ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( CS,Min( DS ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - CS ),MUM ) / DS ) )", "obj1": 0.9351464435146444, "obj2": 0.020020423168853364}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( Min( MLU ,RRSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7071129707112971, "obj2": 0.11082228729480008}, {"determining": "( ( Min( ARS ,BR ) - Min( CRS ,ARS ) ) - ( Max( ( ( FirstVNF_Mem_Server / MRS ) / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + PN ) / FirstVNF_RAM_Server ) ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( RRSe + RMSe ),CS ) / ( ( MUM / MLU ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( RMSe ,MUR ) ) ) ) - Min( ( ( MUC + MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06207249051705923}], "29": [{"determining": "( Max( ( PN - ACS ),CRS ) - ( ( Min( Const ,DDR ) / ( ACS + MRS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / CS ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( ( RRSe - ( MUC * RCSe ) ) + ( MLU - RRSe ) ) ) ) ) ) - ( Max( ( Max( RMSe,CS ) - ( CS + Max( ( ( RRSe - RCSe ) / RCSe ),RRSe ) ) ),( RMSe - Max( RCSe,RRSe ) ) ) - MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( ( ( ( MDR * Min( Const ,( ACS - ARS ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + MUC ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + ( DS / Max( MUR,RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * MUC ) * Max( ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ( ( ( ( DDR + BR ) - ( FirstVNF_CPU_Server + DDR ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( ARS / ACS ) ) + DDR ) )", "choosing": "( ( DS / Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RRSe ) ) * ( ( MUM + MLU ) / Min( RCSe ,MLU ) ) ) - Max( MUR,( MLU - RRSe ) ) ) ) ) ) - Min( MUC ,MLU ) )", "obj1": 0.5564853556485355, "obj2": 0.29056706785004244}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) * FirstVNF_Mem_Server ) - ( CRS / ( Const + FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * ( Min( CS ,MUC ) / ( ( ( CS + RRSe ) - ( CS + DS ) ) / Max( ( Max( DS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5983263598326359, "obj2": 0.22164449066563097}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03638887607345996}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.053018791343003226}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( CRS + ( Const - Max( MDR,AMS ) ) ) ) / Min( Const ,ACS ) ) * Min( ( ( FirstVNF_RAM / Min( DDR ,DDR ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( Min( MUM ,( RCSe / RCSe ) ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( RCSe,CS ) * MUC ),RRSe ) ) ) ) ) * ( MUC / MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23153639332429438}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,Const ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUC / RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( DDR + ( ( ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) / ( Min( MRS ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,MUC ) ,( ( MUR + RRSe ) * ( ( Max( Min( RCSe ,MUC ),( MUC * MUM ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( RCSe - DS ) ) ) ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.10120269067059}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.11574149651418066}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem - BR ) - PN ) / ( FirstVNF_RAM_Server * Const ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUC + RMSe ),CS ) / ( ( MUM + DS ) / Min( Max( MUR,( MUM / Max( ( MUR / MUC ),( RMSe * RMSe ) ) ) ) ,( ( RMSe / RRSe ) - MUM ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.06935923761307734}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( FirstVNF_CPU ,ACS ) ) ) ) - ( ( DDR - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) - MDR ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,RMSe ) ) * Max( Max( RMSe,CS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8472803347280334, "obj2": 0.05042699218562567}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( DDR + BR ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( ( BR * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( Min( MUM ,RMSe ) / ( MLU - MUM ) ) ) - CS ) / Min( ( Max( ( Max( MUM,RCSe ) / RRSe ),Min( RRSe ,MLU ) ) * MUM ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) )", "obj1": 0.6757322175732218, "obj2": 0.14314522882760836}, {"determining": "( ( BR / FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( Min( Min( ( RRSe - MLU ) ,Max( MUM,MUC ) ) ,MLU ) - MUC ) * ( MUC * MUM ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9497907949790795, "obj2": 0.015819241962501184}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,( Const + ( FirstVNF_RAM_Server / PN ) ) ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR - RMSe ),CS ) / ( MUM * ( RMSe + MUM ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.0646764589825808}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( DDR - FirstVNF_CPU_Server ) + ( ( ACS / ( MRS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MLU * RRSe ),Min( RCSe ,MUC ) ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) - ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server / MRS ) ) * ACS ) - RRS ),Const ) + Max( ( ( MDR * PN ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),ARS ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * PN ) ),( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( DS / ( ( MUC - ( CS - Min( MUC ,Max( ( CS - MUC ),CS ) ) ) ) + ( Max( ( MUC / ( MUR / MUM ) ),( MUC * MUM ) ) * ( Min( CS ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08537498719300683}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.00645166925248301}, {"determining": "( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( DDR - PN ) / Min( Const ,ACS ) ) ) ) - ( ( ( ( ( ACS - ( ( AMS - FirstVNF_RAM_Server ) + ( DDR - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_Mem_Server ) ) - Max( ACS,( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU_Server ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_RAM_Server ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( Max( ( RMSe / RMSe ),MUM ) + MUM ),Max( ( MUC * MUR ),Min( RCSe ,RCSe ) ) ) / ( RMSe * Min( RMSe ,CS ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06887341335924357}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,MDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - Max( DDR,PN ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( MUM - ( MUR * RCSe ) ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR * DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7824267782426778, "obj2": 0.07385296564980465}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MDR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( MUR + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,MLU ) ) ),RRSe ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08832490802165831}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( FirstVNF_Mem / ( Min( DDR ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( DS / Max( MUR,RCSe ) ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.015439245012664506}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - Max( PN,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( Max( RRSe,DS ) * Max( ( RRSe + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7677824267782427, "obj2": 0.08260400149576586}, {"determining": "( ( Min( RRS ,FirstVNF_CPU ) - ( Const * Const ) ) - ( MDR * ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + ( ( MUC * DS ) - ( MLU - RCSe ) ) ),Min( MUR ,RMSe ) ) ) * Max( ( ( RRSe / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) / Max( MUC,Max( MUC,( MUR - CS ) ) ) ) - CS )", "obj1": 0.7510460251046025, "obj2": 0.09158057008623005}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / DDR ) - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / ( ( Const + FirstVNF_RAM ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,( ( ( MLU + DS ) * Max( MUR,RMSe ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) - DS ) ) - ( MUM + ( RRSe / Max( MLU,( MLU * Min( MUM ,( RCSe + MLU ) ) ) ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.055807863539031624}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( ( CRS / FirstVNF_CPU_Server ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( ( MUM * RRSe ) + CS ) ) / Max( ( ( MUC - RMSe ) * CS ),( Max( CS,RCSe ) * MUC ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - CRS ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ),MUM ) / DS ) )", "obj1": 0.9853556485355649, "obj2": 0.004648098452518589}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( RRS,FirstVNF_Mem_Server ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( CS,Min( DS ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ) ) - ( Max( ( MLU - CS ),MUM ) / DS ) )", "obj1": 0.9351464435146444, "obj2": 0.020020423168853364}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + DDR ) ) + ( Max( ARS,ACS ) / FirstVNF_RAM ) ) - ( MDR - ( ARS * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,( RCSe - Max( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( ( CS / RCSe ) ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( Min( BR ,PN ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( ( DS / ( MUM + ( ( ( DS + Min( MUC ,MUC ) ) + RRSe ) * ( MUC * DS ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06441075952037817}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) - DS ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.01747627791687192}, {"determining": "( ( Min( Min( DDR ,( ARS - Min( FirstVNF_RAM_Server ,BR ) ) ) ,( DDR + ( ( Max( ( PN - ACS ),CRS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,Min( MUM ,MUC ) ) + RCSe ) * ( Min( MUM ,( Min( RMSe ,RCSe ) - ( DS / RRSe ) ) ) * MLU ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.01009962381778032}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( DS / Max( MUR,RCSe ) ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09326416620996267}, {"determining": "( ( Min( DDR ,( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( MLU / ( Max( CS,RCSe ) * MUC ) ) - CS )", "obj1": 0.9707112970711297, "obj2": 0.00880931693463114}, {"determining": "( ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + ( MRS - FirstVNF_RAM_Server ) ) ) * CRS ) ) - ACS )", "choosing": "( ( DS / Min( MUM ,( ( MUR + Min( ( MUR - DS ) ,( Min( MUR ,RRSe ) - ( MUC - RMSe ) ) ) ) * ( ( ( ( MLU / MLU ) + ( MUM - RRSe ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6610878661087866, "obj2": 0.15481206332136524}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.11574149651418066}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem_Server * BR ) - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03405394792207808}, {"determining": "( ( RRS - ( ( ( FirstVNF_RAM_Server - ( AMS * MRS ) ) - CRS ) * ARS ) ) - ( ( ( ( CRS - FirstVNF_Mem ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( ACS,AMS ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) - ( DDR / ACS ) ) )", "choosing": "( CS - ( DS / ( MUM + ( ( ( MLU + RCSe ) + Max( ( MUM + ( DS - RRSe ) ),MUM ) ) * ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.060047779189590755}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10982124307799476}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( Max( Min( RMSe ,DS ),DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.07965053384275833}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( ( ( FirstVNF_RAM * PN ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) / FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( DS * MUC ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( DDR + BR ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * RMSe ) ) ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUR ,RMSe ),( ( DS / Max( MUR,RCSe ) ) + ( ( CS - MUC ) * Max( RCSe,( RCSe / DS ) ) ) ) ) ) ) - CS )", "obj1": 0.899581589958159, "obj2": 0.032431855575213095}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) - DS ) ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.018411198537252066}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( ( DDR + ( ( ARS - MDR ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Max( CRS,PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( MUC * MUR ),Min( RCSe ,MUR ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU - CS ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.059083192144327674}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.056021182246676675}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Max( BR,MDR ) / ( FirstVNF_CPU / FirstVNF_RAM ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( CRS - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe / ( Max( Max( ( ( MUC + MUC ) + RRSe ),CS ),CS ) - RCSe ) ) * ( MLU + DS ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_RAM ) - Max( Const,AMS ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * ( ( RRSe + MUR ) / Max( MUC,DS ) ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.057850987043458556}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( ( ACS - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUC * MUM ),( MUC / ( MUR / MUM ) ) ) * ( Min( RRSe ,DS ) - DS ) ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9623430962343096, "obj2": 0.01139005286602982}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.04371361674819254}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.01961978744864846}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM - FirstVNF_RAM ) + MDR ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( RMSe / ( Min( CS ,RRSe ) + RRSe ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - Min( ( ( MUC + MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.0579522307412696}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( DDR ,( ( ACS / FirstVNF_RAM ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( Min( CS ,RMSe ) - DS ) ,( RRSe - CS ) ) + Min( RRSe ,( MLU * DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MLU ,RMSe ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08225073036616716}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.04158991107868265}], "30": [{"determining": "( ( FirstVNF_CPU - Min( ( ( FirstVNF_CPU_Server + RRS ) * ( ACS - BR ) ) ,BR ) ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR + RRS ) ) / ( AMS / Min( PN ,MDR ) ) ) + DDR ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Max( MUC,( ( MUM + MUM ) * MLU ) ),Max( MUC,Min( MUC ,MUM ) ) ) + DS ) ) + Min( MLU ,MLU ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MDR * Min( Const ,( ACS - ARS ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + MUC ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2818523314743087}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) / Min( CRS ,Const ) ) * Min( ( RRS - ( FirstVNF_RAM / ( DDR - PN ) ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( MUM / ( MUC + Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,MUM ) + DS ) * Min( ( ( DS / Max( MUR,MUM ) ) + RMSe ) ,Min( MUR ,RMSe ) ) ) * Max( ( Max( MUM,RCSe ) / ( MLU + Min( RMSe ,( MLU / DS ) ) ) ),Min( MUR ,RMSe ) ) ) / Max( MUC,CS ) ) - CS )", "obj1": 0.698744769874477, "obj2": 0.11796157441415812}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.12654245322325838}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( ( Max( Min( DDR ,( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02631439315553501}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( CRS + ( Const - Max( MDR,AMS ) ) ) ) / Min( Const ,ACS ) ) * Min( ( ( FirstVNF_RAM / Min( DDR ,DDR ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( Min( MUM ,( RCSe / RCSe ) ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( RCSe,CS ) * MUC ),RRSe ) ) ) ) ) * ( MUC / MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23153639332429438}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( ( CRS / FirstVNF_CPU_Server ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( ( MUM * RRSe ) + CS ) ) / Max( ( ( MUC - RMSe ) * CS ),( Max( CS,RCSe ) * MUC ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM - FirstVNF_RAM ) + MDR ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( RMSe / ( Min( CS ,RRSe ) + RRSe ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ( Max( PN,AMS ) / MRS ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( ( Max( MUM,MUC ) - MUM ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.09954617101127579}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem - BR ) - PN ) / ( FirstVNF_RAM_Server * Const ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUC + RMSe ),CS ) / ( ( MUM + DS ) / Min( Max( MUR,( MUM / Max( ( MUR / MUC ),( RMSe * RMSe ) ) ) ) ,( ( RMSe / RRSe ) - MUM ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.06935923761307734}, {"determining": "( ( Min( DDR ,( DDR * ( ( DDR - ARS ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( Max( ( MUC * MUM ),( RCSe - MUC ) ) * ( RCSe * RRSe ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9707112970711297, "obj2": 0.008781423715359834}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.053018791343003226}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6882845188284519, "obj2": 0.13033512546070206}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,Const ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUC / RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( FirstVNF_Mem_Server + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUM ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - CRS ) / ( ( ( MDR * ACS ) / Max( PN,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * RMSe ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.14296749974363118}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6610878661087866, "obj2": 0.15481206332136524}, {"determining": "( ( Min( BR ,PN ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS + FirstVNF_RAM ) )", "choosing": "( ( DS / ( MUM + ( ( ( DS + Min( MUC ,MUC ) ) + RRSe ) * ( MUC * DS ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.8117154811715481, "obj2": 0.06441075952037817}, {"determining": "( ( Const - ( ACS + ( MDR / ( FirstVNF_CPU_Server + RRS ) ) ) ) - Max( MDR,( ( ( CRS - FirstVNF_Mem ) / Min( MDR ,Const ) ) - Max( RRS,( Const * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,( MUR + Max( MLU,DS ) ) ) ,( ( Max( RMSe,RMSe ) - Max( DS,CS ) ) - ( MUC / MUC ) ) ) ) * ( ( ( ( ( MLU + ( DS / MLU ) ) + DS ) + RCSe ) / ( RCSe / ( MLU * ( MUR * ( MUC / RCSe ) ) ) ) ) * MUR ) ) * ( MUR + MLU ) )", "obj1": 0.8179916317991632, "obj2": 0.06158238947769655}, {"determining": "( ( DDR + ( Const + ARS ) ) - ACS )", "choosing": "( ( CS * ( Min( Min( CS ,RCSe ) ,( MUC + ( MUM + MUR ) ) ) * RMSe ) ) * ( MUC * ( DS - RRSe ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.04139316308184732}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.02321837216762918}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( DDR - PN ) / Min( Const ,ACS ) ) ) ) - ( ( ( ( ( ACS - ( ( AMS - FirstVNF_RAM_Server ) + ( DDR - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_Mem_Server ) ) - Max( ACS,( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU_Server ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_RAM_Server ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( Max( ( RMSe / RMSe ),MUM ) + MUM ),Max( ( MUC * MUR ),Min( RCSe ,RCSe ) ) ) / ( RMSe * Min( RMSe ,CS ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06887341335924357}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03638887607345996}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server / MRS ) ) * ACS ) - RRS ),Const ) + Max( ( ( MDR * PN ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),ARS ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * PN ) ),( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( DS / ( ( MUC - ( CS - Min( MUC ,Max( ( CS - MUC ),CS ) ) ) ) + ( Max( ( MUC / ( MUR / MUM ) ),( MUC * MUM ) ) * ( Min( CS ,DS ) - DS ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08537498719300683}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( FirstVNF_Mem / ( Min( DDR ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( DS / Max( MUR,RCSe ) ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.015439245012664506}, {"determining": "( ( Min( RRS ,FirstVNF_CPU ) - ( Const * Const ) ) - ( MDR * ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + ( ( MUC * DS ) - ( MLU - RCSe ) ) ),Min( MUR ,RMSe ) ) ) * Max( ( ( RRSe / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) / Max( MUC,Max( MUC,( MUR - CS ) ) ) ) - CS )", "obj1": 0.7510460251046025, "obj2": 0.09158057008623005}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / DDR ) - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / ( ( Const + FirstVNF_RAM ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,( ( ( MLU + DS ) * Max( MUR,RMSe ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) - DS ) ) - ( MUM + ( RRSe / Max( MLU,( MLU * Min( MUM ,( RCSe + MLU ) ) ) ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.055807863539031624}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( RRS,FirstVNF_Mem_Server ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9351464435146444, "obj2": 0.019720390310075105}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) - DS ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.01747627791687192}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( MUM + DS ) / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * ( MUC * MUM ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9895397489539749, "obj2": 0.003530307688511287}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.04371361674819254}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10982124307799476}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( AMS - PN ) / Min( Const ,( Min( ( RRS * FirstVNF_Mem ) ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / CS ) ) / Min( ( RRSe + RMSe ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.04371361674819254}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( DDR ,( ( ACS / FirstVNF_RAM ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( Min( CS ,RMSe ) - DS ) ,( RRSe - CS ) ) + Min( RRSe ,( MLU * DS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MLU ,RMSe ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08225073036616716}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( ( DDR - ( ( ACS - ( ACS + ( AMS - FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.06704369429013053}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,( Const + ( FirstVNF_RAM_Server / PN ) ) ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR - RMSe ),CS ) / ( MUM * ( RMSe + MUM ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.0646764589825808}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,MUC ) ,( ( MUR + RRSe ) * ( ( Max( Min( RCSe ,MUC ),( MUC * MUM ) ) * ( Min( RRSe ,DS ) - DS ) ) - ( RCSe - DS ) ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050858436148051356}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ( DDR - RRS ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,( ( ( MLU + DS ) * ( RMSe / MUR ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) - DS ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03600710356099832}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.0579522307412696}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + DDR ) ) + ( Max( ARS,ACS ) / FirstVNF_RAM ) ) - ( MDR - ( ARS * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,( RCSe - Max( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( ( CS / RCSe ) ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( ( DDR + ( ( ARS - MDR ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Max( CRS,PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( MUC * MUR ),Min( RCSe ,MUR ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU - CS ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.059083192144327674}, {"determining": "( ( ( Min( DDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - ( DDR + ( ( Max( ( PN - ACS ),CRS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010080450054188657}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( Max( ( RCSe / MUM ),( Max( DS,MUC ) - ( RRSe + CS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem_Server * BR ) - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03405394792207808}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( DDR * FirstVNF_Mem_Server ) + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR * ( Max( RRS,( FirstVNF_CPU_Server - AMS ) ) - ( ( CRS - PN ) + ( Const + ( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - BR ) ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Max( MUC,( MUR * CS ) ),Max( ( ( MUM + DS ) - MUM ),( MUC / ( RMSe + MUR ) ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.005722421930276507}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * ( MUC * MUM ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9497907949790795, "obj2": 0.015819241962501184}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7594142259414226, "obj2": 0.0879142720755101}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7677824267782427, "obj2": 0.08260400149576586}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( Max( ( DDR / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - Min( ( ( MUC + MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( Max( Min( RMSe ,DS ),DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.07965053384275833}], "31": [{"determining": "( ACS - Max( ( Max( DDR,FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - Min( ( ( FirstVNF_CPU_Server + RRS ) * ( ACS - BR ) ) ,BR ) ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server * ( MDR + RRS ) ) / ( AMS / Min( PN ,MDR ) ) ) + DDR ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Max( MUC,( ( MUM + MUM ) * MLU ) ),Max( MUC,Min( MUC ,MUM ) ) ) + DS ) ) + Min( MLU ,MLU ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( Min( DS ,Min( ( ( MUR + DS ) * ( ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( CS / CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) / Min( CRS ,Const ) ) * Min( ( RRS - ( FirstVNF_RAM / ( DDR - PN ) ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( MUM / ( MUC + Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( CRS + ( Const - Max( MDR,AMS ) ) ) ) / Min( Const ,ACS ) ) * Min( ( ( FirstVNF_RAM / Min( DDR ,DDR ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( Min( MUM ,( RCSe / RCSe ) ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( RCSe,CS ) * MUC ),RRSe ) ) ) ) ) * ( MUC / MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23153639332429438}, {"determining": "( ( Min( RRS ,FirstVNF_CPU ) - ( Const * Const ) ) - ( MDR * ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + ( ( MUC * DS ) - ( MLU - RCSe ) ) ),Min( MUR ,RMSe ) ) ) * Max( ( ( RRSe / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) / Max( MUC,Max( MUC,( MUR - CS ) ) ) ) - CS )", "obj1": 0.7510460251046025, "obj2": 0.09158057008623005}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( ( CRS / FirstVNF_CPU_Server ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( ( MUM * RRSe ) + CS ) ) / Max( ( ( MUC - RMSe ) * CS ),( Max( CS,RCSe ) * MUC ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,Const ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUC / RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( RRS,FirstVNF_Mem_Server ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9351464435146444, "obj2": 0.019720390310075105}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.698744769874477, "obj2": 0.11796157441415812}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7594142259414226, "obj2": 0.0879142720755101}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08325373871370356}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( FirstVNF_Mem_Server + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUM ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.14296749974363118}, {"determining": "( ( Const - ( ACS + ( MDR / ( FirstVNF_CPU_Server + RRS ) ) ) ) - Max( MDR,( ( ( CRS - FirstVNF_Mem ) / Min( MDR ,Const ) ) - Max( RRS,( Const * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,( MUR + Max( MLU,DS ) ) ) ,( ( Max( RMSe,RMSe ) - Max( DS,CS ) ) - ( MUC / MUC ) ) ) ) * ( ( ( ( ( MLU + ( DS / MLU ) ) + DS ) + RCSe ) / ( RCSe / ( MLU * ( MUR * ( MUC / RCSe ) ) ) ) ) * MUR ) ) * ( MUR + MLU ) )", "obj1": 0.8179916317991632, "obj2": 0.06158238947769655}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.12654245322325838}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem_Server,Const ),FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6610878661087866, "obj2": 0.15481206332136524}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RRSe ,( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06420931764006867}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.04139316308184732}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( DDR - PN ) / Min( Const ,ACS ) ) ) ) - ( ( ( ( ( ACS - ( ( AMS - FirstVNF_RAM_Server ) + ( DDR - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_Mem_Server ) ) - Max( ACS,( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU_Server ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_RAM_Server ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( Max( ( RMSe / RMSe ),MUM ) + MUM ),Max( ( MUC * MUR ),Min( RCSe ,RCSe ) ) ) / ( RMSe * Min( RMSe ,CS ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06887341335924357}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.053018791343003226}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem - BR ) - PN ) / ( FirstVNF_RAM_Server * Const ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUC + RMSe ),CS ) / ( ( MUM + DS ) / Min( Max( MUR,( MUM / Max( ( MUR / MUC ),( RMSe * RMSe ) ) ) ) ,( ( RMSe / RRSe ) - MUM ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.06935923761307734}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUR,Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02460749452959788}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( ( MDR / FirstVNF_Mem_Server ),PN ) ) / ( FirstVNF_CPU + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( RCSe - RMSe ),CS ) / ( MUM * Max( ( CS * ( ( RMSe - RCSe ) * ( ( RMSe - CS ) - MUR ) ) ),MUC ) ) ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.026074988140482723}, {"determining": "( ( DDR + ( Const + ARS ) ) - ACS )", "choosing": "( ( CS * ( Min( Min( CS ,RCSe ) ,( MUC + ( MUM + MUR ) ) ) * RMSe ) ) * ( MUC * ( DS - RRSe ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + DDR ) ) + ( Max( ARS,ACS ) / FirstVNF_RAM ) ) - ( MDR - ( ARS * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,( RCSe - Max( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( ( CS / RCSe ) ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.014546020810857412}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( PN / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( ( MUM - MUC ),DS ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007559038322719695}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.02321837216762918}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.04371361674819254}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( Max( ( RCSe / MUM ),( Max( DS,MUC ) - ( RRSe + CS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07138535575840804}, {"determining": "( ( MDR - Min( ( ARS - FirstVNF_RAM ) ,( ( DDR / CRS ) - BR ) ) ) - ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + MUM ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( CS * ( MUR * MLU ) ) - ( ( MUM * RMSe ) - Max( RCSe,RRSe ) ) ) ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8702928870292888, "obj2": 0.04371361674819254}, {"determining": "( Min( DDR ,DDR ) - ( MDR - Max( Max( RRS,FirstVNF_Mem_Server ),( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,Max( MUR,( RRSe + Max( CS,Max( MUM,RCSe ) ) ) ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - ( Min( RCSe ,MUM ) + DS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7175732217573222, "obj2": 0.1063700311408341}, {"determining": "( ( Min( ( Max( RRS,AMS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,( CRS - PN ) ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( RRSe * RMSe ) ) + RMSe ) / Max( MUC,CS ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.03821812939638205}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( Max( PN,AMS ) / MRS ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( ( Max( MUM,MUC ) - MUM ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.09954617101127579}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7698744769874477, "obj2": 0.08060016514538779}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.015101171729666735}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( MLU ,MUM ) + DS ) * Min( ( ( DS / Max( MUR,MUM ) ) + RMSe ) ,Min( MUR ,RMSe ) ) ) * Max( ( Max( MUM,RCSe ) / ( MLU + Min( RMSe ,( MLU / DS ) ) ) ),Min( MUR ,RMSe ) ) ) / Max( MUC,CS ) ) - CS )", "obj1": 0.698744769874477, "obj2": 0.11796157441415812}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058984444631428164}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7677824267782427, "obj2": 0.08260400149576586}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM - FirstVNF_RAM ) + MDR ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( RMSe / ( Min( CS ,RRSe ) + RRSe ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( Max( Min( RMSe ,DS ),DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.07965053384275833}, {"determining": "( ( Min( ( DDR / DDR ) ,FirstVNF_CPU ) / CRS ) - ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( ( MUC - MUR ) / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,CS ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / DDR ) - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / ( ( Const + FirstVNF_RAM ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( ( Max( Min( ( CS - MUC ) ,( RMSe * MUR ) ),Min( RCSe ,MUC ) ) * ( Min( RRSe ,( ( ( MLU + DS ) * Max( MUR,RMSe ) ) - ( Min( CS ,RCSe ) + ( RCSe + ( MUM + DS ) ) ) ) ) - DS ) ) - ( MUM + ( RRSe / Max( MLU,( MLU * Min( MUM ,( RCSe + MLU ) ) ) ) ) ) )", "obj1": 0.8347280334728033, "obj2": 0.055807863539031624}, {"determining": "( ( ( ( ( PN - CRS ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - ( DDR + ( ( ( CRS / ( MDR - ARS ) ) / ( Min( MRS ,MDR ) * DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - Max( FirstVNF_Mem,Max( ACS,RRS ) ) )", "choosing": "( ( ( ( ( DS * Min( MUC ,CS ) ) - Max( RMSe,Min( CS ,( CS + ( DS - MUR ) ) ) ) ) / MLU ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RCSe,RMSe ) ) + DS ),Min( MUR ,Max( DS,( CS - MUC ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( MLU ,( DS - RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.017391510822011718}, {"determining": "( ( ( Min( DDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - ( DDR + ( ( Max( ( PN - ACS ),CRS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010069408853719604}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( Max( CRS,PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( MUR,RCSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.050573686585209825}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( ( FirstVNF_RAM * AMS ) - PN ) / ( Const - ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07102069842500548}, {"determining": "( ( ( Min( DDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - ( DDR + ( ( Max( ( PN - CRS ),CRS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( MUC - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( PN * Const ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( ( MUM + RMSe ) - MUR ) ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RCSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8305439330543933, "obj2": 0.05692688959255738}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem_Server * BR ) - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.899581589958159, "obj2": 0.03314949038070867}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( MUM + DS ) / ( MUM + ( ( ( MUC + RCSe ) + RRSe ) * ( MUC * MUM ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9895397489539749, "obj2": 0.003530307688511287}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( Max( RRS,( Const + ( FirstVNF_RAM_Server / PN ) ) ) - ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( FirstVNF_RAM_Server + ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR - RMSe ),CS ) / ( MUM * ( RMSe + MUM ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.0646764589825808}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - CRS ) / ( ( ( MDR * ACS ) / Max( PN,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * RMSe ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006309758995285632}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}], "32": [{"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Max( PN,ACS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,Max( MLU,RMSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( ( Max( DDR,FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) + ( ( PN - AMS ) * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - ( ( Max( RRSe,CS ) + RMSe ) / RCSe ) )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) / Min( CRS ,Const ) ) * Min( ( RRS - ( FirstVNF_RAM / ( DDR - PN ) ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( MUM / ( MUC + Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7175732217573222, "obj2": 0.10557166019378025}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,BR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,MDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( ( Min( RCSe ,MUM ) + DS ),Max( ( ( ( MUC + MUR ) / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10982124307799476}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( Min( ( Max( RRS,AMS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,( CRS - PN ) ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( RRSe * RMSe ) ) + RMSe ) / Max( MUC,CS ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.03821812939638205}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.043424356790494646}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,Const ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUC / RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( Min( DS ,Min( ( ( MUR + DS ) * ( ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( CS / CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050307248393050286}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.12654245322325838}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.14296749974363118}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - DDR ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * Max( MLU,RCSe ) ) ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23153639332429438}, {"determining": "( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( DDR - PN ) / Min( Const ,ACS ) ) ) ) - ( ( ( ( ( ACS - ( ( AMS - FirstVNF_RAM_Server ) + ( DDR - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_Mem_Server ) ) - Max( ACS,( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU_Server ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,FirstVNF_RAM_Server ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( Max( ( RMSe / RMSe ),MUM ) + MUM ),Max( ( MUC * MUR ),Min( RCSe ,RCSe ) ) ) / ( RMSe * Min( RMSe ,CS ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06887341335924357}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5899581589958159, "obj2": 0.22362777578983647}, {"determining": "( ( Max( PN,AMS ) / MRS ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( ( Max( MUM,MUC ) - MUM ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.09954617101127579}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7594142259414226, "obj2": 0.0879142720755101}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - PN ) ) / ( ( CRS - FirstVNF_Mem_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( ( MLU + DS ) / ( MUM + ( ( RRSe * ( MUC - ( RCSe / MLU ) ) ) * ( MUC * MUM ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004433729314205909}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058984444631428164}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.10201260836667252}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MDR * FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem_Server * BR ) - PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( Min( ARS ,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( Max( ( ( DS / Max( MUR,CS ) ) + RMSe ),Min( MUR ,RMSe ) ) * ( Min( RCSe ,MUM ) + DS ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - MUC ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.899581589958159, "obj2": 0.03253330622067258}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem - BR ) - PN ) / ( FirstVNF_RAM_Server * Const ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUC + RMSe ),CS ) / ( ( MUM + DS ) / Min( Max( MUR,( MUM / Max( ( MUR / MUC ),( RMSe * RMSe ) ) ) ) ,( ( RMSe / RRSe ) - MUM ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.06935923761307734}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.16946912981743736}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUR,Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02460749452959788}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( MDR * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,Min( Const ,ACS ) ) ) / ( RRS + AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8158995815899581, "obj2": 0.06283854155691959}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( Const - ( ACS + ( MDR / ( FirstVNF_CPU_Server + RRS ) ) ) ) - Max( MDR,( ( ( CRS - FirstVNF_Mem ) / Min( MDR ,Const ) ) - Max( RRS,( Const * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,( MUR + Max( MLU,DS ) ) ) ,( ( Max( RMSe,RMSe ) - Max( DS,CS ) ) - ( MUC / MUC ) ) ) ) * ( ( ( ( ( MLU + ( DS / MLU ) ) + DS ) + RCSe ) / ( RCSe / ( MLU * ( MUR * ( MUC / RCSe ) ) ) ) ) * MUR ) ) * ( MUR + MLU ) )", "obj1": 0.8179916317991632, "obj2": 0.06158238947769655}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( RRS,FirstVNF_Mem_Server ) ) ) ),FirstVNF_Mem_Server ) - ( ( CRS - Min( ( PN * DDR ) ,( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) / ( ( ( ACS * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( MUM,DS ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9644351464435147, "obj2": 0.010694957314694484}, {"determining": "( ( ( MDR + ARS ) * FirstVNF_CPU_Server ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( ( CRS - PN ) ,FirstVNF_RAM_Server ) * AMS ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) / RCSe ) - ( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + ( RMSe + MUR ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.008892395401044086}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.02321837216762918}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( CS,Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.057525317048053776}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( FirstVNF_RAM_Server ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.8744769874476988, "obj2": 0.04167465652113008}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( MDR + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( MUM ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08325373871370356}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ACS - ( ARS + ( Min( ( Const + MDR ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( DS / Min( ( MLU + RMSe ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU / RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( Min( BR ,BR ) - FirstVNF_CPU ) - ( ( DDR / ACS ) - ( PN * Const ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( ( ( MUM + RMSe ) - MUR ) ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RCSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8305439330543933, "obj2": 0.05692688959255738}, {"determining": "( ( Min( DDR ,BR ) - ( MDR + MRS ) ) - ( MDR - ( ( Max( MDR,PN ) / DDR ) - ( ( CRS - Min( ( PN * DDR ) ,( ( BR + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) ) / ( ( ( MDR * ACS ) / Max( PN,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( RCSe + ( MUM * RRSe ) ) - ( Max( ( MUR + RMSe ),Min( RRSe ,( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( Max( ( DS - MUM ),( MLU / MUR ) ) * RCSe ) ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS * Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.018654798989316906}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( ( CRS / FirstVNF_CPU_Server ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( ( MUM * RRSe ) + CS ) ) / Max( ( ( MUC - RMSe ) * CS ),( Max( CS,RCSe ) * MUC ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7698744769874477, "obj2": 0.08060016514538779}, {"determining": "( ( ( ( ( PN - CRS ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - ( DDR + ( ( ( CRS / ( MDR - ARS ) ) / ( Min( MRS ,MDR ) * DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - Max( FirstVNF_Mem,Max( ACS,RRS ) ) )", "choosing": "( ( ( ( ( DS * Min( MUC ,CS ) ) - Max( RMSe,Min( CS ,( CS + ( DS - MUR ) ) ) ) ) / MLU ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RCSe,RMSe ) ) + DS ),Min( MUR ,Max( DS,( CS - MUC ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( MLU ,( DS - RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.017391510822011718}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.805439330543933, "obj2": 0.06616753995225969}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR - RMSe ),CS ) / ( MUM * ( RMSe + MUM ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.01803691522805465}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( Max( Min( RMSe ,DS ),DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7740585774058577, "obj2": 0.07965053384275833}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9309623430962343, "obj2": 0.021124929746820453}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + DDR ) ) + ( Max( ARS,ACS ) / FirstVNF_RAM ) ) - ( MDR - ( ARS * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,( RCSe - Max( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( ( CS / RCSe ) ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( ( FirstVNF_RAM * AMS ) - PN ) / ( Const - ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07102069842500548}, {"determining": "( ( ( Min( DDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - ( DDR + ( ( Max( ( PN - ACS ),CRS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010069408853719604}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( ( MDR / FirstVNF_Mem_Server ),PN ) ) / ( FirstVNF_CPU + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( RCSe - RMSe ),CS ) / ( MUM * Max( ( CS * ( ( RMSe - RCSe ) * ( ( RMSe - CS ) - MUR ) ) ),MUC ) ) ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.026074988140482723}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM - FirstVNF_RAM ) + MDR ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( RMSe / ( Min( CS ,RRSe ) + RRSe ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * Max( CS,DS ) ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.053018791343003226}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.015101171729666735}, {"determining": "( ( BR / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( PN - CRS ),( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,MRS ) ) / ( ACS + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),CS ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - Min( RRSe ,( MUC / MLU ) ) ) ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.02227535759749529}, {"determining": "( ( Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( MDR ,MRS ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.04139316308184732}], "33": [{"determining": "( ( ( Min( Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Max( PN,ACS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,Max( MLU,RMSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Max( ( Max( ( ( ( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) * ( MDR / MDR ) ) + ARS ),FirstVNF_RAM ) + FirstVNF_RAM_Server ),AMS ) - ACS )", "choosing": "( ( Max( MUR,( Min( Max( MUM,( MUC / ( CS / DS ) ) ) ,MLU ) + DS ) ) / MUM ) * ( CS * ( ( RRSe - ( ( MUC + Max( RMSe,Max( DS,MUR ) ) ) / ( MLU / RRSe ) ) ) * Min( ( MUC / ( MUM - DS ) ) ,( ( ( ( DS + MUR ) + RRSe ) - Max( MUR,RCSe ) ) / Max( ( Max( CS,RCSe ) * MUC ),( CS * RMSe ) ) ) ) ) ) )", "obj1": 0.5836820083682008, "obj2": 0.24007780367182083}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.12654245322325838}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - DDR ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUR + DS ) * Max( MLU,RCSe ) ) ) * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5857740585774058, "obj2": 0.23153639332429438}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( FirstVNF_CPU,Const ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,CS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MUC / RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2636857197056471}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.16946912981743736}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7175732217573222, "obj2": 0.10557166019378025}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( Min( DS ,Min( ( ( MUR + DS ) * ( ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( CS / CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.015101171729666735}, {"determining": "( ACS - ( ARS + ( Min( ( Const + MDR ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( DS / Min( ( MLU + RMSe ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU / RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) + FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( ( ( ( ACS * FirstVNF_Mem_Server ) + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( MUM ,RCSe ) ) * ( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + Min( ( DS - Max( ( RCSe - MUC ),CS ) ) ,( ( DS * MUR ) * MUR ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.08748685775405209}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050307248393050286}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( ( CRS / FirstVNF_CPU_Server ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( ( MUM * RRSe ) + CS ) ) / Max( ( ( MUC - RMSe ) * CS ),( Max( CS,RCSe ) * MUC ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5878661087866108, "obj2": 0.2292685342720249}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - PN ) ) / ( ( CRS - FirstVNF_Mem_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( ( MLU + DS ) / ( MUM + ( ( RRSe * ( MUC - ( RCSe / MLU ) ) ) * ( MUC * MUM ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004433729314205909}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( ( CRS - PN ) ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * RMSe ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9707112970711297, "obj2": 0.008892395401044086}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( MDR + FirstVNF_Mem_Server ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( DS - CS )", "obj1": 0.8138075313807531, "obj2": 0.06389571092925599}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( MDR + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06861515514889302}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( MDR + FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) + DDR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( ( Max( CS,( MUR + RMSe ) ) / ( ( ( Min( RCSe ,MUM ) + MLU ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( ( CS * RMSe ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10848843394989541}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,( Min( ( FirstVNF_RAM_Server + AMS ) ,DDR ) - BR ) ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - ( Min( RCSe ,MUM ) + DS ) ) + RCSe ) ) )", "obj1": 0.8891213389121339, "obj2": 0.037343301390177726}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.10201260836667252}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( Min( ( Max( RRS,AMS ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,( CRS - PN ) ) + DDR ) - Max( CRS,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( RRSe * RMSe ) ) + RMSe ) / Max( MUC,CS ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.03821812939638205}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10981727267524057}, {"determining": "( ( DDR + ( ( ( DDR + ( Max( MRS,ARS ) + FirstVNF_Mem_Server ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) - MDR )", "choosing": "( ( CS * ( Min( Min( CS ,( RRSe + RRSe ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) ) * RMSe ) ) * Min( MUC ,MLU ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) / Min( CRS ,Const ) ) * Min( ( RRS - ( FirstVNF_RAM / ( DDR - PN ) ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( MUM / ( MUC + Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08325373871370356}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( CRS - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( Min( Min( RRSe ,( MUM / MUM ) ) ,( RMSe + MLU ) ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02456216885532697}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.14296749974363118}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + DDR ) ) + ( Max( ARS,ACS ) / FirstVNF_RAM ) ) - ( MDR - ( ARS * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,( RCSe - Max( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( ( CS / RCSe ) ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( ( ( PN - CRS ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - ( DDR + ( ( ( CRS / ( MDR - ARS ) ) / ( Min( MRS ,MDR ) * DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - Max( FirstVNF_Mem,Max( ACS,RRS ) ) )", "choosing": "( ( ( ( ( DS * Min( MUC ,CS ) ) - Max( RMSe,Min( CS ,( CS + ( DS - MUR ) ) ) ) ) / MLU ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RCSe,RMSe ) ) + DS ),Min( MUR ,Max( DS,( CS - MUC ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( MLU ,( DS - RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.017391510822011718}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( DDR - PN ) - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.002029167686496782}, {"determining": "( ( Const - ( ACS + ( MDR / ( FirstVNF_CPU_Server + RRS ) ) ) ) - Max( MDR,( ( ( CRS - FirstVNF_Mem ) / Min( MDR ,Const ) ) - Max( RRS,( Const * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,( MUR + Max( MLU,DS ) ) ) ,( ( Max( RMSe,RMSe ) - Max( DS,CS ) ) - ( MUC / MUC ) ) ) ) * ( ( ( ( ( MLU + ( DS / MLU ) ) + DS ) + RCSe ) / ( RCSe / ( MLU * ( MUR * ( MUC / RCSe ) ) ) ) ) * MUR ) ) * ( MUR + MLU ) )", "obj1": 0.8179916317991632, "obj2": 0.06158238947769655}, {"determining": "( ( DDR + ( ( ( CRS + PN ) / ( DDR / MDR ) ) * FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( DS / Min( MUM ,Max( ( MUR + DS ),( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,MUM ) - DS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( MUR * MUM ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_RAM_Server - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( Min( MUM ,( MUR * RCSe ) ),RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.021041941428603512}, {"determining": "( ( ( Min( ARS ,Max( DDR,MRS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,AMS ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( ( ( MLU / RMSe ) * MUR ) * MLU ) / RCSe ) ,Min( RMSe ,MUC ) ) / ( MLU / DS ) )", "obj1": 0.805439330543933, "obj2": 0.06616753995225969}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( FirstVNF_CPU - Max( DDR,BR ) ) - ( CRS / Const ) )", "choosing": "( ( ( MUM + DS ) / ( MUM + ( ( ( ( DS - ( MUM - RMSe ) ) + ( RCSe + ( CS - MUC ) ) ) + RRSe ) * MUR ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0031672126301382263}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.02321837216762918}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.043424356790494646}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS / PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - PN ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUC,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - Const ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - PN ) ) / ( ( ( BR - FirstVNF_Mem_Server ) / ARS ) + AMS ) ) ) ) ) )", "choosing": "( ( ( MUM + DS ) / ( MUM + ( ( ( MUC + ( ( CS - MUC ) + RCSe ) ) + ( MLU * RCSe ) ) - ( MUC * MUM ) ) ) ) - Min( MUC ,Min( RCSe ,DS ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004433729314205909}, {"determining": "( ( ( MDR + ARS ) * FirstVNF_CPU_Server ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( ( CRS - PN ) ,FirstVNF_RAM_Server ) * AMS ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) / RCSe ) - ( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + ( RMSe + MUR ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.008892395401044086}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5899581589958159, "obj2": 0.22362777578983647}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( ( FirstVNF_RAM * AMS ) - PN ) / ( Const - ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07102069842500548}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem_Server * BR ) - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.897489539748954, "obj2": 0.033226050567627355}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( FirstVNF_Mem - BR ) / FirstVNF_Mem ) - ( MDR - ( ( ( CRS - ACS ) / Min( Const ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUR - RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( Max( CS,MUM ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.017642425437976922}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem - BR ) - PN ) / ( FirstVNF_RAM_Server * Const ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUC + RMSe ),CS ) / ( ( MUM + DS ) / Min( Max( MUR,( MUM / Max( ( MUR / MUC ),( RMSe * RMSe ) ) ) ) ,( ( RMSe / RRSe ) - MUM ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.06935923761307734}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( CS,Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.055601472186683445}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( MLU * ( ( MLU / RMSe ) * MUR ) ) / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.805439330543933, "obj2": 0.06616753995225969}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( Min( DDR ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - ( DDR + ( ( Max( ( PN - ACS ),CRS ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010069408853719604}, {"determining": "( ( Max( PN,AMS ) / MRS ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( ( Max( MUM,MUC ) - MUM ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.09954617101127579}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.05736709382261573}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / Max( ( MDR / FirstVNF_Mem_Server ),PN ) ) / ( FirstVNF_CPU + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( RCSe - RMSe ),CS ) / ( MUM * Max( ( CS * ( ( RMSe - RCSe ) * ( ( RMSe - CS ) - MUR ) ) ),MUC ) ) ) - CS )", "obj1": 0.9184100418410042, "obj2": 0.026074988140482723}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM - FirstVNF_RAM ) + MDR ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( RMSe / ( Min( CS ,RRSe ) + RRSe ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}], "34": [{"determining": "( ( ( Max( Min( DDR ,( MDR * AMS ) ),FirstVNF_Mem_Server ) - ( DDR + ( Min( Const ,ACS ) / ( CRS / PN ) ) ) ) - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - PN ) )", "choosing": "( ( Max( ( MUR / RMSe ),Min( MLU ,DS ) ) / ( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RRSe ) ) * ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUC,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Max( MLU,RCSe ) * MUC ),( ( MUC - RMSe ) * CS ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + Min( ( ( ( RRS * FirstVNF_CPU_Server ) / ( AMS * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM ) - CRS ) / Min( Const ,ACS ) ) ) ) ,( FirstVNF_RAM + AMS ) ) ) )", "choosing": "( ( RCSe + ( ( MUC + ( DS / Max( ( MLU + MUC ),( ( RMSe / RCSe ) * MUM ) ) ) ) / DS ) ) - ( ( ( Min( MLU ,RMSe ) * Min( MUC ,MUM ) ) / MLU ) * ( ( DS / Max( MUR,RCSe ) ) - RMSe ) ) )", "obj1": 0.5794979079497908, "obj2": 0.24223432695799987}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08325373871370356}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.12654245322325838}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( Min( RMSe ,DS ) / ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08091571697120803}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.05736709382261573}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( Min( DS ,Min( ( ( MUR + DS ) * ( ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( CS / CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ACS - ( ARS + ( Min( ( Const + MDR ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( DS / Min( ( MLU + RMSe ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU / RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) + FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( ( ( ( ACS * FirstVNF_Mem_Server ) + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( MUM ,RCSe ) ) * ( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + Min( ( DS - Max( ( RCSe - MUC ),CS ) ) ,( ( DS * MUR ) * MUR ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.08748685775405209}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) * ( ACS - BR ) ) ,BR ) - FirstVNF_CPU ) - ( MDR * ( ( ( CRS - PN ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - Max( RRS,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * ( Max( Min( ( ( MUM + DS ) - MLU ) ,( MUC / ( DS + RCSe ) ) ),Max( MUC,Min( MUC ,MUR ) ) ) + DS ) ) + DS ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04708808154263847}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( ( FirstVNF_RAM * AMS ) - PN ) / ( Const - ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07102069842500548}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( Min( MUM ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8765690376569037, "obj2": 0.039826930208434086}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - AMS ) / Min( MRS ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ACS / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - PN ) ) / ( ( ( BR - FirstVNF_Mem_Server ) / ARS ) + AMS ) ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS - CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + MUM ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006337652214556937}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.02321837216762918}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( Max( PN,AMS ) / MRS ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( ( Max( MUM,MUC ) - MUM ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.09954617101127579}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( CS,Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.055601472186683445}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.05989511384004314}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( CRS - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( Min( Min( RRSe ,( MUM / MUM ) ) ,( RMSe + MLU ) ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02456216885532697}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5899581589958159, "obj2": 0.22362777578983647}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.10201260836667252}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.10981727267524057}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_RAM_Server - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( MUM + DS ) ) ) ,RCSe ) ) ,( ( MUR + MUC ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.9393305439330544, "obj2": 0.019652690283584868}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server * BR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ),ACS ) - ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) )", "choosing": "( ( CS * ( DS - Min( Max( Max( Max( Max( MUR,MUC ),( RRSe + MUC ) ),MUR ),RMSe ) ,Min( ( RRSe - MUM ) ,Min( ( DS - ( RMSe - MLU ) ) ,( ( RCSe / DS ) / DS ) ) ) ) ) ) / Min( Max( ( ( ( ( ( MUC + MLU ) * ( DS / MUR ) ) - CS ) * Min( MUM ,MUC ) ) / ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + Max( RCSe,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.04810116383374681}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ( MDR * ( FirstVNF_Mem - RRS ) ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) + RMSe ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.025960649390015106}, {"determining": "( ( Const - ( ACS + ( MDR / ( FirstVNF_CPU_Server + RRS ) ) ) ) - Max( MDR,( ( ( CRS - FirstVNF_Mem ) / Min( MDR ,Const ) ) - Max( RRS,( Const * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,( MUR + Max( MLU,DS ) ) ) ,( ( Max( RMSe,RMSe ) - Max( DS,CS ) ) - ( MUC / MUC ) ) ) ) * ( ( ( ( ( MLU + ( DS / MLU ) ) + DS ) + RCSe ) / ( RCSe / ( MLU * ( MUR * ( MUC / RCSe ) ) ) ) ) * MUR ) ) * ( MUR + MLU ) )", "obj1": 0.8179916317991632, "obj2": 0.06158238947769655}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.14296749974363118}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Const / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM_Server ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( Min( MUC ,Min( RCSe ,DS ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.007582281596052502}, {"determining": "( ( ( ( ( PN - CRS ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - ( DDR + ( ( ( CRS / ( MDR - ARS ) ) / ( Min( MRS ,MDR ) * DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - Max( FirstVNF_Mem,Max( ACS,RRS ) ) )", "choosing": "( ( ( ( ( DS * Min( MUC ,CS ) ) - Max( RMSe,Min( CS ,( CS + ( DS - MUR ) ) ) ) ) / MLU ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RCSe,RMSe ) ) + DS ),Min( MUR ,Max( DS,( CS - MUC ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( MLU ,( DS - RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.017391510822011718}, {"determining": "( ( DDR + ( ( ( CRS + PN ) / ( DDR / MDR ) ) * FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( DS / Min( MUM ,Max( ( MUR + DS ),( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,MUM ) - DS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( MUR * MUM ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ( ( ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,MUC ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.015084285991876938}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( ( CRS - PN ),Min( Const ,ACS ) ) ) ) - ( Max( ( MRS + FirstVNF_CPU ),( RRS - ( CRS - BR ) ) ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( CS - Min( RRSe ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.043896438271152714}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) / Min( CRS ,Const ) ) * Min( ( RRS - ( FirstVNF_RAM / ( DDR - PN ) ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( MUM / ( MUC + Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( ( FirstVNF_Mem - BR ) / FirstVNF_Mem ) - ( MDR - ( ( ( CRS - ACS ) / Min( Const ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUR - RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( Max( CS,MUM ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.017642425437976922}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,Min( RCSe ,DS ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020803165576388227}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + Max( ( ( CRS - ( ARS + CRS ) ) / ( FirstVNF_Mem - RRS ) ),ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( CRS - ACS ) ) ) )", "choosing": "( ( ( Min( MLU ,RCSe ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) / RMSe ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050307248393050286}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( FirstVNF_RAM - ( DDR + ( Max( ( DDR + ( DDR - ( CRS / ( Const + ACS ) ) ) ),Min( ACS ,Const ) ) * Min( ( ( MRS + BR ) - RRS ) ,MRS ) ) ) )", "choosing": "( Max( ( DS * Min( Min( CS ,MUC ) ,( ( ( CS + ( MLU * MUM ) ) - ( DS + CS ) ) / Min( CS ,DS ) ) ) ),CS ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM - FirstVNF_RAM ) + MDR ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( RMSe / ( Min( CS ,RRSe ) + RRSe ) ) ) - CS )", "obj1": 0.7238493723849372, "obj2": 0.10343131465224986}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9309623430962343, "obj2": 0.021554390918116353}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050307248393050286}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + DDR ) ) + ( Max( ARS,ACS ) / FirstVNF_RAM ) ) - ( MDR - ( ARS * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,( RCSe - Max( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( ( CS / RCSe ) ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.043424356790494646}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem_Server * BR ) - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.897489539748954, "obj2": 0.033226050567627355}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( MDR + FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) + DDR ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( ( Max( CS,( MUR + RMSe ) ) / ( ( ( Min( RCSe ,MUM ) + MLU ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( ( CS * RMSe ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10848843394989541}, {"determining": "( ( Const * FirstVNF_Mem_Server ) - ( DDR + ( ( ( Max( FirstVNF_Mem_Server,PN ) / Max( MDR,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MUC / Min( MUM ,( ( MUR + DS ) * ( DS - ( ( Max( RCSe,DS ) - RMSe ) + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Max( CRS,PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - Max( ARS,ARS ) ) ,ACS ) ) ) ) )", "choosing": "( Min( Min( MLU ,( MUR * MLU ) ) ,MUR ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.049378962315891804}, {"determining": "( ( ( Min( DDR ,( MRS * Const ) ) - ( DDR + ( ( ( RRS - PN ) / ( BR * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( MUR,Min( CS ,RMSe ) ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06483487656362646}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.16946912981743736}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( CRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( DS - RMSe ) ,( RMSe * RMSe ) ) * ( Max( MLU,MUR ) * CS ) ) / Min( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ,( ( CS - MUC ) + RCSe ) ) )", "obj1": 0.9602510460251046, "obj2": 0.012212009524835905}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) - Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ARS ,MDR ) / Min( Const ,CRS ) ) ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( MUC ,CS ),CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04879853276970006}], "35": [{"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( ( FirstVNF_CPU_Server - RRS ) + BR ) / ( CRS - PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( Min( MRS ,Min( FirstVNF_CPU_Server ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( ( ACS - FirstVNF_CPU_Server ) + ( ( ARS + BR ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( DS ,RRSe ) - ( Max( ( DS + ( DS + ( MUM + ( MUC / ( MUM + RRSe ) ) ) ) ),CS ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * ( ( RMSe + RRSe ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( DDR ,( MDR * AMS ) ),FirstVNF_Mem_Server ) - ( DDR + ( Min( Const ,ACS ) / ( CRS / PN ) ) ) ) - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - PN ) )", "choosing": "( ( Max( ( MUR / RMSe ),Min( MLU ,DS ) ) / ( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RRSe ) ) * ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUC,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + Min( ( ( ( RRS * FirstVNF_CPU_Server ) / ( AMS * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM ) - CRS ) / Min( Const ,ACS ) ) ) ) ,( FirstVNF_RAM + AMS ) ) ) )", "choosing": "( ( RCSe + ( ( MUC + ( DS / Max( ( MLU + MUC ),( ( RMSe / RCSe ) * MUM ) ) ) ) / DS ) ) - ( ( ( Min( MLU ,RMSe ) * Min( MUC ,MUM ) ) / MLU ) * ( ( DS / Max( MUR,RCSe ) ) - RMSe ) ) )", "obj1": 0.5794979079497908, "obj2": 0.24223432695799987}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( ( Min( DDR ,( MRS * Const ) ) - ( DDR + ( ( ( RRS - PN ) / ( BR * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( MUR,Min( CS ,RMSe ) ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06483487656362646}, {"determining": "( ACS - ( ( MDR + ( ACS - ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Max( MUC,CS ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( Max( MLU,RCSe ) * MUC ) * RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( RMSe / ( Min( CS ,RRSe ) + RRSe ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.07036767850452581}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Const / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM_Server ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( RRSe,RCSe ) - Max( Max( RRSe,( RMSe * RRSe ) ),RMSe ) )", "obj1": 0.9748953974895398, "obj2": 0.007559038322719695}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / ( DDR - PN ) ) ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) ) - ( DS + RRSe ) )", "obj1": 0.9644351464435147, "obj2": 0.01103810782462298}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.12654245322325838}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.05736709382261573}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( ( FirstVNF_RAM * AMS ) - PN ) / ( Const - ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07102069842500548}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( Const - ( ACS + ( MDR / ( FirstVNF_CPU_Server + RRS ) ) ) ) - Max( MDR,( ( ( CRS - FirstVNF_Mem ) / Min( MDR ,Const ) ) - Max( RRS,( Const * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,( MUR + Max( MLU,DS ) ) ) ,( ( Max( RMSe,RMSe ) - Max( DS,CS ) ) - ( MUC / MUC ) ) ) ) * ( ( ( ( ( MLU + ( DS / MLU ) ) + DS ) + RCSe ) / ( RCSe / ( MLU * ( MUR * ( MUC / RCSe ) ) ) ) ) * MUR ) ) * ( MUR + MLU ) )", "obj1": 0.8179916317991632, "obj2": 0.06158238947769655}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( Min( DS ,Min( ( ( MUR + DS ) * ( ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( CS / CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) + FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( ( ( ( ACS * FirstVNF_Mem_Server ) + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( MUM ,RCSe ) ) * ( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + Min( ( DS - Max( ( RCSe - MUC ),CS ) ) ,( ( DS * MUR ) * MUR ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.08748685775405209}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8577405857740585, "obj2": 0.04614507314618848}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( Min( RMSe ,DS ) / ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08091571697120803}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.14296749974363118}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( MRS - ( Max( CRS,AMS ) + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( Min( Max( MUR,MUR ) ,( ( MUR + DS ) - ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08325373871370356}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( CS,Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.055601472186683445}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( ( CRS - PN ),Min( Const ,ACS ) ) ) ) - ( Max( ( MRS + FirstVNF_CPU ),( RRS - ( CRS - BR ) ) ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( CS - Min( RRSe ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.043896438271152714}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( MDR * ( MDR - RRS ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9916317991631799, "obj2": 0.0025110179880945857}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem_Server * BR ) - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.897489539748954, "obj2": 0.033226050567627355}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( Min( CRS ,CRS ) - ( FirstVNF_Mem - ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + Const ) ) ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( Min( Min( Const ,ACS ) ,ACS ) / ( CRS - PN ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * ( ( ( DS / Max( MUR,MUM ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.042159647387179706}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( ( ( CRS - PN ) / ( ( Max( ( PN + FirstVNF_Mem ),PN ) / ( MDR * ACS ) ) / ( Min( AMS ,FirstVNF_RAM_Server ) + AMS ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,MUC ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.015084285991876938}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / ( ( CRS - PN ) / Min( Const ,ACS ) ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,CS ) ,MUR ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.005080550253507443}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ,( ( ( ARS + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,( MUM * RMSe ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + RRSe ) )", "obj1": 0.9895397489539749, "obj2": 0.004606619955856432}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + DDR ) ) + ( Max( ARS,ACS ) / FirstVNF_RAM ) ) - ( MDR - ( ARS * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,( RCSe - Max( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( ( CS / RCSe ) ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( DDR + ( ( ( CRS + PN ) / ( DDR / MDR ) ) * FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( DS / Min( MUM ,Max( ( MUR + DS ),( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,MUM ) - DS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( MUR * MUM ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( CRS - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( Min( Min( RRSe ,( MUM / MUM ) ) ,( RMSe + MLU ) ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02456216885532697}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) / Min( CRS ,Const ) ) * Min( ( RRS - ( FirstVNF_RAM / ( DDR - PN ) ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( MUM / ( MUC + Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( Max( PN,AMS ) / MRS ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) )", "choosing": "( ( Max( MUM,MUC ) - MUM ) - CS )", "obj1": 0.7322175732217573, "obj2": 0.09954617101127579}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( FirstVNF_Mem_Server ,( Const * Const ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * Const ) ) )", "choosing": "( ( DS / Min( ( RCSe - RMSe ) ,( ( MUR + DS ) * ( ( ( ( MLU - MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( ( ( PN - CRS ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - ( DDR + ( ( ( CRS / ( MDR - ARS ) ) / ( Min( MRS ,MDR ) * DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - Max( FirstVNF_Mem,Max( ACS,RRS ) ) )", "choosing": "( ( ( ( ( DS * Min( MUC ,CS ) ) - Max( RMSe,Min( CS ,( CS + ( DS - MUR ) ) ) ) ) / MLU ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RCSe,RMSe ) ) + DS ),Min( MUR ,Max( DS,( CS - MUC ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( MLU ,( DS - RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.017391510822011718}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( Min( RCSe ,MUM ) + DS ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.04331789870944796}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050307248393050286}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ACS - ( DDR + ( ( ACS + FirstVNF_Mem ) / FirstVNF_Mem ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( DS - ( MUR + ( MLU - ( RMSe / RMSe ) ) ) ) * Max( MUR,DS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_RAM_Server - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( MUM + DS ) ) ) ,RCSe ) ) ,( ( MUR + MUC ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.9393305439330544, "obj2": 0.019652690283584868}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( ARS - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) * ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( ( RCSe * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( Min( MUR ,RMSe ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.047900989582483115}, {"determining": "( FirstVNF_RAM - ( DDR + ( Max( ( DDR + ( DDR - ( CRS / ( Const + ACS ) ) ) ),Min( ACS ,Const ) ) * Min( ( ( MRS + BR ) - RRS ) ,MRS ) ) ) )", "choosing": "( Max( ( DS * Min( Min( CS ,MUC ) ,( ( ( CS + ( MLU * MUM ) ) - ( DS + CS ) ) / Min( CS ,DS ) ) ) ),CS ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7280334728033473, "obj2": 0.10096345170281842}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9309623430962343, "obj2": 0.021554390918116353}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( Max( RRS,( Max( RRS,ACS ) - ( ( CRS - PN ) / Min( ARS ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe + RRSe ) ) * Min( MLU ,MUR ) ) / RCSe ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01584456040878077}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + Max( ( ( CRS - ( ARS + CRS ) ) / ( FirstVNF_Mem - RRS ) ),ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( CRS - ACS ) ) ) )", "choosing": "( ( ( Min( MLU ,RCSe ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) / RMSe ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050307248393050286}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( Min( MUR ,RMSe ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.017642425437976922}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.05989511384004314}, {"determining": "( ( Const * FirstVNF_Mem_Server ) - ( DDR + ( ( ( Max( FirstVNF_Mem_Server,PN ) / Max( MDR,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MUC / Min( MUM ,( ( MUR + DS ) * ( DS - ( ( Max( RCSe,DS ) - RMSe ) + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( CRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( CS,Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9602510460251046, "obj2": 0.012020560324850925}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Max( CRS,PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - Max( ARS,ARS ) ) ,ACS ) ) ) ) )", "choosing": "( Min( Min( MLU ,( MUR * MLU ) ) ,MUR ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.049378962315891804}], "36": [{"determining": "( ( ( ( ( CRS - ACS ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) ) - ( ( ( Max( ( DS / DS ),MUC ) / Max( ( DS * Max( DS,RRSe ) ),( ( RCSe + MUR ) * RMSe ) ) ) / RMSe ) * ( ( ( ( Min( Min( MUM ,DS ) ,( RMSe + RMSe ) ) / RMSe ) - Max( RMSe,( RMSe - MUR ) ) ) / Max( RCSe,MUR ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( ( FirstVNF_CPU_Server - RRS ) + BR ) / ( CRS - PN ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( Min( MRS ,Min( FirstVNF_CPU_Server ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( ( ACS - FirstVNF_CPU_Server ) + ( ( ARS + BR ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( DS ,RRSe ) - ( Max( ( DS + ( DS + ( MUM + ( MUC / ( MUM + RRSe ) ) ) ) ),CS ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * ( ( RMSe + RRSe ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + Min( ( ( ( RRS * FirstVNF_CPU_Server ) / ( AMS * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM ) - CRS ) / Min( Const ,ACS ) ) ) ) ,( FirstVNF_RAM + AMS ) ) ) )", "choosing": "( ( RCSe + ( ( MUC + ( DS / Max( ( MLU + MUC ),( ( RMSe / RCSe ) * MUM ) ) ) ) / DS ) ) - ( ( ( Min( MLU ,RMSe ) * Min( MUC ,MUM ) ) / MLU ) * ( ( DS / Max( MUR,RCSe ) ) - RMSe ) ) )", "obj1": 0.5794979079497908, "obj2": 0.24223432695799987}, {"determining": "( FirstVNF_Mem - ( DDR + ( ( RRS + Min( DDR ,PN ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( MUC ,CS ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( Min( ( MUM + Min( Max( RMSe,MUR ) ,CS ) ) ,Min( RCSe ,MUM ) ) / MUM ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( CRS - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( Min( Min( RRSe ,( MUM / MUM ) ) ,( RMSe + MLU ) ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02456216885532697}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( PN - Max( MRS,FirstVNF_CPU_Server ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( RCSe + ( MLU * ( RRSe / ( CS - MLU ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.07032988550112654}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( MUC * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.08325373871370356}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.12654245322325838}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( Min( CRS ,CRS ) - ( FirstVNF_Mem - ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + Const ) ) ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( Min( Min( Const ,ACS ) ,ACS ) / ( CRS - PN ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * ( ( ( DS / Max( MUR,MUM ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( Const * FirstVNF_Mem_Server ) - ( DDR + ( ( ( Max( FirstVNF_Mem_Server,PN ) / Max( MDR,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MUC / Min( MUM ,( ( MUR + DS ) * ( DS - ( ( Max( RCSe,DS ) - RMSe ) + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( Min( DS ,Min( ( ( MUR + DS ) * ( ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( CS / CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ( ( Min( DDR ,( MRS * Const ) ) - ( DDR + ( ( ( RRS - PN ) / ( BR * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( MUR,Min( CS ,RMSe ) ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06483487656362646}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) + FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( ( ( ( ACS * FirstVNF_Mem_Server ) + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( MUM ,RCSe ) ) * ( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + Min( ( DS - Max( ( RCSe - MUC ),CS ) ) ,( ( DS * MUR ) * MUR ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.08748685775405209}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7280334728033473, "obj2": 0.10096345170281842}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server + ( FirstVNF_CPU / CRS ) ) ) + CRS ) - ( FirstVNF_Mem_Server + MRS ) ) - FirstVNF_CPU ) - Max( MDR,( ARS - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( Min( Max( ( CS / DS ),RRSe ) ,MUR ) + MUM ) * ( ( ( Max( MLU,MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( ( ( ( Max( RCSe,MUC ) * DS ) / MUC ) + MUC ) * ( RCSe / RCSe ) ) - MUR ) )", "obj1": 0.8744769874476988, "obj2": 0.04126467236805525}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RMSe + ( MLU - Max( MUC,CS ) ) ) ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.14296749974363118}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( Const * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9686192468619247, "obj2": 0.009477166723789844}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.05736709382261573}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( ( FirstVNF_RAM * AMS ) - PN ) / ( Const - ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07102069842500548}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( Max( MUM,MUC ) - MUM ) ) ) - CS )", "obj1": 0.7112970711297071, "obj2": 0.11079266484968761}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06321442497792558}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9309623430962343, "obj2": 0.021554390918116353}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9309623430962343, "obj2": 0.021554390918116353}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( MUR,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06483487656362646}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( ( Max( RRS,ACS ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - MDR ) - ( MDR - ( Max( Max( CRS,RRS ),FirstVNF_Mem_Server ) - ( ( CRS - ( AMS / ARS ) ) / Max( Const,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( DDR + ( ( ( CRS + PN ) / ( DDR / MDR ) ) * FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( DS / Min( MUM ,Max( ( MUR + DS ),( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * CS ),Min( RCSe ,MUC ) ) * ( Min( RMSe ,MUM ) - DS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( MUR * MUM ) ) )", "obj1": 0.5543933054393305, "obj2": 0.28133810908029694}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) / Min( CRS ,Const ) ) * Min( ( RRS - ( FirstVNF_RAM / ( DDR - PN ) ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( MUM / ( MUC + Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_RAM_Server - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( MUM + DS ) ) ) ,RCSe ) ) ,( ( MUR + MUC ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.9393305439330544, "obj2": 0.019652690283584868}, {"determining": "( ( Const - ( ACS + ( MDR / ( FirstVNF_CPU_Server + RRS ) ) ) ) - Max( MDR,( ( ( CRS - FirstVNF_Mem ) / Min( MDR ,Const ) ) - Max( RRS,( Const * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( RMSe * Min( Min( CS ,( MUR + Max( MLU,DS ) ) ) ,( ( Max( RMSe,RMSe ) - Max( DS,CS ) ) - ( MUC / MUC ) ) ) ) * ( ( ( ( ( MLU + ( DS / MLU ) ) + DS ) + RCSe ) / ( RCSe / ( MLU * ( MUR * ( MUC / RCSe ) ) ) ) ) * MUR ) ) * ( MUR + MLU ) )", "obj1": 0.8179916317991632, "obj2": 0.06158238947769655}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( ( ( PN - CRS ) + Min( Const ,( Min( FirstVNF_RAM_Server ,( AMS * FirstVNF_CPU ) ) - MRS ) ) ) - ( DDR + ( ( ( CRS / ( MDR - ARS ) ) / ( Min( MRS ,MDR ) * DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - Max( FirstVNF_Mem,Max( ACS,RRS ) ) )", "choosing": "( ( ( ( ( DS * Min( MUC ,CS ) ) - Max( RMSe,Min( CS ,( CS + ( DS - MUR ) ) ) ) ) / MLU ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RCSe,RMSe ) ) + DS ),Min( MUR ,Max( DS,( CS - MUC ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( MLU ,( DS - RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.017391510822011718}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( Min( RMSe ,DS ) / ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08091571697120803}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + Max( ( ( CRS - ( ARS + CRS ) ) / ( FirstVNF_Mem - RRS ) ),ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( CRS - ACS ) ) ) )", "choosing": "( ( ( Min( MLU ,RCSe ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) / RMSe ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050307248393050286}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( FirstVNF_RAM - ( DDR + ( Max( ( DDR + ( DDR - ( CRS / ( Const + ACS ) ) ) ),Min( ACS ,Const ) ) * Min( ( ( MRS + BR ) - RRS ) ,MRS ) ) ) )", "choosing": "( Max( ( DS * Min( Min( CS ,MUC ) ,( ( ( CS + ( MLU * MUM ) ) - ( DS + CS ) ) / Min( CS ,DS ) ) ) ),CS ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ACS - ( ( MDR + ( ACS - ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Max( MUC,CS ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( Max( MLU,RCSe ) * MUC ) * RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( ( DDR + ( ( ( MDR * RRS ) / ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( Const + ( ( ( CRS - PN ) / ( Min( CRS ,BR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( DS - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( Min( RMSe ,DS ) / ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.08091571697120803}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( Max( RRS,( Max( RRS,ACS ) - ( ( CRS - PN ) / Min( ARS ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe + RRSe ) ) * Min( MLU ,MUR ) ) / RCSe ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01584456040878077}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / ( DDR - PN ) ) ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) ) - ( DS + RRSe ) )", "obj1": 0.9644351464435147, "obj2": 0.01103810782462298}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.050307248393050286}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) + DDR ) ) + ( Max( ARS,ACS ) / FirstVNF_RAM ) ) - ( MDR - ( ARS * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,( RCSe - Max( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ),Min( ( CS / RCSe ) ,MUC ) ) ) ) - CS )", "obj1": 0.6778242677824268, "obj2": 0.1377486087475927}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( RRSe,RCSe ) - Max( Max( MUC,( RMSe * RRSe ) ),RMSe ) )", "obj1": 0.9895397489539749, "obj2": 0.003405990334014399}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( Min( MUR ,RMSe ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.017642425437976922}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / ( ( CRS - PN ) / Min( Const ,ACS ) ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,CS ) ,MUR ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.005080550253507443}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.044814236474917044}, {"determining": "( MRS - ( Max( CRS,AMS ) + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( Min( Max( MUR,MUR ) ,( ( MUR + DS ) - ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( DDR ,BR ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / ( ( CRS - PN ) / Min( Const ,ACS ) ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,MUM ) ,MUR ) - CS )", "obj1": 0.9853556485355649, "obj2": 0.0045453720082103315}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem_Server * BR ) - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.897489539748954, "obj2": 0.033226050567627355}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( ( CRS - PN ),Min( Const ,ACS ) ) ) ) - ( Max( ( MRS + FirstVNF_CPU ),( RRS - ( CRS - BR ) ) ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( CS - Min( RRSe ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.043896438271152714}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.04832956699547904}], "37": [{"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ACS - ( Min( ACS ,ARS ) + MDR ) ) ) + ( CRS / RRS ) )", "choosing": "( MUR - Max( ( ( DS * ( ( ( ( RMSe + DS ) - RRSe ) * CS ) / ( MUR * ( RRSe + ( DS - RMSe ) ) ) ) ) + Max( CS,RRSe ) ),Min( MUR ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS - ACS ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) ) - ( ( ( Max( ( DS / DS ),MUC ) / Max( ( DS * Max( DS,RRSe ) ),( ( RCSe + MUR ) * RMSe ) ) ) / RMSe ) * ( ( ( ( Min( Min( MUM ,DS ) ,( RMSe + RMSe ) ) / RMSe ) - Max( RMSe,( RMSe - MUR ) ) ) / Max( RCSe,MUR ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + Min( ( ( ( RRS * FirstVNF_CPU_Server ) / ( AMS * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM ) - CRS ) / Min( Const ,ACS ) ) ) ) ,( FirstVNF_RAM + AMS ) ) ) )", "choosing": "( ( RCSe + ( ( MUC + ( DS / Max( ( MLU + MUC ),( ( RMSe / RCSe ) * MUM ) ) ) ) / DS ) ) - ( ( ( Min( MLU ,RMSe ) * Min( MUC ,MUM ) ) / MLU ) * ( ( DS / Max( MUR,RCSe ) ) - RMSe ) ) )", "obj1": 0.5794979079497908, "obj2": 0.24223432695799987}, {"determining": "( ACS - ( ( MDR + ( ACS - ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Max( MUC,CS ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( Max( MLU,RCSe ) * MUC ) * RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( PN - Max( MRS,FirstVNF_CPU_Server ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( RCSe + ( MLU * ( RRSe / ( CS - MLU ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.07032988550112654}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( CRS - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( Min( Min( RRSe ,( MUM / MUM ) ) ,( RMSe + MLU ) ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02456216885532697}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6924686192468619, "obj2": 0.12654245322325838}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( RRSe,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9811715481171548, "obj2": 0.005637454358554413}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( FirstVNF_Mem_Server + PN ) - Max( ( Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * ACS ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ),MDR ) )", "choosing": "( ( DS / ( CS * MUR ) ) - ( ( ( ( Max( RCSe,Min( MUR ,MUC ) ) - ( DS / MUC ) ) * ( MUR * MUM ) ) - RMSe ) / MLU ) )", "obj1": 0.9121338912133892, "obj2": 0.02746352724040611}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server + ( FirstVNF_CPU / CRS ) ) ) + CRS ) - ( FirstVNF_Mem_Server + MRS ) ) - FirstVNF_CPU ) - Max( MDR,( ARS - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( Min( Max( ( CS / DS ),RRSe ) ,MUR ) + MUM ) * ( ( ( Max( MLU,MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( ( ( ( Max( RCSe,MUC ) * DS ) / MUC ) + MUC ) * ( RCSe / RCSe ) ) - MUR ) )", "obj1": 0.8744769874476988, "obj2": 0.04126467236805525}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( ( Min( DDR ,( MRS * Const ) ) - ( DDR + ( ( ( RRS - PN ) / ( BR * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( MUR,Min( CS ,RMSe ) ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06483487656362646}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( ( CRS - PN ),Min( Const ,ACS ) ) ) ) - ( Max( ( MRS + FirstVNF_CPU ),( RRS - ( CRS - BR ) ) ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( CS - Min( RRSe ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.043896438271152714}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) + FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( ( ( ( ACS * FirstVNF_Mem_Server ) + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( MUM ,RCSe ) ) * ( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + Min( ( DS - Max( ( RCSe - MUC ),CS ) ) ,( ( DS * MUR ) * MUR ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.08748685775405209}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( MRS - ( Max( CRS,AMS ) + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( Min( Max( MUR,MUR ) ,( ( MUR + DS ) - ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.022968597775671735}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( ( FirstVNF_RAM * AMS ) - PN ) / ( Const - ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07102069842500548}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8305439330543933, "obj2": 0.05698126209257837}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( Const * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( CRS + ( CRS - ( PN + Min( MRS ,( ( DDR + ( FirstVNF_RAM + MDR ) ) * DDR ) ) ) ) ) )", "choosing": "( ( ( MUM + ( MUR - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RMSe,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9686192468619247, "obj2": 0.009477166723789844}, {"determining": "( ( ( ( DDR + ( ( ( MDR * RRS ) / ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( Const + ( ( ( CRS - PN ) / ( Min( CRS ,BR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( DS - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05135300083707736}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8179916317991632, "obj2": 0.061567754509228426}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * AMS ) ) ) - FirstVNF_CPU ) - Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( Max( Max( RCSe,CS ),RMSe ) - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( ( MLU - RMSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6903765690376569, "obj2": 0.1268339301281848}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( ( Max( BR,( AMS + ( ( PN - BR ) * Const ) ) ) + ARS ) - ( Min( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ( Max( FirstVNF_CPU,AMS ) * MRS ) ) ) * Max( ARS,FirstVNF_Mem_Server ) ) ,DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( RMSe + ( MLU / MUM ) ) ,Max( CS,MUM ) ) * ( ( ( MUM + ( Max( ( RMSe + RRSe ),Min( MUM ,RCSe ) ) - MUR ) ) / RCSe ) + RCSe ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06260359432635973}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7280334728033473, "obj2": 0.10096345170281842}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( MUR,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06483487656362646}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + MUM ) ) + RMSe ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.0465764291664745}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7280334728033473, "obj2": 0.10096345170281842}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( CRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) / Min( CRS ,Const ) ) * Min( ( RRS - ( FirstVNF_RAM / ( DDR - PN ) ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( ( MUM / ( MUC + Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( CS,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_RAM_Server - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( MUM + DS ) ) ) ,RCSe ) ) ,( ( MUR + MUC ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.9393305439330544, "obj2": 0.019652690283584868}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( FirstVNF_Mem_Server * BR ) - PN ) / FirstVNF_CPU ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( CS,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9456066945606695, "obj2": 0.016663813264589704}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( Min( MUR ,RMSe ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.017642425437976922}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( Const * FirstVNF_Mem_Server ) - ( DDR + ( ( ( Max( FirstVNF_Mem_Server,PN ) / Max( MDR,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MUC / Min( MUM ,( ( MUR + DS ) * ( DS - ( ( Max( RCSe,DS ) - RMSe ) + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.048112056817774945}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9309623430962343, "obj2": 0.021554390918116353}, {"determining": "( FirstVNF_RAM - ( DDR + ( Max( ( DDR + ( DDR - ( CRS / ( Const + ACS ) ) ) ),Min( ACS ,Const ) ) * Min( ( ( MRS + BR ) - RRS ) ,MRS ) ) ) )", "choosing": "( Max( ( DS * Min( Min( CS ,MUC ) ,( ( ( CS + ( MLU * MUM ) ) - ( DS + CS ) ) / Min( CS ,DS ) ) ) ),CS ) * ( MUC * MLU ) )", "obj1": 0.5962343096234309, "obj2": 0.21702870500565244}, {"determining": "( FirstVNF_Mem - ( DDR + ( ( RRS + Min( DDR ,PN ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( MUC ,CS ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( Min( ( MUM + Min( Max( RMSe,MUR ) ,CS ) ) ,Min( RCSe ,MUM ) ) / MUM ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( Const * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9686192468619247, "obj2": 0.009477166723789844}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( Max( MDR,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( RRS / AMS ) - ( ( PN - CRS ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS + Max( MUR,RCSe ) ) - RMSe ) / ( MUM + Min( DS ,RMSe ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.04937701265258639}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ARS ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( MLU * ( MLU - MUR ) ) / RCSe ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01584456040878077}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( ( RMSe / ( MUC * MLU ) ) - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( Max( MUM,MUC ) - MUM ) ) ) - CS )", "obj1": 0.7112970711297071, "obj2": 0.11079266484968761}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server / MDR ),ARS ) ) ,AMS ) + PN ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - Max( MDR,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,( DS + RMSe ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RCSe,MUR ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.1167393172432576}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( Max( RRS,( Max( RRS,ACS ) - ( ( CRS - PN ) / Min( ARS ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe + RRSe ) ) * Min( MLU ,MUR ) ) / RCSe ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.01584456040878077}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( ( ARS + BR ) * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU * DS ) ) ) ) - CS )", "obj1": 0.9916317991631799, "obj2": 0.002533647314781378}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8598326359832636, "obj2": 0.04548906487462433}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / ( DDR - PN ) ) ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Max( ( MUM / MUR ),( DS + ( MUR * CS ) ) ) ) ) ) - ( DS + RRSe ) )", "obj1": 0.9644351464435147, "obj2": 0.01103810782462298}], "38": [{"determining": "( Max( ( ( DDR / ARS ) * ARS ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "( CS - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * RCSe ) ) ) ),( Min( MUR ,( MLU - Min( CS ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ACS - ( Min( ACS ,ARS ) + MDR ) ) ) + ( CRS / RRS ) )", "choosing": "( MUR - Max( ( ( DS * ( ( ( ( RMSe + DS ) - RRSe ) * CS ) / ( MUR * ( RRSe + ( DS - RMSe ) ) ) ) ) + Max( CS,RRSe ) ),Min( MUR ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( PN - Max( MRS,FirstVNF_CPU_Server ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( RCSe + ( MLU * ( RRSe / ( CS - MLU ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.07032988550112654}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( MUR,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.06524521013790151}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( ( CRS - PN ),Min( Const ,ACS ) ) ) ) - ( Max( ( MRS + FirstVNF_CPU ),( RRS - ( CRS - BR ) ) ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( CS - Min( RRSe ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.043896438271152714}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5815899581589958, "obj2": 0.23870517186483842}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8305439330543933, "obj2": 0.05659506604172162}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( CRS - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( Min( Min( RRSe ,( MUM / MUM ) ) ,( RMSe + MLU ) ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02456216885532697}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05135300083707736}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9121338912133892, "obj2": 0.02717564786027923}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( ( CRS / ACS ) - ( Max( ( ARS / RRS ),( Max( RRS,Min( MDR ,FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - Const ) ) ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( MUR - ( Max( Max( RMSe,Min( MUR ,MUC ) ),MLU ) / Min( MUM ,( ( MUR + RCSe ) * Min( DS ,MLU ) ) ) ) )", "obj1": 0.7782426778242678, "obj2": 0.07935842687340249}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) + FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( ( ( ( ACS * FirstVNF_Mem_Server ) + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( MUM ,RCSe ) ) * ( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + Min( ( DS - Max( ( RCSe - MUC ),CS ) ) ,( ( DS * MUR ) * MUR ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.08748685775405209}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( RRSe,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9811715481171548, "obj2": 0.005637454358554413}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_RAM_Server - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( MUM + DS ) ) ) ,RCSe ) ) ,( ( MUR + MUC ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.9393305439330544, "obj2": 0.019652690283584868}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( RRSe,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9811715481171548, "obj2": 0.005637454358554413}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07542378505957659}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( ( FirstVNF_RAM * AMS ) - PN ) / ( Const - ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( MLU + ( Max( MUC,RMSe ) - Max( MUR,MUM ) ) ) - CS )", "obj1": 0.7928870292887029, "obj2": 0.07102069842500548}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7112970711297071, "obj2": 0.10898361170870398}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8598326359832636, "obj2": 0.04548906487462433}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ARS ,ACS ) ) ) ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( MLU * ( MLU - RMSe ) ) / RCSe ) - CS )", "obj1": 0.8179916317991632, "obj2": 0.06109467765000711}, {"determining": "( ( Max( BR,( AMS + ( ( PN - BR ) * Const ) ) ) + ARS ) - ( Min( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ( Max( FirstVNF_CPU,AMS ) * MRS ) ) ) * Max( ARS,FirstVNF_Mem_Server ) ) ,DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( RMSe + ( MLU / MUM ) ) ,Max( CS,MUM ) ) * ( ( ( MUM + ( Max( ( RMSe + RRSe ),Min( MUM ,RCSe ) ) - MUR ) ) / RCSe ) + RCSe ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06260359432635973}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( Const * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9686192468619247, "obj2": 0.009477166723789844}, {"determining": "( ( ( AMS * RRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( MUR / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,( ( Min( RRSe ,MUR ) - MUC ) - MLU ) ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.102698198365156}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - Min( FirstVNF_RAM ,( Min( ACS ,FirstVNF_RAM_Server ) * AMS ) ) ) - ( MDR - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( ( MUM / Min( MUC ,MUM ) ) ,Max( Max( MUM,Min( DS ,MUC ) ),( ( Min( CS ,MLU ) * Min( DS ,DS ) ) * MUC ) ) ) - ( MUC / CS ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( RMSe + ( DS / Max( MUR,RCSe ) ) ),( MUR * RMSe ) ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( ( ARS + BR ) * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU * DS ) ) ) ) - CS )", "obj1": 0.9916317991631799, "obj2": 0.002533647314781378}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16654983580718064}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ( ( CRS - PN ) / ( Const + ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.015134926997721608}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.04651037400378868}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Max( FirstVNF_Mem_Server,DDR ) ,AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( Min( MUR ,RMSe ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( RRSe,Min( MUR ,RMSe ) ) ) ) - ( ( ( MUR * ( ( RCSe / MUM ) - Max( DS,Max( ( DS - RCSe ),RMSe ) ) ) ) + ( MLU / RMSe ) ) / ( CS - RCSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.013894361222150507}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( RCSe / RMSe ) ,MUC ) ,RCSe ) * RMSe ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( ( ARS + BR ) * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( MUM + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU * DS ) ) ) ) - CS )", "obj1": 0.9916317991631799, "obj2": 0.002533647314781378}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.017617936874894397}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + Min( ( ( ( RRS * FirstVNF_CPU_Server ) / ( AMS * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM ) - CRS ) / Min( Const ,ACS ) ) ) ) ,( FirstVNF_RAM + AMS ) ) ) )", "choosing": "( ( RCSe + ( ( MUC + ( DS / Max( ( MLU + MUC ),( ( RMSe / RCSe ) * MUM ) ) ) ) / DS ) ) - ( ( ( Min( MLU ,RMSe ) * Min( MUC ,MUM ) ) / MLU ) * ( ( DS / Max( MUR,RCSe ) ) - RMSe ) ) )", "obj1": 0.5794979079497908, "obj2": 0.24223432695799987}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server / MDR ),ARS ) ) ,AMS ) + PN ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - Max( MDR,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,( DS + RMSe ) ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RCSe,MUR ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.700836820083682, "obj2": 0.1167393172432576}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9309623430962343, "obj2": 0.021554390918116353}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10460130446440596}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS / PN ) / ( ( CRS - BR ) - BR ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( ( MUM * MUM ) / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7280334728033473, "obj2": 0.10096345170281842}, {"determining": "( MRS - ( Max( CRS,AMS ) + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( Min( Max( MUR,MUR ) ,( ( MUR + DS ) - ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( Const * FirstVNF_Mem_Server ) - ( DDR + ( ( ( Max( FirstVNF_Mem_Server,PN ) / Max( MDR,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MUC / Min( MUM ,( ( MUR + DS ) * ( DS - ( ( Max( RCSe,DS ) - RMSe ) + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.08971457413410301}, {"determining": "( ( Max( MDR,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( RRS / AMS ) - ( ( PN - CRS ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS + Max( MUR,RCSe ) ) - RMSe ) / ( MUM + Min( DS ,RMSe ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.04937701265258639}, {"determining": "( ACS - ( ( MDR + ( ACS - ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Max( MUC,CS ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( Max( MLU,RCSe ) * MUC ) * RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( Const * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( CRS + ( CRS - ( PN + Min( MRS ,( ( DDR + ( FirstVNF_RAM + MDR ) ) * DDR ) ) ) ) ) )", "choosing": "( ( ( MUM + ( MUR - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( RMSe,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9686192468619247, "obj2": 0.009477166723789844}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10792474036726737}, {"determining": "( ( ( ( DDR + ( ( ( MDR * RRS ) / ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( Const + ( ( ( CRS - PN ) / ( Min( CRS ,BR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( DS - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5815899581589958, "obj2": 0.23870517186483842}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server / Max( Min( ( CRS * Min( FirstVNF_RAM_Server ,( PN * FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ),PN ) ) ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / ( RRSe * MUM ) ) + Max( Min( MLU ,Max( MUR,( ( RCSe - Max( RMSe,CS ) ) * MUM ) ) ),RCSe ) ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5794979079497908, "obj2": 0.24223432695799987}], "39": [{"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( PN - FirstVNF_CPU ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) + CRS ) - ( Min( FirstVNF_CPU ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( CRS - RRS ) / Min( Const ,AMS ) ) )", "choosing": "( Min( MUR ,MLU ) - ( ( CS + ( DS / MUR ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR / ARS ) * ARS ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "( CS - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * RCSe ) ) ) ),( Min( MUR ,( MLU - Min( CS ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ACS - ( ( MDR + ( ACS - ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( Max( MUC,CS ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / ( ( Max( MLU,RCSe ) * MUC ) * RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( ( CRS - PN ),Min( Const ,ACS ) ) ) ) - ( Max( ( MRS + FirstVNF_CPU ),( RRS - ( CRS - BR ) ) ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( CS - Min( RRSe ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.043896438271152714}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5815899581589958, "obj2": 0.23870517186483842}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( ( Max( Min( ( RRS / MRS ) ,FirstVNF_CPU_Server ),( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( MRS / Min( Const ,ACS ) ) ) ) )", "choosing": "( Max( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ),( DS + CS ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06907147290552268}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.06500933416442195}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MUR,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7782426778242678, "obj2": 0.07801619608049953}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) + FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( ( ( ( ACS * FirstVNF_Mem_Server ) + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( MUM ,RCSe ) ) * ( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + Min( ( DS - Max( ( RCSe - MUC ),CS ) ) ,( ( DS * MUR ) * MUR ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.08748685775405209}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.017617936874894397}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( Max( Min( DDR ,RRS ),FirstVNF_CPU ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU + RRSe ) - Min( DS ,( Max( RCSe,( RMSe + DS ) ) + ( RCSe + MUR ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.14705293829369462}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( CRS - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( Min( Min( RRSe ,( MUM / MUM ) ) ,( RMSe + MLU ) ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02456216885532697}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( FirstVNF_RAM_Server - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( MUM + DS ) ) ) ,RCSe ) ) ,( ( MUR + MUC ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.9393305439330544, "obj2": 0.019652690283584868}, {"determining": "( ( Max( BR,( AMS + ( ( PN - BR ) * Const ) ) ) + ARS ) - ( Min( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ( Max( FirstVNF_CPU,AMS ) * MRS ) ) ) * Max( ARS,FirstVNF_Mem_Server ) ) ,DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( RMSe + ( MLU / MUM ) ) ,Max( CS,MUM ) ) * ( ( ( MUM + ( Max( ( RMSe + RRSe ),Min( MUM ,RCSe ) ) - MUR ) ) / RCSe ) + RCSe ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06260359432635973}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( Max( MDR,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( RRS / AMS ) - ( ( PN - CRS ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS + Max( MUR,RCSe ) ) - RMSe ) / ( MUM + Min( DS ,RMSe ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.04937701265258639}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS / PN ) / ( ( CRS - BR ) - BR ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( ( MUM * MUM ) / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7280334728033473, "obj2": 0.10096345170281842}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( MRS - ( Max( CRS,AMS ) + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( Min( Max( MUR,MUR ) ,( ( MUR + DS ) - ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( Const * FirstVNF_Mem_Server ) - ( DDR + ( ( ( Max( FirstVNF_Mem_Server,PN ) / Max( MDR,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( MUC / Min( MUM ,( ( MUR + DS ) * ( DS - ( ( Max( RCSe,DS ) - RMSe ) + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16955243316193722}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( ( CRS - PN ) / ( Const + ACS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010080450054188657}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ( ( CRS - PN ) / ( Const + ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) * ( Max( MLU,MUR ) * CS ) ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9497907949790795, "obj2": 0.015129116179388407}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( AMS + AMS ) * ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( CRS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MUC ) + CS ) - ( ( MLU / RMSe ) * ( RMSe + ( DS / Max( MUR,RCSe ) ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( DS,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9309623430962343, "obj2": 0.021554390918116353}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.04651037400378868}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8305439330543933, "obj2": 0.05659506604172162}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16654983580718064}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( ( ARS + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUM ) + DS ) + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU * DS ) ) ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.0037769207255162543}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,( MUM - MUM ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8410041841004184, "obj2": 0.053101828443820956}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ( DDR / ARS ) * ARS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,MUR ) - CS )", "obj1": 0.9246861924686193, "obj2": 0.024487818477710286}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9121338912133892, "obj2": 0.02717564786027923}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( RRS ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS - RCSe ) * MUC ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.057967395235233164}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.10789467818319853}, {"determining": "( ( ( RRS - PN ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * CS ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.9769874476987448, "obj2": 0.006926086954008861}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( RRSe,Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.11161405495089613}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS + Max( MUR,RCSe ) ) - RMSe ) / ( MUM + Min( DS ,RMSe ) ) ) - CS )", "obj1": 0.9288702928870293, "obj2": 0.0221879562334732}, {"determining": "( Min( PN ,ACS ) - ( ( ( FirstVNF_RAM_Server * ( ACS / MDR ) ) * ( RRS - ( FirstVNF_Mem_Server / CRS ) ) ) - ARS ) )", "choosing": "( ( ( RCSe / RCSe ) - ( MUC + MLU ) ) * ( MUC * DS ) )", "obj1": 0.600418410041841, "obj2": 0.21094510677980255}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ARS - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) - ( MDR / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) * Max( MLU,Max( DS,MLU ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( AMS * RRS ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( MUR / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,( ( Min( RRSe ,MUR ) - MUC ) - MLU ) ) ) ) ) - CS )", "obj1": 0.7259414225941423, "obj2": 0.102698198365156}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( ( ( DS / ( MUM * RMSe ) ) - CS ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9748953974895398, "obj2": 0.008858779470765013}, {"determining": "( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + Min( ( ( ( RRS * FirstVNF_CPU_Server ) / ( AMS * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM ) - CRS ) / Min( Const ,ACS ) ) ) ) ,( FirstVNF_RAM + AMS ) ) ) )", "choosing": "( ( RCSe + ( ( MUC + ( DS / Max( ( MLU + MUC ),( ( RMSe / RCSe ) * MUM ) ) ) ) / DS ) ) - ( ( ( Min( MLU ,RMSe ) * Min( MUC ,MUM ) ) / MLU ) * ( ( DS / Max( MUR,RCSe ) ) - RMSe ) ) )", "obj1": 0.5794979079497908, "obj2": 0.24223432695799987}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ( ( Min( CRS ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ARS ,ACS ) ) ) ) - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( ( MLU * ( MLU - RMSe ) ) / RCSe ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.07032988550112654}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( ( ( Max( ( MUC - MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) * MUR ),Min( RCSe ,MUC ) ) ) / ( ( ( ( MUC + ( RMSe / MLU ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7656903765690377, "obj2": 0.08131840221615012}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( MUR,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05063933044638859}, {"determining": "( ( ( ( DDR + ( ( ( MDR * RRS ) / ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( Const + ( ( ( CRS - PN ) / ( Min( CRS ,BR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( DS - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( RRSe,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9811715481171548, "obj2": 0.005637454358554413}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9121338912133892, "obj2": 0.02717564786027923}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( RRSe,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.05026482189562092}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}], "40": [{"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( PN - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( ( ( DS / ( MUM * RMSe ) ) - CS ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),MUC ) ) + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( PN - FirstVNF_CPU ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) + CRS ) - ( Min( FirstVNF_CPU ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( CRS - RRS ) / Min( Const ,AMS ) ) )", "choosing": "( Min( MUR ,MLU ) - ( ( CS + ( DS / MUR ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5815899581589958, "obj2": 0.23870517186483842}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MUR,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7782426778242678, "obj2": 0.07801619608049953}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.10789467818319853}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) - ( ( ( ( ( FirstVNF_CPU * MRS ) + MDR ) / Min( RRS ,MRS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - RRS ) ) + ( ( CRS - PN ) / Min( Min( MRS ,BR ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - FirstVNF_CPU_Server ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( ( ( Min( RCSe ,MUM ) + DS ) * ( MLU + MUR ) ) * Max( ( ( DS / Max( MUR,( MUM * RRSe ) ) ) + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6861924686192469, "obj2": 0.13139532141235016}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( ( DDR + ( ( ( MDR * RRS ) / ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( Const + ( ( ( CRS - PN ) / ( Min( CRS ,BR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( DS - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( PN * DDR ) ,( ( ( CRS - PN ) + Max( FirstVNF_Mem_Server,PN ) ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( DDR / PN ),Const ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ARS ) )", "choosing": "( Min( ( ( ( MUR + CS ) / MUR ) + Max( ( RMSe + DS ),RCSe ) ) ,DS ) - ( Max( ( RRSe + RMSe ),CS ) / ( ( ( Min( Min( MLU ,RRSe ) ,MUM ) + DS ) * Max( ( ( ( DS - RRSe ) / Max( RCSe,MUR ) ) / RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.6715481171548117, "obj2": 0.144081803985316}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( Min( BR ,( Max( MRS,( FirstVNF_Mem_Server * ( ( RRS + BR ) + ( CRS - FirstVNF_Mem ) ) ) ) - MDR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( RCSe * CS ),Min( DS ,MUM ) ) * MUC ) - ( MUR + ( DS / MUC ) ) ) ) ) ) - ( ( MLU / ( MUC * Min( MLU ,MUM ) ) ) * ( RCSe + ( MUM + MUC ) ) ) )", "obj1": 0.5606694560669456, "obj2": 0.27245369269726466}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( ( CRS - PN ),Min( Const ,ACS ) ) ) ) - ( Max( ( MRS + FirstVNF_CPU ),( RRS - ( CRS - BR ) ) ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( CS - Min( RRSe ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.043896438271152714}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + Min( ( ( ( RRS * FirstVNF_CPU_Server ) / ( AMS * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM ) - CRS ) / Min( Const ,ACS ) ) ) ) ,( FirstVNF_RAM + AMS ) ) ) )", "choosing": "( ( RCSe + ( ( MUC + ( DS / Max( ( MLU + MUC ),( ( RMSe / RCSe ) * MUM ) ) ) ) / DS ) ) - ( ( ( Min( MLU ,RMSe ) * Min( MUC ,MUM ) ) / MLU ) * ( ( DS / Max( MUR,RCSe ) ) - RMSe ) ) )", "obj1": 0.5794979079497908, "obj2": 0.24223432695799987}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Max( FirstVNF_CPU,ACS ) ,ACS ) ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( Min( MUM ,( ( MLU + MLU ) - Max( Min( MUM ,( Max( MUR,RCSe ) * DS ) ),Min( MUC ,MUR ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.11113228486700859}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( Max( RRS,FirstVNF_Mem_Server ) - ( Max( CRS,PN ) / Min( Const ,ACS ) ) ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( MLU - RRSe ) ) ,MUR ) - CS )", "obj1": 0.9393305439330544, "obj2": 0.01892285913109759}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( Max( MDR,CRS ) - FirstVNF_CPU ) - ( MDR - ( ( RRS / AMS ) - ( ( PN - CRS ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS + Max( MUR,RCSe ) ) - RMSe ) / ( MUM + Min( DS ,RMSe ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.04937701265258639}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( RRSe,RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - RCSe )", "obj1": 0.9707112970711297, "obj2": 0.008824941060141363}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06663768513032672}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.04651037400378868}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03228810912126633}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( CRS - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( Min( Min( RRSe ,( MUM / MUM ) ) ,( RMSe + MLU ) ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( MUM + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02456216885532697}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.06500933416442195}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16654983580718064}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,DDR ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) + FirstVNF_CPU ) - Min( Min( MRS ,Min( Const ,Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( ( ( ( ACS * FirstVNF_Mem_Server ) + BR ) - FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( DS + Min( MUM ,RCSe ) ) * ( ( ( RCSe / Max( MUR,MLU ) ) + RMSe ) - Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS + ( MLU * DS ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( DS + Min( ( DS - Max( ( RCSe - MUC ),CS ) ) ,( ( DS * MUR ) * MUR ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.08748685775405209}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ( DDR / ARS ) * ARS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,MUR ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02693838139667502}, {"determining": "( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - PN ) / ( DDR / ARS ) ) * ( ( CRS - PN ) / ( Const + ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) * ( Max( MLU,MUR ) * CS ) ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + ( Min( MUR ,( MLU - Min( CS ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.013889279181604512}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( FirstVNF_RAM - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.017219144409500092}, {"determining": "( ( Max( BR,( AMS + ( ( PN - BR ) * Const ) ) ) + ARS ) - ( Min( ( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ( Max( FirstVNF_CPU,AMS ) * MRS ) ) ) * Max( ARS,FirstVNF_Mem_Server ) ) ,DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( RMSe + ( MLU / MUM ) ) ,Max( CS,MUM ) ) * ( ( ( MUM + ( Max( ( RMSe + RRSe ),Min( MUM ,RCSe ) ) - MUR ) ) / RCSe ) + RCSe ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06260359432635973}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * ( ( MLU * ( ( DS * CS ) * CS ) ) + ( ( MUR / MUC ) * Min( ( ( RCSe - MUM ) - MUC ) ,MLU ) ) ) ) ) - MUR )", "obj1": 0.8138075313807531, "obj2": 0.06260359432635973}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( ( ARS + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUM ) + DS ) + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU * DS ) ) ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.0037769207255162543}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( RMSe ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - DS ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( RCSe - Max( ( RRSe * MUC ),MLU ) ) ) ) ) ) - CS )", "obj1": 0.9246861924686193, "obj2": 0.02396155638735339}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( RRS ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS - RCSe ) * MUC ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.057967395235233164}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08468496719965504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.9414225941422594, "obj2": 0.017617936874894397}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.06553595607228825}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * Max( DS,RCSe ) ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.600418410041841, "obj2": 0.20952729897996317}, {"determining": "( ( ( ( DDR + ( FirstVNF_CPU / PN ) ) * DDR ) - CRS ) - ( FirstVNF_Mem - Max( Max( Max( ( MRS * FirstVNF_CPU ),FirstVNF_Mem ),( PN * DDR ) ),Const ) ) )", "choosing": "( Min( Max( MLU,Min( ( CS / RRSe ) ,Max( MUC,MUC ) ) ) ,( ( Min( MLU ,MUC ) + ( Min( ( ( RRSe / MUC ) * CS ) ,( CS - Min( MUC ,CS ) ) ) - RCSe ) ) - ( Min( RRSe ,MUC ) + MUR ) ) ) - ( Max( Min( CS ,( MUR - MUC ) ),CS ) / Min( ( ( MUC + RMSe ) * MLU ) ,DS ) ) )", "obj1": 0.8786610878661087, "obj2": 0.03958147625406121}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04437088667388648}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( DDR + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.7866108786610879, "obj2": 0.07277132943919414}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ) ) - CS )", "obj1": 0.797071129707113, "obj2": 0.06983287457515945}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,( MUM - MUM ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8577405857740585, "obj2": 0.04531164686233138}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.055626652789705695}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( ( Min( DDR ,ACS ) - ( DDR + ( ( ( CRS - PN ) / ( DDR * FirstVNF_RAM_Server ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( Const + AMS ) - ( Max( FirstVNF_Mem_Server,RRS ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - ( MUM / ( MUM / RMSe ) ) ) / ( MUM + ( ( DS / Max( Min( RCSe ,MUM ),Max( MUM,MUR ) ) ) + RMSe ) ) ) - Max( ( Max( CS,MUM ) * MUC ),RRSe ) )", "obj1": 0.9309623430962343, "obj2": 0.021554390918116353}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) - RRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( Max( ( MUC - MUM ),RCSe ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9644351464435147, "obj2": 0.010748880279544716}, {"determining": "( ( ( Min( DDR ,RRS ) - ( DDR + ( ( ( CRS - DDR ) / ( FirstVNF_Mem - RRS ) ) * ( ( CRS - PN ) / ( Const + ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( Min( MRS ,( MRS * PN ) ),FirstVNF_Mem ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MUR ) ,( RMSe - DS ) ) * ( Max( MLU,MUR ) * CS ) ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,DS ) ) ) / ( MUM + Max( ( Max( Max( MUC,CS ),RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9602510460251046, "obj2": 0.011964226960559625}, {"determining": "( MRS - ( Max( CRS,AMS ) + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( Min( Max( MUR,MUR ) ,( ( MUR + DS ) - ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) / DS ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}], "41": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR + ( ( ACS - ( ACS + ( MRS / FirstVNF_RAM_Server ) ) ) * ACS ) ) - ( MDR + ( Min( FirstVNF_Mem ,FirstVNF_Mem ) * ( Const * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( PN - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,Const ) ) ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( Min( Min( RCSe ,RMSe ) ,( ( ( DS / ( MUM * RMSe ) ) - CS ) + ( ( Min( RMSe ,RRSe ) - ( RRSe + MLU ) ) - RRSe ) ) ) - ( Max( DS,RCSe ) / MUR ) ) / ( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),MUC ) ) + ( Min( MUR ,( MUR / MLU ) ) - DS ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( BR / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( ARS - FirstVNF_RAM ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( RCSe,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( RMSe / RMSe ) * ( DS - MUM ) ) ),Min( CS ,MUC ) ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.048573439523072096}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - Max( DDR,( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( FirstVNF_CPU_Server - BR ) ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / MUR ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008193764510471248}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( RMSe,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2904738690039079}, {"determining": "( ( ( ( DDR + ( ( ( MDR * RRS ) / ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( Const + ( ( ( CRS - PN ) / ( Min( CRS ,BR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( DS - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( Min( ARS ,CRS ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ( DDR / ARS ) * ARS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,MUR ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02693838139667502}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,MDR ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ACS ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6422594142259415, "obj2": 0.16654983580718064}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( Max( BR,DDR ) - ( MDR - ( ( DDR + ( PN + ACS ) ) * ( ( PN - AMS ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( CS - ( Max( ( DS + ( RCSe * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( CS * RRSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.043516512455149835}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( FirstVNF_RAM - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.017219144409500092}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( DDR - Min( ( CRS + RRS ) ,( ( BR - Const ) + ( ( FirstVNF_Mem_Server + MDR ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR / DS ) - DS ) ,( ( MUR * DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( ( ( ( DS * MLU ) / Min( MLU ,( ( MUM / MUM ) * MUM ) ) ) - RMSe ) - Min( RRSe ,( RMSe - DS ) ) ) + Max( RCSe,CS ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27299528551847163}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - CRS ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,DS ) - Min( MUR ,RMSe ) )", "obj1": 0.9539748953974896, "obj2": 0.013848287619948238}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Max( FirstVNF_CPU,ACS ) ,ACS ) ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( Min( MUM ,( ( MLU + MLU ) - Max( Min( MUM ,( Max( MUR,RCSe ) * DS ) ),Min( MUC ,MUR ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.11113228486700859}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.10789467818319853}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ( ( ARS + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUM ) + DS ) + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU * DS ) ) ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.0037769207255162543}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) - RRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / CS ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Max( Max( ( MUC - MUM ),RCSe ),( CS - CS ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9644351464435147, "obj2": 0.010733189133137167}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,ARS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU * Const ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( MUR * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( ( RCSe - MUR ) ,RMSe ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.057106116373697134}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MUR,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7782426778242678, "obj2": 0.07801619608049953}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.04651037400378868}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.07930445701731959}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.02421150031155931}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Const ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MUR,RCSe ) * MUM ),( RCSe - Max( MUR,RCSe ) ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7594142259414226, "obj2": 0.086753028938685}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.055626652789705695}, {"determining": "( ( ( ( CRS - PN ) / ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9707112970711297, "obj2": 0.008781423715359832}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ) ) - CS )", "obj1": 0.797071129707113, "obj2": 0.06983287457515945}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const + ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU + ( AMS - RRS ) ) - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / Max( Min( DS ,MLU ),Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06663768513032672}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.06551256205990298}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( CRS ,CRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7615062761506276, "obj2": 0.08459223301444349}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8117154811715481, "obj2": 0.06315270171812085}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( CS * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.06500933416442195}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( FirstVNF_RAM_Server * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ),( RCSe - Max( Min( ( Max( MUC,Max( MUC,RCSe ) ) - ( MUC / MLU ) ) ,( Max( ( MUC - MUM ),CS ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9895397489539749, "obj2": 0.003138772485118232}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( DS / ( MUM * ( ( MLU * ( ( DS * CS ) * CS ) ) + ( ( MUR / MUC ) * Min( ( ( RCSe - MUM ) - MUC ) ,MLU ) ) ) ) ) - MUR )", "obj1": 0.8138075313807531, "obj2": 0.06260359432635973}, {"determining": "( ( ( Min( DDR ,RRS ) - ( DDR + ( ( ( CRS - DDR ) / ( FirstVNF_Mem - RRS ) ) * ( ( CRS - PN ) / ( Const + ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( Min( MRS ,( MRS * PN ) ),FirstVNF_Mem ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MUR ) ,( RMSe - DS ) ) * ( Max( MLU,MUR ) * CS ) ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,DS ) ) ) / ( MUM + Max( ( Max( Max( MUC,CS ),RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9602510460251046, "obj2": 0.011964226960559625}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03228810912126633}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ( ( ( ( CRS - PN ) / ( Min( MRS ,MDR ) + DDR ) ) * ( ( ( Min( ACS ,AMS ) - BR ) + ( ( CRS - PN ) / Min( Const ,ACS ) ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - BR ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUM ) + DS ) + ( RCSe - MUR ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( RMSe,Min( RCSe ,RCSe ) ) ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MUM * DS ) ) ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.0037769207255162543}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}], "42": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ( FirstVNF_Mem * Const ) - ( MDR + ( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( FirstVNF_CPU + ( AMS - RRS ) ) - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / Max( Min( DS ,Max( MUC,( Max( ( MUR - RMSe ),Min( MLU ,CS ) ) + DS ) ) ),Max( ( Min( DS ,Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RCSe ) ) + RMSe ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) * ( Max( MLU,MUR ) * CS ) ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + Max( ( Max( Max( MUC,CS ),RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.022385138250736573}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / ( Const + ACS ) ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9456066945606695, "obj2": 0.01639554812255706}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( RMSe,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2904738690039079}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MUR,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7782426778242678, "obj2": 0.07801619608049953}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( Min( ARS ,CRS ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8556485355648535, "obj2": 0.04651037400378868}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( DDR - Min( ( CRS + RRS ) ,( ( BR - Const ) + ( ( FirstVNF_Mem_Server + MDR ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR / DS ) - DS ) ,( ( MUR * DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( ( ( ( DS * MLU ) / Min( MLU ,( ( MUM / MUM ) * MUM ) ) ) - RMSe ) - Min( RRSe ,( RMSe - DS ) ) ) + Max( RCSe,CS ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27299528551847163}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7447698744769874, "obj2": 0.09551133156378205}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - CRS ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,DS ) - Min( MUR ,RMSe ) )", "obj1": 0.9539748953974896, "obj2": 0.013848287619948238}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ( DDR / ARS ) * ARS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,MUR ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02693838139667502}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Max( FirstVNF_CPU,ACS ) ,ACS ) ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( Min( MUM ,( ( MLU + MLU ) - Max( Min( MUM ,( Max( MUR,RCSe ) * DS ) ),Min( MUC ,MUR ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.11113228486700859}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( Max( BR,DDR ) - ( MDR - ( ( DDR + ( PN + ACS ) ) * ( ( PN - AMS ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( CS - ( Max( ( DS + ( RCSe * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( CS * RRSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.043516512455149835}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( FirstVNF_CPU_Server - ( DDR + ( ( ( CRS - PN ) / Min( Min( ACS ,FirstVNF_CPU_Server ) ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - Min( DDR ,FirstVNF_RAM ) ) )", "choosing": "( CS - ( Max( RRSe,Min( RMSe ,( MUC + RMSe ) ) ) / Min( ( RMSe - ( ( MUM * DS ) - ( ( Min( DS ,RCSe ) - MUM ) * MUR ) ) ) ,RMSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.005231314727480802}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6380753138075314, "obj2": 0.16897786471161053}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8640167364016736, "obj2": 0.044137466351605516}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05135676247670022}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( Min( Max( ( PN + FirstVNF_Mem_Server ),ARS ) ,MRS ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( Min( MLU ,( ( MUR / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( ( MUR - Max( MUR,CS ) ) ,RRSe ) ) ) - CS )", "obj1": 0.9769874476987448, "obj2": 0.006898160224288894}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const + ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_CPU + ( AMS - RRS ) ) - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / Max( Min( DS ,MLU ),Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06663768513032672}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.07930445701731959}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ,( RCSe - Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0018832634910709394}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8117154811715481, "obj2": 0.06315270171812085}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_RAM,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * Max( MUC,CS ) ) ),( CS - CS ) ) ) ) - CS )", "obj1": 0.797071129707113, "obj2": 0.06983287457515945}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.06413235023659468}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( RRS / RRS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + ( Max( RMSe,RMSe ) - ( DS - CS ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.05602653962529327}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8263598326359832, "obj2": 0.05840781696678545}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.061621359762243505}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + Min( ( ( Const * ( ACS + FirstVNF_Mem ) ) / ( RRS - PN ) ) ,ACS ) ) ) - Max( DDR,MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,RRSe ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU - ( ( RMSe + MUM ) * ( RCSe * DS ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06488017264114342}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( ( ( DDR + ( ( ( MDR * RRS ) / ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( Const + ( ( ( CRS - PN ) / ( Min( CRS ,BR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( DS - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_CPU_Server ) ,MDR ) - Min( DDR ,FirstVNF_Mem ) ) - RRS ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ( PN - CRS ) / ( ( RRS + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RCSe,( ( MUM + RMSe ) * CS ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010075800108250158}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.10789467818319853}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,RCSe ) - ( DS / ( Max( ( MLU + ( Min( MUR ,CS ) + Min( MUM ,( MUR * MUC ) ) ) ),( ( MUR / ( MLU - Min( MUR ,CS ) ) ) - ( Min( RMSe ,DS ) * MUC ) ) ) + ( ( RRSe * MLU ) * MUC ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.012582770220357935}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - DDR ) / ( FirstVNF_Mem - RRS ) ) * ( ( CRS - PN ) / ( Const + ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9602510460251046, "obj2": 0.011963066088164923}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03228810912126633}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.048573439523072096}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( RCSe * DS ) ) - CS )", "obj1": 0.8179916317991632, "obj2": 0.06063169042229543}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - PN ) ) )", "choosing": "( ( MUR / ( MUM * RMSe ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.0037600351962653383}], "43": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( CRS - PN ) / ( Const + ACS ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( MDR + ( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( FirstVNF_CPU + ( AMS - RRS ) ) - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / Max( Min( DS ,Max( MUC,( Max( ( MUR - RMSe ),Min( MLU ,CS ) ) + DS ) ) ),Max( ( Min( DS ,Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) + Min( MRS ,( CRS - AMS ) ) )", "choosing": "( Min( MUM ,( Max( ( ( ( CS * MUC ) * RCSe ) * ( Min( MUC ,DS ) + ( ( MUC - CS ) - RCSe ) ) ),DS ) * ( ( Max( ( MUC * MUM ),( ( MLU / MUR ) - RRSe ) ) * ( Min( RRSe ,DS ) - CS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08884302889558307}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ( DDR / ARS ) * ARS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,MUR ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02693838139667502}, {"determining": "( ACS - ( DDR + ( Max( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ),Min( ACS ,Const ) ) * ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( MUC ,Max( MLU,MUR ) ) ,( Max( ( RRSe + CS ),( DS + CS ) ) / Max( ( Max( MLU,MLU ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( DDR - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2867257515419789}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ( Min( DDR ,BR ) - FirstVNF_CPU ) - ( MDR - ( Max( ( MDR - ( Max( FirstVNF_Mem_Server,RRS ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ),ACS ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( BR - FirstVNF_CPU_Server ) ) / ( DDR + AMS ) ) ) ) ) )", "choosing": "( Min( ( RMSe / DS ) ,DS ) - Max( MLU,RRSe ) )", "obj1": 0.9079497907949791, "obj2": 0.029384337903571582}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) - DDR )", "choosing": "( Min( RRSe ,DS ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.2120761276060573}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) * ( Max( MLU,MUR ) * CS ) ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + Max( ( Max( Max( MUC,CS ),RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.022385138250736573}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( DDR - Min( ( CRS + RRS ) ,( ( BR - Const ) + ( ( FirstVNF_Mem_Server + MDR ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR / DS ) - DS ) ,( ( MUR * DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( ( ( ( DS * MLU ) / Min( MLU ,( ( MUM / MUM ) * MUM ) ) ) - RMSe ) - Min( RRSe ,( RMSe - DS ) ) ) + Max( RCSe,CS ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27299528551847163}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( ( FirstVNF_Mem_Server * MDR ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( RMSe * ( ( ( RRSe + MLU ) / ( RRSe * DS ) ) + DS ) ) + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MLU,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09520448768612223}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( RRS / RRS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + ( Max( RMSe,RMSe ) - ( DS - CS ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.05602653962529327}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ( DDR / ARS ) * ( FirstVNF_CPU_Server * PN ) ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( MUR ,Max( MUC,( ( RCSe - ( MLU + CS ) ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ) - CS )", "obj1": 0.9246861924686193, "obj2": 0.024568157665427928}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.05135676247670022}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( CS / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Min( RMSe ,RRSe ) ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7154811715481172, "obj2": 0.10789467818319853}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( Max( BR,DDR ) - ( MDR - ( ( DDR + ( PN + ACS ) ) * ( ( PN - AMS ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( CS - ( Max( ( DS + ( RCSe * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( CS * RRSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.043516512455149835}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8493723849372385, "obj2": 0.048573439523072096}, {"determining": "( ( ( FirstVNF_CPU_Server - ( DDR + ( ( ( CRS - PN ) / Min( Min( ACS ,FirstVNF_CPU_Server ) ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - Min( DDR ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.0050155441903126305}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7949790794979079, "obj2": 0.06967525369219536}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03228810912126633}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ACS - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Min( MUR ,MUC ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16386025077269997}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_Mem ) - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( MUM ,( ( CS + RMSe ) + ( Max( MUM,CS ) / RCSe ) ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MUR,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07625885758069369}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( MDR + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) + FirstVNF_CPU ) - ( MDR - ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( Min( MUR ,RMSe ),CS ) / ( ( RRSe * Max( ( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) + RMSe ),Min( Min( Min( DS ,RCSe ) ,MUM ) ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008197800509763731}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_CPU_Server ) ,MDR ) - Min( DDR ,FirstVNF_Mem ) ) - RRS ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ( PN - CRS ) / ( ( RRS + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RCSe,( ( MUM + RMSe ) * CS ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010075800108250158}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8117154811715481, "obj2": 0.06315270171812085}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - DDR ) / ( FirstVNF_Mem - RRS ) ) * ( ( CRS - PN ) / ( Const + ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.9602510460251046, "obj2": 0.011963066088164923}, {"determining": "( ( ( Min( DDR ,( FirstVNF_RAM / ( DDR - PN ) ) ) - ( DDR + ( ( ( ( CRS - PN ) / ( Const + ACS ) ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,( DS / Max( MUR,RCSe ) ) ) ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.01702911343791391}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( FirstVNF_CPU_Server - ( CRS - RRS ) ) - ( DDR + Max( MDR,DDR ) ) )", "choosing": "( ( DS / Min( ( ( ( MUC - RMSe ) + Max( ( MUM * MUC ),( ( RCSe + MUM ) - RMSe ) ) ) * Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) ) ,( ( MUR + MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( ( ( ARS - Max( Min( AMS ,ACS ),( Max( RRS,FirstVNF_RAM ) - Max( Const,ARS ) ) ) ) / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( DS / Min( Min( RMSe ,( CS / RRSe ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( MDR - ( ( RRS * FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_Mem_Server * CRS ) - RRS ) ,ACS ) ) ) ) - ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( MUR + ( ( RCSe * CS ) / Min( DS ,( ( Min( MLU ,MLU ) + Min( RRSe ,RCSe ) ) / ( MUM * Min( RCSe ,RCSe ) ) ) ) ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05286139864604917}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.805439330543933, "obj2": 0.06413235023659468}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( ( ( Min( ARS ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( ( BR / MRS ) - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( ( FirstVNF_CPU * AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) - MLU ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.058267886677625086}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - CRS ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( FirstVNF_RAM ,DDR ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,DS ) - Min( MUR ,RMSe ) )", "obj1": 0.9539748953974896, "obj2": 0.013848287619948238}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.061621359762243505}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + Min( ( ( Const * ( ACS + FirstVNF_Mem ) ) / ( RRS - PN ) ) ,ACS ) ) ) - Max( DDR,MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,RRSe ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU - ( ( RMSe + MUM ) * ( RCSe * DS ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06488017264114342}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( Min( ARS ,CRS ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ( ( ( DDR + ( ( ( MDR * RRS ) / ( ACS + ( MRS / ACS ) ) ) * ACS ) ) - ( Const + ( ( ( CRS - PN ) / ( Min( CRS ,BR ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( DS - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8221757322175732, "obj2": 0.058798465049405384}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS / MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( CS,RRSe ) ,MUR ) ) ) - CS )", "obj1": 0.8577405857740585, "obj2": 0.045302127844629926}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.04820789760489074}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RCSe * Max( DS,Max( CS,CS ) ) ),Min( RRSe ,( ( RMSe / MUM ) * ( ( ( ( RCSe - RMSe ) + DS ) + Min( RMSe ,MUR ) ) - CS ) ) ) ) - CS )", "obj1": 0.6443514644351465, "obj2": 0.16534136391288531}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / ( Const + ACS ) ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9456066945606695, "obj2": 0.01639554812255706}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) ) - CS )", "obj1": 0.7719665271966527, "obj2": 0.07930445701731959}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Max( FirstVNF_CPU,ACS ) ,ACS ) ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ACS ,Const ) ) ) ) )", "choosing": "( Min( MUM ,( ( MLU + MLU ) - Max( Min( MUM ,( Max( MUR,RCSe ) * DS ) ),Min( MUC ,MUR ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.11113228486700859}], "44": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( CRS - PN ) / ( Const + ACS ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( Max( FirstVNF_CPU,ACS ) + DDR ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,( CS / MUM ) ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,MUM ) ) + RMSe ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08833120742689016}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( MDR + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) + FirstVNF_CPU ) - ( MDR - ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( Min( MUR ,RMSe ),CS ) / ( ( RRSe * Max( ( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) + RMSe ),Min( Min( Min( DS ,RCSe ) ,MUM ) ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008197800509763731}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( ( MUR + DS ) / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9058577405857741, "obj2": 0.02900616824172217}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.20883006796416612}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( DDR - Min( ( CRS + RRS ) ,( ( BR - Const ) + ( ( FirstVNF_Mem_Server + MDR ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR / DS ) - DS ) ,( ( MUR * DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( ( ( ( DS * MLU ) / Min( MLU ,( ( MUM / MUM ) * MUM ) ) ) - RMSe ) - Min( RRSe ,( RMSe - DS ) ) ) + Max( RCSe,CS ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27299528551847163}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( FirstVNF_CPU_Server - ( CRS - RRS ) ) - ( DDR + Max( MDR,DDR ) ) )", "choosing": "( ( DS / Min( ( ( ( MUC - RMSe ) + Max( ( MUM * MUC ),( ( RCSe + MUM ) - RMSe ) ) ) * Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) ) ,( ( MUR + MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8284518828451883, "obj2": 0.055787537427094996}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_CPU_Server ) ,MDR ) - Min( DDR ,FirstVNF_Mem ) ) - RRS ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ( PN - CRS ) / ( ( RRS + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RCSe,( ( MUM + RMSe ) * CS ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010075800108250158}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ( DDR / ARS ) * ARS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,MUR ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.02693838139667502}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6150627615062761, "obj2": 0.19503419293496613}, {"determining": "( ACS - ( DDR / ( ( ( DDR + ( DDR - ( ( CRS - PN ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) / Min( Const ,ACS ) ) * ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,Max( ( Max( MLU,MUR ) * CS ),Min( Max( RCSe,MUR ) ,( DS - RMSe ) ) ) ) - ( ( MUR - Min( RMSe ,( MUM - Min( CS ,Max( ( DS - MUR ),DS ) ) ) ) ) / MUR ) )", "obj1": 0.6297071129707112, "obj2": 0.1850717251257949}, {"determining": "( Min( ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + AMS ) / ( ( MDR * ( DDR - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RCSe - ( RRSe / MUM ) ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2867257515419789}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MUR / ( MUM * ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.9309623430962343, "obj2": 0.021141864840001693}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06663768513032672}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03228810912126633}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ACS - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Min( MUR ,MUC ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16386025077269997}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - DDR ) / ( FirstVNF_Mem - RRS ) ) * ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - ( ( RRSe * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004434343260851922}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.061621359762243505}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_Mem ) - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( MUM ,( ( CS + RMSe ) + ( Max( MUM,CS ) / RCSe ) ) ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( DS / Max( MUR,RCSe ) ) - RMSe ) / ( MUM + ( ( DS / ( ( MUC / Max( MUR,RCSe ) ) + RMSe ) ) + RMSe ) ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.04820789760489074}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( RRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,MUM ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5941422594142259, "obj2": 0.21639068723820137}, {"determining": "( Max( BR,DDR ) - ( MDR - ( ( DDR + ( PN + ACS ) ) * ( ( PN - AMS ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( CS - ( Max( ( DS + ( RCSe * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( CS * RRSe ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.043516512455149835}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( Const / ACS ) - RRS ) ,ACS ) / ( Min( FirstVNF_Mem ,ARS ) / ( Min( MDR ,MRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( RRSe ,Max( ( MUR * DS ),( DS * ( ( DS / ( ( DS / DS ) + Min( CS ,MUC ) ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.0783812218685722}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( Max( ( CRS + FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe + ( Max( Max( MLU,MUC ),MUC ) - MLU ) ) / ( Max( MLU,Max( RCSe,( CS + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.0415902234144466}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.06078959479099272}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( Min( MDR ,MRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.01573837446015723}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06306728009751697}, {"determining": "( ( ( Min( DDR ,( FirstVNF_RAM / ( DDR - PN ) ) ) - ( DDR + ( ( ( ( CRS - PN ) / ( Const + ACS ) ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,( DS / Max( MUR,RCSe ) ) ) ) ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.01702911343791391}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( Min( ARS ,CRS ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( FirstVNF_CPU_Server - ( DDR + ( ( ( CRS - PN ) / Min( Min( ACS ,FirstVNF_CPU_Server ) ,ACS ) ) * FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) - ( MDR - Min( DDR ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.9832635983263598, "obj2": 0.0050155441903126305}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( Max( ( DDR / CRS ),( MRS - Max( PN,Min( CRS ,PN ) ) ) ) + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( MDR * Min( ( AMS + ARS ) ,Const ) ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( ( RCSe / RMSe ) * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( Max( ( ( ( Max( MLU,RCSe ) * MUM ) / ( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) - RCSe ) ) - CS )", "obj1": 0.7112970711297071, "obj2": 0.110733552753745}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RMSe ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.0447169441967589}, {"determining": "( ( MDR - ( ( RRS * FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( FirstVNF_Mem_Server * CRS ) - RRS ) ,ACS ) ) ) ) - ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( MUR + ( ( RCSe * CS ) / Min( DS ,( ( Min( MLU ,MLU ) + Min( RRSe ,RCSe ) ) / ( MUM * Min( RCSe ,RCSe ) ) ) ) ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05286139864604917}, {"determining": "( ( ( Min( ARS ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( ( BR / MRS ) - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( ( FirstVNF_CPU * AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) - MLU ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.058267886677625086}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( Min( RRS ,MDR ) - ( CRS - PN ) ) ) ) / Min( ACS ,( ACS / MRS ) ) ) * Min( Max( ARS,( ( ( CRS + PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( MUC * DS ) / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( RMSe - ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) - MUC ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( FirstVNF_RAM_Server - ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ) - ( ( CRS - PN ) * Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( Max( ( RCSe / MUM ),( DS - CS ) ) ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,CS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUM + DS ) / RMSe ) ,RMSe ) ) ) * Max( Min( MUM ,( ( RCSe - DS ) * Min( MUR ,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8472803347280334, "obj2": 0.04973592386333393}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( Min( ARS ,CRS ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.9937238493723849, "obj2": 0.0026414833529676512}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ACS - ( DDR + ( Max( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ),Min( ACS ,Const ) ) * ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( MUC ,Max( MLU,MUR ) ) ,( Max( ( RRSe + CS ),( DS + CS ) ) / Max( ( Max( MLU,MLU ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.9205020920502092, "obj2": 0.024764013538133643}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + Min( ( ( Const * ( ACS + FirstVNF_Mem ) ) / ( RRS - PN ) ) ,ACS ) ) ) - Max( DDR,MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,RRSe ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),( MLU - ( ( RMSe + MUM ) * ( RCSe * DS ) ) ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06488017264114342}, {"determining": "( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - FirstVNF_RAM ) - ( Max( Const,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) ) - ( Min( FirstVNF_Mem_Server ,( CRS / PN ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RCSe - ( MLU / MUM ) ) / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MUR / MLU ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( RCSe / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,MUC ),DS ) ) - ( MLU + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( ( ( ARS - Max( Min( AMS ,ACS ),( Max( RRS,FirstVNF_RAM ) - Max( Const,ARS ) ) ) ) / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( DS / Min( Min( RMSe ,( CS / RRSe ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( BR / ARS ) / FirstVNF_CPU ) - RRS ) / Max( Const,ACS ) ) ) ) )", "choosing": "( ( ( ( ( Max( RCSe,Max( RCSe,CS ) ) * MUC ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( ( MUM / ( ( RMSe + CS ) / DS ) ) - MUR ) ) - CS )", "obj1": 0.9246861924686193, "obj2": 0.023188161034737316}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_Mem_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( ( ( FirstVNF_Mem_Server / CRS ) * CRS ) / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( Max( CS,DS ) + ( MUR + RCSe ) ) + ( RCSe / MLU ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Min( MUR ,DS ) / ( MUR - DS ) ),( Max( CS,RCSe ) / MUC ) ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.6276150627615062, "obj2": 0.1866749359088937}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( ( FirstVNF_Mem_Server * MDR ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( RMSe * ( ( ( RRSe + MLU ) / ( RRSe * DS ) ) + DS ) ) + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MLU,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09520448768612223}], "45": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + PN ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_RAM_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * ( Max( MUM,MUM ) * ( MUM / RMSe ) ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / MUR ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( ACS - ( Max( MRS,BR ) * Max( ( ( ( AMS * PN ) + ( FirstVNF_CPU + MRS ) ) + ( RRS * FirstVNF_CPU ) ),Min( RRS ,( RRS / RRS ) ) ) ) )", "choosing": "( ( ( ( Max( MUC,MLU ) / MLU ) * MUR ) * ( RMSe * Min( Min( CS ,MUR ) ,( ( Max( RMSe,DS ) - ( DS - CS ) ) / ( MUC / MUC ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.6234309623430963, "obj2": 0.19164090222861724}, {"determining": "( ( RRS - Min( CRS ,Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),MDR ) ) ) - Min( DDR ,( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( CS * ( ( ( CS / MUM ) + ( Max( CS,DS ) + ( MUR + RCSe ) ) ) * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( CS,CS ) / MUC ) ) ) ) ) ) * ( MUC * Max( RCSe,Min( RMSe ,MUR ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.22229789164916386}, {"determining": "( ACS - ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( Min( ( Max( ( RRSe / MUM ),( Max( MUR,( CS * RRSe ) ) + ( Max( RRSe,MLU ) - MUR ) ) ) + Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( RCSe * CS ) ) ) / DS ) - CS )", "obj1": 0.6276150627615062, "obj2": 0.17911336058410388}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( CRS * PN ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( MUR + DS ) / ( MUM * RMSe ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.01385932882041729}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_CPU_Server ) ,MDR ) - Min( DDR ,FirstVNF_Mem ) ) - RRS ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ( PN - CRS ) / ( ( RRS + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RCSe,( ( MUM + RMSe ) * CS ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010075800108250158}, {"determining": "( ACS - ( DDR + ( ( ( ARS + ( DDR - ( ( PN - CRS ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( ( FirstVNF_CPU_Server - Const ) * BR ) * CRS ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),MUM ) ) - ( MUR + ( ( MUR / CS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5941422594142259, "obj2": 0.21376935929875374}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( Const / ACS ) - RRS ) ,ACS ) / ( Min( FirstVNF_Mem ,ARS ) / ( Min( MDR ,MRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( RRSe ,Max( ( MUR * DS ),( DS * ( ( DS / ( ( DS / DS ) + Min( CS ,MUC ) ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.0783812218685722}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( ACS - ( DDR + ( Max( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ),Min( ACS ,Const ) ) * ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( MUC ,Max( MLU,MUR ) ) ,( Max( ( RRSe + CS ),( DS + CS ) ) / Max( ( Max( MLU,MLU ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( Min( ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + AMS ) / ( ( MDR * ( DDR - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RCSe - ( RRSe / MUM ) ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2867257515419789}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( Max( ( DDR / CRS ),( MRS - Max( PN,Min( CRS ,PN ) ) ) ) + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( MDR * Min( ( AMS + ARS ) ,Const ) ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( ( RCSe / RMSe ) * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( Max( ( ( ( Max( MLU,RCSe ) * MUM ) / ( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) - RCSe ) ) - CS )", "obj1": 0.7112970711297071, "obj2": 0.110733552753745}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( DDR - Min( ( CRS + RRS ) ,( ( BR - Const ) + ( ( FirstVNF_Mem_Server + MDR ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR / DS ) - DS ) ,( ( MUR * DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( ( ( ( DS * MLU ) / Min( MLU ,( ( MUM / MUM ) * MUM ) ) ) - RMSe ) - Min( RRSe ,( RMSe - DS ) ) ) + Max( RCSe,CS ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27299528551847163}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ACS - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Min( MUR ,MUC ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16386025077269997}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( ( ( CRS - PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( ( FirstVNF_Mem_Server * MDR ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( RMSe * ( ( ( RRSe + MLU ) / ( RRSe * DS ) ) + DS ) ) + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MLU,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09520448768612223}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.20883006796416612}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9058577405857741, "obj2": 0.028849630011881018}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04456420320654832}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( MDR + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) + FirstVNF_CPU ) - ( MDR - ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( Min( MUR ,RMSe ),CS ) / ( ( RRSe * Max( ( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) + RMSe ),Min( Min( Min( DS ,RCSe ) ,MUM ) ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008197800509763731}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( DS / Max( MUR,RCSe ) ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,MUR ) - CS )", "obj1": 0.8849372384937239, "obj2": 0.03753462786598933}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06306728009751697}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( FirstVNF_RAM_Server - ( ( FirstVNF_Mem / RRS ) - FirstVNF_RAM_Server ) ) ) - ( ( CRS - PN ) * Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( Max( ( RCSe / MUM ),( DS - CS ) ) ,Max( ( CS + MUM ),RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,CS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.007422274785448843}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( ( CRS - PN ) / Min( Min( ACS ,FirstVNF_CPU_Server ) ,ACS ) ) * PN ) + DDR ) ) - FirstVNF_CPU ) - Min( Min( FirstVNF_Mem_Server ,( Const / ARS ) ) ,Const ) )", "choosing": "( ( ( DS / Max( MUR,RCSe ) ) + RMSe ) - Min( RCSe ,Max( MUR,MUR ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0021730172398503394}, {"determining": "( ( Min( MDR ,MRS ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.01573837446015723}, {"determining": "( ( ( Min( DDR ,( FirstVNF_RAM / ( DDR - PN ) ) ) - ( DDR + ( ( ( ( CRS - PN ) / ( Const + ACS ) ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RMSe ) ) - CS )", "obj1": 0.9435146443514645, "obj2": 0.0170058701645811}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( CRS ,Min( Max( RRS,FirstVNF_Mem_Server ) ,( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,( ( RRS - FirstVNF_Mem_Server ) - ( ( CRS - MRS ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ) ) ) ) + Min( MRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe * RMSe ) / ( Max( MLU,Max( ( CS + MUM ),RCSe ) ) + MUC ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.0544616817068595}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08833120742689016}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.9205020920502092, "obj2": 0.024764013538133643}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( Max( ( CRS + FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06135883404241013}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( Min( RRS ,MDR ) - ( CRS - PN ) ) ) ) / Min( ACS ,( ACS / MRS ) ) ) * Min( Max( ARS,( ( ( CRS + PN ) / Min( Const ,ACS ) ) + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( ( MUC * DS ) / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( RMSe - ( RCSe / ( RRSe - Min( MUC ,MUM ) ) ) ) - MUC ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.19203241438157775}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( Max( ( RCSe / MUM ),( DS - CS ) ) ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,CS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.9142259414225942, "obj2": 0.028701312847630136}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Min( ARS ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( ( BR / MRS ) - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( ( FirstVNF_CPU * AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) - MLU ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.058267886677625086}, {"determining": "( ( ( Max( MRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( RRS * Const ),FirstVNF_CPU ) ,ACS ) ) ) - ( ACS * FirstVNF_CPU ) ) - ( ( Min( AMS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) * ACS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + Min( ( RCSe / RRSe ) ,Max( ( CS + CS ),Min( RRSe ,MUM ) ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09693239925747289}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) - ( ( MDR / CRS ) / ARS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + ( MUM + DS ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - MLU )", "obj1": 0.8284518828451883, "obj2": 0.055787537427094996}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( ( ( ARS - Max( Min( AMS ,ACS ),( Max( RRS,FirstVNF_RAM ) - Max( Const,ARS ) ) ) ) / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( DS / Min( Min( RMSe ,( CS / RRSe ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08833120742689016}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6150627615062761, "obj2": 0.19503419293496613}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RMSe ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05286139864604917}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( MUM * RMSe ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.06078959479099272}, {"determining": "( ACS - Min( Max( MRS,DDR ) ,DDR ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + DS ),Min( RMSe ,MUR ) ) ) * Max( ( MLU - RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( ( ( MUM + DS ) / RMSe ) ,RMSe ) ) ) * Max( Min( MUM ,( ( RCSe - DS ) * Min( MUR ,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8472803347280334, "obj2": 0.04973592386333393}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - FirstVNF_CPU ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ) * Const ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ACS ,( ( Const / ACS ) - RRS ) ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( ( RMSe - ( Max( Max( MUC,( RRSe + MUM ) ),MUC ) - MLU ) ) / ( Max( MLU,Max( RMSe,( Max( ( DS - RMSe ),MUC ) + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.043189910630622025}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - FirstVNF_RAM ) - ( Max( Const,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) ) - ( Min( FirstVNF_Mem_Server ,( CRS / PN ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RCSe - ( MLU / MUM ) ) / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MUR / MLU ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( RCSe / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,MUC ),DS ) ) - ( MLU + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( MUM ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.895397489539749, "obj2": 0.03228810912126633}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( Min( ARS ,CRS ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS * PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ( ( ARS / ( ( FirstVNF_CPU / MRS ) * Max( FirstVNF_CPU,( AMS / MDR ) ) ) ) - ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( Min( ( RRS - PN ) ,( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) ) - ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( ( DS + Min( RCSe ,MUM ) ),Max( ( ( ( MUR + DS ) / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( Max( DS,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.021123441379600535}, {"determining": "( ( ( Min( DDR ,( FirstVNF_RAM / ( DDR - PN ) ) ) - ( DDR + ( ( ( ( CRS - PN ) / ( Const + ACS ) ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( ACS,PN ) ) ) - RRS ) / Min( Const ,( BR - Const ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( ( ( RCSe + RCSe ) + RMSe ) ,RRSe ) / MUC ) ) - CS )", "obj1": 0.99581589958159, "obj2": 0.0012613198123804944}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ),FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( ( ( DS / Max( MUR,RCSe ) ) + RMSe ) * MUC ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + Max( ( Max( Max( MUC,CS ),RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.022464290378663435}, {"determining": "( ( FirstVNF_CPU_Server - ( CRS - RRS ) ) - ( DDR + Max( MDR,DDR ) ) )", "choosing": "( ( DS / Min( ( ( ( MUC - RMSe ) + Max( ( MUM * MUC ),( ( RCSe + MUM ) - RMSe ) ) ) * Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) ) ,( ( MUR + MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - DDR ) / ( FirstVNF_Mem - RRS ) ) * ( ( ARS - PN ) / Min( Min( FirstVNF_Mem ,ACS ) ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,( DDR - Min( Max( FirstVNF_Mem_Server,( MDR + FirstVNF_CPU ) ) ,RRS ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,MRS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( RCSe,MUR ) ) + RMSe ),Min( MUR ,( ( Max( MUR,( DS / DS ) ) - ( MLU * RCSe ) ) - ( MUR + DS ) ) ) ) ,( RCSe - Max( Min( MUM ,( Max( ( MUC - MUM ),RCSe ) * MUC ) ),Min( MUR ,MUC ) ) ) ) - ( ( RRSe * Max( ( ( DS / Max( ( MLU / MUM ),MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004434343260851922}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06663768513032672}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8472803347280334, "obj2": 0.04973592386333393}], "46": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - DDR ) / RRS ) * ( ( ARS - PN ) / Min( Min( FirstVNF_Mem ,ACS ) ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( RCSe,MUR ) ) + RMSe ),Min( MUR ,RMSe ) ) ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - ( ( RRSe * Max( ( ( DS / Max( ( MLU / MUM ),MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( RRS - FirstVNF_Mem ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_Mem_Server + ( ( Const * FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) * MDR ) ) )", "choosing": "( ( CS / ( RCSe - ( RCSe + ( MLU * MUC ) ) ) ) - ( ( MLU / RMSe ) * ( RMSe * ( DS / Max( MUR,RCSe ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ACS - ( Max( ( ( Min( Min( MRS ,RRS ) ,Max( RRS,FirstVNF_Mem ) ) * FirstVNF_Mem ) / FirstVNF_Mem_Server ),DDR ) + ( ( ( ( MDR / Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,( FirstVNF_Mem - CRS ) ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Max( DS,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( DS / RMSe ) * ( MUM * MUM ) ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.18945663272593505}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( Max( DDR,Max( ( ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_Mem_Server ) ),( ACS * FirstVNF_CPU_Server ) ) ) - ACS )", "choosing": "( ( Max( DS,CS ) / Min( ( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ) * ( MLU + ( ( ( RCSe / RMSe ) - MUR ) - Max( DS,RCSe ) ) ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / CS ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) * ( MUR + ( Max( RCSe,MLU ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5899581589958159, "obj2": 0.2161943557483882}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06663768513032672}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ),FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( Min( MUR ,RMSe ),CS ) / ( ( RRSe * Max( ( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) + RMSe ),Min( Min( Min( DS ,RCSe ) ,MUM ) ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.024250434731299668}, {"determining": "( Min( ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + AMS ) / ( ( MDR * ( DDR - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RCSe - ( RRSe / MUM ) ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2867257515419789}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,FirstVNF_RAM_Server ) * PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( MLU,RCSe ) * ( RRSe + MUM ) ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_RAM ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.028178951852600657}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6150627615062761, "obj2": 0.19503419293496613}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( DDR - Min( ( CRS + RRS ) ,( ( BR - Const ) + ( ( FirstVNF_Mem_Server + MDR ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR / DS ) - DS ) ,( ( MUR * DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( ( ( ( DS * MLU ) / Min( MLU ,( ( MUM / MUM ) * MUM ) ) ) - RMSe ) - Min( RRSe ,( RMSe - DS ) ) ) + Max( RCSe,CS ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27299528551847163}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6276150627615062, "obj2": 0.17911336058410388}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ( ( Max( ( CRS - ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM ) ) ) * Min( MRS ,Const ) ) + Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) - Max( BR,FirstVNF_RAM ) )", "choosing": "( ( DS / Max( DS,RRSe ) ) - ( MUC * RRSe ) )", "obj1": 0.5627615062761506, "obj2": 0.272167371532686}, {"determining": "( ACS - ( DDR + ( Max( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ),Min( ACS ,Const ) ) * ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( MUC ,Max( MLU,MUR ) ) ,( Max( ( RRSe + CS ),( DS + CS ) ) / Max( ( Max( MLU,MLU ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( ( Min( FirstVNF_RAM ,DDR ) - ( Max( DDR,( Const + ( CRS * ( ARS + ACS ) ) ) ) / ARS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( MUM,MUC ) ) / ( ( CS * RCSe ) / MLU ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.049603103140588634}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ACS - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Min( MUR ,MUC ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16386025077269997}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ACS - ( DDR + ( ( RRS - MRS ) / ( Max( Max( Max( Max( FirstVNF_CPU_Server,MDR ),ARS ),PN ),( ( ( CRS - PN ) / Min( ACS ,Const ) ) + FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( CS * ( MUC + Min( Min( MLU ,MUM ) ,DS ) ) ) * ( RCSe * ( ( MUC * CS ) * Min( RCSe ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_CPU_Server ) ,MDR ) - Min( DDR ,FirstVNF_Mem ) ) - RRS ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ( PN - CRS ) / ( ( RRS + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RCSe,( ( MUM + RMSe ) * CS ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010075800108250158}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.04833632579583957}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( MDR * Min( ( AMS * ARS ) ,Const ) ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.11065494119105415}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( ( FirstVNF_Mem_Server * MDR ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( RMSe * ( ( ( RRSe + MLU ) / ( RRSe * DS ) ) + DS ) ) + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MLU,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09520448768612223}, {"determining": "( ( ( Min( ARS ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( ( BR / MRS ) - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( ( FirstVNF_CPU * AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) - MLU ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.058267886677625086}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.8577405857740585, "obj2": 0.04600413268334232}, {"determining": "( ( ( ARS / ( ( FirstVNF_CPU / MRS ) * Max( FirstVNF_CPU,( AMS / MDR ) ) ) ) - ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( Min( ( RRS - PN ) ,( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) ) - ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( ( DS + Min( RCSe ,MUM ) ),Max( ( ( ( MUR + DS ) / Max( MUR,RMSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( Max( DS,MUM ),RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.021123441379600535}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( ( RCSe / RMSe ) * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( Max( ( ( ( Max( MLU,RCSe ) * MUM ) / ( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) - RCSe ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.06428704027233942}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( MDR + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) + FirstVNF_CPU ) - ( MDR - ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( Min( MUR ,RMSe ),CS ) / ( ( RRSe * Max( ( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) + RMSe ),Min( Min( Min( DS ,RCSe ) ,MUM ) ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008197800509763731}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( Max( ( CRS + FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8179916317991632, "obj2": 0.06022063580704283}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8828451882845189, "obj2": 0.039102431058804156}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( CRS * PN ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( MUR + DS ) / ( MUM * RMSe ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.01385932882041729}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.054254281723818576}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) - ( ( MDR / CRS ) / ARS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + ( MUM + DS ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - MLU )", "obj1": 0.8284518828451883, "obj2": 0.055787537427094996}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( Const / ACS ) - RRS ) ,ACS ) / ( Min( FirstVNF_Mem ,ARS ) / ( Min( MDR ,MRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( RRSe ,Max( ( MUR * DS ),( DS * ( ( DS / ( ( DS / DS ) + Min( CS ,MUC ) ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.0783812218685722}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( Max( ( CRS + FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06135883404241013}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8619246861924686, "obj2": 0.04456420320654832}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - FirstVNF_CPU ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ) * Const ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ACS ,( ( Const / ACS ) - RRS ) ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( ( RMSe - ( Max( Max( MUC,( RRSe + MUM ) ),MUC ) - MLU ) ) / ( Max( MLU,Max( RMSe,( Max( ( DS - RMSe ),MUC ) + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.043189910630622025}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - MLU )", "obj1": 0.7761506276150628, "obj2": 0.0783812218685722}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9602510460251046, "obj2": 0.012002547433653967}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( Min( DDR ,ACS ) * RRS ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - Min( FirstVNF_Mem ,BR ) ) / Min( ( ( Const / ACS ) + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RMSe ) / ( Max( ( MLU - MUC ),MUC ) - MLU ) ) / ( MLU / RRSe ) ) - CS )", "obj1": 0.8702928870292888, "obj2": 0.041830982751391375}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( FirstVNF_Mem_Server + MDR ) * ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.7405857740585774, "obj2": 0.09627858071097721}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,( FirstVNF_RAM * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.20883006796416612}, {"determining": "( ACS - ( DDR + ( ( ( ARS + ( DDR - ( ( PN - CRS ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( ( FirstVNF_CPU_Server - Const ) * BR ) * CRS ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),MUM ) ) - ( MUR + ( ( MUR / CS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5941422594142259, "obj2": 0.21376935929875374}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - Max( MDR,( AMS * AMS ) ) ) )", "choosing": "( ( DS / Min( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) ,( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,CS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) * ( MUR + DS ) ) ) ) - CS )", "obj1": 0.9916317991631799, "obj2": 0.0027988958445059266}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ),FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( ( ( DS / Max( MUR,RCSe ) ) + RMSe ) * MUC ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + Max( ( Max( Max( MUC,CS ),RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.022464290378663435}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( ACS ,Const ) * ( FirstVNF_RAM * MRS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MLU ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUM ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9058577405857741, "obj2": 0.028849630011881018}, {"determining": "( ACS - ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( Min( ( Max( ( RRSe / MUM ),( Max( MUR,( CS * RRSe ) ) + ( Max( RRSe,MLU ) - MUR ) ) ) + Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( RCSe * CS ) ) ) / DS ) - CS )", "obj1": 0.6276150627615062, "obj2": 0.17911336058410388}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RMSe ) ) - CS )", "obj1": 0.8389121338912134, "obj2": 0.05286139864604917}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08833120742689016}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( PN * ACS ) ) ) - DDR ) - ( MDR - ( ACS / ( FirstVNF_Mem / Max( DDR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( DS,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.9769874476987448, "obj2": 0.006933639080934119}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7552301255230126, "obj2": 0.08833120742689016}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - FirstVNF_RAM ) - ( Max( Const,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) ) - ( Min( FirstVNF_Mem_Server ,( CRS / PN ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RCSe - ( MLU / MUM ) ) / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MUR / MLU ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( RCSe / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,MUC ),DS ) ) - ( MLU + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( ( ( ARS - Max( Min( AMS ,ACS ),( Max( RRS,FirstVNF_RAM ) - Max( Const,ARS ) ) ) ) / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( DS / Min( Min( RMSe ,( CS / RRSe ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( MUM - MUC ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07230991683770438}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ( RRS - ( FirstVNF_RAM / ( RRS - PN ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,Max( AMS,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / MUR ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - ( Min( MUR ,Min( CS ,MUM ) ) - RRSe ) )", "obj1": 0.7531380753138075, "obj2": 0.08972765276854551}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}], "47": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) - ( DDR + ( ( ( CRS - DDR ) / RRS ) * ( ( ARS - PN ) / Min( Min( FirstVNF_Mem ,ACS ) ,ACS ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( ( ( DS / Max( RCSe,MUR ) ) + RMSe ),Min( MUR ,RMSe ) ) ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - ( ( RRSe * Max( ( ( DS / Max( ( MLU / MUM ),MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( RRS - FirstVNF_Mem ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_Mem_Server + ( ( Const * FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) * MDR ) ) )", "choosing": "( ( CS / ( RCSe - ( RCSe + ( MLU * MUC ) ) ) ) - ( ( MLU / RMSe ) * ( RMSe * ( DS / Max( MUR,RCSe ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ACS - ( Max( ( ( Min( Min( MRS ,RRS ) ,Max( RRS,FirstVNF_Mem ) ) * FirstVNF_Mem ) / FirstVNF_Mem_Server ),DDR ) + ( ( ( ( MDR / Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,( FirstVNF_Mem - CRS ) ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Max( DS,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MLU ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( DS / RMSe ) * ( MUM * MUM ) ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.18945663272593505}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( Max( DDR,Max( ( ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_Mem_Server ) ),( ACS * FirstVNF_CPU_Server ) ) ) - ACS )", "choosing": "( ( Max( DS,CS ) / Min( ( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ) * ( MLU + ( ( ( RCSe / RMSe ) - MUR ) - Max( DS,RCSe ) ) ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / CS ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) * ( MUR + ( Max( RCSe,MLU ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5899581589958159, "obj2": 0.2161943557483882}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ),FirstVNF_CPU_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( FirstVNF_CPU_Server ,Min( ( BR / Const ) ,BR ) ) ) ) ) )", "choosing": "( ( ( MUR + DS ) / ( MUM * Min( ( CS * ( Max( RMSe,( RMSe * MUM ) ) / Max( MUR,Max( MLU,MUC ) ) ) ) ,MUC ) ) ) - CS )", "obj1": 0.9205020920502092, "obj2": 0.024211500311559303}, {"determining": "( ( ( ( RRS + ( DDR / ( RRS - AMS ) ) ) - ( DDR + ( ( ( PN - CRS ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( Min( Min( ( DS / RCSe ) ,Min( ( DS - ( RCSe / MUR ) ) ,RMSe ) ) ,Max( ( Min( MUM ,RCSe ) + Min( ( RCSe + CS ) ,MUC ) ),MUC ) ) + ( ( ( RRSe - ( RCSe * MLU ) ) - MUR ) + RCSe ) ) ) - MUC )", "obj1": 0.8828451882845189, "obj2": 0.03841183000464838}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RMSe + ( CS - ( DS * MLU ) ) ) / ( Max( MLU,Max( RCSe,( CS + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.9476987447698745, "obj2": 0.015812854696930834}, {"determining": "( Min( ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + AMS ) / ( ( MDR * ( DDR - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RCSe - ( RRSe / MUM ) ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2867257515419789}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) * ( ( ( MLU / MLU ) * Max( DS,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27048439241378586}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6150627615062761, "obj2": 0.19503419293496613}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Min( RCSe ,MUM ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.0051906505730111435}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06663768513032672}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6276150627615062, "obj2": 0.17911336058410388}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ACS - ( DDR + ( ( ( ARS + ( DDR - ( ( PN - CRS ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( ( FirstVNF_CPU_Server - Const ) * BR ) * CRS ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),MUM ) ) - ( MUR + ( ( MUR / CS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5941422594142259, "obj2": 0.21376935929875374}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,FirstVNF_RAM_Server ) * PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( MLU,RCSe ) * ( RRSe + MUM ) ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16378886091881753}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( PN * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( RMSe + MUR ),CS ) / ( ( Min( ( RMSe - ( RMSe + RCSe ) ) ,( DS * MUC ) ) / ( ( RCSe + MUM ) / MLU ) ) * ( RMSe + DS ) ) ) - CS )", "obj1": 0.9769874476987448, "obj2": 0.0068987741709349085}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ACS - ( DDR + ( ( RRS - MRS ) / ( Max( Max( Max( Max( FirstVNF_CPU_Server,MDR ),ARS ),PN ),( ( ( CRS - PN ) / Min( ACS ,Const ) ) + FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( CS * ( MUC + Min( Min( MLU ,MUM ) ,DS ) ) ) * ( RCSe * ( ( MUC * CS ) * Min( RCSe ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe + Max( MLU,MUC ) ) / ( Max( MLU,Max( RCSe,( CS + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8514644351464435, "obj2": 0.048035529595382535}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ),FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( ( ( DS / Max( MUR,RCSe ) ) + RMSe ) * MUC ) / Max( MUR,RCSe ) ) - ( RCSe / Max( MUR,MLU ) ) ) / ( MUM + Max( ( Max( Max( MUC,CS ),RCSe ) * MUC ),RRSe ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.022464290378663435}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) - Min( RRS ,MDR ) ) - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7594142259414226, "obj2": 0.08812790942235302}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7803347280334728, "obj2": 0.07543924997507288}, {"determining": "( ( ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( PN ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020791376447987817}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( CRS * PN ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.013832016037343338}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_CPU_Server ) ,MDR ) - Min( DDR ,FirstVNF_Mem ) ) - RRS ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ( PN - CRS ) / ( ( RRS + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RCSe,( ( MUM + RMSe ) * CS ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010075800108250158}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.054254281723818576}, {"determining": "( ( ( Min( ARS ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( ( BR / MRS ) - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( ( FirstVNF_CPU * AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) - MLU ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.058267886677625086}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) - ( ( MDR / CRS ) / ARS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + ( MUM + DS ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - MLU )", "obj1": 0.8284518828451883, "obj2": 0.055787537427094996}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( ( FirstVNF_Mem_Server * MDR ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( RMSe * ( ( ( RRSe + MLU ) / ( RRSe * DS ) ) + DS ) ) + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MLU,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09520448768612223}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * DS ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7468619246861925, "obj2": 0.09106862363592716}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + Max( ( ( Max( FirstVNF_Mem_Server,PN ) / ( ( DDR - DDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ),ACS ) ) )", "choosing": "( ( DS / ( ( RMSe * ( RCSe / Max( ( MUM / RRSe ),MUR ) ) ) - CS ) ) - CS )", "obj1": 0.6527196652719666, "obj2": 0.15875061717269212}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_RAM ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.028178951852600657}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( MDR * Min( ( AMS * ARS ) ,Const ) ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.11065494119105415}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.0655256228624736}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.8577405857740585, "obj2": 0.04600413268334232}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,( FirstVNF_RAM * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( Const / ACS ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( Min( RMSe ,DS ),DS ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.20883006796416612}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5606694560669456, "obj2": 0.27039464080326553}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( ( ( ARS - Max( Min( AMS ,ACS ),( Max( RRS,FirstVNF_RAM ) - Max( Const,ARS ) ) ) ) / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( DS / Min( Min( RMSe ,( CS / RRSe ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6276150627615062, "obj2": 0.17911336058410388}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( AMS + ( ( Max( FirstVNF_RAM_Server,DDR ) / FirstVNF_RAM_Server ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - ( ( Min( RCSe ,RRSe ) * Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) ) - ( MUM * RCSe ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.051840620747039566}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( Const / ACS ) - RRS ) ,ACS ) / ( Min( FirstVNF_Mem ,ARS ) / ( Min( MDR ,MRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( RRSe ,Max( ( MUR * DS ),( DS * ( ( DS / ( ( DS / DS ) + Min( CS ,MUC ) ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.0783812218685722}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( Max( ( CRS + FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8096234309623431, "obj2": 0.06240911548331052}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - FirstVNF_RAM ) - ( Max( Const,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) ) - ( Min( FirstVNF_Mem_Server ,( CRS / PN ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RCSe - ( MLU / MUM ) ) / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MUR / MLU ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( RCSe / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,MUC ),DS ) ) - ( MLU + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( ACS ,Const ) * ( FirstVNF_RAM * MRS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MLU ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUM ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( MUM - MUC ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07230991683770438}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.049603103140588634}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ( RRS - ( FirstVNF_RAM / ( RRS - PN ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,Max( AMS,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / MUR ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - ( Min( MUR ,Min( CS ,MUM ) ) - RRSe ) )", "obj1": 0.7531380753138075, "obj2": 0.08972765276854551}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - FirstVNF_CPU ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ) * Const ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ACS ,( ( Const / ACS ) - RRS ) ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( ( RMSe - ( Max( Max( MUC,( RRSe + MUM ) ),MUC ) - MLU ) ) / ( Max( MLU,Max( RMSe,( Max( ( DS - RMSe ),MUC ) + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.043189910630622025}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( MDR * Min( ( AMS * ARS ) ,Const ) ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7092050209205021, "obj2": 0.11065494119105415}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( Max( ( CRS + FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RRSe * Min( ( MUM / Min( Min( ( MUC * DS ) ,DS ) ,( DS + MUR ) ) ) ,( CS / CS ) ) ) + ( Min( ( ( MUR - MUR ) - ( RMSe / RMSe ) ) ,MUR ) - ( ( Max( ( MUC * MUM ),( ( MUM - RMSe ) * DS ) ) + MUR ) - ( Min( RMSe ,RCSe ) - RRSe ) ) ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.059839084118186066}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( MDR + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) + FirstVNF_CPU ) - ( MDR - ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( Min( MUR ,RMSe ),CS ) / ( ( RRSe * Max( ( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) + RMSe ),Min( Min( Min( DS ,RCSe ) ,MUM ) ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9728033472803347, "obj2": 0.008197800509763731}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - DDR ) ) ) ) - ( Min( PN ,RRS ) / Min( RRS ,FirstVNF_RAM ) ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( Const / ACS ),RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( Max( ( DS / Max( MUR,RCSe ) ),Min( MUR ,RMSe ) ) - ( ( ( RRSe / CS ) + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) ) ) - CS )", "obj1": 0.9707112970711297, "obj2": 0.00883372108035865}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - MLU )", "obj1": 0.7761506276150628, "obj2": 0.0783812218685722}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}], "48": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - DDR ) ) ) ) - ( Min( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server * MDR ) ) / Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_CPU,DDR ) ) ,( PN * MDR ) ) ) ,RRS ) / Min( RRS ,FirstVNF_RAM ) ) ) - ( MDR - ( ( RRS + FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( Const / ACS ),RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( ( RMSe / ( MUM / Max( MUM,MUM ) ) ) * MUC ) ),Max( DS,MUC ) ) / ( Max( ( DS / Max( RRSe,RCSe ) ),Min( MUR ,RMSe ) ) - ( ( ( RRSe / CS ) + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( RRS - FirstVNF_Mem ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_Mem_Server + ( ( Const * FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) * MDR ) ) )", "choosing": "( ( CS / ( RCSe - ( RCSe + ( MLU * MUC ) ) ) ) - ( ( MLU / RMSe ) * ( RMSe * ( DS / Max( MUR,RCSe ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - Max( FirstVNF_Mem_Server,( PN + ACS ) ) ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( MDR - Max( ARS,PN ) ) - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),MLU ) ) / Max( ( ( DS / ( MUM / ( MLU * RMSe ) ) ) - CS ),MUC ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.18520706679530183}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( Max( DDR,Max( ( ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_Mem_Server ) ),( ACS * FirstVNF_CPU_Server ) ) ) - ACS )", "choosing": "( ( Max( DS,CS ) / Min( ( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ) * ( MLU + ( ( ( RCSe / RMSe ) - MUR ) - Max( DS,RCSe ) ) ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / CS ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) * ( MUR + ( Max( RCSe,MLU ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5899581589958159, "obj2": 0.2161943557483882}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( ( FirstVNF_Mem_Server * MDR ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( RMSe * ( ( ( RRSe + MLU ) / ( RRSe * DS ) ) + DS ) ) + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MLU,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09520448768612223}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.8577405857740585, "obj2": 0.04600413268334232}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,FirstVNF_RAM_Server ) * PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( MLU,RCSe ) * ( RRSe + MUM ) ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( Max( PN,ACS ) - ( ( ( Const + FirstVNF_RAM_Server ) - Max( ACS,DDR ) ) + ( ( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Const ,ACS ) ) * ( ( ( ACS * ( CRS + ( RRS + ARS ) ) ) * ACS ) + ( ( ( FirstVNF_Mem + ( DDR - DDR ) ) / Max( ( MDR + Const ),Min( FirstVNF_CPU ,AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( DS / ( ( ( MUR + ( MUM / ( ( RMSe / DS ) / ( CS - RMSe ) ) ) ) - RCSe ) - DS ) ) - ( Max( CS,RMSe ) * DS ) )", "obj1": 0.5711297071129707, "obj2": 0.255179692625583}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6150627615062761, "obj2": 0.19503419293496613}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) * ( ( ( MLU / MLU ) * Max( DS,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27048439241378586}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.799163179916318, "obj2": 0.06663768513032672}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ACS - ( DDR + ( ( ( ARS + ( DDR - ( ( PN - CRS ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( ( FirstVNF_CPU_Server - Const ) * BR ) * CRS ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),MUM ) ) - ( MUR + ( ( MUR / CS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5941422594142259, "obj2": 0.21376935929875374}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( Min( ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + AMS ) / ( ( MDR * ( DDR - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RCSe - ( RRSe / MUM ) ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2867257515419789}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( CRS * PN ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.013815164018541083}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( ACS - ( DDR + ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - PN ) + PN ) - MDR ) / ( ( CRS / ( FirstVNF_Mem + MRS ) ) + Min( MRS ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) * Const ) ) )", "choosing": "( CS - ( DS + ( ( RCSe / Max( RRSe,MUR ) ) + ( CS + ( ( ( ( RRSe - MUC ) + Max( RCSe,CS ) ) - RCSe ) * ( ( MUR * DS ) + MUC ) ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.17843258079953142}, {"determining": "( ACS - ( DDR + ( ( RRS - MRS ) / ( Max( Max( Max( Max( FirstVNF_CPU_Server,MDR ),ARS ),PN ),( ( ( CRS - PN ) / Min( ACS ,Const ) ) + FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( CS * ( MUC + Min( Min( MLU ,MUM ) ,DS ) ) ) * ( RCSe * ( ( MUC * CS ) * Min( RCSe ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( PN / ( FirstVNF_Mem - CRS ) ) * PN ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) - Max( RRS,( AMS / AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,( Min( ( RMSe * MUR ) ,RCSe ) / ( CS / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - Min( MLU ,RCSe ) ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.9874476987447699, "obj2": 0.003766526982141878}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - RRS ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - ( MLU / MLU ) )", "obj1": 0.997907949790795, "obj2": 0.000893260127940439}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( Const / ACS ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( Min( RMSe ,DS ),DS ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.20883006796416612}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) - Min( RRS ,MDR ) ) - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7594142259414226, "obj2": 0.08812790942235302}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - FirstVNF_CPU ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ) * Const ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ACS ,( ( Const / ACS ) - RRS ) ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( ( RMSe - ( Max( Max( MUC,( RRSe + MUM ) ),MUC ) - MLU ) ) / ( Max( MLU,Max( RMSe,( Max( ( DS - RMSe ),MUC ) + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.043189910630622025}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5606694560669456, "obj2": 0.27039464080326553}, {"determining": "( ( ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( PN ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020791376447987817}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( MDR * Min( ( AMS * ARS ) ,Const ) ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - Max( ( Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) * Min( RCSe ,RRSe ) ),Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) - CS )", "obj1": 0.7133891213389121, "obj2": 0.10981401143655609}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( ( ( DDR + ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( ( ( DS + Min( RCSe ,( MLU / RMSe ) ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9456066945606695, "obj2": 0.016371325828868067}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( ( ( CRS - PN ) / Min( Const ,FirstVNF_RAM ) ) - ( ( Const - FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( MUM - MUC ) + RMSe ),Min( MUR ,RMSe ) ) ) / ( ( ( DS + ( RCSe + MUM ) ) * Max( ( ( DS / ( CS * MUM ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( DS / Max( MUR,RCSe ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.026137524734468787}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03750532905413983}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5418410041841004, "obj2": 0.2923103072480954}, {"determining": "( ( ( Min( ARS ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( ( BR / MRS ) - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( ( FirstVNF_CPU * AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) - MLU ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.058267886677625086}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) - ( ( MDR / CRS ) / ARS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + ( MUM + DS ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - MLU )", "obj1": 0.8284518828451883, "obj2": 0.055787537427094996}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - ( CRS - PN ) ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe + Max( MLU,MUC ) ) / ( Max( MLU,Max( RCSe,( CS + ( DS / Max( MUR,RCSe ) ) ) ) ) + MUC ) ) - CS )", "obj1": 0.899581589958159, "obj2": 0.03173275347541084}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( ( PN / Min( Const ,ACS ) ) - DDR ) ) ) ) / FirstVNF_CPU ) - ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS + ( CS + MUC ) ),RCSe ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( RCSe / ( ( RRSe - ( MUR - MLU ) ) + RMSe ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9623430962343096, "obj2": 0.011369596064943133}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( ( RRS / ( FirstVNF_Mem / AMS ) ) + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) + FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ACS / Const ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS + ( MUC + DS ) ) + ( DS / Max( MUR,DS ) ) ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.053145767277418626}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16378886091881753}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( PN - FirstVNF_RAM_Server ) * FirstVNF_CPU ) )", "choosing": "( CS - ( RMSe / Min( ( MUC + Max( Max( ( Max( RMSe,DS ) - CS ),( RCSe / ( MUM + RMSe ) ) ),RCSe ) ) ,( ( RMSe / ( ( ( DS - MUR ) * CS ) * ( MUC - ( MLU - MUR ) ) ) ) * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03160204391001546}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6276150627615062, "obj2": 0.17911336058410388}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_RAM ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.028178951852600657}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8326359832635983, "obj2": 0.054254281723818576}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe + Max( MLU,MUC ) ) / ( Max( MLU,Max( RCSe,( CS + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.04236208764372054}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( Max( ( CRS + FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06169331391578061}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( ( FirstVNF_RAM * AMS ) + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_RAM ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004786795702914768}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.803347280334728, "obj2": 0.06540696100052781}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,( FirstVNF_RAM * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * Min( Const ,ACS ) ),FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.02239675988740297}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( ACS ,Const ) * ( FirstVNF_RAM * MRS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MLU ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUM ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * PN ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MUC + ( CS - ( DS * MLU ) ) ) / ( Max( MLU,Max( RCSe,( CS + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006298332456985215}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6276150627615062, "obj2": 0.17911336058410388}, {"determining": "( ( ( Min( FirstVNF_RAM ,DDR ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS / FirstVNF_RAM_Server ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MUC ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.06417098060253781}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( Const / ACS ) - RRS ) ,ACS ) / ( Min( FirstVNF_Mem ,ARS ) / ( Min( MDR ,MRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( RRSe ,Max( ( MUR * DS ),( DS * ( ( DS / ( ( DS / DS ) + Min( CS ,MUC ) ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.0783812218685722}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_CPU_Server ) ,MDR ) - Min( DDR ,FirstVNF_Mem ) ) - RRS ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ( PN - CRS ) / ( ( RRS + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RCSe,( ( MUM + RMSe ) * CS ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010075800108250158}, {"determining": "( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - FirstVNF_RAM ) - ( Max( Const,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) ) - ( Min( FirstVNF_Mem_Server ,( CRS / PN ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RCSe - ( MLU / MUM ) ) / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MUR / MLU ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( RCSe / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,MUC ),DS ) ) - ( MLU + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( ( ( ARS - Max( Min( AMS ,ACS ),( Max( RRS,FirstVNF_RAM ) - Max( Const,ARS ) ) ) ) / FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( DS / Min( Min( RMSe ,( CS / RRSe ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) / Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( MUM - MUC ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07230991683770438}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ( ( ( RRS + ( DDR / ( RRS - AMS ) ) ) - ( DDR + ( ( ( PN - CRS ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( Min( Min( ( DS / RCSe ) ,Min( ( DS - ( RCSe / MUR ) ) ,RMSe ) ) ,Max( ( Min( MUM ,RCSe ) + Min( ( RCSe + CS ) ,MUC ) ),MUC ) ) + ( ( ( RRSe - ( RCSe * MLU ) ) - MUR ) + RCSe ) ) ) - MUC )", "obj1": 0.8828451882845189, "obj2": 0.03841183000464838}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.049603103140588634}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( AMS + ( ( Max( FirstVNF_RAM_Server,DDR ) / FirstVNF_RAM_Server ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( ( RMSe * MUR ) + RCSe ) / ( Min( MUR ,RMSe ) / ( MUM / MUR ) ) ) ) ,( RCSe - ( ( Min( RCSe ,RRSe ) * Max( ( Max( MLU,RCSe ) * MUM ),( RCSe - MUC ) ) ) - ( MUM * RCSe ) ) ) ) - CS )", "obj1": 0.8430962343096234, "obj2": 0.051840620747039566}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * DS ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / MUR ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.08884829464029086}], "49": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( ACS ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) - ( DS / Min( MUM ,( ( ( DS * RCSe ) / Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( Min( ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + AMS ) / ( ( MDR * ( DDR - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - DDR ) ) ) ) - ( Min( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server * MDR ) ) / Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_CPU,DDR ) ) ,( PN * MDR ) ) ) ,RRS ) / Min( RRS ,FirstVNF_RAM ) ) ) - ( MDR - ( ( RRS + FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Max( ( Const / ACS ),RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( ( RMSe / ( MUM / Max( MUM,MUM ) ) ) * MUC ) ),Max( DS,MUC ) ) / ( Max( ( DS / Max( RRSe,RCSe ) ),Min( MUR ,RMSe ) ) - ( ( ( RRSe / CS ) + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) ) ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( RRS - FirstVNF_Mem ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_Mem_Server + ( ( Const * FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) * MDR ) ) )", "choosing": "( ( CS / ( RCSe - ( RCSe + ( MLU * MUC ) ) ) ) - ( ( MLU / RMSe ) * ( RMSe * ( DS / Max( MUR,RCSe ) ) ) ) )", "obj1": 0.5397489539748954, "obj2": 0.2935153530948028}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * DS ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6255230125523012, "obj2": 0.17614432993075976}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( AMS,MDR ) ) - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,BR ) ) - FirstVNF_CPU ) - ( ( RRS + FirstVNF_RAM ) / ( PN / Const ) ) )", "choosing": "( ( CS - ( ( DS / MLU ) / RMSe ) ) - ( Max( RRSe,( ( DS + RMSe ) - Max( MUC,RMSe ) ) ) / Min( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) ,RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.12357779885604402}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - PN ) / Min( Const ,Min( ( BR - PN ) ,( ( FirstVNF_CPU / FirstVNF_Mem ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) * ( DDR + ( DDR - Min( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,AMS ) ) ) ) + DDR ) )", "choosing": "( ( RCSe + ( CS + Min( Max( MUR,MUC ) ,Max( ( ( RRSe + CS ) * CS ),RMSe ) ) ) ) - Min( RRSe ,( DS / RRSe ) ) )", "obj1": 0.5753138075313807, "obj2": 0.24568522313967509}, {"determining": "( ACS - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ( ( ( MDR * Min( MDR ,RRS ) ) / Max( Max( AMS,( Const * Const ) ),PN ) ) / ( FirstVNF_RAM_Server + AMS ) ) * ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + DS ) * ( DS - ( MUR + ( MLU - RRSe ) ) ) ) ,( ( CS + DS ) * ( ( ( DS + RCSe ) * MLU ) - MUC ) ) ) ) - Min( MLU ,MUR ) )", "obj1": 0.6338912133891214, "obj2": 0.1710220232438695}, {"determining": "( Max( DDR,Max( ( ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_Mem_Server ) ),( ACS * FirstVNF_CPU_Server ) ) ) - ACS )", "choosing": "( ( Max( DS,CS ) / Min( ( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ) * ( MLU + ( ( ( RCSe / RMSe ) - MUR ) - Max( DS,RCSe ) ) ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / CS ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) * ( MUR + ( Max( RCSe,MLU ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5899581589958159, "obj2": 0.2161943557483882}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ( ( Const / ACS ) - RRS ) ,ACS ) / ( Min( FirstVNF_Mem ,ARS ) / ( Min( MDR ,MRS ) + DDR ) ) ) ) ) )", "choosing": "( Min( RRSe ,Max( ( MUR * DS ),( DS * ( ( DS / ( ( DS / DS ) + Min( CS ,MUC ) ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.7761506276150628, "obj2": 0.0783812218685722}, {"determining": "( ( ( FirstVNF_CPU - Min( CRS ,CRS ) ) - ( MDR - ( Max( ( FirstVNF_Mem_Server * MDR ),( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) - ( ( CRS - PN ) / Min( Min( Const ,ACS ) ,ACS ) ) ) ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( RMSe * ( ( ( RRSe + MLU ) / ( RRSe * DS ) ) + DS ) ) + RMSe ),CS ) / ( ( RRSe * Max( ( ( DS / Max( MLU,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( MUC + DS ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7426778242677824, "obj2": 0.09520448768612223}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Max( Max( Min( ARS ,FirstVNF_Mem ),BR ),( ARS / FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( Max( MUC,Max( MUM,MLU ) ) ,RMSe ) ) ) * Max( ( ( RRSe / ( MUM + MLU ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - MUR )", "obj1": 0.696652719665272, "obj2": 0.1171236330576885}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( ( DS * MLU ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9163179916317992, "obj2": 0.025876485288138813}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( RRS * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * Min( Const ,ACS ) ),FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) - CS )", "obj1": 0.9267782426778243, "obj2": 0.02239675988740297}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.18520706679530183}, {"determining": "( ( ( Min( Max( ( BR / CRS ),AMS ) ,PN ) + ( ARS * Const ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,Max( Max( MLU,RRSe ),( MUC * ( CS / MUM ) ) ) ) - CS )", "obj1": 0.6485355648535565, "obj2": 0.15882476008789695}, {"determining": "( ( ( ( ( DDR + ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( ( ( DS + Min( RCSe ,( MLU / RMSe ) ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9456066945606695, "obj2": 0.016371325828868064}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( ( ( ( CRS - DDR ) / ( FirstVNF_CPU - ( BR / FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) + ( CRS / FirstVNF_Mem ) ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / MDR ) )", "choosing": "( ( Max( ( CS * MLU ),Min( RRSe ,RRSe ) ) / ( ( ( ( RCSe + MUM ) + DS ) * Max( Max( ( Min( MUC ,DS ) / RCSe ),DS ),MUR ) ) + Min( Max( RRSe,CS ) ,MUR ) ) ) - CS )", "obj1": 0.7217573221757322, "obj2": 0.10367260203333525}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,ACS ) - PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( ( Max( MLU,RCSe ) * MUC ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( ( ( Min( MRS ,FirstVNF_RAM ) * Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,RRS ) ) ) ) / ( AMS * FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * Min( ( ( ( FirstVNF_RAM / MDR ) / AMS ) / FirstVNF_CPU ) ,DDR ) ) ) - FirstVNF_CPU ) - ( MDR - ( ( ( CRS - PN ) / Min( RRS ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( ( ( MUR - MLU ) * MLU ) * RRSe ) ),RMSe ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.7845188284518828, "obj2": 0.07329087208978291}, {"determining": "( ACS - ( DDR + ( FirstVNF_RAM / ( MDR / ( PN + ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem - PN ) ) - CRS ) ) ) ) ) )", "choosing": "( ( Max( DS,( RRSe * MUR ) ) - Min( MUM ,( ( MUR + DS ) * ( ( Max( DS,RMSe ) / ( DS * Min( RRSe ,RMSe ) ) ) / MUM ) ) ) ) - CS )", "obj1": 0.604602510460251, "obj2": 0.20006633263074}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5711297071129707, "obj2": 0.2518511804380791}, {"determining": "( ACS - ( DDR + ( ( ( ( MDR * Min( Const ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_Mem_Server,PN ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6150627615062761, "obj2": 0.19503419293496613}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( Const ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) * ( ( ( MLU / MLU ) * Max( DS,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5585774058577406, "obj2": 0.27048439241378586}, {"determining": "( ( ( PN - CRS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_CPU_Server * AMS ) - ( ( ( MRS - PN ) / Min( Const ,( FirstVNF_CPU - ( FirstVNF_CPU - Min( MRS ,CRS ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RCSe + RCSe ) ,DS ) * Min( Min( ( RCSe / RMSe ) ,( RCSe + ( DS + MUM ) ) ) ,RCSe ) ) ,( ( MUR + RCSe ) * ( ( MUR + ( MLU - RRSe ) ) - ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ) ) ) / Min( MUM ,( ( MUR + DS ) * ( DS - DS ) ) ) ) - RRSe )", "obj1": 0.891213389121339, "obj2": 0.03413564359371578}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Const ) ) - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_RAM,( FirstVNF_CPU_Server + CRS ) ) ) )", "choosing": "( ( Max( ( MUR + Min( MUM ,( MUR - MLU ) ) ),( ( RMSe + MUR ) * DS ) ) / ( ( ( ( DS + ( DS - RRSe ) ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) / RMSe ),Min( RMSe ,MUR ) ) ) * Min( MUR ,MLU ) ) ) - CS )", "obj1": 0.7635983263598326, "obj2": 0.0828150560563261}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( ( ( MRS / ( ACS + ( Const + AMS ) ) ) / ( ( ( MDR * ( MDR - DDR ) ) / Max( MDR,( AMS * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * FirstVNF_Mem_Server ) + DDR ) )", "choosing": "( ( CS / Min( MUM ,( ( MUR + DS ) * ( ( Max( MUR,Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),( RRSe + RRSe ) ) ) - ( MUR + ( ( CS - MLU ) - CS ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( ( MLU / ( RCSe * MUR ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.5502092050209205, "obj2": 0.28519130328805786}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - ( Min( CRS ,Max( DDR,MDR ) ) + PN ) )", "choosing": "( ( Max( ( RMSe + RMSe ),CS ) / ( Min( ( MUM * ( RCSe / MLU ) ) ,MUR ) * Max( ( ( DS / ( ( MLU / RCSe ) + DS ) ) + Max( Max( ( CS * RMSe ),Min( MUM ,CS ) ),( RCSe + RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8744769874476988, "obj2": 0.04057308087865811}, {"determining": "( ( Max( ACS,( FirstVNF_RAM * FirstVNF_RAM ) ) - ( MDR - ( Max( CRS,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( BR - PN ) / Max( Const,ACS ) ) ) ) - ( ( CRS - PN ) + Min( Min( ACS ,Const ) ,ACS ) ) ) ) ) + ( FirstVNF_CPU * ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + MUC ) - CS )", "obj1": 0.7489539748953975, "obj2": 0.09043475613665923}, {"determining": "( ACS - ( DDR + ( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - ( FirstVNF_Mem_Server - PN ) ) ) ) / Min( ACS ,Const ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( ( DS * RRSe ) ,( ( ( ( RMSe / MLU ) + CS ) - ( DS * CS ) ) / Max( ( Max( MLU,RCSe ) * MUM ),RRSe ) ) ) ) ) * ( MUC * MLU ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ACS - ( CRS + Max( ARS,MDR ) ) )", "choosing": "( ( DS / ( ( Min( MLU ,( ( Max( MLU,MUC ) / ( MUR / DS ) ) * Min( ( CS / CS ) ,MUC ) ) ) * Min( RRSe ,( MUR - Max( MUR,CS ) ) ) ) * MLU ) ) - CS )", "obj1": 0.602510460251046, "obj2": 0.20787032276255732}, {"determining": "( ACS - ( DDR + ( ( ( ARS + ( DDR - ( ( PN - CRS ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( ( FirstVNF_CPU_Server - Const ) * BR ) * CRS ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),MUM ) ) - ( MUR + ( ( MUR / CS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5941422594142259, "obj2": 0.21376935929875374}, {"determining": "( ( ( FirstVNF_RAM - Max( Const,FirstVNF_CPU ) ) + ( FirstVNF_CPU - ( CRS - DDR ) ) ) - ( ( AMS / FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( CS - ( DS * MLU ) )", "obj1": 0.6569037656903766, "obj2": 0.15547013988214106}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( DDR - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( Min( Const ,FirstVNF_RAM_Server ) * PN ) ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( CS * ( RMSe * Min( Min( CS ,MUC ) ,( ( ( CS + RRSe ) - ( DS + CS ) ) / Max( RRSe,( Max( MLU,RCSe ) * ( RRSe + MUM ) ) ) ) ) ) ) * ( MUC + MLU ) )", "obj1": 0.5836820083682008, "obj2": 0.22621168168789055}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( Max( ( CRS + FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8138075313807531, "obj2": 0.06169331391578061}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,( AMS / AMS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - Min( MDR ,( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,DDR ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( Max( MUR,( DS / ( MUR + MUR ) ) ) - DS ) ) - MUR )", "obj1": 0.7343096234309623, "obj2": 0.09775636403886742}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) * CRS ) - ( DDR + ( ( ( ( MDR * Min( RRS ,FirstVNF_Mem_Server ) ) / Max( PN,FirstVNF_Mem_Server ) ) / ( Max( PN,AMS ) + AMS ) ) * DDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( MUM / RRSe ),Min( RCSe ,( MUM / MLU ) ) ) * Max( Min( RMSe ,RRSe ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUR ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - MUR ) ) ) ) ) ) - CS )", "obj1": 0.6631799163179917, "obj2": 0.14967446223658867}, {"determining": "( Min( ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( FirstVNF_RAM_Server + AMS ) / ( ( MDR * ( DDR - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( RCSe - ( RRSe / MUM ) ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) ) )", "obj1": 0.5439330543933054, "obj2": 0.2867257515419789}, {"determining": "( ( AMS + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU + BR ) - CRS ) - FirstVNF_CPU ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( BR - DDR ) - PN ) / ( Const / ACS ) ) ) ) )", "choosing": "( RRSe - Max( ( RMSe - DS ),DS ) )", "obj1": 0.7698744769874477, "obj2": 0.08110358311717608}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.6464435146443515, "obj2": 0.16378886091881753}, {"determining": "( ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( CRS,Min( CRS ,ACS ) ) ) / ( FirstVNF_RAM_Server + Max( PN,DDR ) ) ) ) * ( Max( ( Min( ( MRS / FirstVNF_RAM_Server ) ,Const ) / PN ),( FirstVNF_CPU_Server / Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "( ( DS / Max( MUM,( Min( MUM ,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,Min( RMSe ,DS ) ) ) - ( MUM + MUR ) ) ) ) ) - ( ( ( Max( ( DS + Max( MLU,MUC ) ),( Max( MUM,DS ) - MUM ) ) / Max( RCSe,( RRSe * RMSe ) ) ) + RMSe ) * ( MLU / RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Const + RRS ) - MDR ) - ( ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_RAM_Server + AMS ) ) * Min( ( Max( CRS,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( PN - CRS ) / Min( Const ,ACS ) ) ) ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( Min( MUR ,RMSe ) - ( ( MLU / ( MUC * Min( MUC ,MUM ) ) ) * ( ( DS / ( ( ( MUM + MUR ) / MLU ) / ( MLU + Min( Max( RRSe,RCSe ) ,Max( MUM,RCSe ) ) ) ) ) + RMSe ) ) )", "obj1": 0.5690376569037657, "obj2": 0.2555291459049775}, {"determining": "( ACS - ( DDR + ( ( RRS - MRS ) / ( Max( Max( Max( Max( FirstVNF_CPU_Server,MDR ),ARS ),PN ),( ( ( CRS - PN ) / Min( ACS ,Const ) ) + FirstVNF_Mem_Server ) ) * MRS ) ) ) )", "choosing": "( ( CS * ( MUC + Min( Min( MLU ,MUM ) ,DS ) ) ) * ( RCSe * ( ( MUC * CS ) * Min( RCSe ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.23631245130304093}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_CPU_Server ) ,MDR ) - Min( DDR ,FirstVNF_Mem ) ) - RRS ) - ( MDR - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ( PN - CRS ) / ( ( RRS + FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RCSe,( ( MUM + RMSe ) * CS ) ) - CS )", "obj1": 0.9665271966527197, "obj2": 0.010075800108250158}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),PN ) - ( DDR + ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Const ) - PN ) / Min( Const ,ACS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( Max( ( MUR / RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( DS ,MUR ) ) ) ) - CS )", "obj1": 0.6820083682008368, "obj2": 0.1330025813277265}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - Min( Const ,ACS ) ) ) * PN ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MUC + ( CS - ( DS * MLU ) ) ) / ( Max( MLU,Max( RCSe,( CS + MUM ) ) ) + MUC ) ) - Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.008768927492427865}, {"determining": "( DDR - ( Const - ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * Min( ARS ,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + ( RCSe + ( RRSe - ( RRSe - RMSe ) ) ) ) * ( ( Max( ( DS * MUR ),( MUC * RCSe ) ) * Max( Min( DS ,MLU ),DS ) ) + ( MUR + ( ( CS + RCSe ) * RRSe ) ) ) ) ) ) - ( ( Max( DS,MLU ) * ( RMSe / RCSe ) ) / ( DS * ( MLU * RCSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.19787418774784474}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR / ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( MDR ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( MUR + ( ( ( RMSe / RMSe ) + CS ) + DS ) ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ,MUM ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5669456066945606, "obj2": 0.26122974176889446}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( RRS ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( Const / ACS ) - RRS ) ,MRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( Min( RMSe ,DS ),DS ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5983263598326359, "obj2": 0.20883006796416612}, {"determining": "( ( ( ( RRS + ( DDR / ( RRS - AMS ) ) ) - ( DDR + ( ( ( PN - CRS ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( Min( Min( ( DS / RCSe ) ,Min( ( DS - ( RCSe / MUR ) ) ,RMSe ) ) ,Max( ( Min( MUM ,RCSe ) + Min( ( RCSe + CS ) ,MUC ) ),MUC ) ) + ( ( ( RRSe - ( RCSe * MLU ) ) - MUR ) + RCSe ) ) ) - MUC )", "obj1": 0.8828451882845189, "obj2": 0.03841183000464838}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( MDR * Min( Const ,ACS ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( MUM ,( ( MUR + DS ) + ( ( Max( ( MUC * MUM ),Min( RCSe ,MUC ) ) * ( RRSe * ( CS + RCSe ) ) ) - ( MUR + ( RRSe - MLU ) ) ) ) ) ) - CS )", "obj1": 0.702928870292887, "obj2": 0.11515098644507323}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - Max( FirstVNF_Mem_Server,( PN + ACS ) ) ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( MDR - Max( ARS,PN ) ) - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),MLU ) ) / Max( ( ( DS / ( MUM / ( MLU * RMSe ) ) ) - CS ),MUC ) ) - CS )", "obj1": 0.6171548117154811, "obj2": 0.18520706679530183}, {"determining": "( ( ( Min( FirstVNF_RAM ,DDR ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS / FirstVNF_RAM_Server ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( ( RRSe / MUM ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,MUC ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8075313807531381, "obj2": 0.06417098060253781}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) - ( DDR + ( ( ( MDR * Min( Const ,BR ) ) / ( PN - ( BR + CRS ) ) ) * ACS ) ) ) - Max( ( ( ( CRS - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) / RRS ),RRS ) ) - ( MDR - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( FirstVNF_Mem_Server - PN ) / Min( Const ,Min( Min( ( DDR - DDR ) ,MDR ) ,MRS ) ) ) ) ) )", "choosing": "( CS - ( ( ( MUR - MUM ) * ( ( Min( RCSe ,RMSe ) + DS ) * Max( ( ( DS / Max( RMSe,MUR ) ) + CS ),Min( MUM ,RMSe ) ) ) ) * Max( ( MUR + ( ( RCSe + Max( ( MUC * RMSe ),DS ) ) / ( ( ( RMSe * RCSe ) * RCSe ) + DS ) ) ),CS ) ) )", "obj1": 0.7050209205020921, "obj2": 0.1119939461707195}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.5606694560669456, "obj2": 0.27039464080326553}, {"determining": "( ( ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( PN ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9330543933054394, "obj2": 0.020791376447987817}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( MUM - MUC ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( RCSe,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.8200836820083682, "obj2": 0.05955792337772626}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_Mem_Server * DDR ) ) ) - ACS )", "choosing": "( ( DS / Min( ( ( MUR + MLU ) / DS ) ,Min( Max( Min( Min( RRSe ,RCSe ) ,CS ),RRSe ) ,MUR ) ) ) - Max( MUC,Max( RCSe,CS ) ) )", "obj1": 0.6610878661087866, "obj2": 0.15414389660949565}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( MUM - MUC ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.797071129707113, "obj2": 0.07012674455346071}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( RMSe + Max( MLU,MUC ) ) / ( Max( MLU,Max( RCSe,( CS + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8535564853556485, "obj2": 0.04732414841193443}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * MDR ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( RMSe,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5418410041841004, "obj2": 0.2923103072480954}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) - Min( RRS ,MDR ) ) - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ,( ( MUR + DS ) * ( ( Max( ( MUC * MUM ),Min( MUM ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU * RRSe ) ) ) ) ) ) - CS )", "obj1": 0.7594142259414226, "obj2": 0.08812790942235302}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * DS ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( ARS ,FirstVNF_RAM ) - ( DDR + ( ACS * ( ( ( BR / MRS ) - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) ) ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem - ( Max( ( FirstVNF_CPU * AMS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) - MLU ) ) ) - CS )", "obj1": 0.8242677824267782, "obj2": 0.058267886677625086}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / MUR ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.7531380753138075, "obj2": 0.08884829464029086}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - FirstVNF_CPU ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ) * Const ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( ACS ,( ( Const / ACS ) - RRS ) ) / ( CRS - PN ) ) ) ) )", "choosing": "( ( ( RMSe - ( Max( Max( MUC,( RRSe + MUM ) ),MUC ) - MLU ) ) / ( Max( MLU,Max( RMSe,( Max( ( DS - RMSe ),MUC ) + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.8661087866108786, "obj2": 0.043189910630622025}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( ( MUR / DS ) - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.8598326359832636, "obj2": 0.04570127972341312}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( CRS * PN ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - PN ) ,ACS ) ) ) ) )", "choosing": "( ( Min( ( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) - CS ) ,MUC ) / Max( MUR,RCSe ) ) - CS )", "obj1": 0.8682008368200836, "obj2": 0.04225858169881195}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( MRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( ( PN / Min( Const ,ACS ) ) - DDR ) ) ) ) / FirstVNF_CPU ) - ( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( Max( ( DS + ( CS + MUC ) ),RCSe ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MLU,CS ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( RCSe / ( ( RRSe - ( MUR - MLU ) ) + RMSe ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9623430962343096, "obj2": 0.011369596064943133}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( ( ( CRS - PN ) / ( Const + ACS ) ) - ( Min( ARS ,MRS ) / ( AMS / MDR ) ) ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + RRSe ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9581589958158996, "obj2": 0.012635498802364805}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,DDR ),( ( CRS - ( PN - ( CRS - AMS ) ) ) / Min( Const ,( CRS * ( PN + DDR ) ) ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / ( BR * RRS ) ) ) ) )", "choosing": "( ( DS / Min( ( ( ( RRSe - MUR ) - MLU ) - ( Max( ( ( DS + MUR ) + RMSe ),Max( Min( RCSe ,RCSe ),Max( MUM,MUC ) ) ) + CS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MUR - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * PN ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MUC + ( CS - ( DS * MLU ) ) ) / ( Max( MLU,Max( RCSe,( CS + MUM ) ) ) + MUC ) ) - CS )", "obj1": 0.9790794979079498, "obj2": 0.006298332456985215}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / ( Const * ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( Min( Const ,ACS ) / ( CRS - Max( FirstVNF_RAM_Server,( ARS * AMS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( ( RCSe - MUM ) + DS ) * Max( ( ( Max( DS,RCSe ) / MLU ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7196652719665272, "obj2": 0.10735642714020878}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,( FirstVNF_RAM * AMS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( ( MDR * Min( ( AMS * ARS ) ,Const ) ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( Max( DS,Max( CS,CS ) ) * ( ( ( MLU / MLU ) * Max( DS,DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5543933054393305, "obj2": 0.2802070952720382}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_RAM ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9100418410041841, "obj2": 0.028027712059546312}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8451882845188284, "obj2": 0.049603103140588634}, {"determining": "( ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),( Const * FirstVNF_RAM_Server ) ) - ( ( ( CRS * PN ) / Min( Const ,ACS ) ) + PN ) ) - Min( PN ,Const ) ) - ( MDR - ( ( ( CRS - PN ) / Min( Const ,ACS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( Min( ( ( RCSe + ( ( RRSe / MLU ) * CS ) ) * MLU ) ,RCSe ) - RMSe ) / ( MUM - MUC ) ) - CS )", "obj1": 0.7907949790794979, "obj2": 0.07088347434679922}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - PN ) / ( Min( MDR ,MRS ) + DDR ) ) / ( MDR * Min( ( AMS * ARS ) ,Const ) ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MLU * MLU ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( ( MLU - RRSe ) + MUR ) ) ) ) ) - CS )", "obj1": 0.7112970711297071, "obj2": 0.11017715090520012}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MLU / MUR ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( ( CRS - PN ) - Min( RRS ,MDR ) ) - PN ) / Min( ( FirstVNF_CPU_Server - RRS ) ,ACS ) ) ) ) )", "choosing": "( DS - CS )", "obj1": 0.9037656903765691, "obj2": 0.03029768365654727}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( DDR + ( ( ( CRS - ( RRS + FirstVNF_Mem ) ) / ( Max( MRS,FirstVNF_CPU_Server ) / BR ) ) * ACS ) ) ) ,FirstVNF_CPU ) - ( ACS - Min( Max( FirstVNF_RAM_Server,CRS ) ,BR ) ) )", "choosing": "( ( Max( RRSe,( MUC * ( Max( MLU,( ( RMSe / CS ) + DS ) ) + ( CS + MLU ) ) ) ) + ( DS + MUR ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) - ( ( MDR / CRS ) / ARS ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + ( MUM + DS ) ) * Max( ( ( DS / Max( MUR,DS ) ) + RMSe ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - MLU )", "obj1": 0.8284518828451883, "obj2": 0.055787537427094996}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.6673640167364017, "obj2": 0.14558232710154742}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) - ( DDR + ( ( ( CRS * PN ) / ( Min( Const ,CRS ) * ( FirstVNF_RAM * AMS ) ) ) * ACS ) ) ) - ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ( CRS - Min( Const ,Const ) ) / Min( Const ,( Max( FirstVNF_CPU,CRS ) / FirstVNF_RAM ) ) ) ) - MDR ) ) - ( MRS - ( ( ( CRS - PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( DS,( ( ( MUM - DS ) * RCSe ) * Min( DS ,( ( MUR - RRSe ) + RRSe ) ) ) ),( RRSe - ( ( DS - CS ) - ( Max( RRSe,( MLU + Max( DS,MUC ) ) ) * RRSe ) ) ) ) - CS )", "obj1": 0.6757322175732218, "obj2": 0.1370453196961148}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( DDR + ( ( ( CRS - PN ) / Min( Const ,ACS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.7301255230125523, "obj2": 0.09981069777510596}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ( CRS * PN ) ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( ( ( ( CRS - PN ) / FirstVNF_CPU ) - RRS ),FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Min( MUR ,MUC ) / Max( MUR,RCSe ) ) - CS )", "obj1": 0.9539748953974896, "obj2": 0.013815164018541083}, {"determining": "( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( FirstVNF_RAM_Server / PN ) ) ) / Min( Const ,ACS ) ) ) - FirstVNF_RAM ) - ( Max( Const,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( Const ,ACS ) * ( FirstVNF_CPU * AMS ) ) ) * ACS ) ) ) ) - ( Min( FirstVNF_Mem_Server ,( CRS / PN ) ) - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( ( RCSe - ( MLU / MUM ) ) / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,( RRSe + RCSe ) ) ) * Max( ( MUR / MLU ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( RCSe / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,MUC ),DS ) ) - ( MLU + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6841004184100419, "obj2": 0.13056348663265607}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Const ) - ( DDR + ( ( ( CRS - PN ) / ( Min( ACS ,Const ) * ( FirstVNF_RAM * MRS ) ) ) * ACS ) ) ) - ( Max( Max( DDR,FirstVNF_Mem_Server ),( ( CRS - Max( PN,( CRS - AMS ) ) ) / Min( Const ,ACS ) ) ) - MDR ) ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) * ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MLU ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUM ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6715481171548117, "obj2": 0.14079892081257395}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( ( CRS - PN ) / Min( Const ,ACS ) ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) / ( ( ( ( RCSe * MUM ) + DS ) * Max( ( ( MUM - MUC ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( Min( MUM ,( ( DS - RCSe ) * Max( MUR,RCSe ) ) ),Min( MUR ,MUC ) ) ) ) - CS )", "obj1": 0.7887029288702929, "obj2": 0.07230991683770438}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( ( RRS / ( FirstVNF_Mem / AMS ) ) + ( ( ( CRS - PN ) / ( FirstVNF_Mem - CRS ) ) * ACS ) ) ) + FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( ACS / Const ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( DS + ( CS * MUC ) ),Max( DS,MUC ) ) / ( ( ( DS + Min( RCSe ,MUM ) ) * Max( ( ( DS + ( MUC + DS ) ) + ( DS / Max( MUR,DS ) ) ),Min( RMSe ,MUR ) ) ) * Max( ( ( DS / Max( DS,RCSe ) ) + Min( Max( ( CS + CS ),Min( CS ,MUR ) ) ,( RCSe / RRSe ) ) ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.8368200836820083, "obj2": 0.053145767277418626}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( ( FirstVNF_RAM * AMS ) * ( ACS + FirstVNF_RAM ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( ( Min( RCSe ,MUM ) + DS ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) * Max( ( ( DS / ( DS / Max( MUR,RCSe ) ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - CS )", "obj1": 0.9079497907949791, "obj2": 0.028178951852600657}, {"determining": "( ACS - ( DDR + ( ( ( DDR + ( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS - PN ) / ( Const + ACS ) ) ) ) / Min( ACS ,Const ) ) * Min( ( ( FirstVNF_RAM / ( DDR - PN ) ) - RRS ) ,CRS ) ) ) )", "choosing": "( ( DS / Min( ( Max( ( RRSe / MUM ),Min( RCSe ,MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) ,( ( MUR + DS ) * ( ( ( ( MLU / MLU ) + ( MUM - MUC ) ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - CS )", "obj1": 0.6401673640167364, "obj2": 0.1659063445749221}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS * PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - MDR ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * ( DS * ( ( DS / ( ( DS / DS ) + DS ) ) / ( MUC * MLU ) ) ) ) ) - CS )", "obj1": 0.9372384937238494, "obj2": 0.018877995283534205}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( FirstVNF_Mem - RRS ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( CRS - PN ) / Min( ( ( Const / ACS ) - RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MUC / ( MUM * ( ( ( MUR - ( RCSe + MUC ) ) / ( MLU + RCSe ) ) - CS ) ) ) - CS )", "obj1": 0.8870292887029289, "obj2": 0.03750532905413983}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM ) - ( DDR + ( ( ( RRS - PN ) / ( Const * ( ACS + FirstVNF_Mem ) ) ) * ACS ) ) ) - FirstVNF_CPU ) - ( MDR - ( Max( RRS,FirstVNF_Mem_Server ) - ( ( ( CRS - RRS ) / ( Min( MDR ,MRS ) + DDR ) ) / Min( ( ( Const / ACS ) - RRS ) ,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,( ( DS * MUR ) * Max( ( ( DS / Max( MUR,RCSe ) ) + RMSe ),Min( MUR ,RMSe ) ) ) ) - ( MLU / MLU ) )", "obj1": 0.9937238493723849, "obj2": 0.0021429247932058682}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( DDR + ( ( ( CRS - PN ) / ( ( ( MDR * ( FirstVNF_Mem - RRS ) ) / Max( FirstVNF_Mem_Server,Min( PN ,ACS ) ) ) / ( FirstVNF_RAM_Server + AMS ) ) ) * ( DDR + ( ( ACS / ( ACS + Min( Const ,ACS ) ) ) * ACS ) ) ) ) )", "choosing": "( ( DS / Min( MUM ,( ( MUR + DS ) * ( ( ( MLU / MLU ) * Max( Min( RMSe ,DS ),DS ) ) - ( MUR + ( MLU - RRSe ) ) ) ) ) ) - ( ( MLU / RMSe ) * ( ( DS / Max( MUR,RCSe ) ) + RMSe ) ) )", "obj1": 0.5648535564853556, "obj2": 0.26426395308486056}, {"determining": "( ( ( ( ( DDR + ( FirstVNF_Mem_Server - ( ( CRS - PN ) - Min( PN ,MDR ) ) ) ) / Min( ACS ,Const ) ) * Min( Max( ARS,( PN + FirstVNF_Mem_Server ) ) ,MRS ) ) - FirstVNF_CPU ) - ( MDR - Max( AMS,MDR ) ) )", "choosing": "( ( ( ( RCSe * DS ) / ( ( Min( DS ,RCSe ) - MUM ) * ( RRSe * MUC ) ) ) - RMSe ) - CS )", "obj1": 0.9895397489539749, "obj2": 0.0031672126301382263}]}