{"1": [{"determining": "Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) )", "obj1": 0.23279352226720648, "obj2": 0.7483373386516984}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Max( Max( Max( RRS,( DDR * FirstVNF_RAM ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / ( Min( ( MUR + MLU ) ,MUM ) - ( ( RRSe + MUM ) + CS ) ) ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7350345795207601}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUM + DS ) ,( MUC * MUM ) )", "obj1": 0.3259109311740891, "obj2": 0.6319157482128659}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem / MDR ) )", "choosing": "Max( Min( MLU ,MLU ),Min( Max( DS,MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,BR ) )", "choosing": "Max( ( MLU - RMSe ),( RCSe - Min( RRSe ,MLU ) ) )", "obj1": 0.20647773279352227, "obj2": 0.7759377309856371}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MLU * DS ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) * ( ( AMS - Min( ACS ,FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( CS - MLU ),Min( CS ,MUM ) )", "obj1": 0.48380566801619435, "obj2": 0.4662353491268686}, {"determining": "( ( MDR * ACS ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( ( RMSe - ( ( ( Max( MUR,MUM ) * CS ) / RCSe ) / DS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( Max( Const,MRS ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - ( ( FirstVNF_CPU_Server + ( AMS * FirstVNF_Mem_Server ) ) * Min( Const ,FirstVNF_Mem ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + Max( Min( RCSe ,RMSe ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,ACS ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( ( MLU + MUM ) / Min( RMSe ,RRSe ) ) )", "obj1": 0.22469635627530365, "obj2": 0.7697897361340833}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS * ARS ) ,MRS ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9311740890688259, "obj2": 0.07041572024249179}, {"determining": "Max( ( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - Min( Min( DS ,MUM ) ,Max( MUR,RMSe ) ) )", "obj1": 0.20445344129554655, "obj2": 0.7832136345963626}, {"determining": "( Max( Min( AMS ,FirstVNF_CPU ),( Const / MDR ) ) - ( MDR - PN ) )", "choosing": "( ( ( MUC / MLU ) - Min( MLU ,MUC ) ) * ( Max( MUC,MUC ) / ( RRSe + MUR ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7872090297003597}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( Const + ACS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( RMSe - ( MUR - MUM ) ) ,( Min( ( MUC - MUM ) ,MUM ) + Min( RMSe ,MUR ) ) ) + ( RRSe - MUC ) ) - ( CS - Min( ( DS / CS ) ,( MUR / RCSe ) ) ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( ( BR / BR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( ( DS + MUC ) / ( MUR * RCSe ) ) )", "obj1": 0.6740890688259109, "obj2": 0.31506931501937413}, {"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( RCSe - RCSe ),( MUM - Min( DS ,( MUC + RMSe ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.8044753392327996}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6968646182209287}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( AMS / MDR ) ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( ( DS + RRSe ) ,Min( RMSe ,MUC ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( ( DS + MUC ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + CRS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RCSe * Min( Max( ( CS / MUM ),DS ) ,( RMSe / Max( Max( RCSe,RRSe ),MUC ) ) ) ) / MUM ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Min( FirstVNF_CPU ,( BR / MDR ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.16194331983805668, "obj2": 0.8178634756811718}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) / ( FirstVNF_RAM / MDR ) )", "choosing": "Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6423186455189427}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( Min( FirstVNF_RAM_Server ,ACS ) - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM * RCSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,Max( PN,BR ) ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,Max( MUR,DS ) ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( ( Max( ( DS + MLU ),MUR ) * ( MUR * MUC ) ) * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.36510607092779973}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}], "2": [{"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem / MDR ) )", "choosing": "Max( Min( MLU ,MLU ),Min( Max( DS,MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MLU * DS ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( ( RMSe - ( ( ( Max( MUR,MUM ) * CS ) / RCSe ) / DS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( Max( Const,MRS ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - ( ( FirstVNF_CPU_Server + ( AMS * FirstVNF_Mem_Server ) ) * Min( Const ,FirstVNF_Mem ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + Max( Min( RCSe ,RMSe ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( Const + ACS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( RMSe - ( MUR - MUM ) ) ,( Min( ( MUC - MUM ) ,MUM ) + Min( RMSe ,MUR ) ) ) + ( RRSe - MUC ) ) - ( CS - Min( ( DS / CS ) ,( MUR / RCSe ) ) ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( ( BR / BR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( ( DS + MUC ) / ( MUR * RCSe ) ) )", "obj1": 0.6740890688259109, "obj2": 0.31506931501937413}, {"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( AMS / MDR ) ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( ( DS + RRSe ) ,Min( RMSe ,MUC ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( ( DS + MUC ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + CRS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RCSe * Min( Max( ( CS / MUM ),DS ) ,( RMSe / Max( Max( RCSe,RRSe ),MUC ) ) ) ) / MUM ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( Min( FirstVNF_RAM_Server ,ACS ) - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM * RCSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,Max( PN,BR ) ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,Max( MUR,DS ) ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( ( Max( ( DS + MLU ),MUR ) * ( MUR * MUC ) ) * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.36510607092779973}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( AMS,FirstVNF_Mem ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - Max( ( MLU - RMSe ),( RCSe - RCSe ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( Max( DS,RCSe ) - MLU ),Min( DS ,DS ) )", "obj1": 0.44129554655870445, "obj2": 0.5058035853338267}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) )", "choosing": "Min( ( RMSe * ( RMSe * CS ) ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) / FirstVNF_RAM ) - ( ( BR + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( MUC * CS ),MUM ) - ( RMSe * MLU ) ) * ( ( ( RRSe + ( ( MUC - MUM ) - Max( ( CS - ( MUC + RMSe ) ),( ( MUM - MUM ) * MUM ) ) ) ) * MUR ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.5059564799363891}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - Max( FirstVNF_Mem,( AMS + ACS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / MUR ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_RAM_Server - Max( ACS,CRS ) ) ) - Min( DDR ,( FirstVNF_Mem_Server / MDR ) ) ) ,PN ) - Max( RRS,( ( ( ( ( MRS - FirstVNF_CPU ) * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) ) + Min( BR ,MRS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( ( CS / Max( RMSe,MUC ) ) + CS ) * Max( MLU,CS ) ) ) / ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + AMS ) * MRS ) * ( AMS + ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8806120775307926}, {"determining": "( Max( ACS,ACS ) - ( AMS + ( AMS * Max( FirstVNF_Mem,Max( ( BR - ARS ),FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( MUC ,( ( RMSe * ( ( ( Max( RCSe,RCSe ) + Min( RMSe ,RRSe ) ) * Min( DS ,( DS / MLU ) ) ) + MUM ) ) - ( MUR / MUM ) ) ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( AMS * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( MLU * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( RRS - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + MRS ) ) ) )", "choosing": "( Max( MUM,CS ) * Max( Min( CS ,( MLU + ( ( MLU + ( DS * RCSe ) ) - Min( MUM ,( ( MLU - RMSe ) * CS ) ) ) ) ),( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( FirstVNF_Mem / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU * ( FirstVNF_Mem_Server + ACS ) ) ,Max( ( MRS * ( ( FirstVNF_RAM * ( Min( ( AMS + MRS ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),Const ) )", "choosing": "Min( ( MUC / ( Min( RRSe ,RRSe ) + ( MUC + ( MLU / ( MLU - MUR ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.520242914979757, "obj2": 0.4130746761266774}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * ( FirstVNF_CPU * ( RRS - MRS ) ) )", "choosing": "( ( ( DS * RMSe ) - RCSe ) / ( ( Max( ( MUC - MUC ),( DS * DS ) ) * ( Min( MUR ,RMSe ) - ( MLU * MUC ) ) ) / Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + FirstVNF_CPU_Server ) * ACS ) * ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ) - ( FirstVNF_Mem_Server * ( MRS + ACS ) ) )", "choosing": "Min( ( RRSe + RRSe ) ,( ( ( MUC - RRSe ) * Max( DS,RCSe ) ) * Min( Max( MUC,RCSe ) ,( MUC - RMSe ) ) ) )", "obj1": 0.9210526315789473, "obj2": 0.10183794468496163}, {"determining": "( Max( ( BR * ( ( ( DDR * FirstVNF_Mem_Server ) - RRS ) - Const ) ),( CRS - MRS ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) + ( CRS / ARS ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( AMS + ARS ) ) ) )", "choosing": "( ( MUC / RCSe ) / Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) )", "obj1": 0.4291497975708502, "obj2": 0.5385311698407903}, {"determining": "( PN - ( ( Min( CRS ,FirstVNF_RAM ) * ( CRS * BR ) ) / ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_CPU,MDR ) ) ) )", "choosing": "( Max( DS,( CS - CS ) ) - ( RMSe - Max( Min( ( MLU / ( RCSe - Max( Max( MUM,MUR ),Max( DS,MUM ) ) ) ) ,( ( RRSe - CS ) + ( ( MUM + MUM ) + RMSe ) ) ),CS ) ) )", "obj1": 0.3016194331983806, "obj2": 0.6403108615681138}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( ( ( ( DS + MUR ) * RMSe ) + ( Min( CS ,MUM ) / RCSe ) ),MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MUR,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.45608175398277695}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,( ACS - CRS ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Max( Max( RRSe,DS ),MLU ) ) )", "obj1": 0.22874493927125505, "obj2": 0.7017977081133097}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR * MRS ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * Const ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( RRSe * ( MLU - Max( Max( ( MUR / ( MUR * RRSe ) ),MUC ),RRSe ) ) ) + RRSe ) )", "obj1": 0.8481781376518218, "obj2": 0.12576794239253788}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( ( MLU + ( MLU / CS ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS * Min( Max( FirstVNF_CPU_Server,PN ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ,MRS ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( RMSe ,Max( RRSe,MUM ) ) )", "obj1": 0.9291497975708503, "obj2": 0.0674581939249509}, {"determining": "( ARS + ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5778363764563859}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / ( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) ) ) ) ,MUM ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / Min( ACS ,BR ) ) )", "choosing": "( ( Max( ( RMSe * CS ),Max( ( MLU - RMSe ),( RCSe - RCSe ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( RRSe - MUR ),MUR ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( MUR / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( MLU - RMSe ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.37575208043355784}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_CPU_Server ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / ( Min( MUC ,( DS - RRSe ) ) + MUM ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( Min( FirstVNF_RAM_Server ,ACS ) - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM * RCSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server * Const ) - Max( ARS,( RRS - ( AMS * ( RRS * ARS ) ) ) ) ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM,BR ) ) ) ) + Max( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS - Const ) ),( ( DDR * ARS ) * ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( ( ( ( CS - DS ) * CS ) * MUM ) * ( Max( MLU,DS ) + ( ( ( CS / Max( ( ( MUC - RCSe ) - MUC ),RMSe ) ) / RCSe ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( AMS ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( CS ,MUM ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) * ( PN + Min( BR ,RRS ) ) )", "choosing": "Max( MUC,Min( CS ,( CS * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Max( RRS,( DDR * FirstVNF_RAM ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / ( Min( ( MUR + MLU ) ,MUM ) - ( ( RRSe + MUM ) + CS ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6877752441856392}, {"determining": "( ( MDR * ( ( MRS / Const ) + RRS ) ) - ( ( Max( Min( FirstVNF_Mem ,ARS ),DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * Min( MLU ,MUR ) ),( ( ( MUC * MUM ) * ( CS - ( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Min( ( MDR / ACS ) ,( BR - FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) + Max( DDR,AMS ) ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU - DDR ) ) ) )", "choosing": "( ( ( MUR - MUM ) / ( RMSe - MUM ) ) * ( ( ( MUM - CS ) * ( RRSe * DS ) ) / ( ( MUC / RMSe ) - ( MUR * MLU ) ) ) )", "obj1": 0.5769230769230769, "obj2": 0.3865067093051586}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( CRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server + ACS ) ) ) )", "choosing": "( Min( DS ,MUR ) / Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,AMS ) ,Max( FirstVNF_Mem,( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MLU * MUM ),( MLU + DS ) )", "obj1": 0.4898785425101215, "obj2": 0.4498255900205239}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - FirstVNF_RAM )", "choosing": "( Min( DS ,MUR ) / ( ( ( ( ( MUM / MLU ) - MUC ) + ( DS + RMSe ) ) * ( CS / ( Max( MLU,MLU ) / ( MUR + MUR ) ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ARS ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07086526164287087}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "( Max( ACS,ACS ) - ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( ( ( MDR * ACS ) / Min( AMS ,MRS ) ) + FirstVNF_RAM_Server ) ) * ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( Max( MLU,MLU ) - ( Max( DS,( ( Max( MUR,MUM ) * CS ) / RCSe ) ) * MUC ) )", "obj1": 0.26720647773279355, "obj2": 0.6621939559847408}, {"determining": "( ( ( ( MDR + FirstVNF_CPU_Server ) * ACS ) * CRS ) - ( FirstVNF_Mem_Server * ( MRS + ACS ) ) )", "choosing": "Min( Max( ( Max( RCSe,RMSe ) + ( DS - MUR ) ),Max( ( MLU / DS ),( RMSe - RCSe ) ) ) ,( ( ( MUC - RRSe ) * Max( DS,RCSe ) ) * Min( Max( MUC,RCSe ) ,( MUC - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem,MRS ) )", "choosing": "Max( RRSe,( MLU + DS ) )", "obj1": 0.46963562753036436, "obj2": 0.48526009959492056}, {"determining": "( Min( ( ( CRS / FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server * Const ) - Max( ARS,( RRS - ( AMS * ( RRS * ARS ) ) ) ) ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM,BR ) ) ) ) + Max( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS - Const ) ),( ( DDR * ARS ) * ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( ( ( ( CS - DS ) * CS ) * MUM ) * ( Max( MLU,DS ) + ( ( ( CS / Max( ( ( MUC - RCSe ) - MUC ),RMSe ) ) / RCSe ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "( MUR + ( CS / MLU ) )", "obj1": 0.6437246963562753, "obj2": 0.33503401326695587}, {"determining": "Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,( ( ACS / CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( RCSe - RCSe ),( MUM - Min( DS ,( CS / RCSe ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.7837344949170697}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUC + RMSe ) ) ) - ( CS * RMSe ) )", "obj1": 0.20242914979757085, "obj2": 0.7348871146775852}, {"determining": "Min( ( ( PN * Max( ( Max( DDR,( FirstVNF_RAM - ( FirstVNF_CPU_Server + CRS ) ) ) / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Max( Max( RMSe,MUC ),RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.39878542510121456, "obj2": 0.5467356445517436}, {"determining": "Max( Max( Max( RRS,( DDR * FirstVNF_RAM ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / ( Min( ( MUR + MLU ) ,MUM ) - ( ( RRSe + MUM ) + CS ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6877752441856392}, {"determining": "( ACS - ( ( Max( MRS,DDR ) / BR ) + Min( DDR ,ARS ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( MUM * MLU ) ),( ( ( ( MUM / RCSe ) / RCSe ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server * RRS ) ,Max( ACS,PN ) ) ,( ( FirstVNF_Mem * BR ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) )", "choosing": "( Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - ( ( RMSe * ( RCSe * ( RRSe - RCSe ) ) ) / ( MUM - RRSe ) ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) ) - ( ( MUM / RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( ( DDR + BR ),MDR ) )", "choosing": "( Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( CRS - AMS ),PN ) ,Min( FirstVNF_RAM ,( ACS + MRS ) ) )", "choosing": "( DS - ( ( RRSe * RRSe ) + CS ) )", "obj1": 0.31781376518218624, "obj2": 0.6200636821738565}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( RCSe - Max( CS,RCSe ) ) )", "obj1": 0.7651821862348178, "obj2": 0.20613080129518593}, {"determining": "( ( DDR / ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) * ( Max( Min( ACS ,DDR ),( ( BR + ( Const - MRS ) ) / FirstVNF_CPU ) ) * DDR ) )", "choosing": "( ( MUR - CS ) - ( ( RMSe + ( ( RCSe - RMSe ) * RMSe ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,CRS ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8707178022260385}], "3": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( ( Max( ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ),AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) + ARS ) )", "choosing": "Max( ( Min( ( MUC - ( MLU / ( Max( RRSe,CS ) * MLU ) ) ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem / MDR ) )", "choosing": "Max( Min( MLU ,MLU ),Min( Max( DS,MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR * MRS ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * Const ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( RRSe * ( MLU - Max( Max( ( MUR / ( MUR * RRSe ) ),MUC ),RRSe ) ) ) + RRSe ) )", "obj1": 0.8481781376518218, "obj2": 0.12576794239253788}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( AMS / MDR ) ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( ( DS + RRSe ) ,Min( RMSe ,MUC ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,( MRS - PN ) ) ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,( ( ( RMSe - RMSe ) + DS ) * MUR ) ) - ( CS * RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.7489805510586834}, {"determining": "( ( ( ARS - ( FirstVNF_RAM_Server - PN ) ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS - MUM ),( MUM + RCSe ) )", "obj1": 0.888663967611336, "obj2": 0.07351059489159435}, {"determining": "( ( ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Min( ( MDR / ACS ) ,( BR - FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) + Max( DDR,AMS ) ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU - DDR ) ) ) )", "choosing": "( ( ( MUR - MUM ) / ( RMSe - MUM ) ) * ( ( ( MUM - CS ) * ( RRSe * DS ) ) / ( ( MUC / RMSe ) - ( MUR * MLU ) ) ) )", "obj1": 0.5769230769230769, "obj2": 0.3865067093051586}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( ( DS + MUC ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( RCSe - Max( CS,RCSe ) ) )", "obj1": 0.7651821862348178, "obj2": 0.20613080129518593}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( DDR / FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "( MUR + ( CS / MLU ) )", "obj1": 0.6437246963562753, "obj2": 0.33503401326695587}, {"determining": "Max( Max( Max( ( CRS * FirstVNF_Mem ),MRS ),( FirstVNF_RAM + RRS ) ),Min( DDR ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),( CS * CS ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) ) / CS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4125058986251008}, {"determining": "Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MUR,DS ) ) * DS )", "obj1": 0.582995951417004, "obj2": 0.35529561550936384}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( MDR + ( ( Max( AMS,AMS ) / ( ( RRS + FirstVNF_RAM ) * FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS - ( DS / ( ( ( ( MUM * RRSe ) + ( MUR + Min( DS ,MUR ) ) ) * DS ) * ( MUR / CS ) ) ) ),MUM )", "obj1": 0.6133603238866396, "obj2": 0.3405263915382686}, {"determining": "( ( ( DDR / ACS ) / ( RRS + CRS ) ) - ( FirstVNF_CPU_Server / Min( ACS ,BR ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( RCSe,( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / MUR ) )", "obj1": 0.742914979757085, "obj2": 0.21941341085632504}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.659919028340081, "obj2": 0.29933849066549467}, {"determining": "( ( DDR / ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) * ( Max( Min( ACS ,DDR ),( ( BR + ( Const - MRS ) ) / FirstVNF_CPU ) ) * DDR ) )", "choosing": "( ( MUR - CS ) - ( ( RMSe + ( ( RCSe - RMSe ) * RMSe ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( PN - ( ( Min( CRS ,FirstVNF_RAM ) * ( CRS * BR ) ) / ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_CPU,MDR ) ) ) )", "choosing": "( Max( DS,( CS - CS ) ) - ( RMSe - Max( Min( ( MLU / ( RCSe - Max( Max( MUM,MUR ),Max( DS,MUM ) ) ) ) ,( ( RRSe - CS ) + ( ( MUM + MUM ) + RMSe ) ) ),CS ) ) )", "obj1": 0.3016194331983806, "obj2": 0.6403108615681138}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( DDR,( FirstVNF_Mem * Min( ACS ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUC + ( RRSe - MUR ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.21862348178137653, "obj2": 0.7222832351641022}, {"determining": "( Max( ACS,ACS ) - ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( ( ( MDR * ACS ) / Min( AMS ,MRS ) ) + FirstVNF_RAM_Server ) ) * ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( Max( MLU,MLU ) - ( Max( DS,( ( Max( MUR,MUM ) * CS ) / RCSe ) ) * MUC ) )", "obj1": 0.26720647773279355, "obj2": 0.6621939559847408}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4574898785425101, "obj2": 0.4780170024190054}, {"determining": "( ( ( DDR - Min( ( Max( BR,( FirstVNF_RAM_Server - Max( ACS,CRS ) ) ) - Min( DDR ,( FirstVNF_Mem_Server / MDR ) ) ) ,PN ) ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,RCSe ) + ( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( MUC * CS ) ) ) )", "obj1": 0.97165991902834, "obj2": 0.035950136456377624}, {"determining": "( ( BR / BR ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) )", "obj1": 0.10526315789473684, "obj2": 0.86728754734199}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( DDR,BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,BR ) ,( FirstVNF_CPU_Server / CRS ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( ( MUR + ( MUM / DS ) ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.7186234817813765, "obj2": 0.2377745877707204}, {"determining": "( ( ( ( BR + ( ( DDR / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * Min( MUM ,( CS + RCSe ) ) ) ) ) ) + RRSe ) )", "obj1": 0.7125506072874493, "obj2": 0.24342819636719884}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.659919028340081, "obj2": 0.29933849066549467}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Max( MLU,RMSe ) + ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,( ACS - CRS ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Max( Max( RRSe,DS ),MLU ) ) )", "obj1": 0.22874493927125505, "obj2": 0.7017977081133097}, {"determining": "Min( Const ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ( Max( ACS,ACS ) - ( AMS + ( AMS * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) )", "obj1": 0.39068825910931176, "obj2": 0.5687999718318616}, {"determining": "( Max( MRS,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( Max( DS,RCSe ) - MLU ),Min( DS ,DS ) )", "obj1": 0.44129554655870445, "obj2": 0.5058035853338267}, {"determining": "( FirstVNF_CPU - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MLU * DS ) * ( Min( DS ,MUM ) / CS ) )", "obj1": 0.951417004048583, "obj2": 0.044152168996853494}, {"determining": "Min( Const ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( ARS + ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5778363764563859}, {"determining": "( Min( ( ( CRS / FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server * Const ) - Max( ARS,( RRS - ( AMS * ( RRS * ARS ) ) ) ) ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM,BR ) ) ) ) + Max( FirstVNF_Mem,( ( DDR * ARS ) * Min( RRS ,( ( DDR - FirstVNF_RAM ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( DS / DS ) ,RRSe ) * MUC ) * ( Max( MLU,DS ) + ( ( ( CS / Max( ( ( MUC - RCSe ) - MUC ),Min( MUC ,( DS - RRSe ) ) ) ) / RCSe ) * CS ) ) )", "obj1": 0.4271255060728745, "obj2": 0.5238520328782795}, {"determining": "Min( ( FirstVNF_Mem - ARS ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07086526164287087}, {"determining": "Max( Max( Max( Max( ( CRS * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / Min( DS ,MUM ) ) - MLU ) - ( MUR / Min( DS ,MUM ) ) ),MLU ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.7009973304172806}, {"determining": "Min( Max( ( CRS - AMS ),PN ) ,Min( FirstVNF_RAM ,( ACS + MRS ) ) )", "choosing": "( DS - ( ( RRSe * RRSe ) + CS ) )", "obj1": 0.31781376518218624, "obj2": 0.6200636821738565}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUC + RMSe ) ) ) - ( CS * RMSe ) )", "obj1": 0.20242914979757085, "obj2": 0.7348871146775852}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Max( RMSe,( MUC / RRSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.4665711545750713}, {"determining": "Min( RRS ,Max( Min( FirstVNF_RAM ,AMS ),Max( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),MDR ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * Min( CS ,( DS - Min( RRSe ,CS ) ) ) ) ,Min( RCSe ,Min( CS ,( CS * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,Max( CS,MUC ) ) ,( MUM / MUC ) ) )", "obj1": 0.31376518218623484, "obj2": 0.623984231680261}, {"determining": "Max( Max( Max( RRS,( DDR * FirstVNF_RAM ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / ( Min( ( MUR + MLU ) ,MUM ) - ( ( RRSe + MUM ) + CS ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6877752441856392}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "Min( ( ( PN * Max( ( Max( DDR,( FirstVNF_RAM - ( FirstVNF_CPU_Server + CRS ) ) ) / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Max( Max( RMSe,MUC ),RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.39878542510121456, "obj2": 0.5467356445517436}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( DDR * Min( ( ACS + BR ) ,FirstVNF_Mem ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + MLU ) / ( DS - ( ( CS + MUC ) / RCSe ) ) ) ,RRSe ) ) ) / ( Max( RCSe,MUC ) * ( Min( RCSe ,MLU ) - ( Min( ( RMSe / ( Min( MUC ,RCSe ) + MLU ) ) ,MLU ) + MUC ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.5479267277881271}, {"determining": "Min( ( FirstVNF_CPU * ( FirstVNF_Mem_Server + ACS ) ) ,Max( ( MRS * ( ( FirstVNF_RAM * ( Min( ( AMS + MRS ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),Const ) )", "choosing": "Min( ( MUC / ( Min( RRSe ,RRSe ) + ( MUC + ( MLU / ( MLU - MUR ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.520242914979757, "obj2": 0.4130746761266774}, {"determining": "( ACS + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUM + DS ) ) ) - ( CS * RMSe ) )", "obj1": 0.20242914979757085, "obj2": 0.7348871146775852}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUR / Min( DS ,MUM ) ) - MLU ) / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.5060728744939271, "obj2": 0.4246759219853851}, {"determining": "( Max( MRS,Const ) * ( FirstVNF_Mem - ARS ) )", "choosing": "Max( MUC,Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.05173032037034223}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( DDR ,ARS ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - ( MUR / MUM ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004415728084938803}, {"determining": "Min( Min( MRS ,AMS ) ,Max( FirstVNF_Mem,( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MLU * MUM ),( MLU + DS ) )", "obj1": 0.4898785425101215, "obj2": 0.4498255900205239}, {"determining": "Max( Max( Max( RRS,( DDR * FirstVNF_RAM ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / ( Min( ( MUR + MLU ) ,MUM ) - ( ( RRSe + MUM ) + CS ) ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6877752441856392}, {"determining": "( ( RRS - ( AMS * ( RRS * ARS ) ) ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( ( RMSe - ( ( ( ( ( CS - DS ) * CS ) * MUM ) / RCSe ) / DS ) ) * MUC ) )", "obj1": 0.49190283400809715, "obj2": 0.4370057816895736}, {"determining": "( ACS - ( Min( ( ( PN * Const ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) + ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( ( ( ( MUM / RCSe ) / RCSe ) * ( CS - RRSe ) ) / ( Max( MUM,Min( MUC ,MUM ) ) / ( MUR - DS ) ) ) )", "obj1": 0.4291497975708502, "obj2": 0.512447081084415}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,CRS ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8707178022260385}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / ( ( Max( AMS,AMS ) / ( Min( FirstVNF_RAM_Server ,ACS ) - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( ( ( MUM * RCSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) ) )", "obj1": 0.979757085020243, "obj2": 0.015485019045883525}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.46876858118742454}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "Min( ( FirstVNF_Mem - ARS ) ,( ( ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Min( ( MDR / ACS ) ,( BR - FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) + Max( DDR,AMS ) ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU - DDR ) ) ) ) )", "choosing": "( Min( ( ( MUM - CS ) / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0018976995118416098}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),BR ) ) ,( Min( ( Min( BR ,FirstVNF_RAM_Server ) - RRS ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,DS ) / Max( ( Min( DS ,Min( Min( Max( MUM,( MLU / RCSe ) ) ,( ( RCSe / RMSe ) / DS ) ) ,MUM ) ) + MUM ),( MLU * RRSe ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06335432586830855}, {"determining": "( Min( ( CRS - MRS ) ,MRS ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - ( ( MUC / RCSe ) / Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06586543021405553}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "Max( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.5059564799363891}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / ( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) ) ) ) ,MUM ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}, {"determining": "Min( ( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + CRS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07086526164287087}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MLU * DS ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( ( RMSe - ( ( ( Max( MUR,MUM ) * CS ) / RCSe ) / DS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MRS ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - ( ( FirstVNF_CPU_Server + ( AMS * FirstVNF_Mem_Server ) ) * Min( Const ,FirstVNF_Mem ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + Max( Min( RCSe ,RMSe ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( Const + ACS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( RMSe - ( MUR - MUM ) ) ,( Min( ( MUC - MUM ) ,MUM ) + Min( RMSe ,MUR ) ) ) + ( RRSe - MUC ) ) - ( CS - Min( ( DS / CS ) ,( MUR / RCSe ) ) ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + CRS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RCSe * Min( Max( ( CS / MUM ),DS ) ,( RMSe / Max( Max( RCSe,RRSe ),MUC ) ) ) ) / MUM ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( Min( FirstVNF_RAM_Server ,ACS ) - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM * RCSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,Max( PN,BR ) ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,Max( MUR,DS ) ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( AMS,FirstVNF_Mem ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - Max( ( MLU - RMSe ),( RCSe - RCSe ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) )", "choosing": "Min( ( RMSe * ( RMSe * CS ) ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) / FirstVNF_RAM ) - ( ( BR + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( MUC * CS ),MUM ) - ( RMSe * MLU ) ) * ( ( ( RRSe + ( ( MUC - MUM ) - Max( ( CS - ( MUC + RMSe ) ),( ( MUM - MUM ) * MUM ) ) ) ) * MUR ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - Max( FirstVNF_Mem,( AMS + ACS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / MUR ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_RAM_Server - Max( ACS,CRS ) ) ) - Min( DDR ,( FirstVNF_Mem_Server / MDR ) ) ) ,PN ) - Max( RRS,( ( ( ( ( MRS - FirstVNF_CPU ) * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) ) + Min( BR ,MRS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( ( CS / Max( RMSe,MUC ) ) + CS ) * Max( MLU,CS ) ) ) / ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,ACS ) - ( AMS + ( AMS * Max( FirstVNF_Mem,Max( ( BR - ARS ),FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( MUC ,( ( RMSe * ( ( ( Max( RCSe,RCSe ) + Min( RMSe ,RRSe ) ) * Min( DS ,( DS / MLU ) ) ) + MUM ) ) - ( MUR / MUM ) ) ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( AMS * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( MLU * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( RRS - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + MRS ) ) ) )", "choosing": "( Max( MUM,CS ) * Max( Min( CS ,( MLU + ( ( MLU + ( DS * RCSe ) ) - Min( MUM ,( ( MLU - RMSe ) * CS ) ) ) ) ),( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( FirstVNF_Mem / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * ( FirstVNF_CPU * ( RRS - MRS ) ) )", "choosing": "( ( ( DS * RMSe ) - RCSe ) / ( ( Max( ( MUC - MUC ),( DS * DS ) ) * ( Min( MUR ,RMSe ) - ( MLU * MUC ) ) ) / Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( ( ( ( DS + MUR ) * RMSe ) + ( Min( CS ,MUM ) / RCSe ) ),MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ACS ) + Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) + AMS ) ,FirstVNF_CPU_Server ) ) ,PN ) - Max( FirstVNF_Mem,( AMS + ACS ) ) )", "choosing": "( ( MUM + MUC ) / Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( ( Max( ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ),AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) + ARS ) )", "choosing": "Max( ( Min( ( MUC - ( MLU / ( Max( RRSe,CS ) * MLU ) ) ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR * MRS ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * Const ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( RRSe * ( MLU - Max( Max( ( MUR / ( MUR * RRSe ) ),MUC ),RRSe ) ) ) + RRSe ) )", "obj1": 0.8481781376518218, "obj2": 0.12576794239253788}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( AMS / MDR ) ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( ( DS + RRSe ) ,Min( RMSe ,MUC ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MUR,DS ) ) * DS )", "obj1": 0.582995951417004, "obj2": 0.35529561550936384}, {"determining": "( ( ( ARS - ( FirstVNF_RAM_Server - PN ) ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS - MUM ),( MUM + RCSe ) )", "obj1": 0.888663967611336, "obj2": 0.07351059489159435}, {"determining": "Min( Const ,Max( ( ( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) / Max( RRS,FirstVNF_CPU ) ) + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ),DS ) ) * DS )", "obj1": 0.5222672064777328, "obj2": 0.38538397794983975}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "Min( Min( MRS ,AMS ) ,( ARS + AMS ) )", "choosing": "Max( ( MLU * ( ( Min( ( MUC - ( ( CS + MLU ) / DS ) ) ,RMSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) ) ),( MLU + DS ) )", "obj1": 0.6093117408906883, "obj2": 0.32920972771382984}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( RCSe - Max( CS,RCSe ) ) )", "obj1": 0.7651821862348178, "obj2": 0.20613080129518593}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( DDR / ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) * ( Max( Min( ACS ,DDR ),( ( BR + ( Const - MRS ) ) / FirstVNF_CPU ) ) * DDR ) )", "choosing": "( ( MUR - CS ) - ( ( RMSe + ( ( RCSe - RMSe ) * RMSe ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),Min( Max( ( CRS - AMS ),PN ) ,Min( FirstVNF_RAM ,( ACS + MRS ) ) ) ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( RRSe * RRSe ) + CS ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6659919028340081, "obj2": 0.28926632895164633}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( ( DS + MUC ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( ( DDR / ACS ) / ( RRS + CRS ) ) - ( FirstVNF_CPU_Server / Min( ACS ,BR ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( RCSe,( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / MUR ) )", "obj1": 0.742914979757085, "obj2": 0.21941341085632504}, {"determining": "( ( ( Max( ( DDR * FirstVNF_Mem ),PN ) / FirstVNF_CPU ) - ( ARS / BR ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MUC + Min( ( RRSe - DS ) ,( ( ( ( MUC / DS ) / MUM ) - Min( DS ,Min( RMSe ,RRSe ) ) ) * ( RCSe * RMSe ) ) ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ) )", "obj1": 0.291497975708502, "obj2": 0.6328564263042866}, {"determining": "( ( BR / BR ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) )", "obj1": 0.10526315789473684, "obj2": 0.86728754734199}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( DDR,BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,BR ) ,( FirstVNF_CPU_Server / CRS ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( ( MUR + ( MUM / DS ) ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.7186234817813765, "obj2": 0.2377745877707204}, {"determining": "( ( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,CRS ) ) ) ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - Min( DS ,( MUC + RMSe ) ) ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.32008493133826116}, {"determining": "( ( DDR / ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) * ( FirstVNF_CPU / ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + Min( CS ,RCSe ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6725998230783696}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) ,CRS )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),( ( MUM - Min( DS ,( MUC + ( RRSe - MUR ) ) ) ) - ( CS * RMSe ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7124190386861728}, {"determining": "( ( CRS + ( AMS / FirstVNF_RAM ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( Min( RCSe ,Min( CS ,( CS * ( CS - RMSe ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 0.354251012145749, "obj2": 0.5813159891080739}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "Min( ( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + CRS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ,Max( ( CRS + Const ),( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( DDR,( FirstVNF_Mem * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,( MUM - Min( DS ,( MUC + ( RRSe - MUR ) ) ) ) ) ) ) / Min( Min( ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07020341871207794}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6480088538219071}, {"determining": "Min( ( FirstVNF_CPU * ( FirstVNF_Mem_Server + ACS ) ) ,Max( ( MRS * ( ( FirstVNF_RAM * ( Min( ( AMS + MRS ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),Const ) )", "choosing": "Min( ( MUC / ( Min( RRSe ,RRSe ) + ( MUC + ( MLU / ( MLU - MUR ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.520242914979757, "obj2": 0.4130746761266774}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Max( ARS,ARS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS + Min( MLU ,MLU ) ) * RMSe ) + ( ( RRSe * Min( Min( MLU ,RRSe ) ,RCSe ) ) / RCSe ) )", "obj1": 0.4271255060728745, "obj2": 0.5204593195951166}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Min( Min( ( ( FirstVNF_RAM_Server - MRS ) / BR ) ,( MDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( RRSe + RCSe ),MUM ) ) ,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.2408906882591093, "obj2": 0.6874955713598736}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,( ACS - CRS ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Max( Max( RRSe,DS ),MLU ) ) )", "obj1": 0.22874493927125505, "obj2": 0.7017977081133097}, {"determining": "( ( AMS + ( AMS * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( MLU * ( CS - ( CS / MUM ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.26297827379176003}, {"determining": "( Min( ( ( CRS / FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server * Const ) - Max( ARS,( RRS - ( AMS * ( RRS * ARS ) ) ) ) ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM,BR ) ) ) ) + Max( ( CRS - AMS ),PN ) )", "choosing": "( ( ( DS + CS ) * MUM ) * ( Max( MLU,DS ) + ( ( ( CS / Max( ( ( MUC - RCSe ) - MUC ),Min( MUC ,( DS - RRSe ) ) ) ) / RCSe ) * CS ) ) )", "obj1": 0.9331983805668016, "obj2": 0.044181739066638075}, {"determining": "Min( Max( ( CRS - AMS ),PN ) ,Min( FirstVNF_RAM ,( ACS + MRS ) ) )", "choosing": "( DS - ( ( RRSe * RRSe ) + CS ) )", "obj1": 0.31781376518218624, "obj2": 0.6200636821738565}, {"determining": "Min( RRS ,Max( Min( FirstVNF_RAM ,AMS ),Max( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),MDR ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * Min( CS ,( DS - Min( RRSe ,CS ) ) ) ) ,Min( RCSe ,Min( CS ,( CS * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,Max( CS,MUC ) ) ,( MUM / MUC ) ) )", "obj1": 0.31376518218623484, "obj2": 0.623984231680261}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( ( Min( ( DDR / DDR ) ,( MRS * Min( PN ,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) - ( ( MRS - Min( ACS ,FirstVNF_Mem_Server ) ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / ( RCSe + MUC ) ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9757085020242915, "obj2": 0.015371031254488793}, {"determining": "( ( Min( ( ( PN * Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) + FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RMSe - ( ( ( Max( Max( MLU,MLU ),MUM ) * CS ) / RCSe ) / DS ) ) * ( Max( MLU,RMSe ) + ( ( DS / RMSe ) / RCSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.49281655150575565}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4574898785425101, "obj2": 0.4780170024190054}, {"determining": "( ( ( ( BR + ( ( DDR / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * Min( MUM ,( CS + RCSe ) ) ) ) ) ) + RRSe ) )", "obj1": 0.7125506072874493, "obj2": 0.24342819636719884}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,( Min( ACS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( CS - RRSe ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.21364037931527072}, {"determining": "Min( Const ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ( Max( ACS,ACS ) - ( AMS + ( AMS * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) )", "obj1": 0.39068825910931176, "obj2": 0.5687999718318616}, {"determining": "( ARS + ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5778363764563859}, {"determining": "( ACS - Min( Min( PN ,CRS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - ( RRSe + MUC ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004408607664567634}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "Min( ( ( PN * Max( ( Max( DDR,( FirstVNF_RAM - ( FirstVNF_CPU_Server + CRS ) ) ) / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Max( Max( RMSe,MUC ),RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.39878542510121456, "obj2": 0.5467356445517436}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( DDR * Min( ( ACS + BR ) ,FirstVNF_Mem ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + MLU ) / ( DS - ( ( CS + MUC ) / RCSe ) ) ) ,RRSe ) ) ) / ( Max( RCSe,MUC ) * ( Min( RCSe ,MLU ) - ( Min( ( RMSe / ( Min( MUC ,RCSe ) + MLU ) ) ,MLU ) + MUC ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.5479267277881271}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server * ( FirstVNF_CPU_Server / ( Const - FirstVNF_RAM_Server ) ) ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Max( ( MLU + ( MUC - ( RCSe - Max( CS,RCSe ) ) ) ),( Max( ( ( RCSe + MUR ) / ( RCSe / MUM ) ),( CS + Max( CS,CS ) ) ) + RCSe ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1862348178137652, "obj2": 0.7399964979279069}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.19230769230769232, "obj2": 0.7352451098153744}, {"determining": "( ( DDR / PN ) * ( ( PN * ( FirstVNF_Mem * ( ( ( CRS - DDR ) + FirstVNF_Mem ) + FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) ) )", "choosing": "( Max( RMSe,( ( ( RRSe - ( MUM + RMSe ) ) / ( MUM + MLU ) ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.6497975708502024, "obj2": 0.31651807848887503}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( Min( ARS ,ARS ),DDR ) * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( ( CS / DS ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,RMSe ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6558704453441295, "obj2": 0.3022895037960569}, {"determining": "( Max( ACS,ACS ) - ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( ( ( MDR * ACS ) / Min( AMS ,MRS ) ) + FirstVNF_RAM_Server ) ) * ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( Max( MLU,MLU ) - ( Max( DS,( ( Max( MUR,MUM ) * CS ) / RCSe ) ) * MUC ) )", "obj1": 0.26720647773279355, "obj2": 0.6621939559847408}, {"determining": "Min( Min( MRS ,AMS ) ,Max( FirstVNF_Mem,( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MLU * MUM ),( MLU + DS ) )", "obj1": 0.4898785425101215, "obj2": 0.4498255900205239}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) )", "choosing": "( Max( ( CS / RMSe ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2388663967611336, "obj2": 0.6927181362073149}, {"determining": "Min( ( FirstVNF_Mem - ARS ) ,( ( ( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + Min( ( MDR / ACS ) ,( BR - FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) + Max( DDR,AMS ) ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU - DDR ) ) ) ) )", "choosing": "( Min( ( ( MUM - CS ) / MUC ) ,( ( MUM - Min( DS ,Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) ) ) ) - ( CS * RMSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9534412955465587, "obj2": 0.041386698839596156}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),BR ) ) ,( Min( ( Min( BR ,FirstVNF_RAM_Server ) - RRS ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,DS ) / Max( ( Min( DS ,Min( Min( Max( MUM,( MLU / RCSe ) ) ,( ( RCSe / RMSe ) / DS ) ) ,MUM ) ) + MUM ),( MLU * RRSe ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06335432586830855}, {"determining": "( ( MDR * ACS ) / Min( ( FirstVNF_Mem - ARS ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RMSe * MUC ) ,( ( RMSe - ( ( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) / RCSe ) / DS ) ) * MUC ) )", "obj1": 0.9635627530364372, "obj2": 0.030181668448143045}, {"determining": "Min( ( FirstVNF_CPU * ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,Max( ( MRS * ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),Const ) )", "choosing": "Min( ( MUC / ( Min( DS ,RRSe ) + ( MUC + ( MLU / Max( ( RCSe - RCSe ),CS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.3825910931174089, "obj2": 0.5713867994735717}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( AMS,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUR / Min( ( ( RRSe + Max( MLU,RRSe ) ) * ( RCSe + Min( RRSe ,CS ) ) ) ,( DS - MLU ) ) ) - MLU ) / RCSe ) ,( MUC / ( MUC - RCSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.436668943902019}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / ( Min( ( MUR + MLU ) ,MUM ) - ( ( RRSe + MUM ) + CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9696356275303644, "obj2": 0.025323083863858092}, {"determining": "( FirstVNF_CPU - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MLU * DS ) * ( Min( DS ,MUM ) / CS ) )", "obj1": 0.951417004048583, "obj2": 0.044152168996853494}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( MRS * FirstVNF_Mem ) ) ) ) * MDR ) * Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUC ) - ( ( CS + ( MUC + ( DS - ( MLU * MUC ) ) ) ) - MUC ) ) - ( DS + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6579030590561469}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( RRS ,Max( Min( RRS ,ACS ),( ( RRS - ( ( ( Const - Min( FirstVNF_RAM ,CRS ) ) + PN ) / Const ) ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,Max( MUR,( ( MUR / MUM ) + RMSe ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.0951417004048583, "obj2": 0.8687381133870853}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "Min( Max( Max( MUM,MUM ),( RCSe + MUC ) ) ,Min( MUM ,DS ) )", "obj1": 0.5141700404858299, "obj2": 0.42048004683119256}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Max( RMSe,( MUC / RRSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.4665711545750713}, {"determining": "( ACS / ( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( Min( RRSe ,RCSe ),MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.4433198380566802, "obj2": 0.5002358403834508}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.46876858118742454}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( ACS - ( Min( ( ( PN * Const ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) + ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( ( ( ( MUM / RCSe ) / RCSe ) * ( CS - RRSe ) ) / ( Max( MUM,Min( MUC ,MUM ) ) / ( MUR - DS ) ) ) )", "obj1": 0.4291497975708502, "obj2": 0.512447081084415}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - ( PN / Min( RRS ,RRS ) ) ),PN ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( DS - RCSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0015129674994551906}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,( MRS - PN ) ) ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,( ( ( RMSe - RMSe ) + DS ) * MUR ) ) - ( CS * RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.7489805510586834}, {"determining": "( ( CRS - MRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,( FirstVNF_RAM + ( ARS - ( Max( CRS,AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / PN ) * Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( DS - MUR ) ) ) - ( CS * RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.7489805510586834}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.659919028340081, "obj2": 0.29933849066549467}, {"determining": "Min( Const ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( Min( ( CRS - MRS ) ,MRS ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - ( ( MUC / RCSe ) / Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06586543021405553}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "Max( Max( Max( RRS,( Max( FirstVNF_CPU,DDR ) * CRS ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,( Const * ARS ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / Min( Max( DS,( Max( RMSe,CS ) / ( MUC + RCSe ) ) ) ,DS ) ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.4228983116535}, {"determining": "Min( ( FirstVNF_Mem - ARS ) ,Const )", "choosing": "( ( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9655870445344129, "obj2": 0.02801718545989736}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "Max( ( Min( MDR ,Min( FirstVNF_Mem_Server ,Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ) ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUR / Min( DS ,MUM ) ) ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5106318491672094}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUR / Min( DS ,MUM ) ) - MLU ) / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.5060728744939271, "obj2": 0.4246759219853851}, {"determining": "( Max( MRS,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( Max( DS,RCSe ) - MLU ),Min( DS ,DS ) )", "obj1": 0.44129554655870445, "obj2": 0.5058035853338267}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.659919028340081, "obj2": 0.29933849066549467}, {"determining": "Max( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.5059564799363891}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / ( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) ) ) ) ,MUM ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Max( MLU,RMSe ) + ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem / MDR ) )", "choosing": "Max( Min( MLU ,MLU ),Min( Max( DS,MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MLU * DS ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ACS ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( ( RMSe - ( ( ( Max( MUR,MUM ) * CS ) / RCSe ) / DS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MRS ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - ( ( FirstVNF_CPU_Server + ( AMS * FirstVNF_Mem_Server ) ) * Min( Const ,FirstVNF_Mem ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + Max( Min( RCSe ,RMSe ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( Const + ACS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( RMSe - ( MUR - MUM ) ) ,( Min( ( MUC - MUM ) ,MUM ) + Min( RMSe ,MUR ) ) ) + ( RRSe - MUC ) ) - ( CS - Min( ( DS / CS ) ,( MUR / RCSe ) ) ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( DDR - PN ) - Min( Min( ( CRS - MRS ) ,MRS ) ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - ACS ) + Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) + AMS ) ,FirstVNF_CPU_Server ) ) ,PN ) - Max( FirstVNF_Mem,( AMS + ACS ) ) )", "choosing": "( ( MUM + MUC ) / Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR * MRS ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * Const ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( RRSe * ( MLU - Max( Max( ( MUR / ( MUR * RRSe ) ),MUC ),RRSe ) ) ) + RRSe ) )", "obj1": 0.8481781376518218, "obj2": 0.12576794239253788}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( FirstVNF_CPU - Max( ( MRS - ( ARS * MRS ) ),( MRS * FirstVNF_CPU ) ) ) ) ) / ( RRS * MDR ) )", "choosing": "( ( MLU * Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe * MUR ) ) * ( Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ) )", "obj1": 0.7955465587044535, "obj2": 0.16471772437158}, {"determining": "( ( ( ARS - ( FirstVNF_RAM_Server - PN ) ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS - MUM ),( MUM + RCSe ) )", "obj1": 0.888663967611336, "obj2": 0.07351059489159435}, {"determining": "Min( ( FirstVNF_RAM - ( Min( FirstVNF_RAM ,( ACS + MRS ) ) / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( RRSe * RRSe ) + CS ) * DS )", "obj1": 0.8299595141700404, "obj2": 0.15231101476260062}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MUR,DS ) ) * DS ) ,Min( MUM ,DS ) )", "obj1": 0.5769230769230769, "obj2": 0.35772000599095966}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( ( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - RRSe ) - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6417004048582996, "obj2": 0.31685346828461736}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( RCSe - Max( CS,RCSe ) ) )", "obj1": 0.7651821862348178, "obj2": 0.20613080129518593}, {"determining": "Min( Const ,Max( ( ( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) / Max( RRS,FirstVNF_CPU ) ) + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ),DS ) ) * DS )", "obj1": 0.5222672064777328, "obj2": 0.38538397794983975}, {"determining": "( ( ( ( BR + ( ( DDR / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * Min( MUM ,( CS + RCSe ) ) ) ) ) ) + RRSe ) )", "obj1": 0.7125506072874493, "obj2": 0.24342819636719884}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( AMS + DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7831241312729126}, {"determining": "Min( Min( MRS ,AMS ) ,( ARS + AMS ) )", "choosing": "Max( ( MLU * ( ( Min( ( MUC - ( ( CS + MLU ) / DS ) ) ,RMSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) ) ),( MLU + DS ) )", "obj1": 0.6093117408906883, "obj2": 0.32920972771382984}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,BR ) ,( FirstVNF_CPU_Server / CRS ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( ( MUR + ( RCSe / DS ) ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.7368421052631579, "obj2": 0.21851584480942557}, {"determining": "Max( Max( Max( ( ( Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( ( ACS / ( BR - MRS ) ) + FirstVNF_RAM ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 0.1194331983805668, "obj2": 0.8354530800712013}, {"determining": "Min( ( FirstVNF_CPU * ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,Max( ( MRS * ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),Const ) )", "choosing": "Min( ( MUC / ( Min( DS ,RRSe ) + ( MUC + ( MLU / Max( ( RCSe - RCSe ),CS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.3825910931174089, "obj2": 0.5713867994735717}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUM + RCSe ) )", "obj1": 0.9089068825910931, "obj2": 0.04854009529808396}, {"determining": "Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),( MUC / RCSe ) ) * DS )", "obj1": 0.5870445344129555, "obj2": 0.3425508848180925}, {"determining": "( Min( ( ( CRS / FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server * Const ) - Max( ARS,( RRS - ( AMS * ( RRS * ARS ) ) ) ) ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM,BR ) ) ) ) + Max( ( CRS - AMS ),PN ) )", "choosing": "( ( ( DS + CS ) * MUM ) * ( Max( MLU,DS ) + ( ( ( CS / Max( ( ( MUC - RCSe ) - MUC ),Min( MUC ,( DS - RRSe ) ) ) ) / RCSe ) * CS ) ) )", "obj1": 0.9331983805668016, "obj2": 0.044181739066638075}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( DDR,BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,BR ) ,( FirstVNF_CPU_Server / CRS ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( ( MUR + ( MUM / DS ) ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.7186234817813765, "obj2": 0.2377745877707204}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6480088538219071}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM_Server ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05787030806995287}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( DDR * Min( ( ACS + BR ) ,FirstVNF_Mem ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + MLU ) / ( DS - ( ( CS + MUC ) / RCSe ) ) ) ,RRSe ) ) ) / ( Max( RCSe,MUC ) * ( Min( RCSe ,MLU ) - ( Min( ( RMSe / ( Min( MUC ,RCSe ) + MLU ) ) ,MLU ) + MUC ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8509897627497677}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( RCSe - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6275303643724697, "obj2": 0.3181459084753719}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) - ( Max( ( ( DDR / MRS ) + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * BR ) - ( Min( FirstVNF_Mem_Server ,MDR ) * FirstVNF_CPU ) ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + ( RCSe + MUR ) ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( ( ( MUM - CS ) / MUC ) ,Min( ( MLU * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,( MUC * ( CS * RRSe ) ) ) ,( MUM / MUC ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - ( Max( CS,Max( RMSe,RMSe ) ) * MUM ) ) * ( MUC * RCSe ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.388587340006084}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( FirstVNF_CPU * CRS ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,RRSe ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.668722885598395}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Max( MLU,RMSe ) + ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( ( ( Max( ( DDR * FirstVNF_Mem ),PN ) / FirstVNF_CPU ) - ( ARS / BR ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MUC + Min( ( RRSe - DS ) ,( ( ( ( MUC / DS ) / MUM ) - Min( DS ,Min( RMSe ,RRSe ) ) ) * ( RCSe * RMSe ) ) ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ) )", "obj1": 0.291497975708502, "obj2": 0.6328564263042866}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Max( ARS,ARS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS + Min( MLU ,MLU ) ) * RMSe ) + ( ( RRSe * Min( Min( MLU ,RRSe ) ,RCSe ) ) / RCSe ) )", "obj1": 0.4271255060728745, "obj2": 0.5204593195951166}, {"determining": "( ( ACS / ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem,( ( PN - FirstVNF_RAM ) - RRS ) ) ) * ( ( ARS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / BR ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( ( RMSe * MUM ) * CS ),( ( MLU * ( Min( RMSe ,MUM ) - ( CS / MUM ) ) ) / ( CS * RCSe ) ) )", "obj1": 0.9453441295546559, "obj2": 0.03290879876488395}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,( Min( ACS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( CS - RRSe ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.21364037931527072}, {"determining": "Min( RRS ,Max( Min( RRS ,ACS ),( ( RRS - ( ( ( Const - Min( FirstVNF_RAM ,CRS ) ) + PN ) / Const ) ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,Max( MUR,( ( MUR / MUM ) + RMSe ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.0951417004048583, "obj2": 0.8687381133870853}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,( FirstVNF_Mem - ( ( CRS + ( RRS / ( RRS - AMS ) ) ) - DDR ) ) ),Max( Max( RRS,FirstVNF_Mem_Server ),AMS ) ) )", "choosing": "( ( MUM - Min( MUM ,Max( ( MLU + ( MUC - ( ( MUM + MLU ) * MUC ) ) ),( MUM + RCSe ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.6872515890290744}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "Min( Max( Max( MUM,MUM ),( RCSe + MUC ) ) ,Min( MUM ,DS ) )", "obj1": 0.5141700404858299, "obj2": 0.42048004683119256}, {"determining": "( ( DDR / ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) * ( Max( Min( ACS ,DDR ),( ( BR + ( Const - MRS ) ) / FirstVNF_CPU ) ) * DDR ) )", "choosing": "( ( MUR - CS ) - ( ( RMSe + ( ( RCSe - RMSe ) * RMSe ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "Min( Const ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ( Max( ACS,ACS ) - ( AMS + ( AMS * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) )", "obj1": 0.39068825910931176, "obj2": 0.5687999718318616}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( ( Min( ( DDR / DDR ) ,( MRS * Min( PN ,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) - ( ( MRS - Min( ACS ,FirstVNF_Mem_Server ) ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / ( RCSe + MUC ) ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9757085020242915, "obj2": 0.015371031254488793}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( DDR * Min( ( ACS + BR ) ,FirstVNF_Mem ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + MLU ) / ( DS - ( ( CS + MUC ) / RCSe ) ) ) ,RRSe ) ) ) / ( Max( RCSe,MUC ) * ( Min( RCSe ,MLU ) - ( Min( ( RMSe / ( Min( MUC ,RCSe ) + MLU ) ) ,MLU ) + MUC ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.5479267277881271}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,( MRS - PN ) ) ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,( ( ( RMSe - RMSe ) + DS ) * MUR ) ) - ( CS * RMSe ) )", "obj1": 0.32388663967611336, "obj2": 0.614493312558586}, {"determining": "Max( Max( Max( ( ( ( FirstVNF_Mem - ARS ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,DS ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.5412343304444139}, {"determining": "Min( Max( ( ( Const + ( DDR * FirstVNF_RAM_Server ) ) - CRS ),PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( CS,( ( MUM * ( DS / CS ) ) - MUC ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2145748987854251, "obj2": 0.7148716250895756}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUC + Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( MLU + DS ) / ( MUR - DS ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7387320328092605}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( DS * Max( ( Max( RMSe,( MUC / ( MUM * RCSe ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8405087421005516}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,( ACS - CRS ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Max( Max( RRSe,DS ),MLU ) ) )", "obj1": 0.22874493927125505, "obj2": 0.7017977081133097}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( Max( MLU,RMSe ) + ( ( DS / ( MUR + ( CS / MLU ) ) ) / ( ( DS + Min( MLU ,MLU ) ) * RMSe ) ) )", "obj1": 0.4473684210526316, "obj2": 0.4895703931828681}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) )", "choosing": "( Max( ( CS / RMSe ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2388663967611336, "obj2": 0.6927181362073149}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( ( Max( FirstVNF_Mem,RRS ) * MDR ) + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( ( ( MUM / ( RCSe / RRSe ) ) - MUC ) * RRSe ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.5789473684210527, "obj2": 0.3523866480192336}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "Max( Max( Max( RRS,( DDR * CRS ) ),Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Min( DS ,Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) ) ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "( Max( ACS,ACS ) - ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( ( ( MDR * ACS ) / Min( AMS ,MRS ) ) + FirstVNF_RAM_Server ) ) * ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( Max( MLU,MLU ) - ( Max( DS,( ( Max( MUR,MUM ) * CS ) / RCSe ) ) * MUC ) )", "obj1": 0.26720647773279355, "obj2": 0.6621939559847408}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( MRS * FirstVNF_Mem ) ) ) ) * MDR ) * Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUC ) - ( ( CS + ( MUC + ( DS - ( MLU * MUC ) ) ) ) - MUC ) ) - ( DS + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6579030590561469}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + Min( ( BR + FirstVNF_RAM ) ,DDR ) ) * Const ) * MRS ) ,( PN * FirstVNF_CPU ) )", "choosing": "( ( ( DS + Min( MLU ,( MUR + ( CS / MLU ) ) ) ) * RMSe ) + Min( ( MUC / ( MUC - ( CS - Max( MUC,Min( RRSe ,Min( MLU ,MUC ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.4534412955465587, "obj2": 0.48301368992911015}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.19230769230769232, "obj2": 0.7352451098153744}, {"determining": "( ( ( ( PN + FirstVNF_CPU ) - AMS ) / ( AMS * Max( ( ( ARS + FirstVNF_Mem ) / MDR ),( Max( FirstVNF_Mem,( FirstVNF_RAM_Server / Min( PN ,PN ) ) ) * MRS ) ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUC ) ,( Max( Min( ( Max( Max( DS,RRSe ),Max( MUC,MUR ) ) * RMSe ) ,RCSe ),MLU ) / MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.9838056680161943, "obj2": 0.006779727024646681}, {"determining": "( CRS + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( Max( MDR,ACS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Max( ( MLU + ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) ),( MUM + RCSe ) ) ) ) - ( Min( CS ,( RCSe * RMSe ) ) * RMSe ) )", "obj1": 0.22672064777327935, "obj2": 0.7098500492385177}, {"determining": "Min( ( FirstVNF_CPU * Max( Const,FirstVNF_RAM ) ) ,FirstVNF_RAM )", "choosing": "Min( Max( Max( ( RMSe + MUR ),( DS * Max( ( Min( CS ,CS ) - DS ),( ( MUM + ( MUM - MLU ) ) - Max( ( DS - MUC ),MUC ) ) ) ) ),RRSe ) ,Min( MUM ,DS ) )", "obj1": 0.9615384615384616, "obj2": 0.031431026263876116}, {"determining": "Min( RRS ,Max( ( CRS + Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / RRS ) ) ,RRS ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,( ( ( CS - RRSe ) + RRSe ) * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6297815571584818}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4574898785425101, "obj2": 0.4780170024190054}, {"determining": "Min( RRS ,Max( Min( FirstVNF_RAM ,AMS ),Max( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),MDR ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * Min( CS ,( DS - Min( RRSe ,CS ) ) ) ) ,Min( RCSe ,Min( CS ,( CS * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,Max( CS,MUC ) ) ,( MUM / MUC ) ) )", "obj1": 0.31376518218623484, "obj2": 0.623984231680261}, {"determining": "Min( Max( ( CRS - AMS ),PN ) ,Min( FirstVNF_RAM ,( ACS + MRS ) ) )", "choosing": "( DS - ( ( RRSe * RRSe ) + CS ) )", "obj1": 0.31781376518218624, "obj2": 0.6200636821738565}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / ( Min( ( MUR + MLU ) ,MUM ) - ( ( RRSe + MUM ) + CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9696356275303644, "obj2": 0.025323083863858092}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Max( RMSe,( MUC / RRSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.4665711545750713}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,( MLU + DS ) ) ) ,RRSe ) )", "obj1": 0.29959514170040485, "obj2": 0.6304584318280948}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.19433198380566802, "obj2": 0.7296206819290456}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.46876858118742454}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( AMS,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUR / Min( ( ( RRSe + Max( MLU,RRSe ) ) * ( RCSe + Min( RRSe ,CS ) ) ) ,( DS - MLU ) ) ) - MLU ) / RCSe ) ,( MUC / ( MUC - RCSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.436668943902019}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) ,CRS )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),( ( MUM - Min( DS ,( MUC + ( RRSe - MUR ) ) ) ) - ( CS * RMSe ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7124190386861728}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,( MRS - PN ) ) ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,( ( ( RMSe - RMSe ) + DS ) * MUR ) ) - ( CS * RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.7489805510586834}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Min( Min( ( ( FirstVNF_RAM_Server - MRS ) / BR ) ,( MDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( RRSe + RCSe ),MUM ) ) ,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.2408906882591093, "obj2": 0.6874955713598736}, {"determining": "( ACS - Min( Min( PN ,CRS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - ( RRSe + MUC ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004408607664567634}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - ( PN / Min( RRS ,RRS ) ) ),PN ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( DS - RCSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0015129674994551906}, {"determining": "( ACS / ( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( Min( RRSe ,RCSe ),MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.4433198380566802, "obj2": 0.5002358403834508}, {"determining": "Min( Const ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "( ACS - ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ) )", "choosing": "Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( MUR * DS ) )", "obj1": 0.4291497975708502, "obj2": 0.512447081084415}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "( ( CRS - MRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,( FirstVNF_RAM + ( ARS - ( Max( CRS,AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / PN ) * Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( DS - MUR ) ) ) - ( CS * RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.7489805510586834}, {"determining": "Max( ( Min( MDR ,Min( FirstVNF_Mem_Server ,Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ) ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUR / Min( DS ,MUM ) ) ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5106318491672094}, {"determining": "( Max( MRS,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( Max( DS,RCSe ) - MLU ),Min( DS ,DS ) )", "obj1": 0.44129554655870445, "obj2": 0.5058035853338267}, {"determining": "( ACS / ( Max( FirstVNF_CPU_Server,PN ) - Max( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.4433198380566802, "obj2": 0.5002358403834508}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,CRS )", "choosing": "Min( Max( Max( RRSe,MUM ),( RCSe + MUC ) ) ,Min( MUM ,DS ) )", "obj1": 0.5141700404858299, "obj2": 0.42048004683119256}, {"determining": "Max( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.5059564799363891}, {"determining": "Min( ( FirstVNF_Mem - ARS ) ,Const )", "choosing": "( ( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.9655870445344129, "obj2": 0.02801718545989736}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / ( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) ) ) ) ,MUM ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}, {"determining": "( ( MDR * ACS ) / Min( ( FirstVNF_Mem - ARS ) ,Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( DS ,MUR ) * MUC ) )", "obj1": 0.9676113360323887, "obj2": 0.026518413443286155}, {"determining": "Max( Max( Max( RRS,( Max( FirstVNF_CPU,DDR ) * CRS ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,( Const * ARS ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / Min( Max( DS,( Max( RMSe,CS ) / ( MUC + RCSe ) ) ) ,DS ) ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.4228983116535}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}], "6": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( ( Min( ( DDR / DDR ) ,( MRS * Min( PN ,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) - ( ( MRS - Min( ACS ,FirstVNF_Mem_Server ) ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / ( RCSe + MUC ) ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - PN ) - Min( Min( ( CRS - MRS ) ,MRS ) ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( Min( CRS ,ARS ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) + RRSe ) )", "obj1": 0.708502024291498, "obj2": 0.22776832891776952}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( ( CS / Max( Max( MUR,MLU ),RCSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7267206477732794, "obj2": 0.2000459846115108}, {"determining": "( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU ,BR ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,BR ) ,( ARS / FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,Min( DS ,MUM ) ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.771255060728745, "obj2": 0.17161662220639265}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( ( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - RRSe ) - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6417004048582996, "obj2": 0.31685346828461736}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "Min( ( FirstVNF_RAM - ( Min( FirstVNF_RAM ,( ACS + MRS ) ) / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( RRSe * RRSe ) + CS ) * DS )", "obj1": 0.8299595141700404, "obj2": 0.15231101476260062}, {"determining": "Min( ( FirstVNF_CPU * ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,Max( ( MRS * ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),Const ) )", "choosing": "Min( ( MUC / ( Min( DS ,RRSe ) + ( MUC + ( MLU / Max( ( RCSe - RCSe ),CS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.3825910931174089, "obj2": 0.5713867994735717}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR * MRS ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * Const ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( RRSe * ( MLU - Max( Max( ( MUR / ( MUR * RRSe ) ),MUC ),RRSe ) ) ) + RRSe ) )", "obj1": 0.8481781376518218, "obj2": 0.12576794239253788}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( AMS + DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7831241312729126}, {"determining": "Min( Min( MRS ,AMS ) ,( ARS + AMS ) )", "choosing": "Max( ( MLU * ( ( Min( ( MUC - ( ( CS + MLU ) / DS ) ) ,RMSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) ) ),( MLU + DS ) )", "obj1": 0.6093117408906883, "obj2": 0.32920972771382984}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_Mem - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( MUM + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.562753036437247, "obj2": 0.3725398535826238}, {"determining": "( ( ( ARS - ( FirstVNF_RAM_Server - PN ) ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS - MUM ),( MUM + RCSe ) )", "obj1": 0.888663967611336, "obj2": 0.07351059489159435}, {"determining": "( ( AMS + ( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( MLU * ( CS - ( CS / DS ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.09568715146829776}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUM + RCSe ) )", "obj1": 0.9089068825910931, "obj2": 0.04854009529808396}, {"determining": "Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),( MUC / RCSe ) ) * DS )", "obj1": 0.5870445344129555, "obj2": 0.3425508848180925}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) ) - ( ( MRS - BR ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( ( ( MUM - CS ) / MUC ) ,Min( ( MLU * CS ) ,Min( RCSe ,( RMSe * MUM ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.5303643724696356, "obj2": 0.3813806174944596}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( Max( Const,DDR ) * Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem / MRS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,DS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / Max( RCSe,( MLU / CS ) ) ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8259481821924105}, {"determining": "( ( AMS + ( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( ( MDR - RRS ) * Min( CRS ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * Max( MUC,( RRSe * RMSe ) ) ),( ( MLU * ( CS - ( ( CS / MUM ) / MUM ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.10275893293758245}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( Min( Min( ( CRS - MRS ) ,MRS ) ,FirstVNF_Mem ) + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) ) ) + Min( ( MUC - ( MLU / ( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) ) ) ) ,MUM ) )", "obj1": 0.805668016194332, "obj2": 0.16067163824952324}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM_Server ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05787030806995287}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( FirstVNF_CPU - Max( ( MRS - ( ARS * MRS ) ),( MRS * FirstVNF_CPU ) ) ) ) ) / ( RRS * MDR ) )", "choosing": "( ( MLU * Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe * MUR ) ) * ( Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ) )", "obj1": 0.7955465587044535, "obj2": 0.16471772437158}, {"determining": "Min( ( FirstVNF_CPU * PN ) ,CRS )", "choosing": "Min( Max( Max( ( ( RRSe * RRSe ) + CS ),MUM ),( RCSe + MUC ) ) ,Min( MUM ,DS ) )", "obj1": 0.5141700404858299, "obj2": 0.4127726540267436}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( RCSe - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6275303643724697, "obj2": 0.3181459084753719}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6480088538219071}, {"determining": "( Min( ( ( CRS / FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server * Const ) - Max( ARS,( RRS - ( AMS * ( RRS * ARS ) ) ) ) ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM,BR ) ) ) ) + Max( ( CRS - AMS ),PN ) )", "choosing": "( ( ( DS + CS ) * MUM ) * ( Max( MLU,DS ) + ( ( ( CS / Max( ( ( MUC - RCSe ) - MUC ),Min( MUC ,( DS - RRSe ) ) ) ) / RCSe ) * CS ) ) )", "obj1": 0.9331983805668016, "obj2": 0.044181739066638075}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( DDR / ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) * ( Max( Min( ACS ,DDR ),( ( BR + ( Const - MRS ) ) / FirstVNF_CPU ) ) * DDR ) )", "choosing": "( ( MUR - CS ) - ( ( RMSe + ( ( RCSe - RMSe ) * RMSe ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( ( Min( ( DDR / DDR ) ,( MRS * Min( PN ,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) - ( ( MRS - Min( ACS ,FirstVNF_Mem_Server ) ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / ( RCSe + MUC ) ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9757085020242915, "obj2": 0.015371031254488793}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) - ( Max( ( ( DDR / MRS ) + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * BR ) - ( Min( FirstVNF_Mem_Server ,MDR ) * FirstVNF_CPU ) ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + ( RCSe + MUR ) ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( ( ( MUM - CS ) / MUC ) ,Min( ( MLU * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,( MUC * ( CS * RRSe ) ) ) ,( MUM / MUC ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - ( Max( CS,Max( RMSe,RMSe ) ) * MUM ) ) * ( MUC * RCSe ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.388587340006084}, {"determining": "Max( ( Min( MDR ,Min( Min( CRS ,( FirstVNF_RAM + Max( Min( FirstVNF_CPU ,RRS ),( MDR * FirstVNF_RAM ) ) ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),FirstVNF_CPU_Server )", "choosing": "( ( Min( DS ,Min( ( ( CS * Min( CS ,MLU ) ) + MLU ) ,Min( ( MUR / MUC ) ,MUM ) ) ) / ( DS + RRSe ) ) - ( ( MUR / RRSe ) / ( MUR * CS ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5210734133875637}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / ( ( DDR + DDR ) - RRS ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) ) ),( ( MUC / Min( MUR ,Max( MLU,MUC ) ) ) - MLU ) )", "obj1": 0.39068825910931176, "obj2": 0.5496383290661331}, {"determining": "( ACS - ( ( ( FirstVNF_CPU + DDR ) * ( FirstVNF_CPU / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + ( MUM * Min( DS ,RMSe ) ) ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.01767896933211214}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "Max( Max( Max( ( ( ( Min( FirstVNF_CPU ,ARS ) * Const ) * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),FirstVNF_Mem )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ),CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6351240805704722}, {"determining": "Min( Const ,Max( ( AMS - Min( ( FirstVNF_CPU / ( Const / BR ) ) ,FirstVNF_RAM ) ),RRS ) )", "choosing": "( Max( Min( MUM ,MLU ),Max( MUR,Max( Min( MUR ,RMSe ),CS ) ) ) * ( Min( ( ( MUM - CS ) / MUC ) ,Min( ( MLU * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6109101704293541}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,( ACS - ( Min( ( ( PN * Const ) * MRS ) ,( CRS * Min( ( ( BR * RRS ) * BR ) ,CRS ) ) ) + Min( DDR ,ARS ) ) ) )", "choosing": "( Max( ( RCSe - Max( ( Min( ( MUM / MUC ) ,( ( MUM / RCSe ) / RCSe ) ) / ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) ),RCSe ) ),Min( ( MUM * Max( ( MUM * MUC ),( ( RRSe * ( RMSe + MUR ) ) + ( MUR - RCSe ) ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.22874493927125505, "obj2": 0.7006022160739485}, {"determining": "( ACS / ( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( Min( RRSe ,RCSe ),MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.4433198380566802, "obj2": 0.5002358403834508}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) )", "choosing": "( Max( Min( ( CS * ( RRSe + Min( ( ( RRSe - MUC ) + ( RCSe + CS ) ) ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.5728744939271255, "obj2": 0.360471636158338}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( DDR * Min( ( ACS + BR ) ,FirstVNF_Mem ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + MLU ) / ( DS - ( ( CS + MUC ) / RCSe ) ) ) ,RRSe ) ) ) / ( Max( RCSe,MUC ) * ( Min( RCSe ,MLU ) - ( Min( ( RMSe / ( Min( MUC ,RCSe ) + MLU ) ) ,MLU ) + MUC ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.8545318349420209}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( ( ( DS + Min( Max( MLU,MUR ) ,MLU ) ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.4473684210526316, "obj2": 0.48336026759526624}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - ( Max( RMSe,( MUC / RRSe ) ) - MUR ) ) )", "obj1": 0.951417004048583, "obj2": 0.024137447880759545}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( MRS * FirstVNF_Mem ) ) ) ) * MDR ) * Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUC ) - ( ( CS + ( MUC + ( DS - ( MLU * MUC ) ) ) ) - MUC ) ) - ( DS + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6579030590561469}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4311740890688259, "obj2": 0.504134836067358}, {"determining": "( ( ACS / ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem,( ( PN - FirstVNF_RAM ) - RRS ) ) ) * ( ( ARS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / BR ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( ( RMSe * MUM ) * CS ),( ( MLU * ( Min( RMSe ,MUM ) - ( CS / MUM ) ) ) / ( CS * RCSe ) ) )", "obj1": 0.9453441295546559, "obj2": 0.03290879876488395}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( ( Max( FirstVNF_Mem,RRS ) * MDR ) + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( ( ( MUM / ( RCSe / RRSe ) ) - MUC ) * RRSe ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.5789473684210527, "obj2": 0.3523866480192336}, {"determining": "( ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),AMS ) ) )", "choosing": "( ( MUM - Min( MUM ,Max( ( MLU + ( MUC - MUR ) ),( MUC + RCSe ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.25303643724696356, "obj2": 0.6737578211038511}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + Min( ( BR + FirstVNF_RAM ) ,DDR ) ) * Const ) * MRS ) ,( PN * FirstVNF_CPU ) )", "choosing": "( ( ( DS + Min( MLU ,( MUR + ( CS / MLU ) ) ) ) * RMSe ) + Min( ( MUC / ( MUC - ( CS - Max( MUC,Min( RRSe ,Min( MLU ,MUC ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.4534412955465587, "obj2": 0.48301368992911015}, {"determining": "( Min( ( ( CRS / FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server * Const ) - Max( ARS,( RRS - ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM,BR ) ) ) ) + Max( ( CRS - AMS ),PN ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) + CS ) * MUM ) * ( Max( MLU,DS ) + ( ( ( CS / Max( ( ( MUC - RCSe ) - MUC ),Min( MUC ,( DS - RRSe ) ) ) ) / RCSe ) * CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.0396975668475487}, {"determining": "Min( Max( ( CRS - AMS ),PN ) ,Min( FirstVNF_RAM ,( ACS + MRS ) ) )", "choosing": "( DS - ( ( RRSe * RRSe ) + CS ) )", "obj1": 0.31781376518218624, "obj2": 0.6200636821738565}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( MRS * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( MUR / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6603832179869175}, {"determining": "Min( RRS ,Max( Min( RRS ,ACS ),( ( RRS - ( ( ( Const - Min( FirstVNF_RAM ,CRS ) ) + PN ) / Const ) ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,Max( MUR,( ( MUR / MUM ) + RMSe ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.0951417004048583, "obj2": 0.8687381133870853}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MLU ) + ( ( DS / MLU ) / RCSe ) )", "obj1": 0.39878542510121456, "obj2": 0.5361055688150749}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUC + Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( MLU + DS ) / ( MUR - DS ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7387320328092605}, {"determining": "( CRS + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( Max( MDR,ACS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Max( ( MLU + ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) ),( MUM + RCSe ) ) ) ) - ( Min( CS ,( RCSe * RMSe ) ) * RMSe ) )", "obj1": 0.22672064777327935, "obj2": 0.7098500492385177}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( FirstVNF_CPU * CRS ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,RRSe ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.668722885598395}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.19230769230769232, "obj2": 0.7352451098153744}, {"determining": "( ( ( ( PN + FirstVNF_CPU ) - AMS ) / ( AMS * Max( ( ( ARS + FirstVNF_Mem ) / MDR ),( Max( FirstVNF_Mem,( FirstVNF_RAM_Server / Min( PN ,PN ) ) ) * MRS ) ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUC ) ,( Max( Min( ( Max( Max( DS,RRSe ),Max( MUC,MUR ) ) * RMSe ) ,RCSe ),MLU ) / MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.9838056680161943, "obj2": 0.006779727024646681}, {"determining": "Max( Max( Max( ( ( Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( CS * ( ( RCSe / RCSe ) * MUM ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.837017283537487}, {"determining": "( ( FirstVNF_CPU * BR ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( Max( DS,RCSe ) - MLU ),Min( MUM ,DS ) )", "obj1": 0.4271255060728745, "obj2": 0.5164281994189194}, {"determining": "Min( RRS ,Max( ( CRS + Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / RRS ) ) ,RRS ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,( ( ( CS - RRSe ) + RRSe ) * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6297815571584818}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.4696995323536115}, {"determining": "Min( RRS ,Max( Min( FirstVNF_RAM ,AMS ),Max( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),MDR ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * Min( CS ,( DS - Min( RRSe ,CS ) ) ) ) ,Min( RCSe ,Min( CS ,( CS * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,Max( CS,MUC ) ) ,( MUM / MUC ) ) )", "obj1": 0.31376518218623484, "obj2": 0.623984231680261}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Max( RMSe,( MUC / RRSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.4665711545750713}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,( MLU + DS ) ) ) ,RRSe ) )", "obj1": 0.29959514170040485, "obj2": 0.6304584318280948}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,( ACS / CRS ) ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( MUC - MUR ),CS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.6857483423350185}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( AMS,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUR / Min( ( ( RRSe + Max( MLU,RRSe ) ) * ( RCSe + Min( RRSe ,CS ) ) ) ,( DS - MLU ) ) ) - MLU ) / RCSe ) ,( MUC / ( MUC - RCSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.436668943902019}, {"determining": "Max( Max( Max( RRS,( Max( FirstVNF_CPU,DDR ) * CRS ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,( Const * ARS ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / Min( Max( DS,( Max( RMSe,CS ) / ( MUC + RCSe ) ) ) ,DS ) ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.4228983116535}, {"determining": "Min( Const ,Max( ( ( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) / Max( RRS,FirstVNF_CPU ) ) + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ),DS ) ) * DS )", "obj1": 0.5222672064777328, "obj2": 0.38538397794983975}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) ,CRS )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),( ( MUM - Min( DS ,( MUC + ( RRSe - MUR ) ) ) ) - ( CS * RMSe ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7124190386861728}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( DS * Max( ( Max( RMSe,( MUC / ( MUM * RCSe ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8447318293547443}, {"determining": "( ACS - ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ) )", "choosing": "Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( MUR * DS ) )", "obj1": 0.4291497975708502, "obj2": 0.512447081084415}, {"determining": "Min( CRS ,Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ),Min( Min( ( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.20850202429149797, "obj2": 0.7219032613490565}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( DS * Max( ( Max( RMSe,( MUC / ( MUM * RCSe ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8405087421005516}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Min( Min( ( ( FirstVNF_RAM_Server - MRS ) / BR ) ,( MDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( RRSe + RCSe ),MUM ) ) ,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.2408906882591093, "obj2": 0.6874955713598736}, {"determining": "( ACS - Min( Min( PN ,CRS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - ( RRSe + MUC ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004408607664567634}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) )", "choosing": "( Max( ( CS / RMSe ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2388663967611336, "obj2": 0.6927181362073149}, {"determining": "( ( Min( CRS ,RRS ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - Min( DS ,( MUM + Max( ( Min( ( RRSe - MLU ) ,MUR ) * ( ( MUM / MUM ) + MLU ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7483412134272591}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - ( PN / Min( RRS ,RRS ) ) ),PN ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( DS - RCSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0015129674994551906}, {"determining": "( ( ( Max( ( DDR * FirstVNF_Mem ),PN ) / FirstVNF_CPU ) - ( ARS / BR ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MUC + Min( ( RRSe - DS ) ,( ( ( ( MUC / DS ) / MUM ) - Min( DS ,Min( RMSe ,RRSe ) ) ) * ( RCSe * RMSe ) ) ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ) )", "obj1": 0.291497975708502, "obj2": 0.6328564263042866}, {"determining": "Min( Max( ( ( Const + ( DDR * FirstVNF_RAM_Server ) ) - CRS ),PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( CS,( ( MUM * ( DS / CS ) ) - MUC ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2145748987854251, "obj2": 0.7148716250895756}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( MUR,DS ) ) * DS ) ,Min( MUM ,DS ) )", "obj1": 0.5769230769230769, "obj2": 0.35772000599095966}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( DDR * Min( ( ACS + BR ) ,FirstVNF_Mem ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + MLU ) / ( DS - ( ( CS + MUC ) / RCSe ) ) ) ,RRSe ) ) ) / ( Max( RCSe,MUC ) * ( Min( RCSe ,MLU ) - ( Min( ( RMSe / ( Min( MUC ,RCSe ) + MLU ) ) ,MLU ) + MUC ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8509897627497677}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.2125506072874494, "obj2": 0.7208614453488685}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.19433198380566802, "obj2": 0.7296206819290456}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( DDR * Min( ( ACS + BR ) ,FirstVNF_Mem ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + MLU ) / ( DS - ( ( CS + MUC ) / RCSe ) ) ) ,RRSe ) ) ) / ( Max( RCSe,MUC ) * ( Min( RCSe ,MLU ) - ( Min( ( RMSe / ( Min( MUC ,RCSe ) + MLU ) ) ,MLU ) + MUC ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.5479267277881271}], "7": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) * Const ) * MRS ) ,( Const * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + Min( Max( MLU,MUR ) ,MLU ) ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( ( Min( ( DDR / DDR ) ,( MRS * Min( PN ,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) - ( ( MRS - Min( ACS ,FirstVNF_Mem_Server ) ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,DS ) ,( MUM / ( RCSe + MUC ) ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( Min( CRS ,ARS ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) + RRSe ) )", "obj1": 0.708502024291498, "obj2": 0.22776832891776952}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * BR ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( ( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - RRSe ) - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6417004048582996, "obj2": 0.31685346828461736}, {"determining": "Min( ( FirstVNF_RAM - ( Min( FirstVNF_RAM ,( ACS + MRS ) ) / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( RRSe * RRSe ) + CS ) * DS )", "obj1": 0.8299595141700404, "obj2": 0.15231101476260062}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( AMS + DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7831241312729126}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( ( CS / Max( Max( MUR,MLU ),RCSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7267206477732794, "obj2": 0.2000459846115108}, {"determining": "( ( ( ARS - ( FirstVNF_RAM_Server - PN ) ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS - MUM ),( MUM + RCSe ) )", "obj1": 0.888663967611336, "obj2": 0.07351059489159435}, {"determining": "( ( AMS + ( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( MLU * ( CS - ( CS / DS ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.09568715146829776}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.03308952651374046}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) ) - ( ( MRS - BR ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( ( ( MUM - CS ) / MUC ) ,Min( ( MLU * CS ) ,Min( RCSe ,( RMSe * MUM ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.5303643724696356, "obj2": 0.3813806174944596}, {"determining": "( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU ,BR ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,BR ) ,( ARS / FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,Min( DS ,MUM ) ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.771255060728745, "obj2": 0.17161662220639265}, {"determining": "( ( AMS + ( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( ( MDR - RRS ) * Min( CRS ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * Max( MUC,( RRSe * RMSe ) ) ),( ( MLU * ( CS - ( ( CS / MUM ) / MUM ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.10275893293758245}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * ( ARS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3603238866396761, "obj2": 0.5735436505829468}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( FirstVNF_CPU - Max( ( MRS - ( ARS * MRS ) ),( MRS * FirstVNF_CPU ) ) ) ) ) / ( RRS * MDR ) )", "choosing": "( ( MLU * Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe * MUR ) ) * ( Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ) )", "obj1": 0.7955465587044535, "obj2": 0.16471772437158}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - ( PN / Min( Min( MDR ,MDR ) ,RRS ) ) ),DDR ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU / MUR ) / CS ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( DS - RCSe ) ) )", "obj1": 0.8461538461538461, "obj2": 0.13359663011223055}, {"determining": "Min( ( FirstVNF_CPU * PN ) ,CRS )", "choosing": "Min( Max( Max( ( ( RRSe * RRSe ) + CS ),MUM ),( RCSe + MUC ) ) ,Min( MUM ,DS ) )", "obj1": 0.5141700404858299, "obj2": 0.4127726540267436}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem * ( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( CS * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( RCSe - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6275303643724697, "obj2": 0.3181459084753719}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_Mem - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( MUM + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.562753036437247, "obj2": 0.3725398535826238}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7368421052631579, "obj2": 0.19253543251097752}, {"determining": "( Max( Const,DDR ) * Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem / MRS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,DS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / Max( RCSe,( MLU / CS ) ) ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8259481821924105}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR * MRS ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * Const ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( RRSe * ( MLU - Max( Max( ( MUR / ( MUR * RRSe ) ),MUC ),RRSe ) ) ) + RRSe ) )", "obj1": 0.8481781376518218, "obj2": 0.12576794239253788}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.3765182186234818, "obj2": 0.5627827092623114}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8117651548140705}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( ( ( RRSe * RRSe ) + CS ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9696356275303644, "obj2": 0.009946415682752695}, {"determining": "Min( Min( MRS ,AMS ) ,( ARS + AMS ) )", "choosing": "Max( ( MLU * ( ( Min( ( MUC - ( ( CS + MLU ) / DS ) ) ,RMSe ) / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) ) ),( MLU + DS ) )", "obj1": 0.6093117408906883, "obj2": 0.32920972771382984}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) - ( Max( ( ( DDR / MRS ) + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * BR ) - ( Min( FirstVNF_Mem_Server ,MDR ) * FirstVNF_CPU ) ) / ( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( CS + ( RCSe + MUR ) ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * ( Min( ( ( MUM - CS ) / MUC ) ,Min( ( MLU * CS ) ,Min( RCSe ,RRSe ) ) ) / Min( Min( CS ,( MUC * ( CS * RRSe ) ) ) ,( MUM / MUC ) ) ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - ( Max( CS,Max( RMSe,RMSe ) ) * MUM ) ) * ( MUC * RCSe ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.388587340006084}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM_Server ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05787030806995287}, {"determining": "Max( ( Min( MDR ,Min( Min( CRS ,( FirstVNF_RAM + Max( Min( FirstVNF_CPU ,RRS ),( MDR * FirstVNF_RAM ) ) ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),FirstVNF_CPU_Server )", "choosing": "( ( Min( DS ,Min( ( ( CS * Min( CS ,MLU ) ) + MLU ) ,Min( ( MUR / MUC ) ,MUM ) ) ) / ( DS + RRSe ) ) - ( ( MUR / RRSe ) / ( MUR * CS ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5210734133875637}, {"determining": "( FirstVNF_CPU_Server - ( Min( RRS ,( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * BR ) - FirstVNF_Mem ) ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,CRS ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( Max( CS,DS ) - CS ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.757085020242915, "obj2": 0.18623958893036716}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ACS - ( ( ( FirstVNF_CPU + DDR ) * ( FirstVNF_CPU / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + ( MUM * Min( DS ,RMSe ) ) ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.01767896933211214}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( CRS + Const ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUR * RRSe ) )", "obj1": 0.9453441295546559, "obj2": 0.027562521791839354}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MLU ) + ( ( DS / MLU ) / RCSe ) )", "obj1": 0.39878542510121456, "obj2": 0.5361055688150749}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) )", "choosing": "( Max( Min( ( CS * ( RRSe + Min( ( ( RRSe - MUC ) + ( RCSe + CS ) ) ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.5728744939271255, "obj2": 0.360471636158338}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,ARS ) ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ),( MLU / CS ) )", "obj1": 0.7611336032388664, "obj2": 0.1823451044858696}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUC + Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( MLU + DS ) / ( MUR - DS ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7387320328092605}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( Min( Min( ( CRS - MRS ) ,MRS ) ,FirstVNF_Mem ) + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ACS + MRS ) )", "choosing": "( ( MUC / ( Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) ) ) + Min( ( MUC - ( CS / ( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) ) ) ) ,MUM ) )", "obj1": 0.805668016194332, "obj2": 0.16067163824952324}, {"determining": "Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( RRSe * ( ( MUC / ( MUM * RCSe ) ) + MUR ) ) ,MLU ),( MUC / RCSe ) ) * DS )", "obj1": 0.5870445344129555, "obj2": 0.3425508848180925}, {"determining": "( ( MRS - Max( PN,AMS ) ) - ( FirstVNF_CPU_Server / ( ARS * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( ( RCSe * RMSe ) + Min( DS ,CS ) ) ,( MUR * Min( RRSe ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( RCSe - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( RMSe - Min( RRSe ,( CS + RRSe ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.6052631578947368, "obj2": 0.3357181565668122}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Min( CRS ,ARS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUM + RCSe ) )", "obj1": 0.9089068825910931, "obj2": 0.04854009529808396}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( ( ( DS + Min( Max( MLU,MUR ) ,MLU ) ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.4473684210526316, "obj2": 0.48336026759526624}, {"determining": "( ACS / ( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( Min( RRSe ,RCSe ),MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.4433198380566802, "obj2": 0.5002358403834508}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6412524330939845}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6480088538219071}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.4696995323536115}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( MRS * FirstVNF_Mem ) ) ) ) * MDR ) * Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUC ) - ( ( CS + ( MUC + ( DS - ( MLU * MUC ) ) ) ) - MUC ) ) - ( DS + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6579030590561469}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,( ACS / CRS ) ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( MUC - MUR ),CS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.6857483423350185}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / Max( RCSe,( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.763682386458205}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) + ( Const - Min( FirstVNF_RAM ,ACS ) ) ) + RRS ) / ( Max( PN,AMS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( ( DS - MUC ) - DS ) + RMSe ) ) - MUR ) ),( MUR * Max( MUM,MUR ) ) )", "obj1": 0.9068825910931174, "obj2": 0.056038021228898185}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( ( Max( FirstVNF_Mem,RRS ) * MDR ) + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( ( ( MUM / ( RCSe / RRSe ) ) - MUC ) * RRSe ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.5789473684210527, "obj2": 0.3523866480192336}, {"determining": "( ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),AMS ) ) )", "choosing": "( ( MUM - Min( MUM ,Max( ( MLU + ( MUC - MUR ) ),( MUC + RCSe ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.25303643724696356, "obj2": 0.6737578211038511}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) )", "choosing": "( Max( ( CS / RMSe ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2388663967611336, "obj2": 0.6927181362073149}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6603002967702107}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) * CRS ) * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + Max( ( DS - MUR ),RRSe ) ) * RMSe ) + Max( MLU,MUR ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - ( Max( RMSe,( MUC / RRSe ) ) - MUR ) ) )", "obj1": 0.951417004048583, "obj2": 0.024137447880759545}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( DDR * Min( ( ACS + BR ) ,FirstVNF_Mem ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + MLU ) / ( DS - ( ( CS + MUC ) / RCSe ) ) ) ,RRSe ) ) ) / ( Max( RCSe,MUC ) * ( Min( RCSe ,MLU ) - ( Min( ( RMSe / ( Min( MUC ,RCSe ) + MLU ) ) ,MLU ) + MUC ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.5479267277881271}, {"determining": "( ( ( ( PN + FirstVNF_CPU ) - AMS ) / ( AMS * Max( ( ( ARS + FirstVNF_Mem ) / MDR ),( Max( FirstVNF_Mem,( FirstVNF_RAM_Server / Min( PN ,PN ) ) ) * MRS ) ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUC ) ,( Max( Min( ( Max( Max( DS,RRSe ),Max( MUC,MUR ) ) * RMSe ) ,RCSe ),MLU ) / MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.9838056680161943, "obj2": 0.006779727024646681}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.19433198380566802, "obj2": 0.7296206819290456}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUC + Max( Min( CS ,DS ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( MLU + DS ) / ( MUR - DS ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1882591093117409, "obj2": 0.7341165798054481}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.557417870246343}, {"determining": "Max( Max( Max( ( ( Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( CS * ( ( RCSe / RCSe ) * MUM ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.837017283537487}, {"determining": "( ( FirstVNF_CPU * BR ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( Max( DS,RCSe ) - MLU ),Min( MUM ,DS ) )", "obj1": 0.4271255060728745, "obj2": 0.5164281994189194}, {"determining": "Min( RRS ,Max( ( CRS + Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / RRS ) ) ,RRS ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,( ( ( CS - RRSe ) + RRSe ) * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6297815571584818}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4311740890688259, "obj2": 0.504134836067358}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,( ACS - ( Min( ( ( PN * Const ) * MRS ) ,( CRS * Min( ( ( BR * RRS ) * BR ) ,CRS ) ) ) + Min( DDR ,ARS ) ) ) )", "choosing": "( Max( ( RCSe - Max( ( Min( ( MUM / MUC ) ,( ( MUM / RCSe ) / RCSe ) ) / ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) ),RCSe ) ),Min( ( MUM * Max( ( MUM * MUC ),( ( RRSe * ( RMSe + MUR ) ) + ( MUR - RCSe ) ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.22874493927125505, "obj2": 0.7006022160739485}, {"determining": "Max( Max( Max( ( ( Min( ( Min( ARS ,FirstVNF_RAM ) * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( ( MUM + DS ) / MLU ) + ( ( DS / MLU ) / RCSe ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.8605490788365521}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + Min( ( BR + FirstVNF_RAM ) ,DDR ) ) * Const ) * MRS ) ,( PN * FirstVNF_CPU ) )", "choosing": "( ( ( DS + Min( MLU ,( MUR + ( CS / MLU ) ) ) ) * RMSe ) + Min( ( MUC / ( MUC - ( CS - Max( MUC,Min( RRSe ,Min( MLU ,MUC ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.4534412955465587, "obj2": 0.48301368992911015}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,( MLU + DS ) ) ) ,RRSe ) )", "obj1": 0.29959514170040485, "obj2": 0.6304584318280948}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Min( Min( ( ( FirstVNF_RAM_Server - MRS ) / BR ) ,( MDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( RRSe + RCSe ),MUM ) ) ,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.2408906882591093, "obj2": 0.6874955713598736}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,( ACS - ( Min( ( ( PN * Const ) * MRS ) ,( CRS * Min( Min( MRS ,AMS ) ,CRS ) ) ) + Min( DDR ,ARS ) ) ) )", "choosing": "( Max( ( RCSe - Max( ( Min( ( MUM / MUC ) ,( ( MUM / RCSe ) / RCSe ) ) / ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) ),RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RMSe ) ) - ( DS + CS ) )", "obj1": 0.22874493927125505, "obj2": 0.7006022160739485}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ),( FirstVNF_Mem - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( MUM + Min( ( MUR * DS ) ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.562753036437247, "obj2": 0.3725398535826238}, {"determining": "Min( RRS ,Max( Min( FirstVNF_RAM ,AMS ),Max( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),MDR ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * Min( CS ,( DS - Min( RRSe ,CS ) ) ) ) ,Min( RCSe ,Min( CS ,( CS * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,Max( CS,MUC ) ) ,( MUM / MUC ) ) )", "obj1": 0.31376518218623484, "obj2": 0.623984231680261}, {"determining": "Max( Max( Max( ( ( ( Min( FirstVNF_CPU ,ARS ) * Const ) * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ),FirstVNF_Mem )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ),CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6351240805704722}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( Min( Min( ( CRS - MRS ) ,MRS ) ,FirstVNF_Mem ) + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) ) ) + Min( ( MUC - ( MLU / ( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) ) ) ) ,MUM ) )", "obj1": 0.805668016194332, "obj2": 0.16067163824952324}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - ( PN / Min( RRS ,RRS ) ) ),PN ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( DS - RCSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0015129674994551906}, {"determining": "Max( Max( Max( RRS,( Max( FirstVNF_CPU,DDR ) * CRS ) ),Min( ACS ,ACS ) ),Min( FirstVNF_RAM_Server ,( Const * ARS ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * ( RMSe / Min( Max( DS,( Max( RMSe,CS ) / ( MUC + RCSe ) ) ) ,DS ) ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.4228983116535}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUM + RCSe ) )", "obj1": 0.9089068825910931, "obj2": 0.04854009529808396}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( AMS,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUR / Min( ( ( RRSe + Max( MLU,RRSe ) ) * ( RCSe + Min( RRSe ,CS ) ) ) ,( DS - MLU ) ) ) - MLU ) / RCSe ) ,( MUC / ( MUC - RCSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.436668943902019}, {"determining": "Min( Const ,Max( ( ( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) / Max( RRS,FirstVNF_CPU ) ) + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( ( RRSe * ( RRSe + MUR ) ) ,MLU ),Max( ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ),DS ) ) * DS )", "obj1": 0.5222672064777328, "obj2": 0.38538397794983975}, {"determining": "Min( Max( ( ( Const + ( DDR * FirstVNF_RAM_Server ) ) - CRS ),PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( CS,( ( MUM * ( DS / CS ) ) - MUC ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2145748987854251, "obj2": 0.7148716250895756}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( DS * Max( ( Max( RMSe,( MUC / ( MUM * RCSe ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8447318293547443}, {"determining": "( ACS - ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ) )", "choosing": "Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( MUR * DS ) )", "obj1": 0.4291497975708502, "obj2": 0.512447081084415}], "8": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Max( ( DDR + Const ),AMS ) / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - Max( ( ( RRS + CRS ) + DDR ),Max( ( FirstVNF_RAM_Server / DDR ),DDR ) ) ) * Const ) * MRS ) ,( Const * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( ( ( ( Max( CS,MUC ) * ( RCSe / MUR ) ) + Min( Max( MLU,MUR ) ,MLU ) ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33856017251205583}, {"determining": "( FirstVNF_CPU_Server - ( ( PN * FirstVNF_Mem ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( ( MUC * RRSe ) + RRSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( MUR - ( MUR * RCSe ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.6052631578947368, "obj2": 0.2761288936532566}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( Min( CRS ,ARS ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) + RRSe ) )", "obj1": 0.708502024291498, "obj2": 0.22776832891776952}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( ( CS / Max( Max( MUR,MLU ),RCSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7267206477732794, "obj2": 0.2000459846115108}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + CRS ) ) - ( ( Min( Min( ( CRS - MRS ) ,MRS ) ,FirstVNF_Mem ) + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / Const ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) ) ) + Min( ( MUC - CS ) ,MUM ) )", "obj1": 0.8461538461538461, "obj2": 0.1215354990580374}, {"determining": "Min( RRS ,Max( Min( FirstVNF_RAM ,AMS ),Max( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),MDR ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * Min( CS ,( DS - Min( RRSe ,CS ) ) ) ) ,Min( RCSe ,Min( CS ,( CS * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,Max( CS,MUC ) ) ,( MUM / MUC ) ) )", "obj1": 0.31376518218623484, "obj2": 0.623984231680261}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( DS * Max( ( Max( RMSe,( MUC / ( MUM * RCSe ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8447318293547443}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7368421052631579, "obj2": 0.19253543251097752}, {"determining": "( ( AMS + ( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( ( MDR - RRS ) * Min( CRS ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * Max( MUC,( RRSe * RMSe ) ) ),( ( MLU * ( CS - ( ( CS / MUM ) / MUM ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.10275893293758245}, {"determining": "Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( RRSe ,DS ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( ( DS + MUR ) * RMSe ) ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.0802017577375639}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( MRS - MRS ) ) ) ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * Max( MUC,RRSe ) ) ) ) + RRSe ) )", "obj1": 0.8218623481781376, "obj2": 0.12574834499960988}, {"determining": "( Max( Const,DDR ) * Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem / MRS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,DS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / Max( RCSe,( MLU / CS ) ) ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8259481821924105}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.03308952651374046}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "( ( ( ARS - ( FirstVNF_RAM_Server - PN ) ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS - MUM ),( MUM + RCSe ) )", "obj1": 0.888663967611336, "obj2": 0.07351059489159435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( Const,DDR ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU / MUR ) / CS ) ,Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) )", "obj1": 0.8117408906882592, "obj2": 0.14235945607500633}, {"determining": "( ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),AMS ) ) )", "choosing": "( ( MUM - Min( MUM ,Max( ( MLU + ( MUC - MUR ) ),( MUC + RCSe ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.25303643724696356, "obj2": 0.6737578211038511}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.4696995323536115}, {"determining": "( ( ( ARS - DDR ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUM + MLU ) ),( MUM + RCSe ) )", "obj1": 0.7975708502024291, "obj2": 0.1560903235403045}, {"determining": "( ( ( ( MRS - ( RRS / Min( ARS ,AMS ) ) ) / FirstVNF_RAM ) - Min( ( Min( FirstVNF_Mem ,( ( FirstVNF_CPU_Server / MRS ) + Max( BR,MRS ) ) ) * MRS ) ,( CRS * Min( Min( CRS ,( FirstVNF_RAM * BR ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( MLU ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( ACS / ( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( Min( RRSe ,RCSe ),MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.4433198380566802, "obj2": 0.5002358403834508}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / Max( RCSe,( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.763682386458205}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( ( ( RRSe * RRSe ) + CS ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9696356275303644, "obj2": 0.009946415682752695}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( AMS + DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7831241312729126}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( FirstVNF_Mem - FirstVNF_RAM ) ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,DS ) ) ,RRSe ) )", "obj1": 0.9230769230769231, "obj2": 0.04617148997526096}, {"determining": "Min( Max( ( ( ( RRS + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5931178293342821}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "Max( ( Min( MDR ,Min( Min( CRS ,( FirstVNF_RAM + Max( Min( FirstVNF_CPU ,RRS ),( MDR * FirstVNF_RAM ) ) ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),FirstVNF_CPU_Server )", "choosing": "( ( Min( DS ,Min( ( ( CS * Min( CS ,MLU ) ) + MLU ) ,Min( ( MUR / MUC ) ,MUM ) ) ) / ( DS + RRSe ) ) - ( ( MUR / RRSe ) / ( MUR * CS ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5210734133875637}, {"determining": "( FirstVNF_CPU_Server - ( Min( RRS ,( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * BR ) - FirstVNF_Mem ) ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,CRS ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( Max( CS,DS ) - CS ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.757085020242915, "obj2": 0.18623958893036716}, {"determining": "Max( Max( Max( ( ( Min( ( ACS - RRS ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / ( ( Min( MUM ,MUC ) * ( CS + MUR ) ) * CS ) ) + RRSe ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8604786699052064}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( ( ( PN + FirstVNF_CPU ) - AMS ) / ( AMS * Max( ( ( ARS + FirstVNF_Mem ) / MDR ),( Max( FirstVNF_Mem,( FirstVNF_RAM_Server / Min( PN ,PN ) ) ) * MRS ) ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUC ) ,( Max( Min( ( Max( Max( DS,RRSe ),Max( MUC,MUR ) ) * RMSe ) ,RCSe ),MLU ) / MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.9838056680161943, "obj2": 0.006779727024646681}, {"determining": "( ACS - ( ( ( FirstVNF_CPU + DDR ) * ( FirstVNF_CPU / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + ( MUM * Min( DS ,RMSe ) ) ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.01767896933211214}, {"determining": "( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU ,BR ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,BR ) ,( ARS / FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,Min( DS ,MUM ) ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.771255060728745, "obj2": 0.17161662220639265}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM_Server ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05787030806995287}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( CRS + Const ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUR * RRSe ) )", "obj1": 0.9453441295546559, "obj2": 0.027562521791839354}, {"determining": "( ACS - ( ( ( FirstVNF_CPU + DDR ) * ( FirstVNF_CPU / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + ( MUM * Min( DS ,RMSe ) ) ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.7773279352226721, "obj2": 0.16658107419049611}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * ( ARS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3603238866396761, "obj2": 0.5735436505829468}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( FirstVNF_CPU - Max( ( MRS - ( ARS * MRS ) ),( MRS * FirstVNF_CPU ) ) ) ) ) / ( RRS * MDR ) )", "choosing": "( ( MLU * Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe * MUR ) ) * ( Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ) )", "obj1": 0.7955465587044535, "obj2": 0.16471772437158}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.3765182186234818, "obj2": 0.5627827092623114}, {"determining": "Max( Max( Max( ( ( Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( CS * ( ( RCSe / RCSe ) * MUM ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.837017283537487}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,ARS ) ) ) * ( FirstVNF_CPU / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7831241312729126}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( ( ( DS + Min( Max( MLU,MUR ) ,MLU ) ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.4473684210526316, "obj2": 0.48336026759526624}, {"determining": "( ( ( ( CRS - Const ) * BR ) / CRS ) + Max( Min( ( FirstVNF_Mem + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - MDR ) ) ) ,Min( ACS ,MDR ) ),( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - ( CS * Min( ( DS / DS ) ,RCSe ) ) ) - ( CS * ( RMSe - ( ( MLU * Min( ( RCSe + MUR ) ,RRSe ) ) + RMSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.6939608263300562}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( MUM ,DS ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7426921164869019}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6480088538219071}, {"determining": "Min( RRS ,Max( ( CRS + Const ),Max( Max( ( Min( ( ( MDR * DDR ) * Min( PN ,CRS ) ) ,CRS ) * FirstVNF_Mem ),MDR ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * Max( ( MUM + ( MUR * RRSe ) ),Min( MUR ,( ( MLU - MUM ) / MUM ) ) ) ) ,Min( RCSe ,Min( CS ,( CS * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,Max( CS,MUC ) ) ,( MUM / MUC ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5731803877559595}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( ( RCSe - Max( CS,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.8157894736842105, "obj2": 0.1338914223344669}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( MRS * FirstVNF_Mem ) ) ) ) * MDR ) * Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUC ) - ( ( CS + ( MUC + ( DS - ( MLU * MUC ) ) ) ) - MUC ) ) - ( DS + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6579030590561469}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4311740890688259, "obj2": 0.504134836067358}, {"determining": "( ( AMS + ( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( ( MDR - RRS ) * Min( CRS ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * Max( MUC,( RRSe * RMSe ) ) ),( ( MLU * ( CS - ( ( CS / MUM ) / MUM ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.09499035976453678}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MLU ) + ( ( DS / MLU ) / RCSe ) )", "obj1": 0.39878542510121456, "obj2": 0.5361055688150749}, {"determining": "Min( Max( FirstVNF_Mem_Server,( Min( ( FirstVNF_RAM_Server + Max( DDR,( ( PN + Const ) * FirstVNF_CPU ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ,( CRS + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6838147806103636}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + Min( ( BR + FirstVNF_RAM ) ,DDR ) ) * Const ) * MRS ) ,( PN * FirstVNF_CPU ) )", "choosing": "( ( ( DS + Min( MLU ,( MUR + ( CS / MLU ) ) ) ) * RMSe ) + Min( ( MUC / ( MUC - ( CS - Max( MUC,Min( RRSe ,Min( MLU ,MUC ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.4534412955465587, "obj2": 0.48301368992911015}, {"determining": "Max( Max( Max( FirstVNF_CPU,( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Min( MRS ,Const ) ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / ( DS * RCSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6603002967702107}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,ARS )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( DS + Min( Max( MLU,RMSe ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) * CRS ) * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + Max( ( DS - MUR ),RRSe ) ) * RMSe ) + Max( MLU,MUR ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( MUC + Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( MLU + DS ) / ( MUR - DS ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7387320328092605}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.557417870246343}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + RRS ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( MUM * MLU ) ),( ( MUR - CS ) - ( Max( RMSe,( MUC / RRSe ) ) - MUR ) ) )", "obj1": 0.951417004048583, "obj2": 0.024137447880759545}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUM + RCSe ) )", "obj1": 0.9089068825910931, "obj2": 0.04854009529808396}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8117651548140705}, {"determining": "( ( FirstVNF_CPU * BR ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( Max( DS,RCSe ) - MLU ),Min( MUM ,DS ) )", "obj1": 0.4271255060728745, "obj2": 0.5164281994189194}, {"determining": "Min( RRS ,Max( ( CRS + Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / RRS ) ) ,RRS ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,( ( ( CS - RRSe ) + RRSe ) * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6297815571584818}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - ( PN / Min( RRS ,RRS ) ) ),PN ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( DS - RCSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0015129674994551906}, {"determining": "Min( Max( ( ( Const + ( DDR * FirstVNF_RAM_Server ) ) - CRS ),PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( CS,( ( MUM * ( DS / CS ) ) - MUC ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2145748987854251, "obj2": 0.7148716250895756}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.19433198380566802, "obj2": 0.7296206819290456}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,( MLU + DS ) ) ) ,RRSe ) )", "obj1": 0.29959514170040485, "obj2": 0.6304584318280948}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ),FirstVNF_Mem )", "choosing": "( Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6344069010690306}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) + ( Const - Min( FirstVNF_RAM ,ACS ) ) ) + RRS ) / ( Max( PN,AMS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( ( DS - MUC ) - DS ) + RMSe ) ) - MUR ) ),( MUR * Max( MUM,MUR ) ) )", "obj1": 0.8643724696356275, "obj2": 0.09602797064392679}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( AMS,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUR / Min( ( ( RRSe + Max( MLU,RRSe ) ) * ( RCSe + Min( RRSe ,CS ) ) ) ,( DS - MLU ) ) ) - MLU ) / RCSe ) ,( MUC / ( MUC - RCSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.436668943902019}, {"determining": "( ACS - ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ) )", "choosing": "Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( MUR * DS ) )", "obj1": 0.4291497975708502, "obj2": 0.512447081084415}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( DDR ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8117651548140705}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( ( Min( MUR ,( MUC / CS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.291497975708502, "obj2": 0.6329347389822155}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Min( ( ( Min( FirstVNF_CPU ,ARS ) * Const ) * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) ,ARS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU + ( Max( ( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUM + RCSe ) )", "obj1": 0.902834008097166, "obj2": 0.05604300737253801}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Min( Min( ( ( FirstVNF_RAM_Server - MRS ) / BR ) ,( MDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( RRSe + RCSe ),MUM ) ) ,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.2408906882591093, "obj2": 0.6874955713598736}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,ARS ) ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ),( MLU / CS ) )", "obj1": 0.7611336032388664, "obj2": 0.1823451044858696}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) )", "choosing": "( Max( ( CS / RMSe ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2388663967611336, "obj2": 0.6927181362073149}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,ARS ) ) ) + Min( RRS ,Min( MDR ,MDR ) ) ) )", "choosing": "Max( MLU,( MLU / CS ) )", "obj1": 0.7611336032388664, "obj2": 0.1823451044858696}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( ACS ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) ) ),Min( DS ,( MUC + Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( MLU + DS ) / ( MUR - DS ) ) ) ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.557417870246343}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + ( ( DS / MLU ) / RCSe ) ) ) ) + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.7556731151963396}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6412524330939845}, {"determining": "Max( ( ( FirstVNF_RAM * ( Min( MDR ,MDR ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,( ( MUM * MUM ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6412524330939845}], "9": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( ARS - DDR ) - ARS ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( MLU - MLU ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Max( ( DDR + Const ),AMS ) / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33856017251205583}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( Const * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,Min( ( ( MLU / MUR ) / CS ) ,Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6012145748987854, "obj2": 0.2865288054477805}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ARS * ( ( ( ARS / MRS ) + MRS ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,( ( MLU / CS ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUC,MLU ) ) ,DS ) / MUM ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6862348178137652, "obj2": 0.22177523248174602}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "( FirstVNF_CPU_Server - ( ( PN * FirstVNF_Mem ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( ( MUC * RRSe ) + RRSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( MUR - ( MUR * RCSe ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.6052631578947368, "obj2": 0.2761288936532566}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( ( CS / Max( Max( MUR,MLU ),RCSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7267206477732794, "obj2": 0.2000459846115108}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + ( MRS - ( ARS * MRS ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.805668016194332, "obj2": 0.12666079533173089}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( ACS + MRS ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5558302866919881}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) + FirstVNF_RAM_Server ) / Const ) ) / ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * ( MUM * RCSe ) ) + RRSe ) )", "obj1": 0.8319838056680162, "obj2": 0.11751121481550723}, {"determining": "( ( ( ( MRS - ( RRS / Min( ARS ,AMS ) ) ) / FirstVNF_RAM ) - Min( ( Min( FirstVNF_Mem ,( ( FirstVNF_CPU_Server / MRS ) + Max( BR,MRS ) ) ) * MRS ) ,( CRS * Min( Min( CRS ,( FirstVNF_RAM * BR ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( MLU ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( DS * Max( ( Max( RMSe,( MUC / ( MUM * RCSe ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8447318293547443}, {"determining": "( ( ( ARS - DDR ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUM + MLU ) ),( MUM + RCSe ) )", "obj1": 0.7975708502024291, "obj2": 0.1560903235403045}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7368421052631579, "obj2": 0.19253543251097752}, {"determining": "Max( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5721144748303348}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),ARS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( RCSe - Max( CS,RCSe ) ) + MLU ) / ( ( RMSe / CS ) - CS ) ) ,RRSe ) ) ) / ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8327321891919803}, {"determining": "Max( ( Min( MDR ,Min( Min( CRS ,( FirstVNF_RAM + Max( Min( FirstVNF_CPU ,RRS ),( MDR * FirstVNF_RAM ) ) ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),FirstVNF_CPU_Server )", "choosing": "( ( Min( DS ,Min( ( ( CS * Min( CS ,MLU ) ) + MLU ) ,Min( ( MUR / MUC ) ,MUM ) ) ) / ( DS + RRSe ) ) - ( ( MUR / RRSe ) / ( MUR * CS ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5210734133875637}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) ) ,( DS / MLU ) ),( MLU / CS ) )", "obj1": 0.8582995951417004, "obj2": 0.0858356573138123}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.03308952651374046}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ( FirstVNF_CPU_Server + Const ) / PN ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( Min( RRSe ,RMSe ) + Min( RRSe ,RCSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05071993206721293}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.4696995323536115}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * ( ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ) - FirstVNF_CPU ) )", "choosing": "Min( Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( MUR * DS ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6155889734038734}, {"determining": "( ( AMS + ( FirstVNF_RAM_Server / RRS ) ) - ( ( Max( MRS,Min( MDR ,( ( MDR - RRS ) * Min( CRS ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( RCSe * RMSe ),Max( Max( RCSe,MUC ),MUM ) )", "obj1": 0.854251012145749, "obj2": 0.10576820756567679}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - ( Max( ( MDR - RRS ),FirstVNF_RAM_Server ) * Const ) ) ),FirstVNF_CPU_Server ) / CRS ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( ( ( Max( RMSe,MLU ) / RRSe ) + Min( MLU ,RRSe ) ) / RMSe ) / Min( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.789755159656584}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( ACS / ( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( Min( RRSe ,RCSe ),MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.4433198380566802, "obj2": 0.5002358403834508}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( ( ( RRSe * RRSe ) + CS ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9696356275303644, "obj2": 0.009946415682752695}, {"determining": "Min( Max( ( ( ( RRS + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5931178293342821}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( MRS - MRS ) ) ) ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * Max( MUC,RRSe ) ) ) ) + RRSe ) )", "obj1": 0.8218623481781376, "obj2": 0.12574834499960988}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( FirstVNF_Mem - FirstVNF_RAM ) ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,DS ) ) ,RRSe ) )", "obj1": 0.9230769230769231, "obj2": 0.04617148997526096}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04809305373348835}, {"determining": "( FirstVNF_CPU_Server - ( Min( RRS ,( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * BR ) - FirstVNF_Mem ) ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,CRS ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( Max( CS,DS ) - CS ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.757085020242915, "obj2": 0.18623958893036716}, {"determining": "( ACS - ( ( ( FirstVNF_CPU + DDR ) * ( FirstVNF_CPU / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + ( MUM * Min( DS ,RMSe ) ) ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.01767896933211214}, {"determining": "Max( Max( Max( ( ( Min( ( ACS - RRS ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / ( ( Min( MUM ,MUC ) * ( CS + MUR ) ) * CS ) ) + RRSe ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8604786699052064}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( RRSe ,DS ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( ( DS + MUR ) * RMSe ) ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.0802017577375639}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( DS - MUM ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.506510909863065}, {"determining": "( ACS - ( ( ( FirstVNF_CPU + DDR ) * ( FirstVNF_CPU / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + ( MUM * Min( DS ,RMSe ) ) ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.7773279352226721, "obj2": 0.16658107419049611}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / ( FirstVNF_CPU - Max( ( MRS - ( ARS * MRS ) ),( MRS * FirstVNF_CPU ) ) ) ) ) / ( RRS * MDR ) )", "choosing": "( ( MLU * Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe * MUR ) ) * ( Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) + RRSe ) )", "obj1": 0.7955465587044535, "obj2": 0.16471772437158}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( MUM ,DS ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7426921164869019}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( CRS + Const ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUR * RRSe ) )", "obj1": 0.9453441295546559, "obj2": 0.027562521791839354}, {"determining": "Min( ( Min( MDR ,Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.7721042835104436}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( ( ( DS + Min( Max( MLU,MUR ) ,MLU ) ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.4473684210526316, "obj2": 0.48336026759526624}, {"determining": "( ( ( ( CRS - Const ) * BR ) / CRS ) + Max( Min( ( FirstVNF_Mem + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - MDR ) ) ) ,Min( ACS ,MDR ) ),( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - ( CS * Min( ( DS / DS ) ,RCSe ) ) ) - ( CS * ( RMSe - ( ( MLU * Min( ( RCSe + MUR ) ,RRSe ) ) + RMSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.6939608263300562}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) / ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Max( PN,AMS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( ( MUR * RCSe ),( MLU + DS ) ) ) ,RRSe ) )", "obj1": 0.8906882591093117, "obj2": 0.06996399895895153}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6480088538219071}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( MRS * FirstVNF_Mem ) ) ) ) * MDR ) * Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUC ) - ( ( CS + ( MUC + ( DS - ( MLU * MUC ) ) ) ) - MUC ) ) - ( DS + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6579030590561469}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4311740890688259, "obj2": 0.504134836067358}, {"determining": "( ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),AMS ) ) )", "choosing": "( ( MUM - Min( MUM ,Max( ( MLU + ( MUC - MUR ) ),( MUC + RCSe ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.25303643724696356, "obj2": 0.6737578211038511}, {"determining": "Max( Max( Max( FirstVNF_CPU,( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Min( MRS ,Const ) ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / ( DS * RCSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6603002967702107}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( ( MRS * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( RMSe * CS ) ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "Min( Max( FirstVNF_Mem_Server,( Min( ( FirstVNF_RAM_Server + Max( DDR,( ( PN + Const ) * FirstVNF_CPU ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ,( CRS + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6838147806103636}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( ( AMS + ( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( ( MDR - RRS ) * Min( CRS ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * Max( MUC,( RRSe * RMSe ) ) ),( ( MLU * ( CS - ( ( CS / MUM ) / MUM ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.10275893293758245}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + Min( ( BR + FirstVNF_RAM ) ,DDR ) ) * Const ) * MRS ) ,( PN * FirstVNF_CPU ) )", "choosing": "( ( ( DS + Min( MLU ,( MUR + ( CS / MLU ) ) ) ) * RMSe ) + Min( ( MUC / ( MUC - ( CS - Max( MUC,Min( RRSe ,Min( MLU ,MUC ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.4534412955465587, "obj2": 0.48301368992911015}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + MDR ) ,DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( ( ( ( MUC + DS ) / RRSe ) + MLU ) * ( MLU / Max( RCSe,( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.7611538524629418}, {"determining": "Min( Max( ( ACS - ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( DS + MUR ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Min( ( ( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) * Const ) * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) ,ARS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU + ( ( ( DS + Min( MLU ,MLU ) ) * RMSe ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) ) ),( MUM + RCSe ) )", "obj1": 0.9493927125506073, "obj2": 0.023926867342280726}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( ( ( PN * Const ) * MRS ) + MDR ) ,DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( ( DS / RMSe ) - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / Max( RCSe,( MUC * RCSe ) ) ) ) ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.67177297006497}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) * CRS ) * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + Max( ( DS - MUR ),RRSe ) ) * RMSe ) + Max( MLU,MUR ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8117651548140705}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( Min( CRS ,( FirstVNF_CPU / FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * ( DS + RRSe ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) + RRSe ) )", "obj1": 0.7651821862348178, "obj2": 0.1798505372918987}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Min( ( ( Min( FirstVNF_CPU ,ARS ) * Const ) * Min( ( ( ( RRS + CRS ) + DDR ) / FirstVNF_CPU_Server ) ,Const ) ) ,ARS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + MUC ) / Max( RRSe,MUM ) ),( MUM + RCSe ) )", "obj1": 0.8805668016194332, "obj2": 0.07636509994890343}, {"determining": "Min( Max( ( ( Const + ( DDR * FirstVNF_RAM_Server ) ) - CRS ),PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( CS,( ( MUM * ( DS / CS ) ) - MUC ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2145748987854251, "obj2": 0.7148716250895756}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,( MLU + DS ) ) ) ,RRSe ) )", "obj1": 0.29959514170040485, "obj2": 0.6304584318280948}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ),FirstVNF_Mem )", "choosing": "( Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6344069010690306}, {"determining": "Min( ( DDR + Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - Max( Min( MUM ,MLU ),Max( MUR,DS ) ) ) ,Max( ( DS + Min( Max( MLU,MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.1902834008097166, "obj2": 0.7323433349406514}, {"determining": "( ( ( ( PN + FirstVNF_CPU ) - AMS ) / ( AMS * Max( ( ( ARS + FirstVNF_Mem ) / MDR ),( Max( FirstVNF_Mem,( FirstVNF_RAM_Server / Min( PN ,PN ) ) ) * MRS ) ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUC ) ,( Max( Min( ( Max( Max( DS,RRSe ),Max( MUC,MUR ) ) * RMSe ) ,RCSe ),MLU ) / MLU ) ),( ( MUR - CS ) - Max( RMSe,MLU ) ) )", "obj1": 0.9838056680161943, "obj2": 0.006779727024646681}, {"determining": "( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( Const * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( CS + Min( RRSe ,Max( ( Min( MUR ,( MUC / CS ) ) + MUC ),CS ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.19433198380566802, "obj2": 0.7296206819290456}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( AMS,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUR / Min( ( ( RRSe + Max( MLU,RRSe ) ) * ( RCSe + Min( RRSe ,CS ) ) ) ,( DS - MLU ) ) ) - MLU ) / RCSe ) ,( MUC / ( MUC - RCSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.436668943902019}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( ( ARS - ( FirstVNF_RAM_Server - PN ) ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS - MUM ),( MUM + RCSe ) )", "obj1": 0.888663967611336, "obj2": 0.07351059489159435}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "Min( RRS ,Max( Min( FirstVNF_RAM ,AMS ),Max( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),MDR ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * Min( CS ,( DS - Min( RRSe ,CS ) ) ) ) ,Min( RCSe ,Min( CS ,( CS * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,Max( CS,MUC ) ) ,( MUM / MUC ) ) )", "obj1": 0.31376518218623484, "obj2": 0.623984231680261}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( ( Min( MUR ,( MUC / CS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.291497975708502, "obj2": 0.6329347389822155}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ),PN ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( ( Max( RCSe,MUC ) * MUC ) - RCSe ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0031564684367257102}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Min( Min( ( ( FirstVNF_RAM_Server - MRS ) / BR ) ,( MDR + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( RRSe + RCSe ),MUM ) ) ,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.2408906882591093, "obj2": 0.6874955713598736}, {"determining": "Min( Max( ( FirstVNF_Mem - FirstVNF_RAM ),PN ) ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) )", "choosing": "( Max( ( CS / RMSe ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2388663967611336, "obj2": 0.6927181362073149}, {"determining": "( ( FirstVNF_CPU_Server - ( BR + Const ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),( MUC / MUR ) ) * DS ) * ( MLU / Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) )", "obj1": 0.771255060728745, "obj2": 0.17161662220639265}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( AMS + DDR ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( MUC * ( MLU / CS ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7831241312729126}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + ( ( DS / MLU ) / RCSe ) ) ) ) + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.7556731151963396}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6412524330939845}, {"determining": "Min( RRS ,Max( ( CRS + Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / RRS ) ) ,RRS ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,( ( ( CS - RRSe ) + RRSe ) * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6297815571584818}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6412524330939845}], "10": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Max( ( DDR + Const ),AMS ) / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - DDR ) - ARS ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( MLU - MLU ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33856017251205583}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( Const * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,Min( ( ( MLU / MUR ) / CS ) ,Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6012145748987854, "obj2": 0.2865288054477805}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ARS * ( ( ( ARS / MRS ) + MRS ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,( ( MLU / CS ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUC,MLU ) ) ,DS ) / MUM ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6862348178137652, "obj2": 0.22177523248174602}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "( ( ( ARS - DDR ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUM + MLU ) ),( MUM + RCSe ) )", "obj1": 0.7975708502024291, "obj2": 0.1560903235403045}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( ( CS / Max( Max( MUR,MLU ),RCSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7267206477732794, "obj2": 0.2000459846115108}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + ( MRS - ( ARS * MRS ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.805668016194332, "obj2": 0.12666079533173089}, {"determining": "( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - ( Max( ( MDR - RRS ),FirstVNF_RAM_Server ) * Const ) ) ),FirstVNF_CPU_Server ) / CRS ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( ( ( Max( RMSe,MLU ) / RRSe ) + Min( MLU ,RRSe ) ) / RMSe ) / Min( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.789755159656584}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( DS * Max( ( Max( RMSe,( MUC / ( MUM * RCSe ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8447318293547443}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( RRSe + ( RCSe / ( DS / DS ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7024291497975709, "obj2": 0.21680625338258983}, {"determining": "Max( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5721144748303348}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),ARS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( RCSe - Max( CS,RCSe ) ) + MLU ) / ( ( RMSe / CS ) - CS ) ) ,RRSe ) ) ) / ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8327321891919803}, {"determining": "( AMS - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),( CS * ( MUM - CS ) ) ) ) * RRSe )", "obj1": 0.7753036437246964, "obj2": 0.16277220604101966}, {"determining": "Max( ( Min( MDR ,Min( Min( CRS ,( FirstVNF_RAM + Max( Min( FirstVNF_CPU ,RRS ),( MDR * FirstVNF_RAM ) ) ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),FirstVNF_CPU_Server )", "choosing": "( ( Min( DS ,Min( ( ( CS * Min( CS ,MLU ) ) + MLU ) ,Min( ( MUR / MUC ) ,MUM ) ) ) / ( DS + RRSe ) ) - ( ( MUR / RRSe ) / ( MUR * CS ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5210734133875637}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) ) ,( DS / MLU ) ),( MLU / CS ) )", "obj1": 0.8582995951417004, "obj2": 0.0858356573138123}, {"determining": "( FirstVNF_CPU_Server - ( Min( RRS ,( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * BR ) - FirstVNF_Mem ) ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,CRS ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( Max( CS,DS ) - CS ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.757085020242915, "obj2": 0.18623958893036716}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ( FirstVNF_CPU_Server + Const ) / PN ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( Min( RRSe ,RMSe ) + Min( RRSe ,RCSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05071993206721293}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.4696995323536115}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( ACS / ( Max( FirstVNF_CPU_Server,PN ) - ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( Min( RRSe ,RCSe ),MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.4433198380566802, "obj2": 0.5002358403834508}, {"determining": "Min( ( Min( MDR ,Min( Min( ( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,FirstVNF_RAM ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( CS / MLU ) ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "Min( Max( ( ( ( RRS + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5931178293342821}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04809305373348835}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( PN * FirstVNF_CPU ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( Const + Const ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( Min( MUM ,MLU ),CS ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,RCSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9574898785425101, "obj2": 0.015155094484239476}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( AMS - MRS ) ) ) ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( ( DS + CS ) * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * Max( MUC,RRSe ) ) ) ) + RRSe ) )", "obj1": 0.8502024291497976, "obj2": 0.1121982337867596}, {"determining": "Max( Max( Max( ( ( Min( ( ACS - RRS ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / ( ( Min( MUM ,MUC ) * ( CS + MUR ) ) * CS ) ) + RRSe ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8604786699052064}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.03308952651374046}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( ( CRS * DDR ) + MRS ) ) ,ARS ) ) ) ) / ( ( MDR * Max( Min( MRS ,BR ),( MRS + CRS ) ) ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( Min( MUR ,( DS + CS ) ) * Min( ( ( DS - MLU ) + ( MLU * RMSe ) ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5558302866919881}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * ( ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ) - FirstVNF_CPU ) )", "choosing": "Min( Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( MUR * DS ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6155889734038734}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( DS - MUM ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.506510909863065}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( MUM ,( Max( MLU,( ( MUM * RCSe ) / CS ) ) / ( CS * ( RRSe / MUC ) ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.1720647773279352, "obj2": 0.7423265840815764}, {"determining": "( ( ( ( MRS - ( RRS / Min( ARS ,AMS ) ) ) / FirstVNF_RAM ) - Min( ( Min( FirstVNF_Mem ,( ( FirstVNF_CPU_Server / MRS ) + Max( BR,MRS ) ) ) * MRS ) ,( CRS * Min( Min( CRS ,( FirstVNF_RAM * BR ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( MLU ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( CRS + Const ) )", "choosing": "Max( ( MLU + ( Max( ( MUR * RCSe ),( ( DS + MUR ) * RMSe ) ) - MUR ) ),( MUR * RRSe ) )", "obj1": 0.9453441295546559, "obj2": 0.027562521791839354}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( Min( CRS ,( FirstVNF_CPU / FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * ( DS + RRSe ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) + RRSe ) )", "obj1": 0.7651821862348178, "obj2": 0.1798505372918987}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) + Min( DDR ,( Const * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( ( ( RRSe * RRSe ) + CS ),Max( DS,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9696356275303644, "obj2": 0.009894848858948035}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6480088538219071}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( DDR * DDR ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - Min( DS ,RMSe ) ),( CS - Min( MUC ,DS ) ) ) ) * RRSe )", "obj1": 0.7368421052631579, "obj2": 0.19253543251097752}, {"determining": "Min( RRS ,Max( ( CRS + Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / RRS ) ) ,RRS ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,( ( ( CS - RRSe ) + RRSe ) * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6297815571584818}, {"determining": "( FirstVNF_CPU_Server - ( ( PN * FirstVNF_Mem ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( ( MUC * RRSe ) + RRSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( MUR - ( MUR * RCSe ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.6052631578947368, "obj2": 0.2761288936532566}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,ARS ) ) )", "choosing": "( ( ( DS + Min( Max( MLU,MUR ) ,MLU ) ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) )", "obj1": 0.4473684210526316, "obj2": 0.48336026759526624}, {"determining": "( ( ( ( CRS - Const ) * BR ) / CRS ) + Max( Min( ( FirstVNF_Mem + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - MDR ) ) ) ,Min( ACS ,MDR ) ),( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - ( CS * Min( ( DS / DS ) ,RCSe ) ) ) - ( CS * ( RMSe - ( ( MLU * Min( ( RCSe + MUR ) ,RRSe ) ) + RMSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.6939608263300562}, {"determining": "( ( FirstVNF_CPU_Server - ( BR + Const ) ) - ( FirstVNF_CPU_Server / ( Min( Max( ARS,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) ) ,( ARS / FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),( MUC / MUR ) ) * DS ) * ( MLU / Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) )", "obj1": 0.771255060728745, "obj2": 0.17161662220639265}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),PN ) / ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Max( PN,AMS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( ( MUR * RCSe ),( MLU + DS ) ) ) ,RRSe ) )", "obj1": 0.8906882591093117, "obj2": 0.06996399895895153}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( ( ( PN * FirstVNF_CPU ) * MRS ) + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / Max( PN,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( Max( Min( MUR ,RRSe ),MLU ),( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( CS * MLU ) ) )", "obj1": 0.2692307692307692, "obj2": 0.6576293536696249}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( MRS - MRS ) ) ) ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * Max( MUC,RRSe ) ) ) ) + RRSe ) )", "obj1": 0.8218623481781376, "obj2": 0.12574834499960988}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4311740890688259, "obj2": 0.504134836067358}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( ( MRS * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( RMSe * CS ) ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "Min( Max( FirstVNF_Mem_Server,( Min( ( FirstVNF_RAM_Server + Max( DDR,( ( PN + Const ) * FirstVNF_CPU ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ,( CRS + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6838147806103636}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Min( ( ( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) * Const ) * Min( ( ( Const - BR ) / FirstVNF_CPU_Server ) ,Const ) ) ,ARS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU + ( ( ( DS + Min( MLU ,MLU ) ) * RMSe ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) ) ),( MUM + RCSe ) )", "obj1": 0.9493927125506073, "obj2": 0.023926867342280726}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ACS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - DS ),CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6170860778689989}, {"determining": "( ( AMS + ( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) * FirstVNF_RAM_Server ) ) - ( ( Max( MRS,Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( ( MDR - RRS ) * Min( CRS ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * Max( MUC,( RRSe * RMSe ) ) ),( ( MLU * ( CS - ( ( CS / MUM ) / MUM ) ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.10275893293758245}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + Min( ( BR + FirstVNF_RAM ) ,DDR ) ) * Const ) * MRS ) ,( PN * FirstVNF_CPU ) )", "choosing": "( ( ( DS + Min( MLU ,( MUR + ( CS / MLU ) ) ) ) * RMSe ) + Min( ( MUC / ( MUC - ( CS - Max( MUC,Min( RRSe ,Min( MLU ,MUC ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.4534412955465587, "obj2": 0.48301368992911015}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,( ( PN * Const ) * MRS ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( DS + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "Max( Max( Max( FirstVNF_CPU,( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Min( MRS ,Const ) ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / ( DS * RCSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6603002967702107}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - DDR ),FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( MUM ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( MUR - ( MUR * ( MUC * MUR ) ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.6052631578947368, "obj2": 0.2761288936532566}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( Const + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ),( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6707138552627852}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( Max( ACS,PN ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( MUM / RRSe ) ),( CS * Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( ACS + MRS ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5558302866919881}, {"determining": "Min( ( ( ( ARS - DDR ) - Min( ARS ,ACS ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( MUM * Max( CS,RRSe ) ),MUM ) ) ,( ( DS + MUR ) * RMSe ) ) ) - ( DS + Min( Min( RMSe ,MUC ) ,RRSe ) ) )", "obj1": 0.6983805668016194, "obj2": 0.21743982611088297}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8117651548140705}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( ( ( ARS / ( FirstVNF_Mem_Server / RRS ) ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) + FirstVNF_RAM_Server ) / Const ) ) / ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( Min( ( RCSe - RRSe ) ,Min( MUM ,MUM ) ) ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * ( RMSe * RCSe ) ) + RRSe ) )", "obj1": 0.8319838056680162, "obj2": 0.11751121481550723}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Min( ( ( Min( FirstVNF_CPU ,ARS ) * Const ) * Min( ( ( ( RRS + CRS ) + DDR ) / FirstVNF_CPU_Server ) ,Const ) ) ,ARS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + MUC ) / Max( RRSe,MUM ) ),( MUM + RCSe ) )", "obj1": 0.8805668016194332, "obj2": 0.07636509994890343}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( Min( FirstVNF_CPU ,DDR ) * Const ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( ( RMSe * ( ( RCSe * MUC ) / CS ) ),( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9777327935222672, "obj2": 0.006408052092515755}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( RRSe ,DS ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( ( DS + MUR ) * RMSe ) ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.0802017577375639}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "Min( Max( ( ( Const + ( DDR * FirstVNF_RAM_Server ) ) - CRS ),PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( CS,( ( MUM * ( DS / CS ) ) - MUC ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2145748987854251, "obj2": 0.7148716250895756}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( FirstVNF_Mem - FirstVNF_RAM ) ) / MRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( MLU - CS ) ,Max( ( MUR * RCSe ),( MLU + DS ) ) ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,DS ) ) ,RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.04268833995315414}, {"determining": "Min( ( DDR + Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - Max( Min( MUM ,MLU ),Max( MUR,DS ) ) ) ,Max( ( DS + Min( Max( MLU,MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.1902834008097166, "obj2": 0.7323433349406514}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / CS ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.4536940228186013}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ),FirstVNF_Mem )", "choosing": "( Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6344069010690306}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,CRS ) ) ,( DDR / PN ) ) ) ) * ARS ) ) )", "choosing": "( Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) * RRSe )", "obj1": 0.8259109311740891, "obj2": 0.12037071885677529}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( FirstVNF_Mem - FirstVNF_RAM ) ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,DS ) ) ,RRSe ) )", "obj1": 0.9230769230769231, "obj2": 0.04617148997526096}, {"determining": "( ACS / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS / ( Min( ( DS * MLU ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Max( MLU,MLU ) - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) * MUC ) ) )", "obj1": 0.49190283400809715, "obj2": 0.43505435755729455}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) * CRS ) * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + Max( ( DS - MUR ),RRSe ) ) * RMSe ) + Max( MLU,MUR ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( ( ARS - ( FirstVNF_RAM_Server - PN ) ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS - MUM ),( MUM + RCSe ) )", "obj1": 0.888663967611336, "obj2": 0.07351059489159435}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.7368421052631579, "obj2": 0.19253543251097752}, {"determining": "( ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) + Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ),Max( Max( RRS,FirstVNF_Mem_Server ),AMS ) ) )", "choosing": "( ( MUM - Min( MUM ,Max( ( MLU + ( MUM - MUR ) ),( MUC + RCSe ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.25303643724696356, "obj2": 0.6737578211038511}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( ( Min( MUR ,( MUC / CS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.291497975708502, "obj2": 0.6329347389822155}, {"determining": "( ( AMS + ( FirstVNF_RAM_Server / RRS ) ) - ( ( Max( MRS,Min( MDR ,( ( MDR - RRS ) * Min( CRS ,ARS ) ) ) ) / BR ) + ARS ) )", "choosing": "Max( ( RCSe * RMSe ),Max( Max( RCSe,MUC ),MUM ) )", "obj1": 0.854251012145749, "obj2": 0.10576820756567679}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}], "11": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( CRS * PN ) - ARS ) / MDR )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( MLU - MLU ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + ( MUR / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Max( ( DDR + Const ),AMS ) / ( AMS + ( AMS * MDR ) ) ) ) + Min( DDR ,( Const + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33856017251205583}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ARS * ( ( ( ARS / MRS ) + MRS ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,( ( MLU / CS ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUC,MLU ) ) ,DS ) / MUM ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6862348178137652, "obj2": 0.22177523248174602}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( Const * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,Min( ( ( MLU / MUR ) / CS ) ,Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6012145748987854, "obj2": 0.2865288054477805}, {"determining": "( ( Min( CRS ,Max( MDR,CRS ) ) + FirstVNF_RAM_Server ) / Min( Min( Const ,MDR ) ,MRS ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + CS ) ) ) * ( MUM / Max( ( MUR - MUC ),( ( ( ( MLU * DS ) - ( MUM + MUM ) ) / MUR ) - ( RMSe * RMSe ) ) ) ) ) ,( ( RCSe + RCSe ) * MUC ) )", "obj1": 0.5020242914979757, "obj2": 0.424988814658236}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.15122533584124742}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( Max( RRSe,( MUR * MUC ) ) * Min( MUC ,MUC ) )", "obj1": 0.8036437246963563, "obj2": 0.13848698811906257}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "( ( ( ARS / FirstVNF_CPU ) - ( ( Min( CRS ,( FirstVNF_CPU / FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) / Const ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * ( DS + RRSe ) ) / ( ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) + RRSe ) )", "obj1": 0.7651821862348178, "obj2": 0.1798505372918987}, {"determining": "( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - ( Max( ( MDR - RRS ),FirstVNF_RAM_Server ) * Const ) ) ),FirstVNF_CPU_Server ) / CRS ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( ( ( Max( RMSe,MLU ) / RRSe ) + Min( MLU ,RRSe ) ) / RMSe ) / Min( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.789755159656584}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( DDR * DDR ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - Min( DS ,RMSe ) ),( CS - Min( MUC ,DS ) ) ) ) * RRSe )", "obj1": 0.7368421052631579, "obj2": 0.19253543251097752}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + ( MRS - ( ARS * MRS ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.805668016194332, "obj2": 0.11912830092394947}, {"determining": "( ACS - ( ( FirstVNF_RAM_Server + BR ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( Max( RCSe,( MUC / CS ) ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.06553806271459897}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ( FirstVNF_CPU_Server + Const ) / PN ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( Min( RRSe ,RMSe ) + Min( RRSe ,RCSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05071993206721293}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9453441295546559, "obj2": 0.019641465339244886}, {"determining": "( ( ( ARS / ( FirstVNF_Mem_Server / RRS ) ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) + FirstVNF_RAM_Server ) / Const ) ) / ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( Min( ( RCSe - RRSe ) ,Min( MUM ,MUM ) ) ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * ( RMSe * RCSe ) ) + RRSe ) )", "obj1": 0.8319838056680162, "obj2": 0.11751121481550723}, {"determining": "Max( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5721144748303348}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.03308952651374046}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - ( ARS * MRS ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ),Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.18106332895077182}, {"determining": "Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( RRSe ,DS ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( ( DS + MUR ) * RMSe ) ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.0802017577375639}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) ) ,( DS / MLU ) ),( MLU / CS ) )", "obj1": 0.8582995951417004, "obj2": 0.0858356573138123}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "Max( ( ( FirstVNF_Mem_Server - ACS ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Max( RCSe,( CS - MUM ) ) ,RCSe ) / ( ( ( ( MUC - Min( RRSe ,DS ) ) - Max( RMSe,MUM ) ) * CS ) * ( RCSe * Max( Max( ( MUR / Min( Max( DS,MUR ) ,CS ) ),RRSe ),CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6223374884062548}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "Min( Max( FirstVNF_Mem_Server,( Min( ( FirstVNF_RAM_Server + Max( DDR,( ( PN + Const ) * FirstVNF_CPU ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ,( CRS + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6838147806103636}, {"determining": "Min( Max( ( ( ( RRS + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5931178293342821}, {"determining": "Max( ( Min( MDR ,Min( Min( CRS ,( FirstVNF_RAM + Max( Min( FirstVNF_CPU ,RRS ),( MDR * FirstVNF_RAM ) ) ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),FirstVNF_CPU_Server )", "choosing": "( ( Min( DS ,Min( ( ( CS * Min( CS ,MLU ) ) + MLU ) ,Min( ( MUR / MUC ) ,MUM ) ) ) / ( DS + RRSe ) ) - ( ( MUR / RRSe ) / ( MUR * CS ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5210734133875637}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),ARS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( ( ( ( RCSe - Max( CS,RCSe ) ) + MLU ) / ( ( RMSe / CS ) - CS ) ) ,RRSe ) ) ) / ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8327321891919803}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( ACS + MRS ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5558302866919881}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6480088538219071}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ( FirstVNF_CPU_Server + Const ) / PN ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( Min( RRSe ,RMSe ) + Min( RRSe ,RCSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8340080971659919, "obj2": 0.10251587091757977}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM * Max( Const,MRS ) ) + ACS ) ) ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( RRS - FirstVNF_CPU ) ) ) ) ) / ( ( MDR * DDR ) * ( Min( MRS ,MRS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( RMSe ,MLU ) ),( ( ( MUM - ( MUM / ( MUR - Max( Min( CS ,RMSe ),Max( MLU,MLU ) ) ) ) ) - MUC ) * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.48867653891702445}, {"determining": "( ( ( ( CRS - Const ) * BR ) / CRS ) + Max( Min( ( FirstVNF_Mem + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - MDR ) ) ) ,Min( ACS ,MDR ) ),( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - ( CS * Min( ( DS / DS ) ,RCSe ) ) ) - ( CS * ( RMSe - ( ( MLU * Min( ( RCSe + MUR ) ,RRSe ) ) + RMSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.6939608263300562}, {"determining": "Min( ( Min( MDR ,Min( Min( ( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,FirstVNF_RAM ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( CS / MLU ) ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "( ( ( ( MRS - ( RRS / Min( ARS ,AMS ) ) ) / FirstVNF_RAM ) - Min( ( Min( FirstVNF_Mem ,( ( FirstVNF_CPU_Server / MRS ) + Max( BR,MRS ) ) ) * MRS ) ,( CRS * Min( Min( CRS ,( FirstVNF_RAM * BR ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( MLU ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( DDR + Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( DS - MUM ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( Min( ( DS - CS ) ,RRSe ) + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.47664852820812}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Const,( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( MUR - Max( ( MUC - MLU ),( MUM * MUR ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1902834008097166, "obj2": 0.7308982335835038}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04809305373348835}, {"determining": "( FirstVNF_CPU_Server - ( ( PN * FirstVNF_Mem ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( ( MUC * RRSe ) + RRSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( MUR - ( MUR * RCSe ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.6052631578947368, "obj2": 0.2761288936532566}, {"determining": "Min( RRS ,Max( ( CRS + Min( ( FirstVNF_CPU_Server * Max( Const,ARS ) ) ,RRS ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( RRSe * CS ) ,Min( RCSe ,Min( CS ,( ( ( CS - RRSe ) + RRSe ) * ( MUM - CS ) ) ) ) ) ) / Min( Min( CS ,DS ) ,( MUM / MUC ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6029597423801101}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( ( ( PN * FirstVNF_CPU ) * MRS ) + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / Max( PN,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( Max( Min( MUR ,RRSe ),MLU ),( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( CS * MLU ) ) )", "obj1": 0.2692307692307692, "obj2": 0.6576293536696249}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( MRS - MRS ) ) ) ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6413874031816728}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,CRS ) ) ,( ( RRS - DDR ) / FirstVNF_CPU_Server ) ) ) ) * ARS ) ) )", "choosing": "( Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ) ) * ( DS + MUC ) ) ) * RRSe )", "obj1": 0.8522267206477733, "obj2": 0.09746013768674057}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.4696995323536115}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) + Min( DDR ,( Const * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( ( ( RRSe * RRSe ) + CS ),Max( DS,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9696356275303644, "obj2": 0.009894848858948035}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ACS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - DS ),CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6170860778689989}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8117651548140705}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * ( ( Max( FirstVNF_Mem,ACS ) + Min( DDR ,ARS ) ) - FirstVNF_CPU ) )", "choosing": "Min( Max( ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / RCSe ) ),( MUR * DS ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6155889734038734}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) * ARS )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,Min( MUC ,RRSe ) ) ,MUR ) / ( ( MLU / CS ) + RRSe ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8501026049986224}, {"determining": "Max( Max( Max( FirstVNF_CPU,( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Min( MRS ,Const ) ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / ( DS * RCSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6603002967702107}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( CRS + Max( ( CRS - PN ),DDR ) ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) ) ,( DS / MLU ) ),( ( MLU - Min( MUM ,( ( ( MUC / ( DS + DS ) ) - DS ) * RMSe ) ) ) + ( ( DS / ( ( RRSe / CS ) * MUC ) ) / RCSe ) ) )", "obj1": 0.8481781376518218, "obj2": 0.10127617819028265}, {"determining": "Min( ( Min( MDR ,Min( Min( ( ARS + Const ) ,( BR / FirstVNF_RAM_Server ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( CS / MUC ) ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( CS * CS ) )", "obj1": 0.15384615384615385, "obj2": 0.7660045939126906}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - DDR ),FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( MUM ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( MUR - ( MUR * ( MUC * MUR ) ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.6052631578947368, "obj2": 0.2761288936532566}, {"determining": "( Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( BR - Const ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( MUM * DS ) * ( DS * CS ) ) / CS ) / RCSe ) + DS ) ,( MUC * ( MLU / MUC ) ) )", "obj1": 0.4676113360323887, "obj2": 0.4654858776241212}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( Min( FirstVNF_CPU ,DDR ) * Const ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( ( RMSe * ( ( RCSe * MUC ) / CS ) ),( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9777327935222672, "obj2": 0.006408052092515755}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( MUM ,( Max( MLU,( ( MUM * RCSe ) / CS ) ) / ( CS * ( RRSe / MUC ) ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.1720647773279352, "obj2": 0.7423265840815764}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( Max( ACS,PN ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( MUM / RRSe ) ),( CS * Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( ( CRS * DDR ) + MRS ) ) ,ARS ) ) ) ) / ( ( MDR * Max( Min( MRS ,BR ),( MRS + CRS ) ) ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( Min( MUR ,( DS + CS ) ) * Min( ( ( DS - MLU ) + ( MLU * RMSe ) ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5558302866919881}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) * CRS ) * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + Max( ( DS - MUR ),RRSe ) ) * RMSe ) + Max( MLU,MUR ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( ( ( RCSe - Max( CS,RCSe ) ) + MLU ) / ( DS - ( ( CS + MUC ) / Max( RRSe,MUM ) ) ) ) ,RRSe ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.5100387002171696}, {"determining": "Min( Min( RRS ,CRS ) ,Max( Min( FirstVNF_CPU_Server ,( PN + FirstVNF_CPU_Server ) ),Const ) )", "choosing": "Min( ( RMSe - ( MUC - ( CS - ( RMSe - Max( Max( RRSe,Min( DS ,MUR ) ),DS ) ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( Max( Max( ( ( CRS * Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Const ) ) * ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) ),MRS ),( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Max( MDR,RRS ) ) - FirstVNF_RAM_Server ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( DS * Max( ( Max( RMSe,MUM ) - MUR ),CS ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8405087421005516}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4311740890688259, "obj2": 0.504134836067358}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / CS ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.4536940228186013}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( Min( Const ,FirstVNF_CPU_Server ),( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ),FirstVNF_Mem )", "choosing": "( Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),MUM ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.6752349977925535}, {"determining": "Min( ( ( PN * Const ) * MRS ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.48298488163421266}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( DS + Min( DS ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "( ( FirstVNF_CPU_Server - Const ) * ( FirstVNF_Mem_Server + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS * RCSe ) * ( ( Max( RRSe,Min( ( MLU / RRSe ) ,Max( RCSe,RCSe ) ) ) * Max( RMSe,( ( CS - MUC ) * DS ) ) ) / ( DS / ( ( ( MLU - RRSe ) - MUM ) / RCSe ) ) ) ) + ( ( DS / RMSe ) / RCSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( ( FirstVNF_RAM * RRS ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( MUC * MUM ) / RMSe ) * ( MLU / CS ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01511642142865142}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( MUR ,( MUC / CS ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.17813765182186234, "obj2": 0.7403863127699183}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( Const + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ),( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6707138552627852}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "Min( ( DDR + Const ) ,Min( FirstVNF_RAM ,Min( Max( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,( ( PN * Const ) * MRS ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - Max( Min( MUM ,MLU ),Max( MUR,DS ) ) ) ,Max( ( DS + Min( Max( MLU,CS ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.20647773279352227, "obj2": 0.7227841009645612}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem ) ),Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ) ,( ( PN * Const ) * Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,MUR ) ,RRSe ) ) - ( DS + ( RMSe / MUC ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7188337511775665}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( Min( ( CS / DS ) ,RRSe ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( DS - MUM ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.506510909863065}, {"determining": "( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( Min( ( ( ( ARS / FirstVNF_RAM_Server ) * Const ) * Min( ( ( FirstVNF_CPU * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) ) ,Const ) ) ,ARS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUM,RRSe ) / Max( RRSe,MUM ) ),( MUM + ( MUR - Max( MUC,RMSe ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.046985040247134936}, {"determining": "( ( Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,Min( AMS ,Const ) ) ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( Max( MLU,RRSe ),( ( Min( RRSe ,DS ) - Max( CS,RCSe ) ) + RCSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0013227387362705501}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( ( Min( MUR ,( MUC / CS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.291497975708502, "obj2": 0.6329347389822155}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.48298488163421266}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( FirstVNF_Mem - FirstVNF_RAM ) ) / MRS ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( Min( ( MLU - CS ) ,Max( RRSe,DS ) ) ,RRSe ) )", "obj1": 0.9230769230769231, "obj2": 0.04617148997526096}], "12": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( Min( PN ,ARS ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( ( Max( MRS,CRS ) * RRS ) ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( RCSe + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * PN ) - ARS ) / MDR )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( MLU - MLU ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( Min( MUC ,MLU ) ,( ( MUR / RCSe ) / ( DS + ( MUR / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( ( MLU - ( RCSe * MUM ) ) ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.49190283400809715, "obj2": 0.34477478712021975}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( Const * ( MRS + PN ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,Min( ( ( MLU / MUR ) / CS ) ,Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) ) + ( RRSe + ( RCSe / ( MLU - MUM ) ) ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( MUC + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6012145748987854, "obj2": 0.2865288054477805}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * Const ) * AMS ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( ( DS + MUR ) ,MLU ) ),Min( ( ( RRSe + Min( RRSe ,RCSe ) ) - CS ) ,RRSe ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ARS * ( ( ( ARS / MRS ) + MRS ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,( ( MLU / CS ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUC,MLU ) ) ,DS ) / MUM ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6862348178137652, "obj2": 0.22177523248174602}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33856017251205583}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.15122533584124742}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.18515366271480035}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.16542523128974043}, {"determining": "( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - ( Max( ( MDR - RRS ),FirstVNF_RAM_Server ) * Const ) ) ),FirstVNF_CPU_Server ) / CRS ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( ( ( Max( RMSe,MLU ) / RRSe ) + Min( MLU ,RRSe ) ) / RMSe ) / Min( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.789755159656584}, {"determining": "( FirstVNF_CPU_Server - ( Min( AMS ,( Const + ( FirstVNF_Mem + ( DDR + FirstVNF_CPU_Server ) ) ) ) - DDR ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( DS ,RRSe ) - MUC ) ) ) - ( ( MUR - ( MUR * ( MUC * MUR ) ) ) - ( RRSe + MUC ) ) ) * ( Max( ( MUR / MLU ),( MUR * MUC ) ) + MLU ) )", "obj1": 0.7975708502024291, "obj2": 0.14395294804310005}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( DDR ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( ( RRSe + Min( RRSe ,RCSe ) ) + RRSe ) ) ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.8397026412974986}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ( FirstVNF_CPU_Server + Const ) / PN ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( Min( RRSe ,RMSe ) + Min( RRSe ,RCSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05071993206721293}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - ( ARS * MRS ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ),Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.18106332895077182}, {"determining": "( ACS - ( ( FirstVNF_RAM_Server + BR ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( Max( RCSe,( MUC / CS ) ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.06553806271459897}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + ( MRS - ( ARS * MRS ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.805668016194332, "obj2": 0.11912830092394947}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.2631578947368421, "obj2": 0.6446159755075014}, {"determining": "( ( DDR / ( ( ( ARS - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( MRS + PN ) ) ,CRS ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + Max( MLU,MUC ) ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( MRS - MRS ) ) ) ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6413874031816728}, {"determining": "( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5533042044621402}, {"determining": "Min( Max( FirstVNF_Mem_Server,( Min( ( FirstVNF_RAM_Server + Max( DDR,( ( PN + Const ) * FirstVNF_CPU ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ,( CRS + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6838147806103636}, {"determining": "( ACS - ( Max( DDR,FirstVNF_CPU_Server ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( CS ,MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.21519361484687038}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * ( ACS + FirstVNF_CPU ) ) * MRS ) ,( CRS * Min( Min( CRS ,( ACS + MRS ) ) ,ARS ) ) ) ) / ( ( MDR * CRS ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( RRSe / CS ) ,( MUR * RCSe ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.5698357663899803}, {"determining": "Max( ( Min( MDR ,Min( Min( CRS ,( FirstVNF_RAM + Max( Min( FirstVNF_CPU ,RRS ),( MDR * FirstVNF_RAM ) ) ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),FirstVNF_CPU_Server )", "choosing": "( ( Min( DS ,Min( ( ( CS * Min( CS ,MLU ) ) + MLU ) ,Min( ( MUR / MUC ) ,MUM ) ) ) / ( DS + RRSe ) ) - ( ( MUR / RRSe ) / ( MUR * CS ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5210734133875637}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( ( Min( MUR ,( MUC / CS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.291497975708502, "obj2": 0.6329347389822155}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( Max( RRSe,( MUR * MUC ) ) * Min( MUC ,MUC ) )", "obj1": 0.8036437246963563, "obj2": 0.13848698811906257}, {"determining": "Max( ( ( FirstVNF_Mem_Server - ACS ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Max( RCSe,( CS - MUM ) ) ,RCSe ) / ( ( ( ( MUC - Min( RRSe ,DS ) ) - Max( RMSe,MUM ) ) * CS ) * ( RCSe * Max( Max( ( MUR / Min( Max( DS,MUR ) ,CS ) ),RRSe ),CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6223374884062548}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM,Min( AMS ,BR ) ) * ( MRS - AMS ) ) ) )", "choosing": "( Min( ( ( ( DS / CS ) / ( Min( ( RMSe - MUR ) ,MUC ) - MUR ) ) + DS ) ,( MUC * ( Min( MUR ,RCSe ) / CS ) ) ) * ( DS / ( ( RRSe / CS ) * MUC ) ) )", "obj1": 0.6234817813765182, "obj2": 0.25020038076972356}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM * Max( Const,MRS ) ) + ACS ) ) ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( RRS - FirstVNF_CPU ) ) ) ) ) / ( ( MDR * DDR ) * ( Min( MRS ,MRS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( RMSe ,MLU ) ),( ( ( MUM - ( MUM / ( MUR - Max( Min( CS ,RMSe ),Max( MLU,MLU ) ) ) ) ) - MUC ) * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.48867653891702445}, {"determining": "Max( Max( Max( FirstVNF_CPU,( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Min( MRS ,Const ) ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / ( DS * RCSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6603002967702107}, {"determining": "( ( ( ( MRS - ( RRS / Min( ARS ,AMS ) ) ) / FirstVNF_RAM ) - Min( ( Min( FirstVNF_Mem ,( ( FirstVNF_CPU_Server / MRS ) + Max( BR,MRS ) ) ) * MRS ) ,( CRS * Min( Min( CRS ,( FirstVNF_RAM * BR ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( MLU ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "( ( ( ( CRS - Const ) * BR ) / CRS ) + Max( Min( ( FirstVNF_Mem + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - MDR ) ) ) ,Min( ACS ,MDR ) ),( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - ( CS * Min( ( DS / DS ) ,RCSe ) ) ) - ( CS * ( RMSe - ( ( MLU * Min( ( RCSe + MUR ) ,RRSe ) ) + RMSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.6939608263300562}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( DDR + Const ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( DS - MUM ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( Min( ( DS - CS ) ,RRSe ) + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.47664852820812}, {"determining": "( ( Max( ARS,( ( FirstVNF_CPU_Server / MRS ) + MDR ) ) / AMS ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ACS / CRS ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( ( MUM / DS ) + ( DS / MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8340080971659919, "obj2": 0.10251587091757977}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( ( MUC + Max( RRSe,( MUR * MUC ) ) ) * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5614368866185182}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9453441295546559, "obj2": 0.019641465339244886}, {"determining": "Min( ( ( PN * Min( RRS ,FirstVNF_CPU ) ) * MRS ) ,( ( BR * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MLU + ( ( Min( DS ,RRSe ) - MUC ) / Max( RRSe,( ( MUR / DS ) + Min( ( MUM * RCSe ) ,CS ) ) ) ) ) ,CS ) + ( ( DS / ( MLU * MLU ) ) / RCSe ) )", "obj1": 0.4311740890688259, "obj2": 0.504134836067358}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04809305373348835}, {"determining": "( ( FirstVNF_RAM * RRS ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( MUC * MUM ) / RMSe ) * ( MLU / CS ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01511642142865142}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Min( MUC ,( DS / MLU ) ) - ( ( MUR - ( MUR * ( MUC * MUR ) ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.8279352226720648, "obj2": 0.117589438516035}, {"determining": "( FirstVNF_CPU_Server - ( ( PN * FirstVNF_Mem ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( ( MUC * RRSe ) + RRSe ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( MUR - ( MUR * RCSe ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.6052631578947368, "obj2": 0.2761288936532566}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.4696995323536115}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( ( FirstVNF_CPU * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) ) + ( ( ( PN * FirstVNF_CPU ) * MRS ) + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / Max( PN,Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( Max( Min( MUR ,RRSe ),MLU ),( ( CS * RCSe ) / RMSe ) ) / ( CS * Max( MUM,RRSe ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.6743904562862172}, {"determining": "( ( ACS / CRS ) + Max( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( ACS - ( Const * MDR ) ) - FirstVNF_Mem_Server ) ,CRS ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,( Max( ( RMSe / ( MUC - DS ) ),MLU ) - Min( Max( Max( CS,MUC ),( DS / MLU ) ) ,( RRSe / ( RRSe - MLU ) ) ) ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.7536155746806472}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) + Min( Min( RRS ,( Const + Const ) ) ,( Const * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,( RCSe + RCSe ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9210526315789473, "obj2": 0.04468297498594627}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.03308952651374046}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,CRS ) ) ,( ( RRS - DDR ) / FirstVNF_CPU_Server ) ) ) ) * ARS ) ) )", "choosing": "( Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ) ) * ( DS + MUC ) ) ) * RRSe )", "obj1": 0.8522267206477733, "obj2": 0.09746013768674057}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) * ARS )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,Min( MUC ,RRSe ) ) ,MUR ) / ( ( MLU / CS ) + RRSe ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8501026049986224}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + ( Const + ( BR - PN ) ) ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( CS + MLU ) - CS ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.8062110973084917}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( RRS + ( FirstVNF_RAM_Server - CRS ) ) ) ,ARS ) ) * ( ( CRS * ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server + MDR ) - FirstVNF_CPU_Server ) ) ) + MDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / MLU ) ) ) ) ) ),Max( Min( RRSe ,MLU ),( MUC - DS ) ) ) - ( ( RRSe * RCSe ) - ( RCSe + ( Max( MUR,( MUM - Max( RMSe,RCSe ) ) ) - MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "Max( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( Max( MLU,MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) / ( CS * ( Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6060631392225284}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( Min( FirstVNF_CPU ,DDR ) * Const ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( ( RMSe * ( ( RCSe * MUC ) / CS ) ),( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9777327935222672, "obj2": 0.006408052092515755}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( Const + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ),( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6707138552627852}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "Min( Max( ( ( ( RRS + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5931178293342821}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( CRS + Max( ( ( DDR + ARS ) - PN ),DDR ) ) ) + ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) ) )", "choosing": "Max( ( RRSe * ( MUR - Min( ( RRSe - Max( RCSe,Min( CS ,( MUC * MUM ) ) ) ) ,MUM ) ) ),( MLU / CS ) )", "obj1": 0.8582995951417004, "obj2": 0.0858356573138123}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( RRSe + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.003629259693154419}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( CRS + Max( ( CRS - PN ),DDR ) ) ) + Min( RRS ,( Const + Const ) ) ) )", "choosing": "Max( Min( Min( RMSe ,( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( Max( RCSe,MUC ) * MUC ) ,( ( RCSe + RCSe ) * MUC ) ) ) ) ,( DS / MLU ) ),( ( MLU - Min( MUM ,( ( ( MUC / ( DS + DS ) ) - DS ) * RMSe ) ) ) + ( ( DS / ( ( RRSe / CS ) * MUC ) ) / RCSe ) ) )", "obj1": 0.8481781376518218, "obj2": 0.10127617819028265}, {"determining": "Min( ( Min( MDR ,Min( Min( ( ARS + Const ) ,( BR / FirstVNF_RAM_Server ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( CS / MUC ) ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( CS * CS ) )", "obj1": 0.15384615384615385, "obj2": 0.7660045939126906}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - DDR ),FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( MUM ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ) - ( ( MUR - ( MUR * ( MUC * MUR ) ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.6052631578947368, "obj2": 0.2761288936532566}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ( MRS + Max( MRS,PN ) ) ) ) )", "choosing": "( ( ( ( DS / CS ) / RCSe ) + DS ) * ( ( MLU - ( Min( ( MUR / ( DS / RRSe ) ) ,( CS + ( ( RMSe * MLU ) - MUM ) ) ) - RRSe ) ) * CS ) )", "obj1": 0.4676113360323887, "obj2": 0.4635438411106213}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( ( AMS + ( AMS * ( Min( FirstVNF_CPU ,DDR ) * Const ) ) ) * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,( ( DS + MUR ) * RMSe ) ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.08573671008212054}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "( ( ( ARS / ( FirstVNF_Mem_Server / RRS ) ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) + FirstVNF_RAM_Server ) / Const ) ) / ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( Min( ( RCSe - RRSe ) ,Min( MUM ,MUM ) ) ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * ( RMSe * RCSe ) ) + RRSe ) )", "obj1": 0.8319838056680162, "obj2": 0.11751121481550723}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( ( ( RCSe - Max( CS,RCSe ) ) + MLU ) / ( DS - ( ( CS + MUC ) / Max( RRSe,MUM ) ) ) ) ,RRSe ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.5100387002171696}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ACS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( MLU,( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - DS ),CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6170860778689989}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( Min( Const ,FirstVNF_CPU_Server ),( ARS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ),FirstVNF_Mem )", "choosing": "( Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - Min( Min( RCSe ,RRSe ) ,MUR ) ),MUM ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.6972312834389955}, {"determining": "Min( Min( Min( DDR ,DDR ) ,FirstVNF_RAM ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),AMS ) + FirstVNF_Mem ) * FirstVNF_RAM ) )", "choosing": "( ( MUR * ( ( ( RCSe - RMSe ) / Min( MUC ,MUR ) ) + ( MUM + CS ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "( ACS - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.023181700990817233}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) * CRS ) * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + Max( ( DS - MUR ),RRSe ) ) * RMSe ) + Max( MLU,MUR ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}, {"determining": "( Max( FirstVNF_Mem_Server,( ( RRS - ( ( PN * BR ) - MDR ) ) / FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUM + ( MLU - CS ) ) ),( ( Min( RRSe ,DS ) - Max( CS,RCSe ) ) + ( RCSe - RRSe ) ) )", "obj1": 0.3097165991902834, "obj2": 0.6182845159416245}, {"determining": "Min( ( CRS + BR ) ,( ( Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( CS * Max( ( MLU - MUM ),RMSe ) ) ) + CS ) )", "obj1": 0.8765182186234818, "obj2": 0.07972774148480073}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / CS ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.4536940228186013}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( Max( DDR,( MDR * FirstVNF_CPU ) ) ,( ACS + MRS ) ) ,ARS ) ) ) ) / ( ( MDR * Max( Min( MRS ,BR ),( MRS + CRS ) ) ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,( MUR * MLU ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( ( ( DS - MLU ) + ( MLU * RMSe ) ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4979757085020243, "obj2": 0.3420161403250106}, {"determining": "Min( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) * ARS ) * MRS ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( MLU / CS ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( DS - MUM ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.506510909863065}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.48298488163421266}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) + Min( DDR ,( Const * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( Max( ( ( RRSe * RRSe ) + CS ),Max( DS,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9696356275303644, "obj2": 0.009894848858948035}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Const,( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( MUR - Max( ( MUC - MLU ),( MUM * MUR ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1902834008097166, "obj2": 0.7308982335835038}], "13": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ARS * ( Min( ( Const * ( MRS + MDR ) ) ,CRS ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,Min( CS ,RRSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,ARS ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( ( Max( MRS,CRS ) * RRS ) ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( RCSe + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( Min( MDR ,( DDR / MDR ) ) / ( Const / Max( FirstVNF_CPU_Server,( CRS + Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server + Min( ACS ,RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) - MUC ) / ( ( RCSe + ( RRSe * ( ( RMSe + RCSe ) + MUM ) ) ) - Min( ( DS * Min( Min( CS ,MUR ) ,MUM ) ) ,Max( Max( RCSe,MUC ),MUM ) ) ) ) * DS ) / ( RCSe + RRSe ) )", "obj1": 0.48582995951417, "obj2": 0.4385036016455314}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( ( MLU - ( RCSe * MUM ) ) ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.49190283400809715, "obj2": 0.34477478712021975}, {"determining": "( ( PN + BR ) * ( ( Max( AMS,FirstVNF_RAM ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Max( MUM,( CS - RMSe ) ) ,MUM ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.597165991902834, "obj2": 0.2579869146809861}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.562753036437247, "obj2": 0.29845637844500017}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ARS * ( ( ( ARS / MRS ) + MRS ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,( ( MLU / CS ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUC,MLU ) ) ,DS ) / MUM ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6862348178137652, "obj2": 0.22177523248174602}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( PN + FirstVNF_Mem_Server ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( ( ( MUR + RMSe ) + MUR ) / RMSe ) ) ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.13121891356138532}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33856017251205583}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.18515366271480035}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + ( MRS - ( ARS * MRS ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.805668016194332, "obj2": 0.11912830092394947}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( DDR ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( ( RRSe + Min( RRSe ,RCSe ) ) + RRSe ) ) ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.8397026412974986}, {"determining": "Max( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( Max( MLU,MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) / ( CS * ( Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6060631392225284}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - ( ARS * MRS ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ),Min( ( RRSe / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.18106332895077182}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.15122533584124742}, {"determining": "( FirstVNF_CPU_Server - ( ( MDR / Const ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,( DS / CS ) ) ) ) ,( ( ( Min( ( ( DS * DS ) + ( RRSe + MUR ) ) ,RCSe ) - ( Max( ( CS * RCSe ),( RMSe * RCSe ) ) + CS ) ) * RCSe ) / CS ) ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.2631578947368421, "obj2": 0.6446159755075014}, {"determining": "Min( ( ( AMS - Max( ( MDR * DDR ),BR ) ) + FirstVNF_CPU_Server ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( ( ( CS + MLU ) / MUR ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.22672064777327935, "obj2": 0.6890069213223526}, {"determining": "Min( Max( ( ( ( RRS + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5931178293342821}, {"determining": "( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - ( Max( ( MDR - RRS ),FirstVNF_RAM_Server ) * Const ) ) ),FirstVNF_CPU_Server ) / CRS ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( ( ( Max( RMSe,MLU ) / RRSe ) + Min( MLU ,RRSe ) ) / RMSe ) / Min( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.789755159656584}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.16542523128974043}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( MRS - MRS ) ) ) ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6413874031816728}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "Min( Max( FirstVNF_Mem_Server,( Min( ( FirstVNF_RAM_Server + Max( DDR,( ( PN + Const ) * FirstVNF_CPU ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ,( CRS + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6838147806103636}, {"determining": "( ( Max( ARS,( ( FirstVNF_CPU_Server / MRS ) + MDR ) ) / AMS ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ACS / CRS ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( ( MUM / DS ) + ( DS / MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8340080971659919, "obj2": 0.10251587091757977}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) * ( ( PN / MRS ) - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( MUR + RCSe ) )", "obj1": 0.5445344129554656, "obj2": 0.30180970248129685}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ( FirstVNF_CPU_Server + Const ) / PN ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( Min( RRSe ,RMSe ) + Min( RRSe ,RCSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05071993206721293}, {"determining": "( ACS - ( Max( DDR,FirstVNF_CPU_Server ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( CS ,MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.21519361484687038}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * ( ACS + FirstVNF_CPU ) ) * MRS ) ,( CRS * Min( Min( CRS ,( ACS + MRS ) ) ,ARS ) ) ) ) / ( ( MDR * CRS ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( RRSe / CS ) ,( MUR * RCSe ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.5698357663899803}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "Min( Max( ( ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.305668016194332, "obj2": 0.6152978855293866}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04809305373348835}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( FirstVNF_Mem + ( FirstVNF_Mem * PN ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + ( CS * MUR ) ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.513139063244968}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( ( Min( MUR ,( MUC / CS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.291497975708502, "obj2": 0.6329347389822155}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * Const ) * AMS ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( ( DS + MUR ) ,MLU ) ),Min( ( ( RRSe + Min( RRSe ,RCSe ) ) - CS ) ,RRSe ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( CRS + Max( ( FirstVNF_Mem + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - MDR ) ) ),DDR ) ) ) + ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) ) )", "choosing": "Max( Min( Min( RMSe ,( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * Min( ( MLU * Min( RRSe ,RRSe ) ) ,( ( RCSe + RCSe ) * MUC ) ) ) ) ,( DS / MLU ) ),( MLU / CS ) )", "obj1": 0.8461538461538461, "obj2": 0.09318357487490073}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM * Max( Const,MRS ) ) + ACS ) ) ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( RRS - FirstVNF_CPU ) ) ) ) ) / ( ( MDR * DDR ) * ( Min( MRS ,MRS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( RMSe ,MLU ) ),( ( ( MUM - ( MUM / ( MUR - Max( Min( CS ,RMSe ),Max( MLU,MLU ) ) ) ) ) - MUC ) * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.48867653891702445}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM,Min( AMS ,BR ) ) * ( MRS - AMS ) ) ) )", "choosing": "( Min( ( ( ( DS / CS ) / ( Min( ( RMSe - MUR ) ,MUC ) - MUR ) ) + DS ) ,( MUC * ( Min( MUR ,RCSe ) / CS ) ) ) * ( DS / ( ( RRSe / CS ) * MUC ) ) )", "obj1": 0.6234817813765182, "obj2": 0.25020038076972356}, {"determining": "Max( ( ( FirstVNF_Mem_Server - ACS ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Max( RCSe,( CS - MUM ) ) ,RCSe ) / ( ( ( ( MUC - Min( RRSe ,DS ) ) - Max( RMSe,MUM ) ) * CS ) * ( RCSe * Max( Max( ( MUR / Min( Max( DS,MUR ) ,CS ) ),RRSe ),CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6223374884062548}, {"determining": "Min( Min( Min( DDR ,DDR ) ,FirstVNF_RAM ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),AMS ) + FirstVNF_Mem ) * FirstVNF_RAM ) )", "choosing": "( ( MUR * ( ( ( RCSe - RMSe ) / Min( MUC ,MUR ) ) + ( MUM + CS ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "( ( ACS / CRS ) + ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( ( MUM - Min( DS ,Max( RRSe,( MUR * MUC ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.745387842341789}, {"determining": "Max( Max( Max( FirstVNF_CPU,( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Min( MRS ,Const ) ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( ( ( MUR / RRSe ) / ( DS * RCSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.6603002967702107}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( RRS + ( FirstVNF_RAM_Server - CRS ) ) ) ,ARS ) ) * ( ( CRS * ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server + MDR ) - FirstVNF_CPU_Server ) ) ) + MDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / MLU ) ) ) ) ) ),Max( Min( RRSe ,MLU ),( MUC - DS ) ) ) - ( ( RRSe * RCSe ) - ( RCSe + ( Max( MUR,( MUM - Max( RMSe,RCSe ) ) ) - MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) + BR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4756804890670265}, {"determining": "( Min( Min( CRS ,( ACS + MRS ) ) ,ARS ) * ARS )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / ( Min( ( RRSe / CS ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / RCSe ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8002871743836077}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.48298488163421266}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,AMS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,( MUM * MLU ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.06355554822426097}, {"determining": "( ( ( ARS - DDR ) - Min( ( ( PN * FirstVNF_CPU ) * MRS ) ,( CRS * Min( Min( CRS ,( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,( MUR * DS ) ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( ( MUC + Max( RRSe,( MUR * MUC ) ) ) * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5614368866185182}, {"determining": "Min( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) * ARS ) * MRS ) ,( Const * Min( ( Min( ( ( FirstVNF_Mem_Server * DDR ) * ( MRS + PN ) ) ,CRS ) * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( MLU / RMSe ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.3805668016194332, "obj2": 0.5496350476415317}, {"determining": "Min( ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7585052599381668}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9453441295546559, "obj2": 0.019641465339244886}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - DDR ),FirstVNF_Mem_Server ),Const ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( MUM ,MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.5011628497385973}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),FirstVNF_Mem_Server ),Const ) * ARS ) ) )", "choosing": "( ( Min( MUC ,( DS / MLU ) ) - ( ( MUR - ( MUR * ( MUC * MUR ) ) ) - ( RRSe + MUC ) ) ) * RRSe )", "obj1": 0.8279352226720648, "obj2": 0.117589438516035}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( ( FirstVNF_CPU * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) ) + ( ( ( PN * FirstVNF_CPU ) * MRS ) + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / Max( PN,Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( Max( Min( MUR ,RRSe ),MLU ),( ( CS * RCSe ) / RMSe ) ) / ( CS * Max( MUM,RRSe ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.6743904562862172}, {"determining": "( ( FirstVNF_RAM * RRS ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( MUC * MUM ) / RMSe ) * ( MLU / CS ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01511642142865142}, {"determining": "( ACS - ( ( FirstVNF_RAM_Server + BR ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( Max( RCSe,( MUC / CS ) ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.06553806271459897}, {"determining": "Min( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) * ARS ) * MRS ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( MLU / CS ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( PN * MDR ) ) ) ) + Min( Min( RRS ,( Const + Const ) ) ,( Const * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,( RCSe + RCSe ) ) * ( MUM * MLU ) ),( ( MUC - Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) ) - Max( RMSe,MLU ) ) )", "obj1": 0.9210526315789473, "obj2": 0.04468297498594627}, {"determining": "Min( Const ,Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) )", "choosing": "( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) * DS )", "obj1": 0.4817813765182186, "obj2": 0.4531693815642192}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) * ARS )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,Min( MUC ,RRSe ) ) ,MUR ) / ( ( MLU / CS ) + RRSe ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8501026049986224}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,( FirstVNF_Mem_Server * BR ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( Min( RCSe ,RMSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "( ACS - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.023181700990817233}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + ( Const + ( BR - PN ) ) ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( CS + MLU ) - CS ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.8062110973084917}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU + ( Const + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Min( MUR ,( RCSe + ( Max( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ),( ( CS * RCSe ) / RMSe ) ) / ( CS * ( RRSe / MUC ) ) ) ) ) ,RCSe ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6707138552627852}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( ( ( ( MRS - ( RRS / Min( ARS ,AMS ) ) ) / FirstVNF_RAM ) - Min( ( Min( FirstVNF_Mem ,( ( FirstVNF_CPU_Server / MRS ) + Max( BR,MRS ) ) ) * MRS ) ,( CRS * Min( Min( CRS ,( FirstVNF_RAM * BR ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( MLU ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( ( ( RCSe - Max( CS,RCSe ) ) + MLU ) / ( DS - ( ( CS + MUC ) / Max( RRSe,MUM ) ) ) ) ,RRSe ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.5100387002171696}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ( MRS + Max( MRS,PN ) ) ) ) )", "choosing": "( ( ( ( DS / CS ) / RCSe ) + DS ) * ( ( MLU - ( Min( ( MUR / ( DS / RRSe ) ) ,( CS + ( ( RMSe * MLU ) - MUM ) ) ) - RRSe ) ) * CS ) )", "obj1": 0.4676113360323887, "obj2": 0.4635438411106213}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( ACS - ( ( Max( ARS,( ( PN - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Min( RMSe ,( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ) * Min( ( Max( RCSe,( MUM + MUR ) ) * CS ) ,( ( RCSe + RCSe ) * MUC ) ) ) ) ,( DS / MLU ) ),( MLU / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.030500114813898527}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Const,( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( MUR - Max( ( MUC - MLU ),( MUM * MUR ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1902834008097166, "obj2": 0.7308982335835038}, {"determining": "( ( ( ARS / ( FirstVNF_Mem_Server / RRS ) ) - ( ( ( CRS + Max( ( FirstVNF_Mem - PN ),DDR ) ) + FirstVNF_RAM_Server ) / Const ) ) / ( ( FirstVNF_RAM * ( Min( Min( CRS ,Const ) ,MRS ) / Min( BR ,ACS ) ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MLU * MUR ) / ( ( ( Min( Min( Min( ( RCSe - RRSe ) ,Min( MUM ,MUM ) ) ,MLU ) ,( RCSe * RMSe ) ) + ( RRSe - MUC ) ) * ( RMSe * RCSe ) ) + RRSe ) )", "obj1": 0.8319838056680162, "obj2": 0.11751121481550723}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5533042044621402}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.9230769230769231, "obj2": 0.03680292062908491}, {"determining": "( ACS - ( ( FirstVNF_Mem + Const ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( Max( Min( ( Min( DS ,( CS - MUR ) ) * ( RRSe + RCSe ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8502024291497976, "obj2": 0.08607865729898387}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / CS ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.4536940228186013}, {"determining": "Min( ( CRS + BR ) ,( ( Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( CS * Max( ( MLU - MUM ),RMSe ) ) ) + CS ) )", "obj1": 0.8765182186234818, "obj2": 0.07972774148480073}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4979757085020243, "obj2": 0.3420161403250106}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( ( MUC * RRSe ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9696356275303644, "obj2": 0.00911976599520412}, {"determining": "( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS / ( MUR + ( CS / MLU ) ) ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.46154495874784507}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) + CS ) ) ) )", "obj1": 0.7611336032388664, "obj2": 0.1612303195163808}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( Min( FirstVNF_CPU ,DDR ) * Const ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( ( RMSe * ( ( RCSe * MUC ) / CS ) ),( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9777327935222672, "obj2": 0.006408052092515755}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( DS - MUM ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.506510909863065}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - ( ( DS - MLU ) + ( RRSe * RRSe ) ) ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + Max( MUM,( MUM * RMSe ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.7480795027748425}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( CS ,MUM ) * ( ( MUM * ( CS * MUC ) ) * ( ( RMSe * MUR ) / RRSe ) ) ) / MUM ) + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.1537728838827695}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( CRS,FirstVNF_Mem ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( PN / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( Min( RRSe ,Min( Max( Max( RMSe,MUM ),( RCSe - MLU ) ) ,DS ) ) / MLU ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.19838056680161945, "obj2": 0.7302044132361017}, {"determining": "Max( ( Min( MDR ,( ( RRS + CRS ) + DDR ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / ( BR - MDR ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * RCSe ) ,MUM ) - ( CS - DS ) ) * ( MUR + MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.4696995323536115}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) * CRS ) * BR ) * ( FirstVNF_RAM + ( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + Max( ( DS - MUR ),RRSe ) ) * RMSe ) + Max( MLU,MUR ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8048640027145795}], "14": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ACS - ( Max( DDR,( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( ( Min( MUR ,( MUC / CS ) ) + MUC ) * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( CS ,MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ARS * ( Min( ( Const * ( MRS + MDR ) ) ,CRS ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,Min( CS ,RRSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + ( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( CS ,MLU ) ) ) + ( RCSe / ( MLU - MUM ) ) ) ) ),Min( ( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.45052939258303965}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / ( MUC * ( MLU / CS ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( MRS ,( AMS + ARS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - Min( ( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM ) ,Min( PN ,PN ) ) ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + Max( DS,( ( CS / RCSe ) - ( MLU / DS ) ) ) ) ) ) - ( CS * Max( DS,RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.28348925748913817}, {"determining": "( FirstVNF_CPU_Server - ( ( Const * AMS ) + MDR ) )", "choosing": "( ( Max( RMSe,Min( CS ,RRSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.4352226720647773, "obj2": 0.4639241261055161}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ( AMS * ( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) ,MUR ) ) - ( Min( MUC ,Max( Min( ( RRSe * ( RRSe + RCSe ) ) ,MLU ),Max( MLU,DS ) ) ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.6700404858299596, "obj2": 0.23590701597816668}, {"determining": "( ( PN + BR ) * ( ( Max( AMS,FirstVNF_RAM ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Max( MUM,( CS - RMSe ) ) ,MUM ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.597165991902834, "obj2": 0.2579869146809861}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "( FirstVNF_CPU_Server - ( ( PN + ( Const + CRS ) ) / ( ( CRS - ( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) * ARS ) ) )", "choosing": "( Max( RCSe,RMSe ) * ( ( ( ( Max( RCSe,MUM ) - DS ) + MUR ) / CS ) / CS ) )", "obj1": 0.6437246963562753, "obj2": 0.24702077010966572}, {"determining": "( ( FirstVNF_Mem_Server / ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),AMS ) - MDR ) ) * ( ARS - ACS ) )", "choosing": "Min( ( ( ( MLU - Max( Max( CS,MLU ),RCSe ) ) / RRSe ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( ( ( MUC / Max( CS,RCSe ) ) + CS ) + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.52834008097166, "obj2": 0.3187229714217862}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.562753036437247, "obj2": 0.29845637844500017}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( MUR,( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.11155996634411906}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( MDR - CRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( ( DS / CS ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.09813916583183878}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33856017251205583}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.7995951417004049, "obj2": 0.11871380403777164}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( RRS + ( FirstVNF_RAM_Server - CRS ) ) ) ,ARS ) ) * ( ( CRS * ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server + MDR ) - FirstVNF_CPU_Server ) ) ) + MDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / MLU ) ) ) ) ) ),Max( Min( RRSe ,MLU ),( MUC - DS ) ) ) - ( ( RRSe * RCSe ) - ( RCSe + ( Max( MUR,( MUM - Max( RMSe,RCSe ) ) ) - MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.18515366271480035}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM * Max( Const,MRS ) ) + ACS ) ) ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( RRS - FirstVNF_CPU ) ) ) ) ) / ( ( MDR * DDR ) * ( Min( MRS ,MRS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( RMSe ,MLU ) ),( ( ( MUM - ( MUM / ( MUR - Max( Min( CS ,RMSe ),Max( MLU,MLU ) ) ) ) ) - MUC ) * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.48867653891702445}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( MRS - MRS ) ) ) ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6413874031816728}, {"determining": "( ( ARS * Max( ( ARS - Max( PN,FirstVNF_CPU ) ),Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( ( CS / DS ),DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.7125506072874493, "obj2": 0.19629172797244085}, {"determining": "Min( ( ( AMS - Max( ( MDR * DDR ),BR ) ) + FirstVNF_CPU_Server ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( ( ( CS + MLU ) / MUR ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.22672064777327935, "obj2": 0.6890069213223526}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "Min( Max( ( ( ( RRS + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5931178293342821}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( ARS * ( ( ( ARS / MRS ) + MRS ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,( ( MLU / CS ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUC,MLU ) ) ,DS ) / MUM ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / RRSe ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6862348178137652, "obj2": 0.22177523248174602}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( ( MLU - ( RCSe * MUM ) ) ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.49190283400809715, "obj2": 0.34477478712021975}, {"determining": "Min( CRS ,( FirstVNF_Mem + MRS ) )", "choosing": "( Max( ( Min( ( DS * MLU ) ,RCSe ) / CS ),MUC ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7248696079015319}, {"determining": "( ( ( ( MRS - ( RRS / Min( ARS ,AMS ) ) ) / FirstVNF_RAM ) - Min( ( Min( FirstVNF_Mem ,( ( FirstVNF_CPU_Server / MRS ) + Max( BR,MRS ) ) ) * MRS ) ,( CRS * Min( Min( CRS ,( FirstVNF_RAM * BR ) ) ,ARS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( Max( MLU,RMSe ) + ( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) ) ),( CS * ( RCSe * Min( MLU ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.5410736980212622}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( Min( Min( RCSe ,( RRSe - MUM ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2408906882591093, "obj2": 0.6790986053945741}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( BR ,( CRS - DDR ) ) + Min( MDR ,( ARS / FirstVNF_Mem_Server ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - ( RCSe - MUM ) ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( Min( RRSe ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.30076651017731604}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.13494281500899374}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,( FirstVNF_Mem_Server * BR ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( Min( RCSe ,RMSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + ( Const + ( BR - PN ) ) ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( CS + MLU ) - CS ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.8062110973084917}, {"determining": "( ( Max( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - ( Max( ( MDR - RRS ),FirstVNF_RAM_Server ) * Const ) ) ),FirstVNF_CPU_Server ) / CRS ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( ( ( Max( RMSe,MLU ) / RRSe ) + Min( MLU ,RRSe ) ) / RMSe ) / Min( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.789755159656584}, {"determining": "Min( ( ( ACS * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + BR ) ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - AMS ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - Max( Max( ( RCSe * Min( ( RRSe * ( ( RCSe / RCSe ) + ( RMSe / RRSe ) ) ) ,RMSe ) ),MUC ),RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6712495276617411}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / ACS ) ) / Max( Const,ARS ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / RMSe ) ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7569527061492035}, {"determining": "( ( DDR / ( FirstVNF_Mem * ( MRS + FirstVNF_CPU ) ) ) * ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( ( CS * MUR ) + ( RMSe / CS ) ) - CS ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.7911411019812675}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "( ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) ) ) / FirstVNF_RAM ) * ( ARS - ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / PN ) * ( FirstVNF_CPU / ( AMS + ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( Max( MLU,DS ) ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,( ( RCSe - RRSe ) + Max( DS,( MLU / RMSe ) ) ) ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.1778285839864527}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) + Min( DDR ,( ( DDR / ( ( FirstVNF_CPU_Server + Const ) / PN ) ) + Const ) ) ) )", "choosing": "Max( ( MUC / MUC ),( ( Max( Min( ( RRSe * ( Min( RRSe ,RMSe ) + Min( RRSe ,RCSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.05071993206721293}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU_Server + ( ( ( DDR * MRS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / ( FirstVNF_Mem * ARS ) ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,( ( ( Max( MUR,RCSe ) - RMSe ) / Min( MUM ,( RRSe - MUM ) ) ) / DS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) ) - ( DS + ( MUC + ( MUR - ( RRSe - RMSe ) ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6256056442370455}, {"determining": "Min( ( ( ( ( Const * BR ) / ( FirstVNF_RAM - FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) ) ) )", "choosing": "( ( Min( ( ( MUM - ( ( MUR / CS ) * RRSe ) ) + DS ) ,MLU ) - CS ) - ( DS + CS ) )", "obj1": 0.2591093117408907, "obj2": 0.6469265039851523}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8603238866396761, "obj2": 0.08097440337448163}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM,Min( AMS ,BR ) ) * ( MRS - AMS ) ) ) )", "choosing": "( Min( ( ( ( DS / CS ) / ( Min( ( RMSe - MUR ) ,MUC ) - MUR ) ) + DS ) ,( MUC * ( Min( MUR ,RCSe ) / CS ) ) ) * ( DS / ( ( RRSe / CS ) * MUC ) ) )", "obj1": 0.6234817813765182, "obj2": 0.25020038076972356}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.2631578947368421, "obj2": 0.6446159755075014}, {"determining": "Max( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( Max( MLU,MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) / ( CS * ( Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6060631392225284}, {"determining": "Min( Min( Min( DDR ,DDR ) ,FirstVNF_RAM ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),AMS ) + FirstVNF_Mem ) * FirstVNF_RAM ) )", "choosing": "( ( MUR * ( ( ( RCSe - RMSe ) / Min( MUC ,MUR ) ) + ( MUM + CS ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "Min( ( CRS + BR ) ,( ( Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( CS * Max( ( MLU - MUM ),RMSe ) ) ) + CS ) )", "obj1": 0.8765182186234818, "obj2": 0.07972774148480073}, {"determining": "( ( FirstVNF_RAM * RRS ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( MUC * MUM ) / RMSe ) * ( MLU / CS ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01511642142865142}, {"determining": "Min( Max( ( ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.305668016194332, "obj2": 0.6152978855293866}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( PN + FirstVNF_Mem_Server ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( ( ( MUR + RMSe ) + MUR ) / RMSe ) ) ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.13121891356138532}, {"determining": "( ( PN + BR ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Min( ( RRSe + MUC ) ,MLU ) ) )", "obj1": 0.7489878542510121, "obj2": 0.1693375671171032}, {"determining": "Min( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) * ARS ) * MRS ) ,( Const * Min( ( Min( ( ( FirstVNF_Mem_Server * DDR ) * ( MRS + PN ) ) ,CRS ) * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( MLU / RMSe ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.3805668016194332, "obj2": 0.5496350476415317}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) / Max( ARS,( ( FirstVNF_CPU_Server / MRS ) + MDR ) ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( Max( Min( ( RRSe * ( ( MUM / DS ) + ( DS / MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) )", "obj1": 0.8461538461538461, "obj2": 0.08796820594794294}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9453441295546559, "obj2": 0.019641465339244886}, {"determining": "( ( ACS / CRS ) + ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( ( MUM - Min( DS ,Max( RRSe,( MUR * MUC ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.745387842341789}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - DDR ),FirstVNF_Mem_Server ),Const ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( MUM ,MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.5011628497385973}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( CS ,MUM ) * ( ( MUM * ( CS * MUC ) ) * ( ( RMSe * MUR ) / RRSe ) ) ) / MUM ) + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2133093529009798}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04809305373348835}, {"determining": "Max( ( ( FirstVNF_Mem_Server - ACS ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Max( RCSe,( CS - MUM ) ) ,RCSe ) / ( ( ( ( MUC - Min( RRSe ,DS ) ) - Max( RMSe,MUM ) ) * CS ) * ( RCSe * Max( Max( ( MUR / Min( Max( DS,MUR ) ,CS ) ),RRSe ),CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6223374884062548}, {"determining": "( ACS - ( ( FirstVNF_RAM_Server + BR ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( Max( RCSe,( MUC / CS ) ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.06553806271459897}, {"determining": "( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5533042044621402}, {"determining": "Min( Max( ( ( ( ( ( FirstVNF_Mem * Const ) * CRS ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ( ARS - CRS ) - FirstVNF_CPU ) / ( ( BR + ( DDR - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( Min( Min( ( MUR * RCSe ) ,DS ) ,RMSe ) - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.3643724696356275, "obj2": 0.559491273673737}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.15122533584124742}, {"determining": "( ACS - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.023181700990817233}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + ( MDR * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( Min( ( ( ( RCSe - Max( CS,RCSe ) ) + MLU ) / ( DS - ( ( CS + MUC ) / Max( RRSe,MUM ) ) ) ) ,RRSe ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.5100387002171696}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * RMSe ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012016880379067015}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( ARS - ACS ) * Const ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( ( RMSe * ( ( RCSe * MUC ) / CS ) ),( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * ( MUR * ( ( MUC / RCSe ) - MUM ) ) ) * ( MLU / CS ) ) )", "obj1": 0.9817813765182186, "obj2": 0.005257716963178992}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ARS - FirstVNF_CPU ),FirstVNF_Mem_Server ),Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( DS + Max( MUM,RRSe ) ) * RMSe ) + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,( DS / CS ) ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) + Min( FirstVNF_Mem_Server ,ARS ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) ) ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6097291206863975}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Const,( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( MUR - Max( ( MUC - MLU ),( MUM * MUR ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1902834008097166, "obj2": 0.7308982335835038}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.9230769230769231, "obj2": 0.03680292062908491}, {"determining": "( ACS - ( ( FirstVNF_Mem + Const ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( Max( Min( ( Min( DS ,( CS - MUR ) ) * ( RRSe + RCSe ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8502024291497976, "obj2": 0.08607865729898387}, {"determining": "( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.5705449070307644}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.16542523128974043}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,FirstVNF_CPU ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / RRSe ) ) )", "obj1": 0.888663967611336, "obj2": 0.061289169338197565}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( ( ( PN + Const ) * FirstVNF_CPU ) ,RRS ) - ( FirstVNF_Mem + ( FirstVNF_Mem * PN ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * MLU ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + ( CS * MUR ) ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.5153656099086847}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_Mem * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4979757085020243, "obj2": 0.3420161403250106}, {"determining": "Min( ( ( CRS + FirstVNF_CPU_Server ) + MRS ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ( AMS + DDR ) ) ,ARS ) ) )", "choosing": "( Min( Min( ( MUM + CS ) ,Max( ( CS * Max( MUM,RRSe ) ),MUM ) ) ,MLU ) + ( RMSe / ( ( ( ( ( MLU / RRSe ) / MLU ) / MUR ) / MUC ) / ( RRSe - Max( ( ( ( MUC * DS ) * RRSe ) * RRSe ),RRSe ) ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) + CS ) ) ) )", "obj1": 0.7611336032388664, "obj2": 0.1612303195163808}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.13121891356138532}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - MDR ) ) ) ) ) ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,AMS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,( MUM * MLU ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,( MUR - Max( RMSe,( DS * MUR ) ) ) ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.04333017508075413}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( PN / Max( Const,ARS ) ) ) ) ) ) + BR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Max( Max( RMSe,MUM ),( RCSe - MLU ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5035293027018575}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( CS ,MUM ) * ( ( MUM * ( CS * MUC ) ) * ( ( RMSe * MUR ) / RRSe ) ) ) / MUM ) + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) + CS ) ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.1537728838827695}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( CRS,FirstVNF_Mem ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( PN / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( Min( RRSe ,Min( Max( Max( RMSe,MUM ),( RCSe - MLU ) ) ,DS ) ) / MLU ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.19838056680161945, "obj2": 0.7302044132361017}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( Min( FirstVNF_CPU ,DDR ) * Const ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( CS + MLU ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( ( RMSe * ( ( RCSe * MUC ) / CS ) ),( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9777327935222672, "obj2": 0.006408052092515755}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.3623481781376518, "obj2": 0.5665376977360707}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( ( MUC * RRSe ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9696356275303644, "obj2": 0.00911976599520412}], "15": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ARS - ( Max( DDR,( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( ( Min( MUR ,( MUC / CS ) ) + MUC ) * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( CS ,MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * CS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( Max( DDR,( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( ( Min( MUR ,( MUC / CS ) ) + MUC ) * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( CS ,MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( FirstVNF_CPU_Server - ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * AMS ) + MDR ) )", "choosing": "( ( Max( Max( MUC,MUC ),Min( RMSe ,RCSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + DS ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.46558704453441296, "obj2": 0.43263135413227866}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( ( ( Const * FirstVNF_CPU ) / FirstVNF_CPU ) * FirstVNF_RAM ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( MUC * ( RRSe - RCSe ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( ( RCSe * MUM ) + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.6720647773279352, "obj2": 0.230884004270453}, {"determining": "( FirstVNF_CPU_Server - ( ( Const * AMS ) + MDR ) )", "choosing": "( ( Max( RMSe,Min( CS ,RRSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.4352226720647773, "obj2": 0.4639241261055161}, {"determining": "Min( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) * ARS ) * ( BR - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( MUR / MUC ) - Max( CS,RCSe ) ) / RMSe ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.6336032388663968, "obj2": 0.23420062836262442}, {"determining": "( ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) ) ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( Max( MLU,DS ) ,MUR ) ) - ( Min( MUC ,RMSe ) - ( DS / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.4500283477959746}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "Min( ( ( ACS * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + BR ) ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - AMS ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - Max( Max( ( RCSe * Min( ( RRSe * ( ( RCSe / RCSe ) + ( RMSe / RRSe ) ) ) ,RMSe ) ),MUC ),RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6712495276617411}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( FirstVNF_CPU + MRS ) - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( ( DDR + CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RRSe * ( MUR / RCSe ) ) - MLU ),RCSe ),Min( ( MUR - ( ( RCSe * RRSe ) * ( CS - RMSe ) ) ) ,RRSe ) )", "obj1": 0.6842105263157895, "obj2": 0.20473704631543096}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( MRS ,( AMS + ARS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - Min( ( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM ) ,Min( PN ,PN ) ) ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + Max( DS,( ( CS / RCSe ) - ( MLU / DS ) ) ) ) ) ) - ( CS * Max( DS,RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.28348925748913817}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( PN / DDR ) ) ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( Max( DS,RRSe ),DS ) ) * DS ) * ( DS + MUR ) ) )", "obj1": 0.917004048582996, "obj2": 0.03476254324407443}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( Min( Min( RCSe ,( RRSe - MUM ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2408906882591093, "obj2": 0.6790986053945741}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( RRS + ( FirstVNF_RAM_Server - CRS ) ) ) ,ARS ) ) * ( ( CRS * ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server + MDR ) - FirstVNF_CPU_Server ) ) ) + MDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / MLU ) ) ) ) ) ),Max( Min( RRSe ,MLU ),( MUC - DS ) ) ) - ( ( RRSe * RCSe ) - ( RCSe + ( Max( MUR,( MUM - Max( RMSe,RCSe ) ) ) - MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM * Max( Const,MRS ) ) + ACS ) ) ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( RRS - FirstVNF_CPU ) ) ) ) ) / ( ( MDR * DDR ) * ( Min( MRS ,MRS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( RMSe ,MLU ) ),( ( ( MUM - ( MUM / ( MUR - Max( Min( CS ,RMSe ),Max( MLU,MLU ) ) ) ) ) - MUC ) * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.48867653891702445}, {"determining": "( ( ( DDR / PN ) * ( ( ( FirstVNF_CPU_Server + Const ) / PN ) / ( AMS + ( FirstVNF_Mem + ( FirstVNF_RAM_Server - CRS ) ) ) ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( ( ( ( CS + MLU ) - ( MLU * DS ) ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),( MLU / CS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.37449392712550605, "obj2": 0.549294440033956}, {"determining": "Max( Max( Max( ( ( CRS * FirstVNF_Mem ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM_Server * ( MRS - MRS ) ) ) ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) + RRS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6413874031816728}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( PN / ( AMS * FirstVNF_CPU ) ) ) ) ) ) + BR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( CS + MUC ) / Max( RRSe,MUM ) ) ,RCSe ) ,( Min( Max( Max( RMSe,MUM ),( RCSe - MLU ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.38461538461538464, "obj2": 0.5344672748405177}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.18515366271480035}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server * DDR ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( Min( ( MLU - CS ) ,Max( ( MLU / RMSe ),MUM ) ) ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5080971659919028, "obj2": 0.33697597522572986}, {"determining": "( ( ARS * Max( ( ARS - Max( PN,FirstVNF_CPU ) ),Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( ( CS / DS ),DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.7125506072874493, "obj2": 0.19629172797244085}, {"determining": "Min( ( ( AMS - Max( ( MDR * DDR ),BR ) ) + FirstVNF_CPU_Server ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( ( ( CS + MLU ) / MUR ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.22672064777327935, "obj2": 0.6890069213223526}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( DS + DS ) * ( MLU / CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.10412014374720899}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,FirstVNF_CPU_Server ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUM ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.09738787635743494}, {"determining": "( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Min( RRSe ,( DS + MUR ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26351216785805165}, {"determining": "Min( ( ( ACS + ARS ) - ( DDR / PN ) ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( CS * Max( MUM,( ( MUM / DS ) + ( DS / MLU ) ) ) ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.8866396761133604, "obj2": 0.049317076746902985}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * Min( Min( RRS ,RRS ) ,Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( ( MUC * RCSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.7861895234047165}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.7995951417004049, "obj2": 0.11871380403777164}, {"determining": "( ( PN + BR ) * ( ( Max( AMS,FirstVNF_RAM ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Max( MUM,( CS - RMSe ) ) ,MUM ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.597165991902834, "obj2": 0.2579869146809861}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / ACS ) ) / Max( Const,ARS ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / RMSe ) ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7569527061492035}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM,Min( AMS ,BR ) ) * ( MRS - AMS ) ) ) )", "choosing": "( Min( ( ( ( DS / CS ) / ( Min( ( RMSe - MUR ) ,MUC ) - MUR ) ) + DS ) ,( MUC * ( Min( MUR ,RCSe ) / CS ) ) ) * ( DS / ( ( RRSe / CS ) * MUC ) ) )", "obj1": 0.6234817813765182, "obj2": 0.25020038076972356}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.10792809070296217}, {"determining": "( ( Min( CRS ,( FirstVNF_RAM * BR ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( ( Max( MUC,CS ) * ( RMSe - CS ) ) / MLU ),MUM ) ) ,RRSe ) ) ,( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.5647773279352226, "obj2": 0.2875104410019362}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "( ( DDR / ( FirstVNF_Mem * ( MRS + FirstVNF_CPU ) ) ) * ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( ( CS * MUR ) + ( RMSe / CS ) ) - CS ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.7911411019812675}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "Min( ( CRS + BR ) ,( ( Min( ( ( ( ARS - DDR ) - Min( Const ,FirstVNF_CPU_Server ) ) / ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - ( ( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( CS * Max( ( MLU - MUM ),RMSe ) ) ) + CS ) )", "obj1": 0.8765182186234818, "obj2": 0.07972774148480073}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU_Server + ( ( ( DDR * MRS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / ( FirstVNF_Mem * ARS ) ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,( ( ( Max( MUR,RCSe ) - RMSe ) / Min( MUM ,( RRSe - MUM ) ) ) / DS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) ) - ( DS + ( MUC + ( MUR - ( RRSe - RMSe ) ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6256056442370455}, {"determining": "( AMS * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( RRSe + Min( RRSe ,MUR ) ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5607287449392713, "obj2": 0.2980385347292957}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.2631578947368421, "obj2": 0.6446159755075014}, {"determining": "Min( Min( Min( DDR ,DDR ) ,FirstVNF_RAM ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),AMS ) + FirstVNF_Mem ) * FirstVNF_RAM ) )", "choosing": "( ( MUR * ( ( ( RCSe - RMSe ) / Min( MUC ,MUR ) ) + ( MUM + CS ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "( ( Max( FirstVNF_Mem,( AMS + ( Max( Min( ( AMS + FirstVNF_RAM ) ,Min( Const ,FirstVNF_CPU_Server ) ),( ( RRS / CRS ) * ARS ) ) * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ( FirstVNF_Mem + FirstVNF_RAM ) - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( ( Max( ( MUM - RRSe ),Max( MUM,MUM ) ) / Min( DS ,Min( RMSe ,DS ) ) ) ,( MLU / RCSe ) ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4898785425101215, "obj2": 0.3478729988989306}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( BR - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1744050048643501}, {"determining": "Min( Max( ( ( ( ( ( FirstVNF_Mem * Const ) * CRS ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ( ARS - CRS ) - FirstVNF_CPU ) / ( ( BR + ( DDR - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( Min( Min( ( MUR * RCSe ) ,DS ) ,RMSe ) - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.3643724696356275, "obj2": 0.559491273673737}, {"determining": "Min( Max( ( ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.305668016194332, "obj2": 0.6152978855293866}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ( ( MDR * DDR ) * ( MRS + PN ) ) / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( ( Min( RCSe ,MLU ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ),Min( CS ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2591093117408907, "obj2": 0.6469265039851523}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ) ),Min( ( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.16558101343340664}, {"determining": "( ACS - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.023181700990817233}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( RRS ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04809305373348835}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + ( Const + ( BR - PN ) ) ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( CS + MLU ) - CS ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.8062110973084917}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ARS - FirstVNF_CPU ),FirstVNF_Mem_Server ),Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( DS + Max( MUM,RRSe ) ) * RMSe ) + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,( DS / CS ) ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * PN ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.7217027413427852}, {"determining": "( ( ACS / CRS ) + ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( ( MUM - Min( DS ,Max( RRSe,( MUR * MUC ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.745387842341789}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( PN + FirstVNF_Mem_Server ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( ( ( MUR + RMSe ) + MUR ) / RMSe ) ) ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.13121891356138532}, {"determining": "Max( ( ( FirstVNF_Mem_Server - ACS ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Max( RCSe,( CS - MUM ) ) ,RCSe ) / ( ( ( ( MUC - Min( RRSe ,DS ) ) - Max( RMSe,MUM ) ) * CS ) * ( RCSe * Max( Max( ( MUR / Min( Max( DS,MUR ) ,CS ) ),RRSe ),CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6223374884062548}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "Min( ( ( CRS + FirstVNF_CPU_Server ) + MRS ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ( AMS + DDR ) ) ,ARS ) ) )", "choosing": "( Min( Min( ( MUM + CS ) ,Max( ( CS * Max( MUM,RRSe ) ),MUM ) ) ,MLU ) + ( RMSe / ( ( ( ( ( MLU / RRSe ) / MLU ) / MUR ) / MUC ) / ( RRSe - Max( ( ( ( MUC * DS ) * RRSe ) * RRSe ),RRSe ) ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( ( RRSe + Min( RRSe ,MUR ) ) - ( Min( MUC ,RMSe ) - ( ( CS * RMSe ) / Max( MLU,RMSe ) ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.15122533584124742}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - Const ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( ( Max( MUM,MUR ) + DS ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( Max( ( ( ( RRS + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5931178293342821}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8603238866396761, "obj2": 0.08097440337448163}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.8805668016194332, "obj2": 0.06128456396195264}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) / Max( ARS,( ( FirstVNF_CPU_Server / MRS ) + MDR ) ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( Max( Min( ( RRSe * ( ( MUM / DS ) + ( DS / MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) )", "obj1": 0.8461538461538461, "obj2": 0.08796820594794294}, {"determining": "( ( ( Min( RRS ,PN ) * FirstVNF_CPU_Server ) + Min( ( MDR * FirstVNF_RAM_Server ) ,ARS ) ) + ( ( ACS + ARS ) - ( DDR / Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( Max( Min( ( RRSe * ( ( MUC * MUR ) + ( DS / MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) )", "obj1": 0.7530364372469636, "obj2": 0.16472220484100217}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),( Min( ( ( PN + Const ) * FirstVNF_CPU ) ,RRS ) - ( FirstVNF_Mem + ( FirstVNF_Mem * PN ) ) ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( MUM ,( ( Min( ( MUC * MLU ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) * ( MUR + ( CS * MUR ) ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.5153656099086847}, {"determining": "( ( FirstVNF_Mem_Server / ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),AMS ) - MDR ) ) * ( ARS - ACS ) )", "choosing": "Min( ( ( ( MLU - Max( Max( CS,MLU ),RCSe ) ) / RRSe ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( ( ( MUC / Max( CS,RCSe ) ) + CS ) + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.52834008097166, "obj2": 0.3187229714217862}, {"determining": "Max( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( Max( MLU,MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) / ( CS * ( Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6060631392225284}, {"determining": "( ACS - ( ( FirstVNF_RAM_Server + BR ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( Max( RCSe,( MUC / CS ) ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.06553806271459897}, {"determining": "Min( ( ( Max( ( PN + BR ),CRS ) * Min( RRS ,Const ) ) * MRS ) ,( Const * Min( ( Min( ( ( FirstVNF_Mem_Server * DDR ) * ( MRS + PN ) ) ,CRS ) * ( ARS + ACS ) ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - ( Max( ( MUR - CS ),MUR ) + ( ( Min( RMSe ,MUC ) / ( MLU + RRSe ) ) - ( CS / ( RMSe + RRSe ) ) ) ) ) ,Max( ( MLU / RMSe ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ),MUM ) ) )", "obj1": 0.4109311740890688, "obj2": 0.511613339564322}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) ) ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) )", "obj1": 0.694331983805668, "obj2": 0.2036057877545119}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) + Min( FirstVNF_Mem_Server ,ARS ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) ) ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6097291206863975}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Const,( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( MUR - Max( ( MUC - MLU ),( MUM * MUR ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1902834008097166, "obj2": 0.7308982335835038}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.3623481781376518, "obj2": 0.5665376977360707}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.13494281500899374}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( Min( ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,CRS ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Max( Min( ( RRSe * ( MLU + MUR ) ) ,MLU ),Max( MLU,DS ) ) + CS ) ) ) )", "obj1": 0.7611336032388664, "obj2": 0.1612303195163808}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( Max( MRS,CRS ) - FirstVNF_CPU ),FirstVNF_Mem_Server ),( ARS - Max( CRS,FirstVNF_CPU ) ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( Min( CS ,( MUR / RCSe ) ) + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,( DS / ( Max( CS,MLU ) * MLU ) ) ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5445344129554656, "obj2": 0.3005117719023701}, {"determining": "( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.5705449070307644}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,( FirstVNF_Mem_Server * BR ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( Min( RCSe ,RMSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "( ( FirstVNF_Mem_Server / ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),AMS ) - MDR ) ) * ( ARS - ACS ) )", "choosing": "Min( ( ( ( MLU - Max( Max( CS,MLU ),RCSe ) ) / RRSe ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( ( ( MUC / Max( CS,RCSe ) ) + CS ) + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.52834008097166, "obj2": 0.3187229714217862}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ( PN * FirstVNF_CPU_Server ) ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RCSe + Min( RRSe ,DS ) ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + DS ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.13430662759881984}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - DDR ),FirstVNF_Mem_Server ),Const ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( MUM ,MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.5011628497385973}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( BR ,( CRS - DDR ) ) + Min( MDR ,( ARS / FirstVNF_Mem_Server ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - ( RCSe - MUM ) ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( Min( RRSe ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.30076651017731604}, {"determining": "( Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( DS * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3390274304612599}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.9898785425101214, "obj2": 0.004691145802435835}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9453441295546559, "obj2": 0.019641465339244886}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,( FirstVNF_Mem_Server * BR ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( Min( RCSe ,RMSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,AMS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.04306286561389316}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.13121891356138532}], "16": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ACS - ( Max( DDR,( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( ( Min( MUR ,( MUC / CS ) ) + MUC ) * MLU ) ),( ( ( ( MUR / MUC ) - Max( CS,RCSe ) ) / RMSe ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS - ( Max( DDR,( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( ( Min( MUR ,( MUC / CS ) ) + MUC ) * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( CS ,MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * CS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( ( ( ARS * ( ARS - MRS ) ) / MRS ),( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem_Server / MDR ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( ( MUM / RMSe ) - MUC ) ),MUM ) ) ) - ( MUR * DS ) )", "obj1": 0.4493927125506073, "obj2": 0.3676160265169858}, {"determining": "( FirstVNF_CPU_Server - ( ( Const * AMS ) + MDR ) )", "choosing": "( ( Max( RMSe,Min( CS ,RRSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.4352226720647773, "obj2": 0.4639241261055161}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2292272147008656}, {"determining": "Min( ( ( Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) * ARS ) * ( BR - ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) ) ) ,( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( MUR / MUC ) - Max( CS,RCSe ) ) / RMSe ),MUM ) ) ,Min( MUR ,( MUC / CS ) ) ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.6336032388663968, "obj2": 0.23417600353506848}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( DS + DS ) * ( MLU / CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.10412014374720899}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( MRS ,( AMS + ARS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - Min( ( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM ) ,Min( PN ,PN ) ) ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + Max( DS,( ( CS / RCSe ) - ( MLU / DS ) ) ) ) ) ) - ( CS * Max( DS,RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.28348925748913817}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( MRS + MDR ) ) ,CRS ) ) ) * ARS ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server - Const ) ) + MRS ) ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - RCSe ) + MUC ) * RMSe ) ) + RRSe ) * Max( MUM,MUR ) )", "obj1": 0.7469635627530364, "obj2": 0.15456856348971854}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( RRS + ( FirstVNF_RAM_Server - CRS ) ) ) ,ARS ) ) * ( ( CRS * ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server + MDR ) - FirstVNF_CPU_Server ) ) ) + MDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / MLU ) ) ) ) ) ),Max( Min( RRSe ,MLU ),( MUC - DS ) ) ) - ( ( RRSe * RCSe ) - ( RCSe + ( Max( MUR,( MUM - Max( RMSe,RCSe ) ) ) - MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "Min( ( ( ACS * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + BR ) ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - AMS ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - Max( Max( ( RCSe * Min( ( RRSe * ( ( RCSe / RCSe ) + ( RMSe / RRSe ) ) ) ,RMSe ) ),MUC ),RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6712495276617411}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM * Max( Const,MRS ) ) + ACS ) ) ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( RRS - FirstVNF_CPU ) ) ) ) ) / ( ( MDR * DDR ) * ( Min( MRS ,MRS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( RMSe ,MLU ) ),( ( ( MUM - ( MUM / ( MUR - Max( Min( CS ,RMSe ),Max( MLU,MLU ) ) ) ) ) - MUC ) * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.48867653891702445}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU_Server + ( ( ( DDR * MRS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / ( FirstVNF_Mem * ARS ) ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,( ( ( Max( MUR,RCSe ) - RMSe ) / Min( MUM ,( RRSe - MUM ) ) ) / DS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) ) - ( DS + ( MUC + ( MUR - ( RRSe - RMSe ) ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6256056442370455}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( MLU - ( DS + CS ) )", "obj1": 0.27125506072874495, "obj2": 0.639669007413177}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / ACS ) ) / Max( Const,ARS ) ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / RMSe ) ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( DS + Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7569527061492035}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_CPU_Server + DDR ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( Min( ( MLU - Max( DS,RRSe ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,( MLU * RRSe ) ) ) - ( DS + CS ) )", "obj1": 0.22672064777327935, "obj2": 0.6871296943477481}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_CPU ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.6740890688259109, "obj2": 0.2088636727765393}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,MUR ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8340080971659919, "obj2": 0.08943781950750188}, {"determining": "( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Min( RRSe ,( DS + MUR ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26351216785805165}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,( CRS + BR ) ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * Min( RRSe ,RRSe ) )", "obj1": 0.7631578947368421, "obj2": 0.14000268584160044}, {"determining": "( ( ACS / CRS ) + ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( ( MUM - Min( DS ,Max( RRSe,( MUR * MUC ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.745387842341789}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * Min( Min( RRS ,RRS ) ,Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( ( MUC * RCSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.7861895234047165}, {"determining": "( ( PN + BR ) * ( ( Max( AMS,FirstVNF_RAM ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Max( MUM,( CS - RMSe ) ) ,MUM ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.597165991902834, "obj2": 0.2579869146809861}, {"determining": "( ( Max( FirstVNF_Mem,( AMS + ( Max( Min( ( AMS + FirstVNF_RAM ) ,Min( Const ,FirstVNF_CPU_Server ) ),( MDR * ARS ) ) * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) / Max( RRS,FirstVNF_Mem_Server ) ) * ( ARS - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( CS - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3365885667183465}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) + BR ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,( RRSe * MLU ) ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.18314508849632016}, {"determining": "( ( ( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + MUM ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "Min( ( ( ACS + ARS ) - ( DDR / PN ) ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ARS ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( CS * Max( MUM,( ( MUM / DS ) + ( DS / MLU ) ) ) ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.8866396761133604, "obj2": 0.049317076746902985}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + ( Const + ( BR - PN ) ) ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( CS + MLU ) - CS ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.8062110973084917}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - ( FirstVNF_Mem + Min( MDR ,( ARS / FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.9311740890688259, "obj2": 0.032877465689395854}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM,Min( AMS ,BR ) ) * ( MRS - AMS ) ) ) )", "choosing": "( Min( ( ( ( DS / CS ) / ( Min( ( RMSe - MUR ) ,MUC ) - MUR ) ) + DS ) ,( MUC * ( Min( MUR ,RCSe ) / CS ) ) ) * ( DS / ( ( RRSe / CS ) * MUC ) ) )", "obj1": 0.6234817813765182, "obj2": 0.25020038076972356}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( FirstVNF_CPU + MRS ) - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( ( DDR + CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RRSe * ( MUR / RCSe ) ) - MLU ),RCSe ),Min( ( MUR - ( ( RCSe * RRSe ) * ( CS - RMSe ) ) ) ,RRSe ) )", "obj1": 0.8016194331983806, "obj2": 0.10593400413427242}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "( ( DDR / ( FirstVNF_Mem * ( MRS + FirstVNF_CPU ) ) ) * ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( ( CS * MUR ) + ( RMSe / CS ) ) - CS ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.7911411019812675}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,( ARS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ) ) * Max( Max( Max( FirstVNF_RAM,MDR ),FirstVNF_CPU ),Min( ( ( FirstVNF_Mem / ACS ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ,AMS ) ) )", "choosing": "Min( ( Min( ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( ( MLU - CS ) - DS ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( RRSe * MUM ) )", "obj1": 0.5425101214574899, "obj2": 0.2996931698483581}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ( ( MDR * DDR ) * ( MRS + PN ) ) / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( ( Min( RCSe ,MLU ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ),Min( CS ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2591093117408907, "obj2": 0.6469265039851523}, {"determining": "Min( Min( Min( DDR ,DDR ) ,FirstVNF_RAM ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),AMS ) + FirstVNF_Mem ) * FirstVNF_RAM ) )", "choosing": "( ( MUR * ( ( ( RCSe - RMSe ) / Min( MUC ,MUR ) ) + ( MUM + CS ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - DDR ),FirstVNF_Mem_Server ),Const ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( MUM ,MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.5011628497385973}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.7995951417004049, "obj2": 0.11871380403777164}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( ( Min( RRS ,PN ) * FirstVNF_CPU_Server ) + Min( ( MDR * FirstVNF_RAM_Server ) ,ARS ) ) + ( ( ACS + ARS ) - ( DDR / Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( Max( Min( ( RRSe * ( ( MUC * MUR ) + ( DS / MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) )", "obj1": 0.9008097165991903, "obj2": 0.04391840287509565}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ) ),Min( ( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.16558101343340664}, {"determining": "( ( ARS * Max( ( ARS - Max( PN,FirstVNF_CPU ) ),Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( ( CS / DS ),DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.7125506072874493, "obj2": 0.19629172797244085}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( ( MUR / RCSe ) * ( MLU / CS ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( ( Max( FirstVNF_Mem,( AMS + ( Max( Min( ( AMS + FirstVNF_RAM ) ,Min( Const ,FirstVNF_CPU_Server ) ),( ( RRS / CRS ) * ARS ) ) * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ( FirstVNF_Mem + FirstVNF_RAM ) - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( ( Max( ( MUM - RRSe ),Max( MUM,MUM ) ) / Min( DS ,Min( RMSe ,DS ) ) ) ,( MLU / RCSe ) ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4898785425101215, "obj2": 0.3478729988989306}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( CRS ,( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - Min( ( DS * MLU ) ,RCSe ) ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7201883540447072}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - CS ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7094952471675519}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( ( ( Const * FirstVNF_CPU ) / FirstVNF_CPU ) * FirstVNF_RAM ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( MUC * ( RRSe - RCSe ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "Min( Max( ( ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.305668016194332, "obj2": 0.6152978855293866}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( BR - ( Max( ACS,RRS ) + ( MDR * DDR ) ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( Max( CS,RCSe ) * MLU ) ),( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) )", "obj1": 0.8704453441295547, "obj2": 0.08001471672610859}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( PN / DDR ) ) ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( Max( DS,RRSe ),DS ) ) * DS ) * ( DS + MUR ) ) )", "obj1": 0.917004048582996, "obj2": 0.03476254324407443}, {"determining": "( ( ( MRS + FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Min( ( CRS * ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ,( ARS / FirstVNF_Mem_Server ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( ( MUM / ( DS / Min( ( CS + MUR ) ,RMSe ) ) ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( Min( RRSe ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29297116951465363}, {"determining": "( ACS - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.023181700990817233}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,CRS ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - Min( ( ( ( DS / CS ) / RCSe ) + DS ) ,( MUC * ( MLU / CS ) ) ) ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.17610510732548826}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( Min( MRS ,FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( MDR * DDR ) ) ) ) ) ) * ( FirstVNF_CPU / Min( Const ,BR ) ) )", "choosing": "( ( ( CS - MUM ) - CS ) - ( ( MLU + ( ( DS - Min( RRSe ,RCSe ) ) * Min( MUC ,CS ) ) ) + ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.7192350065509915}, {"determining": "( ( Min( CRS ,( FirstVNF_RAM * BR ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( ( Max( MUC,CS ) * ( RMSe - CS ) ) / MLU ),MUM ) ) ,RRSe ) ) ,( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.5647773279352226, "obj2": 0.2875104410019362}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( Min( Min( RCSe ,( RRSe - MUM ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2408906882591093, "obj2": 0.6790986053945741}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.1301762026554424}, {"determining": "Min( Max( ( ( ( ( ( FirstVNF_Mem * Const ) * CRS ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ( ARS - CRS ) - FirstVNF_CPU ) / ( ( BR + ( DDR - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( Max( ( ( MRS - Const ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( Min( Min( ( MUR * MUR ) ,DS ) ,RMSe ) - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.4190283400809717, "obj2": 0.5070514152823612}, {"determining": "Max( ( ( FirstVNF_Mem_Server - ACS ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Max( RCSe,( CS - MUM ) ) ,RCSe ) / ( ( ( ( MUC - Min( RRSe ,DS ) ) - Max( RMSe,MUM ) ) * CS ) * ( RCSe * Max( Max( ( MUR / Min( Max( DS,MUR ) ,CS ) ),RRSe ),CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6223374884062548}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9453441295546559, "obj2": 0.019641465339244886}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Min( ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( CS * RMSe ),( ( Max( ( RCSe * ( MUR + ( MLU / Max( DS,RRSe ) ) ) ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9777327935222672, "obj2": 0.011981596693535768}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( DS + DS ) * ( MLU / CS ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01483433242283356}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( FirstVNF_CPU + MRS ) - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( ( DDR + CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RRSe * ( MUR / RCSe ) ) - MLU ),RCSe ),Min( ( MUR - ( ( RCSe * RRSe ) * ( CS - RMSe ) ) ) ,RRSe ) )", "obj1": 0.6842105263157895, "obj2": 0.20473704631543096}, {"determining": "Min( ( ( CRS + FirstVNF_CPU_Server ) + MRS ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ( AMS + DDR ) ) ,ARS ) ) )", "choosing": "( Min( Min( ( MUM + CS ) ,Max( ( CS * Max( MUM,RRSe ) ),MUM ) ) ,MLU ) + ( RMSe / ( ( ( ( ( MLU / RRSe ) / MLU ) / MUR ) / MUC ) / ( RRSe - Max( ( ( ( MUC * DS ) * RRSe ) * RRSe ),RRSe ) ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ARS + ( Min( ( Max( MRS,AMS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.04306286561389316}, {"determining": "( ( ( DDR / PN ) * ( ( ( FirstVNF_CPU_Server + Const ) / PN ) / ( AMS + ( FirstVNF_Mem + ( FirstVNF_RAM_Server - CRS ) ) ) ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( ( ( ( CS + MLU ) - ( MLU * DS ) ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),( MLU / CS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5461956037798384}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.8805668016194332, "obj2": 0.06128456396195264}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( Min( Min( RCSe ,( RRSe - MUM ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6784956069933801}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + AMS ) ) ) ) + BR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( CS + MUC ) / Max( RRSe,MUM ) ) ,RCSe ) ,( Min( Max( Max( RMSe,MUM ),( RRSe - MLU ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.38461538461538464, "obj2": 0.5344672748405177}, {"determining": "( Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( DS * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3390274304612599}, {"determining": "Max( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( DS + Min( Max( MLU,MUR ) ,MLU ) ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) / ( CS * ( Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( DS + RRSe ) ) ) * Max( ( ( ( MUR / RRSe ) / Max( RCSe,( MLU / MLU ) ) ) - MUR ),CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6060631392225284}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Max( CRS,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),( MUM - MLU ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( RRSe - MUR ) )", "obj1": 0.8765182186234818, "obj2": 0.06849794024727202}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "Min( ( ( Max( ( PN + BR ),CRS ) * Min( RRS ,Const ) ) * MRS ) ,( Const * Min( ( Min( ( ( FirstVNF_Mem_Server * DDR ) * ( MRS + PN ) ) ,CRS ) * ( ARS + ACS ) ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - ( Max( ( MUR - CS ),MUR ) + ( ( Min( RMSe ,MUC ) / ( MLU + RRSe ) ) - ( CS / ( RMSe + RRSe ) ) ) ) ) ,Max( ( MLU / RMSe ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ),MUM ) ) )", "obj1": 0.4109311740890688, "obj2": 0.511613339564322}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8603238866396761, "obj2": 0.08097440337448163}, {"determining": "( ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ARS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) ) ) / FirstVNF_RAM ) * ( ARS - ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( ( CRS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( MLU - MLU ) ) ,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) )", "obj1": 0.694331983805668, "obj2": 0.2036057877545119}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) + Min( FirstVNF_Mem_Server ,ARS ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) ) ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6097291206863975}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.3623481781376518, "obj2": 0.5665376977360707}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) + Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,Min( FirstVNF_RAM_Server ,MRS ) ) * ( AMS + FirstVNF_Mem ) ) ) ) ) + Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( MUR / DS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),( ( MUC + DS ) / RRSe ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( Min( Min( MUR ,MUR ) ,MLU ) + MUC ) ) ) )", "obj1": 0.8522267206477733, "obj2": 0.08422669242187053}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Const,( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( MUR - Max( ( MUC - MLU ),( MUM * MUR ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1902834008097166, "obj2": 0.7308982335835038}, {"determining": "( ACS - ( FirstVNF_Mem - ( FirstVNF_CPU_Server - CRS ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( Min( RCSe ,MLU ) + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / ( MUC * ( MLU - MUR ) ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.012319923017607695}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ARS - FirstVNF_CPU ),FirstVNF_Mem_Server ),Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( DS + Max( MUM,RRSe ) ) * RMSe ) + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,( DS / CS ) ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( BR - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1744050048643501}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,( FirstVNF_Mem_Server * BR ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( Min( RCSe ,RMSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( BR ,( CRS - DDR ) ) + Min( MDR ,( ARS / FirstVNF_Mem_Server ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - ( RCSe - MUM ) ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( Min( RRSe ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5589435537016824}, {"determining": "( ( FirstVNF_Mem_Server / ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),AMS ) - MDR ) ) * ( ARS - ACS ) )", "choosing": "Min( ( ( ( MLU - Max( Max( CS,MLU ),RCSe ) ) / RRSe ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( ( ( MUC / Max( CS,RCSe ) ) + CS ) + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.52834008097166, "obj2": 0.3187229714217862}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ( PN * FirstVNF_CPU_Server ) ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RCSe + Min( RRSe ,DS ) ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + DS ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.13430662759881984}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.2631578947368421, "obj2": 0.6446159755075014}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "( ( Max( Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( ( MLU - CS ) ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5080971659919028, "obj2": 0.33697597522572986}], "17": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( CS / ( ( RCSe - RMSe ) / Max( ( RCSe - RCSe ),DS ) ) ),( RRSe * CS ) ) * ( MUM * MLU ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( Max( DDR,( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( ( Min( MUR ,( MUC / CS ) ) + MUC ) * MLU ) ),( ( ( ( MUR / MUC ) - Max( CS,RCSe ) ) / RMSe ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( ( ( ARS * ( ARS - MRS ) ) / MRS ),( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem_Server / MDR ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( ( MUM / RMSe ) - MUC ) ),MUM ) ) ) - ( MUR * DS ) )", "obj1": 0.4493927125506073, "obj2": 0.3676160265169858}, {"determining": "( FirstVNF_CPU_Server - ( ( Const * AMS ) + MDR ) )", "choosing": "( ( Max( RMSe,Min( CS ,RRSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.4352226720647773, "obj2": 0.4639241261055161}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2292272147008656}, {"determining": "Min( ( ( ACS * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + BR ) ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - AMS ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - Max( Max( ( RCSe * Min( ( RRSe * ( ( RCSe / RCSe ) + ( RMSe / RRSe ) ) ) ,RMSe ) ),MUC ),RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6712495276617411}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_CPU ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.6740890688259109, "obj2": 0.2088636727765393}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( DS + DS ) * ( MLU / CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.10412014374720899}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( RRS + ( FirstVNF_RAM_Server - CRS ) ) ) ,ARS ) ) * ( ( CRS * ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server + MDR ) - FirstVNF_CPU_Server ) ) ) + MDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / MLU ) ) ) ) ) ),Max( Min( RRSe ,MLU ),( MUC - DS ) ) ) - ( ( RRSe * RCSe ) - ( RCSe + ( Max( MUR,( MUM - Max( RMSe,RCSe ) ) ) - MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( MRS ,( AMS + ARS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - Min( ( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM ) ,Min( PN ,PN ) ) ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + Max( DS,( ( CS / RCSe ) - ( MLU / DS ) ) ) ) ) ) - ( CS * Max( DS,RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.28348925748913817}, {"determining": "Min( Max( RRS,PN ) ,( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( ( RCSe + RRSe ) / MUC ) - Max( CS,RCSe ) ) / RMSe ),CS ) ) ,Min( MUR ,( MUC / CS ) ) ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.6336032388663968, "obj2": 0.23417600353506848}, {"determining": "( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( DS * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5080971659919028, "obj2": 0.33504771308159853}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,( ARS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( ( MLU - CS ) - DS ) ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.23481781376518218, "obj2": 0.6773351643074653}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,MUR ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8340080971659919, "obj2": 0.08943781950750188}, {"determining": "( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM * Max( Const,MRS ) ) + ACS ) ) ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( RRS - FirstVNF_CPU ) ) ) ) ) / ( ( MDR * DDR ) * ( Min( MRS ,MRS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( RMSe ,MLU ) ),( ( ( MUM - ( MUM / ( MUR - Max( Min( CS ,RMSe ),Max( MLU,MLU ) ) ) ) ) - MUC ) * ( RCSe * Min( ( MUC / RCSe ) ,Min( MUC ,MUC ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.48867653891702445}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( MLU - ( DS + CS ) )", "obj1": 0.27125506072874495, "obj2": 0.639669007413177}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.1301762026554424}, {"determining": "( ( ( DDR / PN ) * ( ( ( FirstVNF_CPU_Server + Const ) / PN ) / ( AMS + ( FirstVNF_Mem + ( FirstVNF_RAM_Server - CRS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( ( ( ( ( CS + CS ) - ( MLU * DS ) ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),( MLU / CS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6051165467394144}, {"determining": "( ( FirstVNF_Mem_Server / ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),AMS ) - MDR ) ) * ( ARS - ACS ) )", "choosing": "Min( ( ( ( MLU - Max( Max( CS,MLU ),RCSe ) ) / RRSe ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( ( ( MUC / Max( CS,RCSe ) ) + CS ) + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.52834008097166, "obj2": 0.3187229714217862}, {"determining": "( ( Max( FirstVNF_Mem,( AMS + ( Max( Min( ( AMS + FirstVNF_RAM ) ,Min( Const ,FirstVNF_CPU_Server ) ),( ( RRS / CRS ) * ARS ) ) * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ( FirstVNF_Mem + FirstVNF_RAM ) - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( ( Max( ( MUM - RRSe ),Max( MUM,MUM ) ) / Min( DS ,Min( RMSe ,DS ) ) ) ,( MLU / RCSe ) ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4898785425101215, "obj2": 0.3478729988989306}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ( PN * FirstVNF_CPU_Server ) ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RCSe + Min( RRSe ,DS ) ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + DS ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.13430662759881984}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_CPU_Server + DDR ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( Min( ( MLU - Max( DS,RRSe ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,( MLU * RRSe ) ) ) - ( DS + CS ) )", "obj1": 0.22672064777327935, "obj2": 0.6871296943477481}, {"determining": "( ( PN + BR ) * ( ( Max( AMS,FirstVNF_RAM ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Max( MUM,( CS - RMSe ) ) ,MUM ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.597165991902834, "obj2": 0.2579869146809861}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.3623481781376518, "obj2": 0.5665376977360707}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,( FirstVNF_Mem_Server * BR ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( Min( RCSe ,RMSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( BR ,( CRS - DDR ) ) + Min( MDR ,( ARS / FirstVNF_Mem_Server ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - ( RCSe - MUM ) ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ,MUR ) / ( MLU - MLU ) ) ,( Min( RRSe ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5589435537016824}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,FirstVNF_RAM ) + ( Const + ( BR - PN ) ) ) ,ARS ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( CS + MLU ) - CS ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.8062110973084917}, {"determining": "Min( ( ( Max( ( PN + BR ),CRS ) * Min( RRS ,Const ) ) * MRS ) ,( Const * Min( ( Min( ( ( FirstVNF_Mem_Server * DDR ) * ( MRS + PN ) ) ,CRS ) * ( ARS + ACS ) ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - ( Max( ( MUR - CS ),MUR ) + ( ( Min( RMSe ,MUC ) / ( MLU + RRSe ) ) - ( CS / ( RMSe + RRSe ) ) ) ) ) ,Max( ( MLU / RMSe ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ),MUM ) ) )", "obj1": 0.4109311740890688, "obj2": 0.511613339564322}, {"determining": "( ACS - ( ( ( DDR / PN ) * Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,ARS ) ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( Max( ( RCSe * ( MUR + ( MLU / Max( DS,RRSe ) ) ) ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.6842105263157895, "obj2": 0.19898843288900878}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM,Min( AMS ,BR ) ) * ( MRS - AMS ) ) ) )", "choosing": "( Min( ( ( ( DS / CS ) / ( Min( ( RMSe - MUR ) ,MUC ) - MUR ) ) + DS ) ,( MUC * ( Min( MUR ,RCSe ) / CS ) ) ) * ( DS / ( ( RRSe / CS ) * MUC ) ) )", "obj1": 0.6234817813765182, "obj2": 0.25020038076972356}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - ( FirstVNF_Mem + Min( MDR ,( ARS / FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.9311740890688259, "obj2": 0.032877465689395854}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * Min( FirstVNF_Mem_Server ,ARS ) ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,DS ) ) ) ,MLU ),Max( Max( DS,RRSe ),DS ) ) * DS ) * ( DS + MUR ) ) )", "obj1": 0.917004048582996, "obj2": 0.034105568468993035}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( FirstVNF_CPU + MRS ) - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( ( DDR + CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RRSe * ( MUR / RCSe ) ) - MLU ),RCSe ),Min( ( MUR - ( ( RCSe * RRSe ) * ( CS - RMSe ) ) ) ,RRSe ) )", "obj1": 0.8016194331983806, "obj2": 0.10593400413427242}, {"determining": "Min( Min( Min( DDR ,DDR ) ,FirstVNF_RAM ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),AMS ) + FirstVNF_Mem ) * FirstVNF_RAM ) )", "choosing": "( ( MUR * ( ( ( RCSe - RMSe ) / Min( MUC ,MUR ) ) + ( MUM + CS ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "( ( Min( CRS ,( FirstVNF_RAM * BR ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( ( Max( MUC,CS ) * ( RMSe - CS ) ) / MLU ),MUM ) ) ,RRSe ) ) ,( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.5647773279352226, "obj2": 0.2875104410019362}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + AMS ) ) ) ) + BR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( CS + MUC ) / Max( RRSe,MUM ) ) ,RCSe ) ,( Min( Max( Max( RMSe,MUM ),( RRSe - MLU ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.38461538461538464, "obj2": 0.5344672748405177}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ( ( MDR * DDR ) * ( MRS + PN ) ) / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( ( Min( RCSe ,MLU ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ),Min( CS ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2591093117408907, "obj2": 0.6469265039851523}, {"determining": "Min( Max( ( FirstVNF_Mem - ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( ( PN + RRS ) * Const ) * AMS ) ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( ( ( ( MUC + MLU ) * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.15991902834008098, "obj2": 0.7542304121792032}, {"determining": "Max( ( Min( MDR ,Min( ( Min( ( FirstVNF_Mem * Min( Const ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ),Max( Max( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_RAM ) - DDR ),FirstVNF_Mem_Server ),Const ) )", "choosing": "( Min( MUC ,( DS / MLU ) ) - ( ( MUR / RRSe ) / Max( Min( ( DS + Min( DS ,CS ) ) ,( MUR * Min( MUM ,MLU ) ) ),( MLU / CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.5011628497385973}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.7995951417004049, "obj2": 0.11871380403777164}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ) ),Min( ( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.16558101343340664}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( ( ( Const * FirstVNF_CPU ) / FirstVNF_CPU ) * FirstVNF_RAM ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( MUC * ( RRSe - RCSe ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * Min( Min( RRS ,RRS ) ,Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( ( MUC * RCSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.7861895234047165}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "Min( ( FirstVNF_Mem_Server / ( DDR + Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - DS ) ,Max( Min( Min( RCSe ,( RRSe - MUM ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.21052631578947367, "obj2": 0.7052703761201707}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.8805668016194332, "obj2": 0.06128456396195264}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( ( MUR / RCSe ) * ( MLU / CS ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Max( CRS,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),( MUM - MLU ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( RRSe - MUR ) )", "obj1": 0.8765182186234818, "obj2": 0.06849794024727202}, {"determining": "Min( Max( ( ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.305668016194332, "obj2": 0.6152978855293866}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( BR - ( Max( ACS,RRS ) + ( MDR * DDR ) ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( Max( CS,RCSe ) * MLU ) ),( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) )", "obj1": 0.8704453441295547, "obj2": 0.08001471672610859}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ARS - FirstVNF_CPU ),FirstVNF_Mem_Server ),Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( DS + Max( MUM,RRSe ) ) * RMSe ) + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,( DS / CS ) ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( MRS + MDR ) ) ,CRS ) ) ) * ARS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Min( RRSe ,( DS + MUR ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26351216785805165}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * ( ( FirstVNF_Mem / MRS ) * FirstVNF_RAM ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( ( ARS / CRS ) ,ARS ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + ( RRSe * RMSe ) ) * RMSe ) ) + Max( CS,MUC ) ) * Min( RRSe ,RRSe ) )", "obj1": 0.757085020242915, "obj2": 0.14372132788297898}, {"determining": "( ( DDR / ( FirstVNF_Mem * ( MRS + FirstVNF_CPU ) ) ) * ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( ( CS * MUR ) + ( RMSe / CS ) ) - CS ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.7911411019812675}, {"determining": "( ACS - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.023181700990817233}, {"determining": "( ( PN + ( MDR / ( ( FirstVNF_RAM + ARS ) * Min( MDR ,FirstVNF_CPU ) ) ) ) * Max( MRS,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( ( DS * RRSe ) + CS ) + DS ) ,RCSe ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( ( MLU - RMSe ) * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.2995182666933963}, {"determining": "Min( Max( ( ( ( ( ( FirstVNF_Mem * Const ) * CRS ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ( ARS - CRS ) - FirstVNF_CPU ) / ( ( BR + ( DDR - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( Max( ( ( MRS - Const ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( Min( Min( ( MUR * MUR ) ,DS ) ,RMSe ) - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.4190283400809717, "obj2": 0.5070514152823612}, {"determining": "Max( ( ( FirstVNF_Mem_Server - ACS ) - DDR ),FirstVNF_Mem )", "choosing": "( Min( Max( RCSe,( CS - MUM ) ) ,RCSe ) / ( ( ( ( MUC - Min( RRSe ,DS ) ) - Max( RMSe,MUM ) ) * CS ) * ( RCSe * Max( Max( ( MUR / Min( Max( DS,MUR ) ,CS ) ),RRSe ),CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6223374884062548}, {"determining": "Min( ( ( ACS + ARS ) - ( DDR / PN ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( CS * Max( MUM,( ( DS + MUC ) + ( DS / MLU ) ) ) ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.8866396761133604, "obj2": 0.049317076746902985}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( ( FirstVNF_CPU_Server * Const ),Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + ( MLU - ( RCSe / DS ) ) ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) ) )", "obj1": 0.9048582995951417, "obj2": 0.04180544988367757}, {"determining": "( ( ( Min( RRS ,PN ) * FirstVNF_CPU_Server ) + Min( ( MDR * FirstVNF_RAM_Server ) ,ARS ) ) + ( ( ACS + ARS ) - ( DDR / Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( Max( Min( ( RRSe * ( ( MUC * MUR ) + ( DS / MLU ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) )", "obj1": 0.9008097165991903, "obj2": 0.04391840287509565}, {"determining": "Min( ( ( CRS + FirstVNF_CPU_Server ) + MRS ) ,( Const * Min( ( Min( ( ( MDR * DDR ) * ( MRS + PN ) ) ,CRS ) * ( AMS + DDR ) ) ,ARS ) ) )", "choosing": "( Min( Min( ( MUM + CS ) ,Max( ( CS * Max( MUM,RRSe ) ),MUM ) ) ,MLU ) + ( RMSe / ( ( ( ( ( MLU / RRSe ) / MLU ) / MUR ) / MUC ) / ( RRSe - Max( ( ( ( MUC * DS ) * RRSe ) * RRSe ),RRSe ) ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.5271151372850524}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + ( MRS - ( Max( FirstVNF_CPU,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( Min( CS ,MLU ) / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( Min( DS ,( ( MLU - MUC ) / MUC ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( Min( MRS ,FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( MDR * DDR ) ) ) ) ) ) * ( FirstVNF_CPU / Min( Const ,BR ) ) )", "choosing": "( ( ( CS - MUM ) - CS ) - ( ( MLU + ( ( DS - Min( RRSe ,RCSe ) ) * Min( MUC ,CS ) ) ) + ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.7192350065509915}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( CRS ,( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - Min( ( DS * MLU ) ,RCSe ) ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7201883540447072}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( RRSe / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,BR ) * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,Max( ( RMSe / MUC ),RCSe ) ) + MUC ) / ( CS * ( RCSe * Max( ( Min( MUR ,( MUC / CS ) ) - MUR ),CS ) ) ) ) - ( DS + CS ) )", "obj1": 0.2894736842105263, "obj2": 0.6256056442370455}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,( CRS + BR ) ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * Min( RRSe ,RRSe ) )", "obj1": 0.7631578947368421, "obj2": 0.14000268584160044}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * ( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),( CS - MLU ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8502024291497976, "obj2": 0.08824846280602468}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) + BR ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,( RRSe * MLU ) ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.18314508849632016}, {"determining": "( ( ( AMS + Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,ACS ) + MDR ) ,ARS ) ) + BR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( Max( Min( ( MLU - MLU ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) + MUC ) / Max( RRSe,MUM ) ) ,RCSe ) ,( Min( Max( Max( RMSe,MUM ),( RRSe - MLU ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5431575844313071}, {"determining": "( ( ACS / CRS ) + ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( ( MUM - Min( DS ,Max( RRSe,( MUR * MUC ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.745387842341789}, {"determining": "( ( ( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + MUM ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8603238866396761, "obj2": 0.08097440337448163}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Const,Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( ( MUC - RMSe ) - Max( ( MUC - MLU ),( MUM * MUR ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1720647773279352, "obj2": 0.7362297991952368}, {"determining": "( Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( DS * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3390274304612599}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) + Min( FirstVNF_Mem_Server ,ARS ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) ) ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6097291206863975}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU_Server + ( ( ( DDR * MRS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / ( FirstVNF_Mem * ARS ) ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,( ( ( Max( MUR,RCSe ) - RMSe ) / Min( MUM ,( RRSe - MUM ) ) ) / DS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) ) - ( DS + ( MUC + ( MUR - ( RRSe - RMSe ) ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6256056442370455}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) ,RCSe ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5546558704453441, "obj2": 0.29105589900457474}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) + BR ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,( RRSe * MLU ) ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1800032378740629}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( FirstVNF_CPU_Server + CRS ) / ACS ) ) ) + ( ( ACS + ARS ) - ( Max( MRS,( FirstVNF_RAM_Server + ( CRS / RRS ) ) ) / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + Max( DS,( RMSe / RMSe ) ) ) * ( MUM / ( MUC * ( MUM + MLU ) ) ) )", "obj1": 0.7489878542510121, "obj2": 0.1539954693395091}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.97165991902834, "obj2": 0.009259081675092382}, {"determining": "( ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) / FirstVNF_RAM ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / ( RRSe + Min( RRSe ,MUR ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.7300502078963697}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( BR - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1744050048643501}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( DS + DS ) * ( MLU / CS ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01483433242283356}, {"determining": "Min( Max( FirstVNF_CPU_Server,Const ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( MDR - PN ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( DS / MLU ) ,RRSe ) ) - Max( ( ( RRSe + Max( MUM,Min( RRSe ,( MUM * ( MUM * RCSe ) ) ) ) ) / ( MUM + Min( MUC ,RRSe ) ) ),MUM ) )", "obj1": 0.18016194331983806, "obj2": 0.7335548796671607}, {"determining": "( ( ARS * Max( ( ARS - Max( PN,FirstVNF_CPU ) ),Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( ( CS / DS ),DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.7125506072874493, "obj2": 0.19629172797244085}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( MRS + MDR ) ) ,CRS ) ) ) * ARS ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server - Const ) ) + MRS ) ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - RCSe ) + MUC ) * RMSe ) ) + RRSe ) * Max( MUM,MUR ) )", "obj1": 0.7469635627530364, "obj2": 0.15456856348971854}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.2631578947368421, "obj2": 0.6446159755075014}], "18": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( ( PN + RRS ) * Const ) * AMS ) ) - ( ( Const * AMS ) + MDR ) )", "choosing": "( ( Max( RMSe,Min( CS ,( MUC + MLU ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Max( ( CS / ( ( RCSe - RMSe ) / Max( ( RCSe - RCSe ),DS ) ) ),( RRSe * CS ) ) * ( MUM * MLU ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( FirstVNF_CPU_Server - ( ( Const * AMS ) + MDR ) )", "choosing": "( ( Max( RMSe,Min( CS ,RRSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.4352226720647773, "obj2": 0.4639241261055161}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( ( ( ARS * ( ARS - MRS ) ) / MRS ),( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem_Server / MDR ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( ( MUM / RMSe ) - MUC ) ),MUM ) ) ) - ( MUR * DS ) )", "obj1": 0.4493927125506073, "obj2": 0.3676160265169858}, {"determining": "( ( ( FirstVNF_RAM / RRS ) / ( ARS + RRS ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( Max( RRSe,Max( ( MUM / ( MUR - DS ) ),MLU ) ) - ( ( ( MLU - ( RCSe / DS ) ) + ( Min( RRSe ,MUR ) * ( MUM * MLU ) ) ) * RMSe ) ) + RRSe ) * Max( MUM,MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.47891506367418196}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( MRS - ( Max( ACS,RRS ) + ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,RMSe ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.22912307912531715}, {"determining": "Min( ( ( ACS * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + BR ) ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - AMS ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - Max( Max( ( RCSe * Min( ( RRSe * ( ( RCSe / RCSe ) + ( RMSe / RRSe ) ) ) ,RMSe ) ),MUC ),RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6712495276617411}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( RRS + ( FirstVNF_RAM_Server - CRS ) ) ) ,ARS ) ) * ( ( CRS * ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server + MDR ) - FirstVNF_CPU_Server ) ) ) + MDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / MLU ) ) ) ) ) ),Max( Min( RRSe ,MLU ),( MUC - DS ) ) ) - ( ( RRSe * RCSe ) - ( RCSe + ( Max( MUR,( MUM - Max( RMSe,RCSe ) ) ) - MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( DS * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.5080971659919028, "obj2": 0.33504771308159853}, {"determining": "Min( Max( RRS,PN ) ,( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( ( RCSe + RRSe ) / MUC ) - Max( CS,RCSe ) ) / RMSe ),CS ) ) ,Min( MUR ,( MUC / CS ) ) ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.6336032388663968, "obj2": 0.23417600353506848}, {"determining": "Min( ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( Max( ( RMSe / MUR ),( ( MUM / ( RRSe + ( ( Min( MLU ,MLU ) - RCSe ) + MUM ) ) ) - RRSe ) ) - ( Max( MUR,MLU ) + CS ) )", "obj1": 0.3623481781376518, "obj2": 0.5665376977360707}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( MLU - ( DS + CS ) )", "obj1": 0.27125506072874495, "obj2": 0.639669007413177}, {"determining": "Min( Max( ( ( ( ( ( FirstVNF_Mem * Const ) * CRS ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ( ARS - CRS ) - FirstVNF_CPU ) / ( ( BR + ( DDR - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ,Min( Max( ( ( MRS - Const ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( Min( Min( ( MUR * MUR ) ,DS ) ,RMSe ) - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) - ( ( DS * MUM ) + RRSe ) )", "obj1": 0.4190283400809717, "obj2": 0.5070514152823612}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,( ARS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( ( MLU - CS ) - DS ) ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.23481781376518218, "obj2": 0.6773351643074653}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) ,( ( PN - Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( MUC / RRSe ) ) * RMSe ) ) ) ) )", "obj1": 0.7975708502024291, "obj2": 0.11611580066702537}, {"determining": "( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + Min( RRSe ,( DS + CS ) ) ) * RMSe ) ) + RRSe ) * Min( RRSe ,RRSe ) )", "obj1": 0.8157894736842105, "obj2": 0.09716745698456797}, {"determining": "( ( ( Const + ( Min( Min( CRS ,( AMS / Max( AMS,ARS ) ) ) ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,Max( RRS,FirstVNF_RAM_Server ) ) + PN ) + CRS ) )", "choosing": "( ( MUR - CS ) - ( Max( CS,( ( MUR - ( MUR - RRSe ) ) + RMSe ) ) + ( MLU / DS ) ) )", "obj1": 0.13562753036437247, "obj2": 0.7839408520345561}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( ( ACS + FirstVNF_CPU_Server ) - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( Min( ( RRSe * ( ( MUM / RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,( Min( MUM ,MUR ) - ( MLU - ( DS / ( MLU / ( Min( ( RCSe * CS ) ,( MUM * RCSe ) ) * RCSe ) ) ) ) ) )", "obj1": 0.32388663967611336, "obj2": 0.5894163890033437}, {"determining": "( ( PN + BR ) * ( ( Max( AMS,FirstVNF_RAM ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Max( MUM,( CS - RMSe ) ) ,MUM ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.597165991902834, "obj2": 0.2579869146809861}, {"determining": "( ( PN + ( MDR / ( ( FirstVNF_RAM + ARS ) * Min( MDR ,FirstVNF_CPU ) ) ) ) * Max( MRS,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( ( DS * RRSe ) + CS ) + DS ) ,RCSe ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( ( MLU - RMSe ) * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.2995182666933963}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,( FirstVNF_Mem_Server * BR ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( Min( RCSe ,RMSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( Const + Min( MRS ,( MRS + FirstVNF_CPU ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( Min( ( ( DS - ( Max( CS,CS ) * RMSe ) ) + MUC ) ,MUR ) - DS ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,MUC ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * ( ARS - ACS ) ) ) * ARS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Min( MUC ,( DS + MUR ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5769230769230769, "obj2": 0.2785939979491737}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( MUR / MUC ) - Max( CS,RCSe ) ) / RMSe ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) * ( MLU - CS ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( FirstVNF_CPU + MRS ) - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( ( DDR + CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RRSe * ( MUR / RCSe ) ) - MLU ),RCSe ),Min( ( MUR - ( ( RCSe * RRSe ) * ( CS - RMSe ) ) ) ,RRSe ) )", "obj1": 0.8016194331983806, "obj2": 0.10593400413427242}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( MRS ,( AMS + ARS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - Min( ( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM ) ,Min( PN ,PN ) ) ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + Max( DS,( ( CS / RCSe ) - ( MLU / DS ) ) ) ) ) ) - ( CS * Max( DS,RCSe ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.800396967998168}, {"determining": "Min( ( ( Max( ( PN + BR ),CRS ) * Min( RRS ,Const ) ) * MRS ) ,( Const * Min( ( Min( ( ( FirstVNF_Mem_Server * DDR ) * ( MRS + PN ) ) ,CRS ) * ( ARS + ACS ) ) ,ARS ) ) )", "choosing": "( Min( Min( ( MLU - ( Max( ( MUR - CS ),MUR ) + ( ( Min( RMSe ,MUC ) / ( MLU + RRSe ) ) - ( CS / ( RMSe + RRSe ) ) ) ) ) ,Max( ( MLU / RMSe ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ),MUM ) ) )", "obj1": 0.4109311740890688, "obj2": 0.511613339564322}, {"determining": "( ACS - ( ( ( DDR / PN ) * Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,ARS ) ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( Max( ( RCSe * ( MUR + ( MLU / Max( DS,RRSe ) ) ) ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.6842105263157895, "obj2": 0.19898843288900878}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM,Min( AMS ,BR ) ) * ( MRS - AMS ) ) ) )", "choosing": "( Min( ( ( ( DS / CS ) / ( Min( ( RMSe - MUR ) ,MUC ) - MUR ) ) + DS ) ,( MUC * ( Min( MUR ,RCSe ) / CS ) ) ) * ( DS / ( ( RRSe / CS ) * MUC ) ) )", "obj1": 0.6234817813765182, "obj2": 0.25020038076972356}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * Min( FirstVNF_Mem_Server ,ARS ) ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,DS ) ) ) ,MLU ),Max( Max( DS,RRSe ),DS ) ) * DS ) * ( DS + MUR ) ) )", "obj1": 0.917004048582996, "obj2": 0.034105568468993035}, {"determining": "Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server / ( Min( MRS ,( AMS + ARS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,Min( MUM ,DS ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.45546558704453444, "obj2": 0.36472982959036393}, {"determining": "( ( Min( CRS ,( FirstVNF_RAM * BR ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( ( Max( MUC,CS ) * ( RMSe - CS ) ) / MLU ),MUM ) ) ,RRSe ) ) ,( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.5647773279352226, "obj2": 0.2875104410019362}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,( ( DDR / PN ) + FirstVNF_RAM ) ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( ARS / FirstVNF_Mem_Server ) ) ,CRS ) ) ) * ARS ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( MUC + Max( RCSe,MUR ) ) * Min( ( DS / MLU ) ,RRSe ) ) ) + RRSe ) * Max( MUM,MUR ) )", "obj1": 0.7813765182186235, "obj2": 0.12749392024758757}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) ,RCSe ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5546558704453441, "obj2": 0.29105589900457474}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ARS - FirstVNF_CPU ),FirstVNF_Mem_Server ),Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( DS + Max( MUM,RRSe ) ) * RMSe ) + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,( DS / CS ) ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "( ( Min( CRS ,( FirstVNF_RAM * BR ) ) / Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) * ( ARS - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( DS / ( Min( ( DS * RMSe ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.37044534412955465, "obj2": 0.5498921998586099}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ( ( MDR * DDR ) * ( MRS + PN ) ) / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( ( Min( RCSe ,MLU ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ),Min( CS ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2591093117408907, "obj2": 0.6469265039851523}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ) ),Min( ( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.16558101343340664}, {"determining": "( ( ARS * Max( ( ARS - Max( PN,FirstVNF_CPU ) ),Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( ( CS / DS ),DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.7125506072874493, "obj2": 0.19629172797244085}, {"determining": "( ( FirstVNF_Mem_Server / ( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),AMS ) - MDR ) ) * ( ARS - ACS ) )", "choosing": "Min( ( ( ( MLU - Max( Max( CS,MLU ),RCSe ) ) / RRSe ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( ( ( MUC / Max( CS,RCSe ) ) + CS ) + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.52834008097166, "obj2": 0.3187229714217862}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / FirstVNF_CPU ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.3016194331983806, "obj2": 0.6101770311323608}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "( Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( DS * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3390274304612599}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( BR - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( ( ( DS - MLU ) + ( RRSe * RRSe ) ) / ( MUM * RMSe ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1744050048643501}, {"determining": "( ACS - ( ( ( DDR / PN ) * Min( MDR ,Min( ( ACS + MDR ) ,ARS ) ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( Max( ( RCSe * ( MUR + ( MUM / Max( DS,RRSe ) ) ) ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.6700404858299596, "obj2": 0.2120803900393305}, {"determining": "Min( ARS ,( CRS / ( ( Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) + MDR ) * ARS ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) + ( MUM - MLU ) )", "obj1": 0.4008097165991903, "obj2": 0.525297102774501}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RRSe / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) + RRSe ) * Min( RRSe ,RRSe ) )", "obj1": 0.8785425101214575, "obj2": 0.055484693064362496}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( ( ( DDR / PN ) * ( ( ( FirstVNF_CPU_Server + Const ) / PN ) / ( AMS + ( FirstVNF_Mem + ( FirstVNF_RAM_Server - CRS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( ( ( ( ( CS + CS ) - ( MLU * DS ) ) + MUM ) + RMSe ) - MUC ) ,Max( CS,( Max( Min( MUM ,MLU ),( MLU / CS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6051165467394144}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) + BR ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,( RRSe * MLU ) ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.18314508849632016}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( CS * ( MUM * MLU ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.8441295546558705, "obj2": 0.0827622918656507}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + AMS ) ) ) ) + BR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( CS + MUC ) / Max( RRSe,MUM ) ) ,RCSe ) ,( Min( Max( Max( RMSe,MUM ),( RRSe - MLU ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.38461538461538464, "obj2": 0.5344672748405177}, {"determining": "( ( ( AMS + ( AMS * ( AMS - ( DDR - FirstVNF_Mem ) ) ) ) + Min( FirstVNF_Mem_Server ,ARS ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( Max( Max( DS,RRSe ),DS ) - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) ) ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6212690165230366}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_CPU ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.6740890688259109, "obj2": 0.2088636727765393}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) + BR ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,( RRSe * MLU ) ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1800032378740629}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.97165991902834, "obj2": 0.009259081675092382}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Max( CRS,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),( MUM - MLU ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( RRSe - MUR ) )", "obj1": 0.8765182186234818, "obj2": 0.06849794024727202}, {"determining": "( Max( ( ( ( ( ( FirstVNF_Mem * Const ) * CRS ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ( ARS - CRS ) - FirstVNF_CPU ) / ( ( BR + ( DDR - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( CS,RCSe ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.951417004048583, "obj2": 0.022529834414083308}, {"determining": "Min( ( ( ACS + ARS ) - ( DDR / PN ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( CS * Max( MUM,( ( DS + MUC ) + ( DS / MLU ) ) ) ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.8866396761133604, "obj2": 0.049317076746902985}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( ( FirstVNF_CPU_Server * Const ),Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + ( MLU - ( RCSe / DS ) ) ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) ) )", "obj1": 0.9048582995951417, "obj2": 0.04180544988367757}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_RAM ) + MDR ) ,ARS ) ) ) ) - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( FirstVNF_Mem ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,MUR ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8319838056680162, "obj2": 0.09446400994299911}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MLU * ( ( MUM / ( ( MUR / RCSe ) * ( MLU / CS ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3511379033331216}, {"determining": "Min( ( FirstVNF_Mem_Server / ( DDR + Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - DS ) ,Max( Min( Min( RCSe ,( RRSe - MUM ) ) ,MUR ),Min( ( DS - ( RCSe * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.20647773279352227, "obj2": 0.7091375152693796}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_CPU_Server + DDR ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( Min( ( MLU - Max( DS,RRSe ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,( MLU * RRSe ) ) ) - ( DS + CS ) )", "obj1": 0.22672064777327935, "obj2": 0.6871296943477481}, {"determining": "( ( DDR / ( FirstVNF_Mem * ( MRS + FirstVNF_CPU ) ) ) * ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( ( CS * MUR ) + ( RMSe / CS ) ) - CS ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.7911411019812675}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,Max( RRSe,MUM ) ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8603238866396761, "obj2": 0.08097440337448163}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - ( FirstVNF_Mem + Min( MDR ,( ARS / FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.9311740890688259, "obj2": 0.032877465689395854}, {"determining": "( ( Max( FirstVNF_Mem,( AMS + ( Max( Min( ( AMS + FirstVNF_RAM ) ,Min( Const ,FirstVNF_CPU_Server ) ),( ( RRS / CRS ) * ARS ) ) * ( FirstVNF_CPU_Server - ( DDR - PN ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ( FirstVNF_Mem + FirstVNF_RAM ) - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,Min( ( RRSe * ( RRSe + Min( MLU ,MUR ) ) ) ,MLU ) ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( MLU * ( Min( ( Max( ( MUM - RRSe ),Max( MUM,MUM ) ) / Min( DS ,Min( RMSe ,DS ) ) ) ,( MLU / RCSe ) ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4898785425101215, "obj2": 0.3478729988989306}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( DS + DS ) * ( MLU / CS ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01483433242283356}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ( PN * FirstVNF_CPU_Server ) ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RCSe + Min( RRSe ,DS ) ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + DS ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.13430662759881984}, {"determining": "Min( Min( Min( DDR ,DDR ) ,FirstVNF_RAM ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),AMS ) + FirstVNF_Mem ) * FirstVNF_RAM ) )", "choosing": "( ( MUR * ( ( ( RCSe - RMSe ) / Min( MUC ,MUR ) ) + ( MUM + CS ) ) ) - ( DS + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.7000318692184021}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( PN,( FirstVNF_CPU_Server * Const ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,ARS ) - FirstVNF_CPU_Server ) ) ) ) / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( ( ( MUM - CS ) - ( ( DS + Min( RRSe ,( DS + MUR ) ) ) * RMSe ) ) + RRSe ) * Min( RRSe ,RRSe ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7273121994007297}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Const,Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( ( MUC - RMSe ) - Max( ( MUC - MLU ),( MUM * MUR ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1720647773279352, "obj2": 0.7362297991952368}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) + Min( FirstVNF_Mem_Server ,ARS ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) ) ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6097291206863975}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( ARS + MDR ) ) ,CRS ) ) ) * ARS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Min( RRSe ,( DS + Min( MUC ,CS ) ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.582995951417004, "obj2": 0.26844614838823444}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * ( ( FirstVNF_Mem / MRS ) * FirstVNF_RAM ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( ( ARS / CRS ) ,ARS ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + ( RRSe * RMSe ) ) * RMSe ) ) + Max( CS,MUC ) ) * Min( RRSe ,RRSe ) )", "obj1": 0.757085020242915, "obj2": 0.14372132788297898}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,BR ) * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / CRS ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,Max( ( RMSe / MUC ),RCSe ) ) + MUC ) / ( CS * ( RCSe * Max( ( Min( MUR ,( MUC / CS ) ) - MUR ),CS ) ) ) ) - ( DS + CS ) )", "obj1": 0.2894736842105263, "obj2": 0.6256056442370455}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( ( MUR / RCSe ) * ( MLU / CS ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) ) ) ) + ( ( ( AMS + ( AMS * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + AMS ) ) ) ) + BR ) * ( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( ( CS + MUC ) / Max( RRSe,MUM ) ) ,RCSe ) ,( Min( Max( Max( RMSe,MUM ),( RRSe - MLU ) ) ,MUR ) - ( CS * MUR ) ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.8724696356275303, "obj2": 0.075642804486644}, {"determining": "Min( Max( ( FirstVNF_Mem - ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( ( PN + RRS ) * Const ) * AMS ) ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( ( ( ( MUC + MLU ) * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.15991902834008098, "obj2": 0.7542304121792032}, {"determining": "( ACS - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.023181700990817233}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( CRS ,( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - Min( ( DS * MLU ) ,RCSe ) ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7201883540447072}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( FirstVNF_CPU_Server + CRS ) / ACS ) ) ) + ( ( ACS + ARS ) - ( Max( MRS,( FirstVNF_RAM_Server + ( CRS / RRS ) ) ) / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + Max( DS,( RMSe / RMSe ) ) ) * ( MUM / ( MUC * ( MUM + MLU ) ) ) )", "obj1": 0.7489878542510121, "obj2": 0.1539954693395091}, {"determining": "Min( Min( ( Const * ( MRS + MDR ) ) ,CRS ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / ( ( PN * AMS ) * FirstVNF_Mem_Server ) ) ) / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( ( ( ( MLU - ( DS / DS ) ) + MUC ) * RMSe ) / ( RMSe / ( MLU + ( ( CS / CS ) / ( MUC / MUR ) ) ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7323869182777422}, {"determining": "( Min( DDR ,( Const + ( Min( Min( CRS ,( FirstVNF_RAM * BR ) ) ,RRS ) / FirstVNF_RAM ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( DS * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - DS ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.52834008097166, "obj2": 0.3187229714217862}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + ( MRS - ( Max( FirstVNF_CPU,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( Min( CS ,MLU ) / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( Min( DS ,( ( MLU - MUC ) / MUC ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU_Server + ( ( ( DDR * MRS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / ( FirstVNF_Mem * ARS ) ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,( ( ( Max( MUR,RCSe ) - RMSe ) / Min( MUM ,( RRSe - MUM ) ) ) / DS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) ) - ( DS + ( MUC + ( MUR - ( RRSe - RMSe ) ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6256056442370455}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( ( ( Const * FirstVNF_CPU ) / FirstVNF_CPU ) * FirstVNF_RAM ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( MUC * ( RRSe - RCSe ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,ARS ) ) ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,DS ) ) ) ,MLU ),( RCSe / ( DS + RRSe ) ) ) * DS ) * ( DS + MUR ) ) )", "obj1": 0.9352226720647774, "obj2": 0.027809805714522674}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( MRS + MDR ) ) ,CRS ) ) ) * ARS ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server - Const ) ) + MRS ) ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - RCSe ) + MUC ) * RMSe ) ) + RRSe ) * Max( MUM,MUR ) )", "obj1": 0.7469635627530364, "obj2": 0.15456856348971854}, {"determining": "( ( ACS / CRS ) + ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( ( MUM - Min( DS ,Max( RRSe,( MUR * MUC ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.745387842341789}], "19": [{"determining": "( ( Max( MRS,FirstVNF_CPU_Server ) - MDR ) + ( FirstVNF_CPU + Min( ( FirstVNF_CPU * Max( BR,( CRS + Const ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe - MUC ) * ( MUR - RMSe ) ) - Max( Min( ( ( ( DS * RRSe ) + ( RMSe - RMSe ) ) + DS ) ,MLU ),DS ) ) + RRSe ) * Min( CS ,MUM ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( AMS + ( AMS * ( FirstVNF_CPU + ( FirstVNF_Mem_Server + AMS ) ) ) ) + BR ) * ( ARS - ( MRS + ( FirstVNF_CPU_Server + ARS ) ) ) )", "choosing": "Min( Max( Max( ( RCSe * Min( ( RRSe * MUC ) ,RMSe ) ),MUC ),RCSe ) ,( Min( Max( Max( RMSe,MUM ),( RRSe - MLU ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( ( PN + RRS ) * Const ) * AMS ) ) - ( ( Const * AMS ) + MDR ) )", "choosing": "( ( Max( RMSe,Min( CS ,( MUC + MLU ) ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ACS + ARS ) - ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) + PN ) + CRS ) ) )", "choosing": "( ( Max( CS,( RRSe + RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + CS ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( FirstVNF_CPU_Server - ( ( Const * AMS ) + MDR ) )", "choosing": "( ( Max( RMSe,Min( CS ,RRSe ) ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( ( ( CS + RCSe ) + DS ) / ( MUC / ( DS + DS ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.4352226720647773, "obj2": 0.4639241261055161}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ( ( PN + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) * FirstVNF_CPU_Server ) ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RCSe + Min( RRSe ,DS ) ) * RMSe ) ) + RRSe ) * Min( Min( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) ,RCSe ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5044110901134224}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( ( ( ARS * ( ARS - MRS ) ) / MRS ),( CRS - FirstVNF_CPU ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem_Server / MDR ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( ( MUM / RMSe ) - MUC ) ),MUM ) ) ) - ( MUR * DS ) )", "obj1": 0.4493927125506073, "obj2": 0.3676160265169858}, {"determining": "( ( ( FirstVNF_RAM / RRS ) / ( ARS + RRS ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( Max( RRSe,Max( ( MUM / ( MUR - DS ) ),MLU ) ) - ( ( ( MLU - ( RCSe / DS ) ) + ( Min( RRSe ,MUR ) * ( MUM * MLU ) ) ) * RMSe ) ) + RRSe ) * Max( MUM,MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.47891506367418196}, {"determining": "( ( Min( CRS ,( FirstVNF_RAM * BR ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( ( Max( MUC,CS ) * ( RMSe - CS ) ) / MLU ),MUM ) ) ,RRSe ) ) ,( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.3623481781376518, "obj2": 0.5567233309200659}, {"determining": "Min( Max( RRS,PN ) ,( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( ARS - ACS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( ( RCSe + RRSe ) / MUC ) - Max( CS,RCSe ) ) / RMSe ),CS ) ) ,Min( MUR ,( MUC / CS ) ) ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.6336032388663968, "obj2": 0.23417600353506848}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( Const + ( MRS - ( Max( ACS,RRS ) + ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( MUM * MLU ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,RMSe ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.22912307912531715}, {"determining": "Min( ( ( ACS * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + BR ) ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - AMS ) - Min( Max( ( Const - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + ARS ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( RRSe ,RRSe ) ,RRSe ) ) - Max( Max( ( RCSe * Min( ( RRSe * ( ( RCSe / RCSe ) + ( RMSe / RRSe ) ) ) ,RMSe ) ),MUC ),RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6712495276617411}, {"determining": "Min( ( Min( MDR ,Min( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( RRS + ( FirstVNF_RAM_Server - CRS ) ) ) ,ARS ) ) * ( ( CRS * ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server + MDR ) - FirstVNF_CPU_Server ) ) ) + MDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,( CS * ( RCSe * ( MUR + ( MLU / MLU ) ) ) ) ) ),Max( Min( RRSe ,MLU ),( MUC - DS ) ) ) - ( ( RRSe * RCSe ) - ( RCSe + ( Max( MUR,( MUM - Max( RMSe,RCSe ) ) ) - MLU ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.7693965175323194}, {"determining": "( ( PN + BR ) * ( ( Max( AMS,FirstVNF_RAM ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Max( MUM,( CS - RMSe ) ) ,MUM ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.597165991902834, "obj2": 0.2579869146809861}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ( ( MDR * DDR ) * ( MRS + PN ) ) / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( ( Min( RCSe ,MLU ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ),Min( CS ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2591093117408907, "obj2": 0.6469265039851523}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) ,( ( PN - Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( MUC / RRSe ) ) * RMSe ) ) ) ) )", "obj1": 0.7975708502024291, "obj2": 0.11611580066702537}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * ( ( FirstVNF_Mem / MRS ) * FirstVNF_RAM ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - Min( ( Const * ( ARS + MDR ) ) ,CRS ) ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + ( RRSe * RMSe ) ) * RMSe ) ) + Max( CS,MUC ) ) * Min( CS ,RRSe ) )", "obj1": 0.7773279352226721, "obj2": 0.12728397414463377}, {"determining": "Min( Max( ( FirstVNF_Mem - ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( ( PN + RRS ) * Const ) * AMS ) ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ),Min( Min( ( MLU - CS ) ,Max( ( ( ( MUC + MLU ) * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.15991902834008098, "obj2": 0.7542304121792032}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( ( ACS + FirstVNF_CPU_Server ) - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( Min( ( RRSe * ( ( MUM / RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,( Min( MUM ,MUR ) - ( MLU - ( DS / ( MLU / ( Min( ( RCSe * CS ) ,( MUM * RCSe ) ) * RCSe ) ) ) ) ) )", "obj1": 0.32388663967611336, "obj2": 0.5894163890033437}, {"determining": "Min( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - DS ) ,Max( Min( DS ,MUR ),Min( ( DS - ( RCSe * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.31376518218623484, "obj2": 0.6036597776706599}, {"determining": "Min( ( FirstVNF_Mem_Server / ( DDR + Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ACS ) ) ,( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - DS ) ,Max( Min( Min( RCSe ,( RRSe - MUM ) ) ,MUR ),Min( ( DS - ( RCSe * MUR ) ) ,RRSe ) ) ) ,Min( ( Min( Min( ( MUR * MUR ) ,DS ) ,RMSe ) - CS ) ,Max( RRSe,MUM ) ) ) ) - ( DS + CS ) )", "obj1": 0.2145748987854251, "obj2": 0.6960341214868918}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5731731628090895}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( ARS + MDR ) ) ,CRS ) ) ) * ARS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Min( RRSe ,( DS + Min( MUC ,CS ) ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.582995951417004, "obj2": 0.26844614838823444}, {"determining": "( ( ( Const + ( Min( Min( CRS ,( AMS / Max( AMS,ARS ) ) ) ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,Max( RRS,FirstVNF_RAM_Server ) ) + PN ) + CRS ) )", "choosing": "( ( MUR - CS ) - ( Max( CS,( ( MUR - ( MUR - RRSe ) ) + RMSe ) ) + ( MLU / DS ) ) )", "obj1": 0.13562753036437247, "obj2": 0.7839408520345561}, {"determining": "Min( ( FirstVNF_Mem_Server / ( DDR + Min( MDR ,Min( ( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + MDR ) ,( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - DS ) ,Max( Min( Min( RCSe ,( RRSe - MUM ) ) ,MUR ),Min( ( DS - ( RCSe * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.20647773279352227, "obj2": 0.7091375152693796}, {"determining": "( ( PN + ( MDR / ( ( FirstVNF_RAM + ARS ) * Min( MDR ,FirstVNF_CPU ) ) ) ) * Max( MRS,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( ( DS * RRSe ) + CS ) + DS ) ,RCSe ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( ( MLU - RMSe ) * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.2995182666933963}, {"determining": "Max( Max( Max( ( ( Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_RAM ) * FirstVNF_Mem ) * FirstVNF_Mem ),MRS ),( ( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( MRS ,( Max( MDR,FirstVNF_CPU_Server ) + ( MDR * ARS ) ) ) + FirstVNF_CPU_Server ) * DDR ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,PN ) ),Max( DDR,Max( ( DDR + Const ),AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,RCSe ) / ( Max( ( Min( ( MUC * RMSe ) ,CS ) * RCSe ),Min( MUR ,Max( DS,RCSe ) ) ) * ( Min( ( MUC / RCSe ) ,Min( MUM ,DS ) ) * ( ( DS / MLU ) + RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8586703421253005}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * ( ARS - ACS ) ) ) * ARS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Min( MUC ,( DS + MUR ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5769230769230769, "obj2": 0.2785939979491737}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( MRS ,( AMS + ARS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - Min( ( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM ) ,Min( PN ,PN ) ) ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + Max( DS,( ( CS / RCSe ) - ( MLU / DS ) ) ) ) ) ) - ( CS * Max( DS,RCSe ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.800396967998168}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ( PN * FirstVNF_CPU_Server ) ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RCSe + Min( RRSe ,DS ) ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MUM / ( Min( RMSe ,RCSe ) + DS ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.13430662759881984}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) + ( ( ( AMS / FirstVNF_CPU ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ) * RMSe ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.3016194331983806, "obj2": 0.6101770311323608}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( MDR * ( ( FirstVNF_Mem / MRS ) * FirstVNF_RAM ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( ( ARS / CRS ) ,ARS ) - FirstVNF_CPU_Server ) ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + ( RRSe * RMSe ) ) * RMSe ) ) + Max( CS,MUC ) ) * Min( RRSe ,RRSe ) )", "obj1": 0.757085020242915, "obj2": 0.14372132788297898}, {"determining": "( ( ( PN + BR ) * ( ARS - FirstVNF_RAM_Server ) ) * ( ARS - Min( ( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM ) ,Min( PN ,PN ) ) ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( MUR - ( CS * Max( DS,RCSe ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.3244025181549311}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM,Min( AMS ,BR ) ) * ( MRS - AMS ) ) ) )", "choosing": "( Min( ( ( ( DS / CS ) / ( Min( ( RMSe - MUR ) ,MUC ) - MUR ) ) + DS ) ,( MUC * ( Min( MUR ,RCSe ) / CS ) ) ) * ( DS / ( ( RRSe / CS ) * MUC ) ) )", "obj1": 0.6234817813765182, "obj2": 0.25020038076972356}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * Min( FirstVNF_Mem_Server ,ARS ) ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,DS ) ) ) ,MLU ),Max( Max( DS,RRSe ),DS ) ) * DS ) * ( DS + MUR ) ) )", "obj1": 0.917004048582996, "obj2": 0.034105568468993035}, {"determining": "Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server / ( Min( MRS ,( AMS + ARS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) ) ) * ( ARS - ACS ) ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,Min( MUM ,DS ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.45546558704453444, "obj2": 0.36472982959036393}, {"determining": "( ( Min( CRS ,( FirstVNF_RAM * BR ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( FirstVNF_Mem * PN ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( ( ( Max( MUC,CS ) * ( RMSe - CS ) ) / MLU ),MUM ) ) ,RRSe ) ) ,( ( DS / ( Min( ( DS * MLU ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) )", "obj1": 0.5647773279352226, "obj2": 0.2875104410019362}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) / ( ACS * ARS ) ) ) + Min( DDR ,( Const + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( CS * ( MUM * MLU ) ),( Min( CS ,RCSe ) / ( CS * ( ( MUC / RCSe ) * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.8603238866396761, "obj2": 0.0687602017691819}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( CS - ( ( ( MLU - ( RCSe / DS ) ) + MUC ) * RMSe ) ) ,RCSe ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5546558704453441, "obj2": 0.29105589900457474}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ( MDR - MRS ) ) ) * Min( ( Const * ( DDR + MDR ) ) ,CRS ) ) ) * ARS ) ) )", "choosing": "( ( ( RRSe - RMSe ) - Max( ( MLU - ( ( MUM * MUR ) * RRSe ) ),Max( ( Max( MUM,MUR ) + DS ),( ( Max( RMSe,RRSe ) / ( MUC + Min( CS ,RRSe ) ) ) + MLU ) ) ) ) * RRSe )", "obj1": 0.6174089068825911, "obj2": 0.25299010867944205}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,Const ) ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( DS + DS ) * ( MLU / CS ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01483433242283356}, {"determining": "Max( ( DDR - RRS ),Min( ( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + CRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( CS ,RCSe ) / ( ( ( MUR / MUR ) * ( Max( MUM,( ( RMSe * MUR ) * Min( RCSe ,MLU ) ) ) / ( DS * Min( RCSe ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.08704453441295547, "obj2": 0.8707222303877917}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ARS ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( RCSe / DS ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8319504916092222}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( PN,( FirstVNF_CPU_Server * Const ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( Min( ( MDR * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,ARS ) - FirstVNF_CPU_Server ) ) ) ) / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( ( ( MUM - CS ) - ( ( DS + Min( RRSe ,( DS + MUR ) ) ) * RMSe ) ) + RRSe ) * Min( RRSe ,RRSe ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7273121994007297}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( ( MRS + MDR ) / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( ( Min( RCSe ,MLU ) - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ),Min( ( ( CS - ( ( ( MLU - RCSe ) + MUC ) * RMSe ) ) + RRSe ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.2813765182186235, "obj2": 0.6376166817037812}, {"determining": "( ( ARS * Max( ( ARS - Max( PN,FirstVNF_CPU ) ),Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_Mem ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( ( CS / DS ),DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.7125506072874493, "obj2": 0.19629172797244085}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( Max( CRS,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) ) ) ) + ( ( MDR * DDR ) * Max( ( ARS * Const ),BR ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( Max( CS,RCSe ) - CS ) + MUM ) + RMSe ) - MUC ) ,Max( MUR,( Max( Min( MUM ,MLU ),( MUM - MLU ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( RRSe - MUR ) )", "obj1": 0.8765182186234818, "obj2": 0.06849794024727202}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU + ( ( ( ( ARS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( MLU - ( DS + CS ) )", "obj1": 0.27125506072874495, "obj2": 0.639669007413177}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,( FirstVNF_Mem_Server * BR ) ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( AMS + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( Min( RCSe ,RMSe ) + DS ) / RRSe ) + DS ) ,( RCSe / ( DS + MUR ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.816916204546534}, {"determining": "( ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( RCSe - ( ( DS + Min( RRSe ,( DS + CS ) ) ) * RMSe ) ) + RRSe ) * Min( RRSe ,RRSe ) )", "obj1": 0.8319838056680162, "obj2": 0.0940478745846571}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM / ( Const - ARS ) ) )", "choosing": "( Min( Min( Max( MUR,( MUR - RRSe ) ) ,MUM ) ,( MUC * ( MLU / CS ) ) ) * RRSe )", "obj1": 0.6983805668016194, "obj2": 0.1968033525711372}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( FirstVNF_CPU + MRS ) - BR ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RRSe * ( MUR / RCSe ) ) - MLU ),RCSe ),( Max( CS,RCSe ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.16736296817930532}, {"determining": "( ACS - ( ( ( DDR / PN ) * Min( MDR ,Min( ( ACS + MDR ) ,ARS ) ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( Max( ( RCSe * ( MUR + ( MUM / Max( DS,RRSe ) ) ) ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.6700404858299596, "obj2": 0.2120803900393305}, {"determining": "( ( ACS / CRS ) + ( FirstVNF_CPU_Server / ( Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * Min( ( ( MDR * DDR ) * Min( PN ,RRS ) ) ,( ARS * MRS ) ) ) ) * ARS ) ) )", "choosing": "( ( MUM - Min( DS ,Max( RRSe,( MUR * MUC ) ) ) ) - ( CS * RMSe ) )", "obj1": 0.1700404858299595, "obj2": 0.745387842341789}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( ( FirstVNF_CPU_Server * DDR ),Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + ( MLU - ( RCSe / DS ) ) ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * Max( Min( ( MLU - Max( DS,RRSe ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) )", "obj1": 0.8522267206477733, "obj2": 0.07856937441515019}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( Max( Max( RRS,FirstVNF_Mem_Server ),Const ) * ARS ) ) ) + Min( DDR ,( ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,MUR ) * ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.97165991902834, "obj2": 0.009259081675092382}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,( ARS / ( ( FirstVNF_CPU_Server * PN ) / MDR ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,DS ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.23481781376518218, "obj2": 0.6773351643074653}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( FirstVNF_CPU + MRS ) - ( DDR - PN ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) - ( AMS / ACS ) ) + ( Min( ( ( DDR + CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RRSe * ( MUR / RCSe ) ) - MLU ),RCSe ),Min( ( MUR - ( ( RCSe * RRSe ) * ( CS - RMSe ) ) ) ,RRSe ) )", "obj1": 0.8016194331983806, "obj2": 0.10593400413427242}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( MRS - MDR ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + ( MRS - ( Max( FirstVNF_CPU,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( ( Min( CS ,MLU ) / ( Max( MUM,RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) ,( Min( Min( DS ,( ( MLU - MUC ) / MUC ) ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5822739102608213}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MLU * ( ( MUM / ( ( MUR / RCSe ) * ( MLU / CS ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3511379033331216}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8135168330169297}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) + BR ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,( RRSe * MLU ) ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.18314508849632016}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) + BR ) / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,( RRSe * MLU ) ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1800032378740629}, {"determining": "( ( DDR / ( FirstVNF_Mem * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( Min( MDR ,Min( FirstVNF_Mem_Server ,ARS ) ) * ( FirstVNF_CPU_Server * Const ) ) ) ) ) ) * ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( FirstVNF_CPU / ( AMS + ( Min( ( FirstVNF_RAM_Server - ARS ) ,AMS ) * ( ( FirstVNF_Mem * Const ) * AMS ) ) ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( ( ( MUC + DS ) / RRSe ) + DS ) ,( RCSe / ( RRSe + Min( RRSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8351746843466601}, {"determining": "( ( ( AMS + ( AMS * ( AMS - ( DDR - FirstVNF_Mem ) ) ) ) + Min( FirstVNF_Mem_Server ,ARS ) ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( Max( Max( DS,RRSe ),DS ) - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( RCSe / ( DS + RRSe ) ) ) ) ) ) ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6212690165230366}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( PN - Min( ( MRS - ARS ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MLU * ( ( MUM / ( ( MUR / RCSe ) * ( MLU / CS ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( Min( RCSe ,MLU ) - ( ( ( MUC / Max( CS,RCSe ) ) + CS ) + MUC ) ) - ( CS * MUR ) ) )", "obj1": 0.5080971659919028, "obj2": 0.3297740116553736}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + Min( ( MLU - CS ) ,Max( Min( MUC ,DS ),MUM ) ) ) ),Min( ( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.16558101343340664}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - FirstVNF_CPU ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( RRS,FirstVNF_CPU_Server ) ) - ( AMS / ACS ) ) + ( Min( ( Max( MRS,CRS ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( MLU + RMSe ) - MUC ) ,Max( MUR,( Max( Min( RCSe ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) * MLU ) ),( ( ( ( DS / CS ) / RCSe ) + DS ) * ( MLU / CS ) ) )", "obj1": 0.6740890688259109, "obj2": 0.2088636727765393}, {"determining": "Min( Min( ( Const * ( MRS + MDR ) ) ,CRS ) ,( FirstVNF_CPU + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / ( ( PN * AMS ) * FirstVNF_Mem_Server ) ) ) / Max( Const,ARS ) ) ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( ( ( ( ( MLU - ( DS / DS ) ) + MUC ) * RMSe ) / ( RMSe / ( MLU + ( ( CS / CS ) / ( MUC / MUR ) ) ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7323869182777422}, {"determining": "( Max( ( ( ( ( ( FirstVNF_Mem * Const ) * CRS ) + FirstVNF_Mem ) * FirstVNF_CPU ) - FirstVNF_RAM_Server ),Min( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ( ARS - CRS ) - FirstVNF_CPU ) / ( ( BR + ( DDR - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - ( DDR - ARS ) ) ) ) ) ) + Min( DDR ,( ( ( FirstVNF_RAM * Max( DDR,ARS ) ) - ( AMS / ACS ) ) + ( Min( ( ( MDR * FirstVNF_CPU_Server ) * RRS ) ,AMS ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( ( DS + MUC ) ,MLU ),Max( CS,RCSe ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) ,Max( MUR,( Max( Min( ( RRSe / MUM ) ,MUC ),Max( MUR,DS ) ) * ( DS + MUC ) ) ) ) * ( MUM * MLU ) ),( ( Max( Min( ( RRSe * ( RCSe / ( DS + RRSe ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) )", "obj1": 0.951417004048583, "obj2": 0.022529834414083308}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + ( FirstVNF_CPU_Server + DDR ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( Min( ( MLU - Max( DS,RRSe ) ) ,MUR ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,( MLU * RRSe ) ) ) - ( DS + CS ) )", "obj1": 0.22672064777327935, "obj2": 0.6871296943477481}, {"determining": "( ( DDR / ( FirstVNF_Mem * ( MRS + FirstVNF_CPU ) ) ) * ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( DS + MUR ) * RMSe ) + ( ( DS / RMSe ) / Min( ( MUM + DS ) ,( Min( Min( RCSe ,RRSe ) ,MUR ) / ( ( ( CS * MUR ) + ( RMSe / CS ) ) - CS ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.7911411019812675}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server / ( Max( Max( ( ARS - FirstVNF_CPU ),FirstVNF_Mem_Server ),Max( Max( RRS,FirstVNF_Mem_Server ),CRS ) ) * ARS ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( ( ( DS + Max( MUM,RRSe ) ) * RMSe ) + Min( ( DS + MUR ) ,MLU ) ),Min( ( DS - CS ) ,( DS / CS ) ) ) ) ,RRSe ) * RRSe )", "obj1": 0.5323886639676113, "obj2": 0.3070836179807201}, {"determining": "Min( ( ( ACS + ARS ) - ( DDR / PN ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Max( AMS,( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( MLU - CS ) ,Max( ( CS * Max( MUM,( ( DS + MUC ) + ( DS / MLU ) ) ) ),MUM ) ) ,MLU ) + ( ( DS / RMSe ) / Max( RRSe,MUM ) ) )", "obj1": 0.8866396761133604, "obj2": 0.049317076746902985}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( MDR * ( ARS + MDR ) ) ,CRS ) ) ) * ARS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( Min( RRSe ,( DS + Min( MUC ,CS ) ) ) ,MUR ) - ( CS * ( DS + MUC ) ) ) )", "obj1": 0.48582995951417, "obj2": 0.33981050928994727}, {"determining": "( ACS - ( ( ( DDR / PN ) * Min( MDR ,Min( Max( Max( MDR,BR ),CRS ) ,ARS ) ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MUR ) * ( MUM * MLU ) ),( ( Max( ( RCSe * ( MUR + ( MLU / Max( DS,RRSe ) ) ) ),Max( ( MUC - MLU ),( MUM * MUR ) ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.6842105263157895, "obj2": 0.19898843288900878}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( ( ( FirstVNF_Mem_Server * DDR ) * ( MRS + PN ) ),Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + ( MLU - ( RCSe / DS ) ) ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( RRSe * ( MLU / RMSe ) ) * RMSe ) ) ) ) )", "obj1": 0.9048582995951417, "obj2": 0.04179018971901844}, {"determining": "( ( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * Min( FirstVNF_Mem_Server ,ARS ) ) ) ) ) + FirstVNF_Mem ) ) - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( FirstVNF_CPU_Server - RRS ) ) ) ) ) + ( MRS - Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + Min( ( MLU - CS ) ,Max( ( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( DS + MUC ) ),MUM ) ) ) ),Min( ( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.0049401924002240305}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( FirstVNF_CPU / ( AMS + ( AMS * ( ( ARS - FirstVNF_Mem ) - RRS ) ) ) ) ) + ( MRS - Min( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) ) ) ) )", "choosing": "Max( Max( RMSe,( Max( MUC,MUR ) + Min( ( MLU - CS ) ,Max( Min( MUC ,MLU ),MUM ) ) ) ),Min( ( ( ( Max( Min( ( RRSe + MUC ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / Min( CS ,( MUR / RCSe ) ) ) ) / MUC ) ,( MUC + Max( RRSe,( MUR * MUC ) ) ) ) )", "obj1": 0.8137651821862348, "obj2": 0.10250127097306358}, {"determining": "( ( Min( CRS ,( FirstVNF_RAM * BR ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + ( ( FirstVNF_RAM_Server - ARS ) * PN ) ) ) * ( ARS - ACS ) )", "choosing": "Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( MUC + MLU ) )", "obj1": 0.5263157894736842, "obj2": 0.31281007935957605}, {"determining": "Min( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem_Server * MRS ) ,BR ) ) ) ,Max( ( CRS + ( ( ( RRS + ( MRS / ACS ) ) / ( ACS - AMS ) ) + FirstVNF_RAM_Server ) ),( ( RRS - Max( ( ( RRS + CRS ) + DDR ),( ( ( PN - MDR ) * PN ) * FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( Min( ( RCSe / Min( MLU ,RCSe ) ) ,RMSe ) + CS ) ) / ( ( ( Min( CS ,MUC ) + MUM ) * ( MUR * RRSe ) ) * RCSe ) )", "obj1": 0.09109311740890688, "obj2": 0.8622269982661376}, {"determining": "( Min( DDR ,( Const + ( Min( Min( CRS ,Const ) ,RRS ) / FirstVNF_RAM ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( DS * ( ( MUC / RCSe ) - MUM ) ) ,Min( ( MUR * ( ( MUC / MUC ) - MUM ) ) ,MUR ) ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3390274304612599}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( ( ( Const * FirstVNF_CPU ) / FirstVNF_CPU ) * FirstVNF_RAM ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( MUC * ( RRSe - RCSe ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - ( FirstVNF_Mem + Min( MDR ,( ARS / FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( ( ( Min( ( MUC * RCSe ) ,Min( MUC ,RRSe ) ) - ( CS - DS ) ) + DS ) / ( MUR * ( MUM / DS ) ) ) ) + RRSe ) * ( MLU - CS ) )", "obj1": 0.9311740890688259, "obj2": 0.032877465689395854}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ,( ( PN - Max( ( FirstVNF_CPU_Server * Const ),Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( Max( ( ( MRS - Const ) * FirstVNF_RAM ),Max( BR,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( DDR / PN ) ) )", "choosing": "( Min( Min( ( MUR * MUR ) ,DS ) ,RMSe ) * ( ( CS + CS ) + ( MLU - Min( MUM ,( ( RRSe * ( MUC / RRSe ) ) * RMSe ) ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.049197461113939696}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server * ( DDR / PN ) ) / MDR ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( CS - ( ( ( CS + CS ) + MUC ) * RMSe ) ) ,RCSe ) ,( Min( Min( RRSe ,MUR ) ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33588802112626925}, {"determining": "( ( FirstVNF_Mem + MDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,MUR ) - Max( DS,Max( RCSe,MLU ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5740482690518757}, {"determining": "( ( ( ARS / FirstVNF_Mem_Server ) - Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RRSe / ( Max( ( DS + MUC ),RRSe ) / ( MUC - MUC ) ) ) / MUC ) ) + RRSe ) * Min( RRSe ,RRSe ) )", "obj1": 0.8785425101214575, "obj2": 0.055484693064362496}, {"determining": "Min( Max( ( FirstVNF_Mem - ( ARS - Min( CRS ,BR ) ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( CRS ,( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( Max( MLU,DS ),Min( Min( ( MLU - Min( ( DS * MLU ) ,RCSe ) ) ,Max( ( ( RRSe * RRSe ) + MUM ),Min( ( DS - CS ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.20040485829959515, "obj2": 0.7201883540447072}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + ( FirstVNF_Mem * ( AMS + ( FirstVNF_RAM * Max( RRS,FirstVNF_Mem_Server ) ) ) ) ) ) * ( ARS - ACS ) )", "choosing": "Min( ( Min( ( MUR * ( ( MUM / ( ( MUR / RCSe ) * ( MLU / CS ) ) ) - MUM ) ) ,MUR ) / ( MLU - MLU ) ) ,( ( MLU * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) - ( CS * MUR ) ) )", "obj1": 0.4716599190283401, "obj2": 0.35503424393203986}, {"determining": "( ( ( ( FirstVNF_CPU_Server + Min( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( RRSe / ( Max( MUM,Min( MUM ,MUR ) ) / ( MUC - MUC ) ) ) / MUC ) ) + RRSe ) * Min( RRSe ,RRSe ) )", "obj1": 0.9352226720647774, "obj2": 0.02531393636766479}, {"determining": "( ACS - ( ( ( DDR / PN ) * ( ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / Max( Const,ARS ) ) / ( Max( Max( RRS,FirstVNF_Mem_Server ),Min( CRS ,( FirstVNF_RAM * BR ) ) ) * ARS ) ) ) + Min( DDR ,( Const + ( MRS - ( Max( ACS,RRS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Min( Max( ( RCSe - Max( CS,RCSe ) ),Min( Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ,RRSe ) ) ,( ( DS / ( Min( ( DS * RMSe ) ,RCSe ) + ( CS / MLU ) ) ) / RCSe ) ),( Min( CS ,RCSe ) / ( CS * ( RCSe * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) ) ) ) )", "obj1": 0.8441295546558705, "obj2": 0.0827622918656507}, {"determining": "( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( ( DS + Min( RRSe ,( DS + CS ) ) ) * RMSe ) ) + RRSe ) * Min( RRSe ,RRSe ) )", "obj1": 0.8157894736842105, "obj2": 0.09716745698456797}, {"determining": "( ( FirstVNF_CPU_Server + Min( ( ( ( MDR * DDR ) * ( ARS - ( MRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_RAM ,Max( DDR,Max( ( DDR + RRS ),AMS ) ) ) ) ,( ( PN - Max( PN,Max( CRS,Max( ARS,FirstVNF_Mem_Server ) ) ) ) / ACS ) ) ) + ( ( ACS + ARS ) - ( DDR / PN ) ) )", "choosing": "( ( ( ( ( RRSe * ( MLU + MUR ) ) + RMSe ) - ( ( DS + MUC ) * RMSe ) ) + RRSe ) * Max( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) - MUR ),CS ) )", "obj1": 0.8259109311740891, "obj2": 0.0952715667318867}, {"determining": "( ACS - ( ( ( DDR / PN ) * Max( FirstVNF_RAM,PN ) ) + Min( DDR ,( Const + ( BR - PN ) ) ) ) )", "choosing": "Max( ( Min( MLU ,RRSe ) / CS ),( ( Max( Min( ( RRSe * ( RRSe + Min( RRSe ,MUR ) ) ) ,MLU ),Max( MLU,DS ) ) * DS ) * ( MLU / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.023181700990817233}, {"determining": "( ( ( FirstVNF_RAM / RRS ) / ( ARS + RRS ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( Max( RRSe,Max( ( MUM / ( MUR - DS ) ),MLU ) ) - ( ( ( MLU - ( RCSe / DS ) ) + ( Min( RRSe ,MUR ) * ( MUM * MLU ) ) ) * RMSe ) ) + RRSe ) * Max( MUM,MUR ) )", "obj1": 0.7510121457489879, "obj2": 0.14962326072178853}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU_Server + ( ( ( DDR * MRS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( Min( AMS ,( FirstVNF_Mem_Server - Min( FirstVNF_Mem ,MDR ) ) ) / ( FirstVNF_Mem * ARS ) ) + ( FirstVNF_Mem_Server + ( Max( AMS,( ARS / FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,( ( ( Max( MUR,RCSe ) - RMSe ) / Min( MUM ,( RRSe - MUM ) ) ) / DS ) ) + MUC ) / ( CS * ( RCSe * Max( ( MLU - MUR ),CS ) ) ) ) - ( DS + ( MUC + ( MUR - ( RRSe - RMSe ) ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6256056442370455}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( MDR ,( ARS / ( ( FirstVNF_CPU_Server * Const ) / RRS ) ) ) ) ) ,( ARS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,Max( MLU,MUR ) ),Min( Min( ( MLU - CS ) ,Max( ( Min( ( MUC * RCSe ) ,MUC ) - ( ( MLU - CS ) - DS ) ),Min( ( DS - ( CS * MUR ) ) ,RRSe ) ) ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.22874493927125505, "obj2": 0.6852524158040693}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( ( FirstVNF_RAM_Server + Min( MRS ,ARS ) ),( ( FirstVNF_CPU_Server / ( ARS * ARS ) ) * Min( ( Const * ( MRS + AMS ) ) ,CRS ) ) ) * ARS ) ) + ( ( ( AMS / ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) / MDR ) - ( DDR / PN ) ) )", "choosing": "( ( ( CS - ( MLU - ( RCSe / DS ) ) ) + RRSe ) * Max( MUM,MUR ) )", "obj1": 0.7449392712550608, "obj2": 0.15615268200990323}, {"determining": "Min( Max( ( FirstVNF_Mem - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),Min( ( MDR * FirstVNF_RAM_Server ) ,( ( PN - FirstVNF_Mem ) / ACS ) ) ) ),Max( BR,FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),CRS ) )", "choosing": "( Max( Max( MLU,DS ),Max( ( RCSe * RMSe ),Max( Max( RCSe,( ( MUC - RMSe ) - ( Min( DS ,MUR ) * ( MUM * MLU ) ) ) ),MUM ) ) ) - ( DS + CS ) )", "obj1": 0.1720647773279352, "obj2": 0.7362297991952368}]}