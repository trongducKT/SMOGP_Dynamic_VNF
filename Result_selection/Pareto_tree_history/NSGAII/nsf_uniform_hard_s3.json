{"1": [{"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUR - RRSe ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUR * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( DDR / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS + CS ) ) ,( ( RMSe * MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),Max( FirstVNF_Mem_Server,MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - CS ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8160919540229885, "obj2": 0.1648122349647583}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( Min( RMSe ,CS ) + ( MUC * MLU ) ) ) )", "obj1": 0.8007662835249042, "obj2": 0.20311427967578483}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + RCSe ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Const ) + ( RRS - FirstVNF_RAM_Server ) ),Max( ( DDR + MRS ),( ACS + RRS ) ) ) + ( Max( ( MRS / MDR ),Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( PN,FirstVNF_RAM ),Max( RRS,PN ) ) ) )", "choosing": "Min( Max( ( ( RCSe * MUM ) + ( RRSe - RCSe ) ),Max( ( RMSe - RCSe ),Min( RRSe ,CS ) ) ) ,( Max( ( MLU * MLU ),Min( MLU ,MUC ) ) - ( ( MLU * MLU ) - Min( MLU ,MUM ) ) ) )", "obj1": 0.6436781609195402, "obj2": 0.26322126731945955}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.10968481745511574}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * DS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUR ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUR - RRSe ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( ( MDR - FirstVNF_CPU ) + ( ( FirstVNF_CPU + MRS ) - Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( MUC - Max( MUC,MUM ) ),( RMSe + MUR ) )", "obj1": 0.9904214559386973, "obj2": 0.011482526930651805}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.735632183908046, "obj2": 0.2090405744019218}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.10968481745511574}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.10968481745511574}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),( ( RMSe * CS ) / Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) )", "obj1": 0.7835249042145593, "obj2": 0.19058616883102072}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Const ) + ( RRS - FirstVNF_RAM_Server ) ),Max( ( DDR + MRS ),( ACS + RRS ) ) ) + ( Max( ( MRS / MDR ),Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( PN,FirstVNF_RAM ),Max( RRS,PN ) ) ) )", "choosing": "Min( Max( ( ( RCSe * MUM ) + ( RRSe - RCSe ) ),Max( ( RMSe - RCSe ),Min( RRSe ,CS ) ) ) ,( Max( ( MLU * MLU ),Min( MLU ,MUC ) ) - ( ( MLU * MLU ) - Min( MLU ,MUM ) ) ) )", "obj1": 0.6436781609195402, "obj2": 0.26322126731945955}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( Min( RMSe ,CS ) + ( MUC * MLU ) ) ) )", "obj1": 0.8486590038314177, "obj2": 0.1459466363017958}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.2766002829779474}, {"determining": "( Max( AMS,Min( MRS ,AMS ) ) / ( MDR - FirstVNF_CPU ) )", "choosing": "( ( MUC - ( CS * ( MUR + MLU ) ) ) - ( MUM + RRSe ) )", "obj1": 0.867816091954023, "obj2": 0.12811195242709386}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( Min( RMSe ,CS ) + ( MUC * MLU ) ) ) )", "obj1": 0.8065134099616859, "obj2": 0.17343958844387358}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),Max( AMS,MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - RMSe ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8199233716475096, "obj2": 0.1571486189421137}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU_Server ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * DS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - MDR ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUC ) ) ) ,Max( DS,MUR ) )", "obj1": 0.632183908045977, "obj2": 0.2735373338530645}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),Max( FirstVNF_Mem_Server,MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - CS ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8160919540229885, "obj2": 0.1648122349647583}, {"determining": "( Max( ( AMS * DDR ),( ARS - MDR ) ) + Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 0.6226053639846744, "obj2": 0.27609768634962617}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUR * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( DDR / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS + CS ) ) ,( ( RMSe * MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + RCSe ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUR ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( ( Min( MUC ,MUM ) + ( CS + MUR ) ) + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( ARS / MDR ) )", "choosing": "( ( CS + RCSe ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,AMS ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( ( RMSe / RRSe ) * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - RRSe ) - ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( DS * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / FirstVNF_Mem ) * ( RRS - BR ) )", "choosing": "( ( RCSe * MUC ) / ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( AMS - MDR ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( CS + RRSe ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS - FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) - Min( Max( FirstVNF_RAM_Server,PN ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + MUM ) ) ,( ( ( RMSe - MUR ) + ( RCSe + MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem ) - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,( ( MUC * MLU ) * ( RMSe * MUM ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( CS + MUC ) + ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( DDR / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS + CS ) ) ,( ( RMSe * MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,( AMS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + RMSe ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( DS - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + RCSe ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + MRS ) - ( ARS * ACS ) ) + ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( DS,MUR ) * ( RMSe * ( RMSe * MUM ) ) ) * ( ( DS - MUR ) * ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ACS ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + ACS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) * ( CS + CS ) ) ,( ( RMSe * MUM ) + ( ( Max( DS,MUR ) * ( RMSe * MLU ) ) * ( ( DS - MUR ) * ( RRSe * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) + ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( DS,MUR ) + ( RMSe * MLU ) ) * ( ( DS - MUR ) * ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( ( FirstVNF_RAM + RRS ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + Min( MDR ,CRS ) ) ) / ( ( ( BR / FirstVNF_Mem ) / Max( FirstVNF_CPU,AMS ) ) - ( ( MRS / FirstVNF_CPU ) + Max( RRS,AMS ) ) ) ) ,( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( RRS / RRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ),( CRS + FirstVNF_CPU_Server ) ) ) + ( Max( ( ACS + FirstVNF_RAM ),( RRS - BR ) ) - ( ( ACS / CRS ) / ( DDR * MDR ) ) ) ) ) * ( ( ( ( ( FirstVNF_CPU * CRS ) / Min( BR ,FirstVNF_CPU_Server ) ) - ( ( ACS - FirstVNF_RAM_Server ) - ( ARS + BR ) ) ) / Min( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),( BR - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( MRS * MDR ) ) ) ) / Max( Min( ( Min( Const ,Const ) + ( CRS + FirstVNF_RAM_Server ) ) ,( ( Const * CRS ) / ( MDR * BR ) ) ),( Min( ( DDR / FirstVNF_Mem_Server ) ,( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( ACS / FirstVNF_Mem ) ) ) ) ) ) ,( ( Min( Max( Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_CPU * ACS ) ),( Max( ACS,FirstVNF_Mem_Server ) + ( BR * ARS ) ) ) ,( ( ( RRS - Const ) - ( CRS + CRS ) ) + ( ( ARS - BR ) + Max( DDR,MRS ) ) ) ) - Min( Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,( FirstVNF_RAM_Server * DDR ) ),( ( AMS / FirstVNF_CPU ) / ( MRS / CRS ) ) ) ,Min( ( ( ACS + FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ,Max( ( MDR * PN ),( BR * MRS ) ) ) ) ) * ( ( ( Min( Min( CRS ,DDR ) ,( FirstVNF_CPU_Server + ARS ) ) / ( Min( FirstVNF_Mem ,Const ) / ( PN * AMS ) ) ) * ( Max( ( FirstVNF_RAM_Server / AMS ),( DDR + AMS ) ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( FirstVNF_Mem * AMS ) ) ) ) * ( ( ( ( AMS / ACS ) - ( DDR + FirstVNF_CPU_Server ) ) / ( ( ARS * FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM * AMS ) + Max( ACS,FirstVNF_CPU ) ) - ( ( RRS - FirstVNF_Mem ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ,Min( ( ( ( RCSe + RCSe ) * ( RMSe / DS ) ) / ( ( MUC + RMSe ) / Min( RRSe ,RCSe ) ) ) ,( ( ( RCSe + RRSe ) + Min( MLU ,RCSe ) ) + Min( ( DS - MUR ) ,( DS - DS ) ) ) ) ),Min( Min( ( ( ( MUM * MUR ) - Min( RMSe ,MLU ) ) - Max( ( RRSe + DS ),Min( CS ,DS ) ) ) ,Max( ( ( MLU * MUC ) / ( CS - DS ) ),Max( ( MLU - CS ),( RRSe - MUM ) ) ) ) ,( ( Max( ( MLU - RMSe ),( MUC / CS ) ) + ( ( RRSe - RCSe ) / Min( MLU ,CS ) ) ) - ( ( Min( RMSe ,RCSe ) / Min( RCSe ,RCSe ) ) / ( Max( MUC,MUM ) + ( MUM - RMSe ) ) ) ) ) ) * ( Min( ( ( ( ( MUM - RCSe ) * Min( RRSe ,DS ) ) - ( Min( CS ,DS ) * ( CS - RCSe ) ) ) + ( Max( ( RMSe - MLU ),( DS - RMSe ) ) - Max( ( RRSe - DS ),( RRSe + MUR ) ) ) ) ,Max( ( Min( ( MUM + MUR ) ,Min( CS ,RCSe ) ) + ( ( RMSe + CS ) * Min( RCSe ,MLU ) ) ),( Max( ( MLU * RMSe ),( CS / RCSe ) ) - ( ( MUC * RMSe ) / ( RRSe * MLU ) ) ) ) ) * ( ( ( Max( ( CS * CS ),( RMSe - CS ) ) - Min( Max( MUC,MLU ) ,( MLU + RCSe ) ) ) + Min( Max( Min( MUC ,MLU ),( MUM + DS ) ) ,( Min( MUR ,RMSe ) / ( MUC / RCSe ) ) ) ) / ( ( Max( ( MLU - MLU ),Min( RRSe ,RRSe ) ) + ( ( MLU + MUR ) * ( RRSe * CS ) ) ) - ( ( ( DS - CS ) / Max( MUM,RRSe ) ) + ( Max( MLU,MLU ) / Min( RCSe ,MUM ) ) ) ) ) ) ),( ( Min( ( Max( ( Min( MUM ,RCSe ) * ( CS / CS ) ),( ( RCSe * MUC ) + Min( MLU ,MUC ) ) ) * Min( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) ,( ( DS - MUM ) - Min( MLU ,MUC ) ) ) ) ,( ( ( ( MUM + RMSe ) / ( RRSe - RCSe ) ) - ( ( DS + MUC ) * Max( CS,MUC ) ) ) * ( ( Max( MUM,CS ) / Max( RCSe,CS ) ) + ( ( MUM / RMSe ) / ( RRSe - MUR ) ) ) ) ) + ( ( Max( Max( ( MUC + RRSe ),( DS / MUM ) ),Max( ( MUM + CS ),Min( RCSe ,RRSe ) ) ) + ( ( ( RMSe * MUR ) + ( MLU * RMSe ) ) - Max( Min( MUC ,MUC ),( DS + RRSe ) ) ) ) * ( ( ( ( MUM - RMSe ) - Max( DS,MUR ) ) / ( ( MUC / DS ) - ( MLU + MUM ) ) ) * Min( Min( Max( MLU,MUR ) ,( RCSe * RRSe ) ) ,( ( MUM / DS ) + Max( MUR,MUC ) ) ) ) ) ) / ( ( ( ( ( ( DS / MUR ) / Max( RRSe,DS ) ) / Max( ( DS * RMSe ),Min( RMSe ,RMSe ) ) ) + Max( Min( Min( MUM ,RRSe ) ,Min( RRSe ,RCSe ) ),Max( ( MUR * MUC ),Max( RMSe,CS ) ) ) ) - ( ( ( Max( MUC,DS ) + ( CS - MLU ) ) + ( ( CS / MUR ) / Max( RRSe,MUM ) ) ) - Max( ( ( RCSe * MUC ) - Min( RRSe ,RRSe ) ),( ( DS * MUM ) * ( MUR * CS ) ) ) ) ) / ( ( Min( ( Max( MUC,MLU ) * ( MLU * RCSe ) ) ,( ( MUM / MUM ) * ( RCSe + RMSe ) ) ) + ( Min( ( MLU * DS ) ,( RMSe - RRSe ) ) + ( Min( MUR ,CS ) - ( MUR / RRSe ) ) ) ) + Min( ( ( Max( MLU,MUR ) - ( CS / MUC ) ) * Min( Max( RCSe,MUC ) ,Max( MLU,MUR ) ) ) ,( Min( ( CS * DS ) ,( RRSe - MLU ) ) + Min( ( MUC + MUC ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "Max( ( MUC * ( MUM + CS ) ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( MLU / CS ) * ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,Const ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( Max( ( Max( Max( ( ( MUM / Min( MLU ,MUM ) ) * RRSe ),CS ),RRSe ) * ( MLU - CS ) ),MUC ) * Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( DDR - ( MDR - ARS ) ) ) - ( ARS + MDR ) )", "choosing": "( ( RRSe + MUR ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( ( MRS - RRS ) - ( ARS + MDR ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "Min( ( Min( Min( Min( ( ( ( DDR * BR ) - ( RRS - AMS ) ) - ( ( FirstVNF_CPU_Server - ACS ) + ( Const / FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) / ( PN - AMS ) ),( Min( FirstVNF_CPU ,MDR ) * ( MDR / MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / Const ) ),( ( FirstVNF_Mem_Server - MRS ) + ( DDR / AMS ) ) ) / ( Min( Min( MRS ,ARS ) ,( PN + DDR ) ) - ( Min( FirstVNF_RAM_Server ,ARS ) * ( Const / MRS ) ) ) ) ) ,( Min( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( MRS / MDR ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Min( ( Max( FirstVNF_Mem,BR ) + ( FirstVNF_CPU / ARS ) ) ,( ( RRS + PN ) / ( DDR - ACS ) ) ) ) - Min( ( ( ( FirstVNF_Mem - DDR ) / ( AMS + PN ) ) * ( Min( DDR ,ARS ) * Max( FirstVNF_RAM,MRS ) ) ) ,( Max( ( AMS - PN ),( RRS - PN ) ) - Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( AMS ,BR ) ) ) ) ) ) + ( Min( ( Max( ( ( ARS + FirstVNF_CPU ) / ( CRS * MDR ) ),Min( Max( MDR,ARS ) ,( Const * DDR ) ) ) - Min( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_RAM - FirstVNF_RAM ) ) ,( ( AMS + FirstVNF_CPU_Server ) + ( CRS + FirstVNF_CPU ) ) ) ) ,( ( Min( ( FirstVNF_RAM / ARS ) ,Min( BR ,FirstVNF_RAM ) ) * ( Max( CRS,MRS ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + AMS ) ) - ( ( FirstVNF_CPU_Server / MDR ) + ( PN * FirstVNF_Mem ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Min( DDR ,CRS ) ) * Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_CPU,AMS ) * ( ACS / PN ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( MRS - BR ) ) ) ) + ( ( ( ( CRS + DDR ) + Min( CRS ,DDR ) ) * Min( ( FirstVNF_CPU / AMS ) ,Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) + ( Max( ( ACS - FirstVNF_CPU ),( ACS + AMS ) ) / Max( ( FirstVNF_RAM_Server - MRS ),( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ) ,( Min( Min( Min( ( ( ( BR - CRS ) * ( FirstVNF_CPU * CRS ) ) / ( ( FirstVNF_CPU / MDR ) - ( AMS + FirstVNF_CPU ) ) ) ,Max( Max( ( BR + PN ),Min( ARS ,AMS ) ),( ( ACS / MRS ) + ( MDR - DDR ) ) ) ) ,( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( Max( ACS,DDR ) * Min( AMS ,FirstVNF_RAM ) ) ) - Max( ( ( PN - FirstVNF_CPU_Server ) * Min( MDR ,ARS ) ),Max( Max( MDR,FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) ,Min( ( ( ( ( MDR / Const ) / ( AMS + RRS ) ) - Max( Min( Const ,Const ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * Max( ( ( RRS + RRS ) + Max( RRS,FirstVNF_RAM ) ),( ( AMS + MDR ) * ( FirstVNF_RAM_Server + AMS ) ) ) ) ,( ( Min( ( Const + Const ) ,Max( RRS,FirstVNF_CPU ) ) / Max( ( PN * BR ),( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( Min( Max( CRS,MRS ) ,( MDR - AMS ) ) - ( ( ARS - FirstVNF_CPU ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,MDR ) / ( CRS / CRS ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * MRS ) - Min( ACS ,RRS ) ) ) ) * Max( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Max( CRS,AMS ) ),Max( ( FirstVNF_RAM_Server / RRS ),( FirstVNF_RAM + MDR ) ) ),Max( Min( ( MRS / FirstVNF_Mem ) ,Max( ACS,CRS ) ),( Max( PN,PN ) - ( Const / DDR ) ) ) ) ) + ( ( ( ( ( FirstVNF_RAM_Server / CRS ) - ( BR + DDR ) ) + ( Min( ACS ,ACS ) - ( BR / PN ) ) ) / ( Max( Max( Const,FirstVNF_RAM_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) + ( Min( PN ,FirstVNF_Mem ) * Max( MRS,MDR ) ) ) ) - ( ( ( ( DDR / FirstVNF_RAM ) / Min( MRS ,PN ) ) * Max( ( AMS + FirstVNF_RAM ),Min( ARS ,PN ) ) ) / ( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( ( CRS * MDR ) * ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( Min( ( Max( ( RMSe * MLU ),( MUC - RMSe ) ) / ( ( MUM * MUC ) * ( MUC - CS ) ) ) ,Min( ( ( CS / MUC ) + Max( MUR,DS ) ) ,( Min( RCSe ,RCSe ) - Min( MUM ,DS ) ) ) ),( ( ( ( DS - MUM ) - Max( CS,RCSe ) ) - Max( ( CS + MUC ),Min( MUR ,RCSe ) ) ) + Min( ( ( CS + RMSe ) * ( RMSe - MUR ) ) ,Max( ( MLU + MUC ),Max( MUC,MUM ) ) ) ) ) ,Max( ( Max( ( ( MLU + RCSe ) / Min( MUR ,MUC ) ),Min( Min( DS ,MUM ) ,( MUC - MLU ) ) ) / Min( ( ( MUR * MUM ) / Max( DS,CS ) ) ,( ( CS / DS ) + ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + RMSe ) ,Min( MUC ,RCSe ) ) / Max( ( CS + MLU ),( MUM - CS ) ) ),( Max( ( MUR * MUM ),( RCSe * RMSe ) ) - Min( ( MUR / DS ) ,( MUC - MUR ) ) ) ) ) ) * ( ( Max( ( ( ( MUR - MUC ) - Min( DS ,MLU ) ) - Min( Max( MUR,RCSe ) ,( DS - RRSe ) ) ),Max( ( Min( RMSe ,RCSe ) - Min( RMSe ,MUC ) ),( ( RMSe - MUC ) + Max( MUC,MLU ) ) ) ) / ( Min( Max( ( RCSe * MLU ),( MUC / RCSe ) ) ,Min( ( MUR - CS ) ,( CS + CS ) ) ) * ( ( ( DS / MUC ) - ( RCSe + RCSe ) ) * ( ( MUC - MUC ) - Max( MUC,CS ) ) ) ) ) - ( ( Max( ( Min( DS ,RRSe ) / Min( MUR ,CS ) ),( ( RCSe - DS ) / Min( MUR ,MUR ) ) ) / ( ( ( MUC - RRSe ) - ( MUC - MUR ) ) + ( ( RCSe - RCSe ) - Max( MLU,MUC ) ) ) ) * ( Max( Max( ( RRSe + MUR ),( DS / MUM ) ),Min( Max( RCSe,CS ) ,( DS * DS ) ) ) * ( ( Max( MUR,CS ) / Max( RRSe,MUC ) ) * ( Min( DS ,RMSe ) / ( CS - CS ) ) ) ) ) ) ) * ( ( Min( Min( ( ( ( CS + MUC ) * ( RRSe / CS ) ) * ( Max( RMSe,DS ) * ( MLU - RMSe ) ) ) ,Max( ( ( MUR * CS ) * ( DS / RMSe ) ),( Max( MUM,DS ) + ( DS + RCSe ) ) ) ) ,( ( ( ( DS * MUM ) + ( MUC / MLU ) ) / ( ( RRSe - MLU ) * Min( RMSe ,RCSe ) ) ) - ( ( ( RRSe * RMSe ) / ( RRSe + RRSe ) ) + ( Max( RCSe,RMSe ) / Max( MLU,RMSe ) ) ) ) ) - Min( ( Max( ( ( MLU - RCSe ) * ( MUC - MUM ) ),( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + ( ( ( CS * DS ) + Max( DS,MUR ) ) / ( ( MUR * RRSe ) - Max( MLU,RRSe ) ) ) ) ,( Min( ( Min( CS ,MUC ) + Max( MLU,MUM ) ) ,( Max( MUM,MUM ) * Max( MLU,RCSe ) ) ) + ( ( ( DS * RRSe ) * Max( DS,RCSe ) ) + ( ( CS + DS ) / ( RRSe * DS ) ) ) ) ) ) / Max( ( ( ( ( ( CS / DS ) - ( MUR * MUC ) ) * ( ( RCSe / MUM ) / Max( DS,MUC ) ) ) * ( Max( ( MUC * RCSe ),Min( RCSe ,MUM ) ) * Max( ( MUC * CS ),( MLU - MUC ) ) ) ) + ( ( Max( ( MUC / DS ),Max( MLU,MUC ) ) * ( Max( RCSe,MLU ) / ( DS + CS ) ) ) + ( ( ( RMSe + MUR ) - ( DS + RRSe ) ) + Max( ( RCSe + MUR ),Max( MUC,MUM ) ) ) ) ),( ( ( ( Max( MUC,RMSe ) / Max( DS,MUM ) ) / ( ( MUM / MUM ) / Max( MUC,RMSe ) ) ) - ( ( ( DS / MUC ) + ( RCSe + MUC ) ) - Min( ( RRSe + CS ) ,( DS - MUR ) ) ) ) + ( ( Min( ( CS - DS ) ,Min( MUR ,CS ) ) * ( ( MUR - CS ) + Min( CS ,MLU ) ) ) - ( ( Min( MUR ,MUC ) + ( RCSe * MLU ) ) - ( ( MUM - RCSe ) / ( RRSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.02833787915822784}, {"determining": "( ( MRS - FirstVNF_Mem ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( Min( MUR ,DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.07347305117082688}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_Mem_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.18885539445073504}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( MUC - ( CS * ( MUR + MLU ) ) ) - ( MUM + RRSe ) )", "obj1": 0.6934865900383141, "obj2": 0.22938290752635224}, {"determining": "( RRS - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RCSe * MUC ) / ( RMSe - MUC ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.13060782717337793}, {"determining": "Min( ( DDR / ( MDR - ARS ) ) ,CRS )", "choosing": "( ( CS + MLU ) / Min( Max( MUC,RCSe ) ,Max( MUC,CS ) ) )", "obj1": 0.6015325670498084, "obj2": 0.2823996335409386}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( RRS,Max( AMS,MDR ) ) )", "choosing": "( ( ( ( DS + RRSe ) - CS ) - ( MLU - RMSe ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8026819923371648, "obj2": 0.16712847010216636}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,CRS ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,CS ) )", "obj1": 0.735632183908046, "obj2": 0.2090405744019218}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.735632183908046, "obj2": 0.2090405744019218}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.8812260536398467, "obj2": 0.09683074559603141}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ,Min( ( ( ( RCSe + RCSe ) * ( RMSe / DS ) ) / ( ( MUC + RMSe ) / Min( RRSe ,RCSe ) ) ) ,( ( ( RCSe + RRSe ) + Min( MLU ,RCSe ) ) + Min( ( DS - MUR ) ,( DS - DS ) ) ) ) ),Min( Min( ( ( ( MUM * MUR ) - Min( RMSe ,MLU ) ) - Max( ( RRSe + DS ),Min( CS ,DS ) ) ) ,Max( ( ( MLU * MUC ) / ( CS - DS ) ),Max( ( MLU - CS ),( RRSe - MUM ) ) ) ) ,( ( Max( ( MLU - RMSe ),( MUC / CS ) ) + ( ( RRSe - RCSe ) / Min( MLU ,CS ) ) ) - ( ( Min( RMSe ,RCSe ) / Min( RCSe ,RCSe ) ) / ( Max( MUC,MUM ) + ( MUM - RMSe ) ) ) ) ) ) * ( Min( ( ( ( ( MUM - RCSe ) * Min( RRSe ,DS ) ) - ( Min( CS ,DS ) * ( CS - RCSe ) ) ) + ( Max( ( RMSe - MLU ),( DS - RMSe ) ) - Max( ( RRSe - DS ),( RRSe + MUR ) ) ) ) ,Max( ( Min( ( MUM + MUR ) ,Min( CS ,RCSe ) ) + ( ( RMSe + CS ) * Min( RCSe ,MLU ) ) ),( Max( ( MLU * RMSe ),( CS / RCSe ) ) - ( ( MUC * RMSe ) / ( RRSe * MLU ) ) ) ) ) * ( ( ( Max( ( CS * CS ),( RMSe - CS ) ) - Min( Max( MUC,MLU ) ,( MLU + RCSe ) ) ) + Min( Max( Min( MUC ,MLU ),( MUM + DS ) ) ,( Min( MUR ,RMSe ) / ( MUC / RCSe ) ) ) ) / ( ( Max( DS,MUR ) * ( RMSe * ( RMSe * MUM ) ) ) - ( ( ( DS - CS ) / Max( MUM,RRSe ) ) + ( Max( MLU,MLU ) / Min( RCSe ,MUM ) ) ) ) ) ) ),( ( Min( ( Max( ( Min( MUM ,RCSe ) * ( CS / CS ) ),( ( RCSe * MUC ) + Min( MLU ,MUC ) ) ) * Min( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) ,( ( DS - MUM ) - Min( MLU ,MUC ) ) ) ) ,( ( ( ( MUM + RMSe ) / ( RRSe - RCSe ) ) - ( ( DS + MUC ) * Max( CS,MUC ) ) ) * ( ( Max( MUM,CS ) / Max( RCSe,CS ) ) + ( ( MUM / RMSe ) / ( RRSe - MUR ) ) ) ) ) + ( ( Max( Max( ( MUC + RRSe ),( DS / MUM ) ),Max( ( MUM + CS ),Min( RCSe ,RRSe ) ) ) + ( ( ( RMSe * MUR ) + ( MLU * RMSe ) ) - Max( Min( MUC ,MUC ),( DS + RRSe ) ) ) ) * ( ( ( ( MUM - RMSe ) - Max( DS,MUR ) ) / ( ( MUC / DS ) - ( MLU + MUM ) ) ) * Min( Min( Max( MLU,MUR ) ,( RCSe * RRSe ) ) ,( ( MUM / DS ) + Max( MUR,MUC ) ) ) ) ) ) / ( ( ( ( ( ( DS / MUR ) / Max( RRSe,DS ) ) / Max( ( DS * RMSe ),Min( RMSe ,RMSe ) ) ) + Max( Min( Min( MUM ,RRSe ) ,Min( RRSe ,RCSe ) ),Max( ( MUR * MUC ),Max( RMSe,CS ) ) ) ) - ( ( ( Max( MUC,DS ) + ( CS - MLU ) ) + ( ( CS / MUR ) / Max( RRSe,MUM ) ) ) - Max( ( ( RCSe * MUC ) - Min( RRSe ,RRSe ) ),( ( DS * MUM ) * ( MUR * CS ) ) ) ) ) / ( ( Min( ( Max( MUC,MLU ) * ( MLU * RCSe ) ) ,( ( MUM / MUM ) * ( RCSe + RMSe ) ) ) + ( Min( ( MLU * DS ) ,( RMSe - RRSe ) ) + ( Min( MUR ,CS ) - ( MUR / RRSe ) ) ) ) + Min( ( ( Max( MLU,MUR ) - ( CS / MUC ) ) * Min( Max( RCSe,MUC ) ,Max( MLU,MUR ) ) ) ,( Min( ( CS * DS ) ,( RRSe - MLU ) ) + Min( ( MUC + MUC ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.009150610229220257}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8563218390804598, "obj2": 0.11850735544291964}, {"determining": "Min( ( ARS + MDR ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + ( CS + MUM ) ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.6475095785440613, "obj2": 0.2520953903915716}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.657088122605364, "obj2": 0.240612044323009}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),Max( AMS,MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - RMSe ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8199233716475096, "obj2": 0.1571486189421137}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( DDR / ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) * ( ARS - MDR ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( MUM * ( Max( DS,MUR ) * ( RMSe * MLU ) ) ) ) ) ,Max( DS,MUR ) )", "obj1": 0.632183908045977, "obj2": 0.26573152341287604}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.8946360153256705, "obj2": 0.08939092428303874}, {"determining": "( ( DDR / BR ) * ( ARS - MDR ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUR ) ) ) ,Max( DS,MUR ) )", "obj1": 0.6360153256704981, "obj2": 0.2574772087062767}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.2766002829779474}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.10968481745511574}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),Max( AMS,MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - RMSe ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8199233716475096, "obj2": 0.1571486189421137}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8582375478927203, "obj2": 0.11493367325373005}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),Max( FirstVNF_Mem_Server,MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - CS ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8160919540229885, "obj2": 0.1648122349647583}, {"determining": "( ( DDR - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.8946360153256705, "obj2": 0.08939092428303874}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.10968481745511574}, {"determining": "( Max( ( AMS * DDR ),( ARS - MDR ) ) + Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 0.6226053639846744, "obj2": 0.27609768634962617}, {"determining": "( ( ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_Mem_Server ) - CRS ) - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,DS ) )", "obj1": 0.9980842911877394, "obj2": 0.0009087624896493239}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( Max( ( AMS / DDR ),( ARS - MDR ) ) + Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 0.6226053639846744, "obj2": 0.27609768634962617}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( ( RRSe - CS ) - ( MLU - RMSe ) ) + ( ( MUC / RRSe ) - Min( DS ,RRSe ) ) )", "obj1": 0.8160919540229885, "obj2": 0.1648122349647583}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUR - RRSe ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUR * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( DDR / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( RCSe + MUR ) ,( CS + CS ) ) ,( ( RMSe * MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) - ( ( FirstVNF_CPU_Server - DDR ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe * MLU ) / Max( MUR,RRSe ) ),( ( MUC + DS ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( ( MDR + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MLU ) + ( RRSe - MUR ) ) + Min( Max( RMSe,CS ) ,( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + RCSe ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUR ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( ( Min( MUC ,MUM ) + ( CS + MUR ) ) + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) - ( ARS / MDR ) )", "choosing": "( ( CS + RCSe ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,AMS ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( ( RMSe / RRSe ) * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - RRSe ) - ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( Min( DDR ,FirstVNF_Mem_Server ) + Max( BR,DDR ) ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( DS * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( Max( MDR,FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( ARS + MDR ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "Min( ( Min( Min( Min( ( ( ( DDR * BR ) - ( RRS - AMS ) ) - ( ( FirstVNF_CPU_Server - ACS ) + ( Const / FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) / ( PN - AMS ) ),( Min( FirstVNF_CPU ,MDR ) * ( MDR / MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / Const ) ),( ( FirstVNF_Mem_Server - MRS ) + ( DDR / AMS ) ) ) / ( Min( Min( MRS ,ARS ) ,( PN + DDR ) ) - ( Min( FirstVNF_RAM_Server ,ARS ) * ( Const / MRS ) ) ) ) ) ,( Min( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( MRS / MDR ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Min( ( Max( FirstVNF_Mem,BR ) + ( FirstVNF_CPU / ARS ) ) ,( ( RRS + PN ) / ( DDR - ACS ) ) ) ) - Min( ( ( ( FirstVNF_Mem - DDR ) / ( AMS + PN ) ) * ( Min( DDR ,ARS ) * Max( FirstVNF_RAM,MRS ) ) ) ,( Max( ( AMS - PN ),( RRS - PN ) ) - Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( AMS ,BR ) ) ) ) ) ) + ( Min( ( Max( ( ( ARS + FirstVNF_CPU ) / ( CRS * MDR ) ),Min( Max( MDR,ARS ) ,( Const * DDR ) ) ) - Min( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_RAM - FirstVNF_RAM ) ) ,( ( AMS + FirstVNF_CPU_Server ) + ( CRS + FirstVNF_CPU ) ) ) ) ,( ( Min( ( FirstVNF_RAM / ARS ) ,Min( BR ,FirstVNF_RAM ) ) * ( Max( CRS,MRS ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + AMS ) ) - ( ( FirstVNF_CPU_Server / MDR ) + ( PN * FirstVNF_Mem ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Min( DDR ,CRS ) ) * Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_CPU,AMS ) * ( ACS / PN ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( MRS - BR ) ) ) ) + ( ( ( ( CRS + DDR ) + Min( CRS ,DDR ) ) * Min( ( FirstVNF_CPU / AMS ) ,Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) + ( Max( ( ACS - FirstVNF_CPU ),( ACS + AMS ) ) / Max( ( FirstVNF_RAM_Server - MRS ),( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ) ,( Min( Min( Min( ( ( ( BR - CRS ) * ( FirstVNF_CPU * CRS ) ) / ( ( FirstVNF_CPU / MDR ) - ( AMS + FirstVNF_CPU ) ) ) ,Max( Max( ( BR + PN ),Min( ARS ,AMS ) ),( ( ACS / MRS ) + ( MDR - DDR ) ) ) ) ,( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( Max( ACS,DDR ) * Min( AMS ,FirstVNF_RAM ) ) ) - Max( ( ( PN - FirstVNF_CPU_Server ) * Min( MDR ,ARS ) ),Max( Max( MDR,FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) ,Min( ( ( ( ( MDR / Const ) / ( AMS + RRS ) ) - Max( Min( Const ,Const ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * Max( ( ( RRS + RRS ) + Max( RRS,FirstVNF_RAM ) ),( ( AMS + MDR ) * ( ACS + AMS ) ) ) ) ,( ( Min( ( Const + Const ) ,Max( RRS,FirstVNF_CPU ) ) / Max( ( PN * BR ),( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( Min( Max( CRS,MRS ) ,( MDR - AMS ) ) - ( ( ARS - FirstVNF_CPU ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,MDR ) / ( CRS / CRS ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * MRS ) - Min( ACS ,RRS ) ) ) ) * Max( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Max( CRS,AMS ) ),Max( ( FirstVNF_RAM_Server / RRS ),( FirstVNF_RAM + MDR ) ) ),Max( Min( ( MRS / FirstVNF_Mem ) ,Max( ACS,CRS ) ),( Max( PN,PN ) - ( Const / DDR ) ) ) ) ) + ( ( ( ( ( FirstVNF_RAM_Server / CRS ) - ( BR + DDR ) ) + ( Min( ACS ,ACS ) - ( BR / PN ) ) ) / ( Max( Max( Const,FirstVNF_RAM_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) + ( Min( PN ,FirstVNF_Mem ) * Max( MRS,MDR ) ) ) ) - ( ( ( ( DDR / FirstVNF_RAM ) / Min( MRS ,PN ) ) * Max( ( AMS + FirstVNF_RAM ),Min( ARS ,PN ) ) ) / ( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( ( CRS * MDR ) * ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - Max( RMSe,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.0568212293780205}, {"determining": "Min( ( Min( Min( Min( ( ( ( DDR * BR ) - ( RRS - AMS ) ) - ( ( FirstVNF_CPU_Server - ACS ) + ( Const / FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) / ( PN - AMS ) ),( Min( FirstVNF_CPU ,MDR ) * ( MDR / MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / Const ) ),( ( FirstVNF_Mem_Server - MRS ) + ( DDR / AMS ) ) ) / ( Min( Min( MRS ,ARS ) ,( PN + DDR ) ) - ( Min( FirstVNF_RAM_Server ,ARS ) * ( Const / MRS ) ) ) ) ) ,( Min( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( MRS / MDR ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Min( ( Max( FirstVNF_Mem,BR ) + ( FirstVNF_CPU / ARS ) ) ,( ( RRS + PN ) / ( DDR - ACS ) ) ) ) - Min( ( ( ( FirstVNF_Mem - DDR ) / ( AMS + PN ) ) * ( Min( DDR ,ARS ) * Max( FirstVNF_RAM,MRS ) ) ) ,( Max( ( AMS - PN ),( RRS - PN ) ) - Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( AMS ,BR ) ) ) ) ) ) + ( Min( ( Max( ( ( ARS + FirstVNF_CPU ) / ( CRS * MDR ) ),Min( Max( MDR,ARS ) ,( Const * DDR ) ) ) - Min( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_RAM - FirstVNF_RAM ) ) ,( ( AMS + FirstVNF_CPU_Server ) + ( CRS + FirstVNF_CPU ) ) ) ) ,( ( Min( ( FirstVNF_RAM / ARS ) ,Min( BR ,FirstVNF_RAM ) ) * ( Max( CRS,MRS ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + AMS ) ) - ( ( FirstVNF_CPU_Server / MDR ) + ( PN * FirstVNF_Mem ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Min( DDR ,CRS ) ) * Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_CPU,AMS ) * ( ACS / PN ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( MRS - BR ) ) ) ) + ( ( ( ( CRS + DDR ) + Min( CRS ,DDR ) ) * Min( ( FirstVNF_CPU / AMS ) ,Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) + ( Max( ( ACS - FirstVNF_CPU ),( ACS + AMS ) ) / Max( ( FirstVNF_RAM_Server - MRS ),( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ) ,( ( ( MRS - AMS ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) + ( ( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,MDR ) / ( CRS / CRS ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * MRS ) - Min( ACS ,RRS ) ) ) ) * Max( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Max( CRS,AMS ) ),Max( ( FirstVNF_RAM_Server / RRS ),( FirstVNF_RAM + MDR ) ) ),Max( Min( ( MRS / FirstVNF_Mem ) ,Max( ACS,CRS ) ),( Max( PN,PN ) - ( Const / DDR ) ) ) ) ) + ( ( ( ( ( FirstVNF_RAM_Server / CRS ) - ( BR + DDR ) ) + ( Min( ACS ,ACS ) - ( BR / PN ) ) ) / ( Max( Max( Const,FirstVNF_RAM_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) + ( Min( PN ,FirstVNF_Mem ) * Max( MRS,MDR ) ) ) ) - ( ( ( ( DDR / FirstVNF_RAM ) / Min( MRS ,PN ) ) * Max( ( AMS + FirstVNF_RAM ),Min( ARS ,PN ) ) ) / ( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( ( CRS * MDR ) * ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( Min( ( Max( ( RMSe * MLU ),( MUC - RMSe ) ) / ( ( MUM * MUC ) * ( MUC - CS ) ) ) ,Min( ( ( CS / MUC ) + Max( MUR,DS ) ) ,( Min( RCSe ,RCSe ) - Min( MUM ,DS ) ) ) ),( ( ( ( DS - MUM ) - Max( CS,RCSe ) ) - Max( ( CS + MUC ),Min( MUR ,RCSe ) ) ) + Min( ( ( CS + RMSe ) * ( RMSe - MUR ) ) ,Max( ( MLU + MUC ),Max( MUC,MUM ) ) ) ) ) ,Max( ( Max( ( ( MLU + RCSe ) / Min( MUR ,MUC ) ),Min( Min( DS ,MUM ) ,( MUC - MLU ) ) ) / Min( ( ( MUR * MUM ) / Max( DS,CS ) ) ,( ( CS / DS ) + ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + RMSe ) ,Min( MUC ,RCSe ) ) / Max( ( CS + MLU ),( MUM - CS ) ) ),( Max( ( MUR * MUM ),( RCSe * RMSe ) ) - Min( ( MUR / DS ) ,( MUC - MUR ) ) ) ) ) ) * ( ( Max( ( ( ( MUR - MUC ) - Min( DS ,MLU ) ) - Min( Max( MUR,RCSe ) ,( DS - RRSe ) ) ),Max( ( RRSe - Min( RMSe ,MUC ) ),( ( RMSe - MUC ) + Max( MUC,MLU ) ) ) ) / ( Min( Max( ( RCSe * MLU ),( MUC / RCSe ) ) ,Min( ( MUR - CS ) ,( CS + CS ) ) ) * ( ( ( DS / MUC ) - ( RCSe + RCSe ) ) * ( ( MUC - MUC ) - Max( MUC,CS ) ) ) ) ) - ( ( Max( ( Min( DS ,RRSe ) / Min( MUR ,CS ) ),( ( RCSe - DS ) / Min( MUR ,MUR ) ) ) / ( ( ( MUC - RRSe ) - ( MUC - MUR ) ) + ( ( RCSe - RCSe ) - Max( MLU,MUC ) ) ) ) * ( Max( Max( ( RRSe + MUR ),( DS / MUM ) ),Min( Max( RCSe,CS ) ,( DS * DS ) ) ) * ( ( Max( MUR,CS ) / Max( RRSe,MUC ) ) * ( Min( DS ,RMSe ) / ( CS - CS ) ) ) ) ) ) ) * ( ( Min( Min( ( ( ( CS + MUC ) * ( RRSe / CS ) ) * ( Max( RMSe,DS ) * ( MLU - RMSe ) ) ) ,Max( ( ( MUR * CS ) * ( DS / RMSe ) ),( Max( MUM,DS ) + ( DS + RCSe ) ) ) ) ,( ( ( ( DS * MUM ) + ( MUC / MLU ) ) / ( ( RRSe - MLU ) * Min( RMSe ,RCSe ) ) ) - ( ( ( RRSe * RMSe ) / ( RRSe + RRSe ) ) + ( Max( RCSe,RMSe ) / Max( MLU,RMSe ) ) ) ) ) - Min( ( Max( ( ( MLU - RCSe ) * ( MUC - MUM ) ),( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + ( ( ( CS * DS ) + Max( DS,MUR ) ) / ( ( MUR * RRSe ) - Max( MLU,RRSe ) ) ) ) ,( Min( ( Min( CS ,MUC ) + Max( MLU,MUM ) ) ,( Max( MUM,MUM ) * Max( MLU,RCSe ) ) ) + ( ( ( DS * RRSe ) * Max( DS,RCSe ) ) + ( ( CS + DS ) / ( RRSe * DS ) ) ) ) ) ) / Max( ( ( ( ( ( CS / DS ) - ( MUR * MUC ) ) * ( ( RCSe / MUM ) / Max( DS,MUC ) ) ) * ( Max( ( MUC * RCSe ),Min( RCSe ,MUM ) ) * Max( ( MUC * CS ),( MLU - MUC ) ) ) ) + ( ( Max( ( MUC / DS ),Max( MLU,MUC ) ) * ( Max( RCSe,MLU ) / ( DS + CS ) ) ) + ( ( ( RMSe + MUR ) - ( DS + RRSe ) ) + Max( ( RCSe + MUR ),Max( MUC,MUM ) ) ) ) ),( ( ( ( Max( MUC,RMSe ) / Max( DS,MUM ) ) / ( ( MUM / MUM ) / Max( MUC,RMSe ) ) ) - ( ( ( DS / MUC ) + ( RCSe + MUC ) ) - Min( ( RRSe + CS ) ,( DS - MUR ) ) ) ) + ( ( Min( ( CS - DS ) ,Min( MUR ,CS ) ) * ( ( MUR - CS ) + Min( CS ,MLU ) ) ) - ( ( Min( MUR ,MUC ) + ( RCSe * MLU ) ) - ( ( MUM - RCSe ) / ( RRSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.02827671146073837}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUC + MLU ) ,( RCSe + RCSe ) ) - ( Min( MUC ,CS ) - Max( RCSe,RCSe ) ) ) + ( ( ( RRSe - MLU ) * ( DS * RCSe ) ) + Max( ( MLU - MUR ),( CS * RCSe ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.2277592814385472}, {"determining": "Min( ( DDR / ( MDR - ARS ) ) ,CRS )", "choosing": "( ( CS + MLU ) / Min( Max( MUC,RCSe ) ,Max( MUC,CS ) ) )", "obj1": 0.6015325670498084, "obj2": 0.2823996335409386}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,CRS ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,CS ) )", "obj1": 0.735632183908046, "obj2": 0.2090405744019218}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.8812260536398467, "obj2": 0.09683074559603141}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,ARS ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,Min( ACS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( CS + MUM ) / Min( Max( MUC,CS ) ,RRSe ) ) )", "obj1": 0.9137931034482759, "obj2": 0.06940707364874853}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6398467432950191, "obj2": 0.23853023696521922}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( Max( ACS,CRS ),Max( AMS,MDR ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.764367816091954, "obj2": 0.20259375024289955}, {"determining": "( ( FirstVNF_RAM_Server + BR ) - Max( ARS,FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 0.735632183908046, "obj2": 0.2090405744019218}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6340996168582376, "obj2": 0.2538233086573377}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.789272030651341, "obj2": 0.186760100801974}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7931034482758621, "obj2": 0.1662442577498256}, {"determining": "( RRS - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RCSe * MUC ) / ( RMSe - MUC ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.13060782717337793}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8946360153256705, "obj2": 0.08065342057703336}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUR ) ) ) ,Max( DS,MUR ) )", "obj1": 0.8180076628352491, "obj2": 0.14306737315941614}, {"determining": "( ( DDR / BR ) * ( ARS - MDR ) )", "choosing": "( ( ( Max( MUC,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.60727969348659, "obj2": 0.2698171398929582}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.12152157000643768}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * ( RRS + Max( AMS,MDR ) ) )", "choosing": "( ( DS * RMSe ) - Min( MLU ,DS ) )", "obj1": 0.7701149425287356, "obj2": 0.19450232246876667}, {"determining": "Min( ( ARS + MDR ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * RRS ) ) ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUM + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2618999108231615}, {"determining": "( ( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUC ) ) ) ,Max( DS,MUR ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8045977011494253, "obj2": 0.15637861958948707}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ,Min( ( ( ( RCSe + RCSe ) * ( RMSe / DS ) ) / ( ( MUC + RMSe ) / Min( RRSe ,RCSe ) ) ) ,( ( ( RCSe + RRSe ) + Min( MLU ,RCSe ) ) + Min( ( DS - MUR ) ,( DS - DS ) ) ) ) ),Min( Min( ( ( ( MUM * MUR ) - Min( RMSe ,MLU ) ) - Max( ( RRSe + DS ),Min( CS ,DS ) ) ) ,Max( ( ( MLU * MUC ) / ( CS - DS ) ),Max( ( MLU - CS ),( RRSe - MUM ) ) ) ) ,( ( Max( ( MLU - RMSe ),( MUC / CS ) ) + ( ( RRSe - RCSe ) / Min( MLU ,CS ) ) ) - ( ( Min( RMSe ,RCSe ) / Min( RCSe ,RCSe ) ) / ( Max( MUC,MUM ) + ( MUM - RMSe ) ) ) ) ) ) * ( Min( ( ( ( ( MUM - RCSe ) * Min( RRSe ,DS ) ) - ( Min( CS ,DS ) * ( CS - RCSe ) ) ) + ( Max( ( RMSe - MLU ),( DS - RMSe ) ) - Max( ( RRSe - DS ),( RRSe + MUR ) ) ) ) ,Max( ( Min( ( MUM + MUR ) ,Min( CS ,RCSe ) ) + ( ( RMSe + CS ) * Min( RCSe ,MLU ) ) ),( Max( ( MLU * RMSe ),( CS / RCSe ) ) - ( ( MUC * RMSe ) / ( RRSe * MLU ) ) ) ) ) * ( ( ( Max( ( CS * CS ),( RMSe - CS ) ) - Min( Max( MUC,MLU ) ,( MLU + RCSe ) ) ) + Min( Max( Min( MUC ,MLU ),( MUM + DS ) ) ,( Min( MUR ,RMSe ) / ( MUC / RCSe ) ) ) ) / ( ( Max( DS,MUR ) * ( RMSe * ( RMSe * MUM ) ) ) - ( ( ( DS - CS ) / Max( MUM,RRSe ) ) + ( Max( MLU,MLU ) / Min( RCSe ,MUM ) ) ) ) ) ) ),( ( Min( ( Max( ( Min( MUM ,RCSe ) * ( CS / CS ) ),( ( RCSe * MUC ) + Min( MLU ,MUC ) ) ) * Min( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) ,( ( DS - MUM ) - Min( MLU ,MUC ) ) ) ) ,( ( ( ( MUM + RMSe ) / ( RRSe - RCSe ) ) - ( ( DS + MUC ) * Max( CS,MUC ) ) ) * ( ( Max( MUM,CS ) / Max( RCSe,CS ) ) + ( ( MUM / RMSe ) / ( RRSe - MUR ) ) ) ) ) + ( ( Max( Max( ( MUC + RRSe ),( DS / MUM ) ),Max( ( MUM + CS ),Min( RCSe ,RRSe ) ) ) + ( ( ( RMSe * MUR ) + ( MLU * RMSe ) ) - Max( Min( MUC ,MUC ),( DS + RRSe ) ) ) ) * ( ( ( ( MUM - RMSe ) - Max( DS,MUR ) ) / ( ( MUC / DS ) - ( MLU + MUM ) ) ) * Min( Min( Max( MLU,MUR ) ,( RCSe * RRSe ) ) ,( ( MUM / DS ) + Max( MUR,MUC ) ) ) ) ) ) / ( ( ( ( ( ( DS / MUR ) / Max( RRSe,DS ) ) / Max( ( DS * RMSe ),Min( RMSe ,RMSe ) ) ) + Max( Min( Min( MUM ,RRSe ) ,Min( RRSe ,RCSe ) ),Max( ( MUR * MUC ),Max( RMSe,CS ) ) ) ) - ( ( ( Max( MUC,DS ) + ( CS - MLU ) ) + ( ( CS / MUR ) / Max( RRSe,MUM ) ) ) - Max( ( ( RCSe * MUC ) - Min( RRSe ,RRSe ) ),( ( DS * MUM ) * ( MUR * CS ) ) ) ) ) / ( ( Min( ( Max( MUC,MLU ) * ( MLU * RCSe ) ) ,( ( MUM / MUM ) * ( RCSe + RMSe ) ) ) + ( Min( ( MLU * DS ) ,( RMSe - RRSe ) ) + ( Min( MUR ,CS ) - ( MUR / RRSe ) ) ) ) + Min( ( ( Max( MLU,MUR ) - ( CS / MUC ) ) * Min( Max( RCSe,MUC ) ,Max( MLU,MUR ) ) ) ,( Min( ( CS * DS ) ,( RRSe - MLU ) ) + Min( ( MUC + MUC ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.009150610229220257}, {"determining": "( Max( ( AMS / DDR ),( ARS - MDR ) ) + Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "( ( MUC - RRSe ) + ( RMSe + ( MUC + RRSe ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2673916262194886}, {"determining": "Min( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_Mem )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( ( RMSe * DS ),CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7988505747126436, "obj2": 0.16150076186908577}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUC ) ) ) ,Max( DS,MUR ) )", "obj1": 0.814176245210728, "obj2": 0.14933995891747526}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - CS ) - ( MLU - RMSe ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8563218390804598, "obj2": 0.11511736490006304}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8371647509578544, "obj2": 0.1263665067373719}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ,Min( ( ( ( RCSe + RCSe ) * ( RMSe / DS ) ) / ( ( MUC + RMSe ) / Min( RRSe ,RCSe ) ) ) ,( ( ( RCSe + RRSe ) + Min( MLU ,RCSe ) ) + Min( ( DS - MUR ) ,( DS - DS ) ) ) ) ),Min( Min( ( ( ( MUM * MUR ) - Min( RMSe ,MLU ) ) - Max( ( RRSe + DS ),Min( CS ,DS ) ) ) ,Max( ( ( MLU * MUC ) / ( CS - DS ) ),Max( ( MLU - CS ),( RRSe - MUM ) ) ) ) ,( ( Max( ( MLU - RMSe ),( MUC / CS ) ) + ( ( RRSe - RCSe ) / Min( MLU ,CS ) ) ) - ( ( Min( RMSe ,RCSe ) / Min( RCSe ,RCSe ) ) / ( Max( MUC,MUM ) + ( MUM - RMSe ) ) ) ) ) ) * ( Min( ( ( ( ( MUM - RCSe ) * Min( RRSe ,DS ) ) - ( Min( CS ,DS ) * ( CS - RCSe ) ) ) + ( Max( ( RMSe - MLU ),( DS - RMSe ) ) - Max( ( RRSe - DS ),( RRSe + MUR ) ) ) ) ,Max( ( Min( ( MUM + MUR ) ,Min( CS ,RCSe ) ) + ( ( RMSe + CS ) * Min( RCSe ,MLU ) ) ),( Max( ( MLU * RMSe ),( CS / RCSe ) ) - ( ( MUC * RMSe ) / ( RRSe * MLU ) ) ) ) ) * ( ( ( Max( ( CS * CS ),( RMSe - CS ) ) - Min( Max( MUC,MLU ) ,( MLU + RCSe ) ) ) + Min( Max( Min( MUC ,MLU ),( MUM + DS ) ) ,( Min( MUR ,RMSe ) / ( MUC / RCSe ) ) ) ) / ( ( Max( DS,MUR ) * ( RMSe * ( RMSe * MUM ) ) ) - ( ( ( DS - CS ) / Max( MUM,RRSe ) ) + ( Max( MLU,MLU ) / Min( RCSe ,MUM ) ) ) ) ) ) ),( ( Min( ( Max( ( Min( MUM ,RCSe ) * ( CS / CS ) ),( ( RCSe * MUC ) + Min( MLU ,MUC ) ) ) * Min( ( Max( MUC,RMSe ) - ( DS / RMSe ) ) ,( ( DS - MUM ) - Min( MLU ,MUC ) ) ) ) ,( ( ( ( MUM + RMSe ) / ( RRSe - RCSe ) ) - ( ( DS + MUC ) * Max( CS,MUC ) ) ) * ( ( Max( MUM,CS ) / Max( RCSe,CS ) ) + ( ( MUM / RMSe ) / ( RRSe - MUR ) ) ) ) ) + ( ( Max( Max( ( MUC + RRSe ),( DS / MUM ) ),Max( ( MUM + CS ),Min( RCSe ,RRSe ) ) ) + ( ( ( RMSe * MUR ) + ( MLU * RMSe ) ) - Max( Min( MUC ,MUC ),( DS + RRSe ) ) ) ) * ( ( ( ( MUM - RMSe ) - Max( DS,MUR ) ) / ( ( MUC / DS ) - ( MLU + MUM ) ) ) * Min( Min( Max( MLU,MUR ) ,( RCSe * RRSe ) ) ,( ( MUM / DS ) + Max( MUR,MUC ) ) ) ) ) ) / ( ( ( ( ( ( DS / MUR ) / Max( RRSe,DS ) ) / Max( ( DS * RMSe ),Min( RMSe ,RMSe ) ) ) + Max( Min( Min( MUM ,RRSe ) ,Min( RRSe ,RCSe ) ),Max( ( MUR * MUC ),Max( RMSe,CS ) ) ) ) - ( ( ( Max( MUC,DS ) + ( CS - MLU ) ) + ( ( CS / MUR ) / Max( RRSe,MUM ) ) ) - Max( ( ( RCSe * MUC ) - Min( RRSe ,RRSe ) ),( ( DS * MUM ) * ( MUR * CS ) ) ) ) ) / ( ( Min( ( Max( MUC,MLU ) * ( MLU * RCSe ) ) ,( ( MUM / MUM ) * ( RCSe + RMSe ) ) ) + ( Min( ( MLU * DS ) ,( RMSe - RRSe ) ) + ( Min( MUR ,CS ) - ( MUR / RRSe ) ) ) ) + Min( ( ( Max( MLU,MUR ) - ( CS / MUC ) ) * Min( Max( RCSe,MUC ) ,Max( MLU,MUR ) ) ) ,( Min( ( CS * DS ) ,( RRSe - MLU ) ) + Min( ( MUC + MUC ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.009150610229220257}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.10968481745511574}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_Mem_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.18885539445073504}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.867816091954023, "obj2": 0.11426541229082121}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.10968481745511574}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.07347305117082688}, {"determining": "Max( ( ( ( FirstVNF_CPU * MDR ) - Max( AMS,FirstVNF_Mem ) ) / ( ( Const / FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) - ( ( Const * RRS ) + Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.2324830478183745}, {"determining": "( ( DDR - ( PN - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / ( Max( MUC,CS ) - DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - ( ( RMSe - MUR ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.9022988505747126, "obj2": 0.08004244928050253}, {"determining": "( ( ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_Mem_Server ) - CRS ) - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,DS ) )", "obj1": 0.9980842911877394, "obj2": 0.0009087624896493239}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8582375478927203, "obj2": 0.11493367325373005}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( ( Max( MUC,MUC ) * MUC ) * MUC ) ) ) ,Max( DS,MUR ) )", "obj1": 0.8160919540229885, "obj2": 0.14669531920776088}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_Mem_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.18885539445073504}, {"determining": "( ( MRS - FirstVNF_Mem ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( Min( MUR ,DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.07347305117082688}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,Max( Max( RRS,Const ),Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( CS * Max( RMSe,RMSe ) ) )", "obj1": 0.9003831417624522, "obj2": 0.08016664613926995}, {"determining": "( ( DDR - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - AMS ) + ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUR - RRSe ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( Const + MDR ) ,( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUR * RCSe ),Min( ( MLU * RCSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( ( ( ( BR + MDR ) - ACS ) - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,Max( MUC,( ( MUC + RRSe ) + Max( CS,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( Max( MDR,FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MUM ) + ( CS + MUR ) ) / ( RMSe * DS ) )", "obj1": 0.6628352490421456, "obj2": 0.2176895366839159}, {"determining": "( ( DDR - ( PN - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / ( Max( MUC,CS ) - DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.735632183908046, "obj2": 0.1965158789170826}, {"determining": "Min( ( Min( Min( Min( ( ( ( DDR * BR ) - ( RRS - AMS ) ) - ( ( FirstVNF_CPU_Server - ACS ) + ( Const / FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) / ( PN - AMS ) ),( Min( FirstVNF_CPU ,MDR ) * ( MDR / MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / Const ) ),( ( FirstVNF_Mem_Server - MRS ) + ( DDR / AMS ) ) ) / ( Min( Min( MRS ,ARS ) ,( PN + DDR ) ) - ( Min( FirstVNF_RAM_Server ,ARS ) * ( Const / MRS ) ) ) ) ) ,( Min( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( MRS / MDR ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Min( ( Max( FirstVNF_Mem,BR ) + ( FirstVNF_CPU / ARS ) ) ,( ( RRS + PN ) / ( DDR - ACS ) ) ) ) - Min( ( ( ( FirstVNF_Mem - DDR ) / ( AMS + PN ) ) * ( Min( DDR ,ARS ) * Max( FirstVNF_RAM,MRS ) ) ) ,( Max( ( AMS - PN ),( RRS - PN ) ) - Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( AMS ,BR ) ) ) ) ) ) + ( Min( ( Max( ( ( ARS + FirstVNF_CPU ) / ( CRS * MDR ) ),Min( Max( MDR,ARS ) ,( Const * DDR ) ) ) - Min( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_RAM - FirstVNF_RAM ) ) ,( ( AMS + FirstVNF_CPU_Server ) + ( CRS + FirstVNF_CPU ) ) ) ) ,( ( Min( ( FirstVNF_RAM / ARS ) ,Min( BR ,FirstVNF_RAM ) ) * ( Max( CRS,MRS ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + AMS ) ) - ( ( FirstVNF_CPU_Server / MDR ) + ( PN * FirstVNF_Mem ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Min( DDR ,CRS ) ) * Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_CPU,AMS ) * ( ACS / PN ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( MRS - BR ) ) ) ) + ( ( ( ( CRS + DDR ) + Min( CRS ,DDR ) ) * Min( ( FirstVNF_CPU / AMS ) ,Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) + ( Max( ( ACS - FirstVNF_CPU ),( ACS + AMS ) ) / Max( ( FirstVNF_RAM_Server - MRS ),( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ) ,( Min( Min( Min( ( ( ( BR - CRS ) * ( FirstVNF_CPU * CRS ) ) / ( ( FirstVNF_CPU / MDR ) - ( AMS + FirstVNF_CPU ) ) ) ,Max( Max( ( BR + PN ),Min( ARS ,AMS ) ),( ( ACS / MRS ) + ( MDR - DDR ) ) ) ) ,( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( Max( ACS,DDR ) * Min( AMS ,FirstVNF_RAM ) ) ) - Max( ( ( PN - FirstVNF_CPU_Server ) * Min( MDR ,ARS ) ),Max( Max( MDR,FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) ,Min( ( ( ( ( MDR / Const ) / ( AMS + RRS ) ) - Max( Min( Const ,Const ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * Max( ( ( RRS + RRS ) + Max( RRS,FirstVNF_RAM ) ),( ( AMS + MDR ) * ( ACS + AMS ) ) ) ) ,( ( Min( ( Const + Const ) ,Max( RRS,FirstVNF_CPU ) ) / Max( ( PN * BR ),( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( Min( Max( CRS,MRS ) ,( MDR - AMS ) ) - ( ( ARS - FirstVNF_CPU ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,MDR ) / ( CRS / CRS ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * MRS ) - Min( ACS ,RRS ) ) ) ) * Max( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Max( CRS,AMS ) ),Max( ( FirstVNF_RAM_Server / RRS ),( FirstVNF_RAM + MDR ) ) ),Max( Min( ( MRS / FirstVNF_Mem ) ,Max( ACS,CRS ) ),( Max( PN,PN ) - ( Const / DDR ) ) ) ) ) + ( ( ( ( ( FirstVNF_RAM_Server / CRS ) - ( BR + DDR ) ) + ( Min( ACS ,ACS ) - ( BR / PN ) ) ) / ( Max( Max( Const,FirstVNF_RAM_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) + ( Min( PN ,FirstVNF_Mem ) * Max( MRS,MDR ) ) ) ) - ( ( ( ( DDR / FirstVNF_RAM ) / Min( MRS ,PN ) ) * Max( ( AMS + FirstVNF_RAM ),Min( ARS ,PN ) ) ) / ( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( ( CRS * MDR ) * ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - Max( RMSe,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.0568212293780205}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.9693486590038314, "obj2": 0.018854923607854193}, {"determining": "( Min( ( RRS / FirstVNF_RAM ) ,( ACS / FirstVNF_Mem_Server ) ) - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.8754789272030651, "obj2": 0.09598310224358805}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7796934865900383, "obj2": 0.17386146268761568}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6398467432950191, "obj2": 0.23853023696521922}, {"determining": "( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9118773946360154, "obj2": 0.06242501160540342}, {"determining": "( Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem ) - Max( ARS,CRS ) )", "choosing": "Max( ( MUC * RCSe ),MLU )", "obj1": 0.9291187739463601, "obj2": 0.05968465737972386}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * ( RRS + Max( AMS,MDR ) ) )", "choosing": "( ( DS * RMSe ) - Min( MLU ,DS ) )", "obj1": 0.7701149425287356, "obj2": 0.19450232246876667}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.89272030651341, "obj2": 0.08225618959748913}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.7471264367816092, "obj2": 0.19581656152959276}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,Max( MUC,CS ) ) )", "obj1": 0.6015325670498084, "obj2": 0.2823996335409386}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8237547892720306, "obj2": 0.1406388979104279}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6398467432950191, "obj2": 0.23853023696521922}, {"determining": "Min( ( ARS + MDR ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * RRS ) ) ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUM + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2618999108231615}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6340996168582376, "obj2": 0.2538233086573377}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) )", "obj1": 0.8390804597701149, "obj2": 0.1187852153308762}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_Mem_Server ) - CRS ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.18885539445073504}, {"determining": "( ( DDR / BR ) * ( ARS - MDR ) )", "choosing": "( ( ( Max( MUC,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.60727969348659, "obj2": 0.2698171398929582}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RCSe * MUC ) / ( RMSe - MUC ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9770114942528736, "obj2": 0.01619427992261223}, {"determining": "Min( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_Mem )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( ( RMSe * DS ),CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7988505747126436, "obj2": 0.16150076186908577}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / Max( MUC,MUC ) )", "obj1": 0.8716475095785441, "obj2": 0.10485546374288034}, {"determining": "Min( ( DDR / ( MDR - ARS ) ) ,CRS )", "choosing": "( ( CS + MLU ) / Min( Max( MUC,RCSe ) ,Max( MUC,CS ) ) )", "obj1": 0.6015325670498084, "obj2": 0.2823996335409386}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( AMS - ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Min( ( ( ( Min( RCSe ,RMSe ) + ( MUR - CS ) ) + Max( ( DS - CS ),Min( DS ,CS ) ) ) * ( ( ( MLU * MLU ) / Min( MLU ,RRSe ) ) / ( ( RMSe * MUR ) / ( RRSe / MUC ) ) ) ) ,( ( ( ( MLU * CS ) * Max( MUC,MUR ) ) - Max( ( MUR - RCSe ),( RRSe / MLU ) ) ) / ( Max( Min( CS ,CS ),Min( RCSe ,MUR ) ) / ( ( RRSe * RRSe ) - ( RMSe / RMSe ) ) ) ) ),( ( Min( ( ( MUM - MLU ) - ( RRSe * MUC ) ) ,( ( MUC * CS ) + ( RCSe / RMSe ) ) ) * Min( ( ( DS + MUM ) - Max( DS,RCSe ) ) ,( Max( MUR,RRSe ) - ( RCSe * RRSe ) ) ) ) * ( Max( Min( Max( RCSe,RMSe ) ,Max( RMSe,DS ) ),( ( DS + MUM ) - ( CS - RMSe ) ) ) + ( ( ( MUM / RRSe ) * ( MUM - RMSe ) ) / ( ( RRSe / MUC ) + ( RMSe / DS ) ) ) ) ) ),( ( Min( Min( Min( ( RCSe + MLU ) ,Max( RCSe,CS ) ) ,( ( RMSe * MUR ) * Max( MUM,MUM ) ) ) ,( ( ( MLU / MUC ) * ( RCSe * RRSe ) ) + ( Min( RMSe ,MUR ) / ( CS * CS ) ) ) ) - Min( Min( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) ,( ( DS * DS ) - Min( CS ,MUC ) ) ) ,Min( Max( ( RMSe + MUC ),( CS * RRSe ) ) ,( ( MLU - MUM ) - ( RMSe - MLU ) ) ) ) ) * ( Min( ( Max( ( RMSe + MUM ),( MUM + DS ) ) - ( ( MUC + RMSe ) + ( CS - MUC ) ) ) ,( Min( Min( MLU ,MUC ) ,( MUC + MUM ) ) / ( ( CS * CS ) / ( MLU - MUM ) ) ) ) + ( ( Max( Min( MUR ,CS ),Min( MUM ,CS ) ) + ( ( CS / CS ) / ( MUM * RMSe ) ) ) / ( ( Min( RCSe ,RMSe ) / ( CS + RCSe ) ) * ( ( RCSe + MUR ) / ( MUR / MUR ) ) ) ) ) ) ) + Min( ( ( ( ( Min( Min( MUM ,MLU ) ,Max( CS,CS ) ) - ( ( MUR + RMSe ) - ( MUR / MUM ) ) ) - ( Max( ( MUC * CS ),( RCSe + DS ) ) + ( ( RRSe + MUR ) / ( MUM - MLU ) ) ) ) * Max( Min( Min( ( MUR + RRSe ) ,( RCSe / MUM ) ) ,Min( ( RRSe + MLU ) ,( DS + DS ) ) ),( Min( Max( MUM,RMSe ) ,( MUM * MLU ) ) + ( ( RMSe + MLU ) - ( DS * RRSe ) ) ) ) ) / ( ( Max( Min( ( RCSe + DS ) ,Min( RRSe ,MUR ) ),Min( Max( RCSe,DS ) ,( RMSe - RCSe ) ) ) / ( Min( Min( RRSe ,CS ) ,( DS / RCSe ) ) + Min( ( DS + CS ) ,( MUC - MUR ) ) ) ) - ( ( ( ( MUR - MUC ) * ( RRSe + MUC ) ) / Max( ( RCSe * CS ),( MUR / MLU ) ) ) / ( ( ( CS - MUC ) + ( DS / MLU ) ) + Max( ( RMSe - RRSe ),( DS / DS ) ) ) ) ) ) ,( ( ( ( Max( Min( MLU ,DS ),( MUR * RCSe ) ) * Min( ( CS * MUR ) ,( CS + MLU ) ) ) + Max( ( ( RCSe - RCSe ) * ( CS + DS ) ),Max( Min( MUC ,MUC ),( MUC * RRSe ) ) ) ) / ( ( Max( ( MLU * MUM ),Max( MUR,MLU ) ) / Max( ( RRSe - RMSe ),( MUM - MUC ) ) ) * ( ( ( MLU + RMSe ) + ( RRSe - MUM ) ) - Min( ( CS * RCSe ) ,( CS / RCSe ) ) ) ) ) + ( ( ( ( ( RCSe + CS ) + ( RMSe + MUR ) ) + Max( ( RRSe + RCSe ),Min( MUC ,DS ) ) ) - ( ( ( RMSe / MUM ) / ( CS / MUC ) ) * ( Max( RCSe,RRSe ) * ( MUC + MUR ) ) ) ) * ( ( ( Max( MUC,DS ) * ( MUR + MUM ) ) * ( Min( RRSe ,MUC ) - ( CS + MLU ) ) ) - Min( ( ( MLU / CS ) / ( CS + RMSe ) ) ,Max( Max( MUR,RRSe ),Max( MUM,MUC ) ) ) ) ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.2806021869633486}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( DS + RRSe ) - CS ) - ( MLU - RMSe ) ) + ( ( MUC / RRSe ) - Min( DS ,MUM ) ) )", "obj1": 0.8524904214559387, "obj2": 0.11657082095838202}, {"determining": "( Max( ( AMS / DDR ),( ARS - MDR ) ) + Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "( ( MUC - RRSe ) + ( RMSe + ( MUC + RRSe ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2673916262194886}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7931034482758621, "obj2": 0.1662442577498256}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( BR / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.9846743295019157, "obj2": 0.009584181772500977}, {"determining": "( ( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( Max( FirstVNF_RAM,ARS ) + FirstVNF_Mem_Server ) - CRS ) ) )", "choosing": "( ( Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUC ) ) ) ,Max( DS,MUR ) ) * RCSe ) / ( ( CS + MUM ) * DS ) )", "obj1": 0.8065134099616859, "obj2": 0.15221420275880335}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( Max( ARS,CRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.867816091954023, "obj2": 0.10993763477295476}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8582375478927203, "obj2": 0.11493367325373005}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.07235302058530249}, {"determining": "( RRS - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RCSe * MUC ) / ( RMSe - MUC ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.13060782717337793}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6340996168582376, "obj2": 0.2538233086573377}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "Max( ( MUC * RCSe ),Min( ( MLU * RCSe ) ,( ( ( RMSe - MUR ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) ) )", "obj1": 0.9022988505747126, "obj2": 0.07545872317041426}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7931034482758621, "obj2": 0.1662442577498256}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUR ) ) ) ,Max( DS,MUR ) )", "obj1": 0.8180076628352491, "obj2": 0.14306737315941614}, {"determining": "( RRS - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RCSe * MUC ) / ( RMSe - MUC ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.13060782717337793}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,Max( Max( RRS,Const ),Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( CS * Max( RMSe,RMSe ) ) )", "obj1": 0.9003831417624522, "obj2": 0.08016664613926995}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( ( Max( MUC,MUC ) * MUC ) * MUC ) ) ) ,Max( DS,MUR ) )", "obj1": 0.8160919540229885, "obj2": 0.14669531920776088}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem_Server ) * ( PN - Min( ARS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8371647509578544, "obj2": 0.1263665067373719}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( Min( ( Max( ( RMSe * MLU ),( MUC - RMSe ) ) / ( ( MUM * MUC ) * ( MUC - CS ) ) ) ,Min( ( ( CS / MUC ) + Max( MUR,DS ) ) ,( Min( RCSe ,RCSe ) - Min( MUM ,DS ) ) ) ),( ( ( ( DS - MUM ) - Max( CS,RCSe ) ) - Max( ( CS + MUC ),Min( MUR ,RCSe ) ) ) + Min( ( ( CS + RMSe ) * ( RMSe - MUR ) ) ,Max( ( MLU + MUC ),Max( MUC,MUM ) ) ) ) ) ,Max( ( Max( ( ( MLU + RCSe ) / Min( MUR ,MUC ) ),Min( Min( DS ,MUM ) ,( MUC - MLU ) ) ) / Min( ( ( MUR * MUM ) / Max( DS,CS ) ) ,( ( CS / DS ) + ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + RMSe ) ,Min( MUC ,RCSe ) ) / Max( ( CS + MLU ),( MUM - CS ) ) ),( Max( ( MUR * MUM ),( RCSe * RMSe ) ) - Min( ( MUR / DS ) ,( MUC - MUR ) ) ) ) ) ) * ( ( Max( ( ( ( MUR - MUC ) - Min( DS ,MLU ) ) - Min( Max( MUR,RCSe ) ,( DS - RRSe ) ) ),Max( ( RRSe - Min( RMSe ,MUC ) ),( ( RMSe - MUC ) + Max( MUC,MLU ) ) ) ) / ( Min( Max( ( RCSe * MLU ),( MUC / RCSe ) ) ,Min( ( MUR - CS ) ,( CS + CS ) ) ) * ( ( ( DS / MUC ) - ( RCSe + RCSe ) ) * ( ( MUC - MUC ) - Max( MUC,CS ) ) ) ) ) - ( ( Max( ( Min( DS ,RRSe ) / Min( MUR ,CS ) ),( ( RCSe - DS ) / Min( MUR ,MUR ) ) ) / ( ( ( MUC - RRSe ) - ( MUC - MUR ) ) + ( ( RCSe - RCSe ) - Max( MLU,MUC ) ) ) ) * ( Max( Max( ( RRSe + MUR ),( DS / MUM ) ),Min( Max( RCSe,CS ) ,( DS * DS ) ) ) * ( ( Max( MUR,CS ) / Max( RRSe,MUC ) ) * ( Min( DS ,RMSe ) / ( CS - CS ) ) ) ) ) ) ) * ( ( Min( Min( ( ( ( CS + MUC ) * ( RRSe / CS ) ) * ( Max( RMSe,DS ) * ( MLU - RMSe ) ) ) ,Max( ( ( MUR * CS ) * ( DS / RMSe ) ),( Max( MUM,DS ) + ( DS + RCSe ) ) ) ) ,( ( ( ( DS * MUM ) + ( MUC / MLU ) ) / ( ( RRSe - MLU ) * Min( RMSe ,RCSe ) ) ) - ( ( ( RRSe * RMSe ) / ( RRSe + RRSe ) ) + ( Max( RCSe,RMSe ) / Max( MLU,RMSe ) ) ) ) ) - Min( ( Max( ( ( MLU - RCSe ) * ( MUC - MUM ) ),( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + ( ( ( CS * DS ) + Max( DS,MUR ) ) / ( ( MUR * RRSe ) - Max( MLU,RRSe ) ) ) ) ,( Min( ( Min( CS ,MUC ) + Max( MLU,MUM ) ) ,( Max( MUM,MUM ) * Max( MLU,RCSe ) ) ) + ( ( ( DS * RRSe ) * Max( DS,RCSe ) ) + ( ( CS + DS ) / ( RRSe * DS ) ) ) ) ) ) / Max( ( ( ( ( ( CS / DS ) - ( MUR * MUC ) ) * ( ( RCSe / MUM ) / Max( DS,MUC ) ) ) * ( Max( ( MUC * RCSe ),Min( RCSe ,MUM ) ) * Max( ( MUC * CS ),( MLU - MUC ) ) ) ) + ( ( Max( ( MUC / DS ),Max( MLU,MUC ) ) * ( Max( RCSe,MLU ) / ( DS + CS ) ) ) + ( ( ( RMSe + MUR ) - ( DS + RRSe ) ) + Max( ( RCSe + MUR ),Max( MUC,MUM ) ) ) ) ),( ( ( ( Max( MUC,RMSe ) / Max( DS,MUM ) ) / ( ( MUM / MUM ) / Max( MUC,RMSe ) ) ) - ( ( ( DS / MUC ) + ( RCSe + MUC ) ) - Min( ( RRSe + CS ) ,( DS - MUR ) ) ) ) + ( ( Min( ( CS - DS ) ,Min( MUR ,CS ) ) * ( ( MUR - CS ) + Min( CS ,MLU ) ) ) - ( ( Min( MUR ,MUC ) + ( RCSe * MLU ) ) - ( ( MUM - RCSe ) / ( RRSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.007394211871367649}, {"determining": "( ( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUC ) ) ) ,Max( DS,MUR ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8045977011494253, "obj2": 0.15637861958948707}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUC ) ) ) ,Max( DS,MUR ) )", "obj1": 0.814176245210728, "obj2": 0.14933995891747526}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.07235302058530249}], "6": [{"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( RRS - ( Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_RAM_Server ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,Max( MUC,CS ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR + MDR ) - ACS ) - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,Max( MUC,( ( MUC + RRSe ) + Max( CS,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server * RRS ) ,Min( ACS ,BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,( ( MUC + RRSe ) + ( CS * RRSe ) ) ) ,Max( DS,MUR ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7969348659003831, "obj2": 0.15465662014427492}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07780278239044952}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( ( Max( MUC,MUC ) * MUC ) * MUC ) ) ) ,Max( Max( MUC,CS ),MUR ) )", "obj1": 0.6590038314176245, "obj2": 0.21202987103929136}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.896551724137931, "obj2": 0.07577396671682043}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + CS ) ) )", "obj1": 0.7241379310344828, "obj2": 0.20998591265052155}, {"determining": "Min( ( Min( Min( Min( ( ( ( DDR * BR ) - ( RRS - AMS ) ) - ( ( FirstVNF_CPU_Server - ACS ) + ( Const / FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS * FirstVNF_Mem ) / ( PN - AMS ) ),( Min( FirstVNF_CPU ,MDR ) * ( MDR / MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / Const ) ),( ( FirstVNF_Mem_Server - MRS ) + ( DDR / AMS ) ) ) / ( Min( Min( MRS ,ARS ) ,( PN + DDR ) ) - ( Min( FirstVNF_RAM_Server ,ARS ) * ( Const / MRS ) ) ) ) ) ,( Min( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( MRS / MDR ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Min( ( Max( FirstVNF_Mem,BR ) + ( FirstVNF_CPU / ARS ) ) ,( ( RRS + PN ) / ( DDR - ACS ) ) ) ) - Min( ( ( ( FirstVNF_Mem - DDR ) / ( AMS + PN ) ) * ( Min( DDR ,ARS ) * Max( FirstVNF_RAM,MRS ) ) ) ,( Max( ( AMS - PN ),( RRS - PN ) ) - Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( AMS ,BR ) ) ) ) ) ) + ( Min( ( Max( ( ( ARS + FirstVNF_CPU ) / ( CRS * MDR ) ),Min( Max( MDR,ARS ) ,( Const * DDR ) ) ) - Min( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_RAM - FirstVNF_RAM ) ) ,( ( AMS + FirstVNF_CPU_Server ) + ( CRS + FirstVNF_CPU ) ) ) ) ,( ( Min( ( FirstVNF_RAM / ARS ) ,Min( BR ,FirstVNF_RAM ) ) * ( Max( CRS,MRS ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + AMS ) ) - ( ( FirstVNF_CPU_Server / MDR ) + ( PN * FirstVNF_Mem ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - Min( DDR ,CRS ) ) * Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN / FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_CPU,AMS ) * ( ACS / PN ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( MRS - BR ) ) ) ) + ( ( ( ( CRS + DDR ) + Min( CRS ,DDR ) ) * Min( ( FirstVNF_CPU / AMS ) ,Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) + ( Max( ( ACS - FirstVNF_CPU ),( ACS + AMS ) ) / Max( ( FirstVNF_RAM_Server - MRS ),( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ) ,( Min( Min( Min( ( ( ( BR - CRS ) * ( FirstVNF_CPU * CRS ) ) / ( ( FirstVNF_CPU / MDR ) - ( AMS + FirstVNF_CPU ) ) ) ,Max( Max( ( BR + PN ),Min( ARS ,AMS ) ),( ( ACS / MRS ) + ( MDR - DDR ) ) ) ) ,( ( ( Min( MRS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( Max( ACS,DDR ) * Min( AMS ,FirstVNF_RAM ) ) ) - Max( ( ( PN - FirstVNF_CPU_Server ) * Min( MDR ,ARS ) ),Max( Max( MDR,FirstVNF_CPU ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) ,Min( ( ( ( ( MDR / Const ) / ( AMS + RRS ) ) - Max( Min( Const ,Const ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * Max( ( ( RRS + RRS ) + Max( RRS,FirstVNF_RAM ) ),( ( AMS + MDR ) * ( ACS + AMS ) ) ) ) ,( ( Min( ( Const + Const ) ,Max( RRS,FirstVNF_CPU ) ) / Max( ( PN * BR ),( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( Min( Max( CRS,MRS ) ,( MDR - AMS ) ) - ( ( ARS - FirstVNF_CPU ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( ( ( Max( Max( DDR,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_Mem ,MDR ) / ( CRS / CRS ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * MRS ) - Min( ACS ,RRS ) ) ) ) * Max( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + Max( CRS,AMS ) ),Max( ( FirstVNF_RAM_Server / RRS ),( FirstVNF_RAM + MDR ) ) ),Max( Min( ( MRS / FirstVNF_Mem ) ,Max( ACS,CRS ) ),( Max( PN,PN ) - ( Const / DDR ) ) ) ) ) + ( ( ( ( ( FirstVNF_RAM_Server / CRS ) - ( BR + DDR ) ) + ( Min( ACS ,ACS ) - ( BR / PN ) ) ) / ( Max( Max( Const,FirstVNF_RAM_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) + ( Min( PN ,FirstVNF_Mem ) * Max( MRS,MDR ) ) ) ) - ( ( ( ( DDR / FirstVNF_RAM ) / Min( MRS ,PN ) ) * Max( ( AMS + FirstVNF_RAM ),Min( ARS ,PN ) ) ) / ( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( ( CRS * MDR ) * ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - Max( RMSe,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.0568212293780205}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9597701149425287, "obj2": 0.022748665321856792}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6436781609195402, "obj2": 0.2238464738643988}, {"determining": "( ( Max( ACS,RRS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) * Max( RRS,Max( AMS,MDR ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,Max( MUC,CS ) ) )", "obj1": 0.7701149425287356, "obj2": 0.1909962120730853}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5900383141762452, "obj2": 0.29134101718814015}, {"determining": "( FirstVNF_CPU - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6168582375478927, "obj2": 0.2588138002130153}, {"determining": "( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9118773946360154, "obj2": 0.06242501160540342}, {"determining": "( Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem ) - Max( ARS,CRS ) )", "choosing": "Max( ( MUC * RCSe ),MLU )", "obj1": 0.9291187739463601, "obj2": 0.05968465737972386}, {"determining": "( ( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,( ( MUC + RRSe ) + ( CS * MUC ) ) ) ,Max( DS,MUR ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7720306513409961, "obj2": 0.17400516200552937}, {"determining": "( RRS - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.7931034482758621, "obj2": 0.16348297952029764}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.28367791489618177}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( DS / ( ( RMSe * CS ) + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.7337164750957854, "obj2": 0.20622942679593473}, {"determining": "( ( DDR - ( PN - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / ( Max( MUC,CS ) - DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.735632183908046, "obj2": 0.1965158789170826}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( MUR - RRSe ) - Max( RMSe,RRSe ) )", "obj1": 0.6379310344827587, "obj2": 0.24937535510956127}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.6015325670498084, "obj2": 0.27643065040530407}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.7471264367816092, "obj2": 0.19581656152959276}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( BR / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.9846743295019157, "obj2": 0.009584181772500977}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6340996168582376, "obj2": 0.2538233086573377}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6398467432950191, "obj2": 0.23853023696521922}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( DDR / BR ) * ( ARS - MDR ) )", "choosing": "( ( ( Max( MUC,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.60727969348659, "obj2": 0.2698171398929582}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.9693486590038314, "obj2": 0.018854923607854193}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6398467432950191, "obj2": 0.23853023696521922}, {"determining": "( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.60727969348659, "obj2": 0.2698171398929582}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUR * CS ) ,Min( MUC ,MUR ) ) - ( Min( MUC ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.7471264367816092, "obj2": 0.19581656152959276}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.07235302058530249}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RCSe * MUC ) / ( RMSe - MUC ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9770114942528736, "obj2": 0.01619427992261223}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( Min( ( Max( ( RMSe * MLU ),( MUC - RMSe ) ) / ( ( MUM * MUC ) * ( MUC - CS ) ) ) ,Min( ( ( CS / MUC ) + Max( MUR,DS ) ) ,( Min( RCSe ,RCSe ) - Min( MUM ,DS ) ) ) ),( ( ( ( DS - MUM ) - Max( CS,RCSe ) ) - Max( ( CS + MUC ),Min( MUR ,RCSe ) ) ) + Min( ( ( CS + RMSe ) * ( RMSe - MUR ) ) ,Max( ( MLU + MUC ),Max( MUC,MUM ) ) ) ) ) ,Max( ( Max( ( ( MLU + RCSe ) / Min( MUR ,MUC ) ),Min( Min( DS ,MUM ) ,( MUC - MLU ) ) ) / Min( ( ( MUR * MUM ) / Max( DS,CS ) ) ,( ( CS / DS ) + ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + RMSe ) ,Min( MUC ,RCSe ) ) / Max( ( CS + MLU ),( MUM - CS ) ) ),( Max( ( MUR * MUM ),( RCSe * RMSe ) ) - Min( ( MUR / DS ) ,( MUC - MUR ) ) ) ) ) ) * ( ( Max( ( ( ( MUR - MUC ) - Min( DS ,MLU ) ) - Min( Max( MUR,RCSe ) ,( DS - RRSe ) ) ),Max( ( RRSe - Min( RMSe ,MUC ) ),( ( RMSe - MUC ) + Max( MUC,MLU ) ) ) ) / ( Min( Max( ( RCSe * MLU ),( MUC / RCSe ) ) ,Min( ( MUR - CS ) ,( CS + CS ) ) ) * ( ( ( DS / MUC ) - ( RCSe + RCSe ) ) * ( ( MUC - MUC ) - Max( MUC,CS ) ) ) ) ) - ( ( Max( ( Min( DS ,RRSe ) / Min( MUR ,CS ) ),( ( RCSe - DS ) / Min( MUR ,MUR ) ) ) / ( ( ( MUC - RRSe ) - ( MUC - MUR ) ) + ( ( RCSe - RCSe ) - Max( MLU,MUC ) ) ) ) * ( Max( Max( ( RRSe + MUR ),( DS / MUM ) ),Min( Max( RCSe,CS ) ,( DS * DS ) ) ) * ( ( Max( MUR,CS ) / Max( RRSe,MUC ) ) * ( Min( DS ,RMSe ) / ( CS - CS ) ) ) ) ) ) ) * ( ( Min( Min( ( ( ( CS + MUC ) * ( RRSe / CS ) ) * ( Max( RMSe,DS ) * ( MLU - RMSe ) ) ) ,Max( ( ( MUR * CS ) * ( DS / RMSe ) ),( Max( MUM,DS ) + ( DS + RCSe ) ) ) ) ,( ( ( ( DS * MUM ) + ( MUC / MLU ) ) / ( ( RRSe - MLU ) * Min( RMSe ,RCSe ) ) ) - ( ( ( RRSe * RMSe ) / ( RRSe + RRSe ) ) + ( Max( RCSe,RMSe ) / Max( MLU,RMSe ) ) ) ) ) - Min( ( Max( ( ( MLU - RCSe ) * ( MUC - MUM ) ),( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + ( ( ( CS * DS ) + Max( DS,MUR ) ) / ( ( MUR * RRSe ) - Max( MLU,RRSe ) ) ) ) ,( Min( ( Min( CS ,MUC ) + Max( MLU,MUM ) ) ,( Max( MUM,MUM ) * Max( MLU,RCSe ) ) ) + ( ( ( DS * RRSe ) * Max( DS,RCSe ) ) + ( ( CS + DS ) / ( RRSe * DS ) ) ) ) ) ) / Max( ( ( ( ( ( CS / DS ) - ( MUR * MUC ) ) * ( ( RCSe / MUM ) / Max( DS,MUC ) ) ) * ( Max( ( MUC * RCSe ),Min( RCSe ,MUM ) ) * Max( ( MUC * CS ),( MLU - MUC ) ) ) ) + ( ( Max( ( MUC / DS ),Max( MLU,MUC ) ) * ( Max( RCSe,MLU ) / ( DS + CS ) ) ) + ( ( ( RMSe + MUR ) - ( DS + RRSe ) ) + Max( ( RCSe + MUR ),Max( MUC,MUM ) ) ) ) ),( ( ( ( Max( MUC,RMSe ) / Max( DS,MUM ) ) / ( ( MUM / MUM ) / Max( MUC,RMSe ) ) ) - ( ( ( DS / MUC ) + ( RCSe + MUC ) ) - Min( ( RRSe + CS ) ,( DS - MUR ) ) ) ) + ( ( Min( ( CS - DS ) ,Min( MUR ,CS ) ) * ( ( MUR - CS ) + Min( CS ,MLU ) ) ) - ( ( Min( MUR ,MUC ) + ( RCSe * MLU ) ) - ( ( MUM - RCSe ) / ( RRSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.007394211871367649}, {"determining": "( RRS - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7873563218390804, "obj2": 0.17125433335682158}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,( ( RCSe * MUC ) / ( RMSe - MUC ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9022988505747126, "obj2": 0.07535732133146142}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9712643678160919, "obj2": 0.016309568139308867}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MUM ) + ( CS + MUR ) ) / ( RMSe * DS ) )", "obj1": 0.7854406130268199, "obj2": 0.1716319151281942}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7796934865900383, "obj2": 0.17386146268761568}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6340996168582376, "obj2": 0.2538233086573377}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.07235302058530249}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RCSe * MUC ) / ( RMSe - MUC ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9770114942528736, "obj2": 0.01619427992261223}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.8984674329501916, "obj2": 0.07536643578524298}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + Max( ( BR + MDR ),Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( CS - CS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7873563218390804, "obj2": 0.17125433335682158}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU - ACS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7796934865900383, "obj2": 0.17386146268761568}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( Max( MDR,FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( ( ACS - ( MDR - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_RAM_Server ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,Max( MUC,CS ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.3068110138133803}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( MDR ,FirstVNF_Mem_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7203065134099617, "obj2": 0.1518816759711448}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_Mem - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.6781609195402298, "obj2": 0.20659103380704086}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8984674329501916, "obj2": 0.039741137281584404}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9501915708812261, "obj2": 0.028283449114914677}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6245210727969349, "obj2": 0.23600387117925908}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.8505747126436781, "obj2": 0.06933629257283287}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( ( Max( MUC,MUC ) * MUC ) * MUC ) ) ) ,Max( Max( MUC,CS ),MUR ) )", "obj1": 0.6590038314176245, "obj2": 0.21202987103929136}, {"determining": "( FirstVNF_CPU - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6168582375478927, "obj2": 0.2588138002130153}, {"determining": "( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RMSe ) / ( RMSe * DS ) )", "obj1": 0.8754789272030651, "obj2": 0.05352507628768721}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.867816091954023, "obj2": 0.061016991542006675}, {"determining": "Min( ( DDR - ( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.5977011494252874, "obj2": 0.2648906745507252}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07780278239044952}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6436781609195402, "obj2": 0.2238464738643988}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6436781609195402, "obj2": 0.2238464738643988}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07780278239044952}, {"determining": "Min( ( MRS - ( MDR - ARS ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * DS ) - ( MLU + DS ) )", "obj1": 0.5900383141762452, "obj2": 0.29134101718814015}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR / DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6130268199233716, "obj2": 0.2635055053252766}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.9693486590038314, "obj2": 0.018854923607854193}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( FirstVNF_CPU - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.5919540229885057, "obj2": 0.2882867091420254}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( Max( MUC,CS ),MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8735632183908046, "obj2": 0.055020574272853395}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),RRSe ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9597701149425287, "obj2": 0.022748665321856792}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),Max( ( RMSe * CS ),Min( RCSe ,CS ) ) ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9597701149425287, "obj2": 0.022748665321856792}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0009850648830034086}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5900383141762452, "obj2": 0.29134101718814015}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.9789272030651341, "obj2": 0.013165827216980511}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( BR / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) )", "obj1": 0.9827586206896551, "obj2": 0.010133516846700571}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9770114942528736, "obj2": 0.015953831669084623}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9712643678160919, "obj2": 0.016309568139308867}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem_Server ,PN ),Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * DDR ) ,( Const - CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( ( BR - BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( AMS ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,MUM ) - ( RMSe * MUC ) )", "obj1": 0.9846743295019157, "obj2": 0.008056642034764382}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.9865900383141762, "obj2": 0.006788146386958973}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_Mem )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6130268199233716, "obj2": 0.2635055053252766}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( DS / ( ( RMSe * CS ) + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.9865900383141762, "obj2": 0.006788146386958973}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9712643678160919, "obj2": 0.016309568139308867}, {"determining": "( ( ( ( BR + MDR ) - ACS ) - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,Max( MUC,( ( MUC + RRSe ) + Max( CS,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( Max( MDR,FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( ( ( ( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUM ) / Min( Max( MUC,CS ) ,DS ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem + ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUC * CS ) ,Min( MUC ,MUR ) ) - ( Min( MLU ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR - FirstVNF_Mem_Server ) ) / ( Max( MDR,FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( RRSe - CS ) ) * ( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( BR / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( MUR - ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) - ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( ARS + MDR ) ) ,Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC + RRSe ) + ( CS * MUC ) ) ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( MUM ,Max( MUC,( ( MUC + RRSe ) + Min( Max( MUC,CS ) ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR + MDR ) - CRS ) - FirstVNF_Mem ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( Min( CRS ,MDR ) * ( BR + FirstVNF_Mem_Server ) ) / ( Max( MDR,FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "Max( ( RMSe - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( MDR - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ACS - ( MDR - ( ACS - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.735632183908046, "obj2": 0.13717867232025302}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( MDR ,FirstVNF_Mem_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),RRSe ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7183908045977011, "obj2": 0.14582786643012585}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( MUM,CS ) ,DS ) - ( RRSe / RRSe ) )", "obj1": 0.6896551724137931, "obj2": 0.19466145652691919}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / ( RMSe * DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_Mem - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.6781609195402298, "obj2": 0.20659103380704086}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9501915708812261, "obj2": 0.028071155444569073}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( MUC,( ( MUC + RRSe ) + ( ( Max( MUC,MUC ) * MUC ) * MUC ) ) ) ,Max( Max( MUC,CS ),MUR ) )", "obj1": 0.6590038314176245, "obj2": 0.21202987103929136}, {"determining": "( FirstVNF_CPU - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6168582375478927, "obj2": 0.2588138002130153}, {"determining": "Min( ( DDR - ( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.5977011494252874, "obj2": 0.2648906745507252}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6245210727969349, "obj2": 0.23600387117925908}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6226053639846744, "obj2": 0.23897584966580845}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8314176245210728, "obj2": 0.07028222731252967}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ),MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8850574712643678, "obj2": 0.04578268293183965}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.6494252873563219, "obj2": 0.2214658133190818}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.8582375478927203, "obj2": 0.0658072725855409}, {"determining": "Min( ( MRS - ( MDR - ARS ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * DS ) - ( MLU + DS ) )", "obj1": 0.5900383141762452, "obj2": 0.29134101718814015}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07780278239044952}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.867816091954023, "obj2": 0.061016991542006675}, {"determining": "( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RMSe ) / ( RMSe * DS ) )", "obj1": 0.8754789272030651, "obj2": 0.05352507628768721}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ARS ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9501915708812261, "obj2": 0.028071155444569073}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6436781609195402, "obj2": 0.2238464738643988}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6436781609195402, "obj2": 0.2238464738643988}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.89272030651341, "obj2": 0.04222490558727293}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR / DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.6130268199233716, "obj2": 0.2635055053252766}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9597701149425287, "obj2": 0.022645842579661735}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07780278239044952}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.0696714934823038}, {"determining": "( FirstVNF_CPU - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.5919540229885057, "obj2": 0.2882867091420254}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8697318007662835, "obj2": 0.0560946701741423}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUC,Max( Max( ( ( RCSe - MUM ) * ( DS + DS ) ),RRSe ),( ( ( MUR + MLU ) + ( MUC / RRSe ) ) * ( MUM + Min( MUM ,MUC ) ) ) ) ) * Min( Max( MUC,CS ) ,DS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9770114942528736, "obj2": 0.012232421895357087}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9616858237547893, "obj2": 0.02123467368877369}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( MDR * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9655172413793104, "obj2": 0.01837671503556008}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9731800766283525, "obj2": 0.01451688380724537}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9961685823754789, "obj2": 0.0017822346138819817}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.8505747126436781, "obj2": 0.06933629257283287}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.5900383141762452, "obj2": 0.29134101718814015}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( Max( MUC,CS ),MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8735632183908046, "obj2": 0.055020574272853395}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUC * CS ) ,Min( MUC ,MUR ) ) - ( Min( MLU ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.9808429118773946, "obj2": 0.011224130819595175}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9674329501915708, "obj2": 0.01700486115553303}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem_Server ,PN ),Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * DDR ) ,( Const - CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( ( BR - BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( AMS ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,MUM ) - ( RMSe * MUC ) )", "obj1": 0.9846743295019157, "obj2": 0.008056642034764382}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.8505747126436781, "obj2": 0.06933629257283287}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8984674329501916, "obj2": 0.039741137281584404}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8984674329501916, "obj2": 0.039741137281584404}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( DS / ( DS + RRSe ) ) ,( ( ( RMSe - ( Min( MUM ,DS ) - ( RCSe - MLU ) ) ) - ( RCSe - MLU ) ) * Max( RMSe,RMSe ) ) )", "obj1": 0.9865900383141762, "obj2": 0.006788146386958973}], "9": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ACS - ( MDR - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( RRS - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( RRSe + MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) * ( BR + FirstVNF_Mem_Server ) ) / ( Max( MDR,FirstVNF_CPU_Server ) + ( AMS - FirstVNF_RAM ) ) )", "choosing": "Max( ( RMSe - RRSe ),( RMSe + ( MUC + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( DS * ( ( DS * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Const * RRS ) - ( Min( ( BR + MDR ) ,Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RMSe * DS ) / MUC ),RCSe ) / ( RMSe * DS ) )", "obj1": 0.6915708812260536, "obj2": 0.1773481781422139}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "( ( ACS - ( MDR - ( ACS - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.735632183908046, "obj2": 0.13717867232025302}, {"determining": "( ( ACS - ( ARS - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR * RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.7681992337164751, "obj2": 0.10819969108316445}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( AMS - MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( MDR - ARS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RMSe ) / ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) )", "obj1": 0.6743295019157088, "obj2": 0.20300474683483483}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6111111111111112, "obj2": 0.25223412124968836}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) + RCSe ) - Max( MUC,CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03305165109244143}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6302681992337165, "obj2": 0.23591650946328288}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( MUM,CS ) ,DS ) - ( RRSe / RRSe ) )", "obj1": 0.6896551724137931, "obj2": 0.19466145652691919}, {"determining": "Min( ( DDR - ( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( RRSe - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.5977011494252874, "obj2": 0.2648906745507252}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9501915708812261, "obj2": 0.028071155444569073}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / ( RMSe * DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "Min( ( MRS - ( MDR - ARS ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * DS ) - ( MLU + DS ) )", "obj1": 0.5900383141762452, "obj2": 0.29134101718814015}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8793103448275862, "obj2": 0.04897642037698953}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.06492706440945971}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ),MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8850574712643678, "obj2": 0.04578268293183965}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * ( BR + MDR ) ) ,( FirstVNF_Mem - ARS ) ) ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RRSe ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06546496491264565}, {"determining": "Min( ( DDR - ( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.5977011494252874, "obj2": 0.2648906745507252}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8199233716475096, "obj2": 0.07540802395411844}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6226053639846744, "obj2": 0.23897584966580845}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.06881496924396666}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / ( ACS - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / Max( MUC,CS ) )", "obj1": 0.8716475095785441, "obj2": 0.0529496230515596}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( MDR / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * ( MUR + MLU ) ) )", "obj1": 0.8620689655172413, "obj2": 0.06121812683950435}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07058173491197291}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07780278239044952}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( MUC,CS ),MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9540229885057471, "obj2": 0.025672321904635843}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6226053639846744, "obj2": 0.23897584966580845}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.89272030651341, "obj2": 0.042121100917199804}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9597701149425287, "obj2": 0.022645842579661735}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( MUC,CS ) ,DS ) - ( RRSe / RRSe ) )", "obj1": 0.6896551724137931, "obj2": 0.19466145652691919}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_Mem_Server ,PN ) / Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( Const * CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( Max( BR,BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( FirstVNF_CPU_Server ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( RMSe - CS ) ) * ( ( RCSe / DS ) * Max( MLU,MUC ) ) ) + ( Min( ( MUC * CS ) ,Min( MUC ,MUR ) ) - ( Min( MLU ,MUM ) + ( CS + MUR ) ) ) )", "obj1": 0.9808429118773946, "obj2": 0.011224130819595175}, {"determining": "( FirstVNF_CPU - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.5919540229885057, "obj2": 0.2882867091420254}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.8697318007662835, "obj2": 0.0560946701741423}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem_Server ,PN ),Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * DDR ) ,( Const - CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( ( BR - BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( AMS ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,MUM ) - ( RMSe * MUC ) )", "obj1": 0.9846743295019157, "obj2": 0.008056642034764382}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6245210727969349, "obj2": 0.23600387117925908}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9616858237547893, "obj2": 0.020603815516428366}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ARS ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9501915708812261, "obj2": 0.028071155444569073}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9731800766283525, "obj2": 0.014010003531837756}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( MDR * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9655172413793104, "obj2": 0.01837671503556008}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) ) )", "obj1": 0.867816091954023, "obj2": 0.05924689640720562}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( RRS ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9712643678160919, "obj2": 0.01588498079861767}], "10": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU - MUC ) * MLU ) * RCSe ) / ( RMSe * ( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( MDR - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( RRS - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( RRSe + MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( DS * ( ( DS * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( AMS - MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * DS ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6992337164750958, "obj2": 0.17595833073720432}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.6724137931034483, "obj2": 0.19561001084577975}, {"determining": "( ( ACS - ( MDR - ( ACS - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.7490421455938697, "obj2": 0.12968145117338473}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) + RCSe ) - Max( MUC,CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03305165109244143}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.8007662835249042, "obj2": 0.08854079533595995}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6302681992337165, "obj2": 0.23591650946328288}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8180076628352491, "obj2": 0.07454593371061384}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6091954022988506, "obj2": 0.24700543633376443}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - Max( ( DDR - ( MDR - ARS ) ),( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC - MUM ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.25766855004759376}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.7681992337164751, "obj2": 0.10819969108316445}, {"determining": "( ( ACS - ( ARS - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR * RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.7681992337164751, "obj2": 0.10819969108316445}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9501915708812261, "obj2": 0.028071155444569073}, {"determining": "( ( Min( ( DDR - ( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ARS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RMSe ) / ( ( CS + MUM ) / Min( Max( MUC,Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) ,DS ) ) )", "obj1": 0.6839080459770115, "obj2": 0.18568329188197785}, {"determining": "( ( ACS - ( MDR - ( FirstVNF_RAM_Server - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / ( Min( Max( MUM,CS ) ,DS ) - ( RRSe / RRSe ) ) ) )", "obj1": 0.7298850574712644, "obj2": 0.13489542415019196}, {"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.578544061302682, "obj2": 0.29257733567097366}, {"determining": "( ( Const * RRS ) - ( Min( ( BR + MDR ) ,Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RMSe * DS ) / MUC ),RCSe ) / ( RMSe * DS ) )", "obj1": 0.6915708812260536, "obj2": 0.1773481781422139}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( ACS - ( MDR - ( ACS * ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( MLU - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.7375478927203065, "obj2": 0.13351130251419294}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6762452107279694, "obj2": 0.1891218519534759}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07058173491197291}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.24349524638683712}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "Min( ( DDR - ( ( Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( ( DS * ( ( DS * MUR ) - Min( MLU ,DS ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.5977011494252874, "obj2": 0.2648906745507252}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( Max( DDR,Min( ACS ,FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Min( MUR ,MLU ) / ( CS + MUC ) ) + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * ( MUR / MLU ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06349690315185073}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - RRS ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUC ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.05178149640352524}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( CS + MUM ) / ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) ) )", "obj1": 0.867816091954023, "obj2": 0.05924689640720562}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.06881496924396666}, {"determining": "Min( ( MRS - ( MDR - ARS ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * DS ) - ( MLU + DS ) )", "obj1": 0.5900383141762452, "obj2": 0.29134101718814015}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem_Server ,PN ),Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * DDR ) ,( Const - CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( ( BR - BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( AMS ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,MUM ) - ( RMSe * MUC ) )", "obj1": 0.9846743295019157, "obj2": 0.008056642034764382}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ),MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8850574712643678, "obj2": 0.04578268293183965}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( MUC,CS ),MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9540229885057471, "obj2": 0.02556722620772824}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06601598177808832}, {"determining": "Min( ( DDR - ( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( RRSe - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.5977011494252874, "obj2": 0.2648906745507252}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MUM - RRSe ),( RMSe + ( MUC + RRSe ) ) ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9731800766283525, "obj2": 0.014010003531837756}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.05078200694974953}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * ( BR + MDR ) ) ,( FirstVNF_Mem - ARS ) ) ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RRSe ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06546496491264565}, {"determining": "( FirstVNF_CPU - Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.5919540229885057, "obj2": 0.2882867091420254}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8908045977011494, "obj2": 0.04365664587849985}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( MDR / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * ( MUR + MLU ) ) )", "obj1": 0.8620689655172413, "obj2": 0.06121812683950435}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_Mem_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / ( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ) * DS ) ) / ( RMSe * DS ) )", "obj1": 0.896551724137931, "obj2": 0.04158182179645578}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,BR ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.9789272030651341, "obj2": 0.011733303935464187}], "11": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( ACS - ( MDR - ARS ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * ( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU - MUC ) * MLU ) * RCSe ) / ( RMSe * ( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( DS * ( ( DS * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( AMS - MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) + RCSe ) - Max( MUC,CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03305165109244143}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6647509578544061, "obj2": 0.19746538125404015}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7279693486590039, "obj2": 0.13024455342284014}, {"determining": "( ( ACS - ( MDR - ( ACS - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - RRSe ) - ( RRSe / RRSe ) )", "obj1": 0.7490421455938697, "obj2": 0.12968145117338473}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RRSe / RRSe ) / ( RMSe * DS ) )", "obj1": 0.7567049808429118, "obj2": 0.11669415513724012}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6302681992337165, "obj2": 0.23591650946328288}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "( ( ACS - ( MDR - ( FirstVNF_RAM_Server - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.7030651340996169, "obj2": 0.15477492537804602}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * DS ) * RCSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6973180076628352, "obj2": 0.1714378962586665}, {"determining": "( ( ACS - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * DS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9636015325670498, "obj2": 0.016025019553419055}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) )", "choosing": "( Max( DS,( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7969348659003831, "obj2": 0.08869520906823432}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( Max( FirstVNF_RAM_Server,MDR ) ,( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9501915708812261, "obj2": 0.028071155444569073}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( DS * ( RRSe - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.29161994679958897}, {"determining": "( ( ACS - ( MDR - ( FirstVNF_RAM_Server - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( Max( MUR,CS ) - ( RMSe * RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.15126378505805305}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + PN ) - Max( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RRSe ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.9731800766283525, "obj2": 0.009387616685200186}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6839080459770115, "obj2": 0.17934411272237671}, {"determining": "Min( DDR ,( ( MRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,BR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( Max( MUC,MUC ) * MLU ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.28574900867563713}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( MUC,CS ),MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9540229885057471, "obj2": 0.02556722620772824}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem_Server ,PN ),Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * DDR ) ,( Const - CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( ( BR - BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( AMS ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,MUM ) - ( RMSe * MUC ) )", "obj1": 0.9846743295019157, "obj2": 0.008056642034764382}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "( ( Max( Min( MRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUM ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6091954022988506, "obj2": 0.24700543633376443}, {"determining": "( ( Const * RRS ) - ( Min( ( BR + MDR ) ,Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RMSe * DS ) / MUC ),RCSe ) / ( RMSe * DS ) )", "obj1": 0.6915708812260536, "obj2": 0.1773481781422139}, {"determining": "Min( ( DDR - ( ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) - ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( RRSe - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) / Min( ( MUC * CS ) ,DS ) )", "obj1": 0.5977011494252874, "obj2": 0.2648906745507252}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) / MUC ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.7662835249042146, "obj2": 0.10846658182071173}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( MDR / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * ( MUR + MLU ) ) )", "obj1": 0.8620689655172413, "obj2": 0.06121812683950435}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU * DS ) )", "obj1": 0.6704980842911877, "obj2": 0.19484646873128392}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.06881496924396666}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ),MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8639846743295019, "obj2": 0.05509078041727088}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( MDR / Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUC ) * ( Max( ( ( RMSe * DS ) / MUC ),RCSe ) / ( RMSe * DS ) ) ) * RRSe ) * RCSe ) / ( RMSe * ( MUR + MLU ) ) )", "obj1": 0.7720306513409961, "obj2": 0.10386515967665062}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.24349524638683712}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.25766855004759376}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6762452107279694, "obj2": 0.1891218519534759}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( Max( DDR,Min( ACS ,FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Min( MUR ,MLU ) / ( CS + MUC ) ) + MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * ( MUR / MLU ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06349690315185073}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6302681992337165, "obj2": 0.23591650946328288}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) ) - ( ACS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.842911877394636, "obj2": 0.06480956840233908}, {"determining": "( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - Max( ( DDR - ( MDR - ARS ) ),( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC - MUM ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.25766855004759376}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8180076628352491, "obj2": 0.07454593371061384}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - RRS ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUC ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.05178149640352524}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.24349524638683712}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6762452107279694, "obj2": 0.1891218519534759}], "12": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU - MUC ) * MLU ) * RCSe ) / ( RMSe * ( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( ACS - ( MDR - ARS ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * ( ( ( ( Max( MUC,MUC ) * MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( DS * ( ( DS * RCSe ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( Min( ACS ,BR ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) + RCSe ) - Max( MUC,CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03305165109244143}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6839080459770115, "obj2": 0.17934411272237671}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15992941500175684}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.7911877394636015, "obj2": 0.08807414057700036}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.6628352490421456, "obj2": 0.19838969660414832}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6302681992337165, "obj2": 0.23591650946328288}, {"determining": "( ( ACS - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * DS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9636015325670498, "obj2": 0.016025019553419055}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7279693486590039, "obj2": 0.13024455342284014}, {"determining": "( ( Max( Min( MRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUM ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6091954022988506, "obj2": 0.24700543633376443}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,( ( RRSe / RRSe ) / Min( RMSe ,DS ) ) ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2641445402452212}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( CS + MUC ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.9482758620689655, "obj2": 0.029863839776632574}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - RRS ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,MUC ) / ( RMSe * DS ) )", "obj1": 0.8697318007662835, "obj2": 0.05178149640352524}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) / MUC ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.7452107279693486, "obj2": 0.1237774426073782}, {"determining": "( ( ACS - ( MDR - ( FirstVNF_RAM_Server - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR - Max( Min( ( Min( RMSe ,RRSe ) * ( MUR / MLU ) ) ,( Min( MUR ,MLU ) / ( CS + MUC ) ) ),( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ) ) ) - ( RMSe / RRSe ) )", "obj1": 0.7030651340996169, "obj2": 0.15477492537804602}, {"determining": "Min( ( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) - Min( MLU ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.28060818000927223}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( DS * ( RRSe - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.578544061302682, "obj2": 0.29161994679958897}, {"determining": "( ( ACS - ( MDR - ( FirstVNF_RAM_Server - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( Max( MUR,CS ) - ( RMSe * RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.15126378505805305}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.9731800766283525, "obj2": 0.009241517071180906}, {"determining": "Min( DDR ,( ( MRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,BR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( Max( MUC,MUC ) * MLU ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.28574900867563713}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( MUC,CS ),MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9540229885057471, "obj2": 0.02556722620772824}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8888888888888888, "obj2": 0.04649786894974527}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) ) - ( ACS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.06241659068179108}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RRSe / RRSe ) / ( RMSe * DS ) )", "obj1": 0.7567049808429118, "obj2": 0.11669415513724012}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( AMS - MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( ( BR + FirstVNF_RAM ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( DS,CS ) ,DS ) ) ) * ( ( ( ( RMSe * DS ) / MUC ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.12766957311438942}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) ) - ( ACS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.842911877394636, "obj2": 0.06480956840233908}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) * ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem_Server ,PN ),Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * DDR ) ,( Const - CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( ( BR - BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( AMS ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,MUM ) - ( RMSe * MUC ) )", "obj1": 0.9846743295019157, "obj2": 0.008056642034764382}, {"determining": "( ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) - ( ARS + MDR ) )", "choosing": "( Max( DS,( ( RRSe * MUR ) - Min( Max( DS,( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.8908045977011494, "obj2": 0.04633935899515536}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU * DS ) )", "obj1": 0.6704980842911877, "obj2": 0.19484646873128392}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8314176245210728, "obj2": 0.06982563821180973}, {"determining": "( ( Min( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( ( RMSe * DS ),MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8601532567049809, "obj2": 0.05694463852364313}, {"determining": "( ( ACS - ( PN - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RRSe / RRSe ) / ( MLU + DS ) )", "obj1": 0.7662835249042146, "obj2": 0.10838552552673372}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.24349524638683712}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6762452107279694, "obj2": 0.1891218519534759}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.25766855004759376}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8180076628352491, "obj2": 0.07454593371061384}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.25766855004759376}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6302681992337165, "obj2": 0.23591650946328288}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUR - DS ) - ( MUR - RCSe ) ) + ( Max( MUR,MUR ) + ( MLU * RCSe ) ) ),MUC ) * MLU ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8639846743295019, "obj2": 0.05509078041727088}], "13": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( ACS / Min( MDR ,( ( AMS - MDR ) - Max( RRS,FirstVNF_CPU_Server ) ) ) ) / ( ARS + MDR ) ) - ( ACS + MDR ) )", "choosing": "( Max( MUM,( ( RRSe * MUR ) / Min( Max( MUM,CS ) ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU - MUC ) * MLU ) * RCSe ) / ( RMSe * ( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) ) ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "( ( DS * ( ( DS * RCSe ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( AMS - MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( MUC,CS ),MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9540229885057471, "obj2": 0.02556722620772824}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.7911877394636015, "obj2": 0.08807414057700036}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ACS - ( ( ( BR + MDR ) - Max( Min( MRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9310344827586207, "obj2": 0.029609072029028658}, {"determining": "( ( ACS - ( PN - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RRSe / RRSe ) / ( MLU + DS ) )", "obj1": 0.7662835249042146, "obj2": 0.10838552552673372}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6283524904214559, "obj2": 0.23271492865949864}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RRSe / RRSe ) / ( RMSe * DS ) )", "obj1": 0.7567049808429118, "obj2": 0.11669415513724012}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) + RCSe ) - Max( MUC,CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03305165109244143}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15992941500175684}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8314176245210728, "obj2": 0.06982563821180973}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) * ( ( RRSe + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.24349524638683712}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6762452107279694, "obj2": 0.1891218519534759}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6839080459770115, "obj2": 0.17934411272237671}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5900383141762452, "obj2": 0.27982388205186576}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,RRSe ) ,DS ) )", "obj1": 0.7011494252873564, "obj2": 0.1515772040852646}, {"determining": "( ( Max( Min( MRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUM ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6091954022988506, "obj2": 0.24700543633376443}, {"determining": "( ( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) ) - ( ( ( BR + MDR ) - RRS ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MUC,MUC ) ) / ( RMSe * DS ) )", "obj1": 0.8409961685823755, "obj2": 0.06464774812978825}, {"determining": "( ( ACS - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * DS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9636015325670498, "obj2": 0.016025019553419055}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.6628352490421456, "obj2": 0.19838969660414832}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - RRS ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8888888888888888, "obj2": 0.04633004845310017}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8180076628352491, "obj2": 0.07454593371061384}, {"determining": "( ( ( DDR - ( Min( ACS ,BR ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.27259057754314747}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( ( DS * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7241379310344828, "obj2": 0.13456690979122266}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU * DS ) )", "obj1": 0.6704980842911877, "obj2": 0.19484646873128392}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( ( MUC / MUM ) ,DS ) )", "obj1": 0.6628352490421456, "obj2": 0.19838969660414832}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( ( BR + FirstVNF_RAM ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( DS,CS ) ,DS ) ) ) * ( ( ( ( RMSe * DS ) / MUC ) + MUR ) - Min( DS ,DS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.12766957311438942}, {"determining": "( ( ACS - ( MDR - ( FirstVNF_RAM_Server - ( MDR - ARS ) ) ) ) - ( ARS + MDR ) )", "choosing": "( Max( MUR,CS ) - ( RMSe * RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.15126378505805305}, {"determining": "( ( ( ( DDR - CRS ) + ( FirstVNF_RAM_Server / DDR ) ) - ( ( FirstVNF_Mem_Server / CRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) - ( ( ( Min( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / BR ) ),( ( FirstVNF_RAM_Server / ACS ) / ( CRS / FirstVNF_Mem ) ) ) ,( ( ( AMS - FirstVNF_CPU_Server ) + ( RRS / CRS ) ) + ( Max( AMS,FirstVNF_Mem ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) * ( ( ( ( FirstVNF_RAM * BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem_Server ,PN ),Min( RRS ,FirstVNF_RAM ) ) ) + ( ( Max( MDR,ACS ) + ( PN + MDR ) ) * Min( Min( FirstVNF_RAM ,BR ) ,Max( MDR,DDR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_Mem * DDR ) ,( Const - CRS ) ) - ( ( AMS + DDR ) / ( MDR / Const ) ) ),Min( Max( ( ACS * ACS ),( MRS - FirstVNF_Mem_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * ( ARS / PN ) ) ) ) / ( Min( ( ( AMS * FirstVNF_CPU ) + ( Const * AMS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( RRS - FirstVNF_Mem ) ) - ( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) + ( Min( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * Min( ACS ,DDR ) ) / ( ( BR - BR ) - Min( ARS ,PN ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( CRS / PN ) ) ) ) ,( ( ( Min( ARS ,DDR ) / Min( AMS ,MRS ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server - Const ) / ( ACS + MDR ) ) ,( ( FirstVNF_CPU + CRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) + ( Max( Min( ( ( ARS * PN ) + Min( AMS ,FirstVNF_Mem_Server ) ) ,( Max( RRS,Const ) + Max( CRS,RRS ) ) ),( ( ( FirstVNF_Mem * Const ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,DDR ) + ( CRS * FirstVNF_CPU ) ) ) ) / Min( Max( ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_RAM * DDR ) ),( Max( CRS,Const ) * Max( FirstVNF_Mem,ARS ) ) ) ,( Max( ( ACS + FirstVNF_CPU ),Min( ACS ,BR ) ) / Max( ( CRS / FirstVNF_CPU ),Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,MUM ) - ( RMSe * MUC ) )", "obj1": 0.9846743295019157, "obj2": 0.008056642034764382}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * Min( Max( MUC,CS ) ,( ( RRSe / RRSe ) / Min( RMSe ,DS ) ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6264367816091954, "obj2": 0.23409190145597011}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.9731800766283525, "obj2": 0.009241517071180906}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7279693486590039, "obj2": 0.13024455342284014}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6839080459770115, "obj2": 0.17934411272237671}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15992941500175684}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( RRSe / MUR ) / Min( RMSe ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.25658152976460163}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,DDR ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( MUC,CS ),Max( MUC,CS ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9712643678160919, "obj2": 0.015963171970050254}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8812260536398467, "obj2": 0.05031127658347641}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) / MUC ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.7452107279693486, "obj2": 0.1237774426073782}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) ) - ( ACS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.06241659068179108}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) / MUC ) * RCSe ) - ( RMSe / RRSe ) )", "obj1": 0.7452107279693486, "obj2": 0.1237774426073782}], "14": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( ACS / Min( MDR ,( ( AMS - MDR ) - Max( RRS,FirstVNF_CPU_Server ) ) ) ) / ( ARS + MDR ) ) - ( ACS + MDR ) )", "choosing": "( Max( MUM,( ( RRSe * MUR ) / Min( Max( MUM,CS ) ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( MDR ,( ( AMS - MDR ) - Max( RRS,FirstVNF_CPU_Server ) ) ) ) / ( ARS + MDR ) ) - ( ACS + MDR ) )", "choosing": "( Max( MUM,( ( RRSe * MUR ) / Min( Max( MUM,CS ) ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( DS * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( RRSe / MUR ) / Min( RMSe ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.25658152976460163}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.27259057754314747}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.8659003831417624, "obj2": 0.05709758037884223}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.18441172627815205}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( RMSe,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( ( ACS - ( MDR - ARS ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) )", "obj1": 0.6513409961685823, "obj2": 0.21017155182385633}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,CS ) + RCSe ) - Max( MUC,CS ) )", "obj1": 0.9195402298850575, "obj2": 0.03305165109244143}, {"determining": "( Max( ACS,( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / CRS ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * DS ) ) * MUR ) / ( RMSe * DS ) )", "obj1": 0.9482758620689655, "obj2": 0.022042098610837165}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - RRS ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MLU ) * RRSe ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8888888888888888, "obj2": 0.04633004845310017}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8812260536398467, "obj2": 0.05031127658347641}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Max( MUC,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7586206896551724, "obj2": 0.1095294244044464}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5900383141762452, "obj2": 0.27982388205186576}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + Const ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) / MUC ) * RCSe ) - ( RMSe / RRSe ) )", "obj1": 0.7471264367816092, "obj2": 0.11653820819078009}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.7279693486590039, "obj2": 0.12620289074570845}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6283524904214559, "obj2": 0.23271492865949864}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.7662835249042146, "obj2": 0.10427067946173048}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.789272030651341, "obj2": 0.09482056362464096}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) / MUC ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.7452107279693486, "obj2": 0.1237774426073782}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / DS )", "obj1": 0.6685823754789272, "obj2": 0.19033198538396773}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * Min( Max( MUC,CS ) ,( ( RRSe / RRSe ) / Min( RMSe ,DS ) ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6206896551724138, "obj2": 0.23529662115637345}, {"determining": "( ( ACS - ( ( ( BR + MDR ) - Max( Min( MRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9310344827586207, "obj2": 0.029609072029028658}, {"determining": "( ( ACS - ( ( ( BR + MDR ) - Max( Min( MRS ,FirstVNF_RAM_Server ),( FirstVNF_RAM - Min( ACS ,FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS - RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe / DS ) )", "obj1": 0.9310344827586207, "obj2": 0.029609072029028658}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6954022988505747, "obj2": 0.1567367841586722}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.7911877394636015, "obj2": 0.08807414057700036}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) + ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.9731800766283525, "obj2": 0.009241517071180906}, {"determining": "( ( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) ) - ( ( ( BR + MDR ) - RRS ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MUC,MUC ) ) / ( RMSe * DS ) )", "obj1": 0.8409961685823755, "obj2": 0.06464774812978825}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( ( MUC / MUM ) ,DS ) )", "obj1": 0.6628352490421456, "obj2": 0.19838969660414832}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe * DS ) )", "obj1": 0.8180076628352491, "obj2": 0.07454593371061384}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,RRSe ) ,DS ) )", "obj1": 0.7011494252873564, "obj2": 0.1515772040852646}, {"determining": "( ( FirstVNF_RAM_Server - ( MDR - ARS ) ) - ( ARS / MDR ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe - DS ) )", "obj1": 0.8084291187739464, "obj2": 0.08275150712965558}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6666666666666666, "obj2": 0.19750188449630768}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,DDR ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( MUC,CS ),Max( MUC,CS ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9712643678160919, "obj2": 0.015963171970050254}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) - ( ACS + MDR ) )", "choosing": "( ( DS * ( ( ( RMSe * DS ) * MUR ) - ( MLU - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.8390804597701149, "obj2": 0.06963350501962878}, {"determining": "( ( AMS - ( MDR - MRS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,( ( RRSe + MUR ) - Min( DS ,DS ) ) ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.9559386973180076, "obj2": 0.01868312610838091}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RCSe + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.8256704980842912, "obj2": 0.07292660211351501}], "15": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( Min( ACS ,FirstVNF_RAM_Server ) - ( ARS + MDR ) )", "choosing": "( ( ( DS * DS ) - Min( MLU ,DS ) ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( MDR ,( ( AMS - MDR ) - Max( RRS,FirstVNF_CPU_Server ) ) ) ) / ( ARS + MDR ) ) - ( ACS + MDR ) )", "choosing": "( Max( MUM,( ( RRSe * MUR ) / Min( Max( MUM,CS ) ,DS ) ) ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.18441172627815205}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( RRSe / MUR ) / Min( RMSe ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.25658152976460163}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( ( ACS - ( MDR - ARS ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) )", "obj1": 0.6513409961685823, "obj2": 0.21017155182385633}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6283524904214559, "obj2": 0.23271492865949864}, {"determining": "( ( Const - ( ( ( DDR - ( MDR - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( MLU / Max( MUC,CS ) )", "obj1": 0.6360153256704981, "obj2": 0.2176503829762429}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) * RRSe ) * RCSe ) / ( RMSe * MUC ) )", "obj1": 0.8869731800766284, "obj2": 0.04593636410117852}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.8659003831417624, "obj2": 0.056452205156808925}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5938697318007663, "obj2": 0.27259057754314747}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * Min( ( AMS / FirstVNF_RAM_Server ) ,( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC - MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5900383141762452, "obj2": 0.27982388205186576}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( ( MUC / MUM ) ,DS ) )", "obj1": 0.6628352490421456, "obj2": 0.19838969660414832}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) / MUC ) * RCSe ) - ( Max( DS,( ( RRSe * MUR ) / Min( Max( MUM,CS ) ,DS ) ) ) - Min( MLU ,DS ) ) )", "obj1": 0.9559386973180076, "obj2": 0.017872496569664224}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) + ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.9731800766283525, "obj2": 0.009241517071180906}, {"determining": "( ( ACS - ( ( ( BR + MDR ) - Max( Min( MRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9329501915708812, "obj2": 0.02830727163118603}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / DS )", "obj1": 0.6685823754789272, "obj2": 0.19033198538396773}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( RMSe,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * Min( ( MUM * RRSe ) ,DS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7854406130268199, "obj2": 0.09380819831854655}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / ( ACS / Min( MDR ,( ( AMS - MDR ) - Max( RRS,FirstVNF_CPU_Server ) ) ) ) ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( ( ACS - ( MDR - ARS ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / ( RRSe - Min( MLU ,DS ) ) )", "obj1": 0.9865900383141762, "obj2": 0.005547860387625894}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7164750957854407, "obj2": 0.1413025235596078}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * ( ARS + MDR ) ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,Const ) ,( ( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,DDR ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( MUC,CS ),Max( MUC,CS ) ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9712643678160919, "obj2": 0.015963171970050254}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / MUC ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03286226400991422}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( FirstVNF_Mem_Server ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MLU ) * RCSe ) / ( RMSe + DS ) )", "obj1": 0.6877394636015326, "obj2": 0.16385209345542145}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( DDR - Max( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * DS ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8754789272030651, "obj2": 0.05077230971634193}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.7911877394636015, "obj2": 0.08807414057700036}, {"determining": "( ( ACS - ( ( BR + MDR ) - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( DS * MUR ) - Min( MLU ,DS ) ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.8544061302681992, "obj2": 0.061256322680874}, {"determining": "( ( ACS - ( Const - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,MUM ) ,RCSe ) - Max( MUC,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7547892720306514, "obj2": 0.11499083894278782}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( Max( ACS,( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / CRS ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * DS ) ) * MUR ) / ( RMSe * DS ) )", "obj1": 0.9482758620689655, "obj2": 0.022042098610837165}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6954022988505747, "obj2": 0.1567367841586722}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RCSe + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.8256704980842912, "obj2": 0.07292660211351501}, {"determining": "( ( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) ) - ( ( ( MDR + MDR ) - RRS ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUC,MUC ) ) / ( RMSe * DS ) )", "obj1": 0.8409961685823755, "obj2": 0.06464774812978825}, {"determining": "( ( FirstVNF_RAM - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( MUM * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04802682858315933}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8524904214559387, "obj2": 0.06220631486636721}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) - ( ACS + MDR ) )", "choosing": "( ( DS * ( ( ( RMSe * DS ) * MUR ) - ( MLU - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.8371647509578544, "obj2": 0.07076694182743569}, {"determining": "( ( FirstVNF_RAM_Server - ( MDR - ARS ) ) - ( ARS / MDR ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) * MUC ) * RCSe ) / ( RMSe * DS ) ) / ( RMSe - DS ) )", "obj1": 0.8084291187739464, "obj2": 0.08275150712965558}, {"determining": "( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15828183661903833}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6666666666666666, "obj2": 0.19750188449630768}], "16": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( BR + MDR ) ) ) - ( ACS + MDR ) )", "choosing": "( ( DS * ( ( ( RMSe * DS ) * MUR ) - ( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) ) ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,FirstVNF_RAM_Server ) - ( ARS + MDR ) )", "choosing": "( ( ( DS * DS ) - Min( MLU ,DS ) ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( BR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.18441172627815205}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * Min( Max( MUM,RRSe ) ,DS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7720306513409961, "obj2": 0.10762010726434885}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * Min( ( AMS / FirstVNF_RAM_Server ) ,( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC - MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6283524904214559, "obj2": 0.23271492865949864}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / MUC ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03286226400991422}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7394636015325671, "obj2": 0.1281072038412683}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.9022988505747126, "obj2": 0.03809392237470578}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RCSe + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.8256704980842912, "obj2": 0.07292660211351501}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( RRSe / MUR ) / Min( RMSe ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.25658152976460163}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7490421455938697, "obj2": 0.12257570744821497}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7164750957854407, "obj2": 0.13592424284191604}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.7911877394636015, "obj2": 0.08807414057700036}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7030651340996169, "obj2": 0.15425975545633827}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_RAM_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.632183908045977, "obj2": 0.22448167796482954}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( Min( CS ,MLU ),CS ) ,DS ) )", "obj1": 0.6513409961685823, "obj2": 0.20824661440210523}, {"determining": "( ( ACS - ( ( ( BR + MDR ) - Max( Min( MRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Min( ACS ,( AMS / FirstVNF_RAM_Server ) ) ) ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9291187739463601, "obj2": 0.029915629617757667}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( RMSe,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( ( MUC / MUM ) ,DS ) )", "obj1": 0.6628352490421456, "obj2": 0.19838969660414832}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Max( MUC,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7547892720306514, "obj2": 0.11499083894278782}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8620689655172413, "obj2": 0.05607380568010388}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( ( MUC / CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8716475095785441, "obj2": 0.050363941831622724}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.20428614487489188}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Const - ( ( ( DDR - ( MDR - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( MLU / Max( MUC,CS ) )", "obj1": 0.6360153256704981, "obj2": 0.2176503829762429}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) * RRSe ) * RCSe ) / ( RMSe * MUC ) )", "obj1": 0.8946360153256705, "obj2": 0.04479388151066685}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( FirstVNF_Mem_Server ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MLU ) * RCSe ) / ( RMSe + DS ) )", "obj1": 0.6877394636015326, "obj2": 0.16385209345542145}, {"determining": "( ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) ) - ( ARS + MDR ) )", "choosing": "( MLU / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.9674329501915708, "obj2": 0.012179030966547516}, {"determining": "( Max( ACS,( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / CRS ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * DS ) ) * MUR ) / ( RMSe * DS ) )", "obj1": 0.9482758620689655, "obj2": 0.022042098610837165}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / ( ACS / Min( MDR ,( ( AMS - MDR ) - Max( RRS,FirstVNF_CPU ) ) ) ) ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( ( ACS - ( MDR - ARS ) ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RRSe - Min( MLU ,DS ) ) )", "obj1": 0.9329501915708812, "obj2": 0.024448051668428044}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * Min( ( MUM * RRSe ) ,DS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7854406130268199, "obj2": 0.09380819831854655}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( ( ( DDR - ( MDR - ARS ) ) - ARS ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) / MUC ) * RCSe ) - ( Max( DS,( ( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) * MUR ) / Min( Max( MUM,CS ) ,DS ) ) ) - Min( MLU ,DS ) ) )", "obj1": 0.9559386973180076, "obj2": 0.017351215436932955}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.8371647509578544, "obj2": 0.0687946429837394}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) + ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.9731800766283525, "obj2": 0.009241517071180906}, {"determining": "( ( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) ) - ( ( ( BR + MDR ) - RRS ) + ( ( ( Const - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) )", "obj1": 0.9808429118773946, "obj2": 0.008044755906636957}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.9578544061302682, "obj2": 0.014604469808398421}, {"determining": "( ( FirstVNF_RAM - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( MUM * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.9425287356321839, "obj2": 0.02367855855946267}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.19107719569187173}], "17": [{"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - Min( ( ARS - ( MDR / ARS ) ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC * MUM ) / Min( Max( Min( RCSe ,Max( MUM,CS ) ),CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( ( AMS * Const ) ,( BR + MDR ) ) ) - ( ACS + MDR ) )", "choosing": "( ( DS * ( ( ( RMSe * DS ) * MUR ) - ( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) ) ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( BR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + PN ) ) ) ) )", "choosing": "( ( MLU * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7011494252873564, "obj2": 0.15003431163773784}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) * RRSe ) * RCSe ) / ( RMSe * MUC ) )", "obj1": 0.8946360153256705, "obj2": 0.04479388151066685}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8620689655172413, "obj2": 0.05607380568010388}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( FirstVNF_Mem_Server ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MLU ) * RCSe ) / ( RMSe + DS ) )", "obj1": 0.6877394636015326, "obj2": 0.16385209345542145}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( RRSe / MUR ) / Min( RMSe ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.25658152976460163}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06375280198261997}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6283524904214559, "obj2": 0.23271492865949864}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.7911877394636015, "obj2": 0.08807414057700036}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.18441172627815205}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7490421455938697, "obj2": 0.12257570744821497}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.19107719569187173}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8716475095785441, "obj2": 0.050363941831622724}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * Min( ( MUM * RRSe ) ,DS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7854406130268199, "obj2": 0.09380819831854655}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Max( MUC,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7547892720306514, "obj2": 0.11135212720140235}, {"determining": "( Min( ACS ,( MDR - PN ) ) - ( ARS + MDR ) )", "choosing": "( ( MUR * CS ) - Min( MLU ,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09750045731149787}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( Min( CS ,MLU ),CS ) ,DS ) )", "obj1": 0.6513409961685823, "obj2": 0.20824661440210523}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( RMSe,CS ) ,DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( ( MUC / MUM ) ,DS ) )", "obj1": 0.6628352490421456, "obj2": 0.19838969660414832}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7164750957854407, "obj2": 0.13592424284191604}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7394636015325671, "obj2": 0.12298116680150042}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) / ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUR + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( Const - ( ( ( DDR - ( MDR - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( MLU / Max( MUC,CS ) )", "obj1": 0.6360153256704981, "obj2": 0.2176503829762429}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7298850574712644, "obj2": 0.12805562429494993}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.03807887609548015}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * Min( Max( MUM,RRSe ) ,MUC ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7720306513409961, "obj2": 0.10521746993636696}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / ( MDR - ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( MLU + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.14134418643480295}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( RCSe + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.8237547892720306, "obj2": 0.07633138661379954}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * Min( ( AMS / FirstVNF_RAM_Server ) ,( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC - MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - DDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MUR,RRSe ) * ( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 0.9521072796934866, "obj2": 0.01964104298566361}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.7624521072796935, "obj2": 0.11092090198956593}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) )", "obj1": 0.7701149425287356, "obj2": 0.10953147232937907}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( Max( AMS,Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * DS ) ) - MUR ) / ( RMSe * DS ) )", "obj1": 0.9252873563218391, "obj2": 0.03230308526140382}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( ( MUC / CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8716475095785441, "obj2": 0.050363941831622724}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.07067280256893756}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / FirstVNF_RAM_Server ) ) ),BR ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.03663282501482905}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_RAM_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.632183908045977, "obj2": 0.22448167796482954}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.18441172627815205}], "18": [{"determining": "( ( ( ( ( ( ( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_RAM ,ARS ) ) * ( ( ACS - MDR ) / Min( ARS ,AMS ) ) ) + ( ( Max( BR,FirstVNF_RAM ) + ( CRS + MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,Const ) ) * ( ( AMS + MRS ) * ( FirstVNF_CPU_Server + BR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Max( CRS,AMS ) ) / Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( MRS,FirstVNF_CPU ) ) ) ) ) - Max( ( Max( ( ( ACS * FirstVNF_CPU_Server ) * ( AMS * FirstVNF_Mem ) ),( ( FirstVNF_RAM + DDR ) - Max( FirstVNF_Mem,PN ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),( ACS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server * MDR ) - ( PN * AMS ) ) ) ),Max( Min( ( ( FirstVNF_Mem_Server / DDR ) - ( CRS - Const ) ) ,Min( ( DDR - RRS ) ,( FirstVNF_CPU / AMS ) ) ),( ( Min( MRS ,Const ) / Max( PN,Const ) ) + ( Max( ACS,DDR ) + ( PN + MRS ) ) ) ) ) ) + ( ( ( Min( ( ( MRS - MRS ) * ( PN + ARS ) ) ,( ( MRS * MDR ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) + Max( Min( Max( FirstVNF_Mem_Server,Const ) ,Min( CRS ,ARS ) ),( Min( PN ,Const ) * ( FirstVNF_Mem + DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,DDR ) + ( Const + MRS ) ) * ( Min( CRS ,CRS ) * ( FirstVNF_CPU_Server + MRS ) ) ) ,Max( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( FirstVNF_Mem_Server - MRS ) ),( ( FirstVNF_RAM_Server / PN ) / ( FirstVNF_CPU / AMS ) ) ) ) ) / Min( Max( ( ( Max( FirstVNF_CPU_Server,AMS ) + Max( Const,BR ) ) + ( Max( MRS,FirstVNF_RAM_Server ) * Min( ARS ,MRS ) ) ),( Min( Max( RRS,FirstVNF_CPU ) ,Min( ACS ,FirstVNF_CPU ) ) / ( ( AMS / ACS ) * Min( PN ,ARS ) ) ) ) ,( ( ( ( RRS - FirstVNF_Mem ) - ( ARS + ARS ) ) * ( Max( Const,FirstVNF_CPU ) / ( BR + FirstVNF_Mem_Server ) ) ) * Min( ( ( FirstVNF_Mem * RRS ) + ( AMS - CRS ) ) ,Min( ( ARS * MDR ) ,( ACS + MRS ) ) ) ) ) ) ) - Max( ( ( Min( Max( ( Min( ARS ,BR ) + Max( ACS,FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_CPU_Server,MRS ) * ( FirstVNF_CPU / MRS ) ) / Max( Max( ACS,AMS ),( BR - MDR ) ) ) ) * Max( ( ( ( RRS - RRS ) / Min( MDR ,MDR ) ) + Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,( MDR + ACS ) ) ),( Min( ( FirstVNF_Mem * MRS ) ,( Const * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( MDR + MDR ) ) ) ) ) + Max( ( ( ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ACS ) ) / ( ( ACS * DDR ) - ( Const * FirstVNF_Mem_Server ) ) ) / Min( ( ( CRS / FirstVNF_RAM_Server ) + ( PN - BR ) ) ,( ( FirstVNF_RAM + ARS ) / ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),( ( ( Min( MDR ,AMS ) - ( FirstVNF_RAM * Const ) ) / ( ( FirstVNF_Mem * RRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( Min( ( BR - MRS ) ,Max( AMS,CRS ) ) - Min( ( RRS / FirstVNF_RAM ) ,( FirstVNF_CPU / MRS ) ) ) ) ) ),( ( Max( ( ( ( AMS * AMS ) / Min( MRS ,RRS ) ) + Min( ( AMS - CRS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ),Min( ( Min( FirstVNF_RAM_Server ,MDR ) / ( Const + DDR ) ) ,Max( ( ARS / FirstVNF_RAM_Server ),( DDR * FirstVNF_CPU ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( MDR / DDR ) ) + ( ( DDR - CRS ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) * Min( Min( ( ARS * FirstVNF_Mem ) ,( ARS + FirstVNF_Mem ) ) ,( Max( AMS,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) - Min( ( Max( ( ( BR - FirstVNF_Mem_Server ) - ( Const * Const ) ),( Min( DDR ,AMS ) * ( MDR / MDR ) ) ) / Min( ( ( FirstVNF_CPU_Server - MDR ) / Max( MRS,CRS ) ) ,( ( RRS + AMS ) / Min( MRS ,ACS ) ) ) ) ,( ( ( ( MRS * FirstVNF_RAM ) * Max( DDR,FirstVNF_CPU_Server ) ) - ( ( Const / AMS ) * ( Const * FirstVNF_CPU ) ) ) * Max( Min( Max( RRS,Const ) ,Min( ACS ,AMS ) ),( ( FirstVNF_CPU + FirstVNF_CPU ) + ( Const * BR ) ) ) ) ) ) ) )", "choosing": "Min( Min( Max( Min( ( Max( Max( ( MUR + RCSe ),Min( MLU ,DS ) ),Min( ( MUC * MUR ) ,( MUR * CS ) ) ) * ( ( ( RMSe + CS ) / ( MUM + DS ) ) + ( ( DS / DS ) + ( RCSe - CS ) ) ) ) ,( Min( Max( Max( RCSe,MUC ),Min( MUC ,CS ) ) ,( ( MUC - RCSe ) / ( RRSe + MLU ) ) ) + ( ( ( RRSe - MUR ) + Max( MUM,RRSe ) ) / ( ( RCSe / MUC ) - ( MUM / RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUC ) / Max( CS,MUM ) ) * ( Min( CS ,DS ) - ( CS + CS ) ) ) * ( ( Min( CS ,MLU ) * Max( MUR,RCSe ) ) + Max( ( RCSe / MUM ),( MUC - RCSe ) ) ) ) / ( ( ( ( CS * CS ) - Min( MUR ,RCSe ) ) * Max( ( MLU + CS ),( MUC - MUM ) ) ) + ( Min( ( MUR / DS ) ,( MLU / MUM ) ) * Min( ( RCSe + MLU ) ,( MLU - MUR ) ) ) ) ) ) ,Min( ( ( Min( ( ( CS - RCSe ) * ( MUC / MUC ) ) ,Min( ( MUM - RRSe ) ,( DS / RMSe ) ) ) * ( Max( ( RMSe + RMSe ),Max( RMSe,RMSe ) ) / Max( ( CS + CS ),( CS * MLU ) ) ) ) - ( ( ( Max( CS,DS ) * ( MUM + MUR ) ) / ( ( RCSe + MUC ) - ( MUC + DS ) ) ) / ( ( ( MLU * MUC ) + ( DS * MUM ) ) + Max( ( DS - RMSe ),( RCSe / CS ) ) ) ) ) ,Min( ( ( ( ( MUM - MLU ) * Min( CS ,MUM ) ) * ( ( RCSe / MUC ) - ( MLU * RRSe ) ) ) / ( ( ( RCSe - RMSe ) + Max( MLU,RCSe ) ) - Max( ( RCSe * RMSe ),( MUC / RMSe ) ) ) ) ,Min( Min( ( Max( MUM,MUC ) + ( RRSe / DS ) ) ,Max( ( CS / DS ),( RCSe / RCSe ) ) ) ,( ( Max( MUC,MUR ) / Max( RRSe,RRSe ) ) / ( Min( RRSe ,CS ) / ( RRSe * RRSe ) ) ) ) ) ) ) ,Min( Min( Max( ( ( Max( Min( CS ,MUR ),( MUM + MUR ) ) - ( ( RMSe * RMSe ) - ( MUM - RRSe ) ) ) / Min( Min( ( MLU + RCSe ) ,( MUC + CS ) ) ,( ( MUR * CS ) * ( MLU * RRSe ) ) ) ),Min( ( Min( Max( MUR,RRSe ) ,( RRSe + MUM ) ) - Min( ( MUR - RCSe ) ,Min( MUM ,RCSe ) ) ) ,Min( ( ( MLU * MUM ) / Min( CS ,RRSe ) ) ,Max( ( MUR + MLU ),Max( RMSe,RCSe ) ) ) ) ) ,( ( Max( ( ( MUR * MUC ) - ( RRSe - CS ) ),Max( Min( RCSe ,MUR ),( MUC / RRSe ) ) ) / Min( ( ( RCSe / MUR ) - ( MUR - MUM ) ) ,( Min( MUM ,RRSe ) - Min( MUC ,MUR ) ) ) ) / Min( ( Max( ( MUM / RCSe ),Max( CS,MUR ) ) * ( ( RRSe + RCSe ) / ( RMSe - MUC ) ) ) ,( ( ( RRSe * MUR ) * ( RCSe - MUR ) ) * Max( Max( MLU,RRSe ),( MUR / MUR ) ) ) ) ) ) ,Min( ( Min( ( ( ( RMSe - RMSe ) + ( MLU - MUC ) ) - ( ( RRSe * CS ) / ( RMSe * RCSe ) ) ) ,( ( ( RCSe - RRSe ) * Min( MUC ,CS ) ) - Max( ( MUR - CS ),Max( RCSe,MUC ) ) ) ) * Max( ( ( Min( RMSe ,MUR ) / ( MUC + RCSe ) ) - ( Max( RRSe,MUC ) * ( CS - CS ) ) ),( Min( ( RCSe + CS ) ,( MLU - RRSe ) ) + Min( ( RMSe - MUC ) ,( RRSe - CS ) ) ) ) ) ,( ( Min( ( Max( RCSe,RMSe ) * ( MUC - RCSe ) ) ,Max( ( MUC - MUC ),Min( MUM ,RMSe ) ) ) / ( Min( ( MLU + MUC ) ,Min( RMSe ,MUM ) ) + ( ( RCSe / MUC ) + ( MUC / RRSe ) ) ) ) + ( ( ( ( MLU - RMSe ) * Max( RMSe,RMSe ) ) - ( ( MUC + DS ) - Max( MUC,MUM ) ) ) + ( Max( ( MUC / CS ),( RMSe / RMSe ) ) * ( ( MUM * MUR ) * ( MLU - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - Min( ( ARS - ( MDR / ARS ) ) ,( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC * MUM ) / Min( Max( Min( RCSe ,Max( MUM,CS ) ),CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( Max( AMS,Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * DS ) ) - MUR ) / ( RMSe * DS ) )", "obj1": 0.9252873563218391, "obj2": 0.03230308526140382}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( BR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( RRSe / MUR ) / Min( RMSe ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.25658152976460163}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_CPU_Server * RRS ) ,( ACS / BR ) ) ) - ( ( ( BR + FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6283524904214559, "obj2": 0.23271492865949864}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - DDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MUR,RRSe ) * ( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 0.9846743295019157, "obj2": 0.006659675577854559}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * MUR ) / ( RMSe * DS ) )", "obj1": 0.9655172413793104, "obj2": 0.013644016582998861}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + PN ) ) ) ) )", "choosing": "( ( MLU * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7011494252873564, "obj2": 0.15003431163773784}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - DDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MUR,RRSe ) * ( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 0.9521072796934866, "obj2": 0.01964104298566361}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06375280198261997}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7394636015325671, "obj2": 0.12159050463924531}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Max( MDR,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15828183661903833}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.18441172627815205}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / FirstVNF_RAM_Server ) ) ),BR ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.03663282501482905}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( Min( CS ,MLU ),CS ) ,DS ) )", "obj1": 0.6513409961685823, "obj2": 0.20824661440210523}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8582375478927203, "obj2": 0.05652564078516005}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7528735632183908, "obj2": 0.11869304844031228}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_RAM_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.632183908045977, "obj2": 0.22448167796482954}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.7624521072796935, "obj2": 0.11092090198956593}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) * RRSe ) * RCSe ) / ( RMSe * MUC ) )", "obj1": 0.8946360153256705, "obj2": 0.04479388151066685}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5747126436781609, "obj2": 0.29615092672539267}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( Const - ( ( ( DDR - ( MDR - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( MLU / Max( MUC,CS ) )", "obj1": 0.6360153256704981, "obj2": 0.2176503829762429}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.19107719569187173}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ( ACS - ARS ) - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 0.9521072796934866, "obj2": 0.01964104298566361}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( DDR - ( MDR - ARS ) ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + Min( Max( MUM,CS ) ,DS ) ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.6628352490421456, "obj2": 0.19328348835728754}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.03807887609548015}, {"determining": "( FirstVNF_RAM_Server - ( MDR + MDR ) )", "choosing": "( ( ( ( MUR / ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * MUC ) * MUR ) / ( RMSe * DS ) )", "obj1": 0.8314176245210728, "obj2": 0.06935022754732686}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8620689655172413, "obj2": 0.05607380568010388}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MLU,RRSe ) / ( RMSe / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) * ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 0.9578544061302682, "obj2": 0.014380637529840196}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8869731800766284, "obj2": 0.047136644927622026}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Max( MUC,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7547892720306514, "obj2": 0.11135212720140235}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( Const + MDR ) )", "choosing": "( MLU / ( ( Max( MLU,MUM ) * MLU ) * MUM ) )", "obj1": 0.657088122605364, "obj2": 0.20093744922528223}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04795876998198157}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / ( MDR - ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( MLU + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.14134418643480295}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.8371647509578544, "obj2": 0.06569496366558358}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) / ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUR + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RRSe - Min( MLU ,DS ) ) )", "obj1": 0.7318007662835249, "obj2": 0.12758477095402357}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}], "19": [{"determining": "( ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( DDR - ( MDR - ARS ) ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / Max( MUM,CS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( ( ( ( ( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_RAM ,ARS ) ) * ( ( ACS - MDR ) / Min( ARS ,AMS ) ) ) + ( ( Max( BR,FirstVNF_RAM ) + ( CRS + MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,Const ) ) * ( ( AMS + MRS ) * ( FirstVNF_CPU_Server + BR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_Mem ) / Max( CRS,AMS ) ) / Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( MRS,FirstVNF_CPU ) ) ) ) ) - Max( ( Max( ( ( ACS * FirstVNF_CPU_Server ) * ( AMS * FirstVNF_Mem ) ),( ( FirstVNF_RAM + DDR ) - Max( FirstVNF_Mem,PN ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),( ACS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server * MDR ) - ( PN * AMS ) ) ) ),Max( Min( ( ( FirstVNF_Mem_Server / DDR ) - ( CRS - Const ) ) ,Min( ( DDR - RRS ) ,( FirstVNF_CPU / AMS ) ) ),( ( Min( MRS ,Const ) / Max( PN,Const ) ) + ( Max( ACS,DDR ) + ( PN + MRS ) ) ) ) ) ) + ( ( ( Min( ( ( MRS - MRS ) * ( PN + ARS ) ) ,( ( MRS * MDR ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) + Max( Min( Max( FirstVNF_Mem_Server,Const ) ,Min( CRS ,ARS ) ),( Min( PN ,Const ) * ( FirstVNF_Mem + DDR ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,DDR ) + ( Const + MRS ) ) * ( Min( CRS ,CRS ) * ( FirstVNF_CPU_Server + MRS ) ) ) ,Max( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( FirstVNF_Mem_Server - MRS ) ),( ( FirstVNF_RAM_Server / PN ) / ( FirstVNF_CPU / AMS ) ) ) ) ) / Min( Max( ( ( Max( FirstVNF_CPU_Server,AMS ) + Max( Const,BR ) ) + ( Max( MRS,FirstVNF_RAM_Server ) * Min( ARS ,MRS ) ) ),( Min( Max( RRS,FirstVNF_CPU ) ,Min( ACS ,FirstVNF_CPU ) ) / ( ( AMS / ACS ) * Min( PN ,ARS ) ) ) ) ,( ( ( ( RRS - FirstVNF_Mem ) - ( ARS + ARS ) ) * ( Max( Const,FirstVNF_CPU ) / ( BR + FirstVNF_Mem_Server ) ) ) * Min( ( ( FirstVNF_Mem * RRS ) + ( AMS - CRS ) ) ,Min( ( ARS * MDR ) ,( ACS + MRS ) ) ) ) ) ) ) - Max( ( ( Min( Max( ( Min( ARS ,BR ) + Max( ACS,FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_CPU_Server,MRS ) * ( FirstVNF_CPU / MRS ) ) / Max( Max( ACS,AMS ),( BR - MDR ) ) ) ) * Max( ( ( ( RRS - RRS ) / Min( MDR ,MDR ) ) + Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,( MDR + ACS ) ) ),( Min( ( FirstVNF_Mem * MRS ) ,( Const * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( MDR + MDR ) ) ) ) ) + Max( ( ( ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ACS ) ) / ( ( ACS * DDR ) - ( Const * FirstVNF_Mem_Server ) ) ) / Min( ( ( CRS / FirstVNF_RAM_Server ) + ( PN - BR ) ) ,( ( FirstVNF_RAM + ARS ) / ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),( ( ( Min( MDR ,AMS ) - ( FirstVNF_RAM * Const ) ) / ( ( FirstVNF_Mem * RRS ) + Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( Min( ( BR - MRS ) ,Max( AMS,CRS ) ) - Min( ( RRS / FirstVNF_RAM ) ,( FirstVNF_CPU / MRS ) ) ) ) ) ),( ( Max( ( ( ( AMS * AMS ) / Min( MRS ,RRS ) ) + Min( ( AMS - CRS ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ),Min( ( Min( FirstVNF_RAM_Server ,MDR ) / ( Const + DDR ) ) ,Max( ( ARS / FirstVNF_RAM_Server ),( DDR * FirstVNF_CPU ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( MDR / DDR ) ) + ( ( DDR - CRS ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) * Min( Min( ( ARS * FirstVNF_Mem ) ,( ARS + FirstVNF_Mem ) ) ,( Max( AMS,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) - Min( ( Max( ( ( BR - FirstVNF_Mem_Server ) - ( Const * Const ) ),( Min( DDR ,AMS ) * ( MDR / MDR ) ) ) / Min( ( ( FirstVNF_CPU_Server - MDR ) / Max( MRS,CRS ) ) ,( ( RRS + AMS ) / Min( MRS ,ACS ) ) ) ) ,( ( ( ( MRS * FirstVNF_RAM ) * Max( DDR,FirstVNF_CPU_Server ) ) - ( ( Const / AMS ) * ( Const * FirstVNF_CPU ) ) ) * Max( Min( Max( RRS,Const ) ,Min( ACS ,AMS ) ),( ( FirstVNF_CPU + FirstVNF_CPU ) + ( Const * BR ) ) ) ) ) ) ) )", "choosing": "Min( Min( Max( Min( ( Max( Max( ( MUR + RCSe ),Min( MLU ,DS ) ),Min( ( MUC * MUR ) ,( MUR * CS ) ) ) * ( ( ( RMSe + CS ) / ( MUM + DS ) ) + ( ( DS / DS ) + ( RCSe - CS ) ) ) ) ,( Min( Max( Max( RCSe,MUC ),Min( MUC ,CS ) ) ,( ( MUC - RCSe ) / ( RRSe + MLU ) ) ) + ( ( ( RRSe - MUR ) + Max( MUM,RRSe ) ) / ( ( RCSe / MUC ) - ( MUM / RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUC ) / Max( CS,MUM ) ) * ( Min( CS ,DS ) - ( CS + CS ) ) ) * ( ( Min( CS ,MLU ) * Max( MUR,RCSe ) ) + Max( ( RCSe / MUM ),( MUC - RCSe ) ) ) ) / ( ( ( ( CS * CS ) - Min( MUR ,RCSe ) ) * Max( ( MLU + CS ),( MUC - MUM ) ) ) + ( Min( ( MUR / DS ) ,( MLU / MUM ) ) * Min( ( RCSe + MLU ) ,( MLU - MUR ) ) ) ) ) ) ,Min( ( ( Min( ( ( CS - RCSe ) * ( MUC / MUC ) ) ,Min( ( MUM - RRSe ) ,( DS / RMSe ) ) ) * ( Max( ( RMSe + RMSe ),Max( RMSe,RMSe ) ) / Max( ( CS + CS ),( CS * MLU ) ) ) ) - ( ( ( Max( CS,DS ) * ( MUM + MUR ) ) / ( ( RCSe + MUC ) - ( MUC + DS ) ) ) / ( ( ( MLU * MUC ) + ( DS * MUM ) ) + Max( ( DS - RMSe ),( RCSe / CS ) ) ) ) ) ,Min( ( ( ( ( MUM - MLU ) * Min( CS ,MUM ) ) * ( ( RCSe / MUC ) - ( MLU * RRSe ) ) ) / ( ( ( RCSe - RMSe ) + Max( MLU,RCSe ) ) - Max( ( RCSe * RMSe ),( MUC / RMSe ) ) ) ) ,Min( Min( ( Max( MUM,MUC ) + ( RRSe / DS ) ) ,Max( ( CS / DS ),( RCSe / RCSe ) ) ) ,( ( Max( MUC,MUR ) / Max( RRSe,RRSe ) ) / ( Min( RRSe ,CS ) / ( RRSe * RRSe ) ) ) ) ) ) ) ,Min( Min( Max( ( ( Max( Min( CS ,MUR ),( MUM + MUR ) ) - ( ( RMSe * RMSe ) - ( MUM - RRSe ) ) ) / Min( Min( ( MLU + RCSe ) ,( MUC + CS ) ) ,( ( MUR * CS ) * ( MLU * RRSe ) ) ) ),Min( ( Min( Max( MUR,RRSe ) ,( RRSe + MUM ) ) - Min( ( MUR - RCSe ) ,Min( MUM ,RCSe ) ) ) ,Min( ( ( MLU * MUM ) / Min( CS ,RRSe ) ) ,Max( ( MUR + MLU ),Max( RMSe,RCSe ) ) ) ) ) ,( ( Max( ( ( MUR * MUC ) - ( RRSe - CS ) ),Max( Min( RCSe ,MUR ),( MUC / RRSe ) ) ) / Min( ( ( RCSe / MUR ) - ( MUR - MUM ) ) ,( Min( MUM ,RRSe ) - Min( MUC ,MUR ) ) ) ) / Min( ( Max( ( MUM / RCSe ),Max( CS,MUR ) ) * ( ( RRSe + RCSe ) / ( RMSe - MUC ) ) ) ,( ( ( RRSe * MUR ) * ( RCSe - MUR ) ) * Max( Max( MLU,RRSe ),( MUR / MUR ) ) ) ) ) ) ,Min( ( Min( ( ( ( RMSe - RMSe ) + ( MLU - MUC ) ) - ( ( RRSe * CS ) / ( RMSe * RCSe ) ) ) ,( ( ( RCSe - RRSe ) * Min( MUC ,CS ) ) - Max( ( MUR - CS ),Max( RCSe,MUC ) ) ) ) * Max( ( ( Min( RMSe ,MUR ) / ( MUC + RCSe ) ) - ( Max( RRSe,MUC ) * ( CS - CS ) ) ),( Min( ( RCSe + CS ) ,( MLU - RRSe ) ) + Min( ( RMSe - MUC ) ,( RRSe - CS ) ) ) ) ) ,( ( Min( ( Max( RCSe,RMSe ) * ( MUC - RCSe ) ) ,Max( ( MUC - MUC ),Min( MUM ,RMSe ) ) ) / ( Min( ( MLU + MUC ) ,Min( RMSe ,MUM ) ) + ( ( RCSe / MUC ) + ( MUC / RRSe ) ) ) ) + ( ( ( ( MLU - RMSe ) * Max( RMSe,RMSe ) ) - ( ( MUC + DS ) - Max( MUC,MUM ) ) ) + ( Max( ( MUC / CS ),( RMSe / RMSe ) ) * ( ( MUM * MUR ) * ( MLU - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS * RRS ) ) * Min( Max( AMS,Const ) ,( FirstVNF_Mem - ARS ) ) ) ) ) - ( ARS + MDR ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * DS ) ) - MUR ) / ( RMSe * DS ) )", "obj1": 0.9252873563218391, "obj2": 0.03230308526140382}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( MRS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( MLU + MUC ) * DS ) )", "obj1": 0.7873563218390804, "obj2": 0.10271441921332576}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ( ACS - ARS ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe * MUR ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 0.9521072796934866, "obj2": 0.01959381581235559}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( ACS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( ( ( ( ( Max( MLU,MUC ) * MLU ) * RCSe ) / MLU ) * MUC ) * RCSe ) * DS ) )", "obj1": 0.7624521072796935, "obj2": 0.11092090198956593}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( RRSe / MUR ) / Min( RMSe ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.25658152976460163}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - FirstVNF_Mem_Server ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) - Max( MLU,DS ) )", "obj1": 0.6475095785440613, "obj2": 0.20319177303319683}, {"determining": "( ( ( DDR - ( Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( ( ( RRSe / RRSe ) / Min( RMSe ,RCSe ) ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6264367816091954, "obj2": 0.22904030699975508}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Max( MDR,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15828183661903833}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - DDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.9846743295019157, "obj2": 0.005864551162946143}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.18441172627815205}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / FirstVNF_RAM_Server ) ) ),BR ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.03663282501482905}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MRS ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,DS ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / Min( RRSe ,Min( MLU ,DS ) ) )", "obj1": 0.9674329501915708, "obj2": 0.01305844126463128}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RRSe - Min( MLU ,DS ) ) )", "obj1": 0.7318007662835249, "obj2": 0.12663269825033863}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * MUC ) - Min( RRSe ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.19514134636340194}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5747126436781609, "obj2": 0.29615092672539267}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * DS ) - Min( MLU ,DS ) )", "obj1": 0.7183908045977011, "obj2": 0.13268816787830184}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / ( MDR - ARS ) ) - ( ARS + MDR ) ) ) ) )", "choosing": "( ( MLU + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.14134418643480295}, {"determining": "( ( Const * RRS ) - ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_RAM_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.632183908045977, "obj2": 0.22448167796482954}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( ( DS * DS ) * DS ) )", "obj1": 0.8486590038314177, "obj2": 0.061076355997887216}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( Const - ( ( ( DDR - ( MDR - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( MLU / Max( MUC,CS ) )", "obj1": 0.6360153256704981, "obj2": 0.2176503829762429}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0032211241609845765}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / MLU ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.7394636015325671, "obj2": 0.12159050463924531}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8869731800766284, "obj2": 0.047136644927622026}, {"determining": "Min( ( DDR - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / ( ( ( DDR - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + PN ) ) ) ) )", "choosing": "( ( MLU * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7011494252873564, "obj2": 0.15003431163773784}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MLU,RRSe ) / ( RMSe / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) * ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 0.9578544061302682, "obj2": 0.014380637529840196}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.03807887609548015}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + Min( Max( MUM,CS ) ,DS ) ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.7471264367816092, "obj2": 0.11809005227031154}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( FirstVNF_RAM_Server / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Max( MUR,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.6954022988505747, "obj2": 0.15074931966749683}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8582375478927203, "obj2": 0.05652564078516005}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04795876998198157}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06375280198261997}, {"determining": "( FirstVNF_RAM_Server - ( MDR + MDR ) )", "choosing": "( ( ( ( MUR / ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * MUC ) * MUR ) / ( RMSe * DS ) )", "obj1": 0.8314176245210728, "obj2": 0.06935022754732686}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( BR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,( ( AMS * Const ) - ( FirstVNF_Mem - ARS ) ) ) - ( Max( FirstVNF_CPU_Server,RRS ) - ( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - ( MUC / CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7547892720306514, "obj2": 0.11135212720140235}], "20": [{"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( ( BR + MDR ) - Max( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( DDR - ( MDR - ARS ) ) ) ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) / Max( MUM,CS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17818705192158465}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Min( Max( MUM,CS ) ,DS ) ) - ( RMSe / RRSe ) )", "obj1": 0.921455938697318, "obj2": 0.030076515901797694}, {"determining": "( ( ( DDR - ( Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( ( ( RRSe / RRSe ) / Min( RMSe ,RCSe ) ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6264367816091954, "obj2": 0.22904030699975508}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ( DDR - ( MDR - Const ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6417624521072797, "obj2": 0.20053926015621895}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * MUC ) - Min( RRSe ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.19514134636340194}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Max( MDR,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15828183661903833}, {"determining": "Min( ( DDR - ( MDR * ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ),BR ) ) )", "choosing": "( ( RRSe / MUR ) / Min( RMSe ,RCSe ) )", "obj1": 0.6053639846743295, "obj2": 0.25658152976460163}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( BR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - FirstVNF_Mem_Server ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) - Max( MLU,DS ) )", "obj1": 0.6302681992337165, "obj2": 0.2208557234427701}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( MRS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.7777777777777778, "obj2": 0.10564802363196071}, {"determining": "( FirstVNF_RAM_Server - ( MDR + MDR ) )", "choosing": "( ( ( ( MUR / ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * MUC ) * MUR ) / ( RMSe * DS ) )", "obj1": 0.8314176245210728, "obj2": 0.06935022754732686}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / ( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) / DS ) )", "obj1": 0.9425287356321839, "obj2": 0.027170311970968773}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * Min( Max( MUM,CS ) ,DS ) ) / ( RMSe * RCSe ) ) / ( ( DS * DS ) * DS ) )", "obj1": 0.8639846743295019, "obj2": 0.05530888855434185}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / FirstVNF_RAM_Server ) ) ),BR ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * MLU ) - ( RMSe / RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.03663282501482905}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUC ) - Min( RRSe ,DS ) )", "obj1": 0.8199233716475096, "obj2": 0.07779348537628121}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7318007662835249, "obj2": 0.12409137729800651}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ),MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + Min( Max( MUM,( ( MUC + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ,DS ) ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.7911877394636015, "obj2": 0.09013827889281066}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,DS ) / ( ( ( Min( Max( MUC,CS ) ,RCSe ) - Max( MUC,CS ) ) * DS ) - Min( MLU ,DS ) ) ) / ( RRSe - Min( MLU ,DS ) ) )", "obj1": 0.9712643678160919, "obj2": 0.011713321560685807}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.5747126436781609, "obj2": 0.29615092672539267}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( ( DS * DS ) * DS ) )", "obj1": 0.8486590038314177, "obj2": 0.061076355997887216}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,( ( AMS * Const ) - ( FirstVNF_Mem - ARS ) ) ) - ( Max( FirstVNF_CPU_Server,RRS ) - ( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - ( MUC / CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7547892720306514, "obj2": 0.11135212720140235}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MLU,RRSe ) / ( RMSe / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) * ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 0.9578544061302682, "obj2": 0.014380637529840196}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + Min( Max( MUM,CS ) ,DS ) ) / Min( Max( MUC,MUM ) ,DS ) )", "obj1": 0.7471264367816092, "obj2": 0.11809005227031154}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8582375478927203, "obj2": 0.05652564078516005}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.8869731800766284, "obj2": 0.047136644927622026}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.03807887609548015}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6360153256704981, "obj2": 0.21170731872603318}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) ) ) ) / RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04795876998198157}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,ARS ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( Min( ( MRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,Min( MRS ,FirstVNF_RAM_Server ) ) ),( ( DDR / BR ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( ( RRSe * MUR ) - ( MLU - DS ) ) ) / ( RMSe * DS ) ) / ( ( MLU + MUC ) * DS ) )", "obj1": 0.7873563218390804, "obj2": 0.10271441921332576}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.1382611842167722}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8352490421455939, "obj2": 0.06607578226197881}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * MUC ) - Min( RRSe ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.19514134636340194}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,DS ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RRSe - Min( MLU ,DS ) ) )", "obj1": 0.9674329501915708, "obj2": 0.013014665776374825}], "21": [{"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( Max( ACS,MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MLU,RRSe ) + ( RMSe / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) * ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS - MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17818705192158465}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ( DDR - ( MDR - Const ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6417624521072797, "obj2": 0.20053926015621895}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( ( Max( BR,MDR ) + ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,DS ) / ( ( ( Min( Max( MUC,CS ) ,RCSe ) - ( MUC / CS ) ) * Max( MUM,RRSe ) ) - Min( MLU ,DS ) ) ) / ( RRSe - Min( MLU ,DS ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007879207883546619}, {"determining": "( ( ( DDR - ( Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6226053639846744, "obj2": 0.22864513535515396}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * MUC ) - Min( RRSe ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.19514134636340194}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Min( Max( MUM,CS ) ,DS ) ) - ( RMSe / RRSe ) )", "obj1": 0.921455938697318, "obj2": 0.030076515901797694}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.22080052490542731}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( ( DDR - ( ( ACS / FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * Max( ( ACS / Min( MDR ,ARS ) ),( ARS + MDR ) ) )", "choosing": "( ( ( ( MUR / MLU ) * Max( MUM,CS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6973180076628352, "obj2": 0.15381415436210666}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Max( MDR,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15828183661903833}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) ) ) ) / RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04795876998198157}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.1382611842167722}, {"determining": "( ( ACS - ( MDR - DDR ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ),MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7777777777777778, "obj2": 0.0987270004507699}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * Min( Max( MUM,CS ) ,DS ) ) / ( RMSe * RCSe ) ) / ( ( DS * DS ) * DS ) )", "obj1": 0.8639846743295019, "obj2": 0.05530888855434185}, {"determining": "( ( ( DDR - ( MDR - Const ) ) / FirstVNF_CPU ) * ( ( Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) - ARS ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( ( ( RMSe * ( ( ( ( RRSe / RRSe ) / Min( RMSe ,RCSe ) ) * MLU ) * RCSe ) ) * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.9980842911877394, "obj2": 0.0015803906617178972}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.29609535237082435}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MUR * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( ( MUM + RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7624521072796935, "obj2": 0.10487766391396465}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6800766283524904, "obj2": 0.16725303371557138}, {"determining": "( ( ACS - ( MDR - FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.789272030651341, "obj2": 0.09421085796626896}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.9157088122605364, "obj2": 0.035426858240958696}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( AMS - ( Min( DDR ,( ( MDR + MDR ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) * ( Max( MLU,RRSe ) * ( ( MUM + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( DS * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.7681992337164751, "obj2": 0.10179917934603616}, {"determining": "( ( ( DDR - ( ( AMS - ( ( DDR - ( MDR - ARS ) ) + ARS ) ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) / Max( Max( MUC,( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ),DS ) )", "obj1": 0.9501915708812261, "obj2": 0.02255293076534913}, {"determining": "( ( AMS - ( ( DDR - ( ARS - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUC ) - Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) )", "obj1": 0.7375478927203065, "obj2": 0.12003115890120268}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06272803081513849}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / ( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) / DS ) )", "obj1": 0.9425287356321839, "obj2": 0.027170311970968773}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.03807887609548015}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ARS ) ) - ARS ) ) - ( DDR + MDR ) )", "choosing": "( ( DS / RRSe ) / Min( RMSe ,DS ) )", "obj1": 0.8333333333333334, "obj2": 0.06589430868838782}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,( ( AMS * Const ) - ( FirstVNF_Mem - ARS ) ) ) - ( Max( FirstVNF_CPU_Server,RRS ) - ( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - ( MUC / CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7547892720306514, "obj2": 0.11135212720140235}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.8295019157088123, "obj2": 0.06854847249015439}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.9559386973180076, "obj2": 0.01638654985737305}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7279693486590039, "obj2": 0.1257462178858124}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + ARS ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * RCSe ) / ( ( DS * MUC ) - Min( RRSe ,RRSe ) ) ) / ( RMSe * DS ) )", "obj1": 0.8256704980842912, "obj2": 0.07516624999209268}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7318007662835249, "obj2": 0.12409137729800651}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( BR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( CS * MLU ) ,( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}], "22": [{"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS + MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,CS ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( MDR - ARS ) ) ,( ( CRS / FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( Max( ACS,MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MLU + MUC ) + ( Max( MLU,RRSe ) + ( RMSe / Min( Max( MLU,CS ) ,DS ) ) ) ) * RCSe ) * ( RMSe * RCSe ) ) / ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * MUC ) - Min( RRSe ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.19514134636340194}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17818705192158465}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7490421455938697, "obj2": 0.11032664490356207}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ( DDR - ( MDR - Const ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6417624521072797, "obj2": 0.20053926015621895}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( AMS - ( ( DDR - ( ARS - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUC ) - Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) )", "obj1": 0.7375478927203065, "obj2": 0.12003115890120268}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.9425287356321839, "obj2": 0.024827831613370474}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) ) ) ) / RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04795876998198157}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MUR * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( ( MUM + RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7624521072796935, "obj2": 0.10487766391396465}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( ( ( MUR / MLU ) * MUC ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe / DS ) )", "obj1": 0.5938697318007663, "obj2": 0.2643024618464335}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + ARS ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * RCSe ) / ( ( DS * MUC ) - Min( RRSe ,RRSe ) ) ) / ( RMSe * DS ) )", "obj1": 0.8256704980842912, "obj2": 0.07516624999209268}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( Min( FirstVNF_Mem ,MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * MUM ) / ( RMSe * DS ) ) ) * Min( Max( MUM,CS ) ,DS ) ) - ( RMSe / RRSe ) )", "obj1": 0.921455938697318, "obj2": 0.030076515901797694}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.1382611842167722}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.29609535237082435}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MUR * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( ( MUM + RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004039957114431585}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) ) * ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06272803081513849}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.03807887609548015}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) - ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,RRSe ) )", "obj1": 0.9693486590038314, "obj2": 0.012472619346210112}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * Min( Max( MUM,CS ) ,DS ) ) / ( RMSe * RCSe ) ) / ( ( DS * DS ) * DS ) )", "obj1": 0.8639846743295019, "obj2": 0.05530888855434185}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.22080052490542731}, {"determining": "( ( ( DDR - ( Max( FirstVNF_RAM_Server,( Min( ACS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6226053639846744, "obj2": 0.22864513535515396}, {"determining": "( ( ( BR - ( ( ACS / FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( Const + MDR ) ) )", "choosing": "( ( ( ( RMSe / MLU ) + Max( MUM,CS ) ) * RCSe ) / Max( RMSe,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.16075187349808623}, {"determining": "( ( AMS - ( Min( DDR ,( ( MDR + MDR ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) * ( Max( MLU,RRSe ) * ( ( MUM + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( DS * ( ( ( MUR / MLU ) * MUC ) - Min( MLU ,DS ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.7681992337164751, "obj2": 0.10179917934603616}, {"determining": "( ( ACS - ( MDR - DDR ) ) - ( ( ( BR + MDR ) - ARS ) + ( Max( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ),MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.7777777777777778, "obj2": 0.0987270004507699}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}, {"determining": "( ( ( DDR - ( ( ACS / FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * Max( ( ACS / Min( MDR ,ARS ) ),( ARS + MDR ) ) )", "choosing": "( ( ( ( MUR / MLU ) * Max( MUM,CS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6973180076628352, "obj2": 0.15381415436210666}, {"determining": "( ( ACS - ( MDR - FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.789272030651341, "obj2": 0.09421085796626896}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06272803081513849}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( ( Max( BR,MDR ) + ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - Min( Max( FirstVNF_CPU_Server,BR ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,DS ) / ( ( ( Min( Max( MUC,CS ) ,RCSe ) - ( MUC / CS ) ) * Max( MUM,RRSe ) ) - Min( MLU ,DS ) ) ) / ( RRSe - Min( MLU ,DS ) ) )", "obj1": 0.975095785440613, "obj2": 0.008843858661948334}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.9559386973180076, "obj2": 0.01638654985737305}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ARS ) ) - ARS ) ) - ( MDR + ( DDR - ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9597701149425287, "obj2": 0.01575381443607248}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7279693486590039, "obj2": 0.1257462178858124}, {"determining": "( ( ( DDR - ( ( AMS - ( ( DDR - ( MDR - ARS ) ) + ARS ) ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) / Max( Max( MUC,( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ),DS ) )", "obj1": 0.9501915708812261, "obj2": 0.02255293076534913}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7318007662835249, "obj2": 0.12409137729800651}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Max( MDR,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6915708812260536, "obj2": 0.15828183661903833}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Min( CS ,MLU ) * RRSe ) * RCSe ) / Max( MUC,CS ) )", "obj1": 0.7222222222222222, "obj2": 0.1305973205795171}], "23": [{"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( ( MDR - ARS ) - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ACS + MDR ) / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,CS ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) ) ) ) / RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04795876998198157}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.578544061302682, "obj2": 0.28556849875203943}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * MUC ) - Min( RRSe ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.19514134636340194}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ( DDR - ( MDR - Const ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6417624521072797, "obj2": 0.20053926015621895}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( Const - ( Min( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) ,ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.6187739463601533, "obj2": 0.22314646384723938}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( Const - ( ( ( BR + MDR ) - Max( ( ACS + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ) * Max( MUM,RRSe ) ) + Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5651340996168582, "obj2": 0.3110439498201404}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( Min( FirstVNF_Mem ,MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * MUM ) / ( RMSe * DS ) ) ) * Min( Max( MUM,CS ) ,DS ) ) - ( RMSe / RRSe ) )", "obj1": 0.921455938697318, "obj2": 0.030076515901797694}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUC,CS ) ,DS ) )", "obj1": 0.6245210727969349, "obj2": 0.22080052490542731}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.9425287356321839, "obj2": 0.024827831613370474}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( Const - ( ( ( DDR * ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6647509578544061, "obj2": 0.18485515811491263}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06272803081513849}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Max( DDR,FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / Max( ( DS * DS ),Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8620689655172413, "obj2": 0.05623967167410835}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ACS - ( MDR - FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.789272030651341, "obj2": 0.09421085796626896}, {"determining": "( ( ( DDR - ( ( ACS / FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * Max( ( ACS / Min( MDR ,ARS ) ),( ARS + MDR ) ) )", "choosing": "( ( ( ( MUR / MLU ) * Max( MUM,CS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6973180076628352, "obj2": 0.15381415436210666}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( ( ( MUR / MLU ) * MUC ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe / DS ) )", "obj1": 0.5938697318007663, "obj2": 0.2643024618464335}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Min( Max( MUM,CS ) ,DS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9176245210727969, "obj2": 0.03266555102769085}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.03807887609548015}, {"determining": "( ( AMS - ( ( DDR - ( ARS - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUC ) - Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) )", "obj1": 0.7375478927203065, "obj2": 0.12003115890120268}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( ( DDR - ( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6819923371647509, "obj2": 0.16314311788591038}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.1382611842167722}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7490421455938697, "obj2": 0.11032664490356207}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( ACS + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe / MUR ) - Min( MLU ,DS ) ) ) - ( MLU - DS ) )", "obj1": 0.8333333333333334, "obj2": 0.0720153881431622}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + ARS ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * RCSe ) / ( ( DS * MUC ) - Min( RRSe ,RRSe ) ) ) / ( RMSe * DS ) )", "obj1": 0.8256704980842912, "obj2": 0.07516624999209268}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}, {"determining": "( ( ( BR - ( ( ACS / FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( Const + MDR ) ) )", "choosing": "( ( ( ( RMSe / MLU ) + Max( MUM,CS ) ) * RCSe ) / Max( RMSe,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.16075187349808623}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MUR * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( ( MUM + RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7624521072796935, "obj2": 0.10487766391396465}, {"determining": "( ( ( DDR - ( ( AMS - ( ( DDR - ( MDR - ARS ) ) + ARS ) ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) / Max( Max( MUC,( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ),DS ) )", "obj1": 0.9501915708812261, "obj2": 0.02255293076534913}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.9559386973180076, "obj2": 0.01638654985737305}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Max( MLU,RRSe ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9578544061302682, "obj2": 0.01454130171235212}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9808429118773946, "obj2": 0.008542342684920469}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7279693486590039, "obj2": 0.1257462178858124}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) ) * ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.842911877394636, "obj2": 0.06272803081513849}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.29609535237082435}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.7567049808429118, "obj2": 0.10780316683272254}, {"determining": "( ( ( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) ) - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( MLU / Min( MLU ,DS ) )", "obj1": 0.7796934865900383, "obj2": 0.09844800506322543}], "24": [{"determining": "( ( MRS - Max( Const,DDR ) ) - ( DDR / FirstVNF_CPU ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( ( MDR - ARS ) - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR / MLU ) * MUC ) * RCSe ) / ( ( DS * ( ( RRSe * MUR ) - Min( MLU ,DS ) ) ) - ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( ( DDR - ( MDR - Const ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6417624521072797, "obj2": 0.20053926015621895}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.29609535237082435}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.578544061302682, "obj2": 0.2718795350767421}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9808429118773946, "obj2": 0.008542342684920469}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6551724137931034, "obj2": 0.1877107105585547}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( Const - ( ( ( DDR * ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6647509578544061, "obj2": 0.18485515811491263}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8620689655172413, "obj2": 0.055553146588200195}, {"determining": "( ( ( DDR - ( ( ACS / FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * Max( ( ACS / Min( MDR ,ARS ) ),( ARS + MDR ) ) )", "choosing": "( ( ( ( MUR / MLU ) * Max( MUM,CS ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.6973180076628352, "obj2": 0.15381415436210666}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,( ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Max( MLU,RRSe ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9578544061302682, "obj2": 0.014461656561360045}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7279693486590039, "obj2": 0.1257462178858124}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.7375478927203065, "obj2": 0.11961588856810312}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) ) ) ) / RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04795876998198157}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( ( ( MUR / MLU ) * MUC ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe / DS ) )", "obj1": 0.5938697318007663, "obj2": 0.2643024618464335}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) + ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( ( DDR - ( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6819923371647509, "obj2": 0.16314311788591038}, {"determining": "( ( AMS - ( MDR - ( ( BR + MDR ) - RRS ) ) ) - ( MDR + MDR ) )", "choosing": "( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) - Min( MUC ,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7777777777777778, "obj2": 0.09790992987780331}, {"determining": "( ( ( BR - ( ( ACS / FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( Const + MDR ) ) )", "choosing": "( ( ( ( RMSe / MLU ) + Max( MUM,CS ) ) * RCSe ) / Max( RMSe,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.16075187349808623}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_CPU + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02666353214313281}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( Min( MRS ,MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + ARS ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * RCSe ) / ( ( DS * MUC ) - Min( RRSe ,RRSe ) ) ) / ( RMSe * DS ) )", "obj1": 0.8256704980842912, "obj2": 0.07516624999209268}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.03807887609548015}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * MUC ) - Min( RRSe ,DS ) )", "obj1": 0.6360153256704981, "obj2": 0.21746864250090592}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - ( AMS - ( ( DDR - ( ARS - ARS ) ) - ARS ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.05016315673471311}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( ( Min( BR ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( RCSe * RCSe ) / ( ( DS * MUC ) - Min( RRSe ,RRSe ) ) ) / ( MUR * DS ) )", "obj1": 0.7720306513409961, "obj2": 0.10225607693919042}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MLU ,DS ) )", "obj1": 0.7432950191570882, "obj2": 0.11225175801213252}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9099616858237548, "obj2": 0.035687694010824354}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( ( Min( Max( MUC,CS ) ,RCSe ) - ( MUC / CS ) ) * Max( MUM,RRSe ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.8352490421455939, "obj2": 0.06719110455806504}, {"determining": "( ( ( DDR - ( ( AMS - ( ( DDR - ( FirstVNF_RAM_Server - ARS ) ) + ARS ) ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) / Max( Max( MUC,( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( Max( MUM,CS ) - DS ) ) ) ),DS ) )", "obj1": 0.9501915708812261, "obj2": 0.022103685974996356}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( Const - ( ( ( BR + MDR ) - Max( ( ACS + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ) * Max( MUM,RRSe ) ) + Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5651340996168582, "obj2": 0.3110439498201404}, {"determining": "( ( ACS - ( MDR - FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.789272030651341, "obj2": 0.09421085796626896}, {"determining": "( ( AMS - ( ( DDR - ( ( ( BR + MDR ) - RRS ) - ( ACS + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe / MUR ) - Min( MLU ,DS ) ) ) - ( MLU - DS ) )", "obj1": 0.8333333333333334, "obj2": 0.0720153881431622}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7490421455938697, "obj2": 0.11032664490356207}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MUR * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( ( MUM + RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7624521072796935, "obj2": 0.10487766391396465}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,( ( AMS * Const ) / ( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) - Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / DS ),MUR ) - Min( DS ,RCSe ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.7126436781609196, "obj2": 0.13697403067372338}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}], "25": [{"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) ) ) ) / RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( DDR / FirstVNF_CPU ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( ( DDR - ( MDR - Const ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6417624521072797, "obj2": 0.20053926015621895}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.29609535237082435}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.578544061302682, "obj2": 0.2718795350767421}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6551724137931034, "obj2": 0.1877107105585547}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( Const - ( ( ( DDR * ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6647509578544061, "obj2": 0.18485515811491263}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7279693486590039, "obj2": 0.1257462178858124}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.7375478927203065, "obj2": 0.11961588856810312}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( AMS - ( ( DDR - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - ( MDR + DDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUR ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUM,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.9157088122605364, "obj2": 0.03249190292584279}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - ( AMS - ( ( DDR - ( ARS - ARS ) ) - ARS ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04780677813456698}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( FirstVNF_CPU - ARS ) ) + Min( ( BR + MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6379310344827587, "obj2": 0.21147170951591343}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_CPU + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02666353214313281}, {"determining": "( ( ACS - Min( DDR ,Const ) ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUR ) - Min( RRSe ,MLU ) )", "obj1": 0.814176245210728, "obj2": 0.07843442915019469}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,( ( AMS * Const ) / ( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) - Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / DS ),MUR ) - Min( DS ,RCSe ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.7126436781609196, "obj2": 0.13697403067372338}, {"determining": "( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ACS - MDR ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) ) - Min( MLU ,DS ) ) ) / ( RCSe - Min( MLU ,DS ) ) )", "obj1": 0.9731800766283525, "obj2": 0.011387152153444234}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7586206896551724, "obj2": 0.10432630139942124}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MUR * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( ( MUM + RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004039957114431585}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7030651340996169, "obj2": 0.14867598967701842}, {"determining": "( ( ( DDR / ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( ( MUM / RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,RMSe ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6283524904214559, "obj2": 0.2196074338853536}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( Const - ( ( ( BR + MDR ) - Max( ( ACS + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ) * Max( MUM,RRSe ) ) + Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5651340996168582, "obj2": 0.3110439498201404}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( ( ACS - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9080459770114943, "obj2": 0.03490467563011718}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8620689655172413, "obj2": 0.055553146588200195}, {"determining": "( ( ( Min( BR ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( RCSe * RCSe ) / ( ( DS * MUC ) - Min( RRSe ,RRSe ) ) ) / ( MUR * DS ) )", "obj1": 0.7720306513409961, "obj2": 0.10225607693919042}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6187739463601533, "obj2": 0.22314646384723938}, {"determining": "( ( ( DDR - ( Max( ( MDR + MDR ),FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( CRS + MDR ) ) )", "choosing": "( ( DS + ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6819923371647509, "obj2": 0.16314311788591038}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7509578544061303, "obj2": 0.10985915641174754}, {"determining": "( ( ACS - ( MDR - FirstVNF_CPU_Server ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.789272030651341, "obj2": 0.09421085796626896}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * Max( ( ACS / Min( MDR ,ARS ) ),( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( RMSe ,DS ) )", "obj1": 0.6934865900383141, "obj2": 0.1593835724693393}, {"determining": "( ( DDR - FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.31324674121238066}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) + ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( ( BR - ( ( ACS / FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( Const + MDR ) ) )", "choosing": "( ( ( ( RMSe / MLU ) + Max( MUM,CS ) ) * RCSe ) / Max( RMSe,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.16075187349808623}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7796934865900383, "obj2": 0.09786607071774299}, {"determining": "( ( AMS - ( ( DDR - ( ( ( FirstVNF_Mem - ( MDR - ARS ) ) - RRS ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,( MUC - MUC ) ) / ( Max( MUM,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.7681992337164751, "obj2": 0.10426268660621817}], "26": [{"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( ( DS * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Max( Max( MUC,CS ),DS ) ) ) ) / RCSe ) / ( RMSe * RCSe ) ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.8199233716475096, "obj2": 0.07653665173236521}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.29609535237082435}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.578544061302682, "obj2": 0.2718795350767421}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ( DDR / ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( ( MUM / RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,RMSe ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6283524904214559, "obj2": 0.2196074338853536}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.15884961803959}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7030651340996169, "obj2": 0.14867598967701842}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8620689655172413, "obj2": 0.055553146588200195}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( ( DDR - ( Max( ( MDR + MDR ),FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( CRS + MDR ) ) )", "choosing": "( ( DS + ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6819923371647509, "obj2": 0.16314311788591038}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7681992337164751, "obj2": 0.10018375835805333}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17771115454153652}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( ( ACS - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9080459770114943, "obj2": 0.03490467563011718}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( ARS + MDR ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6494252873563219, "obj2": 0.19156563488989944}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( ARS + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.814176245210728, "obj2": 0.07735765225582472}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8716475095785441, "obj2": 0.05285182625095277}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( ( MDR + MDR ),( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( DS * ( Max( ( Min( MUM ,DS ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.8946360153256705, "obj2": 0.040397922838784524}, {"determining": "( ( Const - ( ( ( DDR * ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6647509578544061, "obj2": 0.18485515811491263}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6551724137931034, "obj2": 0.1877107105585547}, {"determining": "( ( AMS - ( ( DDR - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - ( MDR + DDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUR ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUM,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.9157088122605364, "obj2": 0.03249190292584279}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MUM * MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7854406130268199, "obj2": 0.09335583257914334}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5651340996168582, "obj2": 0.3078012038592509}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.7375478927203065, "obj2": 0.11961588856810312}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - ( AMS - ( ( DDR - ( ARS - ARS ) ) - ARS ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04780677813456698}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( CS ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.7375478927203065, "obj2": 0.11961588856810312}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( Const - ( ( ( BR + MDR ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( Min( MUC ,CS ) - Min( MLU ,DS ) )", "obj1": 0.6455938697318008, "obj2": 0.2001175638252565}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * MLU ) * ( RMSe * ( ( Max( MLU,MUM ) * MLU ) * RCSe ) ) ) * RCSe ) / ( RMSe * DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2700993593326088}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6187739463601533, "obj2": 0.22314646384723938}, {"determining": "( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,( ( AMS * Const ) / ( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) - Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / DS ),MUR ) - Min( DS ,RCSe ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.7222222222222222, "obj2": 0.13026055771222084}, {"determining": "( ( ( DDR - ( MDR - Const ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) ) )", "choosing": "( ( DS * ( ( MLU + MUC ) * ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) - ( RRSe * DS ) )", "obj1": 0.6417624521072797, "obj2": 0.20053926015621895}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) + ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7586206896551724, "obj2": 0.10432630139942124}], "27": [{"determining": "( ( Const + ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) + ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( CS ,RCSe ) ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( ( DS * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MLU * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS * Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.29609535237082435}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ( DDR / ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( ( MUM / RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,RMSe ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6283524904214559, "obj2": 0.2196074338853536}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + ( ARS + MDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9885057471264368, "obj2": 0.004053018270580541}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( AMS - ( ( DDR - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - ( MDR + DDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUR ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUM,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.9329501915708812, "obj2": 0.025619768281187817}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8620689655172413, "obj2": 0.055553146588200195}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( Min( Max( MRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( ARS + MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + MDR ) - ( AMS - ( ( DDR - ( ARS - ARS ) ) - ARS ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8773946360153256, "obj2": 0.04780677813456698}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MUM * MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.842911877394636, "obj2": 0.06924639674090342}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7681992337164751, "obj2": 0.10018375835805333}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7432950191570882, "obj2": 0.11588302574816864}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( ( DDR - ( Max( ( MDR + MDR ),FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( CRS + MDR ) ) )", "choosing": "( ( DS + ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6819923371647509, "obj2": 0.16314311788591038}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( MDR * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,( RMSe / RRSe ) ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.8275862068965517, "obj2": 0.07339966631509665}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ARS ) - ( Const + DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( CS * ( ( ( Min( Max( RRSe,CS ) ,CS ) - ( MUC / CS ) ) * Max( MUM,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7567049808429118, "obj2": 0.11031571921685208}, {"determining": "( ( Const - ( ( ( DDR * ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6647509578544061, "obj2": 0.18485515811491263}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.735632183908046, "obj2": 0.12488575071885523}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.9597701149425287, "obj2": 0.017486655740614497}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) - DS ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17415993904247395}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7030651340996169, "obj2": 0.14867598967701842}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( MLU - Min( MLU ,DS ) )", "obj1": 0.7088122605363985, "obj2": 0.13866878472610064}, {"determining": "( ( ( DDR - ( Min( ( ( DDR - ( MDR - ARS ) ) / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,MDR ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( Max( MUM,RRSe ) ,RRSe ) )", "obj1": 0.6992337164750958, "obj2": 0.1578312191821178}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MUM * MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7854406130268199, "obj2": 0.09335583257914334}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( ( ACS - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9176245210727969, "obj2": 0.031667619082414736}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7835249042145593, "obj2": 0.0984523441855298}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.8697318007662835, "obj2": 0.05113103487023252}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Min( ACS ,( ( AMS * Const ) / ( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) - Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / DS ),MUR ) - Min( DS ,RCSe ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.7222222222222222, "obj2": 0.13026055771222084}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.15884961803959}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5651340996168582, "obj2": 0.3078012038592509}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( ( MDR - ARS ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * Max( MUM,CS ) ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9042145593869731, "obj2": 0.03836276764124019}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / DS ),MUR ) - Min( DS ,RCSe ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.8122605363984674, "obj2": 0.08039995822786893}, {"determining": "( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7586206896551724, "obj2": 0.10432630139942124}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6494252873563219, "obj2": 0.19156563488989944}], "28": [{"determining": "( ( AMS - ( ACS - CRS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) + ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( CS ,RCSe ) ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( MDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Max( MLU,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.27830041934857}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7030651340996169, "obj2": 0.14867598967701842}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( ( DDR / ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( ( MUM / RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,RMSe ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6283524904214559, "obj2": 0.2196074338853536}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6494252873563219, "obj2": 0.19156563488989944}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( Max( ( DDR / FirstVNF_CPU_Server ),( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * Min( ( DS * MUM ) ,Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7318007662835249, "obj2": 0.12384959619236223}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7681992337164751, "obj2": 0.10018375835805333}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS / ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6551724137931034, "obj2": 0.1874425365826363}, {"determining": "( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6743295019157088, "obj2": 0.17058566009406864}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8275862068965517, "obj2": 0.07065069877779068}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8620689655172413, "obj2": 0.055553146588200195}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - MDR ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( ( ( ( ( CS / RRSe ) * MUC ) + MUR ) / ( RMSe * DS ) ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) + ( ARS + MDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,( ( DS * MUM ) * Min( RCSe ,DS ) ) ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9559386973180076, "obj2": 0.017373907683705985}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6609195402298851, "obj2": 0.1743982594751014}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8390804597701149, "obj2": 0.06665652389571476}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + ( ARS + MDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9885057471264368, "obj2": 0.00405301827058054}, {"determining": "( ( AMS - ( ( DDR - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - ( MDR + DDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MLU + Max( MLU,RRSe ) ) + ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUR ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUM,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.9329501915708812, "obj2": 0.025619768281187817}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7816091954022989, "obj2": 0.09474657045671908}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7432950191570882, "obj2": 0.11588302574816864}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( ( MDR - ARS ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * Max( MUM,CS ) ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9042145593869731, "obj2": 0.03836276764124019}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * MUR ) - ( MUM * MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7854406130268199, "obj2": 0.09335583257914334}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.29941608079533155}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( AMS - ( BR + MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9118773946360154, "obj2": 0.03350961692035066}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ARS ) - ( Const + DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( CS * ( ( ( Min( Max( RRSe,CS ) ,CS ) - ( MUC / CS ) ) * Max( MUM,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7567049808429118, "obj2": 0.11031571921685208}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - RRS ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + CS ) / DS ),MUR ) - Min( DS ,RCSe ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.8180076628352491, "obj2": 0.07599262661286896}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / CS ) ) * Max( MUM,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.8103448275862069, "obj2": 0.07973177160964544}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7432950191570882, "obj2": 0.11588302574816864}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) - DS ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17415993904247395}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + ( ARS + MDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9885057471264368, "obj2": 0.00405301827058054}], "29": [{"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + Max( ( Min( ACS ,Max( ( MDR - ARS ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( ( RMSe * DS ) ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ACS - CRS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.8735632183908046, "obj2": 0.050456570923955335}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( MDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Max( MLU,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.27830041934857}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7030651340996169, "obj2": 0.14867598967701842}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( ( DDR / ( MDR - ARS ) ) / FirstVNF_CPU ) * ( ARS - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,ACS ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( ( MUM / RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,RMSe ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6283524904214559, "obj2": 0.2196074338853536}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.6494252873563219, "obj2": 0.191114637056422}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS + ( ( DDR - Max( ( FirstVNF_CPU + Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( BR * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,MUC ) )", "obj1": 0.5670498084291188, "obj2": 0.29662704371188275}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS / ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6551724137931034, "obj2": 0.1874425365826363}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + FirstVNF_CPU ) - Max( ARS,FirstVNF_CPU_Server ) ) + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,Max( MUC,Max( DS,MUC ) ) ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.006291150919088895}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8620689655172413, "obj2": 0.055553146588200195}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6724137931034483, "obj2": 0.16434098454695262}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,Min( MLU ,DS ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.7145593869731801, "obj2": 0.13983635372134906}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( AMS - ( ( DDR - ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - ( MDR + DDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUC ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.9252873563218391, "obj2": 0.03347627960613469}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( AMS - DDR ) - ( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,MLU ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( ( MUC + MUM ),CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - ( MUM / DS ) )", "obj1": 0.9022988505747126, "obj2": 0.038265978089481685}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( Max( ( DDR / FirstVNF_CPU_Server ),( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * Min( ( DS * MUM ) ,Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7318007662835249, "obj2": 0.12384959619236223}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( MUM * MUM ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7624521072796935, "obj2": 0.10534758147043118}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) - MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) + ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17008036450100444}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) - DS ) - Min( MLU ,DS ) )", "obj1": 0.8544061302681992, "obj2": 0.06123004359991358}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ARS ) - ( Const + DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( CS * ( ( ( Min( Max( RRSe,CS ) ,CS ) - ( MUC / CS ) ) * Max( MUM,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7567049808429118, "obj2": 0.11031571921685208}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6609195402298851, "obj2": 0.1743982594751014}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( ACS - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) ) ) )", "obj1": 0.7298850574712644, "obj2": 0.1247194295615464}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) + ( ARS + MDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * Max( MUM,CS ) ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9559386973180076, "obj2": 0.016837455542150555}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7681992337164751, "obj2": 0.10018375835805333}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8390804597701149, "obj2": 0.06665652389571476}, {"determining": "( ( AMS - ( BR + MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9310344827586207, "obj2": 0.027740147334114583}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07010998099345819}, {"determining": "( ( AMS - ( BR + FirstVNF_RAM_Server ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) / Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9118773946360154, "obj2": 0.03350961692035066}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( FirstVNF_Mem + MDR ) - Max( ( Min( ACS ,Max( ( MDR - ARS ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,( ( DS * MUM ) * Min( RCSe ,DS ) ) ) ,RCSe ) - Min( MUC ,CS ) ) - Min( RRSe ,DS ) )", "obj1": 0.9099616858237548, "obj2": 0.03587170517546532}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,CRS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) ) + ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * ( Max( MUM,RRSe ) + ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.29941608079533155}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7471264367816092, "obj2": 0.11265771554831198}], "30": [{"determining": "( ( AMS - ( ( DDR - ( ( Min( ACS ,( BR + MDR ) ) - ARS ) - ( MDR + DDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( CS / MUC ) * MUC ) + MUR ) / ( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + Max( ( Min( ACS ,Max( ( MDR - ARS ),FirstVNF_RAM_Server ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ( BR + FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( ( RMSe * DS ) ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7681992337164751, "obj2": 0.10018375835805333}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6245210727969349, "obj2": 0.21434659684373006}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.6494252873563219, "obj2": 0.191114637056422}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7471264367816092, "obj2": 0.11265771554831198}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07010998099345819}, {"determining": "( ( MRS - Max( FirstVNF_RAM_Server,DDR ) ) - ( ( ( BR + MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( MRS / MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.89272030651341, "obj2": 0.04254738618442772}, {"determining": "( ( AMS - ( MDR - ( ( AMS / FirstVNF_RAM_Server ) - ( ( MDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - DS ) - Min( MUM ,DS ) )", "obj1": 0.8180076628352491, "obj2": 0.08233854929724461}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29269351355104734}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6839080459770115, "obj2": 0.15330952428803823}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6609195402298851, "obj2": 0.1743982594751014}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS / ( ( RRSe * ( ( MUR / MLU ) * MUC ) ) - Min( MUM ,DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.6551724137931034, "obj2": 0.1874425365826363}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * Max( MUM,CS ) ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.8754789272030651, "obj2": 0.049528523628572775}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7030651340996169, "obj2": 0.14867598967701842}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8390804597701149, "obj2": 0.06665652389571476}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( AMS - DDR ) - ( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,MLU ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( ( MUC + MUM ),CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - ( MUM / DS ) )", "obj1": 0.9022988505747126, "obj2": 0.038265978089481685}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.27830041934857}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) - DS ) - Min( MLU ,DS ) )", "obj1": 0.8544061302681992, "obj2": 0.06123004359991358}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ARS ) - ( Const + DDR ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( CS * ( ( ( Min( Max( RRSe,CS ) ,CS ) - ( MUC / CS ) ) * Max( MUM,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7567049808429118, "obj2": 0.11031571921685208}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + FirstVNF_CPU ) - Max( ARS,FirstVNF_CPU_Server ) ) + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,Max( MUC,Max( DS,MUC ) ) ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.006291150919088895}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) + ( ARS + MDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( RCSe / ( ( ( ( CS * Max( MUM,CS ) ) * ( ( MUR / MLU ) * MUC ) ) * RCSe ) / ( RMSe * DS ) ) ) * Max( MUC,CS ) ) - ( RMSe / RRSe ) )", "obj1": 0.9559386973180076, "obj2": 0.016837455542150555}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( Max( ( DDR / FirstVNF_CPU_Server ),( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * Min( ( DS * MUM ) ,Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.7318007662835249, "obj2": 0.12384959619236223}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6724137931034483, "obj2": 0.16434098454695262}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) + MDR ) - Max( ( Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,( RMSe * MUM ) ) )", "obj1": 0.9348659003831418, "obj2": 0.027198601122299496}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( BR + MDR ) - Max( ACS,FirstVNF_RAM ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,RCSe ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8620689655172413, "obj2": 0.055553146588200195}, {"determining": "( ( AMS - ( MDR - RRS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.13255293722216246}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.8659003831417624, "obj2": 0.054555806404713476}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( FirstVNF_CPU / ( BR + FirstVNF_RAM ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) * Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9233716475095786, "obj2": 0.030222418487655903}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( MDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Max( MLU,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.27830041934857}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.7241379310344828, "obj2": 0.12895490455946484}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,Min( MLU ,DS ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.7145593869731801, "obj2": 0.13983635372134906}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.8735632183908046, "obj2": 0.050456570923955335}], "31": [{"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + FirstVNF_CPU ) - Max( ARS,FirstVNF_CPU_Server ) ) + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,Max( MUC,Max( DS,MUC ) ) ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( DDR - ( ( Min( ACS ,( BR + MDR ) ) - ARS ) - ( MDR + DDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( CS / MUC ) * MUC ) + MUR ) / ( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29269351355104734}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.7298850574712644, "obj2": 0.1231324778327959}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7471264367816092, "obj2": 0.11265771554831198}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.2781841995419992}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,Max( MUC,Max( MUC,MUC ) ) ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.0061850040839160954}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7030651340996169, "obj2": 0.14867598967701842}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6724137931034483, "obj2": 0.16434098454695262}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - DS ) - Min( MUM ,DS ) )", "obj1": 0.6455938697318008, "obj2": 0.1997013768394822}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - FirstVNF_RAM_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,CS ) )", "obj1": 0.5977011494252874, "obj2": 0.256315123109233}, {"determining": "( ( AMS - ( MDR - ( ( AMS / FirstVNF_RAM_Server ) - ( ( MDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) ) ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,RCSe ) - DS ) - Min( MUM ,DS ) )", "obj1": 0.8180076628352491, "obj2": 0.08233854929724461}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) + MDR ) - Max( ( Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,( RMSe * MUM ) ) )", "obj1": 0.9348659003831418, "obj2": 0.027198601122299496}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS - RRSe ) / ( RMSe / DS ) )", "obj1": 0.6494252873563219, "obj2": 0.191114637056422}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( FirstVNF_CPU / ( BR + FirstVNF_RAM ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) * Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9233716475095786, "obj2": 0.030222418487655903}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ( BR + FirstVNF_CPU ) - Max( ARS,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.8237547892720306, "obj2": 0.07483229674519791}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,Min( MLU ,DS ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.7145593869731801, "obj2": 0.13983635372134906}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.8390804597701149, "obj2": 0.06665652389571476}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07010998099345819}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7547892720306514, "obj2": 0.10930232348194574}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7758620689655172, "obj2": 0.09846434884127263}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6647509578544061, "obj2": 0.17321827812114457}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + MDR ) - Max( ( Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.7203065134099617, "obj2": 0.132269571303088}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,MUC ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6839080459770115, "obj2": 0.15330952428803823}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6264367816091954, "obj2": 0.21414427771853747}, {"determining": "( ( AMS - ( ACS - CRS ) ) - Min( MDR ,MDR ) )", "choosing": "( ( ( ( CS / RRSe ) * MUR ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.7068965517241379, "obj2": 0.1430886723168404}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( AMS - DDR ) - ( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,MLU ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( ( MUC + MUM ),CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - ( MUM / DS ) )", "obj1": 0.9022988505747126, "obj2": 0.038265978089481685}, {"determining": "( ( Const / ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / ( Max( MUC,CS ) / DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - Const ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.7873563218390804, "obj2": 0.09541287278867697}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2591459117356171}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6513409961685823, "obj2": 0.18200079621602705}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - ( FirstVNF_RAM_Server / Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( MUC - ( MUM * DS ) ) ) - ( MUM * MLU ) ) ) / Min( MLU ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.04609148832115932}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.18193441239876143}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6609195402298851, "obj2": 0.1743982594751014}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( ( AMS - ( ACS - CRS ) ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) / Max( Max( MUC,CS ),( ( ( ( CS / RRSe ) * MUC ) + MUR ) / ( RMSe - DS ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003479086610880496}, {"determining": "( ( ( ( AMS - BR ) - ( MDR + MDR ) ) - ( ( ( FirstVNF_CPU_Server - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) * DS ) - RRSe )", "obj1": 0.789272030651341, "obj2": 0.09270232512845532}, {"determining": "( ( AMS - ( BR + MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.9137931034482759, "obj2": 0.03334442103902442}], "32": [{"determining": "( ( ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( DS,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC / DS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + FirstVNF_CPU ) - Max( ARS,FirstVNF_CPU_Server ) ) + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,Max( MUC,Max( DS,MUC ) ) ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29269351355104734}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,MUC ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - ( FirstVNF_RAM_Server / Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( MUC - ( MUM * DS ) ) ) - ( MUM * MLU ) ) ) / Min( MLU ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.04609148832115932}, {"determining": "( ( Const / ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / ( Max( MUC,CS ) / DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,Max( MUC,Max( MUC,MUC ) ) ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.0061850040839160954}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ),Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( Min( ( CS / MUC ) ,MUC ) + MUR ) * ( ( MLU * ( ( DS * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7624521072796935, "obj2": 0.10218232848208361}, {"determining": "( ( AMS - DDR ) - ( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,MLU ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( ( MUC + MUM ),CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - ( MUM / DS ) )", "obj1": 0.9022988505747126, "obj2": 0.038265978089481685}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - FirstVNF_RAM_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,CS ) )", "obj1": 0.5977011494252874, "obj2": 0.256315123109233}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.7298850574712644, "obj2": 0.1231324778327959}, {"determining": "( ( ACS - ( MDR * ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),BR ) + MDR ) - Min( ACS ,FirstVNF_RAM_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - ( MLU + ( CS * MUM ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02457527790271901}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.12208354187651292}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ( BR - Max( Min( ( MDR + MDR ) ,FirstVNF_RAM_Server ),ARS ) ) / FirstVNF_CPU ) * ( ( ACS / Min( MDR ,ARS ) ) - ( ARS + MDR ) ) )", "choosing": "( ( DS * ( ( RRSe * ( ( MUM / MLU ) * MUC ) ) - ( MUM * DS ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7030651340996169, "obj2": 0.14867598967701842}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.8659003831417624, "obj2": 0.058381079355210495}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07010998099345819}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Min( Max( MUM,RRSe ) ,Min( MLU ,DS ) ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8160919540229885, "obj2": 0.08171871088516365}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.2781841995419992}, {"determining": "( ( AMS - ( ( DDR - ( ( Min( ACS ,( BR + MDR ) ) - ARS ) - ( MDR + DDR ) ) ) - ARS ) ) - Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) )", "choosing": "( ( ( ( CS / MUC ) * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) + MUR ) / ( RMSe - DS ) )", "obj1": 0.8563218390804598, "obj2": 0.059714422529519556}, {"determining": "( ( FirstVNF_CPU / ( BR + FirstVNF_RAM ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) * Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9233716475095786, "obj2": 0.030222418487655903}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6839080459770115, "obj2": 0.15330952428803823}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6187739463601533, "obj2": 0.21446400624127782}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( ( AMS - ( ACS - CRS ) ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) / Max( Max( MUC,CS ),( ( ( ( CS / RRSe ) * MUC ) + MUR ) / ( RMSe - DS ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003479086610880496}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 0.7241379310344828, "obj2": 0.1315277226894522}, {"determining": "( ( AMS - ( BR + MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.9137931034482759, "obj2": 0.03334442103902442}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( RMSe * MUM ) * Min( Max( MUM,RRSe ) ,Min( MLU ,DS ) ) ) ) - Min( MLU ,DS ) )", "obj1": 0.8735632183908046, "obj2": 0.05265592973871359}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - Const ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.7873563218390804, "obj2": 0.09541287278867697}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.5881226053639846, "obj2": 0.2576611830947903}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.657088122605364, "obj2": 0.18157788164048289}, {"determining": "( ( Const - ( ( ( DDR - ( ( AMS - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17107085646690734}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6264367816091954, "obj2": 0.21414427771853747}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( ( ( AMS - BR ) - ( MDR + MDR ) ) - ( ( ( FirstVNF_CPU_Server - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) * DS ) - RRSe )", "obj1": 0.789272030651341, "obj2": 0.09270232512845532}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7471264367816092, "obj2": 0.11265771554831198}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) + MDR ) - Max( ( Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) - Min( Max( FirstVNF_CPU_Server,RRS ) ,( ACS / BR ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( Const - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ,( RMSe * MUM ) ) )", "obj1": 0.9559386973180076, "obj2": 0.017408036559993567}, {"determining": "( ( Const - ( MDR - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Min( Max( MUC,CS ) ,RCSe ) )", "obj1": 0.8754789272030651, "obj2": 0.04987559679733378}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ( BR + FirstVNF_CPU ) - Max( ARS,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.8237547892720306, "obj2": 0.07483229674519791}], "33": [{"determining": "( ( ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,DDR ) ) ) - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( DS,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC / DS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6934865900383141, "obj2": 0.14850372827894415}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7222222222222222, "obj2": 0.13404680122800075}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ),Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( Min( ( CS / MUC ) ,MUC ) + MUR ) * ( ( MLU * ( ( DS * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7624521072796935, "obj2": 0.10218232848208361}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29269351355104734}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.7298850574712644, "obj2": 0.1231324778327959}, {"determining": "( ( Const - ( ( ( DDR - ( ( AMS - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17107085646690734}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.2781841995419992}, {"determining": "( ( Const / ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / ( Max( MUC,CS ) / DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6532567049808429, "obj2": 0.1716482836307048}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - FirstVNF_RAM_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,CS ) )", "obj1": 0.5977011494252874, "obj2": 0.256315123109233}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( FirstVNF_CPU / ( BR + FirstVNF_RAM ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) * Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9233716475095786, "obj2": 0.030222418487655903}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7471264367816092, "obj2": 0.11265771554831198}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( MDR,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,RRSe ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7777777777777778, "obj2": 0.09652173514977344}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07010998099345819}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9731800766283525, "obj2": 0.011183880323397616}, {"determining": "( ( ACS - ( MDR * ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),BR ) + MDR ) - Min( ACS ,FirstVNF_RAM_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - ( MLU + ( CS * MUM ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02457527790271901}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Min( Max( MUC,CS ) ,RCSe ) )", "obj1": 0.7452107279693486, "obj2": 0.11320799215236876}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) * MDR ) - Min( ACS ,FirstVNF_RAM_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( RRSe - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.9521072796934866, "obj2": 0.017361877430820592}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6264367816091954, "obj2": 0.21414427771853747}, {"determining": "( Min( MDR ,ARS ) * ( BR - ( ( ( BR + MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * Max( RCSe,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.30688540450775775}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( MUC,CS ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.842911877394636, "obj2": 0.06297546810843867}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8563218390804598, "obj2": 0.05629124333149321}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - Min( MLU ,( RMSe * MUM ) ) )", "obj1": 0.8735632183908046, "obj2": 0.04985532867752913}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUC + ( ( ( MLU + Max( MLU,CS ) ) + ( Max( MUC,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,RRSe ) ,DS ) ) ) ) * RCSe ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.6111111111111112, "obj2": 0.2297484188086066}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.8639846743295019, "obj2": 0.0560569076599364}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR - MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ( DDR - ( DDR - ARS ) ) - ARS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / MUM ),CS ) - Min( DS ,DS ) ) ) * DS ) - ( Max( MUC,Max( DS,MUC ) ) / DS ) )", "obj1": 0.8160919540229885, "obj2": 0.07963591318913374}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( AMS - DDR ) - ( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,MLU ) ,Max( ( ( ( CS + MUM ) / DS ) / Min( Max( ( MUC + MUM ),CS ) ,RCSe ) ),MUR ) ) - Min( MUC ,CS ) ) - ( MUM / DS ) )", "obj1": 0.9022988505747126, "obj2": 0.038265978089481685}, {"determining": "( ( AMS - ( ( RRS - ( ( ( BR + MDR ) - RRS ) * ( MDR + ACS ) ) ) - ARS ) ) - ( MDR + CRS ) )", "choosing": "( ( ( ( Min( MLU ,Max( MLU,RRSe ) ) + ( Min( MLU ,RRSe ) * ( ( CS + CS ) / Min( Max( MUC,RCSe ) ,MUC ) ) ) ) * RCSe ) / ( RMSe * ( Max( MUC,Max( MUC,MUC ) ) / ( Max( MLU,RRSe ) * ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ) ) ) ) ) / ( RMSe * DS ) )", "obj1": 0.8448275862068966, "obj2": 0.06152615238911746}, {"determining": "( ( Const - ( ( ( FirstVNF_CPU - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ACS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( Max( MUC,CS ) + DS ) )", "obj1": 0.6187739463601533, "obj2": 0.21446400624127782}, {"determining": "( ( AMS - ( BR + MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.9137931034482759, "obj2": 0.03334442103902442}, {"determining": "( ( ( ( AMS - BR ) - ( MDR + MDR ) ) - ( ( ( FirstVNF_CPU_Server - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( MUM * MUM ) * Min( MLU ,DS ) ) * DS ) - RRSe )", "obj1": 0.789272030651341, "obj2": 0.09270232512845532}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - ( FirstVNF_RAM_Server / Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( MUC - ( MUM * DS ) ) ) - ( MUM * MLU ) ) ) / Min( MLU ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.04609148832115932}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUC ) / Max( Max( MUC,CS ),DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20548746547283633}, {"determining": "( ( AMS - ( BR + MDR ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03596691165574128}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( ( AMS - ( ACS - CRS ) ) - ( MDR + MDR ) ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) / Max( Max( MUC,CS ),( ( ( ( CS / RRSe ) * MUC ) + MUR ) / ( RMSe - DS ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003479086610880496}, {"determining": "( ( AMS - BR ) - ( MDR + MDR ) )", "choosing": "( ( MLU + Max( MLU,CS ) ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) )", "obj1": 0.89272030651341, "obj2": 0.04307720409938689}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,MUC ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}], "34": [{"determining": "( ( ACS - ( MDR * ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),BR ) + MDR ) - Min( ACS ,FirstVNF_RAM_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - ( MLU + ( CS * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) - BR ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,( ( CS * MLU ) * Min( ( MUR / CS ) ,MUC ) ) ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6340996168582376, "obj2": 0.20359780760958768}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - FirstVNF_RAM_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / CS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,CS ) )", "obj1": 0.5977011494252874, "obj2": 0.256315123109233}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7432950191570882, "obj2": 0.11001797595528616}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( ACS * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + RMSe ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.710727969348659, "obj2": 0.14383925355308588}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29269351355104734}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5708812260536399, "obj2": 0.2781841995419992}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( MDR * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7222222222222222, "obj2": 0.13404680122800075}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( FirstVNF_RAM - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( ( ( Min( DS ,DS ) / MUM ) - CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.735632183908046, "obj2": 0.11874779714747467}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( Min( MUC ,MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6762452107279694, "obj2": 0.16660996047417997}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6264367816091954, "obj2": 0.21414427771853747}, {"determining": "( ( ( ( AMS - BR ) - ( MDR + MDR ) ) - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( MUM * Max( MUC,Max( DS,MUC ) ) ) * Min( MLU ,DS ) ) * DS ) - DS )", "obj1": 0.789272030651341, "obj2": 0.09106429675466277}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),ARS ) * MDR ) - Min( ACS ,FirstVNF_RAM_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( RRSe - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.9521072796934866, "obj2": 0.017361877430820592}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07010998099345819}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( CS / MUC ) * MUC ) + MUR ) * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7605363984674329, "obj2": 0.10777114605988665}, {"determining": "( ( Const - ( ( ( DDR - ( ( AMS - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17107085646690734}, {"determining": "( Min( MDR ,ARS ) * ( BR - ( ( ( BR + MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * Max( RCSe,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.30688540450775775}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( FirstVNF_CPU / ( BR + FirstVNF_RAM ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) * Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9233716475095786, "obj2": 0.030222418487655903}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6532567049808429, "obj2": 0.1716482836307048}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,DS ) ,DS ) )", "obj1": 0.7298850574712644, "obj2": 0.1231324778327959}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Min( Max( MUC,CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( Min( Max( MUM,RRSe ) ,MUC ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.012958432859334863}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( MDR,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( RRSe - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,RRSe ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.7777777777777778, "obj2": 0.09652173514977344}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6111111111111112, "obj2": 0.22588998906404253}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8620689655172413, "obj2": 0.054016079809252895}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_RAM_Server ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + PN ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / MUM ) ),MUR ) - Min( DS ,DS ) ) ) * ( MUM - CS ) ) - Min( MLU ,( RMSe * MUM ) ) )", "obj1": 0.89272030651341, "obj2": 0.042765643335214626}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ),Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( Min( ( CS / MUC ) ,MUC ) + MUR ) * ( ( MLU * ( ( DS * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7624521072796935, "obj2": 0.10218232848208361}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( MDR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / Max( MUM,RRSe ) ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9348659003831418, "obj2": 0.024370946886605828}, {"determining": "( ( AMS - ( MDR - ARS ) ) - ( ( ( Const - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) - FirstVNF_CPU ) + MDR ) )", "choosing": "( MUR / ( MUM - CS ) )", "obj1": 0.7950191570881227, "obj2": 0.08717365178734021}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - Min( MLU ,( RMSe * MUM ) ) )", "obj1": 0.8735632183908046, "obj2": 0.04977411560661732}, {"determining": "( Max( Const,DDR ) * ( ( AMS / FirstVNF_RAM_Server ) - ( Min( DDR ,( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( Max( ( ( MUC / DS ) - MUM ),CS ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2870634421929839}, {"determining": "( ( Const - ( ( ( FirstVNF_CPU - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ACS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( Max( MUC,CS ) + DS ) )", "obj1": 0.6187739463601533, "obj2": 0.21446400624127782}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7030651340996169, "obj2": 0.14658921170088704}, {"determining": "( ( ( ( AMS - BR ) - ( MDR + MDR ) ) - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / MUM ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.7720306513409961, "obj2": 0.09773254201768283}, {"determining": "( ( Min( Min( ( ( ( DDR - ( DDR - ARS ) ) + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ( DDR - ( DDR - ARS ) ) - ARS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( CS ,DS ) / MUM ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.7279693486590039, "obj2": 0.13301481172724772}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( BR + MDR ) ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Min( Max( MUC,( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) ) ,RCSe ) )", "obj1": 0.9885057471264368, "obj2": 0.004358261197186951}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - ( FirstVNF_RAM_Server / Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( MUC - ( MUM * DS ) ) ) - ( MUM * MLU ) ) ) / Min( MLU ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.04609148832115932}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.020866689878593504}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6934865900383141, "obj2": 0.14850372827894415}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9770114942528736, "obj2": 0.009664410779371826}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8563218390804598, "obj2": 0.05629124333149321}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS + FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - CRS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RMSe + MUM ) / Min( ( DS * DS ) ,Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}], "35": [{"determining": "( ( Const - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( MDR * ARS ) ) - ( ( ( Max( ( ACS + Min( Min( ACS ,ARS ) ,( FirstVNF_Mem - ARS ) ) ),BR ) + MDR ) - Min( ACS ,FirstVNF_RAM_Server ) ) + ( Max( BR,MDR ) + Max( ( ( DDR / FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - ( MLU + ( CS * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),( DDR - ( MDR - MDR ) ) ) ) + ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03648801501852116}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUM ) / Min( Max( ( ( MUC / DS ) - MUM ),CS ) ,DS ) )", "obj1": 0.5862068965517241, "obj2": 0.24820729766551827}, {"determining": "( ( FirstVNF_CPU / ( BR + FirstVNF_RAM ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) * Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9233716475095786, "obj2": 0.030222418487655903}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_RAM_Server ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + PN ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( Min( Max( RRSe,CS ) ,RCSe ) - ( MUC / MUM ) ),MUR ) - Min( DS ,DS ) ) ) * ( MUM - CS ) ) - Min( MLU ,( RMSe * MUM ) ) )", "obj1": 0.89272030651341, "obj2": 0.042765643335214626}, {"determining": "( ( Const - ( ( ( DDR - ( ( ACS - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Min( MLU ,DS ) )", "obj1": 0.6398467432950191, "obj2": 0.20106911654658993}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS + FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - CRS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RMSe + MUM ) / Min( ( DS * DS ) ,Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( Const - ( ( ( RRS - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / ( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) / DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8563218390804598, "obj2": 0.05629124333149321}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29269351355104734}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( MDR + ( Max( BR,MDR ) + Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / Max( MUM,RRSe ) ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( ( CS / MUC ),CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9348659003831418, "obj2": 0.02435053875394702}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + CRS ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06322717664721886}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6340996168582376, "obj2": 0.20359780760958768}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * ( MUM * Max( MUC,Max( DS,MUC ) ) ) ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6685823754789272, "obj2": 0.16627185489643867}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7432950191570882, "obj2": 0.11001797595528616}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6264367816091954, "obj2": 0.21414427771853747}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( ACS * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / ( Min( MUC ,CS ) - DS ) )", "obj1": 0.7126436781609196, "obj2": 0.13971866168751287}, {"determining": "( Min( MDR ,ARS ) * ( BR - ( ( ( BR + MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( MUM * Max( RCSe,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5632183908045977, "obj2": 0.30688540450775775}, {"determining": "( ( ( DDR - ( Max( ACS,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR + ( PN - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( Max( MUM,CS ) - DS ) )", "obj1": 0.6091954022988506, "obj2": 0.23779936533658827}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( FirstVNF_RAM - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( ( ( Min( DS ,DS ) / MUM ) - CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.735632183908046, "obj2": 0.11874779714747467}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,RMSe ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6532567049808429, "obj2": 0.1716482836307048}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.9770114942528736, "obj2": 0.009522462317013808}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( MDR - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.814176245210728, "obj2": 0.07786021821518581}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - ( FirstVNF_RAM_Server / Const ) ) ) )", "choosing": "( ( DS * ( ( RRSe * ( MUC - ( MUM * DS ) ) ) - ( MUM * MLU ) ) ) / Min( MLU ,DS ) )", "obj1": 0.8831417624521073, "obj2": 0.04609148832115932}, {"determining": "( ( Min( Min( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( ( BR + MDR ) + FirstVNF_CPU_Server ) * ( ARS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) ) - Min( MLU ,DS ) )", "obj1": 0.8199233716475096, "obj2": 0.07559357644687727}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ),Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( Min( ( CS / MUC ) ,MUC ) + MUR ) * ( ( MLU * ( ( DS * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7624521072796935, "obj2": 0.10218232848208361}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8295019157088123, "obj2": 0.07010998099345819}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8620689655172413, "obj2": 0.054016079809252895}, {"determining": "( Max( Const,DDR ) * ( ( AMS / FirstVNF_RAM_Server ) - ( Min( DDR ,( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( Max( ( ( MUC / DS ) - MUM ),CS ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2870634421929839}, {"determining": "( ( Const - ( ( ( FirstVNF_CPU - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ACS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( Max( MUC,CS ) + DS ) )", "obj1": 0.6187739463601533, "obj2": 0.21446400624127782}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( ( ( AMS - BR ) - ( MDR + MDR ) ) - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / MUM ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.7720306513409961, "obj2": 0.09773254201768283}, {"determining": "( ( Min( Min( ( ( ( DDR - ( DDR - ARS ) ) + MDR ) - Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) ) ,RRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - MDR ) - ( ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( BR + CRS ) - Max( FirstVNF_RAM_Server,( ( DDR + FirstVNF_CPU_Server ) * ( ( DDR - ( DDR - ARS ) ) - ARS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( CS ,DS ) / MUM ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.7279693486590039, "obj2": 0.13301481172724772}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6111111111111112, "obj2": 0.22588998906404253}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,( ( MUC / DS ) + MUC ) ),MUM ) ,DS ) ) )", "obj1": 0.7950191570881227, "obj2": 0.08439435564176993}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6934865900383141, "obj2": 0.14850372827894415}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ARS - ( ( ( BR / MDR ) - Max( ( ACS + MDR ),ARS ) ) * ( ( BR * MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * ( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ) * Min( MLU ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.5593869731800766, "obj2": 0.3081892428746942}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - ( DS * DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7528735632183908, "obj2": 0.10886120302448753}, {"determining": "( ( Const - ( ( ( DDR - ( ( AMS - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17107085646690734}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + ( CS + MUM ) ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9712643678160919, "obj2": 0.012128405438355423}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8716475095785441, "obj2": 0.04957733250279017}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) * Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RMSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) )", "obj1": 0.7049808429118773, "obj2": 0.14315333039424674}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7030651340996169, "obj2": 0.14658921170088704}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( CS / MUC ) * MUC ) + MUR ) * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7605363984674329, "obj2": 0.10777114605988665}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}], "36": [{"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( DDR - ( DDR - ARS ) ) - ARS ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MUM - CS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS + FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - CRS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RMSe + MUM ) / Min( ( DS * DS ) ,Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20014813559504904}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - ( DDR - ( MDR - ARS ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8256704980842912, "obj2": 0.06938223708816123}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( ( BR + MDR ) - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) ) - Min( MLU ,DS ) )", "obj1": 0.9099616858237548, "obj2": 0.034206406097100295}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,RMSe ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6532567049808429, "obj2": 0.1716482836307048}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( Min( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) ,FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( ( ( Min( DS ,DS ) / MUM ) + CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.7241379310344828, "obj2": 0.12932242963360505}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,Min( CS ,DS ) ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) )", "obj1": 0.9540229885057471, "obj2": 0.0186908002361592}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( PN - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUM ) / ( Max( ( ( MUC / DS ) - MUM ),CS ) / DS ) )", "obj1": 0.5862068965517241, "obj2": 0.24820729766551827}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7432950191570882, "obj2": 0.11001797595528616}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.5670498084291188, "obj2": 0.29269351355104734}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6264367816091954, "obj2": 0.21414427771853747}, {"determining": "( ( FirstVNF_CPU / ( BR + FirstVNF_RAM ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) * Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9233716475095786, "obj2": 0.030222418487655903}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( FirstVNF_RAM - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( ( ( Min( DS ,DS ) / MUM ) - CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.735632183908046, "obj2": 0.11874779714747467}, {"determining": "( Max( Const,DDR ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - PN ) ) + ( ( FirstVNF_RAM_Server + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * Max( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ),Min( MLU ,DS ) ) ) - ( MLU - DS ) )", "obj1": 0.5613026819923371, "obj2": 0.3036762577623486}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ACS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUM ) / ( Max( ( ( MUC / DS ) - MUM ),CS ) / DS ) )", "obj1": 0.60727969348659, "obj2": 0.22726673813618747}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6340996168582376, "obj2": 0.20359780760958768}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_RAM_Server ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - Max( ( DDR - ( DDR - ARS ) ),Const ) ) ) )", "choosing": "( ( ( MUC / DS ) * ( MUM - CS ) ) - Min( MLU ,( RMSe * MUM ) ) )", "obj1": 0.9003831417624522, "obj2": 0.04076065165717643}, {"determining": "( Max( Const,DDR ) * ( ( AMS / FirstVNF_RAM_Server ) - ( Min( DDR ,( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( Max( ( ( MUC / DS ) - MUM ),CS ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2870634421929839}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.15591387829564585}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( MDR + ( Max( BR,MDR ) + Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) ) ) * Max( Max( ( ( CS + MUM ) / Max( ( CS / MUC ),CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.9425287356321839, "obj2": 0.023249520283289228}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ),Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( Min( ( CS / MUC ) ,MUC ) + MUR ) * ( ( MLU * ( ( DS * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7624521072796935, "obj2": 0.10218232848208361}, {"determining": "( ( MRS - Max( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ),DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( MUM / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8544061302681992, "obj2": 0.061437550640952104}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * MUM ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9904214559386973, "obj2": 0.0036840923777719382}, {"determining": "( ( Const - ( ( ( FirstVNF_CPU - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ACS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( Max( MUC,CS ) + DS ) )", "obj1": 0.6187739463601533, "obj2": 0.21446400624127782}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( CS ,DS ) / MUM ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.7873563218390804, "obj2": 0.09227819564575705}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( CS / MUC ) * MUC ) + MUR ) * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7777777777777778, "obj2": 0.09534943077448774}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6590038314176245, "obj2": 0.168925797567867}, {"determining": "( ( Const - ( ( ( RRS - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / ( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) / DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( ACS * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / ( Min( MUC ,CS ) - DS ) )", "obj1": 0.7126436781609196, "obj2": 0.13971866168751287}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06322717664721886}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - ( DS * DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.7528735632183908, "obj2": 0.10886120302448753}, {"determining": "( Min( MRS ,Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( RMSe ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6934865900383141, "obj2": 0.14850372827894415}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6724137931034483, "obj2": 0.16308563031828344}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,Min( Max( MUC,CS ) ,DS ) ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.0063762967750772784}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / MUM ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.7298850574712644, "obj2": 0.12177125825824052}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) * Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RMSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) )", "obj1": 0.7049808429118773, "obj2": 0.14315333039424674}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / Min( ( DS * DS ) ,Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.789272030651341, "obj2": 0.08717209218991497}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( ( ( BR + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) - Max( ( Min( ACS ,Min( ( AMS * Const ) ,( FirstVNF_Mem - ARS ) ) ) - ( ( AMS - DDR ) - ( DDR / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) ) + ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.013732480119230036}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - ( MLU + ( CS * MUM ) ) )", "obj1": 0.8103448275862069, "obj2": 0.07975937021660716}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + CRS ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06322717664721886}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.1257356757214348}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,Min( Max( MUC,Max( DS,MUC ) ) ,DS ) ),MUM ) ,DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.04771796942372644}], "37": [{"determining": "( ( Const - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( DDR - ( DDR - ARS ) ) - ARS ) )", "choosing": "( ( ( MUC + MUM ) / ( ( MUM - CS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( FirstVNF_CPU / ( BR + FirstVNF_RAM ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUC,CS ) ,Max( ( ( ( CS * MUM ) / DS ) / Min( Max( MUC,CS ) ,RCSe ) ),MUR ) ) * Min( MUC ,CS ) ) - Min( MUM ,DS ) )", "obj1": 0.9233716475095786, "obj2": 0.030222418487655903}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - ( DDR - ( MDR - ARS ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8256704980842912, "obj2": 0.06938223708816123}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( PN - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUM ) / ( Max( ( ( MUC / DS ) - MUM ),CS ) / DS ) )", "obj1": 0.5862068965517241, "obj2": 0.24820729766551827}, {"determining": "( ( ACS - ( MDR - ARS ) ) - ( MDR + ( Max( BR,MDR ) + Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.9425287356321839, "obj2": 0.0218410135457817}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - ( MLU + ( CS * MUM ) ) )", "obj1": 0.8103448275862069, "obj2": 0.07975937021660716}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( ( BR + MDR ) - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) ) - Min( MLU ,DS ) )", "obj1": 0.9099616858237548, "obj2": 0.034206406097100295}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS + FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - CRS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RMSe + MUM ) / Min( ( DS * DS ) ,Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( DDR - ( ( DDR * ( ACS * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( MUC / DS ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.013133111486022697}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ACS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUM ) / ( Max( ( ( MUC / DS ) - MUM ),CS ) / DS ) )", "obj1": 0.60727969348659, "obj2": 0.22726673813618747}, {"determining": "( ( Const - ( ( ( RRS - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / ( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) / DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,RMSe ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6532567049808429, "obj2": 0.1716482836307048}, {"determining": "( Min( MRS ,Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( RMSe ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6934865900383141, "obj2": 0.14850372827894415}, {"determining": "( ( ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,Min( MLU ,DS ) ) ,DS ) )", "obj1": 0.5747126436781609, "obj2": 0.28211817626084074}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) * Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RMSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) )", "obj1": 0.7049808429118773, "obj2": 0.14315333039424674}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( CS / MUC ) * MUC ) + MUR ) * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7777777777777778, "obj2": 0.09534943077448774}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) )", "obj1": 0.7183908045977011, "obj2": 0.12805054039081099}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6590038314176245, "obj2": 0.168925797567867}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6264367816091954, "obj2": 0.21414427771853747}, {"determining": "( ( MRS - Max( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ),DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( CS / MUC ) * MUC ) + MUR ) * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.8524904214559387, "obj2": 0.05882458826636423}, {"determining": "( Max( Const,DDR ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - PN ) ) + ( ( FirstVNF_RAM_Server + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * Max( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ),Min( MLU ,DS ) ) ) - ( MLU - DS ) )", "obj1": 0.5613026819923371, "obj2": 0.3036762577623486}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6340996168582376, "obj2": 0.20359780760958768}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( ( BR + MDR ) - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) ) - Min( MLU ,DS ) )", "obj1": 0.896551724137931, "obj2": 0.0397437056891412}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20014813559504904}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,Min( Max( MUC,CS ) ,DS ) ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9846743295019157, "obj2": 0.0063762967750772784}, {"determining": "( ( MRS - Max( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ),DDR ) ) - ( ( ( BR + MDR ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( RRSe * MUR ) - ( MUM * DS ) ) / ( MUM / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8639846743295019, "obj2": 0.05433668281964078}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,Min( Max( MUC,Max( DS,MUC ) ) ,DS ) ),MUM ) ,DS ) ) )", "obj1": 0.8773946360153256, "obj2": 0.04946056125600348}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( ( RRS + MDR ) ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUM,RRSe ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.735632183908046, "obj2": 0.11665151910576636}, {"determining": "( ( Const - ( ( ( FirstVNF_CPU - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ACS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( Max( MUC,CS ) + DS ) )", "obj1": 0.6187739463601533, "obj2": 0.21446400624127782}, {"determining": "( ( Const - ( ( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,Min( MLU ,DS ) ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5593869731800766, "obj2": 0.3084394609648039}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ),Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( Min( ( CS / MUC ) ,MUC ) + MUR ) * ( ( MLU * ( ( DS * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7624521072796935, "obj2": 0.10218232848208361}, {"determining": "( ( Const - ( ( ( DDR - ( ( FirstVNF_RAM - ( DDR - ARS ) ) - DDR ) ) - ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( ( MUC + MUM ) ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,Min( Max( RCSe,Max( DS,MUC ) ) ,DS ) ),MUM ) ,DS ) ) )", "obj1": 0.7873563218390804, "obj2": 0.08805584100926747}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.6436781609195402, "obj2": 0.1822846524039628}, {"determining": "( Max( Const,DDR ) * ( ( AMS / FirstVNF_RAM_Server ) - ( Min( DDR ,( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( Max( ( ( MUC / DS ) - MUM ),CS ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2870634421929839}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / Min( ( DS * DS ) ,Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.789272030651341, "obj2": 0.08717209218991497}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.15591387829564585}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6724137931034483, "obj2": 0.16308563031828344}, {"determining": "( ( MRS - Max( Const,( ( BR + MDR ) - Max( ( DDR - ( DDR - ARS ) ),Const ) ) ) ) - ( ( Max( FirstVNF_RAM_Server,Min( ARS ,( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( MDR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( ( MUC / DS ) * ( MUM - CS ) ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,Min( CS ,DS ) ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * MLU ) )", "obj1": 0.8869731800766284, "obj2": 0.04668003632451904}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06468470608636052}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * MUM ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.9904214559386973, "obj2": 0.0036840923777719382}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_RAM_Server ),( DDR - ( MDR - MDR ) ) ) ) + ( ( BR + MDR ) - Max( ( DDR - ( DDR - ARS ) ),Const ) ) ) )", "choosing": "( ( ( MUC / DS ) * ( MUM - CS ) ) - Min( MLU ,( RMSe * MUM ) ) )", "obj1": 0.8946360153256705, "obj2": 0.043042720763065354}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7432950191570882, "obj2": 0.11001797595528616}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.710727969348659, "obj2": 0.13733485965546713}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( BR + MDR ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) * ( ( ( Min( DS ,DS ) / MUM ) - CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.8601532567049809, "obj2": 0.05546763322384786}], "38": [{"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( DDR - ( ( DDR * ( ACS * ARS ) ) - ( ACS + MDR ) ) ) - ARS ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( MUC / DS ),CS ) - Min( DS ,DS ) ) ) * DS ) - ( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) * ( ARS - ( ( DDR - Max( ( ACS + Min( Min( ACS ,ARS ) ,( RRS - ARS ) ) ),ARS ) ) + ( ( Const * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RCSe * ( ( RMSe * MUM ) * ( Max( MUM,CS ) - DS ) ) ) - ( MLU + DS ) )", "obj1": 0.553639846743295, "obj2": 0.31496440776771}, {"determining": "( ( Const + Min( Max( ( DDR - ( ( DDR - Max( MDR,ARS ) ) - FirstVNF_Mem_Server ) ),ARS ) ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( Min( ( MUM * RRSe ) ,DS ) - MUM ) ,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.23854266443414954}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( PN - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUM ) / ( Max( ( ( MUC / DS ) - MUM ),CS ) / DS ) )", "obj1": 0.5862068965517241, "obj2": 0.24820729766551827}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7432950191570882, "obj2": 0.11001797595528616}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( MUC / DS ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.6436781609195402, "obj2": 0.18072691288924547}, {"determining": "( Max( Const,DDR ) * ( ( AMS / FirstVNF_RAM_Server ) - ( Min( DDR ,( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + DS ) / Min( Max( ( ( MUC / DS ) - MUM ),CS ) ,DS ) )", "obj1": 0.5689655172413793, "obj2": 0.2870634421929839}, {"determining": "( Max( Const,DDR ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - PN ) ) + ( ( FirstVNF_RAM_Server + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS * Max( ( ( Min( ( RRSe / CS ) ,RCSe ) - ( MUC / MUC ) ) * Max( MLU,MLU ) ),Min( MLU ,DS ) ) ) - ( MLU - DS ) )", "obj1": 0.5613026819923371, "obj2": 0.3036762577623486}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ACS ) ) - ( MDR + MDR ) )", "choosing": "( ( MUC + MUM ) / ( Max( ( ( MUC / DS ) - MUM ),CS ) / DS ) )", "obj1": 0.60727969348659, "obj2": 0.22726673813618747}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6724137931034483, "obj2": 0.16308563031828344}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ( DDR - ( DDR - ARS ) ) ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( DS,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6417624521072797, "obj2": 0.1967735347470516}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( ( BR + MDR ) - ( BR + MDR ) ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) ) - Min( MLU ,DS ) )", "obj1": 0.9099616858237548, "obj2": 0.034206406097100295}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - ( Min( ACS ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.975095785440613, "obj2": 0.010357017104373329}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ),Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( Min( ( CS / MUC ) ,MUC ) + MUR ) * ( ( MLU * ( ( DS * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7624521072796935, "obj2": 0.10218232848208361}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ( BR + MDR ) ) + ACS ) - ( DDR - ( MDR - ARS ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8256704980842912, "obj2": 0.06938223708816123}, {"determining": "( ( ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ( MDR + MDR ) ) ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - MDR ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + MUM ) / Min( Max( MUM,Min( MLU ,DS ) ) ,DS ) )", "obj1": 0.5747126436781609, "obj2": 0.28211817626084074}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) * Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RMSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) )", "obj1": 0.7049808429118773, "obj2": 0.14315333039424674}, {"determining": "( ( ( DDR - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ) * ( ( AMS + FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - CRS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RMSe + MUM ) / Min( ( DS * DS ) ,Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.5766283524904214, "obj2": 0.2690015839637198}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6590038314176245, "obj2": 0.168925797567867}, {"determining": "( ( Const - ( ( ( DDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC / DS ) + MUC ) / Max( Min( MUC ,CS ),DS ) )", "obj1": 0.6264367816091954, "obj2": 0.21414427771853747}, {"determining": "( ( MRS - Max( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ),DDR ) ) - ( ( ( RRS - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( ( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) / DS ) * MUC ) + MUR ) * ( ( RRSe * ( ( RRSe * MUR ) - ( MUM * DS ) ) ) - Min( MUM ,MUM ) ) ) / Min( MLU ,DS ) )", "obj1": 0.7777777777777778, "obj2": 0.09450096014900226}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.8199233716475096, "obj2": 0.07607802136195088}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - DDR ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),RCSe ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.6168582375478927, "obj2": 0.22442979736362145}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6340996168582376, "obj2": 0.20359780760958768}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6896551724137931, "obj2": 0.15591387829564585}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6781609195402298, "obj2": 0.15704586846108445}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,FirstVNF_CPU ) ) - ( ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( DS * ( MUM - CS ) ) - ( MLU + ( CS * MUM ) ) )", "obj1": 0.8103448275862069, "obj2": 0.07975937021660716}, {"determining": "( ( ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / ACS ) * ( ( AMS / FirstVNF_RAM_Server ) - ( ( DDR - ( MDR - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( ( MUC + MUM ) ,Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) * ( Max( ( ( CS + MUM ) / Min( ( MUC + CS ) ,DS ) ),MUR ) - Min( DS ,DS ) ) ) * DS ) - Min( MLU ,DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2615658647879179}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) * Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) )", "obj1": 0.9540229885057471, "obj2": 0.018698835335968677}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + ACS ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7662835249042146, "obj2": 0.10215189718293159}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( ( RRS + MDR ) ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUM,RRSe ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.735632183908046, "obj2": 0.11665151910576636}, {"determining": "( ( ( MRS - Max( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ),DDR ) ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / ( ( CS / MUC ) * MUC ) ) )", "obj1": 0.9846743295019157, "obj2": 0.00526423298454952}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ARS - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( RRSe * MUR ) - ( MUM * DS ) ) / ( MUM / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.126757961588096}, {"determining": "( ( Const - ( ( ( FirstVNF_CPU - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ( MDR - ACS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( Max( MUC,CS ) + DS ) )", "obj1": 0.6187739463601533, "obj2": 0.21446400624127782}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ) - ARS ) - ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06468470608636052}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7337164750957854, "obj2": 0.12120841166132597}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,Min( Max( MUC,Max( DS,MUC ) ) ,DS ) ),MUM ) ,DS ) ) )", "obj1": 0.8773946360153256, "obj2": 0.04946056125600348}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( DDR + ( Min( ACS ,( DDR - ( MDR - ARS ) ) ) - ARS ) ) + ( ( BR + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * MUM ) * ( Max( ( Min( DS ,DS ) / Min( Max( MUC,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) - Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003426616039256319}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6934865900383141, "obj2": 0.14850372827894415}, {"determining": "( ( MRS - Max( Const,DDR ) ) - ( ( Max( FirstVNF_RAM_Server,( ARS * ( ( ( BR + MDR ) - Max( BR,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ) ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ) - Min( DS ,DS ) ) ) * RCSe ) - ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( Min( DS ,DS ) / Min( Max( RRSe,CS ) ,DS ) ),CS ) - Min( DS ,DS ) ) ) * DS ) )", "obj1": 0.7183908045977011, "obj2": 0.12805054039081099}, {"determining": "( ( FirstVNF_Mem / Min( ACS ,FirstVNF_Mem ) ) - ( ARS + MDR ) )", "choosing": "( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MLU ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08293574306054362}, {"determining": "( ( Const - ( ( ( DDR - ( ( ( BR + MDR ) - ( DDR - ARS ) ) - DDR ) ) - ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( ( MUC + MUM ) ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,Min( Max( MUC,Max( DS,MUC ) ) ,DS ) ),MUM ) ,DS ) ) )", "obj1": 0.7969348659003831, "obj2": 0.0846398471415242}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) ) - ( ( DDR - ( MDR - ARS ) ) + MDR ) )", "choosing": "( ( ( MUC + MUM ) / Min( ( DS * DS ) ,Min( MLU ,DS ) ) ) / ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.031203177787408803}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( ( BR + MDR ) - Max( ( Min( DDR ,( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) ) / FirstVNF_CPU ),FirstVNF_CPU_Server ) ) + ( ( ( ( DDR - ( DDR - ARS ) ) - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.710727969348659, "obj2": 0.13733485965546713}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / Min( Max( Min( Max( MUM,Min( MLU ,DS ) ) ,DS ),MUM ) ,DS ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09266268317548165}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( DDR - ARS ) ) - ARS ) ) - ACS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( DS * ( ( DS * MUM ) * Min( RCSe ,DS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6532567049808429, "obj2": 0.1716482836307048}, {"determining": "( ( Const - ( ( ( DDR - ( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( MUM,RRSe ) - ( MUR - MUM ) ) * Min( Max( ( Max( CS,MUM ) / Min( Max( MUC,CS ) ,RMSe ) ),MUR ) ,( DS / DS ) ) ) + MUM ) / Min( Max( ( ( MUC / DS ) - MUM ),CS ) ,DS ) )", "obj1": 0.5804597701149425, "obj2": 0.2630039463031131}, {"determining": "( ( MRS - Max( ( DDR - ( ( DDR * ( BR - MDR ) ) - ( MDR + MDR ) ) ),DDR ) ) - ( ( ( BR + MDR ) - Max( ARS,FirstVNF_CPU_Server ) ) + ( ( ( MDR - ARS ) + MDR ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( ( ( MUC + MUM ) / ( ( DS * DS ) - Min( MLU ,DS ) ) ) / ( ( MUC + MUM ) / ( Max( Min( Max( MUM,RRSe ) ,DS ),MUM ) / DS ) ) )", "obj1": 0.8486590038314177, "obj2": 0.0631030662837638}, {"determining": "( ( Const - ( ( ( DDR - ( ( DDR - ( MDR - ARS ) ) - ARS ) ) - ARS ) - ARS ) ) - ( MDR + MDR ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( ( MUC / DS ) - MUM ) ) * Max( Max( ( ( CS + MUM ) / Max( MUC,CS ) ),MUR ),Min( DS ,DS ) ) ) * RCSe ) - Min( MLU ,DS ) )", "obj1": 0.6360153256704981, "obj2": 0.20014813559504904}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) - ARS ) - Max( Const,DDR ) ) - ( ( DDR - ( ( DDR * ( ACS * ARS ) ) - ( MDR + MDR ) ) ) - ARS ) )", "choosing": "( ( ( ( Max( RRSe,RRSe ) * ( MUR - MUM ) ) * ( Max( ( MUC / DS ),CS ) - Min( DS ,DS ) ) ) * DS ) - Min( Max( MUC,Max( DS,MUC ) ) ,DS ) )", "obj1": 0.9616858237547893, "obj2": 0.013133111486022697}]}