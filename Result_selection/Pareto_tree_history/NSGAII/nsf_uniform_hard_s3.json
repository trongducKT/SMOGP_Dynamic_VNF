{"1": [{"determining": "( ( BR * MDR ) - ( BR - Const ) )", "choosing": "( ( DS / CS ) * ( MUR / MUM ) )", "obj1": 0.7222222222222222, "obj2": 0.2448682258136885}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MRS ) ,( BR - Const ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7337164750957854, "obj2": 0.23033996625342193}, {"determining": "( Min( Min( ACS ,Const ) ,MRS ) - ( MDR * RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( Min( ( RMSe * RRSe ) ,Min( ( MUR * MLU ) ,CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ( ( FirstVNF_RAM_Server - Const ) - ( ( ARS * ACS ) - FirstVNF_RAM_Server ) ),Const ) ,CRS ) - Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( RCSe / RMSe ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),BR ) - ( Const - MRS ) )", "choosing": "Max( Max( ( RCSe * Min( Min( Min( RCSe ,MUM ) ,( ( MUR + MUR ) * ( MUM * Max( MUM,MUM ) ) ) ) ,Min( ( ( MUR / RCSe ) - ( RRSe + Max( RCSe,MLU ) ) ) ,MUC ) ) ),MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) / ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUM ) * ( ( MUM - Min( RRSe ,MUC ) ) / RRSe ) )", "obj1": 0.7701149425287356, "obj2": 0.19959713018475092}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( BR - ACS ) ) - Max( ( PN / RRS ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( CS * CS ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8295019157088123, "obj2": 0.1500414141990453}, {"determining": "( Min( ( ( ( BR + MRS ) - FirstVNF_Mem ) * FirstVNF_CPU ) ,Min( ( MRS * ( FirstVNF_Mem + FirstVNF_RAM ) ) ,MDR ) ) / Max( ( FirstVNF_RAM / RRS ),( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( Max( ( CS / MUM ),( ( CS * DS ) + MUC ) ) + ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / ACS ) ) - ( ( AMS + FirstVNF_RAM ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.24644539684258282}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_CPU + ( FirstVNF_Mem_Server / ACS ) ) ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / MRS ) + DDR ) / ( FirstVNF_CPU_Server / MDR ) )", "choosing": "( ( ( RCSe + RCSe ) - Max( RCSe,MUM ) ) * ( Min( RMSe ,MLU ) - ( RMSe * DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.27378960229480764}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( ARS - ARS ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "( ( ( ( DDR + ( ACS / ARS ) ) + ACS ) - FirstVNF_RAM_Server ) + Max( Max( FirstVNF_CPU,CRS ),PN ) )", "choosing": "Max( ( Min( ( CS + RMSe ) ,( MUR / MUC ) ) * ( ( MLU - Max( ( CS + MUR ),( Max( CS,MUR ) / MUR ) ) ) - Min( RMSe ,MUC ) ) ),( Min( ( MLU - DS ) ,Min( CS ,MUM ) ) + Max( ( RCSe + RCSe ),( RCSe * RRSe ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.2532745143539823}, {"determining": "Min( ( ( ( Const * MRS ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7471264367816092, "obj2": 0.2225425525066572}, {"determining": "Min( Min( Min( Min( BR ,FirstVNF_Mem_Server ) ,( CRS * BR ) ) ,( Max( CRS,MRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ),AMS ) ) ,Min( ( Const * RRS ) ,Min( Min( Const ,FirstVNF_Mem ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * ( RCSe * RMSe ) ) + ( ( RCSe / ( MUM * RMSe ) ) * Max( RMSe,RMSe ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,CRS ) + ( ( ( ( ( FirstVNF_Mem / MRS ) * BR ) - FirstVNF_CPU_Server ) - FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "Max( Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ),( ( ( RRSe - Min( DS ,RCSe ) ) + DS ) * MUR ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}], "2": [{"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,Const ) ,MRS ) - ( MDR * RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( Min( ( RMSe * RRSe ) ,Min( ( MUR * MLU ) ,CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ( ( FirstVNF_RAM_Server - Const ) - ( ( ARS * ACS ) - FirstVNF_RAM_Server ) ),Const ) ,CRS ) - Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( RCSe / RMSe ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),BR ) - ( Const - MRS ) )", "choosing": "Max( Max( ( RCSe * Min( Min( Min( RCSe ,MUM ) ,( ( MUR + MUR ) * ( MUM * Max( MUM,MUM ) ) ) ) ,Min( ( ( MUR / RCSe ) - ( RRSe + Max( RCSe,MLU ) ) ) ,MUC ) ) ),MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( BR - ACS ) ) - Max( ( PN / RRS ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( CS * CS ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( BR + MRS ) - FirstVNF_Mem ) * FirstVNF_CPU ) ,Min( ( MRS * ( FirstVNF_Mem + FirstVNF_RAM ) ) ,MDR ) ) / Max( ( FirstVNF_RAM / RRS ),( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( Max( ( CS / MUM ),( ( CS * DS ) + MUC ) ) + ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_CPU + ( FirstVNF_Mem_Server / ACS ) ) ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / MRS ) + DDR ) / ( FirstVNF_CPU_Server / MDR ) )", "choosing": "( ( ( RCSe + RCSe ) - Max( RCSe,MUM ) ) * ( Min( RMSe ,MLU ) - ( RMSe * DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.27378960229480764}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( ARS - ARS ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "Min( Min( Min( Min( BR ,FirstVNF_Mem_Server ) ,( CRS * BR ) ) ,( Max( CRS,MRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ),AMS ) ) ,Min( ( Const * RRS ) ,Min( Min( Const ,FirstVNF_Mem ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * ( RCSe * RMSe ) ) + ( ( RCSe / ( MUM * RMSe ) ) * Max( RMSe,RMSe ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( MDR - ( Const * ( ACS / MRS ) ) ) )", "choosing": "Max( ( ( DS - Min( ( MUC / ( DS + Min( RCSe ,MUC ) ) ) ,MUM ) ) * MLU ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - Min( DDR ,ARS ) )", "choosing": "Max( ( ( Min( Min( MUM ,MLU ) ,Min( MLU ,RRSe ) ) / CS ) / RCSe ),( ( DS - MUM ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - MRS ) ,( Max( ACS,DDR ) + PN ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * AMS )", "choosing": "( Min( MUM ,MUC ) - ( MLU * ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / ( ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,Max( Max( ( AMS - MRS ),( ACS - RRS ) ),Max( ( MDR - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( RMSe,CS ) * ( Min( MUM ,MUC ) - ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( RRS + ARS ) ) * ( BR - MDR ) )", "choosing": "( ( RCSe / Max( DS,( ( Min( ( MUM - ( MLU + MLU ) ) ,RCSe ) - ( CS / DS ) ) + RCSe ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / FirstVNF_Mem ) * ( DDR - AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( RRS / FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / Min( Const ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( Max( MLU,MUM ) / ( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( Max( ( RCSe / MLU ),( MUR / DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS - FirstVNF_Mem_Server ) / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server / BR ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,Min( ( ( MUR * DS ) - ( ( ( ( DS + RCSe ) / Max( ( MUC / RMSe ),Max( RRSe,MUM ) ) ) / Min( Max( ( RMSe / RMSe ),Min( RRSe ,CS ) ) ,( RMSe / MUR ) ) ) - DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( MUM ,MUC ) - Min( Min( MUM ,MLU ) ,( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - ( ARS * ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( DS * RCSe ) ,MUM ) - ( DS * DS ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( BR / Min( DDR ,Max( ( FirstVNF_Mem / DDR ),FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "Max( Max( Min( Max( MLU,CS ) ,( RCSe / ( ( Min( Min( RMSe ,MLU ) ,Min( MUC ,MUR ) ) / MUM ) / ( RCSe / DS ) ) ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( CS,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,AMS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / ACS ) ) - ( ( RRS + MRS ) - ( ( ACS - ( ARS / PN ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,MUR ) * ( CS * DS ) )", "obj1": 0.735632183908046, "obj2": 0.2187730676100754}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS * Min( Min( DDR ,AMS ) ,Min( CRS ,( BR + Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( Max( ( PN * CRS ),FirstVNF_Mem ),DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + DS ) ) ) ) ) - MLU ) + ( MUC * Min( ( CS - MUM ) ,( ( MUR / MUM ) - ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( Max( ( MRS * Min( Min( DDR ,AMS ) ,Min( CRS ,( BR + Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( Max( ( PN * CRS ),FirstVNF_Mem ),DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + DS ) ) ) ) ) - MLU ) + ( MUC * Min( ( CS - MUM ) ,( ( MUR / MUM ) - ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( Max( ( MRS * Min( Min( DDR ,AMS ) ,Min( CRS ,( BR + Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( Max( ( PN * CRS ),FirstVNF_Mem ),DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + DS ) ) ) ) ) - MLU ) + ( MUC * Min( ( CS - MUM ) ,( ( MUR / MUM ) - ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( MUC * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / ACS ) ) - BR )", "choosing": "( Max( Max( ( ( RRSe - MUC ) / RCSe ),( ( DS - MUM ) * MLU ) ),MUR ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 0.7490421455938697, "obj2": 0.2079539822318217}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * Max( ( ACS / Const ),Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * Const ) ) ) ) ) ,Max( ( ( BR / ACS ) + BR ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( MUC / RMSe ) / DS ) - ( ( MUC + CS ) + ( MUM * MLU ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + ( FirstVNF_CPU / Max( ACS,AMS ) ) ) )", "choosing": "( ( MUM / ( ( MUR - CS ) - Min( RRSe ,DS ) ) ) - ( MUM - Min( RMSe ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,Const ) + FirstVNF_Mem )", "choosing": "Min( ( MLU + ( RCSe * RMSe ) ) ,( ( MUR - RCSe ) / MUR ) )", "obj1": 0.6053639846743295, "obj2": 0.2756439391026087}, {"determining": "Min( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU_Server ,BR ) ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( Max( DS,( RMSe * MUR ) ) ,( ( MUR + RCSe ) / MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5862068965517241, "obj2": 0.2973742510944309}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / ACS ) ) - ( ( AMS + FirstVNF_RAM ) / ( ( FirstVNF_Mem - ACS ) + ( ACS / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,Max( MUR,( ( DS / MUM ) - ( MUR / MLU ) ) ) ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 0.8160919540229885, "obj2": 0.11845135793624549}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Min( Min( CS ,RRSe ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_Mem_Server * Max( DDR,MRS ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( DDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / Min( Max( MUM,( DS + RRSe ) ) ,Max( RRSe,Max( Max( RCSe,MUM ),Max( Min( DS ,RRSe ),CS ) ) ) ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) + CRS ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + Max( MUR,MUC ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN + FirstVNF_Mem ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) - ( ( ( FirstVNF_RAM_Server / MRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUC * ( ( MUR + ( CS - ( MUM + ( MUC + CS ) ) ) ) + ( DS / ( RMSe + MUM ) ) ) ) * ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) * ( CRS - AMS ) )", "choosing": "Min( ( RCSe + DS ) ,( Min( CS ,MUR ) - Min( DS ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( AMS / ( BR / RRS ) ) * ( ( MDR * MRS ) - MRS ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( RCSe + DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2997376585660186}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * Max( BR,AMS ) ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,Min( ( ( ( Min( MUM ,DS ) - ( MUR * ( MLU - RCSe ) ) ) * ( MUR / MUC ) ) - RCSe ) ,( MUM / ( MLU - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - Min( ( ( MUC + MUM ) + MUR ) ,RMSe ) ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( Max( ( RMSe * RMSe ),( MLU / MLU ) ) * ( ( MLU + MUM ) * ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) + Max( ( ( Const - DDR ) * ( Min( MRS ,FirstVNF_RAM_Server ) + MDR ) ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + MUR ) * ( MUM * MUC ) ) - ( ( Min( MUC ,MLU ) * DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( RRS * ( Max( PN,MRS ) / Min( MDR ,BR ) ) ) )", "choosing": "( ( MUM - MUR ) * ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MUC ,MUM ) + ( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( RCSe,MUM ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_Mem_Server * Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) ) ) ,( ( ARS - ARS ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "Min( Min( ( ( ( ( ( MUC * MUR ) / RRSe ) / RCSe ) + ( DS * MUR ) ) - MUR ) ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR + Min( Min( Const ,RRS ) ,FirstVNF_RAM ) ),( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUM,( CS - ( ( RRSe - RCSe ) * MUM ) ) ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( ( Min( RMSe ,Max( ( CS / MUC ),( ( MLU - ( DS - DS ) ) * MUR ) ) ) + ( ( RRSe + MLU ) - ( CS - MUM ) ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,( ( BR - Max( ( AMS + PN ),( Const + FirstVNF_Mem_Server ) ) ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( ( RMSe / RCSe ) / ( MUC - RCSe ) ) ,MUC ) * ( Max( MUM,( RMSe + MLU ) ) * MLU ) ) / MUR ) ) / ( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( Max( ARS,AMS ) * Max( BR,BR ) ) ) ,( ( ARS + FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUC,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,( RRSe - ( CS / RCSe ) ) ) * ( Max( MUM,RCSe ) * Max( ( MUR / RMSe ),DS ) ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( ACS - BR ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,( ( RRSe - MUC ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( ACS,BR ),( FirstVNF_CPU / AMS ) ) ,Max( ( ( ( Min( ( FirstVNF_CPU * ACS ) ,MRS ) / ACS ) + Const ) / ( FirstVNF_Mem + MRS ) ),( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( MUM * DS ),( RRSe / ( RRSe + RMSe ) ) ) / ( ( MUR - MUR ) * ( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + Max( FirstVNF_Mem_Server,ARS ) ) ,( CRS - ACS ) )", "choosing": "( ( ( ( DS + DS ) * MLU ) - RCSe ) / Min( Max( ( RMSe / RMSe ),Max( CS,MUM ) ) ,( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * FirstVNF_RAM ),( PN * Min( FirstVNF_CPU_Server ,MDR ) ) ) * Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) / Min( Max( Max( ACS,DDR ),( MDR / BR ) ) ,( ( FirstVNF_CPU_Server + ( ( AMS + FirstVNF_RAM ) / ( PN - FirstVNF_CPU ) ) ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MUR ) * ( ( ( ( MUC + CS ) / MLU ) + MUM ) / RRSe ) ) + Min( ( MUC * MUR ) ,Max( MUC,RMSe ) ) ) ,( Min( ( MUR * CS ) ,( CS / RRSe ) ) * ( Min( DS ,MUR ) * ( RMSe * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ACS )", "choosing": "Max( ( Min( MUC ,( MUC + MLU ) ) - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - ( ( ( FirstVNF_RAM_Server - PN ) - CRS ) - MRS ) )", "choosing": "Max( ( Max( ( ( MUM * MLU ) + RMSe ),MUC ) + ( MUM + CS ) ),Max( MLU,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - Max( BR,MRS ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( RCSe * CS ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( ( ( BR - CRS ) + FirstVNF_CPU ) * ( BR + BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( ( RMSe / RMSe ) - RMSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,( RRS + MRS ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * MRS ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( ( RCSe + RCSe ) - Max( RCSe,MUM ) ) * ( Min( RMSe ,MLU ) - ( RMSe * DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.22558347596100778}, {"determining": "( ( ( ( ( ACS + FirstVNF_Mem ) * ( CRS + DDR ) ) * ( ( RRS * DDR ) - ( RRS * CRS ) ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + ( ( Max( MUC,MUR ) + Min( RMSe ,RMSe ) ) / Max( ( RRSe - MUR ),Min( CS ,MUC ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + DDR ) * ( CRS + DDR ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( RRS * CRS ) ) )", "choosing": "( ( Max( MUC,MUC ) + Min( RMSe ,RMSe ) ) / ( Min( MUM ,RMSe ) - Max( ( RRSe + ( MUC / Max( ( MLU / DS ),( MUC + RCSe ) ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( ( ( FirstVNF_RAM + MRS ) / CRS ) - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MUM * RMSe ) - Max( Max( RCSe,( RMSe - RMSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( Min( CRS ,PN ) - Const ) ) - Min( ( MRS + ( BR - MRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( ( MUM + RMSe ),( ( DS * Min( MUM ,( RMSe - MUR ) ) ) + MUM ) ) - MUR ),( Min( ( RCSe - RRSe ) ,MUR ) * ( ( CS / MUM ) - ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) - Max( MDR,MRS ) )", "choosing": "Max( ( Max( RCSe,RMSe ) - CS ),( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / ACS ) ) - ( ( AMS + FirstVNF_RAM ) / Min( ( Max( PN,AMS ) + FirstVNF_Mem ) ,Min( Max( FirstVNF_Mem_Server,PN ) ,Const ) ) ) )", "choosing": "( Max( MLU,( ( MLU / RMSe ) - Min( RCSe ,RMSe ) ) ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( MDR + CRS ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / ( Min( Min( CS ,( MUR / MUC ) ) ,( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / ( ( DS / ( MLU - ( MUC - MUC ) ) ) / Max( MUC,( ( RRSe * MUC ) * RRSe ) ) ) ) )", "obj1": 0.5804597701149425, "obj2": 0.30187896855489027}, {"determining": "( ( PN * CRS ) - ( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) + MRS ) )", "choosing": "( ( MUM / RCSe ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( Max( DDR,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / MUR ) )", "obj1": 0.6915708812260536, "obj2": 0.230396788326424}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24593039937645644}, {"determining": "Max( ( ARS * ACS ),( PN / AMS ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( FirstVNF_RAM_Server - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( ( RRSe / MUM ) - ( ( RCSe - MUM ) + ( MUC + MUM ) ) ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.24465737261630677}, {"determining": "( Min( BR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * Min( MRS ,( ( FirstVNF_Mem / ( AMS * FirstVNF_Mem ) ) - AMS ) ) ) )", "choosing": "( MUR - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( ( ( BR / ( BR / ( Max( AMS,AMS ) / RRS ) ) ) * FirstVNF_RAM_Server ) - RRS ) ) - ( ARS * Max( ( RRS + DDR ),Min( BR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUM ) ,( MUR / RCSe ) ),RRSe )", "obj1": 0.8601532567049809, "obj2": 0.05939128228832517}], "3": [{"determining": "( ( ( Min( BR ,PN ) - DDR ) * ( ACS - BR ) ) - Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),( FirstVNF_Mem_Server + ( ACS * ( FirstVNF_CPU * ( RRS + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / CS ) ) * ( ( ( MUC / MUR ) + Min( ( MUR / RRSe ) ,RRSe ) ) / Min( MUM ,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,( CRS - ( Min( RRS ,MRS ) - ( Const * FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / MUM ) ) ) - ( DS / MUM ) )", "obj1": 0.5766283524904214, "obj2": 0.30302178113379025}, {"determining": "( Max( Const,( ( ( BR / ( BR / ( Max( AMS,AMS ) / RRS ) ) ) * FirstVNF_RAM_Server ) - RRS ) ) - ( ARS * Max( ( RRS + DDR ),Min( BR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUM ) ,( MUR / RCSe ) ),RRSe )", "obj1": 0.8601532567049809, "obj2": 0.05939128228832517}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.0846141542959262}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( ARS - ARS ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / ( ( ( BR - FirstVNF_CPU_Server ) * ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,Max( Max( ( AMS - MRS ),( ACS - RRS ) ),Max( ( MDR - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( RMSe,CS ) * Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1879542710098214}, {"determining": "( BR - ( ( BR / ( ACS / PN ) ) - ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,( ( DS + ( ( Min( Max( MUC,MUM ) ,Min( RMSe ,MUC ) ) - RRSe ) * RMSe ) ) + Min( RCSe ,RRSe ) ) ) * ( Min( CS ,MUM ) * RCSe ) )", "obj1": 0.7547892720306514, "obj2": 0.14792391368412153}, {"determining": "( Max( MDR,FirstVNF_CPU ) * Max( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( ( MUC * RCSe ) + MLU ) + MUC ) ) * Min( Max( CS,RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.6590038314176245, "obj2": 0.2426567874319667}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "( MUR - ( RCSe + RMSe ) )", "obj1": 0.7279693486590039, "obj2": 0.16789953468221314}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24593039937645644}, {"determining": "Min( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU_Server ,BR ) ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( Max( DS,( RMSe * MUR ) ) ,( ( MUR + RCSe ) / MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5862068965517241, "obj2": 0.2973742510944309}, {"determining": "Max( ( MDR - ( DDR + FirstVNF_Mem_Server ) ),( PN / AMS ) )", "choosing": "( ( Min( ( DS / RMSe ) ,( ( RRSe - MUC ) / RCSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.2646407042327669}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - Max( ( ( DDR + ( FirstVNF_CPU * DDR ) ) / BR ),( MDR + AMS ) ) )", "choosing": "Min( ( MUR * ( MUC - ( RCSe / ( ( ( DS * ( RCSe / MUM ) ) + ( Max( CS,MLU ) / ( DS - MUR ) ) ) - RRSe ) ) ) ) ,Max( ( MUC * ( ( MUM - MUR ) - ( CS - MUM ) ) ),( Min( DS ,( ( ( MLU / MUM ) / ( DS / ( MLU * RRSe ) ) ) * ( DS + ( ( DS - RMSe ) + Max( RCSe,RCSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( Max( ( MRS * Min( Min( DDR ,AMS ) ,Min( CRS ,( BR + Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( Max( ( PN * CRS ),FirstVNF_Mem ),DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + DS ) ) ) ) ) - MLU ) + ( MUC * Min( ( CS - MUM ) ,( ( MUR / MUM ) - ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_CPU + ( FirstVNF_Mem_Server / ACS ) ) ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5862068965517241, "obj2": 0.2973742510944309}, {"determining": "( Max( Const,Min( ACS ,( MDR - ( BR + ( FirstVNF_Mem * Min( FirstVNF_Mem ,DDR ) ) ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( MUR / RCSe ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( ( BR - ( ( AMS / ( BR / RRS ) ) * ( ( MDR * MRS ) - MRS ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( RCSe + DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2997376585660186}, {"determining": "Max( ( ACS * ARS ),( PN / ( Min( Const ,RRS ) * Max( ( BR / DDR ),FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( Max( MUR,MLU ) * CS ) ) + ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Max( ( DDR + Min( Min( Const ,RRS ) ,FirstVNF_RAM ) ),( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUM,( CS - ( ( RRSe - RCSe ) * MUM ) ) ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( MDR + CRS ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / ( Min( Min( CS ,( MUR / MUC ) ) ,( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / ( ( DS / ( MLU - ( MUC - MUC ) ) ) / Max( MUC,( ( RRSe * MUC ) * RRSe ) ) ) ) )", "obj1": 0.5804597701149425, "obj2": 0.30187896855489027}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Min( BR ,BR ) - ( ( DDR / ACS ) - BR ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,( ( RRSe - MUC ) / RRSe ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0008734721242326575}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_Mem - MRS ) )", "choosing": "( ( MUM / MLU ) - ( DS / MUM ) )", "obj1": 0.5804597701149425, "obj2": 0.30187896855489027}, {"determining": "( Min( Min( ACS ,Const ) ,MRS ) - ( MDR * RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( Min( ( RMSe * RRSe ) ,Min( ( MUR * MLU ) ,CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ( ( FirstVNF_RAM_Server - Const ) - ( ( ARS * ACS ) - FirstVNF_RAM_Server ) ),Const ) ,CRS ) - Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( RCSe / RMSe ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),BR ) - ( Const - MRS ) )", "choosing": "Max( Max( ( RCSe * Min( Min( Min( RCSe ,MUM ) ,( ( MUR + MUR ) * ( MUM * Max( MUM,MUM ) ) ) ) ,Min( ( ( MUR / RCSe ) - ( RRSe + Max( RCSe,MLU ) ) ) ,MUC ) ) ),MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( BR - ACS ) ) - Max( ( PN / RRS ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( CS * CS ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( BR + MRS ) - FirstVNF_Mem ) * FirstVNF_CPU ) ,Min( ( MRS * ( FirstVNF_Mem + FirstVNF_RAM ) ) ,MDR ) ) / Max( ( FirstVNF_RAM / RRS ),( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( Max( ( CS / MUM ),( ( CS * DS ) + MUC ) ) + ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( BR ,FirstVNF_Mem_Server ) ,( CRS * BR ) ) ,( Max( CRS,MRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ),AMS ) ) ,Min( ( Const * RRS ) ,Min( Min( Const ,FirstVNF_Mem ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * ( RCSe * RMSe ) ) + ( ( RCSe / ( MUM * RMSe ) ) * Max( RMSe,RMSe ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( MDR - ( Const * ( ACS / MRS ) ) ) )", "choosing": "Max( ( ( DS - Min( ( MUC / ( DS + Min( RCSe ,MUC ) ) ) ,MUM ) ) * MLU ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - Min( DDR ,ARS ) )", "choosing": "Max( ( ( Min( Min( MUM ,MLU ) ,Min( MLU ,RRSe ) ) / CS ) / RCSe ),( ( DS - MUM ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - MRS ) ,( Max( ACS,DDR ) + PN ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * AMS )", "choosing": "( Min( MUM ,MUC ) - ( MLU * ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / ( ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,Max( Max( ( AMS - MRS ),( ACS - RRS ) ),Max( ( MDR - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( RMSe,CS ) * ( Min( MUM ,MUC ) - ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( RRS + ARS ) ) * ( BR - MDR ) )", "choosing": "( ( RCSe / Max( DS,( ( Min( ( MUM - ( MLU + MLU ) ) ,RCSe ) - ( CS / DS ) ) + RCSe ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / FirstVNF_Mem ) * ( DDR - AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( RRS / FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / Min( Const ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( Max( MLU,MUM ) / ( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( Max( ( RCSe / MLU ),( MUR / DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS - FirstVNF_Mem_Server ) / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server / BR ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,Min( ( ( MUR * DS ) - ( ( ( ( DS + RCSe ) / Max( ( MUC / RMSe ),Max( RRSe,MUM ) ) ) / Min( Max( ( RMSe / RMSe ),Min( RRSe ,CS ) ) ,( RMSe / MUR ) ) ) - DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( MUM ,MUC ) - Min( Min( MUM ,MLU ) ,( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Min( DDR ,Max( ( FirstVNF_Mem / DDR ),FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "Max( Max( Min( Max( MLU,CS ) ,( RCSe / ( ( Min( Min( RMSe ,MLU ) ,Min( MUC ,MUR ) ) / MUM ) / ( RCSe / DS ) ) ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( CS,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,AMS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * Max( ( ACS / Const ),Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * Const ) ) ) ) ) ,Max( ( ( BR / ACS ) + BR ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( MUC / RMSe ) / DS ) - ( ( MUC + CS ) + ( MUM * MLU ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + ( FirstVNF_CPU / Max( ACS,AMS ) ) ) )", "choosing": "( ( MUM / ( ( MUR - CS ) - Min( RRSe ,DS ) ) ) - ( MUM - Min( RMSe ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Min( Min( CS ,RRSe ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) + CRS ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + Max( MUR,MUC ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN + FirstVNF_Mem ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) - ( ( ( FirstVNF_RAM_Server / MRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUC * ( ( MUR + ( CS - ( MUM + ( MUC + CS ) ) ) ) + ( DS / ( RMSe + MUM ) ) ) ) * ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) * ( CRS - AMS ) )", "choosing": "Min( ( RCSe + DS ) ,( Min( CS ,MUR ) - Min( DS ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * Max( BR,AMS ) ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,Min( ( ( ( Min( MUM ,DS ) - ( MUR * ( MLU - RCSe ) ) ) * ( MUR / MUC ) ) - RCSe ) ,( MUM / ( MLU - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - Min( ( ( MUC + MUM ) + MUR ) ,RMSe ) ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( Max( ( RMSe * RMSe ),( MLU / MLU ) ) * ( ( MLU + MUM ) * ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) + Max( ( ( Const - DDR ) * ( Min( MRS ,FirstVNF_RAM_Server ) + MDR ) ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + MUR ) * ( MUM * MUC ) ) - ( ( Min( MUC ,MLU ) * DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( RRS * ( Max( PN,MRS ) / Min( MDR ,BR ) ) ) )", "choosing": "( ( MUM - MUR ) * ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MUC ,MUM ) + ( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( RCSe,MUM ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_Mem_Server * Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) ) ) ,( ( ARS - ARS ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "Min( Min( ( ( ( ( ( MUC * MUR ) / RRSe ) / RCSe ) + ( DS * MUR ) ) - MUR ) ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( ( Min( RMSe ,Max( ( CS / MUC ),( ( MLU - ( DS - DS ) ) * MUR ) ) ) + ( ( RRSe + MLU ) - ( CS - MUM ) ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,( ( BR - Max( ( AMS + PN ),( Const + FirstVNF_Mem_Server ) ) ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( ( RMSe / RCSe ) / ( MUC - RCSe ) ) ,MUC ) * ( Max( MUM,( RMSe + MLU ) ) * MLU ) ) / MUR ) ) / ( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( Max( ARS,AMS ) * Max( BR,BR ) ) ) ,( ( ARS + FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUC,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,( RRSe - ( CS / RCSe ) ) ) * ( Max( MUM,RCSe ) * Max( ( MUR / RMSe ),DS ) ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( ACS - BR ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,( ( RRSe - MUC ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( ACS,BR ),( FirstVNF_CPU / AMS ) ) ,Max( ( ( ( Min( ( FirstVNF_CPU * ACS ) ,MRS ) / ACS ) + Const ) / ( FirstVNF_Mem + MRS ) ),( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( MUM * DS ),( RRSe / ( RRSe + RMSe ) ) ) / ( ( MUR - MUR ) * ( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + Max( FirstVNF_Mem_Server,ARS ) ) ,( CRS - ACS ) )", "choosing": "( ( ( ( DS + DS ) * MLU ) - RCSe ) / Min( Max( ( RMSe / RMSe ),Max( CS,MUM ) ) ,( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * FirstVNF_RAM ),( PN * Min( FirstVNF_CPU_Server ,MDR ) ) ) * Min( ( CRS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) / Min( Max( Max( ACS,DDR ),( MDR / BR ) ) ,( ( FirstVNF_CPU_Server + ( ( AMS + FirstVNF_RAM ) / ( PN - FirstVNF_CPU ) ) ) - Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MUR ) * ( ( ( ( MUC + CS ) / MLU ) + MUM ) / RRSe ) ) + Min( ( MUC * MUR ) ,Max( MUC,RMSe ) ) ) ,( Min( ( MUR * CS ) ,( CS / RRSe ) ) * ( Min( DS ,MUR ) * ( RMSe * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ACS )", "choosing": "Max( ( Min( MUC ,( MUC + MLU ) ) - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - ( ( ( FirstVNF_RAM_Server - PN ) - CRS ) - MRS ) )", "choosing": "Max( ( Max( ( ( MUM * MLU ) + RMSe ),MUC ) + ( MUM + CS ) ),Max( MLU,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - Max( BR,MRS ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( RCSe * CS ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( ( ( BR - CRS ) + FirstVNF_CPU ) * ( BR + BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( ( RMSe / RMSe ) - RMSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,( RRS + MRS ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS + FirstVNF_Mem ) * ( CRS + DDR ) ) * ( ( RRS * DDR ) - ( RRS * CRS ) ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe + ( ( Max( MUC,MUR ) + Min( RMSe ,RMSe ) ) / Max( ( RRSe - MUR ),Min( CS ,MUC ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + DDR ) * ( CRS + DDR ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( RRS * CRS ) ) )", "choosing": "( ( Max( MUC,MUC ) + Min( RMSe ,RMSe ) ) / ( Min( MUM ,RMSe ) - Max( ( RRSe + ( MUC / Max( ( MLU / DS ),( MUC + RCSe ) ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) * ( ( ( FirstVNF_RAM + MRS ) / CRS ) - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MUM * RMSe ) - Max( Max( RCSe,( RMSe - RMSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( Min( CRS ,PN ) - Const ) ) - Min( ( MRS + ( BR - MRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( ( MUM + RMSe ),( ( DS * Min( MUM ,( RMSe - MUR ) ) ) + MUM ) ) - MUR ),( Min( ( RCSe - RRSe ) ,MUR ) * ( ( CS / MUM ) - ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) - Max( MDR,MRS ) )", "choosing": "Max( ( Max( RCSe,RMSe ) - CS ),( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / ACS ) ) - ( ( AMS + FirstVNF_RAM ) / Min( ( Max( PN,AMS ) + FirstVNF_Mem ) ,Min( Max( FirstVNF_Mem_Server,PN ) ,Const ) ) ) )", "choosing": "( Max( MLU,( ( MLU / RMSe ) - Min( RCSe ,RMSe ) ) ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Min( Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) ,( Max( DDR,RRS ) + ( BR / MDR ) ) ) + MRS ) )", "choosing": "( ( MUM / RCSe ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * Min( MRS ,( ( FirstVNF_Mem / ( AMS * FirstVNF_Mem ) ) - AMS ) ) ) )", "choosing": "( MUR - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * BR ) ,( ( FirstVNF_CPU / BR ) * PN ) ) - ACS )", "choosing": "Max( ( Min( MUC ,( ( RCSe * ( ( MLU - MLU ) - ( DS - Max( CS,MLU ) ) ) ) + MLU ) ) - MUR ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ACS )", "choosing": "Max( ( Min( MUC ,( MUC + MLU ) ) - MUR ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * BR ) - ( FirstVNF_Mem / ACS ) )", "choosing": "( ( MUC - MUR ) * ( MUM / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * Max( ( ACS / ( BR - FirstVNF_CPU_Server ) ),Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( Max( RMSe,CS ) * ( RCSe / DS ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( FirstVNF_CPU + MRS ) - Max( Max( FirstVNF_RAM,FirstVNF_Mem ),( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe - CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( MUC - ( RMSe / Max( MUC,( ( MUC / RCSe ) - ( RRSe - DS ) ) ) ) ) ) - ( Min( MUR ,MUM ) + Max( MLU,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,PN ) - DDR ) * ( ACS - BR ) ) - Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),( FirstVNF_Mem_Server + ( ACS * ( FirstVNF_CPU * ( RRS + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / CS ) ) * ( ( ( MUC / MUR ) + Min( ( MUR / RRSe ) ,RRSe ) ) / Min( MUM ,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / MLU ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9233716475095786, "obj2": 0.03591574096566567}, {"determining": "( Max( Const,( ( ( BR / ( BR / ( Max( AMS,AMS ) / RRS ) ) ) * FirstVNF_RAM_Server ) - RRS ) ) - ( ARS * Max( ( RRS + DDR ),Min( BR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUM ) ,( MUR / RCSe ) ),RRSe )", "obj1": 0.8601532567049809, "obj2": 0.05939128228832517}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7739463601532567, "obj2": 0.1040929053484022}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.0846141542959262}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( ARS - ARS ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / ( ( ( BR - FirstVNF_CPU_Server ) * ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,Max( Max( ( AMS - MRS ),( ACS - RRS ) ),Max( ( MDR - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( RMSe,CS ) * Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1879542710098214}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_Mem - MRS ) )", "choosing": "Max( DS,( ( DS - MUM ) * MLU ) )", "obj1": 0.6877394636015326, "obj2": 0.22011294747561358}, {"determining": "( Max( Min( RRS ,DDR ),Min( ACS ,BR ) ) - ( MRS * ( Min( AMS ,FirstVNF_RAM_Server ) + ( Max( DDR,CRS ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) + RRSe ),Max( ( ( RCSe - RMSe ) / ( Max( Max( MUM,CS ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ),RMSe )", "obj1": 0.8045977011494253, "obj2": 0.08700019378205072}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - Max( ( ( DDR + ( FirstVNF_CPU * DDR ) ) / BR ),( MDR + AMS ) ) )", "choosing": "Min( ( MUR * ( MUC - ( RCSe / ( ( ( DS * ( RCSe / MUM ) ) + ( Max( CS,MLU ) / ( DS - MUR ) ) ) - RRSe ) ) ) ) ,Max( ( MUC * ( ( MUM - MUR ) - ( CS - MUM ) ) ),( Min( DS ,( ( ( MLU / MUM ) / ( DS / ( MLU * RRSe ) ) ) * ( DS + ( ( DS - RMSe ) + Max( RCSe,RCSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.764367816091954, "obj2": 0.13777790251733496}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( BR - CRS ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) / Min( MLU ,MUM ) )", "obj1": 0.6551724137931034, "obj2": 0.23642854006277905}, {"determining": "( ( ( Min( BR ,PN ) - DDR ) * ( ACS - BR ) ) - ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( CS,( RCSe - MUC ) ) )", "obj1": 0.7068965517241379, "obj2": 0.18488678816936327}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( ARS - ARS ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "Min( Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / ( ( Min( ( MUR / MUC ) ,CS ) + ( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.5977011494252874, "obj2": 0.28313923841723615}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( RRS * ( Max( PN,MRS ) / Min( MDR ,BR ) ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) )", "choosing": "Max( ( Min( MUC ,( ( RCSe * ( ( MLU - MLU ) - ( DS - Max( CS,MLU ) ) ) ) + MLU ) ) - MUR ),MUR )", "obj1": 0.6609195402298851, "obj2": 0.23307695556868932}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24593039937645644}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,( CRS - ( Min( RRS ,MRS ) - ( Const * FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / MUM ) ) ) - ( DS / MUM ) )", "obj1": 0.5766283524904214, "obj2": 0.30302178113379025}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.7183908045977011, "obj2": 0.1772019100791744}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "( MUR - ( RCSe + RMSe ) )", "obj1": 0.7279693486590039, "obj2": 0.16789953468221314}, {"determining": "( Max( ( MRS * Min( Min( DDR ,AMS ) ,Min( CRS ,( BR + Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( Max( ( PN * CRS ),FirstVNF_Mem ),DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + DS ) ) ) ) ) - MLU ) + ( MUC * Min( ( CS - MUM ) ,( ( MUR / MUM ) - ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "( MUR - ( RCSe + RMSe ) )", "obj1": 0.7279693486590039, "obj2": 0.16789953468221314}, {"determining": "( BR - ( ( BR / ( ACS / PN ) ) - ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,( ( DS + ( ( Min( Max( MUC,MUM ) ,Min( RMSe ,MUC ) ) - RRSe ) * RMSe ) ) + Min( RCSe ,RRSe ) ) ) * ( Min( CS ,MUM ) * RCSe ) )", "obj1": 0.7547892720306514, "obj2": 0.14792391368412153}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + ( ( MUR - RCSe ) / MUR ) ) + MUC ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.6685823754789272, "obj2": 0.2210776825872654}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / DS ) / RCSe ) - ( DS / MUM ) )", "obj1": 0.5900383141762452, "obj2": 0.2892358727605165}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - Max( ( ( DDR + ( FirstVNF_CPU * DDR ) ) / BR ),( MDR + AMS ) ) )", "choosing": "Min( ( MUR * ( MUC - ( RCSe / ( ( ( DS * ( RCSe / MUM ) ) + ( Max( CS,MLU ) / ( DS - MUR ) ) ) - RRSe ) ) ) ) ,Max( ( MUC * ( ( MUM - MUR ) - ( CS - MUM ) ) ),( Min( DS ,( ( ( MLU / MUM ) / ( DS / ( MLU * RRSe ) ) ) * ( DS + ( ( DS - RMSe ) + Max( RCSe,RCSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( ( MDR / AMS ),ARS ) )", "choosing": "Min( Max( ( MUC * ( ( CS - MUM ) - ( CS - MUR ) ) ),( Min( DS ,( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) ) - MLU ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.764367816091954, "obj2": 0.13777790251733496}, {"determining": "Max( ( MDR - ( DDR + FirstVNF_Mem_Server ) ),( PN / AMS ) )", "choosing": "( ( Min( ( DS / RMSe ) ,( ( RRSe - MUC ) / RCSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.2646407042327669}, {"determining": "Max( ( ( Min( RRS ,RRS ) - Min( Const ,MDR ) ) / AMS ),Max( ( ( PN + RRS ) - MRS ),( FirstVNF_RAM - ( FirstVNF_RAM / DDR ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( ( MUC + RRSe ) ,RCSe ) ) + ( Max( MUR,MLU ) * ( RCSe + CS ) ) ) * ( ( MUC / Min( ( MUM + Min( RMSe ,( RRSe / MUC ) ) ) ,RMSe ) ) - ( ( MUR + MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25308542051268174}, {"determining": "( Max( CRS,Min( ( ( ( FirstVNF_RAM + BR ) * ( PN - ( ( AMS * FirstVNF_CPU ) * DDR ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( Min( ( DS * CS ) ,Max( ( MLU / RRSe ),MUR ) ) + MUR ) * ( CS - MLU ) ) * Max( ( MUC * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.1743466083856538}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( ( ( ( RRSe * ( Min( MUM ,Min( MLU ,( MLU - MLU ) ) ) * RMSe ) ) / MLU ) + RMSe ) - ( DS / MUM ) )", "obj1": 0.5862068965517241, "obj2": 0.29342577028307687}, {"determining": "( AMS - ( MDR - MRS ) )", "choosing": "Max( ( MLU - CS ),( RCSe + MUM ) )", "obj1": 0.6704980842911877, "obj2": 0.22106554336365578}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24593039937645644}, {"determining": "Max( ( ACS * ( ( ARS + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * Const ) ) ),( ( CRS - ( CRS / MRS ) ) / AMS ) )", "choosing": "( Max( DS,RRSe ) / ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * Max( ( MUR + RMSe ),DS ) ) ) / MUR ) )", "obj1": 0.6187739463601533, "obj2": 0.2639774101949297}, {"determining": "( ( BR - ( ( AMS / ( BR / RRS ) ) * ( ( MDR * MRS ) - MRS ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( RCSe + DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2997376585660186}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( ( Min( ( MRS + MDR ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( Min( Min( ( CRS / BR ) ,Min( BR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem / Max( Min( FirstVNF_Mem_Server ,Min( AMS ,FirstVNF_Mem ) ),BR ) ) * ( ACS * MDR ) ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( RMSe ,MLU ) ) + Min( MLU ,( RMSe / ( ( DS * RRSe ) + Max( RMSe,MLU ) ) ) ) ) * ( ( ( CS * CS ) * Min( CS ,CS ) ) - ( ( MUR * MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_CPU + ( FirstVNF_Mem_Server / ACS ) ) ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( MDR + CRS ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / ( Min( Min( CS ,( MUR / MUC ) ) ,( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / ( ( DS / ( MLU - ( MUC - MUC ) ) ) / Max( MUC,( ( RRSe * MUC ) * RRSe ) ) ) ) )", "obj1": 0.5804597701149425, "obj2": 0.30187896855489027}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_Mem - MRS ) )", "choosing": "( ( MUM / MLU ) - ( DS / MUM ) )", "obj1": 0.5804597701149425, "obj2": 0.30187896855489027}, {"determining": "( ( BR - ( ( AMS / ( BR / RRS ) ) * ( ( MDR * MRS ) - MRS ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( RCSe + DS ) )", "obj1": 0.5842911877394636, "obj2": 0.2997376585660186}, {"determining": "( Max( Const,Min( ACS ,( MDR - ( BR + ( FirstVNF_Mem * Min( FirstVNF_Mem ,DDR ) ) ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( MUR / RCSe ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( Min( BR ,BR ) - ( ( DDR / ACS ) - BR ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,( ( RRSe - MUC ) / RRSe ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0008734721242326575}, {"determining": "( Max( CRS,( FirstVNF_CPU_Server - ( ACS / FirstVNF_Mem_Server ) ) ) - ( ( ACS / DDR ) - BR ) )", "choosing": "( MUR - ( MUR - DS ) )", "obj1": 0.9980842911877394, "obj2": 0.0008734721242326575}, {"determining": "Min( ( ( ( Min( ( PN + FirstVNF_Mem ) ,( Min( ( BR + MRS ) ,ACS ) * Min( ( BR * RRS ) ,( MDR / FirstVNF_Mem ) ) ) ) * ( Min( AMS ,PN ) - FirstVNF_RAM ) ) * RRS ) / ARS ) ,Min( ( MDR + ARS ) ,( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * Max( MUR,CS ) ) + ( RRSe + Max( MLU,( ( ( MUM * MUM ) / RRSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Max( ( ACS * ARS ),( PN / ( Min( Const ,RRS ) * Max( ( BR / DDR ),FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( Max( MUR,MLU ) * CS ) ) + ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,Const ) ,MRS ) - ( MDR * RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( Min( ( RMSe * RRSe ) ,Min( ( MUR * MLU ) ,CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ( ( FirstVNF_RAM_Server - Const ) - ( ( ARS * ACS ) - FirstVNF_RAM_Server ) ),Const ) ,CRS ) - Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( RCSe / RMSe ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),BR ) - ( Const - MRS ) )", "choosing": "Max( Max( ( RCSe * Min( Min( Min( RCSe ,MUM ) ,( ( MUR + MUR ) * ( MUM * Max( MUM,MUM ) ) ) ) ,Min( ( ( MUR / RCSe ) - ( RRSe + Max( RCSe,MLU ) ) ) ,MUC ) ) ),MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( BR - ACS ) ) - Max( ( PN / RRS ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( CS * CS ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( BR + MRS ) - FirstVNF_Mem ) * FirstVNF_CPU ) ,Min( ( MRS * ( FirstVNF_Mem + FirstVNF_RAM ) ) ,MDR ) ) / Max( ( FirstVNF_RAM / RRS ),( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( Max( ( CS / MUM ),( ( CS * DS ) + MUC ) ) + ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( BR ,FirstVNF_Mem_Server ) ,( CRS * BR ) ) ,( Max( CRS,MRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ),AMS ) ) ,Min( ( Const * RRS ) ,Min( Min( Const ,FirstVNF_Mem ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * ( RCSe * RMSe ) ) + ( ( RCSe / ( MUM * RMSe ) ) * Max( RMSe,RMSe ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( MDR - ( Const * ( ACS / MRS ) ) ) )", "choosing": "Max( ( ( DS - Min( ( MUC / ( DS + Min( RCSe ,MUC ) ) ) ,MUM ) ) * MLU ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - Min( DDR ,ARS ) )", "choosing": "Max( ( ( Min( Min( MUM ,MLU ) ,Min( MLU ,RRSe ) ) / CS ) / RCSe ),( ( DS - MUM ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - MRS ) ,( Max( ACS,DDR ) + PN ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * AMS )", "choosing": "( Min( MUM ,MUC ) - ( MLU * ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / ( ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,Max( Max( ( AMS - MRS ),( ACS - RRS ) ),Max( ( MDR - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( RMSe,CS ) * ( Min( MUM ,MUC ) - ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( RRS + ARS ) ) * ( BR - MDR ) )", "choosing": "( ( RCSe / Max( DS,( ( Min( ( MUM - ( MLU + MLU ) ) ,RCSe ) - ( CS / DS ) ) + RCSe ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / FirstVNF_Mem ) * ( DDR - AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( RRS / FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / Min( Const ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( Max( MLU,MUM ) / ( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( Max( ( RCSe / MLU ),( MUR / DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS - FirstVNF_Mem_Server ) / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server / BR ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,Min( ( ( MUR * DS ) - ( ( ( ( DS + RCSe ) / Max( ( MUC / RMSe ),Max( RRSe,MUM ) ) ) / Min( Max( ( RMSe / RMSe ),Min( RRSe ,CS ) ) ,( RMSe / MUR ) ) ) - DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( MUM ,MUC ) - Min( Min( MUM ,MLU ) ,( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Min( DDR ,Max( ( FirstVNF_Mem / DDR ),FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "Max( Max( Min( Max( MLU,CS ) ,( RCSe / ( ( Min( Min( RMSe ,MLU ) ,Min( MUC ,MUR ) ) / MUM ) / ( RCSe / DS ) ) ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( CS,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,AMS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * Max( ( ACS / Const ),Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * Const ) ) ) ) ) ,Max( ( ( BR / ACS ) + BR ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( MUC / RMSe ) / DS ) - ( ( MUC + CS ) + ( MUM * MLU ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + ( FirstVNF_CPU / Max( ACS,AMS ) ) ) )", "choosing": "( ( MUM / ( ( MUR - CS ) - Min( RRSe ,DS ) ) ) - ( MUM - Min( RMSe ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Min( Min( CS ,RRSe ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) + CRS ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + Max( MUR,MUC ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN + FirstVNF_Mem ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) - ( ( ( FirstVNF_RAM_Server / MRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUC * ( ( MUR + ( CS - ( MUM + ( MUC + CS ) ) ) ) + ( DS / ( RMSe + MUM ) ) ) ) * ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) * ( CRS - AMS ) )", "choosing": "Min( ( RCSe + DS ) ,( Min( CS ,MUR ) - Min( DS ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * Max( BR,AMS ) ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,Min( ( ( ( Min( MUM ,DS ) - ( MUR * ( MLU - RCSe ) ) ) * ( MUR / MUC ) ) - RCSe ) ,( MUM / ( MLU - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - Min( ( ( MUC + MUM ) + MUR ) ,RMSe ) ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( Max( ( RMSe * RMSe ),( MLU / MLU ) ) * ( ( MLU + MUM ) * ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) + Max( ( ( Const - DDR ) * ( Min( MRS ,FirstVNF_RAM_Server ) + MDR ) ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + MUR ) * ( MUM * MUC ) ) - ( ( Min( MUC ,MLU ) * DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( RRS * ( Max( PN,MRS ) / Min( MDR ,BR ) ) ) )", "choosing": "( ( MUM - MUR ) * ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "( Min( MUC ,MUM ) + ( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( RCSe,MUM ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_Mem_Server * Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) ) ) ,( ( ARS - ARS ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "Min( Min( ( ( ( ( ( MUC * MUR ) / RRSe ) / RCSe ) + ( DS * MUR ) ) - MUR ) ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( ( Min( RMSe ,Max( ( CS / MUC ),( ( MLU - ( DS - DS ) ) * MUR ) ) ) + ( ( RRSe + MLU ) - ( CS - MUM ) ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,( ( BR - Max( ( AMS + PN ),( Const + FirstVNF_Mem_Server ) ) ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( ( RMSe / RCSe ) / ( MUC - RCSe ) ) ,MUC ) * ( Max( MUM,( RMSe + MLU ) ) * MLU ) ) / MUR ) ) / ( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( Max( ARS,AMS ) * Max( BR,BR ) ) ) ,( ( ARS + FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUC,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,( RRSe - ( CS / RCSe ) ) ) * ( Max( MUM,RCSe ) * Max( ( MUR / RMSe ),DS ) ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( RRS - MRS ) ,Min( RRS ,RRS ) )", "choosing": "Max( ( ( MUR * RCSe ) + MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + MRS ) - Max( Max( FirstVNF_RAM,FirstVNF_Mem ),( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe - CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( MUC - ( RMSe / Max( MUC,( ( MUC / RCSe ) - ( RRSe - DS ) ) ) ) ) ) - ( Min( MUR ,MUM ) + Max( MLU,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,( ( ( BR / ( BR / ( Max( AMS,AMS ) / RRS ) ) ) * FirstVNF_RAM_Server ) - RRS ) ) - ( ARS * Max( ( RRS + DDR ),Min( BR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUM ) ,( MUR / RCSe ) ),RRSe )", "obj1": 0.8601532567049809, "obj2": 0.05939128228832517}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.034572922458197784}, {"determining": "( Max( Const,( Const + ACS ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ACS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "Max( Max( Max( ( RMSe + MUM ),( MUC / MLU ) ),Max( ( RMSe * ( ( ( DS * RMSe ) * MUC ) / Min( CS ,( RMSe / RCSe ) ) ) ),Min( ( MUC * MUC ) ,RCSe ) ) ),RCSe )", "obj1": 0.814176245210728, "obj2": 0.08351975757494862}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.01317908509388092}, {"determining": "( Max( BR,( ( ( Const * FirstVNF_CPU_Server ) / PN ) / AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / MLU ) ) ) - Min( Max( Max( CS,CS ),RCSe ) ,( ( RCSe / ( MUM + ( CS * RRSe ) ) ) - RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.03383142540022525}, {"determining": "( ( ( ( FirstVNF_RAM / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( ARS / Min( ( MDR - Max( ( PN + MRS ),RRS ) ) ,( ( ARS - ARS ) / MRS ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,( ( ( Min( DS ,MUR ) / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.22014351258572673}, {"determining": "( ( Max( BR,Const ) * FirstVNF_RAM_Server ) - Min( ( ARS + PN ) ,( MRS / Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUM / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( RMSe - ( ( DS * ( RCSe * DS ) ) / CS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - Max( ( ( DDR + ( FirstVNF_CPU * DDR ) ) / BR ),( MDR + AMS ) ) )", "choosing": "Min( ( MUR * ( MUC - ( RCSe / ( ( ( DS * ( RCSe / MUM ) ) + ( Max( CS,MLU ) / ( DS - MUR ) ) ) - RRSe ) ) ) ) ,Max( ( MUC * ( ( MUM - MUR ) - ( CS - MUM ) ) ),( Min( DS ,( ( ( MLU / MUM ) / ( DS / ( MLU * RRSe ) ) ) * ( DS + ( ( DS - RMSe ) + Max( RCSe,RCSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.764367816091954, "obj2": 0.13777790251733496}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( PN / FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) - Max( ( RCSe + RRSe ),RCSe ) )", "obj1": 0.7796934865900383, "obj2": 0.10079745501591249}, {"determining": "( ( Const * Min( RRS ,FirstVNF_CPU_Server ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( MUR + ( Min( Min( MUM ,MUC ) ,CS ) * Min( ( MUC * DS ) ,RMSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.1040929053484022}, {"determining": "( Max( CRS,Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * DS ),( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.16648973130187025}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),Min( MRS ,FirstVNF_RAM_Server ) ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.735632183908046, "obj2": 0.15180315038599557}, {"determining": "( Max( Min( RRS ,DDR ),Min( ACS ,BR ) ) - ( MRS * ( Min( AMS ,FirstVNF_RAM_Server ) + ( Max( DDR,CRS ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) + RRSe ),Max( ( ( RCSe - RMSe ) / ( Max( Max( MUM,CS ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ),RMSe )", "obj1": 0.8045977011494253, "obj2": 0.08700019378205072}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,( DDR + ( ( AMS / FirstVNF_RAM ) / FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / Min( MUC ,MUR ) ) ,( MUR - RRSe ) ) / ( ( MUC * RMSe ) - ( MLU * MUR ) ) ) ),( MUM * RRSe ) )", "obj1": 0.6896551724137931, "obj2": 0.18274762641736025}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( DDR / ACS ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.9808429118773946, "obj2": 0.011983131084263592}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.7183908045977011, "obj2": 0.1772019100791744}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( ( ( MUM / RCSe ) - ( DS / MUM ) ) * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.2626428180992305}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,( CRS - ( Min( RRS ,MRS ) - ( Const * FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / MUM ) ) ) - ( DS / MUM ) )", "obj1": 0.5766283524904214, "obj2": 0.30302178113379025}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_Mem - MRS ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2757738994270174}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( ARS - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MLU + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007728273196633852}, {"determining": "( BR - ( ( BR / ( ACS / PN ) ) - ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,( ( DS + ( ( Min( Max( MUC,MUM ) ,Min( RMSe ,MUC ) ) - RRSe ) * RMSe ) ) + Min( RCSe ,RRSe ) ) ) * ( Min( CS ,MUM ) * RCSe ) )", "obj1": 0.7547892720306514, "obj2": 0.14792391368412153}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,MRS ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6475095785440613, "obj2": 0.24291027755201855}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),AMS ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / Min( MUM ,MUC ) ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24593039937645644}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,Max( ( ARS * FirstVNF_RAM_Server ),( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( RRS / MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( RRSe * RCSe ),RCSe ) - ( DS / MUM ) )", "obj1": 0.5938697318007663, "obj2": 0.28595850187293087}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( ( MDR / AMS ),ARS ) )", "choosing": "Min( Max( ( MUC * ( ( CS - MUM ) - ( CS - MUR ) ) ),( Min( DS ,( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) ) - MLU ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.764367816091954, "obj2": 0.13777790251733496}, {"determining": "Max( ( ( Min( RRS ,RRS ) - Min( Const ,MDR ) ) / AMS ),Max( ( ( PN + RRS ) - MRS ),( FirstVNF_RAM - ( FirstVNF_RAM / DDR ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( ( MUC + RRSe ) ,RCSe ) ) + ( Max( MUR,MLU ) * ( RCSe + CS ) ) ) * ( ( MUC / Min( ( MUM + Min( RMSe ,( RRSe / MUC ) ) ) ,RMSe ) ) - ( ( MUR + MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25308542051268174}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) )", "choosing": "Max( ( Min( MUC ,( ( RCSe * ( ( MLU - MLU ) - ( DS - Max( CS,MLU ) ) ) ) + MLU ) ) - MUR ),MUR )", "obj1": 0.6609195402298851, "obj2": 0.23307695556868932}, {"determining": "( Max( ( FirstVNF_RAM + ARS ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),( MUR * ( RRSe - RMSe ) ) ),MUM )", "obj1": 0.7030651340996169, "obj2": 0.17928731677742935}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / DS ) / RCSe ) - ( DS / MUM ) )", "obj1": 0.5900383141762452, "obj2": 0.2892358727605165}, {"determining": "Min( Min( FirstVNF_RAM ,BR ) ,Max( MRS,PN ) )", "choosing": "( ( MUM * MUM ) - ( Max( DS,MUR ) / MUC ) )", "obj1": 0.5823754789272031, "obj2": 0.29452412372884507}, {"determining": "Min( Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / ( ( Min( ( MUR / MUC ) ,CS ) + ( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.6513409961685823, "obj2": 0.24103872838200008}, {"determining": "( Max( ( MRS * Min( Min( DDR ,AMS ) ,Min( CRS ,( BR + Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( Max( ( PN * CRS ),FirstVNF_Mem ),DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + DS ) ) ) ) ) - MLU ) + ( MUC * Min( ( CS - MUM ) ,( ( MUR / MUM ) - ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( Max( Min( RRS ,DDR ),Min( ACS ,BR ) ) - ( MRS * ( Min( AMS ,FirstVNF_RAM_Server ) + ( Max( DDR,CRS ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) + RRSe ),Max( ( ( RCSe - RMSe ) / ( Max( Max( MUM,CS ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ),RMSe )", "obj1": 0.7030651340996169, "obj2": 0.17928731677742935}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( ( ( ( RRSe * ( Min( MUM ,Min( MLU ,( MLU - MLU ) ) ) * RMSe ) ) / MLU ) + RMSe ) - ( DS / MUM ) )", "obj1": 0.5862068965517241, "obj2": 0.29342577028307687}, {"determining": "Min( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - ( MDR + CRS ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / ( Min( Min( CS ,( MUR / MUC ) ) ,( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / ( ( DS / ( MLU - ( MUC - MUC ) ) ) / Max( MUC,( ( RRSe * MUC ) * RRSe ) ) ) ) )", "obj1": 0.5804597701149425, "obj2": 0.30187896855489027}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7739463601532567, "obj2": 0.1040929053484022}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM + Min( ( RRSe - RCSe ) ,( Max( RCSe,DS ) + DS ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) ,( RRS * ( Max( PN,MRS ) / Min( MDR ,BR ) ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( BR - CRS ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) / Min( MLU ,MUM ) )", "obj1": 0.6551724137931034, "obj2": 0.23642854006277905}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24593039937645644}, {"determining": "Max( ( MRS * RRS ),( PN / AMS ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( RMSe ,MLU ) ) + ( ( RCSe + CS ) * Max( RCSe,CS ) ) ) * ( Max( MLU,CS ) - Max( MUM,MLU ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.0846141542959262}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - Max( ( ( DDR + ( FirstVNF_CPU * DDR ) ) / BR ),( MDR + AMS ) ) )", "choosing": "Min( ( MUR * ( MUC - ( RCSe / ( ( ( DS * ( RCSe / MUM ) ) + ( Max( CS,MLU ) / ( DS - MUR ) ) ) - RRSe ) ) ) ) ,Max( ( MUC * ( ( MUM - MUR ) - ( CS - MUM ) ) ),( Min( DS ,( ( ( MLU / MUM ) / ( DS / ( MLU * RRSe ) ) ) * ( DS + ( ( DS - RMSe ) + Max( RCSe,RCSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_CPU + ( FirstVNF_Mem_Server / ACS ) ) ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * ( PN / Max( Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS - FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,Min( ( MUM / ( MLU - MUR ) ) ,( ( ( Min( Max( RCSe,MLU ) ,MLU ) - ( MUR * ( MLU - RCSe ) ) ) * ( MUR / MUC ) ) - MUR ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.2348925871187364}, {"determining": "( ( BR - CRS ) * Max( ( BR / ( DDR / MDR ) ),Const ) )", "choosing": "Max( ( Min( MUC ,( ( RCSe * Max( ( MLU - MLU ),( DS - Max( CS,MLU ) ) ) ) + MLU ) ) - MUR ),( ( Max( MUR,Min( MUM ,RRSe ) ) + RMSe ) - MUM ) )", "obj1": 0.6609195402298851, "obj2": 0.23307695556868932}, {"determining": "( ( Min( ( MRS + MDR ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( Min( Min( ( CRS / BR ) ,Min( BR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem / Max( Min( FirstVNF_Mem_Server ,Min( AMS ,FirstVNF_Mem ) ),BR ) ) * ( ACS * MDR ) ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( RMSe ,MLU ) ) + Min( MLU ,( RMSe / ( ( DS * RRSe ) + Max( RMSe,MLU ) ) ) ) ) * ( ( ( CS * CS ) * Min( CS ,CS ) ) - ( ( MUR * MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( BR - CRS ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) / Min( MLU ,MUM ) )", "obj1": 0.6551724137931034, "obj2": 0.23642854006277905}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Const + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / Max( ( RCSe / DS ),Max( MUC,MUR ) ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0006685131555635059}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.0846141542959262}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * ( PN / Max( Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS - FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,Min( ( MUM / ( MLU - MUR ) ) ,( ( ( Min( Max( RCSe,MLU ) ,MLU ) - ( MUR * ( MLU - RCSe ) ) ) * ( MUR / MUC ) ) - MUR ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.2348925871187364}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_Mem - MRS ) )", "choosing": "( ( MUM / MLU ) - ( DS / MUM ) )", "obj1": 0.5804597701149425, "obj2": 0.30187896855489027}, {"determining": "Min( ( ( ( Min( ( PN + FirstVNF_Mem ) ,( Min( ( BR + MRS ) ,ACS ) * Min( ( BR * RRS ) ,( MDR / FirstVNF_Mem ) ) ) ) * ( Min( AMS ,PN ) - FirstVNF_RAM ) ) * RRS ) / ARS ) ,Min( ( MDR + ARS ) ,( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * Max( MUR,CS ) ) + ( RRSe + Max( MLU,( ( ( MUM * MUM ) / RRSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( ( Min( BR ,PN ) - DDR ) * ( ACS - BR ) ) - Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),( FirstVNF_Mem_Server + ( ACS * ( FirstVNF_CPU * ( RRS + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / CS ) ) * ( ( ( MUC / MUR ) + Min( ( MUR / RRSe ) ,RRSe ) ) / Min( MUM ,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,Const ) ,MRS ) - ( MDR * RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( Min( ( RMSe * RRSe ) ,Min( ( MUR * MLU ) ,CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ( ( FirstVNF_RAM_Server - Const ) - ( ( ARS * ACS ) - FirstVNF_RAM_Server ) ),Const ) ,CRS ) - Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( RCSe / RMSe ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),BR ) - ( Const - MRS ) )", "choosing": "Max( Max( ( RCSe * Min( Min( Min( RCSe ,MUM ) ,( ( MUR + MUR ) * ( MUM * Max( MUM,MUM ) ) ) ) ,Min( ( ( MUR / RCSe ) - ( RRSe + Max( RCSe,MLU ) ) ) ,MUC ) ) ),MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( BR - ACS ) ) - Max( ( PN / RRS ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( CS * CS ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( BR + MRS ) - FirstVNF_Mem ) * FirstVNF_CPU ) ,Min( ( MRS * ( FirstVNF_Mem + FirstVNF_RAM ) ) ,MDR ) ) / Max( ( FirstVNF_RAM / RRS ),( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( Max( ( CS / MUM ),( ( CS * DS ) + MUC ) ) + ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( BR ,FirstVNF_Mem_Server ) ,( CRS * BR ) ) ,( Max( CRS,MRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ),AMS ) ) ,Min( ( Const * RRS ) ,Min( Min( Const ,FirstVNF_Mem ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * ( RCSe * RMSe ) ) + ( ( RCSe / ( MUM * RMSe ) ) * Max( RMSe,RMSe ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( MDR - ( Const * ( ACS / MRS ) ) ) )", "choosing": "Max( ( ( DS - Min( ( MUC / ( DS + Min( RCSe ,MUC ) ) ) ,MUM ) ) * MLU ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - Min( DDR ,ARS ) )", "choosing": "Max( ( ( Min( Min( MUM ,MLU ) ,Min( MLU ,RRSe ) ) / CS ) / RCSe ),( ( DS - MUM ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - MRS ) ,( Max( ACS,DDR ) + PN ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * AMS )", "choosing": "( Min( MUM ,MUC ) - ( MLU * ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / ( ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,Max( Max( ( AMS - MRS ),( ACS - RRS ) ),Max( ( MDR - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( RMSe,CS ) * ( Min( MUM ,MUC ) - ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( RRS + ARS ) ) * ( BR - MDR ) )", "choosing": "( ( RCSe / Max( DS,( ( Min( ( MUM - ( MLU + MLU ) ) ,RCSe ) - ( CS / DS ) ) + RCSe ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / FirstVNF_Mem ) * ( DDR - AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( RRS / FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / Min( Const ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( Max( MLU,MUM ) / ( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( Max( ( RCSe / MLU ),( MUR / DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS - FirstVNF_Mem_Server ) / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server / BR ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,Min( ( ( MUR * DS ) - ( ( ( ( DS + RCSe ) / Max( ( MUC / RMSe ),Max( RRSe,MUM ) ) ) / Min( Max( ( RMSe / RMSe ),Min( RRSe ,CS ) ) ,( RMSe / MUR ) ) ) - DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( MUM ,MUC ) - Min( Min( MUM ,MLU ) ,( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Min( DDR ,Max( ( FirstVNF_Mem / DDR ),FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "Max( Max( Min( Max( MLU,CS ) ,( RCSe / ( ( Min( Min( RMSe ,MLU ) ,Min( MUC ,MUR ) ) / MUM ) / ( RCSe / DS ) ) ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( CS,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,AMS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RRSe ),( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * Max( ( ACS / Const ),Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * Const ) ) ) ) ) ,Max( ( ( BR / ACS ) + BR ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( MUC / RMSe ) / DS ) - ( ( MUC + CS ) + ( MUM * MLU ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( MUC * DS ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + ( FirstVNF_CPU / Max( ACS,AMS ) ) ) )", "choosing": "( ( MUM / ( ( MUR - CS ) - Min( RRSe ,DS ) ) ) - ( MUM - Min( RMSe ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) )", "choosing": "Min( Min( CS ,RRSe ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) + CRS ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + Max( MUR,MUC ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( PN + FirstVNF_Mem ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) - ( ( ( FirstVNF_RAM_Server / MRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) * MLU ),( ( MUC * ( ( MUR + ( CS - ( MUM + ( MUC + CS ) ) ) ) + ( DS / ( RMSe + MUM ) ) ) ) * ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) * ( CRS - AMS ) )", "choosing": "Min( ( RCSe + DS ) ,( Min( CS ,MUR ) - Min( DS ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * Max( BR,AMS ) ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,Min( ( ( ( Min( MUM ,DS ) - ( MUR * ( MLU - RCSe ) ) ) * ( MUR / MUC ) ) - RCSe ) ,( MUM / ( MLU - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - Min( ( ( MUC + MUM ) + MUR ) ,RMSe ) ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( Max( ( RMSe * RMSe ),( MLU / MLU ) ) * ( ( MLU + MUM ) * ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) + CRS ) ) ) )", "choosing": "( ( MUM * MUM ) - ( Max( DS,MUR ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - MRS ) ,Min( RRS ,RRS ) )", "choosing": "Max( ( ( MUR * RCSe ) + MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,Const ) ,( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "( ( RCSe * Min( ( RMSe + MUR ) ,( ( MUR - RCSe ) / ( ( Max( RCSe,RMSe ) + ( ( MUM / MUC ) / Max( MUR,RRSe ) ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,( ( ( BR / ( BR / ( Max( AMS,AMS ) / RRS ) ) ) * FirstVNF_RAM_Server ) - RRS ) ) - ( ARS * Max( ( RRS + DDR ),Min( BR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( Min( RMSe ,MUM ) ,( MUR / RCSe ) ),RRSe )", "obj1": 0.8601532567049809, "obj2": 0.05939128228832517}, {"determining": "( ( ( ( FirstVNF_RAM / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( ARS / Min( ( MDR - Max( ( PN + MRS ),RRS ) ) ,( ( ARS - ARS ) / MRS ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,( ( ( Min( DS ,MUR ) / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.22014351258572673}, {"determining": "( Max( ( PN + ARS ),( MRS / Min( Min( AMS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) - ( Const * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + MLU ) * RRSe ),Max( ( Max( MUC,DS ) * ( RMSe + RCSe ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / Min( MLU ,MUM ) ) ) ) ),RCSe )", "obj1": 0.8869731800766284, "obj2": 0.04848744842557046}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - Max( ( ( DDR + ( FirstVNF_CPU * DDR ) ) / BR ),( MDR + AMS ) ) )", "choosing": "Min( ( MUR * ( MUC - ( RCSe / ( ( ( DS * ( RCSe / MUM ) ) + ( Max( CS,MLU ) / ( DS - MUR ) ) ) - RRSe ) ) ) ) ,Max( ( MUC * ( ( MUM - MUR ) - ( CS - MUM ) ) ),( Min( DS ,( ( ( MLU / MUM ) / ( DS / ( MLU * RRSe ) ) ) * ( DS + ( ( DS - RMSe ) + Max( RCSe,RCSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.764367816091954, "obj2": 0.13777790251733496}, {"determining": "Min( ( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( RCSe / MUC ) )", "obj1": 0.8371647509578544, "obj2": 0.06825601096495137}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7739463601532567, "obj2": 0.1040929053484022}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,FirstVNF_Mem )", "choosing": "( ( RCSe * Min( ( MLU + ( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ) ,( ( MUR - RCSe ) / MUM ) ) ) - ( DS / MUM ) )", "obj1": 0.5766283524904214, "obj2": 0.3029695756835035}, {"determining": "( ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Const ) ) ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( ( DDR + FirstVNF_RAM ) / ARS ) ) / FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( Max( MLU,MUM ) - RRSe ) - Max( Max( DS,DS ),RCSe ) )", "obj1": 0.9386973180076629, "obj2": 0.024290713225961283}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,CRS ) + ( Max( BR,FirstVNF_Mem_Server ) - ( RRS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( CS ,MUM ) * ( MUC * Min( CS ,RCSe ) ) ),RCSe ) - Min( MUM ,DS ) )", "obj1": 0.8275862068965517, "obj2": 0.07670059825096041}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * Max( RMSe,CS ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.013039664290013565}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MUM / ( Min( Min( CS ,( MUR / MUC ) ) ,( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / ( ( DS / ( MLU - ( MUC - MUC ) ) ) / Max( MUC,( ( RRSe * MUC ) * RRSe ) ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09661908398829586}, {"determining": "( Max( Min( RRS ,DDR ),Min( ACS ,BR ) ) - ( MRS * ( Min( AMS ,FirstVNF_RAM_Server ) + ( Max( DDR,CRS ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) + RRSe ),Max( ( ( RCSe - RMSe ) / ( Max( Max( MUM,CS ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ),RMSe )", "obj1": 0.8045977011494253, "obj2": 0.08700019378205072}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( ( RRSe - MUC ) / MUM ) )", "obj1": 0.5900383141762452, "obj2": 0.2785827282928929}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * Min( MUM ,MUR ) ) ) ),RCSe )", "obj1": 0.7298850574712644, "obj2": 0.15295464240346643}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8103448275862069, "obj2": 0.08329368285349578}, {"determining": "( BR - ( ( BR / ( ACS / PN ) ) - ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUC,( ( DS + ( ( Min( Max( MUC,MUM ) ,Min( RMSe ,MUC ) ) - RRSe ) * RMSe ) ) + Min( RCSe ,RRSe ) ) ) * ( Min( CS ,MUM ) * RCSe ) )", "obj1": 0.7547892720306514, "obj2": 0.14792391368412153}, {"determining": "( Max( CRS,Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * DS ),( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.16648973130187025}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,( DDR + ( ( AMS / FirstVNF_RAM ) / FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / Min( MUC ,MUR ) ) ,( MUR - RRSe ) ) / ( ( MUC * RMSe ) - ( MLU * MUR ) ) ) ),( MUM * RRSe ) )", "obj1": 0.6896551724137931, "obj2": 0.18274762641736025}, {"determining": "( Max( Min( DDR ,DDR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) * Max( ( FirstVNF_CPU + ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( ( ( ( ( MUC / RCSe ) * ( CS / MUC ) ) / ( Max( RMSe,MUR ) + CS ) ) * MUC ) ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.9693486590038314, "obj2": 0.01223003306519666}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),Min( MRS ,FirstVNF_RAM_Server ) ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.735632183908046, "obj2": 0.15180315038599557}, {"determining": "( Max( ( FirstVNF_RAM + ARS ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),( MUR * ( RRSe - RMSe ) ) ),MUM )", "obj1": 0.7030651340996169, "obj2": 0.17928731677742935}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24593039937645644}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_Mem - MRS ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2757738994270174}, {"determining": "( Max( CRS,Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * DS ),( ( RRSe * ( DS + ( CS / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.17038951959227006}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( ( AMS / ( FirstVNF_CPU_Server * Max( Const,( Max( FirstVNF_RAM,PN ) * FirstVNF_RAM ) ) ) ),ARS ) )", "choosing": "Min( Max( ( MUC * ( ( CS - MUM ) - ( CS - MUR ) ) ),( Min( DS ,( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) ) - MLU ) ) ,( ( CS / ( CS - MUR ) ) / Max( CS,( Min( ( MLU - RRSe ) ,( ( DS + DS ) / DS ) ) + ( MLU - MLU ) ) ) ) )", "obj1": 0.764367816091954, "obj2": 0.13777790251733496}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( Min( ( CS - MUM ) ,( CS - MUR ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7145593869731801, "obj2": 0.17035140448593208}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( ( ( MUM / RCSe ) - ( DS / MUM ) ) * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.2626428180992305}, {"determining": "( Max( BR,( ( ( Const * FirstVNF_CPU_Server ) / PN ) / AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / MLU ) ) ) - Min( Max( Max( CS,CS ),RCSe ) ,( ( RCSe / ( MUM + ( CS * RRSe ) ) ) - RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.03383142540022525}, {"determining": "( Max( ( Const + Max( FirstVNF_CPU,( Const / FirstVNF_RAM ) ) ),( Max( FirstVNF_RAM_Server,RRS ) / FirstVNF_RAM ) ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "( Min( MLU ,( ( MUC / Min( CS ,CS ) ) * MUC ) ) - ( MUM + MUC ) )", "obj1": 0.9137931034482759, "obj2": 0.034572922458197784}, {"determining": "( ( ACS - BR ) / ( MDR - ( DDR + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "Max( DS,( ( ( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) ) - MUM ) * MLU ) )", "obj1": 0.9808429118773946, "obj2": 0.008557302887519068}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) )", "choosing": "Max( ( Min( MUC ,( ( RCSe * ( ( MLU - MLU ) - ( DS - Max( CS,MLU ) ) ) ) + MLU ) ) - MUR ),MUR )", "obj1": 0.6609195402298851, "obj2": 0.23307695556868932}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,MRS ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6475095785440613, "obj2": 0.24291027755201855}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( MUM * RRSe ) )", "obj1": 0.6896551724137931, "obj2": 0.18274762641736025}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( PN / FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) - Max( ( RCSe + RRSe ),RCSe ) )", "obj1": 0.7796934865900383, "obj2": 0.10079745501591249}, {"determining": "Min( Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / ( ( Min( ( MUR / MUC ) ,CS ) + ( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.6513409961685823, "obj2": 0.24103872838200008}, {"determining": "( ( FirstVNF_RAM - MRS ) - ( ( ( FirstVNF_Mem + ( ( ARS * FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) + FirstVNF_Mem ) / Min( ARS ,PN ) ) )", "choosing": "( ( MLU + ( RMSe * ( MUC / ( Min( MUM ,RMSe ) - Max( ( ( CS * MUC ) * RCSe ),RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9348659003831418, "obj2": 0.030313319223337652}, {"determining": "( Max( ( MRS * Min( Min( DDR ,AMS ) ,Min( CRS ,( BR + Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( Max( ( PN * CRS ),FirstVNF_Mem ),DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + DS ) ) ) ) ) - MLU ) + ( MUC * Min( ( CS - MUM ) ,( ( MUR / MUM ) - ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.034572922458197784}, {"determining": "Max( ( ( BR - CRS ) * Min( ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ),( PN / AMS ) )", "choosing": "( ( Min( Min( RRSe ,RRSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6264367816091954, "obj2": 0.2519461624105317}, {"determining": "Min( Min( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( MUM / MUM ),( MLU / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006932388125235811}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( DDR / ACS ) ) * ( BR - Min( DDR ,Max( ( FirstVNF_Mem / DDR ),FirstVNF_RAM_Server ) ) ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,( RCSe + CS ) ) * RCSe ),RCSe ) )", "obj1": 0.9904214559386973, "obj2": 0.004776439142597417}, {"determining": "( ( Const * Min( RRS ,FirstVNF_CPU_Server ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( MUR + ( Min( Min( MUM ,MUC ) ,CS ) * Min( ( MUC * DS ) ,RMSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.1040929053484022}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( RRS / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( ( ( MUM / RCSe ) - ( DS / MUM ) ) * CS ) ) - ( Min( RRSe ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.2626428180992305}, {"determining": "( Max( CRS,Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * DS ),( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.16648973130187025}, {"determining": "Max( ( ( Min( RRS ,RRS ) - Min( Const ,MDR ) ) / AMS ),Max( ( ( PN + RRS ) - MRS ),( FirstVNF_RAM - ( FirstVNF_RAM / DDR ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( ( MUC + RRSe ) ,RCSe ) ) + ( Max( MUR,MLU ) * ( RCSe + CS ) ) ) * ( ( MUC / Min( ( MUM + Min( RMSe ,( RRSe / MUC ) ) ) ,RMSe ) ) - ( ( MUR + MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25308542051268174}, {"determining": "Min( Min( ( ( ( ( ( FirstVNF_Mem + PN ) * FirstVNF_Mem_Server ) - DDR ) - DDR ) * ( FirstVNF_CPU_Server - MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC * Min( Min( MUC ,MLU ) ,( MUM / MLU ) ) ),RRSe ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.9310344827586207, "obj2": 0.030761750911688285}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( Min( Min( MUM ,MLU ) ,Min( MLU ,RRSe ) ) / CS ) / RCSe ),( ( RRSe - MUM ) * MLU ) )", "obj1": 0.9942528735632183, "obj2": 0.004738703899797492}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( BR - CRS ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) / Min( MLU ,MUM ) )", "obj1": 0.6551724137931034, "obj2": 0.23642854006277905}, {"determining": "Max( ( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ),( PN / AMS ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Max( Min( RRS ,DDR ),Min( ACS ,BR ) ) - ( MRS * ( Min( AMS ,FirstVNF_RAM_Server ) + ( Max( DDR,CRS ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) + RRSe ),Max( ( ( RCSe - RMSe ) / ( Max( Max( MUM,CS ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ),RMSe )", "obj1": 0.7030651340996169, "obj2": 0.17928731677742935}, {"determining": "( ( Max( BR,Const ) * FirstVNF_RAM_Server ) - Min( ( ARS + PN ) ,( MRS / Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUM / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( RMSe - ( ( DS * ( RCSe * DS ) ) / CS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( ( Min( ( MDR + MRS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),AMS ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + Min( ( CS / Min( MUM ,MUC ) ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24593039937645644}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,MRS ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6475095785440613, "obj2": 0.24291027755201855}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - Max( ( ( DDR + ( FirstVNF_CPU * DDR ) ) / BR ),( MDR + AMS ) ) )", "choosing": "Min( ( MUR * ( MUC - ( RCSe / ( ( ( DS * ( RCSe / MUM ) ) + ( Max( CS,MLU ) / ( DS - MUR ) ) ) - RRSe ) ) ) ) ,Max( ( MUC * ( ( MUM - MUR ) - ( CS - MUM ) ) ),( Min( DS ,( ( ( MLU / MUM ) / ( DS / ( MLU * RRSe ) ) ) * ( DS + ( ( DS - RMSe ) + Max( RCSe,RCSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.7509578544061303, "obj2": 0.14884515057807288}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_CPU + ( FirstVNF_Mem_Server / ACS ) ) ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * ( PN / Max( Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS - FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,Min( ( MUM / ( MLU - MUR ) ) ,( ( ( Min( Max( RCSe,MLU ) ,MLU ) - ( MUR * ( MLU - RCSe ) ) ) * ( MUR / MUC ) ) - MUR ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.2348925871187364}, {"determining": "( ( BR - CRS ) * Min( ( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) )", "choosing": "Max( ( Min( MUC ,( ( RCSe * ( ( MLU - MLU ) - ( DS - Max( CS,MLU ) ) ) ) + ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) ) ) - MUR ),MUR )", "obj1": 0.6609195402298851, "obj2": 0.23307695556868932}, {"determining": "Max( ( MRS * RRS ),( PN / AMS ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( RMSe ,MLU ) ) + ( ( RCSe + CS ) * Max( RCSe,CS ) ) ) * ( Max( MLU,CS ) - Max( MUM,MLU ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,( BR - CRS ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) / Min( MLU ,MUM ) )", "obj1": 0.6551724137931034, "obj2": 0.23642854006277905}, {"determining": "( Max( ( Const / FirstVNF_CPU ),( CRS + DDR ) ) - ( ( ( BR / Min( ARS ,PN ) ) - Min( Max( Const,( BR * MDR ) ) ,ACS ) ) * ( BR - ACS ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / Max( MUC,MLU ) ) + DS ) + MLU ) ) )", "obj1": 0.9980842911877394, "obj2": 0.000595403290655088}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.0846141542959262}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.0846141542959262}, {"determining": "( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * ( PN / Max( Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS - FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) ) ,Const ) )", "choosing": "( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,Min( ( MUM / ( MLU - MUR ) ) ,( ( ( Min( Max( RCSe,MLU ) ,MLU ) - ( MUR * ( MLU - RCSe ) ) ) * ( MUR / MUC ) ) - MUR ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.2348925871187364}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM + Min( ( RRSe - RCSe ) ,( Max( RCSe,DS ) + DS ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "Min( ( ( ( Min( ( PN + FirstVNF_Mem ) ,( Min( ( BR + MRS ) ,ACS ) * Min( ( BR * RRS ) ,( MDR / FirstVNF_Mem ) ) ) ) * ( Min( AMS ,PN ) - FirstVNF_RAM ) ) * RRS ) / ARS ) ,Min( ( MDR + ARS ) ,( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * Max( MUR,CS ) ) + ( RRSe + Max( MLU,( ( ( MUM * MUM ) / RRSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( FirstVNF_CPU + MRS ) - Max( Max( FirstVNF_RAM,FirstVNF_Mem ),( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe - CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( MUC - ( RMSe / Max( MUC,( ( MUC / RCSe ) - ( RRSe - DS ) ) ) ) ) ) - ( Min( MUR ,MUM ) + Max( MLU,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,PN ) - DDR ) * ( ACS - BR ) ) - Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),( FirstVNF_Mem_Server + ( ACS * ( FirstVNF_CPU * ( RRS + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / CS ) ) * ( ( ( MUC / MUR ) + Min( ( MUR / RRSe ) ,RRSe ) ) / Min( MUM ,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,Const ) ,MRS ) - ( MDR * RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( Min( ( RMSe * RRSe ) ,Min( ( MUR * MLU ) ,CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ( ( FirstVNF_RAM_Server - Const ) - ( ( ARS * ACS ) - FirstVNF_RAM_Server ) ),Const ) ,CRS ) - Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( RCSe / RMSe ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),BR ) - ( Const - MRS ) )", "choosing": "Max( Max( ( RCSe * Min( Min( Min( RCSe ,MUM ) ,( ( MUR + MUR ) * ( MUM * Max( MUM,MUM ) ) ) ) ,Min( ( ( MUR / RCSe ) - ( RRSe + Max( RCSe,MLU ) ) ) ,MUC ) ) ),MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( BR - ACS ) ) - Max( ( PN / RRS ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( CS * CS ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( BR + MRS ) - FirstVNF_Mem ) * FirstVNF_CPU ) ,Min( ( MRS * ( FirstVNF_Mem + FirstVNF_RAM ) ) ,MDR ) ) / Max( ( FirstVNF_RAM / RRS ),( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( Max( ( CS / MUM ),( ( CS * DS ) + MUC ) ) + ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( BR ,FirstVNF_Mem_Server ) ,( CRS * BR ) ) ,( Max( CRS,MRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ),AMS ) ) ,Min( ( Const * RRS ) ,Min( Min( Const ,FirstVNF_Mem ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * ( RCSe * RMSe ) ) + ( ( RCSe / ( MUM * RMSe ) ) * Max( RMSe,RMSe ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( MDR - ( Const * ( ACS / MRS ) ) ) )", "choosing": "Max( ( ( DS - Min( ( MUC / ( DS + Min( RCSe ,MUC ) ) ) ,MUM ) ) * MLU ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - Min( DDR ,ARS ) )", "choosing": "Max( ( ( Min( Min( MUM ,MLU ) ,Min( MLU ,RRSe ) ) / CS ) / RCSe ),( ( DS - MUM ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - MRS ) ,( Max( ACS,DDR ) + PN ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * AMS )", "choosing": "( Min( MUM ,MUC ) - ( MLU * ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / ( ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,Max( Max( ( AMS - MRS ),( ACS - RRS ) ),Max( ( MDR - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( RMSe,CS ) * ( Min( MUM ,MUC ) - ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( RRS + ARS ) ) * ( BR - MDR ) )", "choosing": "( ( RCSe / Max( DS,( ( Min( ( MUM - ( MLU + MLU ) ) ,RCSe ) - ( CS / DS ) ) + RCSe ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / FirstVNF_Mem ) * ( DDR - AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( RRS / FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / Min( Const ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( Max( MLU,MUM ) / ( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( Max( ( RCSe / MLU ),( MUR / DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS - FirstVNF_Mem_Server ) / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server / BR ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,Min( ( ( MUR * DS ) - ( ( ( ( DS + RCSe ) / Max( ( MUC / RMSe ),Max( RRSe,MUM ) ) ) / Min( Max( ( RMSe / RMSe ),Min( RRSe ,CS ) ) ,( RMSe / MUR ) ) ) - DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( MUM ,MUC ) - Min( Min( MUM ,MLU ) ,( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( RMSe + ( RRSe * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( ( ( CS - MUM ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) + CRS ) ) ) )", "choosing": "( ( MUM * MUM ) - ( Max( DS,MUR ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / ( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Min( ( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) - MUM ) ,( CS - MUR ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.6475095785440613, "obj2": 0.22279458187333406}, {"determining": "( ( ( ( FirstVNF_RAM / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( ARS / Min( ( MDR - Max( ( PN + MRS ),RRS ) ) ,( ( ARS - ARS ) / MRS ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,( ( ( Min( DS ,MUR ) / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.22014351258572673}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( Max( FirstVNF_Mem_Server,BR ) / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / Min( ( MUM * RMSe ) ,MUM ) ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.12526334310670006}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / Min( MLU ,MUM ) ) ) ) ),RCSe )", "obj1": 0.8869731800766284, "obj2": 0.048464048507290275}, {"determining": "( ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + Max( ( RRS / ARS ),Min( ACS ,ARS ) ) ) * ( ( ( FirstVNF_RAM_Server / BR ) - ( FirstVNF_Mem_Server * DDR ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC / CS ) + ( ( RCSe + Min( ( CS / CS ) ,RCSe ) ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( ( ( MUM / RCSe ) - ( DS / MUM ) ) * CS ) ) - ( Min( RRSe ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6264367816091954, "obj2": 0.24568269403677942}, {"determining": "( Max( ( BR - FirstVNF_CPU ),AMS ) - Min( ( PN + ARS ) ,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( Max( MUM,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( MLU - DS ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,( ( MUC + RRSe ) / RCSe ) ) + ( Max( MUR,MLU ) * ( RCSe + CS ) ) ) * ( ( Min( Min( MUC ,Min( ( MLU + ( CS - MLU ) ) ,Min( ( DS * MUC ) ,MUC ) ) ) ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7681992337164751, "obj2": 0.12233415740274108}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.6954022988505747, "obj2": 0.1698732048480361}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * Max( RMSe,CS ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.685823754789272, "obj2": 0.18001409511616076}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( Max( CRS,Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * DS ),( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.16648973130187025}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8601532567049809, "obj2": 0.058448524953942475}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( MUC * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7375478927203065, "obj2": 0.14928409714676183}, {"determining": "( Max( Const,( ACS * Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * CRS ) ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( PN - ( ACS - CRS ) ) ) * MDR ) )", "choosing": "( ( ( Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) * ( RMSe * RMSe ) ) / DS ) - ( MLU + ( MLU * ( MUC / CS ) ) ) )", "obj1": 0.8563218390804598, "obj2": 0.060336069082915986}, {"determining": "Min( ( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( RCSe / MUC ) )", "obj1": 0.8371647509578544, "obj2": 0.06825601096495137}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.6149425287356322, "obj2": 0.2575903660391911}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * Min( MUM ,MUR ) ) ) ),RCSe )", "obj1": 0.7298850574712644, "obj2": 0.15295464240346643}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Max( FirstVNF_Mem_Server,MDR ) + ( Max( DDR,BR ) * Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( ( DS + RRSe ),MLU ) ) ) / MUM ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7701149425287356, "obj2": 0.10412740617893401}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8199233716475096, "obj2": 0.07580329954948899}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Max( MUC,( ( DS + ( ( Min( Max( MUC,MUM ) ,Min( RMSe ,MUC ) ) - RRSe ) * RMSe ) ) + Min( RCSe ,RRSe ) ) ) * ( Min( CS ,MUM ) * RCSe ) )", "obj1": 0.8026819923371648, "obj2": 0.09181808573911251}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09346581991767396}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_Mem - MRS ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2757738994270174}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8103448275862069, "obj2": 0.08329368285349578}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( Min( Min( RRSe ,RRSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9540229885057471, "obj2": 0.01956036198451271}, {"determining": "( Max( BR,( ( ( Const * FirstVNF_CPU_Server ) / PN ) / AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / MLU ) ) ) - Min( Max( Max( CS,CS ),RCSe ) ,( ( RCSe / ( MUM + ( CS * RRSe ) ) ) - RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.03383142540022525}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 0.8295019157088123, "obj2": 0.07479496677364773}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.034572922458197784}, {"determining": "Max( ( ( Min( RRS ,RRS ) - Min( Const ,MDR ) ) / AMS ),Max( ( ( PN + RRS ) - MRS ),( FirstVNF_RAM - ( FirstVNF_RAM / DDR ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( ( MUC + RRSe ) ,RCSe ) ) + ( Max( MUR,MLU ) * ( RCSe + CS ) ) ) * ( ( MUC / Min( ( MUM + Min( RMSe ,( RRSe / MUC ) ) ) ,RMSe ) ) - ( ( MUR + MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25308542051268174}, {"determining": "( Max( Min( DDR ,DDR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) * Max( ( FirstVNF_CPU + ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( ( ( ( ( MUC / RCSe ) * ( CS / MUC ) ) / ( Max( RMSe,MUR ) + CS ) ) * MUC ) ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.9693486590038314, "obj2": 0.01223003306519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.013039664290013565}, {"determining": "Min( Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( RRSe - MUC ) / MUM ) )", "obj1": 0.5900383141762452, "obj2": 0.2785827282928929}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "( Max( DDR,( DDR + ( Const + DDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( BR,FirstVNF_Mem_Server ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + Max( ( MUC / ( Max( DS,MUC ) / Min( MLU ,MUM ) ) ),( RMSe + MUM ) ) ) - ( ( RRSe * RMSe ) * Min( ( Max( MLU,MUR ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9482758620689655, "obj2": 0.021043023012241136}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Const * FirstVNF_RAM_Server ) + ( Max( RRS,AMS ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),BR ) ) ) ) )", "choosing": "( Max( ( ( RCSe / ( Min( MUM ,( MUM / MLU ) ) + RCSe ) ) / DS ),( RCSe - CS ) ) - Max( ( ( RCSe - MUR ) * RCSe ),RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.07139435189428028}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - Min( RRS ,FirstVNF_RAM_Server ) ) ) ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( ( DDR + FirstVNF_RAM ) / ARS ) ) / FirstVNF_RAM ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe ) - Max( ( DS + DS ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0104668301194861}, {"determining": "( Max( ( Const + Max( FirstVNF_CPU,( Const / FirstVNF_RAM ) ) ),( Max( FirstVNF_RAM_Server,RRS ) / FirstVNF_RAM ) ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "( Min( MLU ,( ( MUC / Min( CS ,CS ) ) * MUC ) ) - ( MUM + MUC ) )", "obj1": 0.9137931034482759, "obj2": 0.034572922458197784}, {"determining": "( Max( Min( RRS ,DDR ),Min( ACS ,BR ) ) - ( MRS * ( Min( AMS ,FirstVNF_RAM_Server ) + ( Max( DDR,CRS ) - Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) + RRSe ),Max( ( ( RCSe - RMSe ) / ( Max( Max( MUM,CS ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ),RMSe )", "obj1": 0.8045977011494253, "obj2": 0.08700019378205072}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( ( RRSe - MUC ) / MUM ) )", "obj1": 0.5900383141762452, "obj2": 0.2785827282928929}, {"determining": "( ( FirstVNF_RAM - MRS ) - ( ( ( FirstVNF_Mem + ( ( ARS * FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) + FirstVNF_Mem ) / Min( ARS ,PN ) ) )", "choosing": "( ( MLU + ( RMSe * ( MUC / ( Min( MUM ,RMSe ) - Max( ( ( CS * MUC ) * RCSe ),RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9348659003831418, "obj2": 0.030313319223337652}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MUM / ( Min( Min( CS ,( MUR / MUC ) ) ,( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / ( ( DS / ( MLU - ( MUC - MUC ) ) ) / Max( MUC,( ( RRSe * MUC ) * RRSe ) ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09661908398829586}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 0.9425287356321839, "obj2": 0.023529604772374473}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( PN / FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) - Max( ( RCSe + RRSe ),RCSe ) )", "obj1": 0.7796934865900383, "obj2": 0.10079745501591249}, {"determining": "Min( Min( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( MUM / MUM ),( MLU / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006932388125235811}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),Min( MRS ,FirstVNF_RAM_Server ) ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.735632183908046, "obj2": 0.15180315038599557}, {"determining": "( ( ACS - BR ) / ( MDR - ( DDR + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "Max( DS,( ( ( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) ) - MUM ) * MLU ) )", "obj1": 0.9808429118773946, "obj2": 0.008557302887519068}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.024732711157670298}, {"determining": "( Max( ( PN + ARS ),( MRS / Min( Min( AMS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) - ( Const * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + MLU ) * RRSe ),Max( ( Max( MUC,DS ) * ( RMSe + RCSe ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM + Min( ( RRSe - RCSe ) ,( Max( RCSe,DS ) + DS ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.004525057880414368}, {"determining": "Min( Min( ( ( ( ( ( FirstVNF_Mem + PN ) * FirstVNF_Mem_Server ) - DDR ) - DDR ) * ( FirstVNF_CPU_Server - MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC * Min( Min( MUC ,MLU ) ,( MUM / MLU ) ) ),RRSe ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.9310344827586207, "obj2": 0.030761750911688285}, {"determining": "( Max( CRS,Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * DS ),( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.16648973130187025}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM + Min( ( RRSe - RCSe ) ,( Max( RCSe,DS ) + DS ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.004525057880414368}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( BR - FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "( Max( ( RRSe + Min( ( MUC * ( MUR * MUC ) ) ,RCSe ) ),RCSe ) - ( MLU + ( MUC * ( MUC / ( Min( MUM ,RMSe ) - ( MUC + ( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.7720306513409961, "obj2": 0.10273002531510218}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ACS / ( FirstVNF_CPU + ( FirstVNF_Mem_Server / ACS ) ) ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( Max( ( ( RCSe - MUR ) + ( MUM + MUC ) ),MUM ),CS ) / Min( MLU ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.013039664290013565}, {"determining": "Max( ( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ),( PN / AMS ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,( RCSe + CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.0846141542959262}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.0846141542959262}, {"determining": "( ( MDR * ( Min( RRS ,BR ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) - Max( ( CRS + ( ( MDR - ARS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "( ( MLU + ( MUC * ( CS / MUC ) ) ) - Max( ( ( MUR - CS ) + RCSe ),DS ) )", "obj1": 0.7796934865900383, "obj2": 0.10079745501591249}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7720306513409961, "obj2": 0.10273002531510218}, {"determining": "( Max( ( MDR + FirstVNF_CPU ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) - ( Const + FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe * RCSe ) + ( MUC * ( Min( CS ,CS ) / MUC ) ) ) - ( ( RRSe + DS ) - RCSe ) )", "obj1": 0.9386973180076629, "obj2": 0.024290713225961283}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + CS ) ) ) ) ) - MLU ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.000595403290655088}, {"determining": "( ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,Const ) ) ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( ( DDR + FirstVNF_RAM ) / ARS ) ) / FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( Max( MLU,MUM ) - RRSe ) - Max( Max( DS,DS ),RCSe ) )", "obj1": 0.9386973180076629, "obj2": 0.024290713225961283}, {"determining": "( Max( ( Const / FirstVNF_CPU ),( CRS + DDR ) ) - ( ( ( BR / Min( ARS ,PN ) ) - Min( Max( Const,( BR * MDR ) ) ,ACS ) ) * ( BR - ACS ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / Max( MUC,MLU ) ) + DS ) + MLU ) ) )", "obj1": 0.9980842911877394, "obj2": 0.000595403290655088}, {"determining": "Min( ( ( ( Min( ( PN + FirstVNF_Mem ) ,( Min( ( BR + MRS ) ,ACS ) * Min( ( BR * RRS ) ,( MDR / FirstVNF_Mem ) ) ) ) * ( Min( AMS ,PN ) - FirstVNF_RAM ) ) * RRS ) / ARS ) ,Min( ( MDR + ARS ) ,( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * Max( MUR,CS ) ) + ( RRSe + Max( MLU,( ( ( MUM * MUM ) / RRSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Max( ( ( BR - CRS ) * Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ),( PN / AMS ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( RRS - MRS ) ,Min( RRS ,RRS ) )", "choosing": "Max( ( ( MUR * RCSe ) + MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + MRS ) - Max( Max( FirstVNF_RAM,FirstVNF_Mem ),( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe - CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( MUC - ( RMSe / Max( MUC,( ( MUC / RCSe ) - ( RRSe - DS ) ) ) ) ) ) - ( Min( MUR ,MUM ) + Max( MLU,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,PN ) - DDR ) * ( ACS - BR ) ) - Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),( FirstVNF_Mem_Server + ( ACS * ( FirstVNF_CPU * ( RRS + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / CS ) ) * ( ( ( MUC / MUR ) + Min( ( MUR / RRSe ) ,RRSe ) ) / Min( MUM ,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,Const ) ,MRS ) - ( MDR * RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( Min( ( RMSe * RRSe ) ,Min( ( MUR * MLU ) ,CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ( ( FirstVNF_RAM_Server - Const ) - ( ( ARS * ACS ) - FirstVNF_RAM_Server ) ),Const ) ,CRS ) - Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( RCSe / RMSe ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),BR ) - ( Const - MRS ) )", "choosing": "Max( Max( ( RCSe * Min( Min( Min( RCSe ,MUM ) ,( ( MUR + MUR ) * ( MUM * Max( MUM,MUM ) ) ) ) ,Min( ( ( MUR / RCSe ) - ( RRSe + Max( RCSe,MLU ) ) ) ,MUC ) ) ),MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( BR - ACS ) ) - Max( ( PN / RRS ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( CS * CS ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( BR + MRS ) - FirstVNF_Mem ) * FirstVNF_CPU ) ,Min( ( MRS * ( FirstVNF_Mem + FirstVNF_RAM ) ) ,MDR ) ) / Max( ( FirstVNF_RAM / RRS ),( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( Max( ( CS / MUM ),( ( CS * DS ) + MUC ) ) + ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_Mem_Server * Max( BR,BR ) ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( ( Min( RRSe ,RCSe ) + ( ( Min( ( Min( MUC ,RCSe ) * ( MUM * DS ) ) ,MUC ) * ( Max( MUM,RCSe ) * MLU ) ) / MUR ) ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( CRS * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( CRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( DS ,MLU ) ,MUC ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( BR ,FirstVNF_Mem_Server ) ,( CRS * BR ) ) ,( Max( CRS,MRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,Max( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ),AMS ) ) ,Min( ( Const * RRS ) ,Min( Min( Const ,FirstVNF_Mem ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) * ( RCSe * RMSe ) ) + ( ( RCSe / ( MUM * RMSe ) ) * Max( RMSe,RMSe ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - BR ) / ( MDR - ( Const * ( ACS / MRS ) ) ) )", "choosing": "Max( ( ( DS - Min( ( MUC / ( DS + Min( RCSe ,MUC ) ) ) ,MUM ) ) * MLU ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - Min( DDR ,ARS ) )", "choosing": "Max( ( ( Min( Min( MUM ,MLU ) ,Min( MLU ,RRSe ) ) / CS ) / RCSe ),( ( DS - MUM ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - MRS ) ,( Max( ACS,DDR ) + PN ) )", "choosing": "Max( ( MUM + RMSe ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * AMS )", "choosing": "( Min( MUM ,MUC ) - ( MLU * ( Max( RMSe,CS ) * ( RCSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,FirstVNF_Mem ) / ( ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) * DDR ) ) * ( ( FirstVNF_CPU_Server + RRS ) - ( RRS * FirstVNF_Mem ) ) ) ,Max( Max( ( AMS - MRS ),( ACS - RRS ) ),Max( ( MDR - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( RMSe,CS ) * ( Min( MUM ,MUC ) - ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( RRS + ARS ) ) * ( BR - MDR ) )", "choosing": "( ( RCSe / Max( DS,( ( Min( ( MUM - ( MLU + MLU ) ) ,RCSe ) - ( CS / DS ) ) + RCSe ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / FirstVNF_Mem ) * ( DDR - AMS ) ) - Max( ( Const + FirstVNF_RAM ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( RRS / FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / Min( Const ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Max( Max( ( Max( MLU,MUM ) / ( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( Max( ( RCSe / MLU ),( MUR / DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS - FirstVNF_Mem_Server ) / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server / BR ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,Min( ( ( MUR * DS ) - ( ( ( ( DS + RCSe ) / Max( ( MUC / RMSe ),Max( RRSe,MUM ) ) ) / Min( Max( ( RMSe / RMSe ),Min( RRSe ,CS ) ) ,( RMSe / MUR ) ) ) - DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( MUM ,MUC ) - Min( Min( MUM ,MLU ) ,( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - Min( DDR ,ARS ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( RMSe + ( RRSe * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( ( ( CS - MUM ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Min( ( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) - MUM ) ,( CS - MUR ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.6475095785440613, "obj2": 0.22279458187333406}, {"determining": "( ( ( ( FirstVNF_RAM / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( ARS / Min( ( MDR - Max( ( PN + MRS ),RRS ) ) ,( ( ARS - ARS ) / MRS ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,( ( ( Min( DS ,MUR ) / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.22014351258572673}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MUM * MUM ) - ( Max( DS,MUR ) / MUC ) )", "obj1": 0.6896551724137931, "obj2": 0.16116475791620588}, {"determining": "( Max( ( PN + ARS ),( MRS / Min( Min( AMS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) - ( Const * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + MLU ) * RRSe ),Max( ( Max( MUC,DS ) * ( RMSe + RCSe ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,( ARS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,Max( ( Min( MLU ,CS ) * RCSe ),RCSe ) ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.7203065134099617, "obj2": 0.15684934889417054}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.685823754789272, "obj2": 0.18001409511616076}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( MUC + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7490421455938697, "obj2": 0.11239193351938356}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( Max( FirstVNF_Mem_Server,BR ) / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / Min( ( MUM * RMSe ) ,MUM ) ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.12526334310670006}, {"determining": "( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * Max( ( RRSe + RCSe ),RCSe ) ),( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05538229636527587}, {"determining": "( Max( CRS,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( MUC * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7375478927203065, "obj2": 0.14928409714676183}, {"determining": "( Max( Const,Min( ACS ,Max( FirstVNF_Mem_Server,MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,( Max( MDR,MDR ) * BR ) ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,( Const * BR ) ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / ( Min( ( ( ( MLU + RMSe ) + ( DS / MLU ) ) / ( Min( CS ,RRSe ) / MUC ) ) ,Max( RMSe,RCSe ) ) / RCSe ) ),Max( ( RMSe + DS ),( MLU * ( ( Max( MUC,MLU ) / Max( MUR,MUC ) ) + DS ) ) ) ),RCSe )", "obj1": 0.8007662835249042, "obj2": 0.08921971810778578}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * ( Max( BR,AMS ) - Const ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( ( MLU * Min( MUM ,MUR ) ) - Min( MUM ,MUC ) ) / Min( MLU ,( ( ( MUC - MUR ) * Max( RMSe,CS ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2988424778619147}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Const * FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( RCSe - MUR ) * RCSe ),RCSe ) )", "obj1": 0.8448275862068966, "obj2": 0.06819646505676523}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09346581991767396}, {"determining": "( Max( FirstVNF_Mem_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( ( CS + MUM ) + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6800766283524904, "obj2": 0.18552419927867003}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( FirstVNF_RAM_Server + AMS ) ,( Max( Const,Min( ( BR - FirstVNF_RAM_Server ) ,( CRS - MDR ) ) ) / ACS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( Max( RMSe,RMSe ) + Min( CS ,MUC ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8888888888888888, "obj2": 0.0462748682885955}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,PN ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( MUM ,RMSe ) - Max( ( Min( MLU ,CS ) * RCSe ),RCSe ) ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( CRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( ( ( RRSe - MUC ) / MUM ) * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.7471264367816092, "obj2": 0.11718637012740722}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_Mem - MRS ) )", "choosing": "( ( MUR - CS ) - Min( RRSe ,DS ) )", "obj1": 0.5957854406130269, "obj2": 0.2757738994270174}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.5996168582375478, "obj2": 0.2672970284464055}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Max( FirstVNF_Mem_Server,MDR ) + ( Max( DDR,BR ) * Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( ( DS + RRSe ),MLU ) ) ) / MUM ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7701149425287356, "obj2": 0.10412740617893401}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( ( RRSe + DS ),RCSe ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.9272030651340997, "obj2": 0.032350758617433195}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ARS ,Max( FirstVNF_CPU_Server,ACS ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( Max( MUC,CS ) - MUC ) ) )", "obj1": 0.8831417624521073, "obj2": 0.04735374200232641}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * Max( RMSe,CS ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8601532567049809, "obj2": 0.058448524953942475}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 0.8295019157088123, "obj2": 0.07479496677364773}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.034572922458197784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.034572922458197784}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( ( RRSe - MUC ) / MUM ) )", "obj1": 0.5900383141762452, "obj2": 0.2785827282928929}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.0838111986024102}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Const * FirstVNF_RAM_Server ) + ( Max( RRS,AMS ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),BR ) ) ) ) )", "choosing": "( Max( ( ( RCSe / ( Min( MUM ,( MUM / MLU ) ) + RCSe ) ) / DS ),( RCSe - CS ) ) - Max( ( ( RCSe - MUR ) * RCSe ),RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.07139435189428028}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + Max( DS,( MUC / ( Max( DS,RRSe ) / Min( MLU ,MUM ) ) ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.975095785440613, "obj2": 0.010460857601379532}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9597701149425287, "obj2": 0.01292633088328192}, {"determining": "( Max( ( Const / FirstVNF_RAM ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( RCSe / ( MUM + ( CS * RRSe ) ) ) - RCSe ),MLU ) + ( MUM + MUC ) )", "obj1": 0.946360153256705, "obj2": 0.020548335127862746}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.9386973180076629, "obj2": 0.023349521524239657}, {"determining": "Min( Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_RAM ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( RRSe - MUC ) / MUM ) )", "obj1": 0.5900383141762452, "obj2": 0.2785827282928929}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( Max( FirstVNF_Mem_Server,BR ) / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / Min( ( MUM * RMSe ) ,MUM ) ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.12526334310670006}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,( RCSe + CS ) ) ) )", "obj1": 0.9559386973180076, "obj2": 0.015673132527462982}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8563218390804598, "obj2": 0.060336069082915986}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8199233716475096, "obj2": 0.07580329954948899}, {"determining": "( ( FirstVNF_RAM - MRS ) - ( ( ( FirstVNF_Mem + ( ( ARS * FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) + FirstVNF_Mem ) / Min( ARS ,PN ) ) )", "choosing": "( ( MLU + ( RMSe * ( MUC / ( Min( MUM ,RMSe ) - Max( ( ( CS * MUC ) * RCSe ),RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9348659003831418, "obj2": 0.030313319223337652}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MUM / ( Min( Min( CS ,( MUR / MUC ) ) ,( MUC + RCSe ) ) * ( Min( Min( Max( ( MUM * MLU ),Max( CS,MUR ) ) ,RRSe ) ,Max( MUR,( ( RMSe - RCSe ) / ( MUR + CS ) ) ) ) - RMSe ) ) ) - ( MUM / ( ( DS / ( MLU - ( MUC - MUC ) ) ) / Max( MUC,( ( RRSe * MUC ) * RRSe ) ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09661908398829586}, {"determining": "( Max( Const,( ACS * Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * CRS ) ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( PN - ( ACS - CRS ) ) ) * MDR ) )", "choosing": "( ( ( Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) * ( RMSe * RMSe ) ) / DS ) - ( MLU + ( MLU * ( MUC / CS ) ) ) )", "obj1": 0.8563218390804598, "obj2": 0.060336069082915986}, {"determining": "Min( ( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( RCSe / MUC ) )", "obj1": 0.8371647509578544, "obj2": 0.06825601096495137}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.024732711157670298}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7701149425287356, "obj2": 0.10412740617893401}, {"determining": "( Max( ( FirstVNF_Mem + Max( Const,RRS ) ),Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / Min( Max( MLU,Max( CS,MLU ) ) ,RCSe ) ) / RRSe ),Max( ( MUR + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.814176245210728, "obj2": 0.08008644469213651}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),Min( MRS ,FirstVNF_RAM_Server ) ) - ( ACS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.735632183908046, "obj2": 0.15180315038599557}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( Min( Min( RRSe ,RRSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9540229885057471, "obj2": 0.019560361984512706}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8103448275862069, "obj2": 0.08329368285349578}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07914622849705175}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * Min( MUM ,MUR ) ) ) ),RCSe )", "obj1": 0.7298850574712644, "obj2": 0.15295464240346643}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * Min( MUM ,MUR ) ) ) ),RCSe )", "obj1": 0.7298850574712644, "obj2": 0.15295464240346643}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( RRSe * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( ( ( CS - MUM ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.9674329501915708, "obj2": 0.012396097926874213}, {"determining": "Min( Min( ( ( ( ( ( FirstVNF_Mem + PN ) * FirstVNF_Mem_Server ) - DDR ) - DDR ) * ( FirstVNF_CPU_Server - MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( CRS ,ARS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( Max( ( MUC * Min( Min( MUC ,MLU ) ,( MUM / MLU ) ) ),RRSe ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.9310344827586207, "obj2": 0.030761750911688285}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7758620689655172, "obj2": 0.1026582727752502}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( PN / FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) - Max( ( RCSe + RRSe ),RCSe ) )", "obj1": 0.7796934865900383, "obj2": 0.10079745501591249}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 0.9846743295019157, "obj2": 0.0060404536769045935}, {"determining": "( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( ( DDR + FirstVNF_RAM ) / ARS ) ) / FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( Max( MLU,MUM ) - RRSe ) - ( ( Min( Min( RRSe ,RRSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0024080422785003}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / MLU ) ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9501915708812261, "obj2": 0.020406713855227503}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( RMSe,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003733276268830876}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8601532567049809, "obj2": 0.058448524953942475}, {"determining": "( ( ACS - BR ) / ( MDR - ( DDR + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "Max( DS,( ( ( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) ) - MUM ) * MLU ) )", "obj1": 0.9808429118773946, "obj2": 0.008557302887519068}, {"determining": "( Max( CRS,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( ( DS / Max( RMSe,RCSe ) ) + DS ) ) ) - MLU ) + ( Min( CS ,RMSe ) * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.7375478927203065, "obj2": 0.14928409714676183}, {"determining": "Min( Min( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( MUM / MUM ),( MLU / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006932388125235811}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * FirstVNF_CPU ),MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.9693486590038314, "obj2": 0.01223003306519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7720306513409961, "obj2": 0.10273002531510218}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM + Min( ( RRSe - RCSe ) ,( Max( RCSe,DS ) + DS ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.004525057880414368}, {"determining": "( ( ACS - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) / ( MDR - ( DDR + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "Max( DS,( ( ( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( Min( MUM ,RMSe ) - Max( ( ( RCSe - MUR ) * RCSe ),RCSe ) ) ) - MUM ) * MLU ) )", "obj1": 0.9808429118773946, "obj2": 0.008557302887519068}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.8103448275862069, "obj2": 0.08329368285349578}, {"determining": "( ( MDR * ( Min( RRS ,BR ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) - Max( ( CRS + ( ( MDR - ARS ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "( ( MLU + ( MUC * ( CS / MUC ) ) ) - Max( ( ( MUR - CS ) + RCSe ),DS ) )", "obj1": 0.7796934865900383, "obj2": 0.10079745501591249}, {"determining": "( Max( Min( DDR ,DDR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) * Max( ( FirstVNF_CPU + ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( ( ( ( ( MUC / RCSe ) * ( CS / MUC ) ) / ( Max( RMSe,MUR ) + CS ) ) * MUC ) ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.9693486590038314, "obj2": 0.01223003306519666}, {"determining": "( Max( ( BR - FirstVNF_CPU ),AMS ) - Min( ( PN + ARS ) ,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( Max( MUM,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( MLU - DS ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM + Min( ( RRSe - RCSe ) ,( Max( RCSe,DS ) + DS ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.004525057880414368}, {"determining": "( Max( FirstVNF_RAM,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( BR,Min( ( DDR + FirstVNF_Mem_Server ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM / Max( RRSe,Min( RRSe ,MUC ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) + ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8199233716475096, "obj2": 0.07580329954948899}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + CS ) ) ) ) ) - MLU ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.000595403290655088}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + CS ) ) ) ) ) - MLU ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.000595403290655088}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( BR - FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "( Max( ( RRSe + Min( ( MUC * ( MUR * MUC ) ) ,RCSe ) ),RCSe ) - ( MLU + ( MUC * ( MUC / ( Min( MUM ,RMSe ) - ( MUC + ( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.7720306513409961, "obj2": 0.10273002531510218}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( Min( FirstVNF_Mem_Server ,ACS ) + CRS ) ) ) )", "choosing": "( ( MUM * MUM ) - ( Max( DS,MUR ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - MRS ) ,Min( RRS ,RRS ) )", "choosing": "Max( ( ( MUR * RCSe ) + MUM ),( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + MRS ) - Max( Max( FirstVNF_RAM,FirstVNF_Mem ),( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe - CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( MUC - ( RMSe / Max( MUC,( ( MUC / RCSe ) - ( RRSe - DS ) ) ) ) ) ) - ( Min( MUR ,MUM ) + Max( MLU,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,PN ) - DDR ) * ( ACS - BR ) ) - Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),( FirstVNF_Mem_Server + ( ACS * ( FirstVNF_CPU * ( RRS + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / CS ) ) * ( ( ( MUC / MUR ) + Min( ( MUR / RRSe ) ,RRSe ) ) / Min( MUM ,RRSe ) ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) / ( PN / BR ) )", "choosing": "( Max( DS,MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,Const ) ,MRS ) - ( MDR * RRS ) )", "choosing": "Max( ( RRSe / RRSe ),( Min( ( RMSe * RRSe ) ,Min( ( MUR * MLU ) ,CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ( ( FirstVNF_RAM_Server - Const ) - ( ( ARS * ACS ) - FirstVNF_RAM_Server ) ),Const ) ,CRS ) - Const ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( RCSe / RMSe ) - Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),BR ) - ( Const - MRS ) )", "choosing": "Max( Max( ( RCSe * Min( Min( Min( RCSe ,MUM ) ,( ( MUR + MUR ) * ( MUM * Max( MUM,MUM ) ) ) ) ,Min( ( ( MUR / RCSe ) - ( RRSe + Max( RCSe,MLU ) ) ) ,MUC ) ) ),MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - DDR ) / ( BR - ACS ) ) - Max( ( PN / RRS ),( Const / FirstVNF_RAM ) ) )", "choosing": "( ( CS * CS ) - Max( ( RRSe + RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( BR + MRS ) - FirstVNF_Mem ) * FirstVNF_CPU ) ,Min( ( MRS * ( FirstVNF_Mem + FirstVNF_RAM ) ) ,MDR ) ) / Max( ( FirstVNF_RAM / RRS ),( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( Max( ( CS / MUM ),( ( CS * DS ) + MUC ) ) + ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( CRS,Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( ( MUR - RCSe ) + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( MUC * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + ( FirstVNF_Mem / FirstVNF_CPU ) ) ) - Min( DDR ,ARS ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MUM * MUM ) - ( Max( DS,MUR ) / MUC ) )", "obj1": 0.7049808429118773, "obj2": 0.14726335475001406}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( Max( FirstVNF_Mem_Server,BR ) / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7337164750957854, "obj2": 0.13008810143918326}, {"determining": "( ( ( ( FirstVNF_RAM / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( ARS / Min( ( MDR - Max( ( PN + MRS ),RRS ) ) ,( ( ARS - ARS ) / MRS ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,( ( ( Min( DS ,MUR ) / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.22014351258572673}, {"determining": "( Max( FirstVNF_Mem_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / ( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.6781609195402298, "obj2": 0.17393134541138783}, {"determining": "Min( Min( Max( BR,( ( BR + BR ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,Max( MLU,RCSe ) ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MUC ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( Max( ( BR - FirstVNF_CPU ),AMS ) - Min( ( PN + ARS ) ,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( Max( MUM,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( MLU - DS ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( MRS,( MDR / RRS ) ) * ( ( Const - BR ) * AMS ) ) ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( RRS * ( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( ( ( MUC / ( Max( MUR,MUR ) * MUR ) ) + RMSe ) ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) - Min( MUM ,RCSe ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MDR ) ) * ( Min( ( ACS - ARS ) ,FirstVNF_Mem_Server ) - DDR ) ) )", "choosing": "( Min( MUM ,MUR ) - Max( ( ( CS / MUM ) * Max( ( ( RRSe / ( RCSe - RCSe ) ) / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( MLU + ( ( MUM / MLU ) + DS ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.2732580772557306}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM / RCSe ) - ( DS / MUM ) )", "obj1": 0.6245210727969349, "obj2": 0.235416528867462}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6398467432950191, "obj2": 0.22873044248143481}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Min( ( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) - MUM ) ,( CS - MUR ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.6475095785440613, "obj2": 0.22279458187333406}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( PN + FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) * MDR ) )", "choosing": "( ( MUM * MUM ) - Min( Max( DS,MUR ) ,Min( ( RMSe + ( MLU / Max( Max( DS,RCSe ),MUM ) ) ) ,Min( MLU ,RCSe ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.16116475791620588}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * ( Max( BR,AMS ) - Const ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( ( MLU * Min( MUM ,MUR ) ) - Min( MUM ,MUC ) ) / Min( MLU ,( ( ( MUC - MUR ) * Max( RMSe,CS ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2988424778619147}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MUM * MUM ) - ( Max( DS,MUR ) / MUC ) )", "obj1": 0.6896551724137931, "obj2": 0.16116475791620588}, {"determining": "( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * Max( ( RRSe + RCSe ),RCSe ) ),( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05538229636527587}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR / ( ( CRS / FirstVNF_RAM ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - ( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.7681992337164751, "obj2": 0.10709774085833067}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,PN ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( MUM ,RMSe ) - Max( ( Min( MLU ,CS ) * RCSe ),RCSe ) ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "Min( ( ACS / FirstVNF_RAM_Server ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / ( RRSe + CS ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( FirstVNF_RAM,Min( ACS ,( FirstVNF_Mem_Server - Max( FirstVNF_Mem,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ) - Max( Max( ( MRS * CRS ),Min( MDR ,MDR ) ),( ( RRS * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),Max( Min( MUR ,DS ),( DS * ( ( Min( CS ,RRSe ) / MUR ) - RMSe ) ) ) ) )", "obj1": 0.9252873563218391, "obj2": 0.028996777470002164}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7509578544061303, "obj2": 0.11185151838770883}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.8601532567049809, "obj2": 0.05706929875350839}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + Const ),Max( FirstVNF_RAM_Server,AMS ) ) ) ,( CRS - MRS ) )", "choosing": "( ( ( MUM * MUM ) - ( Max( DS,MUR ) - MUC ) ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( ( MUR - MUM ) ,RMSe ) - Max( RCSe,( Min( MLU ,CS ) * ( RRSe - CS ) ) ) ) ) + ( DS + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2707901428799918}, {"determining": "Min( ( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( RCSe / MUC ) )", "obj1": 0.842911877394636, "obj2": 0.06483746446852606}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ARS ,Max( FirstVNF_CPU_Server,ACS ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( Max( MUC,CS ) - MUC ) ) )", "obj1": 0.8831417624521073, "obj2": 0.04735374200232641}, {"determining": "( Max( Const,Min( ACS ,( ( ACS - ( FirstVNF_Mem_Server * BR ) ) - MDR ) ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( ( MDR + ARS ),BR ) - ( ( DDR / RRS ) / AMS ) ) ) ) )", "choosing": "( ( MUM + Min( ( Max( RCSe,RRSe ) / RCSe ) ,( Max( RCSe,DS ) + MUC ) ) ) + ( MUR / RMSe ) )", "obj1": 0.9099616858237548, "obj2": 0.0375120102074615}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.7988505747126436, "obj2": 0.09019922459131503}, {"determining": "( Max( ( PN + ARS ),( MRS / Min( Min( AMS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) - ( Const * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + MLU ) * RRSe ),Max( ( Max( MUC,DS ) * ( RMSe + RCSe ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( CRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( ( ( RRSe - MUC ) / MUM ) * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.7471264367816092, "obj2": 0.11718637012740722}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( MUR + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7854406130268199, "obj2": 0.09332364900242912}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Const * FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,Min( MLU ,( ( ( MUC - MUR ) * Max( RMSe,CS ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) ) - Max( ( ( RCSe - MUR ) * RCSe ),RCSe ) )", "obj1": 0.8524904214559387, "obj2": 0.06309464720241396}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( ( ( AMS / ACS ) / AMS ) ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + DS ),RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03137451459063307}, {"determining": "( Max( Const,Min( Min( ACS ,Max( MRS,MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( PN * DDR ) ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Min( ( ( ( MLU / MUM ) / ( CS / RRSe ) ) + MUM ) ,MUC ) )", "obj1": 0.975095785440613, "obj2": 0.008029670277536378}, {"determining": "( Max( ( CRS / Const ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUM * ( Min( CS ,( DS - DS ) ) / MUC ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.9348659003831418, "obj2": 0.025458548792848673}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8199233716475096, "obj2": 0.07536923808102579}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7432950191570882, "obj2": 0.12250109412542927}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "Min( ( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( RCSe / MUC ) )", "obj1": 0.8371647509578544, "obj2": 0.06825601096495137}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.8103448275862069, "obj2": 0.08268989192528126}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( FirstVNF_RAM_Server + AMS ) ,( Max( Const,Min( ( BR - FirstVNF_RAM_Server ) ,( CRS - MDR ) ) ) / ACS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( Max( RMSe,RMSe ) + Min( CS ,MUC ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8888888888888888, "obj2": 0.0462748682885955}, {"determining": "( Max( ( Const / FirstVNF_RAM ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( RCSe / ( MUM + ( CS * RRSe ) ) ) - RCSe ),MLU ) + ( MUM + MUC ) )", "obj1": 0.946360153256705, "obj2": 0.020548335127862746}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.0838111986024102}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366732}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.03431509435669346}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 0.8295019157088123, "obj2": 0.07479496677364773}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09570252328162027}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Const * FirstVNF_RAM_Server ) + ( Max( RRS,AMS ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),BR ) ) ) ) )", "choosing": "( Max( ( ( RCSe / ( Min( MUM ,( MUM / MLU ) ) + RCSe ) ) / DS ),( RCSe - CS ) ) - Max( ( ( RCSe - MUR ) * RCSe ),RCSe ) )", "obj1": 0.8352490421455939, "obj2": 0.07139435189428028}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( PN / FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) - Max( ( RCSe + RRSe ),RCSe ) )", "obj1": 0.7796934865900383, "obj2": 0.10079745501591249}, {"determining": "( Max( Const,Min( ACS ,Max( FirstVNF_Mem_Server,MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,( Max( MDR,MDR ) * BR ) ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,( Const * BR ) ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / ( Min( ( ( ( MLU + RMSe ) + ( DS / MLU ) ) / ( Min( CS ,RRSe ) / MUC ) ) ,Max( RMSe,RCSe ) ) / RCSe ) ),Max( ( RMSe + DS ),( MLU * ( ( Max( MUC,MLU ) / Max( MUR,MUC ) ) + DS ) ) ) ),RCSe )", "obj1": 0.8007662835249042, "obj2": 0.08921971810778578}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + Max( ( RMSe + MUM ),( MUC / Min( ( MUR * MLU ) ,CS ) ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9540229885057471, "obj2": 0.019502493460913123}, {"determining": "Min( Min( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) ,( Max( CRS,CRS ) * ( ACS * MDR ) ) ) ,Max( ( ( DDR * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ),Min( Min( ARS ,CRS ) ,Min( DDR ,CRS ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ),( RCSe - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( MUM / MUM ),( MLU / MLU ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006932388125235811}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( Max( FirstVNF_Mem_Server,BR ) / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / Min( ( MUM * RMSe ) ,MUM ) ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.12526334310670006}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8888888888888888, "obj2": 0.0462748682885955}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9655172413793104, "obj2": 0.011951553280254504}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 0.8314176245210728, "obj2": 0.07339276769827276}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * Min( MUM ,( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ) ) ) ) ),RCSe )", "obj1": 0.7739463601532567, "obj2": 0.10262318626351645}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07914622849705175}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / MLU ) ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9501915708812261, "obj2": 0.020406713855227503}, {"determining": "( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( ( DDR + FirstVNF_RAM ) / ARS ) ) / FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0022613089039276754}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.9386973180076629, "obj2": 0.023349521524239657}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) - ( MDR * ( Min( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( ( MUC + DS ),RCSe ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.9885057471264368, "obj2": 0.004371427687918071}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( Max( FirstVNF_Mem_Server,BR ) / AMS ) ) ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / Min( ( MUM * RMSe ) ,MUM ) ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.12526334310670006}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( MUC + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7490421455938697, "obj2": 0.11239193351938356}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,( ( CS - MUM ) - ( CS - MUR ) ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.058049662321291634}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.9578544061302682, "obj2": 0.015340377078364593}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( MUR + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.814176245210728, "obj2": 0.08008644469213651}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,( RCSe + CS ) ) ) )", "obj1": 0.9559386973180076, "obj2": 0.015673132527462982}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09346581991767396}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012442843731905946}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8563218390804598, "obj2": 0.060336069082915986}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.024342519750355836}, {"determining": "( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) )", "choosing": "Max( ( Max( ( MUC * Max( ( RRSe + RCSe ),RCSe ) ),( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ) - RMSe ) ) - ( ( RCSe * MLU ) + ( MUC + CS ) ) ),( ( ( MLU + MUR ) * ( CS - MLU ) ) * Max( ( RMSe * RMSe ),( MLU / MLU ) ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05538229636527587}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7701149425287356, "obj2": 0.10412740617893401}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.9386973180076629, "obj2": 0.023349521524239657}, {"determining": "( Max( Const,( ACS * Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * CRS ) ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( PN - ( ACS - CRS ) ) ) * MDR ) )", "choosing": "( ( ( Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) * ( RMSe * RMSe ) ) / DS ) - ( MLU + ( MLU * ( MUC / CS ) ) ) )", "obj1": 0.8563218390804598, "obj2": 0.060336069082915986}, {"determining": "( ( ( ( FirstVNF_RAM / AMS ) - Min( Const ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( ARS / Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( ARS - ARS ) / MRS ) ) ) / ( BR - FirstVNF_RAM_Server ) ) / ( Min( PN ,MRS ) / ( MRS + ARS ) ) ) )", "choosing": "Max( MUR,( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6647509578544061, "obj2": 0.22014351258572673}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9597701149425287, "obj2": 0.01292633088328192}, {"determining": "( Max( ( FirstVNF_Mem + Max( Const,RRS ) ),Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / Min( Max( MLU,Max( CS,MLU ) ) ,RCSe ) ) / RRSe ),Max( ( MUR + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.814176245210728, "obj2": 0.08008644469213651}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 0.9846743295019157, "obj2": 0.0060404536769045935}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( RMSe,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003733276268830876}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7796934865900383, "obj2": 0.10079745501591249}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( MUC - MUM ) )", "obj1": 0.9846743295019157, "obj2": 0.0060404536769045935}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( RMSe,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003733276268830876}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( BR - FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "( Max( ( RRSe + Min( ( MUC * ( MUR * MUC ) ) ,RCSe ) ),RCSe ) - ( MLU + ( MUC * ( MUC / ( Min( MUM ,RMSe ) - ( MUC + ( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.7720306513409961, "obj2": 0.10273002531510218}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Max( FirstVNF_Mem_Server,MDR ) + ( Max( DDR,BR ) * Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( ( DS + RRSe ),MLU ) ) ) / MUM ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7701149425287356, "obj2": 0.10412740617893401}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.0838111986024102}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07914622849705175}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + CS ) ) ) ) ) - MLU ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.000595403290655088}, {"determining": "( Max( FirstVNF_RAM,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( BR,Min( ( DDR + FirstVNF_Mem_Server ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM / Max( RRSe,Min( RRSe ,MUC ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) + ( MUR - RMSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013852580623019267}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( DS ,( RRSe * ( DS + ( DS / ( RCSe + CS ) ) ) ) ) - MLU ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.000595403290655088}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( MUC + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7490421455938697, "obj2": 0.11239193351938356}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9597701149425287, "obj2": 0.01292633088328192}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,( RCSe + CS ) ) ) )", "obj1": 0.9559386973180076, "obj2": 0.015673132527462982}], "10": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( ( MDR * ( ( Const * FirstVNF_RAM_Server ) + ( Max( RRS,AMS ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),BR ) ) ) ) - ( Max( BR,Min( ( DDR + FirstVNF_Mem_Server ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM / Max( RRSe,Min( RRSe ,MUC ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe - MUR ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) + ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( ( MUR - RCSe ) + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( MUC * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MRS * Max( PN,( PN / ACS ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MLU ,( MUC * ( ( Max( RRSe,Max( ( DS - DS ),RMSe ) ) - MLU ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6819923371647509, "obj2": 0.1567130252540448}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.657088122605364, "obj2": 0.20678424340207366}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7011494252873564, "obj2": 0.13914577335419973}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( Min( Min( ( RRS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( ( Max( Max( MUM,Min( RCSe ,DS ) ),MUM ) + Max( ( RRSe + ( MUR / MUR ) ),RCSe ) ) / MUC ),( MUC / ( Min( RRSe ,MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6168582375478927, "obj2": 0.23325540738797443}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.12889407921484566}, {"determining": "( Max( ( PN + ARS ),( MRS / Min( Min( AMS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) - ( Const * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + MLU ) * RRSe ),Max( ( Max( MUC,DS ) * ( RMSe + RCSe ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.1381801965036112}, {"determining": "( Max( FirstVNF_Mem_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / ( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.6781609195402298, "obj2": 0.17393134541138783}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * ( Max( BR,AMS ) - Const ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( ( MLU * Min( MUM ,MUR ) ) - Min( MUM ,MUC ) ) / Min( MLU ,( ( ( MUC - MUR ) * Max( RMSe,CS ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2988424778619147}, {"determining": "Min( ( CRS - FirstVNF_RAM_Server ) ,Min( Min( ( ( Const - ARS ) - Min( RRS ,CRS ) ) ,AMS ) ,Const ) )", "choosing": "( Min( ( DS - MUR ) ,RMSe ) - Max( ( Min( MUM ,CS ) * MLU ),( RRSe / MUM ) ) )", "obj1": 0.6494252873563219, "obj2": 0.21893995182885176}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5881226053639846, "obj2": 0.2794063779823552}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6398467432950191, "obj2": 0.22873044248143481}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "Min( Min( Max( BR,( ( BR + BR ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,Max( MLU,RCSe ) ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MUC ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( Max( ( BR - FirstVNF_CPU ),AMS ) - Min( ( PN + ARS ) ,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( Max( MUM,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( MLU - DS ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( FirstVNF_Mem_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / ( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.6800766283524904, "obj2": 0.17045993208838178}, {"determining": "Min( ( ACS / FirstVNF_RAM_Server ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / ( RRSe + CS ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( RMSe - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.7605363984674329, "obj2": 0.10535569425414738}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7260536398467433, "obj2": 0.12300475504690163}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( CRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.735632183908046, "obj2": 0.11923488693759353}, {"determining": "( Max( FirstVNF_RAM,Min( ACS ,( FirstVNF_Mem_Server - Max( FirstVNF_Mem,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ) - Max( Max( ( MRS * CRS ),Min( MDR ,MDR ) ),( ( RRS * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),Max( Min( MUR ,DS ),( DS * ( ( Min( CS ,RRSe ) / MUR ) - RMSe ) ) ) ) )", "obj1": 0.9252873563218391, "obj2": 0.028996777470002164}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.11608231144882791}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MDR ) ) * ( Min( ( ACS - ARS ) ,FirstVNF_Mem_Server ) - DDR ) ) )", "choosing": "( Min( MUM ,MUR ) - Max( ( ( CS / MUM ) * Max( ( ( RRSe / ( RCSe - RCSe ) ) / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( MLU + ( ( MUM / MLU ) + DS ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.2732580772557306}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7509578544061303, "obj2": 0.11185151838770883}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,PN ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( MUM ,RMSe ) - Max( ( Min( MLU ,CS ) * RCSe ),RCSe ) ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Min( MDR ,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Min( ACS ,( FirstVNF_CPU_Server + MRS ) ) + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( ( MUC / CS ) * MUC ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,Max( RMSe,( RMSe * ( DS * ( MLU + RMSe ) ) ) ) ) + RCSe ),RCSe ) )", "obj1": 0.89272030651341, "obj2": 0.04524640519188679}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "Max( MUR,( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.8103448275862069, "obj2": 0.07985436252053121}, {"determining": "( Max( ( CRS / Const ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUM * ( Min( CS ,( DS - DS ) ) / MUC ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.9348659003831418, "obj2": 0.025458548792848673}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + Const ),Max( FirstVNF_RAM_Server,AMS ) ) ) ,( CRS - MRS ) )", "choosing": "( ( ( MUM * MUM ) - ( Max( DS,MUR ) - MUC ) ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( ( MUR - MUM ) ,RMSe ) - Max( RCSe,( Min( MLU ,CS ) * ( RRSe - CS ) ) ) ) ) + ( DS + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2707901428799918}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),Max( ( BR + FirstVNF_RAM ),( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( MLU + ( ( ( ( ( CS * MLU ) + Min( DS ,MUC ) ) - ( ( MLU + MLU ) / MUM ) ) / MLU ) + DS ) ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( ( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) ) * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.8697318007662835, "obj2": 0.05389935539449096}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "Min( ( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( RCSe / MUC ) )", "obj1": 0.8371647509578544, "obj2": 0.06825601096495137}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( MRS,( MDR / RRS ) ) * ( ( Const - BR ) * AMS ) ) ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( RRS * ( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( ( ( MUC / ( Max( MUR,MUR ) * MUR ) ) + RMSe ) ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) - Min( MUM ,RCSe ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Max( FirstVNF_CPU,FirstVNF_RAM ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( CS + ( MUM * ( ( DS * RCSe ) - ( RRSe * CS ) ) ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.8237547892720306, "obj2": 0.07280873537932239}, {"determining": "( Min( ACS ,( FirstVNF_Mem_Server - MRS ) ) - ( FirstVNF_RAM * MRS ) )", "choosing": "( ( ( MUC * CS ) + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,CS ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.842911877394636, "obj2": 0.06326845248834666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7911877394636015, "obj2": 0.09114207991121943}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,BR ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,MUM ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.7988505747126436, "obj2": 0.08620442399003726}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6398467432950191, "obj2": 0.22873044248143481}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Const * FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,Min( MLU ,( ( ( MUC - MUR ) * Max( RMSe,CS ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) ) - Max( ( ( RCSe - MUR ) * RCSe ),RCSe ) )", "obj1": 0.8524904214559387, "obj2": 0.06309464720241396}, {"determining": "( Max( Const,Min( ACS ,Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( ( RRS / ( Min( CRS ,BR ) / BR ) ) - Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,MUC ) ) ) ) ) - MLU ) + ( ( ( CS - MUR ) - ( MUM + CS ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.814176245210728, "obj2": 0.07810995106872158}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Min( ( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) - MUM ) ,( CS - MUR ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.6475095785440613, "obj2": 0.22279458187333406}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.9080459770114943, "obj2": 0.03824290654866189}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( ( ( MUM / MLU ) - ( ( RCSe + RMSe ) / MUM ) ) ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.7777777777777778, "obj2": 0.0971309344105678}, {"determining": "( Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + FirstVNF_Mem_Server ),Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( BR / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Max( MLU,( ( MUR + ( MLU * Min( MUM ,( MUM - MUC ) ) ) ) * ( CS / MUC ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + RCSe ),RCSe ) )", "obj1": 0.9176245210727969, "obj2": 0.030969226974802474}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Const + Min( DDR ,( Const / DDR ) ) ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC * CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( ( ( MUR * MUM ) + MUC ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.8295019157088123, "obj2": 0.07171119128925844}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06524520553280583}, {"determining": "( Max( ( ( CRS - ( CRS + FirstVNF_Mem ) ) - ACS ),Min( ACS ,( FirstVNF_RAM * Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( CRS - FirstVNF_Mem_Server ) ) ) ) ) - ( CRS * ( Min( RRS ,CRS ) + ( Max( BR,( Max( FirstVNF_CPU,BR ) + MDR ) ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Min( MLU ,Min( RMSe ,RMSe ) ) + Min( MUC ,MUM ) ) ) ) - ( ( RRSe * RMSe ) * ( ( Min( RRSe ,RCSe ) * ( ( Min( MUC ,Min( MUR ,CS ) ) + DS ) * ( MLU - Min( MUR ,DS ) ) ) ) / MUC ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07050694782750502}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + Max( ( RMSe + MUM ),( MUC / Min( ( MUR * MLU ) ,CS ) ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9540229885057471, "obj2": 0.019502493460913123}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) )", "choosing": "( ( MLU + ( DS + ( DS / ( RCSe + CS ) ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9808429118773946, "obj2": 0.006736149712332972}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( Max( ( MLU + MUR ),( CS - MLU ) ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.9444444444444444, "obj2": 0.023059952420162448}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( MUR,( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.7758620689655172, "obj2": 0.10078104751350285}, {"determining": "( Max( Const,Min( ACS ,Max( FirstVNF_Mem_Server,MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,( Max( MDR,MDR ) * BR ) ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,( Const * BR ) ) ),MRS ) ) ) ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.7662835249042146, "obj2": 0.10465008549196562}, {"determining": "( Max( CRS,Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( ( MUR - RCSe ) + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ) * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8754789272030651, "obj2": 0.050893545581499826}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.0838111986024102}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( MUR + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7854406130268199, "obj2": 0.09332364900242912}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09570252328162027}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( RMSe,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0036169208543206776}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.03431509435669346}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),FirstVNF_CPU_Server ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Min( DS ,( RRSe * ( ( MUR - RCSe ) + ( DS / Max( RMSe,RCSe ) ) ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.6475095785440613, "obj2": 0.22279458187333406}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) )", "choosing": "Max( Max( Max( MUR,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.8735632183908046, "obj2": 0.052193304956882514}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8180076628352491, "obj2": 0.07599868657690277}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.0838111986024102}, {"determining": "( Max( PN,Min( Min( BR ,CRS ) ,ACS ) ) - ( ARS * ( ( Const * RRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( ( ( RCSe - Min( RCSe ,MUC ) ) + RRSe ) + RCSe ) / MUC ) - MUM ) )", "obj1": 0.9846743295019157, "obj2": 0.00602977224548534}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7950191570881227, "obj2": 0.08839061791915169}, {"determining": "( Max( Const,Min( Max( ( Const + FirstVNF_CPU_Server ),CRS ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( RRS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( DS ,MUC ) * ( MUM * ( ( Max( CS,CS ) - ( RMSe / MUM ) ) + MUM ) ) ) ,MUC ) ) )", "obj1": 0.8620689655172413, "obj2": 0.05600016840138507}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( Max( ( RRSe + RCSe ),RCSe ) ,( RRSe * ( DS + ( DS / ( RCSe + CS ) ) ) ) ) - MLU ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.0041674221421366545}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / MLU ) ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9501915708812261, "obj2": 0.020406713855227503}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.008029670277536378}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( Const + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( MUC + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7490421455938697, "obj2": 0.11239193351938356}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03600578245593231}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08873271143862685}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.9578544061302682, "obj2": 0.015340377078364593}, {"determining": "( Max( Const,Min( Min( ACS ,Max( MRS,MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( PN * DDR ) ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Min( ( ( ( MLU / MUM ) / ( CS / RRSe ) ) + MUM ) ,MUC ) )", "obj1": 0.975095785440613, "obj2": 0.008029670277536378}, {"determining": "( Max( ( Const / FirstVNF_RAM ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( RCSe / ( MUM + ( CS * RRSe ) ) ) - RCSe ),MLU ) + ( MUM + MUC ) )", "obj1": 0.946360153256705, "obj2": 0.020548335127862746}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) * ( DS * Max( RMSe,CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,( RCSe + CS ) ) ) )", "obj1": 0.9559386973180076, "obj2": 0.015673132527462982}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - PN ) ) ) / Min( CRS ,ARS ) ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( CS * ( CS / MUC ) ) ) - Max( ( RRSe + ( ( MUR / MUR ) * RMSe ) ),RCSe ) )", "obj1": 0.8869731800766284, "obj2": 0.046742643384165054}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09346581991767396}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( MUC + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7490421455938697, "obj2": 0.11239193351938356}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ARS ,Max( FirstVNF_CPU_Server,ACS ) ) * ( ( RRS * FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( Max( MUC,CS ) - MUC ) ) )", "obj1": 0.8831417624521073, "obj2": 0.04735374200232641}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,Max( MUM,CS ) ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012358432257215071}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,( ( ARS + Const ) - ( ( PN / AMS ) - ( RRS * FirstVNF_RAM_Server ) ) ) ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe * ( MUC / Min( CS ,CS ) ) ) + MLU ) - Max( CS,MUM ) )", "obj1": 0.9386973180076629, "obj2": 0.023349521524239657}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8563218390804598, "obj2": 0.060336069082915986}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.024322111617697036}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.8601532567049809, "obj2": 0.05706929875350839}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9655172413793104, "obj2": 0.011951553280254504}, {"determining": "( Max( Const,Min( ACS ,( Max( CRS,DDR ) - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( RRSe + RCSe ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013622053165598558}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( Max( ( ( RMSe * MUM ) / Min( ( ( MUR / RCSe ) + ( MUM / CS ) ) ,RMSe ) ),( MUC * DS ) ) ,CS ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + MLU ),RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03137451459063307}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( BR - FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "( Max( ( RRSe + Min( ( MUC * ( MUR * MUC ) ) ,RCSe ) ),RCSe ) - ( MLU + ( MUC * ( MUC / ( Min( MUM ,RMSe ) - ( MUC + ( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.7720306513409961, "obj2": 0.10273002531510218}, {"determining": "( Max( Const,( ACS * Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * CRS ) ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( PN - ( ACS - CRS ) ) ) * MDR ) )", "choosing": "( ( ( Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) * ( RMSe * RMSe ) ) / DS ) - ( MLU + ( MLU * ( MUC / CS ) ) ) )", "obj1": 0.8563218390804598, "obj2": 0.060336069082915986}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.7701149425287356, "obj2": 0.10412740617893401}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8199233716475096, "obj2": 0.07536923808102579}], "11": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( BR - FirstVNF_CPU ),AMS ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUM ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( Const * FirstVNF_RAM_Server ) + ( Max( RRS,AMS ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),BR ) ) ) ) - ( Max( BR,Min( ( DDR + FirstVNF_Mem_Server ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUM / Max( RRSe,Min( RRSe ,MUC ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe - MUR ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) + ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "Min( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,PN ) ,( CRS - MRS ) )", "choosing": "( Max( ( MUC * ( MUC / CS ) ),RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( MUM ,RMSe ) - Max( ( Min( MLU ,CS ) * RCSe ),RCSe ) ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.6532567049808429, "obj2": 0.20521278844456173}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Const + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6302681992337165, "obj2": 0.22510427031110822}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM / FirstVNF_Mem ),AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( Max( RMSe,CS ) + DS ) ) ) ),RCSe )", "obj1": 0.6992337164750958, "obj2": 0.15371480122308787}, {"determining": "( Max( FirstVNF_Mem_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( RCSe * Min( ( MLU + MUR ) ,( ( MUR - RCSe ) / ( ( Max( RCSe,RMSe ) + ( ( MLU + MLU ) + MUC ) ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.6781609195402298, "obj2": 0.17393134541138783}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6168582375478927, "obj2": 0.23325540738797443}, {"determining": "( Max( ( BR - FirstVNF_CPU ),AMS ) - Min( ( PN + ARS ) ,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( Max( MUM,Min( MUM ,MUC ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( MLU - DS ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6819923371647509, "obj2": 0.1567130252540448}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( Min( Min( ( RRS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( ( Max( Max( MUM,Min( RCSe ,DS ) ),MUM ) + Max( ( RRSe + ( MUR / MUR ) ),RCSe ) ) / MUC ),( MUC / ( Min( RRSe ,MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( DS + ( DS / ( RCSe + CS ) ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) ) ) )", "obj1": 0.7701149425287356, "obj2": 0.10259274355647319}, {"determining": "Min( Min( MRS ,FirstVNF_CPU ) ,Max( Max( ARS,CRS ),( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / Min( MUC ,( MUC + ( ( ( ( RMSe + RCSe ) - ( CS + RRSe ) ) * MUM ) / ( MLU - ( Max( MUC,RRSe ) / DS ) ) ) ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2916356701589698}, {"determining": "( Max( ( PN + ARS ),( MRS / Min( Min( AMS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) - ( Const * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + MLU ) * RRSe ),Max( ( Max( MUC,DS ) * ( RMSe + RCSe ) ),( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) / ( ( MUC * DS ) - ( MLU * MUR ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18718090786849267}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Max( ( ( RCSe / ( MUM + ( CS * RRSe ) ) ) - RCSe ),MLU ) + ( MUM + MUC ) )", "obj1": 0.7183908045977011, "obj2": 0.1347864815707925}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7011494252873564, "obj2": 0.13914577335419973}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( MRS,( MDR / RRS ) ) * ( ( Const - BR ) * AMS ) ) ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( RRS * ( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( ( ( MUC / ( Max( MUR,MUR ) * MUR ) ) + RMSe ) ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) - Min( MUM ,RCSe ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "Min( Min( Max( BR,( ( BR + BR ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,Max( MLU,RCSe ) ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MUC ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( ( FirstVNF_CPU_Server * ( RRS / FirstVNF_RAM ) ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( Min( RRSe ,( MLU - CS ) ),RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6800766283524904, "obj2": 0.16872947618166378}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.1381801965036112}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.11608231144882791}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + Const ),Max( FirstVNF_RAM_Server,AMS ) ) ) ,( CRS - MRS ) )", "choosing": "( ( ( MUM * MUM ) - ( Max( DS,MUR ) - MUC ) ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( ( MUR - MUM ) ,RMSe ) - Max( RCSe,( Min( MLU ,CS ) * ( RRSe - CS ) ) ) ) ) + ( DS + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2707901428799918}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Min( ( Min( ( MUR / MLU ) ,( RRSe - MUR ) ) - MUM ) ,( CS - MUR ) ),Max( ( RMSe + MUM ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.6475095785440613, "obj2": 0.22279458187333406}, {"determining": "( ( MDR * ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( Max( Max( ACS,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( Min( ( ( CS + ( RMSe - MLU ) ) - RCSe ) ,MUC ) * MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.07975432238934056}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7260536398467433, "obj2": 0.12300475504690163}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MDR ) ) * ( Min( ( ACS - ARS ) ,FirstVNF_Mem_Server ) - DDR ) ) )", "choosing": "( Min( MUM ,MUR ) - Max( ( ( CS / MUM ) * Max( ( ( RRSe / ( RCSe - RCSe ) ) / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( MLU + ( ( MUM / MLU ) + DS ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.2732580772557306}, {"determining": "Min( ( CRS - FirstVNF_RAM_Server ) ,Min( Min( ( ( Const - ARS ) - Min( RRS ,CRS ) ) ,AMS ) ,Const ) )", "choosing": "( Min( ( DS - MUR ) ,RMSe ) - Max( ( Min( MUM ,CS ) * MLU ),( RRSe / MUM ) ) )", "obj1": 0.6494252873563219, "obj2": 0.21893995182885176}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.042321277505569486}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.867816091954023, "obj2": 0.05201848209630663}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5881226053639846, "obj2": 0.2794063779823552}, {"determining": "( Max( Const,( ACS * Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * CRS ) ) ) ) - ( ( Min( RRS ,FirstVNF_RAM_Server ) + ( PN - ( ACS - CRS ) ) ) * MDR ) )", "choosing": "( ( ( Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) * ( RMSe * RMSe ) ) / DS ) - ( MLU + ( MLU * ( MUC / CS ) ) ) )", "obj1": 0.5862068965517241, "obj2": 0.28362499903136523}, {"determining": "( ( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) ) * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,MUC ) ) ) ) ) - MLU ) + ( ( ( CS - MUR ) - ( MUM + CS ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8486590038314177, "obj2": 0.06121943610536466}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server + Max( FirstVNF_CPU,BR ) ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( MLU + ( MUC * ( MUC / CS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( Max( ( MUM / RRSe ),MLU ) + RCSe ),RCSe ) )", "obj1": 0.8754789272030651, "obj2": 0.04986658288992427}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03600578245593231}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.8352490421455939, "obj2": 0.06817225570187212}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),Max( ( BR + FirstVNF_RAM ),( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( MLU + ( ( ( ( ( CS * MLU ) + Min( DS ,MUC ) ) - ( ( MLU + MLU ) / MUM ) ) / MLU ) + DS ) ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7337164750957854, "obj2": 0.11971631591396634}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06524520553280583}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.5632183908045977, "obj2": 0.3014284896496565}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,PN ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,MLU ) ) ) / RRSe ),Max( ( MUR + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + Min( ( ( MUM / MLU ) - ( ( RCSe + RMSe ) / MUM ) ) ,RCSe ) ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.789272030651341, "obj2": 0.09066502572706929}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Min( MDR ,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Min( ACS ,( FirstVNF_CPU_Server + MRS ) ) + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.7988505747126436, "obj2": 0.08472878160517092}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.12889407921484566}, {"determining": "Min( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.814176245210728, "obj2": 0.07594354914421939}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5804597701149425, "obj2": 0.2868867546329518}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Const + Min( DDR ,( Const / DDR ) ) ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC * CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( ( ( MUR * MUM ) + MUC ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.8295019157088123, "obj2": 0.07171119128925844}, {"determining": "( ( Const * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( CRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.735632183908046, "obj2": 0.11923488693759353}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( MUR - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9310344827586207, "obj2": 0.026285834007298933}, {"determining": "( Max( FirstVNF_RAM,Min( ACS ,( FirstVNF_Mem_Server - Max( FirstVNF_Mem,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ) - Max( Max( ( MRS * CRS ),Min( MDR ,MDR ) ),( ( RRS * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),Max( Min( MUR ,DS ),( DS * ( ( Min( CS ,RRSe ) / MUR ) - RMSe ) ) ) ) )", "obj1": 0.9252873563218391, "obj2": 0.028996777470002164}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8563218390804598, "obj2": 0.060336069082915986}, {"determining": "( Max( ( Const / FirstVNF_RAM ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( RCSe / ( MUM + ( CS * RRSe ) ) ) - RCSe ),MLU ) + ( MUM + MUC ) )", "obj1": 0.946360153256705, "obj2": 0.020548335127862746}, {"determining": "( Max( Const,( ACS + ( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_Mem - ARS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,( ( MLU + RCSe ) + MUM ) ) ) ) ) - Max( ( ( MUC / ( MLU + MUM ) ) + DS ),RCSe ) )", "obj1": 0.8888888888888888, "obj2": 0.045787587835516744}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( RMSe - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014571355174995887}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8199233716475096, "obj2": 0.07536923808102579}, {"determining": "( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( MUR,( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),( DS + ( DS / Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.055305055145158155}, {"determining": "( Max( Const,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( PN,DDR ) * ( ( Const * Min( AMS ,PN ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUC - ( MUC / ( CS * RRSe ) ) ) ) - Max( RCSe,( MUC - CS ) ) )", "obj1": 0.9521072796934866, "obj2": 0.01699786729652205}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( Max( ( RRSe + RCSe ),RCSe ) ,( RRSe * ( DS + ( DS / ( RCSe + CS ) ) ) ) ) - MLU ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.0041674221421366545}, {"determining": "( Max( Const,Min( ACS ,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,( AMS * RRS ) ) ) ) ,( FirstVNF_CPU - MDR ) ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * ( MUC / CS ) ) / MLU ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,( DS * RCSe ) ) * ( MLU + ( MUC * ( MUC / CS ) ) ) ) ,MUC ) ) )", "obj1": 0.9540229885057471, "obj2": 0.015080118760709919}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09570252328162027}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + Max( ( RMSe + MUM ),( MUC / ( Max( DS,RRSe ) / MLU ) ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9501915708812261, "obj2": 0.020406713855227503}, {"determining": "( Max( ( ( CRS - ( CRS + FirstVNF_Mem ) ) - ACS ),Min( ACS ,( FirstVNF_RAM * Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( CRS - FirstVNF_Mem_Server ) ) ) ) ) - ( CRS * ( Min( RRS ,CRS ) + ( Max( BR,( Max( FirstVNF_CPU,BR ) + MDR ) ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Min( MLU ,Min( RMSe ,RMSe ) ) + Min( MUC ,MUM ) ) ) ) - ( ( RRSe * RMSe ) * ( ( Min( RRSe ,RCSe ) * ( ( Min( MUC ,Min( MUR ,CS ) ) + DS ) * ( MLU - Min( MUR ,DS ) ) ) ) / MUC ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07050694782750502}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.03431509435669346}, {"determining": "Min( ( ACS / FirstVNF_RAM_Server ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / ( RRSe + CS ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.12889407921484566}, {"determining": "( ( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) ) * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( RRSe * ( DS + ( ( DS - RMSe ) / Max( RMSe,RCSe ) ) ) ),( ( MLU + MLU ) * RRSe ) )", "obj1": 0.8831417624521073, "obj2": 0.04732054161810937}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( BR / Min( ARS ,PN ) ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( ( CS * MLU ) * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.9272030651340997, "obj2": 0.02897212281601279}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.0838111986024102}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( MUR,( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.7758620689655172, "obj2": 0.10078104751350285}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9827586206896551, "obj2": 0.005478784505020727}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.8237547892720306, "obj2": 0.07280873537932239}, {"determining": "Min( Min( ( ( Max( FirstVNF_Mem_Server,( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + ACS ) ) - ( RRS / AMS ) ) / ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) * Max( FirstVNF_Mem_Server,BR ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,Min( MLU ,MUM ) ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ) - MUR ) * RCSe ) ) ) )", "obj1": 0.6494252873563219, "obj2": 0.21893995182885176}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU_Server + ARS ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * MDR ) ),MRS ) ) ) ) )", "choosing": "( ( DS + Min( MUM ,MLU ) ) - ( ( RRSe * RMSe ) * Min( ( Min( RCSe ,( ( MUM / MLU ) - Min( ( RCSe + RMSe ) ,MUM ) ) ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.7777777777777778, "obj2": 0.0971309344105678}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08873271143862685}, {"determining": "( Max( Const,Min( Min( ACS ,Max( MRS,MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( PN * DDR ) ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Min( ( ( ( MLU / MUM ) / ( CS / RRSe ) ) + MUM ) ,MUC ) )", "obj1": 0.975095785440613, "obj2": 0.008029670277536378}, {"determining": "( Max( ( CRS / Const ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUM * ( Min( CS ,( DS - DS ) ) / MUC ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.9348659003831418, "obj2": 0.025458548792848673}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( Max( ( ( RMSe * MUM ) / Min( ( ( MUR / RCSe ) + ( MUM / CS ) ) ,RMSe ) ),( MUC * DS ) ) ,CS ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + MLU ),RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03137451459063307}, {"determining": "( Min( ACS ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - MDR ) ) - Max( CRS,DDR ) )", "choosing": "( ( MLU - ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * Max( ( ( DS + RRSe ) / CS ),( CS / Min( MUM ,MUM ) ) ) ) ) ,MUC ) ) )", "obj1": 0.842911877394636, "obj2": 0.06326845248834666}, {"determining": "( Max( Const,Min( ACS ,( Max( CRS,DDR ) - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( RRSe + RCSe ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013622053165598558}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( ( ( MUM / MLU ) - ( ( RCSe + RMSe ) / MUM ) ) ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.7739463601532567, "obj2": 0.10106653666045924}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.11608231144882791}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + RCSe ),RCSe ) )", "obj1": 0.9176245210727969, "obj2": 0.030969226974802474}, {"determining": "( Max( ( Const / FirstVNF_RAM ),Min( ACS ,( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( FirstVNF_RAM_Server * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( Max( ( RRSe + RCSe ),RCSe ) / ( MUM + ( CS * RRSe ) ) ) - RCSe ),MLU ) + ( MUM + MUC ) )", "obj1": 0.9923371647509579, "obj2": 0.0028305533549697532}, {"determining": "( Max( CRS,Max( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( ( MUR - RCSe ) + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ) * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.04655059777113764}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( BR - ( ( ACS * ACS ) / RRS ) ) ) ,( FirstVNF_CPU_Server - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( RRSe + Max( MLU,( RRSe / ( ( MUR / MLU ) / MUR ) ) ) ) + ( ( MUC - MUR ) * Min( Min( MUM ,RMSe ) ,Max( ( Min( MLU ,CS ) * RCSe ),RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.9406130268199234, "obj2": 0.021956594426544407}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Max( ( MDR + ARS ),BR ) * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.9904214559386973, "obj2": 0.003025264154838842}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.008029670277536378}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) )", "choosing": "( ( MLU + ( DS + ( DS / ( RCSe + CS ) ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9808429118773946, "obj2": 0.006736149712332972}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09346581991767396}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7950191570881227, "obj2": 0.08839061791915169}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.0838111986024102}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012358432257215071}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,( ( ARS + Const ) - ( ( PN / AMS ) - ( RRS * FirstVNF_RAM_Server ) ) ) ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe * ( MUC / Min( CS ,CS ) ) ) + MLU ) - Max( CS,MUM ) )", "obj1": 0.9386973180076629, "obj2": 0.023349521524239657}], "12": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( CRS,( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( BR - FirstVNF_CPU ),AMS ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUM ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,PN ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6455938697318008, "obj2": 0.20341992028048775}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15293080605683004}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Const + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6302681992337165, "obj2": 0.22510427031110822}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09998870653780485}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6168582375478927, "obj2": 0.23325540738797443}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6839080459770115, "obj2": 0.14977595444317193}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),( MUM / Max( MUC,MLU ) ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.14681965212045098}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.2561583964187683}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.11608231144882791}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( ( ( MUM / MLU ) - ( ( RCSe + RMSe ) / MUM ) ) ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.7126436781609196, "obj2": 0.13458741242004627}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,( Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( MUR - ( MUC + ( MUC / RMSe ) ) ) / Max( Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ),Min( MLU ,( RCSe / MUR ) ) ) ) + DS ) + MLU ) ) )", "obj1": 0.6302681992337165, "obj2": 0.22510427031110822}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU_Server + ARS ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * MDR ) ),MRS ) ) ) ) )", "choosing": "( ( DS + Min( MUM ,MLU ) ) - ( ( RRSe * RMSe ) * Min( ( Min( RCSe ,( ( MUM / MLU ) - Min( ( RCSe + RMSe ) ,MUM ) ) ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.7777777777777778, "obj2": 0.0971309344105678}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,RCSe ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7279693486590039, "obj2": 0.11906976383800486}, {"determining": "( ( MDR * ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( Max( Max( ACS,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( Min( ( ( CS + ( RMSe - MLU ) ) - RCSe ) ,MUC ) * MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.07975432238934056}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + Const ),Max( FirstVNF_RAM_Server,AMS ) ) ) ,( CRS - MRS ) )", "choosing": "( ( ( MUM * MUM ) - ( Max( DS,MUR ) - MUC ) ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( ( MUR - MUM ) ,RMSe ) - Max( RCSe,( Min( MLU ,CS ) * ( RRSe - CS ) ) ) ) ) + ( DS + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2707901428799918}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / MLU ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2916356701589698}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MDR ) ) * ( Min( ( ACS - ARS ) ,FirstVNF_Mem_Server ) - DDR ) ) )", "choosing": "( Min( MUM ,MUR ) - Max( ( ( CS / MUM ) * Max( ( ( RRSe / ( RCSe - RCSe ) ) / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( MLU + ( ( MUM / MLU ) + DS ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.2732580772557306}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.12889407921484566}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.867816091954023, "obj2": 0.05201848209630663}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.1381801965036112}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7260536398467433, "obj2": 0.12300475504690163}, {"determining": "Min( Min( ( ( MDR / ARS ) + RRS ) ,FirstVNF_Mem_Server ) ,Max( Max( Max( Const,FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( Min( MUM ,RMSe ) - MUM ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Max( CS,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server + Max( FirstVNF_CPU,BR ) ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( MLU + ( MUC * ( MUC / CS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,PN ) ,( CRS - ( RRS * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,Max( Min( MUR ,DS ),( DS * ( ( Min( CS ,RRSe ) / MUR ) - RMSe ) ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.30032797366898145}, {"determining": "Min( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.814176245210728, "obj2": 0.07594354914421939}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( Max( ( MUM / RRSe ),MLU ) + RCSe ),RCSe ) )", "obj1": 0.8754789272030651, "obj2": 0.04986658288992427}, {"determining": "( Max( Const,Max( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) - Max( CRS,DDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( ( MUR - RCSe ) + ( DS / Max( RMSe,RCSe ) ) ) ) ) - MLU ) + ( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ) * ( ( CS - MUM ) - ( CS - MUR ) ) ) ) ,( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.8563218390804598, "obj2": 0.05828165976252992}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7011494252873564, "obj2": 0.13914577335419973}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Min( MDR ,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Min( ACS ,( FirstVNF_CPU_Server + MRS ) ) + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.8007662835249042, "obj2": 0.08287317407674605}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,Min( MUM ,RMSe ) ) ) ) / RRSe ),Max( ( MUR + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + Min( ( ( MUM / MLU ) - ( ( RCSe + RMSe ) / MUM ) ) ,RCSe ) ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.789272030651341, "obj2": 0.09062442985624308}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),MDR ) )", "choosing": "Min( ( ( Min( DS ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.02008881142148807}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03600578245593231}, {"determining": "( ( ( MRS / AMS ) + FirstVNF_Mem_Server ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( MLU + Min( MUC ,( Max( RCSe,( ( ( DS - MUC ) + Max( RRSe,DS ) ) * DS ) ) / CS ) ) ) - Max( RCSe,( Min( MLU ,MUM ) + MUM ) ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( MDR - MDR ) - MDR ) ) * ( MRS * ARS ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( RRSe ,MUM ) - Max( CS,( ( Max( ( ( Max( MUC,RMSe ) / MUM ) - MUR ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.8352490421455939, "obj2": 0.06815922684248822}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06524520553280583}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),Max( DDR,BR ) ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5842911877394636, "obj2": 0.28271121581426534}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.5632183908045977, "obj2": 0.3014284896496565}, {"determining": "Min( ( ACS / FirstVNF_RAM_Server ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / ( RRSe + CS ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ( CRS - MRS ) / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - Min( CS ,Min( MLU ,MUM ) ) ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8180076628352491, "obj2": 0.0746350024586682}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + RCSe ),RCSe ) )", "obj1": 0.9176245210727969, "obj2": 0.030969226974802474}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Const + Min( DDR ,( Const / DDR ) ) ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "Max( ( ( ( RCSe * MLU ) + ( MUC * CS ) ) - Max( ( MUC * DS ),( RCSe - RMSe ) ) ),( ( ( MUR * MUM ) + MUC ) * ( ( ( ( RRSe / MUR ) + MUR ) * RMSe ) + MUM ) ) )", "obj1": 0.8295019157088123, "obj2": 0.07171119128925844}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5881226053639846, "obj2": 0.2794063779823552}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5804597701149425, "obj2": 0.284153529345471}, {"determining": "( Max( FirstVNF_RAM,Min( ACS ,( FirstVNF_Mem_Server - Max( FirstVNF_Mem,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) ) - Max( Max( ( MRS * CRS ),Min( MDR ,MDR ) ),( ( RRS * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),Max( Min( MUR ,DS ),( DS * ( ( Min( CS ,RRSe ) / MUR ) - RMSe ) ) ) ) )", "obj1": 0.9252873563218391, "obj2": 0.028996777470002164}, {"determining": "( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( MUR,( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),( DS + ( DS / Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.055305055145158155}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8544061302681992, "obj2": 0.06034570980378956}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( MUR - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9310344827586207, "obj2": 0.025645517022919458}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( Max( Const,Min( ACS ,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,( AMS * RRS ) ) ) ) ,( FirstVNF_CPU - MDR ) ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * ( MUC / CS ) ) / MLU ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,( DS * RCSe ) ) * ( MLU + ( MUC * ( MUC / CS ) ) ) ) ,MUC ) ) )", "obj1": 0.9540229885057471, "obj2": 0.015080118760709919}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( MRS,( MDR / RRS ) ) * ( ( Const - BR ) * AMS ) ) ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( RRS * ( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( ( ( MUC / ( Max( MUR,MUR ) * MUR ) ) + RMSe ) ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) - Min( MUM ,RCSe ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( ( ( CRS - ( CRS + FirstVNF_Mem ) ) - ACS ),Min( ACS ,( FirstVNF_RAM * Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( CRS - FirstVNF_Mem_Server ) ) ) ) ) - ( CRS * ( Min( RRS ,CRS ) + ( Max( BR,( Max( FirstVNF_CPU,BR ) + MDR ) ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Min( MLU ,Min( RMSe ,RMSe ) ) + Min( MUC ,MUM ) ) ) ) - ( ( RRSe * RMSe ) * ( ( Min( RRSe ,RCSe ) * ( ( Min( MUC ,Min( MUR ,CS ) ) + DS ) * ( MLU - Min( MUR ,DS ) ) ) ) / MUC ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07050694782750502}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.042321277505569486}, {"determining": "Min( Min( Max( BR,( ( BR + BR ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,Max( MLU,RCSe ) ),MUM ) + CS ) ),( MUC / ( ( RRSe * MUR ) / MUC ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( BR / Min( ARS ,PN ) ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( ( CS * MLU ) * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.9272030651340997, "obj2": 0.02897212281601279}, {"determining": "( Max( Const,Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( PN,DDR ) * ( ( Const * Min( AMS ,PN ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUC - ( MUC / ( CS * RRSe ) ) ) ) - Max( RCSe,( MUC - CS ) ) )", "obj1": 0.9521072796934866, "obj2": 0.01699786729652205}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.12889407921484566}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( Min( Min( ( RRS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( ( Max( Max( MUM,Min( RCSe ,DS ) ),MUM ) + Max( ( RRSe + ( MUR / MUR ) ),RCSe ) ) / MUC ),( MUC / ( Min( RRSe ,MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9827586206896551, "obj2": 0.005478784505020727}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MLU,( RRSe / RCSe ) ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + DS ),RCSe ) )", "obj1": 0.896551724137931, "obj2": 0.04176592907936205}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( RMSe - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014571355174995887}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7011494252873564, "obj2": 0.13914577335419973}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09346581991767396}, {"determining": "( ( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) ) * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,MUC ) ) ) ) ) - MLU ) + ( ( ( CS - MUR ) - ( MUM + CS ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8486590038314177, "obj2": 0.06121943610536466}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( Max( ( ( RMSe * MUM ) / Min( ( ( MUR / RCSe ) + ( MUM / CS ) ) ,RMSe ) ),( MUC * DS ) ) ,CS ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + MLU ),RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03137451459063307}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,ACS ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( ( ( CS + MUM ) + MUC ) + DS ),RCSe ) )", "obj1": 0.9329501915708812, "obj2": 0.024851949864584798}, {"determining": "( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.842911877394636, "obj2": 0.06326845248834666}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( MUC + RCSe ),RCSe ) ) * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( ( ARS / Min( FirstVNF_Mem ,RRS ) ),Const ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - Max( RRS,( ARS / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MLU * MUM ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUC * ( ( Max( RMSe,RCSe ) * MUC ) - RRSe ) ) - RRSe ) / MUR ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.8237547892720306, "obj2": 0.07280873537932239}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Max( ( MDR + ARS ),BR ) * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.9904214559386973, "obj2": 0.0029133480155597294}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7413793103448276, "obj2": 0.11608231144882791}, {"determining": "( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( MUR,( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),( DS + ( DS / Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.055305055145158155}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,PN ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( MUM ,RMSe ) - Max( ( Min( MLU ,CS ) * RCSe ),RCSe ) ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "Min( Min( MRS ,FirstVNF_CPU ) ,Max( Max( ARS,CRS ),( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM / Min( MUC ,( MUC + ( ( ( ( RMSe + RCSe ) - ( CS + RRSe ) ) * MUM ) / ( MLU - ( Max( MUC,RRSe ) / DS ) ) ) ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2916356701589698}, {"determining": "( ( ( ( BR / Min( ARS ,PN ) ) - ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / Min( FirstVNF_CPU ,( PN + Max( MDR,BR ) ) ) ) ) * ( BR - ACS ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( Max( ( RRSe + RCSe ),RCSe ) ,( RRSe * ( DS + ( DS / ( RCSe + CS ) ) ) ) ) - MLU ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) ) )", "obj1": 0.9367816091954023, "obj2": 0.02365259320494764}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) - Max( ( FirstVNF_RAM * DDR ),ACS ) )", "choosing": "Min( ( ( MUC + RCSe ) / ( ( ( MUM - CS ) - ( MUR - CS ) ) * MUC ) ) ,( RRSe - ( RCSe / ( ( ( RMSe * RCSe ) / Min( ( ( RCSe / MLU ) * Min( RRSe ,CS ) ) ,RCSe ) ) / ( Min( Max( MLU,RCSe ) ,CS ) / DS ) ) ) ) )", "obj1": 0.9789272030651341, "obj2": 0.007885697266909499}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.8237547892720306, "obj2": 0.07280873537932239}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.008029670277536378}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09570252328162027}, {"determining": "( ( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Max( CRS,DDR ) ) * FirstVNF_RAM_Server ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,MUC ) ) ) ) ) - MLU ) + ( ( ( CS - MUR ) - ( MUM + CS ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8486590038314177, "obj2": 0.06121943610536466}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( MLU + ( ( ( ( ( RRSe * MLU ) + Min( DS ,MUC ) ) - ( ( MLU + MLU ) / MUM ) ) / MLU ) + DS ) ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08682606678706867}, {"determining": "( Max( Const,( ACS + ( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_Mem - ARS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,( ( MLU + RCSe ) + MUM ) ) ) ) ) - Max( ( ( MUC / ( MLU + MUM ) ) + DS ),RCSe ) )", "obj1": 0.8888888888888888, "obj2": 0.045787587835516744}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5881226053639846, "obj2": 0.2794063779823552}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( MLU + ( ( ( ( ( CS * MLU ) + Min( DS ,MUC ) ) - ( ( MLU + MLU ) / MUM ) ) / MLU ) + DS ) ) ) )", "obj1": 0.7950191570881227, "obj2": 0.08688582663436109}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( RRSe + RCSe ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.9425287356321839, "obj2": 0.021482350796741174}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08873271143862685}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.9521072796934866, "obj2": 0.01699786729652205}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,( ( ARS + Const ) - ( ( PN / AMS ) - ( RRS * FirstVNF_RAM_Server ) ) ) ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe * ( MUC / Min( CS ,CS ) ) ) + MLU ) - Max( CS,MUM ) )", "obj1": 0.9386973180076629, "obj2": 0.023349521524239657}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.03431509435669346}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MUM + MUC ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09346581991767396}, {"determining": "( Max( Const,Min( Min( ACS ,Max( MRS,MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( PN * DDR ) ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Min( ( ( ( MLU / MUM ) / ( CS / RRSe ) ) + MUM ) ,MUC ) )", "obj1": 0.975095785440613, "obj2": 0.008029670277536378}], "13": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( MUM + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( CRS,( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15293080605683004}, {"determining": "( Max( ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,PN ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6455938697318008, "obj2": 0.20341992028048775}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),FirstVNF_CPU_Server ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( ( RRS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) + RCSe ),( ( ( ( ( MUM / MLU ) - ( MUC + ( MUC / RMSe ) ) ) / Max( RMSe,MUR ) ) + ( MLU - RRSe ) ) + MLU ) ) )", "obj1": 0.6436781609195402, "obj2": 0.21872840371746566}, {"determining": "( Max( ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,PN ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6455938697318008, "obj2": 0.20341992028048775}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6839080459770115, "obj2": 0.14977595444317193}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7375478927203065, "obj2": 0.11354043275482692}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_RAM ) ) + Const ),Max( ( ACS - ( Max( ( DDR - FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,Max( Max( RMSe,MUM ),MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( Max( ( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) / BR ),( MDR + FirstVNF_RAM ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( Min( FirstVNF_RAM ,MRS ) / Const ) * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( ( DS + MUM ) * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS / MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( RMSe / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.27051254331134666}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.2561583964187683}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.14176857186837452}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6168582375478927, "obj2": 0.23325540738797443}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,RRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * ( DS + ( MUM / Max( RCSe,MLU ) ) ) ) ) ),Min( ( ( RCSe - RCSe ) - RCSe ) ,RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.13271755359784082}, {"determining": "( Max( Const,( Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU + ( MUC - ( MUC / ( CS * RRSe ) ) ) ) - Max( RCSe,( MUC - CS ) ) )", "obj1": 0.6226053639846744, "obj2": 0.22820145720188892}, {"determining": "Min( Min( ( Max( Const,Min( ( DDR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( CRS + FirstVNF_Mem ) * FirstVNF_Mem ) * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS * BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + ( DS * CS ) ) - Max( ( Max( ( RMSe / Max( ( MUM + RMSe ),( CS + MUM ) ) ),Max( MUC,MUR ) ) * RRSe ),( ( RCSe * DS ) + MLU ) ) )", "obj1": 0.9233716475095786, "obj2": 0.02847432312314886}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.1381801965036112}, {"determining": "( Max( Const,Min( ( BR - PN ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( ARS ,PN ) / BR ) ,FirstVNF_RAM_Server ) / ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RMSe ) - MUC ) ) )", "obj1": 0.7720306513409961, "obj2": 0.09899566454366777}, {"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09998870653780485}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.13078176632590952}, {"determining": "Min( Min( ( ( MDR / ARS ) + RRS ) ,FirstVNF_Mem_Server ) ,Max( Max( Max( Const,FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( Min( MUM ,RMSe ) - MUM ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Max( CS,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( ( MDR * ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( Max( Max( ACS,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( Min( ( ( CS + ( RMSe - MLU ) ) - RCSe ) ,MUC ) * MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.07975432238934056}, {"determining": "( Max( Const,( Max( ( ( FirstVNF_CPU_Server * DDR ) - MDR ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Const + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( DS + ( ( ( RCSe * ( RMSe / RRSe ) ) + ( MUC * CS ) ) / Max( RMSe,MUR ) ) ) + MLU ) ) )", "obj1": 0.6302681992337165, "obj2": 0.22510427031110822}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server - MDR ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RMSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Const + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6302681992337165, "obj2": 0.22510427031110822}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7260536398467433, "obj2": 0.12300475504690163}, {"determining": "Min( ( ACS / FirstVNF_RAM_Server ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / ( RRSe + CS ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9118773946360154, "obj2": 0.03593157333443475}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( MUR ,RRSe ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.2782890261606946}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,RCSe ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7279693486590039, "obj2": 0.11906976383800486}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09998870653780485}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7241379310344828, "obj2": 0.12785205698358657}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( MUR - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9310344827586207, "obj2": 0.025645517022919458}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Min( MDR ,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Min( ACS ,( FirstVNF_CPU_Server + MRS ) ) + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.8007662835249042, "obj2": 0.08287317407674605}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.5632183908045977, "obj2": 0.3014284896496565}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ( CRS - MRS ) / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - Min( CS ,Min( MLU ,MUM ) ) ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8180076628352491, "obj2": 0.0746350024586682}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( FirstVNF_CPU_Server * AMS ) / FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUC / ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( ( MUM * Min( ( DS / MUC ) ,MUM ) ) * Min( MUC ,RCSe ) ) ,MUC ) ) )", "obj1": 0.8620689655172413, "obj2": 0.05633639093324936}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.007917754138257268}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server * CRS ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,( Min( MUC ,Min( MUR ,CS ) ) + DS ) ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.867816091954023, "obj2": 0.05201848209630663}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5804597701149425, "obj2": 0.284153529345471}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8486590038314177, "obj2": 0.06075250874780762}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8639846743295019, "obj2": 0.05410804763090177}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + RCSe ),RCSe ) )", "obj1": 0.9176245210727969, "obj2": 0.030969226974802474}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( RMSe - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.01437053841168961}, {"determining": "( Max( Const,Min( ACS ,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,( AMS * RRS ) ) ) ) ,( FirstVNF_CPU - MDR ) ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * ( MUC / CS ) ) / MLU ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,( DS * RCSe ) ) * ( MLU + ( MUC * ( MUC / CS ) ) ) ) ,MUC ) ) )", "obj1": 0.9540229885057471, "obj2": 0.015080118760709919}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,RCSe ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.6992337164750958, "obj2": 0.1399077905385411}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,PN ) + ( Max( Min( FirstVNF_CPU ,BR ),BR ) - ( RRS / ( ( ARS * FirstVNF_Mem ) / ( ACS - ( FirstVNF_RAM - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( ( RCSe / ( Max( RCSe,MUM ) * Min( CS ,RMSe ) ) ) * ( MUC * ( MUC / DS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.042321277505569486}, {"determining": "Min( Min( Max( BR,( Min( ( FirstVNF_Mem + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( RRS + ( Const * Min( AMS ,RRS ) ) ) )", "choosing": "( Min( MUM ,Max( MLU,CS ) ) - Max( ( Min( CS ,MUM ) * MUR ),( ( DS + ( MUM / MLU ) ) + ( RCSe * ( CS - RRSe ) ) ) ) )", "obj1": 0.8544061302681992, "obj2": 0.058399929018149416}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + RCSe ) ) ) - MLU ) + ( ( ( MUM - Min( CS ,Min( MLU ,MUM ) ) ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8122605363984674, "obj2": 0.07807803307186238}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) - Max( ( FirstVNF_RAM * DDR ),ACS ) )", "choosing": "Min( ( ( MUC + RCSe ) / ( ( ( MUM - CS ) - ( MUR - CS ) ) * MUC ) ) ,( RRSe - ( RCSe / ( ( ( RMSe * RCSe ) / Min( ( ( RCSe / MLU ) * Min( RRSe ,CS ) ) ,RCSe ) ) / ( Min( Max( MLU,RCSe ) ,CS ) / DS ) ) ) ) )", "obj1": 0.9789272030651341, "obj2": 0.007885697266909499}, {"determining": "( Max( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MLU,( RRSe / RCSe ) ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + DS ),RCSe ) )", "obj1": 0.896551724137931, "obj2": 0.04176592907936205}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( Max( ( MUM / RRSe ),MLU ) + RCSe ),RCSe ) )", "obj1": 0.8754789272030651, "obj2": 0.04986658288992427}, {"determining": "( Max( Const,Min( ACS ,( BR * FirstVNF_RAM ) ) ) - ( MDR * ( Min( ( Max( ( Max( DDR,BR ) + FirstVNF_Mem_Server ),Const ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * ( RRSe / DS ) ) ) - RCSe )", "obj1": 0.8831417624521073, "obj2": 0.046719747635364545}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09570252328162027}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04428268210715759}, {"determining": "( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) ) - ( MDR * ( Min( ( BR / Min( ARS ,PN ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( MUR,( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),( DS + ( ( MUM * MUR ) / Max( RMSe,DS ) ) ) ) ) )", "obj1": 0.8716475095785441, "obj2": 0.0506419866070834}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "Min( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06859447557567416}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.03431509435669346}, {"determining": "Min( Min( Const ,( BR / ( Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ),MRS ) * FirstVNF_CPU ) ) ) ,( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ACS ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( DS + ( MUM / Max( ( MUM - RRSe ),MLU ) ) ) ) ) ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),Min( Min( Min( Max( MUR,RMSe ) ,CS ) ,MUC ) ,( ( MUR - MUM ) / MUM ) ) ) )", "obj1": 0.5862068965517241, "obj2": 0.27888059753220135}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( Max( ( ( ( CS - RMSe ) / ( RCSe * Max( MLU,Min( MUM ,RMSe ) ) ) ) / RRSe ),Max( ( MUR + MUM ),( MUC / MLU ) ) ),Max( ( RMSe + Min( ( ( MUM / MLU ) - ( ( RCSe + RMSe ) / MUM ) ) ,RCSe ) ),( MUC / MLU ) ) ),RCSe )", "obj1": 0.789272030651341, "obj2": 0.09062442985624308}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( FirstVNF_Mem_Server,ARS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( ( ( MUM / MLU ) - ( ( RCSe + RMSe ) / MUM ) ) ,RCSe ) * ( ( Min( CS ,MUM ) * RCSe ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.9482758620689655, "obj2": 0.019199154528757624}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( MLU * ( ( MUM / Max( ( MUM / RRSe ),MUR ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7854406130268199, "obj2": 0.09325171206251108}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,RCSe ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7279693486590039, "obj2": 0.11906976383800486}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9827586206896551, "obj2": 0.005478784505020727}, {"determining": "( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) - Min( MDR ,( Min( Min( PN ,MDR ) ,( PN / AMS ) ) - Const ) ) )", "choosing": "( ( MLU + ( MUC * Min( MUC ,CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( ( MUM * ( RRSe / RRSe ) ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8467432950191571, "obj2": 0.06171552424660181}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),Max( DDR,BR ) ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5842911877394636, "obj2": 0.28271121581426534}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( RRSe + RCSe ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.8869731800766284, "obj2": 0.045965490937059}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.7911877394636015, "obj2": 0.09019579070079053}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( RMSe / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.004525057880414368}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( DS - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08577855452207708}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( ( Max( ( MDR + ARS ),BR ) * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.9904214559386973, "obj2": 0.0029133480155597294}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06524520553280583}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( Max( ( ( RMSe * MUM ) / Min( ( ( MUR / RCSe ) + ( MUM / CS ) ) ,RMSe ) ),( MUC * DS ) ) ,CS ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + MLU ),RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03137451459063307}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / ( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( MLU + MUC ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08688714854291152}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( MUC + RCSe ),RCSe ) ) * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "Min( Min( ( BR / ( Min( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) ,ACS ) * FirstVNF_CPU ) ) ,Const ) ,( MRS / Max( Min( ( ( ACS + ( ( AMS * Const ) + FirstVNF_CPU ) ) * BR ) ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe + Max( MUR,( Min( RRSe ,RCSe ) / MUC ) ) ) + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.8352490421455939, "obj2": 0.0657820542181702}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.7988505747126436, "obj2": 0.08321154961505321}, {"determining": "Min( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + RCSe ) ) )", "obj1": 0.8314176245210728, "obj2": 0.07047662810679006}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( ( Max( RRSe,RRSe ) + ( ( ( ( ( RMSe * RRSe ) + MUC ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( RRSe / MLU ) ) ) ) - Max( MUR,RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.8295019157088123, "obj2": 0.07145200046144866}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU_Server + ARS ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * MDR ) ),MRS ) ) ) ) )", "choosing": "( ( DS + Min( MUM ,MLU ) ) - ( ( RRSe * RMSe ) * Min( ( Min( RCSe ,( ( MUM / MLU ) - Min( ( RCSe + RMSe ) ,MUM ) ) ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.7777777777777778, "obj2": 0.0971309344105678}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,( ( MDR - MDR ) - MDR ) ) - ( RRS / ( ARS / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,RRSe ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.8256704980842912, "obj2": 0.07197056915734146}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.9846743295019157, "obj2": 0.005277062667309149}, {"determining": "Min( Min( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,PN ) ,( CRS - MRS ) )", "choosing": "( Max( DS,RRSe ) / Min( MLU ,( ( ( MUC - MUR ) * ( Min( MUM ,RMSe ) - Max( ( Min( MLU ,CS ) * RCSe ),RCSe ) ) ) + ( RRSe + Max( MLU,( RRSe / RCSe ) ) ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2874070537562784}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( ( MDR + ARS ),BR ) * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) * ( MUC / CS ) ) ) - MUM )", "obj1": 0.9942528735632183, "obj2": 0.0022121057546380667}, {"determining": "( Max( ( ARS / Min( FirstVNF_Mem ,RRS ) ),Const ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - Max( RRS,( ARS / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MLU * MUM ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUC * ( ( Max( RMSe,RCSe ) * MUC ) - RRSe ) ) - RRSe ) / MUR ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.8237547892720306, "obj2": 0.07280873537932239}, {"determining": "Min( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.814176245210728, "obj2": 0.07594354914421939}], "14": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( CRS,( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( MUM + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( MUM / MLU ) - ( MUC + ( MUC / RMSe ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( Max( ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,PN ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6455938697318008, "obj2": 0.20341992028048775}, {"determining": "( Max( ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,PN ) - Max( ( FirstVNF_CPU_Server * ( MRS - MDR ) ),MRS ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6340996168582376, "obj2": 0.21524365690245104}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6839080459770115, "obj2": 0.14977595444317193}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7375478927203065, "obj2": 0.11354043275482692}, {"determining": "( Max( ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,PN ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6455938697318008, "obj2": 0.20341992028048775}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.2561583964187683}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15293080605683004}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - ( MDR + FirstVNF_CPU_Server ) ) ) ) - ( ( FirstVNF_Mem_Server - MDR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),( DDR + BR ) ) ) ) ) )", "choosing": "( RRSe + Max( RMSe,RRSe ) )", "obj1": 0.578544061302682, "obj2": 0.2819519303241442}, {"determining": "( Max( ( Max( Min( MDR ,( Max( ( ACS + MDR ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU_Server,DDR ) ),Const ) - ( CRS + ACS ) )", "choosing": "( Min( MUM ,RMSe ) - Min( ( ( CS + ( MUM / MLU ) ) * RCSe ) ,( MLU + ( DS + ( MUC / MLU ) ) ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( Min( PN ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( FirstVNF_RAM,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,Max( CS,MUM ) ) / CS ) ) * ( MUM / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7145593869731801, "obj2": 0.1257158736235495}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6168582375478927, "obj2": 0.23325540738797443}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( RRSe + RCSe ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09318261796803787}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_RAM ) ) + Const ),Max( ( ACS - ( Max( ( DDR - FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,Max( Max( RMSe,MUM ),MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.28865828290514695}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Min( MDR ,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Min( ACS ,( FirstVNF_CPU_Server + MRS ) ) + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.789272030651341, "obj2": 0.08857790713951001}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7260536398467433, "obj2": 0.12300475504690163}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,RRSe ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.7049808429118773, "obj2": 0.13682888812908575}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,( RRSe / RCSe ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "( Max( ( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) / BR ),( MDR + FirstVNF_RAM ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( Min( FirstVNF_RAM ,MRS ) / Const ) * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( ( DS + MUM ) * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS / MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( RMSe / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.27051254331134666}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.5632183908045977, "obj2": 0.3014284896496565}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09998870653780485}, {"determining": "( Max( Const,Min( ACS ,( ( FirstVNF_RAM * ( AMS * ( FirstVNF_Mem - FirstVNF_RAM ) ) ) - MDR ) ) ) - ( MDR * ( Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,MDR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + ( Min( ( RMSe + ( MUM * RMSe ) ) ,RRSe ) - MLU ) ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.6973180076628352, "obj2": 0.1382664120032514}, {"determining": "( ( MDR * ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( Max( Max( ACS,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( Min( ( ( CS + ( RMSe - MLU ) ) - RCSe ) ,MUC ) * MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.07975432238934056}, {"determining": "( Max( Const,( Max( ( ( FirstVNF_CPU_Server * DDR ) - MDR ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Const + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( DS + ( ( ( RCSe * ( RMSe / RRSe ) ) + ( MUC * CS ) ) / Max( RMSe,MUR ) ) ) + MLU ) ) )", "obj1": 0.6302681992337165, "obj2": 0.22510427031110822}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,PN ) + ( Max( Min( FirstVNF_CPU ,BR ),BR ) - ( RRS / ( ( ARS * FirstVNF_Mem ) / ( ACS - ( FirstVNF_RAM - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( ( RCSe / ( Max( RCSe,MUM ) * Min( CS ,RMSe ) ) ) * ( MUC * ( MUC / DS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Max( Const,Min( ACS ,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,( AMS * RRS ) ) ) ) ,( FirstVNF_CPU - MDR ) ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * ( MUC / CS ) ) / MLU ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,( DS * RCSe ) ) * ( MLU + ( MUC * ( MUC / CS ) ) ) ) ,MUC ) ) )", "obj1": 0.9540229885057471, "obj2": 0.015080118760709919}, {"determining": "Min( Min( ( ( MDR / ARS ) + RRS ) ,FirstVNF_Mem_Server ) ,Max( Max( Max( Const,FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( Min( MUM ,RMSe ) - MUM ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Max( CS,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem_Server - MDR ) + ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - Max( ( RRSe * Max( ( ( RRSe - ( MUR * MUM ) ) / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03437516356894909}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.05535741835779337}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( FirstVNF_Mem_Server,ARS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9482758620689655, "obj2": 0.018435384502664322}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( Min( Min( FirstVNF_RAM ,MRS ) ,Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Min( ( PN - FirstVNF_CPU_Server ) ,MRS ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( Max( RMSe,MLU ) * Max( ( RCSe / Min( MUC ,( ( MLU / RMSe ) / MUC ) ) ),RRSe ) ) ) - Max( ( Min( MUC ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.14176857186837452}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,RCSe ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7279693486590039, "obj2": 0.11906976383800486}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + ( MUC + CS ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09998870653780485}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,RRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + MUM ),( MLU * ( DS + ( MUM / Max( RCSe,MLU ) ) ) ) ) ),Min( ( ( RCSe - RCSe ) - RCSe ) ,RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.13271755359784082}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.14176857186837452}, {"determining": "( Max( ( Max( ARS,CRS ) * ( MRS * ( AMS / FirstVNF_Mem ) ) ),FirstVNF_CPU ) - ( MDR * ( ( Min( ( ( FirstVNF_RAM * MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( ( MUM / MLU ) + DS ) + ( ( RCSe / CS ) * ( RRSe * DS ) ) ) * DS ) ) ,MUC ) ) )", "obj1": 0.8295019157088123, "obj2": 0.0681093095386544}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Min( MDR ,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Min( ACS ,( FirstVNF_CPU_Server + MRS ) ) + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.8007662835249042, "obj2": 0.08287317407674605}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8639846743295019, "obj2": 0.05410804763090177}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.02349154844669962}, {"determining": "( Max( Const,Min( ( BR - PN ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( ARS ,PN ) / BR ) ,FirstVNF_RAM_Server ) / ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RMSe ) - MUC ) ) )", "obj1": 0.7720306513409961, "obj2": 0.09899566454366777}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( MUR - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9310344827586207, "obj2": 0.025601600439453795}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) * ( MUC / CS ) ) ) - MUM )", "obj1": 0.9406130268199234, "obj2": 0.0224773150953552}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,RCSe ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.710727969348659, "obj2": 0.13326496549811728}, {"determining": "( Min( Const ,Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - Max( ( Const + FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server - PN ),BR ) ) )", "choosing": "( ( RCSe - ( ( ( MLU + MUM ) + MUC ) + MLU ) ) - Max( MLU,DS ) )", "obj1": 0.946360153256705, "obj2": 0.0206578679345584}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9827586206896551, "obj2": 0.005478784505020727}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( MUR ,RRSe ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.2782890261606946}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5919540229885057, "obj2": 0.26716243387846456}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "Min( Min( ( BR / ( Min( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) ,ACS ) * FirstVNF_CPU ) ) ,Const ) ,( MRS / Max( Min( ( ( ACS + ( ( AMS * Const ) + FirstVNF_CPU ) ) * BR ) ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe + Max( MUR,( Min( RRSe ,RCSe ) / MUC ) ) ) + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.8352490421455939, "obj2": 0.0657820542181702}, {"determining": "( Max( Const,Min( ACS ,Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ( CRS - MRS ) / BR ) ) ) ) ) )", "choosing": "Min( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.9291187739463601, "obj2": 0.027680360619103773}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04428268210715759}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( Const,Min( AMS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( DDR / ( BR + ( ( FirstVNF_RAM_Server * MDR ) * RRS ) ) ) )", "choosing": "( Min( MLU ,( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( Min( DS ,( RMSe - ( RMSe * MUR ) ) ) + MUC ) ) )", "obj1": 0.7758620689655172, "obj2": 0.09703815382073157}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.042321277505569486}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + RCSe ) ) ) - MLU ) + ( ( ( MUM - Min( CS ,Min( MLU ,MUM ) ) ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8122605363984674, "obj2": 0.07807803307186238}, {"determining": "Min( Min( ( Max( Const,Min( ( DDR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( CRS + FirstVNF_Mem ) * FirstVNF_Mem ) * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS * BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + ( DS * CS ) ) - Max( ( Max( ( RMSe / Max( ( MUM + RMSe ),( CS + MUM ) ) ),Max( MUC,MUR ) ) * RRSe ),( ( RCSe * DS ) + MLU ) ) )", "obj1": 0.9233716475095786, "obj2": 0.02847432312314886}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,( Max( ( FirstVNF_CPU_Server - ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + FirstVNF_RAM ) ) - ( RRS * AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / ( RRS / BR ) ) ) )", "choosing": "( ( MLU + ( ( MUC / ( CS * RRSe ) ) - MUC ) ) - Min( ( ( ( Min( ( ( RMSe / CS ) / DS ) ,Max( ( MUC * MLU ),( MUC * MUC ) ) ) / RCSe ) * MLU ) - ( CS * DS ) ) ,( CS - CS ) ) )", "obj1": 0.6226053639846744, "obj2": 0.22820145720188892}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8850574712643678, "obj2": 0.044984615896763926}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( MLU * ( ( MUM / Max( ( MUM / RRSe ),( CS + MUM ) ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7950191570881227, "obj2": 0.08502943893776586}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.8812260536398467, "obj2": 0.04663226903651572}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "Min( Min( Max( BR,( Min( ( FirstVNF_Mem + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( RRS + ( Const * Min( AMS ,RRS ) ) ) )", "choosing": "( Min( MUM ,Max( MLU,CS ) ) - Max( ( Min( CS ,MUM ) * MUR ),( ( DS + ( MUM / MLU ) ) + ( RCSe * ( CS - RRSe ) ) ) ) )", "obj1": 0.8544061302681992, "obj2": 0.058399929018149416}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,RCSe ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7279693486590039, "obj2": 0.11906976383800486}, {"determining": "Min( Min( ( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server * CRS ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,( Min( MUC ,Min( MUR ,CS ) ) + DS ) ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "Min( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8275862068965517, "obj2": 0.07062701262896558}, {"determining": "Min( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS * ( ARS / BR ) ) ) ) ) ) ,Max( MRS,ARS ) ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( ( RMSe + ( CS * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - ( CS + RMSe ) ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.921455938697318, "obj2": 0.03008335824370099}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ( CRS - MRS ) / BR ) ) ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( MUM + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8199233716475096, "obj2": 0.07367492033868993}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( RMSe / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.004525057880414368}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.7988505747126436, "obj2": 0.08321154961505321}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),BR ) * ( FirstVNF_Mem / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( RMSe - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.01437053841168961}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( Max( ( ( RMSe * MUM ) / Min( ( ( MUR / RCSe ) + ( MUM / CS ) ) ,RMSe ) ),( MUC * DS ) ) ,CS ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + MLU ),RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03137451459063307}, {"determining": "Min( Min( Const ,( BR / ( Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ),MRS ) * FirstVNF_CPU ) ) ) ,( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ACS ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( DS + ( MUM / Max( ( MUM - RRSe ),MLU ) ) ) ) ) ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),Min( Min( Min( Max( MUR,RMSe ) ,CS ) ,MUC ) ,( ( MUR - MUM ) / MUM ) ) ) )", "obj1": 0.5862068965517241, "obj2": 0.27888059753220135}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( MUC + RCSe ),RCSe ) ) * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( ( BR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MLU,( RRSe / RCSe ) ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + DS ),RCSe ) )", "obj1": 0.896551724137931, "obj2": 0.04176592907936205}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_RAM + FirstVNF_CPU ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MLU * ( ( MUC * ( MUC / Min( CS ,CS ) ) ) / CS ) ) ) - MUM )", "obj1": 0.8409961685823755, "obj2": 0.06474899082593578}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15293080605683004}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( Max( ( MUM / RRSe ),MLU ) + RCSe ),RCSe ) )", "obj1": 0.8754789272030651, "obj2": 0.04986658288992427}, {"determining": "( Max( Const,Min( Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,( ( MDR - MDR ) - MDR ) ) - ( RRS / ( ARS / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,RRSe ) - MLU ) + ( ( ( MUM - CS ) - ( Max( RCSe,( MUC - CS ) ) - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.8237547892720306, "obj2": 0.07216351664674389}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.03431509435669346}, {"determining": "Min( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.814176245210728, "obj2": 0.07594354914421939}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + RCSe ),RCSe ) )", "obj1": 0.9176245210727969, "obj2": 0.030969226974802474}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.8371647509578544, "obj2": 0.0650938640238057}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.8544061302681992, "obj2": 0.058399929018149416}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( ARS,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( ( ( AMS - BR ) / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( ( MUC - ( MUC / Max( MUC,( RMSe + MUC ) ) ) ) / CS ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.8486590038314177, "obj2": 0.06075250874780762}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,DS ) ) ) ) ) - MLU ) + ( ( ( MUM - CS ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.9846743295019157, "obj2": 0.005277062667309149}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR + ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU - ACS ) + Const ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( ( ( MUM - MUM ) / MUC ) - Min( MLU ,CS ) ),RCSe )", "obj1": 0.842911877394636, "obj2": 0.06327512020394836}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( AMS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( BR + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUC / ( ( MLU * MUR ) * RRSe ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * ( RRSe / CS ) ),( ( ( ( ( RCSe * MLU ) + ( CS + MUC ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6302681992337165, "obj2": 0.22510427031110822}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_RAM ) ) + Const ),Max( ( ACS - ( Max( ( DDR - FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,Max( Max( RMSe,MUM ),MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6264367816091954, "obj2": 0.2273365614917486}], "15": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( MUM + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( CRS,( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "( Min( MUM ,MUM ) - Max( CS,( ( Max( Max( ( DS - ( MUM * MUC ) ),MLU ),( MUM / RRSe ) ) * RCSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,MRS ) / FirstVNF_Mem_Server ) ) + ( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ),DDR ) - ( ( Max( FirstVNF_Mem_Server,BR ) - ( ( PN - FirstVNF_RAM ) + ARS ) ) - ( ( PN * FirstVNF_RAM_Server ) - DDR ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( Min( CS ,MUM ) * RCSe ) / ( ( ( MUM + ( MUC * ( MUC / CS ) ) ) + DS ) + ( ( RCSe - MUR ) * ( ( RRSe * Min( Min( MUM ,RMSe ) ,Min( RCSe ,RMSe ) ) ) + Max( ( DS / ( MUC / MUC ) ),MUR ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.18825109675247248}, {"determining": "( Max( Const,( Max( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( Max( ( MUM / RRSe ),( CS + MUM ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6283524904214559, "obj2": 0.22449206990855985}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( MUM / MLU ) - ( MUC + ( MUC / RMSe ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( ( Min( Min( CRS ,AMS ) ,BR ) - MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( Min( DS ,Min( Min( MUC ,MLU ) ,MUC ) ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( RCSe - MUR ) * RCSe ) + ( ( MUM / MLU ) + DS ) ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09757749572265255}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),( FirstVNF_RAM_Server + DDR ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,CS ) * ( ( ( MUM / MLU ) - ( MUC + ( ( RCSe - MUM ) / DS ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( Max( Const,Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( CS + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10946836385988178}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7030651340996169, "obj2": 0.13128979916643438}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,CRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15291307710702082}, {"determining": "( Max( Const,Min( FirstVNF_RAM ,DDR ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Const ) ) + Max( Max( DDR,BR ),Max( Min( ACS ,( ( FirstVNF_CPU_Server - BR ) - Const ) ),MRS ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) * RCSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,( ( ( ( MUM * RCSe ) - MUC ) + ( RMSe + MUR ) ) - MUC ) ) ),Min( ( DS + ( MUM / MLU ) ) ,( ( MUR - RCSe ) * MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11395072601071324}, {"determining": "( Max( Const,Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6839080459770115, "obj2": 0.14796272184008047}, {"determining": "( ( Const * Max( ( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,PN ) ),CRS ) ) - ( MDR * ( Min( ( Const / Min( MRS ,AMS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( MRS / ARS ) * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( ( RMSe - ( Min( RCSe ,Min( RRSe ,Min( ( MLU - RRSe ) ,RMSe ) ) ) - MUM ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( ( MLU * DS ) - MUC ) / MLU ) + ( MLU * ( RMSe - DS ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.09232523061165981}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - ( MDR + FirstVNF_CPU_Server ) ) ) ) - ( ( FirstVNF_Mem_Server - MDR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),( DDR + BR ) ) ) ) ) )", "choosing": "( RRSe + Max( RMSe,RRSe ) )", "obj1": 0.578544061302682, "obj2": 0.2819519303241442}, {"determining": "( ( Const - ( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) + ARS ) ,( ( FirstVNF_CPU_Server + Const ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM / Min( ( CS / CS ) ,MUM ) ) ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + RRSe ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.2561583964187683}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6168582375478927, "obj2": 0.23325540738797443}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_RAM ) ) + Const ),Max( ( ACS - ( Max( ( DDR - FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,Max( Max( RMSe,MUM ),MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( Max( Const,Min( ACS ,( ( FirstVNF_RAM * ( AMS * ( FirstVNF_Mem - FirstVNF_RAM ) ) ) - MDR ) ) ) - ( MDR * ( Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,MDR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + ( Min( ( RMSe + ( MUM * RMSe ) ) ,RRSe ) - MLU ) ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.6973180076628352, "obj2": 0.1382664120032514}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),Const ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - ( RRS / ( ACS - FirstVNF_CPU_Server ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( ( ( Max( ( RCSe * Min( DS ,CS ) ),( RMSe + MUR ) ) * RCSe ) / RRSe ) / MLU ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MLU / MUM ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1515907751382169}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / RCSe ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11805416677418472}, {"determining": "( Max( ( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) / BR ),( MDR + FirstVNF_RAM ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( Min( FirstVNF_RAM ,MRS ) / Const ) * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( ( DS + MUM ) * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS / MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( RMSe / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.27051254331134666}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.5632183908045977, "obj2": 0.3014284896496565}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( ARS,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( ( ( AMS - BR ) / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( ( MUC - ( MUC / Max( MUC,( RMSe + MUC ) ) ) ) / CS ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.8486590038314177, "obj2": 0.06075250874780762}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8850574712643678, "obj2": 0.04417891220772916}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8697318007662835, "obj2": 0.05192562810111463}, {"determining": "( Max( Const,Min( ACS ,( ACS * ACS ) ) ) - ( MDR * Max( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + ( DS / Max( RMSe,MUC ) ) ) ) ) - MLU ) + ( ( ( CS - MUR ) - ( MUM - CS ) ) * ( MUM / Max( CS,MLU ) ) ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.789272030651341, "obj2": 0.08805977471601181}, {"determining": "( Max( Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( AMS + DDR ) ) + ( Max( BR,DDR ) - ( ( FirstVNF_CPU_Server * Max( Const,AMS ) ) - MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( ( RCSe / DS ) / CS ) ) * ( DS / MLU ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7164750957854407, "obj2": 0.12289199482859343}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "Min( Min( ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,MRS ) / Const ) ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ,FirstVNF_Mem_Server ) ,Max( Max( ( BR + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ( MDR + FirstVNF_Mem ) * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Min( MLU ,MUR ),CS ),MUM ) + Max( RCSe,RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( Max( Min( CS ,MUM ),RCSe ),RCSe ) )", "obj1": 0.603448275862069, "obj2": 0.260430932063396}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8639846743295019, "obj2": 0.05410804763090177}, {"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( MUR ,RRSe ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5881226053639846, "obj2": 0.2782890261606946}, {"determining": "( Max( Const,Min( ACS ,( ( ARS - Min( Min( ( FirstVNF_CPU + DDR ) ,AMS ) ,MDR ) ) / ARS ) ) ) - ( Max( Min( ( BR / CRS ) ,DDR ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * Max( DS,MUR ) ) ) - ( ( ( ( RMSe * RMSe ) / Min( CS ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( Max( MUC,MUR ),( RCSe / DS ) ) + ( ( MUM * ( Max( MLU,Max( RCSe,MUM ) ) / RMSe ) ) / ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01722932452240653}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( Min( PN ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( FirstVNF_RAM,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,Max( CS,MUM ) ) / CS ) ) * ( MUM / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7145593869731801, "obj2": 0.1257158736235495}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.28865828290514695}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_RAM + FirstVNF_CPU ) - MDR ) ) * FirstVNF_CPU ) ) ,( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MLU * ( ( ( MUC / Min( CS ,CS ) ) * ( MUC / Min( CS ,CS ) ) ) / CS ) ) ) - MUM )", "obj1": 0.9980842911877394, "obj2": 0.002056821603522828}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( Min( Min( FirstVNF_RAM ,MRS ) ,Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Min( ( PN - FirstVNF_CPU_Server ) ,MRS ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( Max( RMSe,MLU ) * Max( ( RCSe / Min( MUC ,( ( MLU / RMSe ) / MUC ) ) ),RRSe ) ) ) - Max( ( Min( MUC ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.14176857186837452}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09130375656756465}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,PN ) + ( Max( Min( FirstVNF_CPU ,BR ),BR ) - ( RRS / ( ( ARS * FirstVNF_Mem ) / ( ACS - ( FirstVNF_RAM - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( ( RCSe / ( Max( RCSe,MUM ) * Min( CS ,RMSe ) ) ) * ( MUC * ( MUC / DS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.02349154844669962}, {"determining": "( ( MDR * ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( Max( Max( ACS,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( Min( ( ( CS + ( RMSe - MLU ) ) - RCSe ) ,MUC ) * MLU ) ) ),RCSe )", "obj1": 0.8084291187739464, "obj2": 0.07975432238934056}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( Max( MUC,MUR ),( RCSe / DS ) ) + ( ( MUM * ( Max( MLU,Max( RCSe,MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003733276268830876}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.05530418734443252}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.14176857186837452}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,Max( DDR,BR ) ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( ( Max( RCSe,RCSe ) / CS ) / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5919540229885057, "obj2": 0.26716243387846456}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR + ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU - ACS ) + Const ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( ( ( MUM - MUM ) / MUC ) - Min( MLU ,CS ) ),RCSe )", "obj1": 0.842911877394636, "obj2": 0.06327512020394836}, {"determining": "Min( Min( ( ( MDR / ARS ) + RRS ) ,FirstVNF_Mem_Server ) ,Max( Max( Max( Const,FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( Min( MUM ,RMSe ) - MUM ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Max( CS,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( Max( Const,Min( AMS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( Min( PN ,FirstVNF_RAM ) / BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( Max( DS,MLU ) + ( ( ( Min( MLU ,MUM ) - MUM ) * MLU ) + MUC ) ) )", "obj1": 0.7854406130268199, "obj2": 0.09020385275898712}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ( CRS - MRS ) / BR ) ) ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / ( CS * RRSe ) ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( MUM + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9080459770114943, "obj2": 0.03545596548165417}, {"determining": "( Max( Const,Min( ( FirstVNF_CPU_Server * Max( BR,AMS ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MUM / MLU ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9578544061302682, "obj2": 0.013891855321826609}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.8812260536398467, "obj2": 0.04663226903651572}, {"determining": "( Max( Const,Max( ACS,( MDR - FirstVNF_Mem_Server ) ) ) - ( ( Min( RRS ,( FirstVNF_CPU_Server - ACS ) ) + FirstVNF_RAM ) * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ,( MUC / Max( Max( ( MUM * MLU ),MUC ),MUC ) ) ) ) - MUM )", "obj1": 0.9310344827586207, "obj2": 0.02555923258431686}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.04166790314208167}, {"determining": "( Max( ( Max( Min( MDR ,( Max( ( ACS + MDR ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU_Server,DDR ) ),Const ) - ( CRS + ACS ) )", "choosing": "( Min( MUM ,RMSe ) - Min( ( ( CS + ( MUM / MLU ) ) * RCSe ) ,( MLU + ( DS + ( MUC / MLU ) ) ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_RAM ) ) + Const ),Max( ( ACS - ( Max( ( DDR - FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,Max( Max( RMSe,MUM ),MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6264367816091954, "obj2": 0.2273365614917486}, {"determining": "( ( ( FirstVNF_CPU / MDR ) - Const ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU + ( MUC - ( ( DS + Min( MUR ,( Min( RMSe ,RMSe ) + MLU ) ) ) / ( CS * RRSe ) ) ) ) - Max( RCSe,( CS - CS ) ) )", "obj1": 0.6226053639846744, "obj2": 0.22820145720188892}, {"determining": "( Max( ( Max( ARS,CRS ) * ( MRS * ( AMS / FirstVNF_Mem ) ) ),FirstVNF_CPU ) - ( MDR * ( ( Min( ( ( FirstVNF_RAM * MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( ( MUM / MLU ) + DS ) + ( ( RCSe / CS ) * ( RRSe * DS ) ) ) * DS ) ) ,MUC ) ) )", "obj1": 0.8295019157088123, "obj2": 0.0681093095386544}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Min( MDR ,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( Min( ACS ,( RRS + MRS ) ) + ACS ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MUM ,RMSe ) + RCSe ),RCSe ) )", "obj1": 0.8045977011494253, "obj2": 0.08185342484323797}, {"determining": "( Max( Const,Min( ACS ,Min( ARS ,ACS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( RCSe * ( MUM + RRSe ) ) + MLU ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.9137931034482759, "obj2": 0.03431509435669346}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,RCSe ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7145593869731801, "obj2": 0.1257158736235495}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - ( ( MDR + Const ) / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( PN,FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( ( MUR * RCSe ) + ( MUC * ( Max( RCSe,( RRSe / CS ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9291187739463601, "obj2": 0.026180149698874812}, {"determining": "( Max( Const,Min( Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + FirstVNF_RAM ) ) - ( RRS / AMS ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,( ( MDR - MDR ) - MDR ) ) - ( RRS / ( ARS / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,RRSe ) - MLU ) + ( ( ( MUM - CS ) - ( Max( RCSe,( MUC - CS ) ) - MUR ) ) * MUC ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.8237547892720306, "obj2": 0.07216351664674389}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.28865828290514695}, {"determining": "( Max( Min( ( ARS * Min( PN ,ACS ) ) ,MRS ),FirstVNF_Mem_Server ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,Const ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( AMS,Const ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06705477588518555}, {"determining": "( Min( PN ,FirstVNF_Mem_Server ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + RRS ) ) )", "choosing": "( ( MLU + ( ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) * MUC ) ) - Max( ( Max( MLU,MUM ) * ( MUR - RMSe ) ),RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.027975332082441927}, {"determining": "( Min( ( Max( BR,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( RRS / Const ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( ( MLU * RMSe ) / RMSe ),( MUR + MUM ) ) ),( ( ( MUM / MLU ) + DS ) / MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Min( CS ,MUM ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( FirstVNF_CPU,BR ) - ( RRS / ( PN / BR ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007548245163215486}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) * ( MUC / CS ) ) ) - MUM )", "obj1": 0.9406130268199234, "obj2": 0.0224773150953552}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.042321277505569486}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( Max( ( ( RMSe * MUM ) / Min( ( ( MUR / RCSe ) + ( MUM / CS ) ) ,RMSe ) ),( MUC * DS ) ) ,CS ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + MLU ),RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.03137451459063307}, {"determining": "Min( Min( Const ,( BR / ( Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ),MRS ) * FirstVNF_CPU ) ) ) ,( Max( FirstVNF_Mem_Server,BR ) - ( RRS / ACS ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( DS + ( MUM / Max( ( MUM - RRSe ),MLU ) ) ) ) ) ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),Min( Min( Min( Max( MUR,RMSe ) ,CS ) ,MUC ) ,( ( MUR - MUM ) / MUM ) ) ) )", "obj1": 0.5862068965517241, "obj2": 0.27888059753220135}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.8409961685823755, "obj2": 0.06406801498877489}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_RAM + FirstVNF_CPU ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,Min( CRS ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ) )", "choosing": "( ( MLU + ( ( ( MUR * RRSe ) / CS ) * RMSe ) ) - MUM )", "obj1": 0.8563218390804598, "obj2": 0.05761895757871857}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.8371647509578544, "obj2": 0.0650938640238057}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( Max( ( MUM / RRSe ),MLU ) + RCSe ),RCSe ) )", "obj1": 0.8754789272030651, "obj2": 0.04986658288992427}, {"determining": "Min( Min( ( Max( ( ( Max( ARS,RRS ) * RRS ) / FirstVNF_RAM ),( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server * CRS ) ) ,Const ) ,( CRS + MRS ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( MUM,CS ),MUM ) - Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( MUM - DS ) / MUR ) ) ) ,RMSe ) - Max( ( Min( CS ,( Min( MUC ,Min( MUR ,CS ) ) + DS ) ) * RCSe ),RCSe ) )", "obj1": 0.60727969348659, "obj2": 0.2575307735183809}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( MLU * ( ( MUM / Max( ( MUM / RRSe ),( CS + MUM ) ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7950191570881227, "obj2": 0.08502943893776586}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + RCSe ),RCSe ) )", "obj1": 0.9176245210727969, "obj2": 0.030969226974802474}, {"determining": "( Max( Const,Min( ACS ,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,( AMS * RRS ) ) ) ) ,( FirstVNF_CPU - MDR ) ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * ( MUC / CS ) ) / MLU ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,( DS * RCSe ) ) * ( MLU + ( MUC * ( MUC / CS ) ) ) ) ,MUC ) ) )", "obj1": 0.9540229885057471, "obj2": 0.015080118760709919}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem_Server - MDR ) + ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - Max( ( RRSe * Max( ( ( RRSe - ( MUR * MUM ) ) / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03437516356894909}, {"determining": "( Max( Const,( Max( ( FirstVNF_CPU_Server - ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + FirstVNF_RAM ) ) - ( RRS * AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / ( RRS / BR ) ) ) )", "choosing": "( ( MLU + ( ( MUC / ( CS * RRSe ) ) - MUC ) ) - Min( ( ( ( Min( ( ( RMSe / CS ) / DS ) ,Max( ( MUC * MLU ),( MUC * MUC ) ) ) / RCSe ) * MLU ) - ( CS * DS ) ) ,( CS - CS ) ) )", "obj1": 0.6226053639846744, "obj2": 0.22820145720188892}, {"determining": "( Max( Const,Min( ACS ,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( CRS,Min( MRS ,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) ) - ( ARS * ( ( Const * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MLU + ( MUC * ( MUC / CS ) ) ) ) ,MUC ) ) )", "obj1": 0.9540229885057471, "obj2": 0.015080118760709919}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / BR ) ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + RCSe ) ) ) - MLU ) + ( ( ( MUM - Min( CS ,Min( MLU ,MUM ) ) ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.8122605363984674, "obj2": 0.07807803307186238}, {"determining": "Min( Min( Max( BR,( Min( ( FirstVNF_Mem + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( RRS + ( Const * Min( AMS ,RRS ) ) ) )", "choosing": "( Min( MUM ,Max( MLU,CS ) ) - Max( ( Min( CS ,MUM ) * MUR ),( ( DS + ( MUM / MLU ) ) + ( RCSe * ( CS - RRSe ) ) ) ) )", "obj1": 0.8544061302681992, "obj2": 0.058399929018149416}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5919540229885057, "obj2": 0.26716243387846456}, {"determining": "Min( Min( ( Max( Const,Min( ( DDR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( CRS + FirstVNF_Mem ) * FirstVNF_Mem ) * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS * BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + ( DS * CS ) ) - Max( ( Max( ( RMSe / Max( ( MUM + RMSe ),( CS + MUM ) ) ),Max( MUC,MUR ) ) * RRSe ),( ( RCSe * DS ) + MLU ) ) )", "obj1": 0.9233716475095786, "obj2": 0.02847432312314886}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / MDR ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( MDR - FirstVNF_Mem_Server ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( RMSe + CS ) / CS ) / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.7969348659003831, "obj2": 0.08354415022116703}, {"determining": "( Min( Const ,Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - Max( ( Const + FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server - PN ),BR ) ) )", "choosing": "( ( RCSe - ( ( ( MLU + MUM ) + MUC ) + MLU ) ) - Max( MLU,DS ) )", "obj1": 0.946360153256705, "obj2": 0.0206578679345584}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Max( ( Max( ( MUM / RRSe ),MLU ) + RCSe ),RCSe ) )", "obj1": 0.8754789272030651, "obj2": 0.04986658288992427}], "16": [{"determining": "Min( Min( ( ARS / ( FirstVNF_CPU_Server * ( ( ( AMS / ACS ) / AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Const ) ,( CRS - MRS ) )", "choosing": "( ( RCSe * Min( ( ( ( ( ( MUR * RMSe ) - MLU ) / CS ) - RCSe ) / Max( ( Max( RCSe,RMSe ) + ( ( MLU + MUM ) + MUC ) ),Min( ( CS / RMSe ) ,( RCSe + DS ) ) ) ) ,( MLU + MUR ) ) ) - ( DS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) ) )", "choosing": "( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( RMSe ,MUM ) * RCSe ),( MUM + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / ( Max( ( DDR / ACS ),MRS ) / FirstVNF_Mem_Server ) ) ,( ( RRS / FirstVNF_RAM_Server ) - DDR ) ) ,( CRS - RRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RMSe * RRSe ) + CS ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( MUM / RRSe ) ) ) ) - ( MUR - RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.5593869731800766, "obj2": 0.3101789577519666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,MRS ) / FirstVNF_Mem_Server ) ) + ( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ),DDR ) - ( ( Max( FirstVNF_Mem_Server,BR ) - ( ( PN - FirstVNF_RAM ) + ARS ) ) - ( ( PN * FirstVNF_RAM_Server ) - DDR ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( Min( CS ,MUM ) * RCSe ) / ( ( ( MUM + ( MUC * ( MUC / CS ) ) ) + DS ) + ( ( RCSe - MUR ) * ( ( RRSe * Min( Min( MUM ,RMSe ) ,Min( RCSe ,RMSe ) ) ) + Max( ( DS / ( MUC / MUC ) ),MUR ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.18825109675247248}, {"determining": "( Max( Const,( Max( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( Max( ( MUM / RRSe ),( CS + MUM ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6283524904214559, "obj2": 0.22449206990855985}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),( FirstVNF_RAM_Server + DDR ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,CS ) * ( ( ( MUM / MLU ) - ( MUC + ( ( RCSe - MUM ) / DS ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),Max( Min( ( Max( MDR,( FirstVNF_CPU * ( AMS / MDR ) ) ) + Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ,FirstVNF_CPU ),BR ) ) - ( ( ( Min( Max( CRS,AMS ) ,BR ) - MRS ) / Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( ( MUR - CS ) + ( DS * CS ) ) / Max( RRSe,RCSe ) ) - ( Min( MUC ,Max( CS,RMSe ) ) * MUC ) ) * RMSe ) / RRSe ) + ( MUC * RCSe ) ) + ( ( ( RMSe * RMSe ) / ( Min( Min( Min( MUC ,MLU ) ,MUC ) ,DS ) + ( MLU * Max( RCSe,MLU ) ) ) ) * Max( ( RMSe + RMSe ),Min( CS ,MUM ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.24755770617221623}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( MUM / MLU ) - ( MUC + ( MUC / RMSe ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( Max( Const,Min( FirstVNF_RAM ,DDR ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Const ) ) + Max( Max( DDR,BR ),Max( Min( ACS ,( ( FirstVNF_CPU_Server - BR ) - Const ) ),MRS ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) * RCSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,( ( ( ( MUM * RCSe ) - MUC ) + ( RMSe + MUR ) ) - MUC ) ) ),Min( ( DS + ( MUM / MLU ) ) ,( ( MUR - RCSe ) * MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11395072601071324}, {"determining": "( ( Const * Max( ( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,PN ) ),CRS ) ) - ( MDR * ( Min( ( Const / Min( MRS ,AMS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( MRS / ARS ) * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( ( RMSe - ( Min( RCSe ,Min( RRSe ,Min( ( MLU - RRSe ) ,RMSe ) ) ) - MUM ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( ( MLU * DS ) - MUC ) / MLU ) + ( MLU * ( RMSe - DS ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.09232523061165981}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10806451902888946}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( Max( ( FirstVNF_RAM + DDR ),FirstVNF_Mem_Server ),BR ) - Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Const ) ) ,MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM - RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( RCSe + DS ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5842911877394636, "obj2": 0.27327900833362}, {"determining": "( Max( Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7145593869731801, "obj2": 0.12282919009836811}, {"determining": "( ( FirstVNF_CPU * Max( Const,FirstVNF_Mem_Server ) ) - ( MDR * ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( RCSe + ( RCSe * RMSe ) ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( Max( RRSe,MLU ) * MLU ) ) ,RRSe ) ),( ( ( MUM / MLU ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) - Max( ( Max( MUR,MUC ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7586206896551724, "obj2": 0.09851719316028454}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.6168582375478927, "obj2": 0.23325540738797443}, {"determining": "( Max( Const,Min( ACS ,( ( FirstVNF_RAM * ( AMS * ( FirstVNF_Mem - FirstVNF_RAM ) ) ) - MDR ) ) ) - ( MDR * ( Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,MDR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + ( Min( ( RMSe + ( MUM * RMSe ) ) ,RRSe ) - MLU ) ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.6973180076628352, "obj2": 0.1382664120032514}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),Const ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - ( RRS / ( ACS - FirstVNF_CPU_Server ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( ( ( Max( ( RCSe * Min( DS ,CS ) ),( RMSe + MUR ) ) * RCSe ) / RRSe ) / MLU ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MLU / MUM ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1515907751382169}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / ( Max( RRS,ARS ) + FirstVNF_RAM_Server ) ) ,MDR ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,( ( ( MUR - Min( MUM ,MLU ) ) * RMSe ) - ( ( RCSe - RRSe ) + MLU ) ) ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7088122605363985, "obj2": 0.12909981451875577}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / RCSe ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11805416677418472}, {"determining": "Min( Min( ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,MRS ) / Const ) ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) ,FirstVNF_Mem_Server ) ,Max( Max( ( BR + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ( MDR + FirstVNF_Mem ) * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Min( MLU ,MUR ),CS ),MUM ) + Max( RCSe,RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( Max( Min( CS ,MUM ),RCSe ),RCSe ) )", "obj1": 0.603448275862069, "obj2": 0.260430932063396}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07665905305967999}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,CRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15291307710702082}, {"determining": "( ( Min( ( Min( ( BR + MDR ) ,( MDR / FirstVNF_Mem ) ) * ACS ) ,( DDR + BR ) ) + FirstVNF_CPU ) - Min( ( AMS + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( MUM + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,( MLU / MLU ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6915708812260536, "obj2": 0.1422386119194659}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - ( MDR + FirstVNF_CPU_Server ) ) ) ) - ( ( FirstVNF_Mem_Server - MDR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),( DDR + BR ) ) ) ) ) )", "choosing": "( RRSe + Max( RMSe,RRSe ) )", "obj1": 0.578544061302682, "obj2": 0.2819519303241442}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( ( Const - ( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) + ARS ) ,( ( FirstVNF_CPU_Server + Const ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM / Min( ( CS / CS ) ,MUM ) ) ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + RRSe ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,Min( ACS ,Min( ARS ,ACS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( RCSe * ( MUM + RRSe ) ) + MLU ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "( ( MRS - MDR ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / RRS ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) - Min( MUR ,( CS * RRSe ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,( ( ( CS + MLU ) / Max( RMSe,MUC ) ) + Max( ( RMSe / RCSe ),( MUM + RMSe ) ) ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6647509578544061, "obj2": 0.15903049763431498}, {"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.5651340996168582, "obj2": 0.30086062506933575}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - ( ( MDR + Const ) / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( PN,FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( ( MUR * RCSe ) + ( MUC * ( Max( RCSe,( RRSe / CS ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7030651340996169, "obj2": 0.13128979916643438}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( ( FirstVNF_Mem_Server - MDR ) + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( ( MUC * ( MUC / CS ) ) * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8697318007662835, "obj2": 0.051740410067385834}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( FirstVNF_Mem_Server - MDR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),Max( DDR,BR ) ) ) ) ) )", "choosing": "( RRSe + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2819519303241442}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.28865828290514695}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8850574712643678, "obj2": 0.04417891220772916}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + ( Min( ( RMSe + ( MUM * RMSe ) ) ,RRSe ) - MLU ) ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.8045977011494253, "obj2": 0.08159939079784699}, {"determining": "( Max( Const,Min( ACS ,( ( ARS - Min( Min( ( FirstVNF_CPU + DDR ) ,AMS ) ,MDR ) ) / ARS ) ) ) - ( Max( Min( ( BR / CRS ) ,DDR ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * Max( DS,MUR ) ) ) - ( ( ( ( RMSe * RMSe ) / Min( CS ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( Max( MUC,MUR ),( RCSe / DS ) ) + ( ( MUM * ( Max( MLU,Max( RCSe,MUM ) ) / RMSe ) ) / ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01722932452240653}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),MUC ),RCSe )", "obj1": 0.8754789272030651, "obj2": 0.04875150253092352}, {"determining": "( Max( Const,( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) - Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( MLU + MLU ) - ( RCSe / MLU ) ) ),( ( Max( MUM,Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.5632183908045977, "obj2": 0.3014284896496565}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,PN ) + ( Max( Min( FirstVNF_CPU ,BR ),BR ) - ( RRS / ( ( ARS * FirstVNF_Mem ) / ( ACS - ( FirstVNF_RAM - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( ( RCSe / ( Max( RCSe,MUM ) * Min( CS ,RMSe ) ) ) * ( MUC * ( MUC / DS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.02349154844669962}, {"determining": "( Max( Const,Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6839080459770115, "obj2": 0.14796272184008047}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10633479107611563}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09757749572265255}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6839080459770115, "obj2": 0.14796272184008047}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( ARS,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( ( ( AMS - BR ) / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( ( MUC - ( MUC / Max( MUC,( RMSe + MUC ) ) ) ) / CS ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.8486590038314177, "obj2": 0.06075250874780762}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( Max( ( Const + FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( RRSe + RCSe ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5919540229885057, "obj2": 0.26716243387846456}, {"determining": "Min( Min( ( ( MDR / ARS ) + RRS ) ,FirstVNF_Mem_Server ) ,Max( Max( Max( Const,FirstVNF_RAM ),( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ) ),( ARS * CRS ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Max( Max( MUC,RCSe ),CS ),MUM ) + Max( ( Min( MUM ,RMSe ) - MUM ),RCSe ) ) ),( MUC / ( ( MUM * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Max( CS,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "Min( Min( Max( BR,( Min( ( FirstVNF_Mem + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( RRS + ( Const * Min( AMS ,RRS ) ) ) )", "choosing": "( Min( MUM ,Max( MLU,CS ) ) - Max( ( Min( CS ,MUM ) * MUR ),( ( DS + ( MUM / MLU ) ) + ( RCSe * ( CS - RRSe ) ) ) ) )", "obj1": 0.8544061302681992, "obj2": 0.058399929018149416}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "Min( Min( ( Max( Const,Min( ( DDR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( CRS + FirstVNF_Mem ) * FirstVNF_Mem ) * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS * BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + ( DS * CS ) ) - Max( ( Max( ( RMSe / Max( ( MUM + RMSe ),( CS + MUM ) ) ),Max( MUC,MUR ) ) * RRSe ),( ( RCSe * DS ) + MLU ) ) )", "obj1": 0.9233716475095786, "obj2": 0.02847432312314886}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MLU * ( MUC / CS ) ) ) - MUM )", "obj1": 0.8218390804597702, "obj2": 0.07375455528339327}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( PN / FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MLU + ( ( MUR + ( MLU * MUR ) ) * ( MUC / CS ) ) ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + RCSe ),RCSe ) )", "obj1": 0.9176245210727969, "obj2": 0.030969226974802474}, {"determining": "( ( Const * CRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / ( CS + ( RCSe + RRSe ) ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) / RMSe ) ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.7911877394636015, "obj2": 0.08710928540195378}, {"determining": "( Min( ( Max( BR,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( RRS / Const ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( ( MLU * RMSe ) / RMSe ),( MUR + MUM ) ) ),( ( ( MUM / MLU ) + DS ) / MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09130375656756465}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( ( Min( Min( CRS ,AMS ) ,BR ) - MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( Min( DS ,Min( Min( MUC ,MLU ) ,MUC ) ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( RCSe - MUR ) * RCSe ) + ( ( MUM / MLU ) + DS ) ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09757749572265255}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.05394697033960045}, {"determining": "Min( Max( PN,Max( ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_RAM ) ) + Const ),Max( ( ACS - ( Max( ( DDR - FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) ) ,Min( ( FirstVNF_RAM_Server - DDR ) ,DDR ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,Max( Max( RMSe,MUM ),MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6264367816091954, "obj2": 0.2273365614917486}, {"determining": "( Max( Const,( Max( ( FirstVNF_CPU_Server - ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + FirstVNF_RAM ) ) - ( RRS * AMS ) ) ) ) ) ) - Min( ( PN + ARS ) ,( MRS / ( RRS / BR ) ) ) )", "choosing": "( ( MLU + ( ( MUC / ( CS * RRSe ) ) - MUC ) ) - Min( ( ( ( Min( ( ( RMSe / CS ) / DS ) ,Max( ( MUC * MLU ),( MUC * MUC ) ) ) / RCSe ) * MLU ) - ( CS * DS ) ) ,( CS - CS ) ) )", "obj1": 0.6226053639846744, "obj2": 0.22820145720188892}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.05530418734443252}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05284097566619927}, {"determining": "( Max( ( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) / BR ),( MDR + FirstVNF_RAM ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( Min( FirstVNF_RAM ,MRS ) / Const ) * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( ( DS + MUM ) * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS / MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( RMSe / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.27051254331134666}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08288266512231153}, {"determining": "( Max( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8908045977011494, "obj2": 0.043059619056810695}, {"determining": "( Max( Max( ( Const * Const ),PN ),Min( ACS ,( MDR - RRS ) ) ) - Max( ( ( Min( ( ARS * ( CRS + ( AMS * FirstVNF_Mem ) ) ) ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ),( Const + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * MLU ) + ( MUC * ( MUC / CS ) ) ) - ( DS + MUM ) )", "obj1": 0.9137931034482759, "obj2": 0.034210452611875886}, {"determining": "( Min( MRS ,BR ) - Min( FirstVNF_Mem ,( PN + Max( Max( FirstVNF_CPU,MDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( ( Max( ( ( RRSe / DS ) / RRSe ),RCSe ) * MUC ) * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( ( ( MUC / ( MUC / ( ( MUC - MUC ) / MUM ) ) ) - MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007368035238830467}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Min( ( RMSe + ( MUM * MLU ) ) ,( RRSe * ( DS + RCSe ) ) ) - MLU ) + ( ( ( MUM - Min( CS ,Min( MLU ,MUM ) ) ) - ( CS - MUR ) ) * MUC ) ) ,Min( MUR ,RRSe ) )", "obj1": 0.9827586206896551, "obj2": 0.006377261765288938}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9444444444444444, "obj2": 0.0210937605633865}, {"determining": "( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( MUM / MLU ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8467432950191571, "obj2": 0.06194495501973601}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( FirstVNF_RAM,ARS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RRSe ) ) ) * ( Max( RCSe,RCSe ) / CS ) ) ) - ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( Max( MUC,MUR ),( RCSe / DS ) ) + ( ( MUM * ( Max( MLU,Max( RCSe,MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) ) )", "obj1": 0.946360153256705, "obj2": 0.019884542861738158}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9291187739463601, "obj2": 0.026180149698874812}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - ( Max( ( MDR - ( FirstVNF_CPU_Server * DDR ) ),Min( AMS ,Min( PN ,FirstVNF_RAM ) ) ) + Max( CRS,DDR ) ) ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( Max( ( ( RMSe * MUM ) / Min( ( ( MUR / RCSe ) + ( MLU + MLU ) ) ,RMSe ) ),( MUC * DS ) ) ,CS ) ) - Max( ( ( ( MLU + MUM ) + MUC ) + MLU ),RCSe ) )", "obj1": 0.9904214559386973, "obj2": 0.003707514523371828}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.28865828290514695}, {"determining": "( Min( PN ,FirstVNF_Mem_Server ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + RRS ) ) )", "choosing": "( ( MLU + ( ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) * MUC ) ) - Max( ( Max( MLU,MUM ) * ( MUR - RMSe ) ),RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.027975332082441927}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7030651340996169, "obj2": 0.13128979916643438}, {"determining": "( Min( ( Max( Const,Min( ACS ,( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( ( MUR / RCSe ) + ( MUM / CS ) ) + DS ) + MLU ) ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.001564236277233362}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / MDR ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( MDR - FirstVNF_Mem_Server ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( RMSe + CS ) / CS ) / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.7969348659003831, "obj2": 0.08354415022116703}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( DS + ( MUM / Max( ( MUM - RRSe ),MLU ) ) ) ) ) ,RMSe ) - Max( ( Min( ( MUC / CS ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),Min( Min( Min( Max( MUR,RMSe ) ,CS ) ,MUC ) ,( ( MUR - MUM ) / MUM ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0021574087082590248}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR + ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU - ACS ) + Const ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( ( ( MUM - MUM ) / MUC ) - Min( MLU ,CS ) ),RCSe )", "obj1": 0.842911877394636, "obj2": 0.06327512020394836}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ( ARS * CRS ),Max( ( Const + FirstVNF_RAM ),Max( Const,Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( DS / ( Max( Min( CS ,MUM ),MUM ) + Max( ( RRSe + RCSe ),RMSe ) ) ),( MUC / ( ( RRSe * MUR ) / MLU ) ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.5996168582375478, "obj2": 0.2636941496229742}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( CRS - RRS ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Min( RRSe ,Max( Max( Min( MUR ,( MUM + RRSe ) ),Min( ( MUR / RCSe ) ,CS ) ),DS ) ) )", "obj1": 0.8295019157088123, "obj2": 0.06748795915074257}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( RCSe,MUC ) + MLU ) - ( ( ( ( ( ( Max( MUR,MUR ) + Max( DS,MLU ) ) / Max( ( MUR - DS ),( RCSe * CS ) ) ) + MUM ) + MUC ) + MLU ) + RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.0313266536567717}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MUM * RMSe ) - Max( ( Min( ( MUC / DS ) ,MLU ) * MLU ),( ( ( MUM / ( MUC / CS ) ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.004718245059163145}, {"determining": "( Max( Const,CRS ) - ( MDR * Max( ACS,( FirstVNF_Mem / BR ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * ( ( RMSe - Min( RMSe ,RCSe ) ) - CS ) ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,Max( Max( RMSe,RRSe ),MUM ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.7854406130268199, "obj2": 0.08835027117238793}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.04166790314208167}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_RAM + FirstVNF_CPU ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,Min( CRS ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ) )", "choosing": "( ( MLU + ( ( ( MUR * RRSe ) / CS ) * RMSe ) ) - MUM )", "obj1": 0.8563218390804598, "obj2": 0.05761895757871857}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8256704980842912, "obj2": 0.06973165547874094}, {"determining": "( Const - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) )", "obj1": 0.7835249042145593, "obj2": 0.0910073564011541}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.042321277505569486}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem_Server - MDR ) + ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - Max( ( RRSe * Max( ( ( RRSe - ( MUR * MUM ) ) / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03437516356894909}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - RRS ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( Min( PN ,BR ) + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( AMS,BR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( MLU * ( ( MUM / Max( ( MUM / RMSe ),( CS + MUM ) ) ) + DS ) ) ) ),( RCSe - ( DS - MUM ) ) )", "obj1": 0.7873563218390804, "obj2": 0.08783100359311465}], "17": [{"determining": "( Max( Const,Min( ACS ,( ( MRS * Max( ARS,CRS ) ) - MDR ) ) ) - Min( ACS ,PN ) )", "choosing": "( Max( ( RRSe + RCSe ),RCSe ) - ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - MUC ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUR * MUM ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( MDR - FirstVNF_Mem_Server ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( RRS ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / ( Min( MLU ,MUM ) + RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.5593869731800766, "obj2": 0.30201409241300103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,MRS ) / FirstVNF_Mem_Server ) ) + ( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ),DDR ) - ( ( Max( FirstVNF_Mem_Server,BR ) - ( ( PN - FirstVNF_RAM ) + ARS ) ) - ( ( PN * FirstVNF_RAM_Server ) - DDR ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( Min( CS ,MUM ) * RCSe ) / ( ( ( MUM + ( MUC * ( MUC / CS ) ) ) + DS ) + ( ( RCSe - MUR ) * ( ( RRSe * Min( Min( MUM ,RMSe ) ,Min( RCSe ,RMSe ) ) ) + Max( ( DS / ( MUC / MUC ) ),MUR ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.18825109675247248}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,( RRSe / ( RCSe * Min( DS ,CS ) ) ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.22332444366891246}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( RRS,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * ( RCSe / CS ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ),Max( ( MUM / MLU ),RCSe ) ) )", "obj1": 0.657088122605364, "obj2": 0.17231717378491823}, {"determining": "( ( Const - ( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) + ARS ) ,( ( FirstVNF_CPU_Server + Const ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM / Min( ( CS / CS ) ,MUM ) ) ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + RRSe ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Max( Min( ( Max( Const,Min( ACS ,Min( ARS ,ACS ) ) ) - ( FirstVNF_CPU_Server * RRS ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Const ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / MUM ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( ( MUC / CS ) ,RRSe ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5919540229885057, "obj2": 0.2671076137021285}, {"determining": "( Max( Const,Min( ACS ,( ( FirstVNF_RAM * ( AMS * ( FirstVNF_Mem - FirstVNF_RAM ) ) ) - MDR ) ) ) - ( MDR * ( Max( ( Min( FirstVNF_RAM ,MRS ) / Const ),FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,MDR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + ( Min( ( RMSe + ( MUM * RMSe ) ) ,RRSe ) - MLU ) ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.6973180076628352, "obj2": 0.1382664120032514}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( RRSe + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6839080459770115, "obj2": 0.14706496831783078}, {"determining": "( Max( Min( ( PN + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.7145593869731801, "obj2": 0.12282919009836811}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6915708812260536, "obj2": 0.1422386119194659}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),Const ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - ( RRS / ( ACS - FirstVNF_CPU_Server ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( ( ( Max( ( RCSe * Min( DS ,CS ) ),( RMSe + MUR ) ) * RCSe ) / RRSe ) / MLU ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MLU / MUM ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1515907751382169}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,CRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15291307710702082}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( FirstVNF_Mem_Server - MDR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( Const,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),Max( DDR,BR ) ) ) ) ) )", "choosing": "( ( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / RCSe ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5613026819923371, "obj2": 0.2955343946622651}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.02349154844669962}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) / Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( ( ( MLU / ( ( RMSe / RMSe ) - MLU ) ) / CS ),( ( ( MUM / MLU ) * DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) - Min( MUM ,RMSe ) )", "obj1": 0.7318007662835249, "obj2": 0.1115147530794145}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( ( Min( Min( CRS ,AMS ) ,BR ) - MRS ) / Const ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe * RMSe ) / ( Min( DS ,Min( Min( MUC ,MLU ) ,MUC ) ) + ( MLU * Max( RCSe,MLU ) ) ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.24755770617221623}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.5996168582375478, "obj2": 0.25682921263418723}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Const / Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,Min( PN ,PN ) ) ),Min( PN ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Min( CS ,MUM ) * ( ( RRSe * RRSe ) + MUC ) ),( ( ( MUM / MLU ) + DS ) + ( RCSe * ( RCSe - RCSe ) ) ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),Max( MLU,MLU ) ) )", "obj1": 0.7528735632183908, "obj2": 0.101030125188835}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.5996168582375478, "obj2": 0.25682921263418723}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9597701149425287, "obj2": 0.016110451869550024}, {"determining": "( ( Const * Max( ( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,PN ) ),CRS ) ) - ( MDR * ( Min( ( Const / Min( MRS ,AMS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( MRS / ARS ) * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( ( RMSe - ( Min( RCSe ,Min( RRSe ,Min( ( MLU - RRSe ) ,RMSe ) ) ) - MUM ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( ( MLU * DS ) - MUC ) / MLU ) + ( MLU * ( RMSe - DS ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.09232523061165981}, {"determining": "( Const - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7662835249042146, "obj2": 0.09480482586552051}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( Max( ( FirstVNF_RAM + DDR ),FirstVNF_Mem_Server ),BR ) - Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Const ) ) ,MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM - RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( RCSe + DS ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5842911877394636, "obj2": 0.27327900833362}, {"determining": "( Max( Const,Min( ACS ,( ( ARS - Min( Min( ( FirstVNF_CPU + DDR ) ,AMS ) ,MDR ) ) / ARS ) ) ) - ( Max( Min( ( BR / CRS ) ,DDR ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * Max( DS,MUR ) ) ) - ( ( ( ( RMSe * RMSe ) / Min( CS ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( Max( MUC,MUR ),( RCSe / DS ) ) + ( ( MUM * ( Max( MLU,Max( RCSe,MUM ) ) / RMSe ) ) / ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01722932452240653}, {"determining": "( Max( Max( BR,Min( ( Min( ACS ,( FirstVNF_Mem_Server - ACS ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) ),Min( ACS ,( BR / Max( ( ( ( PN * Const ) * ARS ) * CRS ),CRS ) ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( RMSe * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( RCSe + ( ( MUM * ( Max( MLU,( MLU * ( RCSe / MUC ) ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5804597701149425, "obj2": 0.2769381710343189}, {"determining": "( Max( Const,Min( FirstVNF_RAM ,DDR ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Const ) ) + Max( Max( DDR,BR ),Max( Min( ACS ,( ( FirstVNF_CPU_Server - BR ) - Const ) ),MRS ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) * RCSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,( ( ( ( MUM * RCSe ) - MUC ) + ( RMSe + MUR ) ) - MUC ) ) ),Min( ( DS + ( MUM / MLU ) ) ,( ( MUR - RCSe ) * MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11395072601071324}, {"determining": "( Max( Const,Min( ACS ,Min( ARS ,ACS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( RCSe * ( MUM + RRSe ) ) + MLU ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9291187739463601, "obj2": 0.026180149698874812}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( RCSe,DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.8524904214559387, "obj2": 0.05620073950946155}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),Max( Min( ( Max( MDR,( FirstVNF_CPU * ( AMS / MDR ) ) ) + Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ,FirstVNF_CPU ),BR ) ) - ( ( ( Min( Max( CRS,AMS ) ,BR ) - MRS ) / Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( ( MUR - CS ) + ( DS * CS ) ) / Max( RRSe,RCSe ) ) - ( Min( MUC ,Max( CS,RMSe ) ) * MUC ) ) * RMSe ) / RRSe ) + ( MUC * RCSe ) ) + ( ( ( RMSe * RMSe ) / ( Min( Min( Min( MUC ,MLU ) ,MUC ) ,DS ) + ( MLU * Max( RCSe,MLU ) ) ) ) * Max( ( RMSe + RMSe ),Min( CS ,MUM ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.24755770617221623}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10806451902888946}, {"determining": "( ( MRS - MDR ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / RRS ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) - Min( MUR ,( CS * RRSe ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,( ( ( CS + MLU ) / Max( RMSe,MUC ) ) + Max( ( RMSe / RCSe ),( MUM + RMSe ) ) ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6647509578544061, "obj2": 0.15903049763431498}, {"determining": "( Min( ( ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( CRS + CRS ) ) ) ) ) - ( Const + Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( Max( RMSe,( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( Max( MUR,( RRSe * ( MUM + RCSe ) ) ) / ( RRSe + ( ( RCSe - RMSe ) + ( MUC + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07665905305967999}, {"determining": "( Max( ( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) / BR ),( MDR + FirstVNF_RAM ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( Min( FirstVNF_RAM ,MRS ) / Const ) * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( ( DS + MUM ) * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS / MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( RMSe / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5900383141762452, "obj2": 0.27051254331134666}, {"determining": "( Min( Min( RRS ,Const ) ,Min( FirstVNF_CPU_Server ,( ( ARS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR * ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( RCSe ,MUC ) * ( ( MUM * DS ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8295019157088123, "obj2": 0.06748795915074257}, {"determining": "( Min( Const ,Min( ( AMS / FirstVNF_Mem ) ,Min( ( RRS / PN ) ,MDR ) ) ) - ( RRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( MUM * ( RCSe + RRSe ) ) * ( ( ( RMSe + Min( MUR ,MUC ) ) - MUM ) - MLU ) ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( ( MUC / CS ) ,( ( RMSe / MUM ) * Max( MUM,MUM ) ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.28648328362093933}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7030651340996169, "obj2": 0.13128979916643438}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR + ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU - ACS ) + Const ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( ( ( MUM - MUM ) / MUC ) - Min( MLU ,CS ) ),RCSe )", "obj1": 0.842911877394636, "obj2": 0.06327512020394836}, {"determining": "( ( Const - CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( BR - MDR ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * ( MUM - CS ) ) ) ,RRSe ) ),( ( ( MUM / RCSe ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11750345376011592}, {"determining": "( Max( Const,( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,PN ) + ( Max( Min( FirstVNF_CPU ,BR ),BR ) - ( RRS / ( ( ARS * FirstVNF_Mem ) / ( ACS - ( FirstVNF_RAM - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( ( RCSe / ( Max( RCSe,MUM ) * Min( CS ,RMSe ) ) ) * ( MUC * ( MUC / DS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / ( Max( RRS,ARS ) + FirstVNF_RAM_Server ) ) ,MDR ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,( ( ( MUR - Min( MUM ,MLU ) ) * RMSe ) - ( ( RCSe - RRSe ) + MLU ) ) ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7088122605363985, "obj2": 0.12909981451875577}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9444444444444444, "obj2": 0.020988664866478896}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( ( RMSe + ( Min( ( RMSe + ( MUM * RMSe ) ) ,RRSe ) - MLU ) ),( MLU * ( ( MUM / Max( MUC,MLU ) ) + DS ) ) ) ),RCSe )", "obj1": 0.8045977011494253, "obj2": 0.08159939079784699}, {"determining": "( ( FirstVNF_CPU * Max( Const,FirstVNF_Mem_Server ) ) - ( MDR * ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( RCSe + ( RCSe * RMSe ) ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( Max( RRSe,MLU ) * MLU ) ) ,RRSe ) ),( ( ( MUM / MLU ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) - Max( ( Max( MUR,MUC ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7586206896551724, "obj2": 0.09851719316028454}, {"determining": "Min( Min( ( BR / Max( Min( ACS ,( ( FirstVNF_Mem_Server - ( ARS / ACS ) ) - MDR ) ),FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( RMSe + DS ),RCSe )", "obj1": 0.8697318007662835, "obj2": 0.05130193386502208}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.048411844888334186}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( ARS,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( ( ( AMS - BR ) / FirstVNF_Mem ) ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / AMS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( ( MUC - ( MUC / Max( MUC,( RMSe + MUC ) ) ) ) / CS ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.8486590038314177, "obj2": 0.06075250874780762}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - AMS ) ) + Max( MDR,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MLU ) / ( RMSe * MUM ) ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( ( Min( ( Min( ( BR + MDR ) ,( MDR / FirstVNF_Mem ) ) * ACS ) ,( DDR + BR ) ) + FirstVNF_CPU ) - Min( ( AMS + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( MUM + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,( MLU / MLU ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09130375656756465}, {"determining": "( Min( ( Max( BR,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( RRS / Const ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( ( MLU * RMSe ) / RMSe ),( MUR + MUM ) ) ),( ( ( MUM / MLU ) + DS ) / MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( ( MUM / Max( ( MUM / RRSe ),( CS + MUM ) ) ) + DS ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9080459770114943, "obj2": 0.0346965051181603}, {"determining": "( ( Const * CRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / ( CS + ( RCSe + RRSe ) ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) / RMSe ) ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.7911877394636015, "obj2": 0.08710928540195378}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) )", "obj1": 0.9176245210727969, "obj2": 0.02992061336953075}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( ( DDR - FirstVNF_RAM_Server ),ACS ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( Max( MUC,MUR ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8831417624521073, "obj2": 0.04774569099316013}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,PN ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / ( Min( CS ,MUM ) * RCSe ) ),MUC ),RCSe )", "obj1": 0.8659003831417624, "obj2": 0.05158709724013664}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - ( MDR + FirstVNF_CPU_Server ) ) ) ) - ( ( FirstVNF_Mem_Server - MDR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),( DDR + BR ) ) ) ) ) )", "choosing": "( RRSe + Max( RMSe,RRSe ) )", "obj1": 0.578544061302682, "obj2": 0.2819519303241442}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( MLU * ( ( MUM / Max( ( MUM / RRSe ),( CS + MUM ) ) ) + DS ) ) ) ),RCSe )", "obj1": 0.7950191570881227, "obj2": 0.08497786915077683}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.11738473445567259}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10633479107611563}, {"determining": "Min( Min( ( Max( Const,Min( ( DDR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( CRS + FirstVNF_Mem ) * FirstVNF_Mem ) * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS * BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + ( DS * CS ) ) - Max( ( Max( ( RMSe / Max( ( MUM + RMSe ),( CS + MUM ) ) ),Max( MUC,MUR ) ) * RRSe ),( ( RCSe * DS ) + MLU ) ) )", "obj1": 0.9233716475095786, "obj2": 0.02847432312314886}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08288266512231153}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8218390804597702, "obj2": 0.07349111856741275}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),MUC ),RCSe )", "obj1": 0.842911877394636, "obj2": 0.06327512020394836}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),( FirstVNF_RAM_Server + DDR ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,CS ) * ( ( ( MUM / MLU ) - ( MUC + ( ( RCSe - MUM ) / DS ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8582375478927203, "obj2": 0.05530418734443252}, {"determining": "( ( Const + Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( RRS + FirstVNF_CPU_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( Max( MUC,( DS - MUC ) ),( RRSe / RCSe ) ) / MLU ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( MUM / MLU ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8467432950191571, "obj2": 0.061626229656686626}, {"determining": "( ( Const + ( MDR + FirstVNF_RAM_Server ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( MDR - FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU + ( ( ( ( RCSe + MLU ) - MLU ) / CS ) * CS ) ) - MUC )", "obj1": 0.8237547892720306, "obj2": 0.07322036048569512}, {"determining": "( Min( PN ,FirstVNF_Mem_Server ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + RRS ) ) )", "choosing": "( ( MLU + ( ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) * MUC ) ) - Max( ( Max( MLU,MUM ) * ( MUR - RMSe ) ),RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.027975332082441927}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8850574712643678, "obj2": 0.04417891220772916}, {"determining": "( ( Min( ( ( FirstVNF_RAM / MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) - Max( Min( ( RRS / ( DDR - PN ) ) ,Max( Min( FirstVNF_RAM_Server ,PN ),AMS ) ),RRS ) )", "choosing": "( Max( ( Min( CS ,MUM ) * ( ( ( MUM / MLU ) - ( MUC + ( MUC / RMSe ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUC / MLU ) + Min( MUM ,MUC ) ) + MLU ) ) - Min( MUM ,RMSe ) )", "obj1": 0.7088122605363985, "obj2": 0.12909981451875577}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7030651340996169, "obj2": 0.13128979916643438}, {"determining": "( Min( ( Max( Const,Min( ACS ,( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( ( MUR / RCSe ) + ( MUM / CS ) ) + DS ) + MLU ) ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.001564236277233362}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / MDR ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( MDR - FirstVNF_Mem_Server ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( RMSe + CS ) / CS ) / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.7969348659003831, "obj2": 0.08354415022116703}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( RCSe,MUC ) + MLU ) - ( ( ( ( ( ( Max( MUR,MUR ) + Max( DS,MLU ) ) / Max( ( MUR - DS ),( RCSe * CS ) ) ) + MUM ) + MUC ) + MLU ) + RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.0313266536567717}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Max( Const,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( FirstVNF_RAM_Server + AMS ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.04166790314208167}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RRSe * RRSe ) + MUC ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( RRSe / MLU ) ) ) ) - Max( MUR,RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.7835249042145593, "obj2": 0.09059559194607453}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( CRS - RRS ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Min( RRSe ,Max( Max( Min( MUR ,( MUM + RRSe ) ),Min( ( MUR / RCSe ) ,CS ) ),DS ) ) )", "obj1": 0.8295019157088123, "obj2": 0.06748795915074257}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09757749572265255}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,MDR ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( MUC + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04347150333136967}, {"determining": "( Min( MRS ,BR ) - Min( FirstVNF_Mem ,( PN + Max( Max( FirstVNF_CPU,MDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( ( Max( ( ( RRSe / DS ) / RRSe ),RCSe ) * MUC ) * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( ( ( MUC / ( MUC / ( ( MUC - MUC ) / MUM ) ) ) - MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007368035238830467}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06934784016813234}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( MDR,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( ( RMSe / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8256704980842912, "obj2": 0.06973165547874094}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MUM * RMSe ) - Max( ( Min( ( MUC / DS ) ,MLU ) * MLU ),( ( ( MUM / ( MUC / CS ) ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.004718245059163145}, {"determining": "( Max( Max( Min( ( MDR + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( FirstVNF_Mem_Server - MDR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),Max( DDR,BR ) ) ) ) ) )", "choosing": "( RRSe + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.578544061302682, "obj2": 0.2819519303241442}, {"determining": "( ( Min( ( Min( ( BR + MDR ) ,( MDR / FirstVNF_Mem ) ) * ACS ) ,( DDR + BR ) ) + FirstVNF_CPU ) - Min( ( AMS + ARS ) ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( MUM + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,( MLU / MLU ) ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5747126436781609, "obj2": 0.28526142485791567}, {"determining": "( Max( Const,( Min( ACS ,( FirstVNF_Mem_Server - Max( MDR,( ( CRS * AMS ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( ( RRS * FirstVNF_RAM_Server ) + ( ( RRS / ( DDR + ARS ) ) - Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,MUR ),MLU ) + ( Max( ( ( ( CS + MUR ) - ( RMSe - RRSe ) ) / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) * RMSe ) ) / ( MUR - RMSe ) ) ) ) - Max( ( RCSe * Min( CS ,MUM ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe + MUR ) * RCSe ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.00602391427826327}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - ( ( MDR + Const ) / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( PN,FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( ( MUR * RCSe ) + ( MUC * ( Max( RCSe,( RRSe / CS ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "( Max( Max( ( Const * Const ),PN ),Min( ACS ,( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - MDR ) ) ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ),( Const + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * MLU ) + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.002381613162620352}], "18": [{"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( RRS ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / ( Min( MLU ,MUM ) + RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.5593869731800766, "obj2": 0.30201409241300103}, {"determining": "( Max( Const,CRS ) - ( MDR * ( ARS * FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( Max( RCSe,MLU ) * MLU ) ) ,RRSe ) ),( ( ( MUM / MLU ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) - Max( ( Max( MUR,MUC ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( ( MRS * Max( ARS,CRS ) ) - MDR ) ) ) - Min( ACS ,PN ) )", "choosing": "( Max( ( RRSe + RCSe ),RCSe ) - ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - MUC ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUR * MUM ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( Max( ( MDR - ( ( MDR - ( FirstVNF_Mem_Server - MDR ) ) * ( BR + FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( RRS ,( Min( Min( ACS ,( FirstVNF_Mem_Server - Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( Max( MUM,MUM ) / RMSe ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / ( Min( MLU ,MUM ) + RCSe ) ) + MUM ) + MLU ) ) )", "obj1": 0.5593869731800766, "obj2": 0.30201409241300103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,MRS ) / FirstVNF_Mem_Server ) ) + ( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ),DDR ) - ( ( Max( FirstVNF_Mem_Server,BR ) - ( ( PN - FirstVNF_RAM ) + ARS ) ) - ( ( PN * FirstVNF_RAM_Server ) - DDR ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( Min( CS ,MUM ) * RCSe ) / ( ( ( MUM + ( MUC * ( MUC / CS ) ) ) + DS ) + ( ( RCSe - MUR ) * ( ( RRSe * Min( Min( MUM ,RMSe ) ,Min( RCSe ,RMSe ) ) ) + Max( ( DS / ( MUC / MUC ) ),MUR ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.18825109675247248}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( Max( Max( MUC,MUR ),MLU ) + ( Max( ( ( ( CS + MUR ) - ( RMSe - RRSe ) ) / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) * RMSe ) ) / ( MUR - RMSe ) ) ) ) - Max( ( RCSe * Min( CS ,MUM ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe + MUR ) * RCSe ) ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2600928557293183}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,( RRSe / ( RCSe * Min( DS ,CS ) ) ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.22332444366891246}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.5977011494252874, "obj2": 0.24108751990456675}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - AMS ) ) + Max( MDR,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MLU ) / ( RMSe * MUM ) ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / ( RCSe - RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1368957747234997}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( RRS,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * ( RCSe / CS ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ),Max( ( MUM / MLU ),RCSe ) ) )", "obj1": 0.657088122605364, "obj2": 0.17231717378491823}, {"determining": "( ( Const - ( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) + ARS ) ,( ( FirstVNF_CPU_Server + Const ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM / Min( ( CS / CS ) ,MUM ) ) ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + RRSe ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( ( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( ACS,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( RCSe - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.710727969348659, "obj2": 0.12007959468355528}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.657088122605364, "obj2": 0.17231717378491823}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( ACS,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12835268904342134}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( ( MUM / Max( ( MUM / RRSe ),( CS + MUM ) ) ) + DS ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9080459770114943, "obj2": 0.0346965051181603}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),Const ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - ( RRS / ( ACS - FirstVNF_CPU_Server ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( ( ( Max( ( RCSe * Min( DS ,CS ) ),( RMSe + MUR ) ) * RCSe ) / RRSe ) / MLU ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MLU / MUM ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1515907751382169}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9444444444444444, "obj2": 0.020988664866478896}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,CRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15291307710702082}, {"determining": "( Max( Const,Min( ACS ,Min( ARS ,ACS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( RCSe * ( MUM + RRSe ) ) + MLU ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "( Max( Const,Min( ACS ,( RRS / MRS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( ( RMSe * RMSe ) * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( ( MUC / CS ) ,RRSe ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5613026819923371, "obj2": 0.29297132902440276}, {"determining": "( Const - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7662835249042146, "obj2": 0.09480482586552051}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( RRSe + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6839080459770115, "obj2": 0.14706496831783078}, {"determining": "( Max( Const,Min( FirstVNF_RAM ,DDR ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Const ) ) + Max( Max( DDR,BR ),Max( Min( ACS ,( ( FirstVNF_CPU_Server - BR ) - Const ) ),MRS ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) * RCSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,( ( ( ( MUM * RCSe ) - MUC ) + ( RMSe + MUR ) ) - MUC ) ) ),Min( ( DS + ( MUM / MLU ) ) ,( ( MUR - RCSe ) * MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11395072601071324}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7030651340996169, "obj2": 0.13128979916643438}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8199233716475096, "obj2": 0.07261426298905492}, {"determining": "( Max( Const,Min( ACS ,( ( ARS - Min( Min( ( FirstVNF_CPU + DDR ) ,AMS ) ,MDR ) ) / ARS ) ) ) - ( Max( Min( ( BR / CRS ) ,DDR ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * Max( DS,MUR ) ) ) - ( ( ( ( RMSe * RMSe ) / Min( CS ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( Max( MUC,MUR ),( RCSe / DS ) ) + ( ( MUM * ( Max( MLU,Max( RCSe,MUM ) ) / RMSe ) ) / ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01722932452240653}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),( FirstVNF_RAM_Server + DDR ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,CS ) * ( ( ( MUM / MLU ) - ( MUC + ( ( RCSe - MUM ) / DS ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( ( MRS - MDR ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / RRS ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) - Min( MUR ,( CS * RRSe ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,( ( ( CS + MLU ) / Max( RMSe,MUC ) ) + Max( ( RMSe / RCSe ),( MUM + RMSe ) ) ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6647509578544061, "obj2": 0.15903049763431498}, {"determining": "( Max( Max( ( Const * Const ),PN ),Min( ACS ,( ( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) - MDR ) ) ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ),( Const + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * MLU ) + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( Min( RRSe ,DS ) + DS ) + MLU ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.041232608311656344}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( RCSe,MUC ) + MLU ) - ( ( ( ( ( ( Max( MUR,MUR ) + Max( DS,MLU ) ) / Max( ( MUR - DS ),( RCSe * CS ) ) ) + MUM ) + MUC ) + MLU ) + RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.0313266536567717}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,MDR ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / ( BR - MDR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( RRSe + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04346132823552599}, {"determining": "( ( Const - CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( BR - MDR ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * ( MUM - CS ) ) ) ,RRSe ) ),( ( ( MUM / RCSe ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11750345376011592}, {"determining": "( ( Const * CRS ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / ( CS + ( RCSe + RRSe ) ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + Min( Max( ( RCSe / DS ),Max( MUC,MUR ) ) ,( ( MUM * ( Max( MLU,( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) / RMSe ) ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.7911877394636015, "obj2": 0.08710928540195378}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,PN ) + ( Max( Min( FirstVNF_CPU ,BR ),BR ) - ( RRS / ( ( ARS * FirstVNF_Mem ) / ( ACS - ( FirstVNF_RAM - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( ( RCSe / ( Max( RCSe,MUM ) * Min( CS ,RMSe ) ) ) * ( MUC * ( MUC / DS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( MDR,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Min( BR ,AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) - Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,( MUR - RMSe ) ) ) ) ,RRSe ) ),( ( Max( ( MLU + RCSe ),( MLU / ( ( RRSe * RCSe ) + ( CS * RCSe ) ) ) ) + Max( MUC,MUC ) ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8045977011494253, "obj2": 0.07841284538268319}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,PN ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / ( Min( CS ,MUM ) * RCSe ) ),MUC ),RCSe )", "obj1": 0.8659003831417624, "obj2": 0.05158709724013664}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_Mem_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7586206896551724, "obj2": 0.09846425016870197}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.048411844888334186}, {"determining": "( Min( ( Max( BR,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( RRS / Const ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( ( MLU * RMSe ) / RMSe ),( MUR + MUM ) ) ),( ( ( MUM / MLU ) + DS ) / MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09757749572265255}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( MDR,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( ( RMSe / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8256704980842912, "obj2": 0.06973165547874094}, {"determining": "( Const - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( ( MUC - ( MUC / Max( MUC,( RMSe + MUC ) ) ) ) / CS ) ) ) - Max( ( RRSe + DS ),RCSe ) )", "obj1": 0.7854406130268199, "obj2": 0.08885242118928234}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),( ARS * BR ) ) - ( ACS * Min( ( Max( DDR,BR ) - Max( ( ( FirstVNF_Mem_Server - MDR ) * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( RRSe / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( MUM / RRSe ),( ( ( RMSe * MLU ) - Max( MUR,MUM ) ) / CS ) ) ) + DS ) ) )", "obj1": 0.9559386973180076, "obj2": 0.015059409936572553}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ),Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( Max( RMSe,RRSe ),DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05870604379585486}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - Min( FirstVNF_CPU ,( DDR / MDR ) ) ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) * ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * Max( MUR,MUC ) ) ) - ( ( RRSe * RMSe ) * ( ( Min( MUC ,RCSe ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) / MUC ) ) )", "obj1": 0.8467432950191571, "obj2": 0.06083314679120272}, {"determining": "( ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_CPU ,BR ),AMS ) ),MRS ) ) ) ) - Max( Const,Min( ACS ,Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "( ( RCSe / ( RRSe / ( MLU + ( ( ( ( RCSe / CS ) / Max( MUC,CS ) ) - MUC ) * ( RCSe + ( RCSe / RMSe ) ) ) ) ) ) - Max( ( Min( CS ,MUM ) * ( ( Max( ( MUM + RMSe ),( CS + MUM ) ) * ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) ) / Max( RMSe,MUR ) ) ),( MUC / ( ( RMSe + Max( ( MUR - RCSe ),( Max( RCSe,RRSe ) * Max( CS,CS ) ) ) ) * DS ) ) ) )", "obj1": 0.6800766283524904, "obj2": 0.14768211680601584}, {"determining": "( Max( ( ( FirstVNF_Mem * Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) - RRS ),FirstVNF_RAM_Server ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( DS + ( ( RRSe / ( ( ( DS / MUC ) * ( RRSe * RCSe ) ) + MLU ) ) / ( RCSe / Min( MLU ,( RRSe - RMSe ) ) ) ) ) + ( ( MUR + ( RRSe * RCSe ) ) - DS ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07665905305967999}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09130375656756465}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( FirstVNF_Mem_Server - MDR ),( MDR + AMS ) ),BR ) - Max( ( RRS / ( DDR + ARS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( CS - ( ( MUM / MLU ) + DS ) ) ) ),RCSe )", "obj1": 0.8831417624521073, "obj2": 0.04609768222959518}, {"determining": "( Max( Min( Const ,Const ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + Max( DDR,BR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( RMSe * MLU ) / Min( ( MUR * RRSe ) ,MUR ) ) + ( ( ( DS + ( RRSe * Min( DS ,MLU ) ) ) - RCSe ) * RCSe ) ) ) )", "obj1": 0.9329501915708812, "obj2": 0.025538400991513888}, {"determining": "( Max( Const,( ACS / ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( PN - MRS ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU + ( MLU * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) ) * ( RCSe + MLU ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Const / Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,Min( PN ,PN ) ) ),Min( PN ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Min( CS ,MUM ) * ( ( RRSe * RRSe ) + MUC ) ),( ( ( MUM / MLU ) + DS ) + ( RCSe * ( RCSe - RCSe ) ) ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),Max( MLU,MLU ) ) )", "obj1": 0.7528735632183908, "obj2": 0.101030125188835}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.09232523061165981}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR + ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU - ACS ) + Const ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( ( ( MUM - MUM ) / MUC ) - Min( MLU ,CS ) ),RCSe )", "obj1": 0.842911877394636, "obj2": 0.06327512020394836}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9291187739463601, "obj2": 0.026180149698874812}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / MDR ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( MDR - FirstVNF_Mem_Server ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( RMSe + CS ) / CS ) / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.8352490421455939, "obj2": 0.06692813688879402}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ),BR ) * Min( Min( RRS ,FirstVNF_RAM_Server ) ,( MDR * ( ( RRS * FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / ( DDR + ARS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RRSe / CS ) * Max( RCSe,( CS - MUR ) ) ),( ( ( ( MLU * MUM ) - MUC ) + Max( RCSe,MLU ) ) - RMSe ) )", "obj1": 0.9540229885057471, "obj2": 0.015709693717272714}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) + MDR ) ) ) - ( MDR * ( ACS + DDR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC * CS ),( ( ( ( CS / Min( RRSe ,RRSe ) ) / MUM ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10971692778826399}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.02349154844669962}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08288266512231153}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) / Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( ( ( MLU / ( ( RMSe / RMSe ) - MLU ) ) / CS ),( ( ( MUM / MLU ) * DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) - Min( MUM ,RMSe ) )", "obj1": 0.7318007662835249, "obj2": 0.1115147530794145}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "( ( MUM * RMSe ) - Max( ( Min( ( MUC / DS ) ,MLU ) * MLU ),( ( ( MUM / ( MUC / CS ) ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.004718245059163145}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.7030651340996169, "obj2": 0.13128979916643438}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,DDR ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.16187268478535116}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_Mem_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Min( CS ,MUM ) * ( ( RRSe * RRSe ) + MUC ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7528735632183908, "obj2": 0.101030125188835}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8850574712643678, "obj2": 0.04417891220772916}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,( RRSe / RCSe ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),MUC ),RCSe )", "obj1": 0.842911877394636, "obj2": 0.06327512020394836}, {"determining": "( ( Const * Max( ( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,PN ) ),CRS ) ) - ( MDR * ( Min( ( Const / Min( MRS ,AMS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( MRS / ARS ) * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( ( RMSe - ( Min( RCSe ,Min( RRSe ,Min( ( MLU - RRSe ) ,RMSe ) ) ) - MUM ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( ( MLU * DS ) - MUC ) / MLU ) + ( MLU * ( RMSe - DS ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.09232523061165981}, {"determining": "( Min( PN ,FirstVNF_Mem_Server ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + RRS ) ) )", "choosing": "( ( MLU + ( ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) * MUC ) ) - Max( ( Max( MLU,MUM ) * ( MUR - RMSe ) ),RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.027975332082441927}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.11738473445567259}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),Max( FirstVNF_Mem,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( DDR / ( Max( Min( Max( PN,BR ) ,PN ),DDR ) - ACS ) ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ACS,MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( ( RRSe / MUC ) / MUM ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5651340996168582, "obj2": 0.292799482004942}, {"determining": "( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ( MRS / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) ) ) ) - Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "( ( MLU + ( ( Min( MLU ,( MUC * ( MUC / Min( CS ,CS ) ) ) ) - Max( ( ( MUC + MUM ) + RCSe ),RCSe ) ) * ( MUC / CS ) ) ) - ( ( CS * ( RMSe / RMSe ) ) / DS ) )", "obj1": 0.9693486590038314, "obj2": 0.010303399584366728}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / MDR ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( MDR - FirstVNF_Mem_Server ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( RMSe + CS ) / CS ) / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.8352490421455939, "obj2": 0.06692813688879402}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( CRS - RRS ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Min( RRSe ,Max( Max( Min( MUR ,( MUM + RRSe ) ),Min( ( MUR / RCSe ) ,CS ) ),DS ) ) )", "obj1": 0.8295019157088123, "obj2": 0.06748795915074257}, {"determining": "Min( Min( ( BR / Max( Min( ACS ,( ( FirstVNF_Mem_Server - ( ARS / ACS ) ) - MDR ) ),FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( RMSe + DS ),RCSe )", "obj1": 0.8697318007662835, "obj2": 0.05130193386502208}, {"determining": "( Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) - Max( Const,( PN + RRS ) ) )", "choosing": "( ( MLU + ( ( MUC * ( ( ( Min( RCSe ,MLU ) * MLU ) * RMSe ) + MUC ) ) * ( MUC / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( RRSe / MUM ),MLU ) ) + DS ) ) )", "obj1": 0.9195402298850575, "obj2": 0.029063217734334464}, {"determining": "( Min( MRS ,BR ) - Min( FirstVNF_Mem ,( PN + Max( Max( FirstVNF_CPU,MDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( ( Max( ( ( RRSe / DS ) / RRSe ),RCSe ) * MUC ) * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( ( ( MUC / ( MUC / ( ( MUC - MUC ) / MUM ) ) ) - MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007368035238830467}, {"determining": "( Max( CRS,Const ) - ( MDR * ( Min( FirstVNF_CPU ,( ARS + ARS ) ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_RAM ,ACS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( ( MUR - RMSe ) - MUC ) - MUM ) + ( MLU * Max( RCSe,MUR ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( ( ( MUM / MLU ) + DS ) - MUR ) * RCSe ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.10553968255812318}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Min( DDR ,( MRS - FirstVNF_CPU ) ) ),MRS ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( FirstVNF_CPU + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUR ) - Max( ( ( ( MUM / ( ( RCSe + Max( MUR,RCSe ) ) * MUM ) ) + DS ) + MLU ),( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.05620073950946155}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.02349154844669962}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( ( ( ( ( RRSe * RRSe ) + MUC ) - MUM ) * ( ( MUC / MUM ) + ( RRSe * ( RRSe / MLU ) ) ) ) - Max( MUR,RRSe ) ) ) - MUM ) - ( CS / MUM ) )", "obj1": 0.7835249042145593, "obj2": 0.09059559194607453}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7318007662835249, "obj2": 0.1115147530794145}, {"determining": "Min( Min( ( Max( Const,Min( ( DDR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( CRS + FirstVNF_Mem ) * FirstVNF_Mem ) * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS * BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + ( DS * CS ) ) - Max( ( Max( ( RMSe / Max( ( MUM + RMSe ),( CS + MUM ) ) ),Max( MUC,MUR ) ) * RRSe ),( ( RCSe * DS ) + MLU ) ) )", "obj1": 0.9233716475095786, "obj2": 0.02847432312314886}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,ACS ) ) - ( Min( ( ( ( FirstVNF_CPU_Server / MDR ) / DDR ) / FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem - ( DDR * AMS ) ) * FirstVNF_Mem ) ) * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( CRS,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( CS / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( ( Min( RCSe ,Max( CS,RMSe ) ) * MUC ) ,RCSe ) * ( ( ( ( MUM / MLU ) + Min( DS ,RMSe ) ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06907245547284402}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8563218390804598, "obj2": 0.056180913100335364}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10806451902888946}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8601532567049809, "obj2": 0.054895059611656444}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( RRSe + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6839080459770115, "obj2": 0.14706496831783078}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7394636015325671, "obj2": 0.10762317383774223}, {"determining": "( Max( Const,Min( ( ( ( ( FirstVNF_CPU_Server + RRS ) + ACS ) / ( Max( FirstVNF_CPU,Const ) / ( ( ARS + ACS ) + CRS ) ) ) / AMS ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( ( MDR * FirstVNF_Mem_Server ),BR ) * ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( ( FirstVNF_Mem_Server * ( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU + ( ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + Min( Max( ( DS - RCSe ),MUM ) ,Max( MUC,DS ) ) ) ) * ( Max( ( DS / RCSe ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8601532567049809, "obj2": 0.054895059611656444}, {"determining": "( ( Const + Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( RRS + FirstVNF_CPU_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( Max( MUC,( DS - MUC ) ),( RRSe / RCSe ) ) / MLU ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),MUC ),RCSe )", "obj1": 0.8697318007662835, "obj2": 0.05130193386502208}, {"determining": "( Min( ( Min( FirstVNF_CPU_Server ,( MDR - BR ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_Mem_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * ( DS / ( Min( ( Max( RCSe,MUM ) - ( RRSe + MUC ) ) ,( Min( RMSe ,RCSe ) - ( CS * MUR ) ) ) / ( RRSe - DS ) ) ) ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( FirstVNF_Mem_Server - MDR ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.7969348659003831, "obj2": 0.08354415022116703}], "19": [{"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( RRS ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / ( Min( MLU ,MUM ) + RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.5593869731800766, "obj2": 0.30201409241300103}, {"determining": "( Min( MRS ,BR ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( Min( ( MUC / ( MUC / ( ( MUC - MUC ) / MUM ) ) ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,CRS ) - ( MDR * ( ARS * FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( Max( RCSe,MLU ) * MLU ) ) ,RRSe ) ),( ( ( MUM / MLU ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) - Max( ( Max( MUR,MUC ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( RRS ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / ( Min( MLU ,MUM ) + RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.5593869731800766, "obj2": 0.30201409241300103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,MRS ) / FirstVNF_Mem_Server ) ) + ( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ),DDR ) - ( ( Max( FirstVNF_Mem_Server,BR ) - ( ( PN - FirstVNF_RAM ) + ARS ) ) - ( ( PN * FirstVNF_RAM_Server ) - DDR ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( Min( CS ,MUM ) * RCSe ) / ( ( ( MUM + ( MUC * ( MUC / CS ) ) ) + DS ) + ( ( RCSe - MUR ) * ( ( RRSe * Min( Min( MUM ,RMSe ) ,Min( RCSe ,RMSe ) ) ) + Max( ( DS / ( MUC / MUC ) ),MUR ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.18825109675247248}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,( RRSe / ( RCSe * Min( DS ,CS ) ) ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.22332444366891246}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( Max( Max( MUC,MUR ),MLU ) + ( Max( ( ( ( CS + MUR ) - ( RMSe - RRSe ) ) / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) * RMSe ) ) / ( MUR - RMSe ) ) ) ) - Max( ( RCSe * Min( CS ,MUM ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe + MUR ) * RCSe ) ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2600928557293183}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / ( Min( CS ,MUM ) * RCSe ) ),MUC ),RCSe )", "obj1": 0.5919540229885057, "obj2": 0.2507337169755746}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - AMS ) ) + Max( MDR,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MLU ) / ( RMSe * MUM ) ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( RRS,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * ( RCSe / CS ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ),Max( ( MUM / MLU ),RCSe ) ) )", "obj1": 0.657088122605364, "obj2": 0.17231717378491823}, {"determining": "( ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( Const,CRS ),AMS ) ),MRS ) ) ) ) - ( Max( ACS,PN ) * FirstVNF_Mem ) )", "choosing": "( Max( MUM,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( ( ( ( DS - DS ) - Max( RCSe,MUM ) ) / MUC ) / MUM ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.15674491888291073}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.5977011494252874, "obj2": 0.24108751990456675}, {"determining": "( ( Const - ( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) + ARS ) ,( ( FirstVNF_CPU_Server + Const ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM / Min( ( CS / CS ) ,MUM ) ) ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + RRSe ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( FirstVNF_Mem_Server * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,Min( MUM ,RMSe ) ) ) / ( RCSe - RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.6992337164750958, "obj2": 0.13018139708027796}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.657088122605364, "obj2": 0.17231717378491823}, {"determining": "( ( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( ACS,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( RCSe - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.710727969348659, "obj2": 0.12007959468355528}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12619516092528793}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),Const ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - ( RRS / ( ACS - FirstVNF_CPU_Server ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( ( ( Max( ( RCSe * Min( DS ,CS ) ),( RMSe + MUR ) ) * RCSe ) / RRSe ) / MLU ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MLU / MUM ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1515907751382169}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.1384881804841185}, {"determining": "( Max( Const,Min( ACS ,( RRS / MRS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( ( RMSe * RMSe ) * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( ( MUC / CS ) ,RRSe ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5613026819923371, "obj2": 0.29297132902440276}, {"determining": "( ( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) - Min( MUR ,( CS * CS ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,( Max( ( RMSe / RCSe ),( MUM + RMSe ) ) - RRSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7796934865900383, "obj2": 0.0901550506024614}, {"determining": "( Max( Const,( ACS * ( FirstVNF_Mem_Server - MDR ) ) ) - Min( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( ( MUM / Max( ( MUM / RRSe ),( CS + MUM ) ) ) + DS ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9080459770114943, "obj2": 0.0346965051181603}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( RRS - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + ( Min( MLU ,MUM ) + RCSe ) ) + MLU ) ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.24087530289084672}, {"determining": "( Max( Const,Min( ACS ,( ( ARS - Min( Min( ( FirstVNF_CPU + DDR ) ,AMS ) ,MDR ) ) / ARS ) ) ) - ( Max( Min( ( BR / CRS ) ,DDR ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * Max( DS,MUR ) ) ) - ( ( ( ( RMSe * RMSe ) / Min( CS ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( Max( MUC,MUR ),( RCSe / DS ) ) + ( ( MUM * ( Max( MLU,Max( RCSe,MUM ) ) / RMSe ) ) / ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01722932452240653}, {"determining": "( Max( Const,Min( ACS ,Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,CRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * MUM ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15291307710702082}, {"determining": "( Max( Max( ( Const * Const ),PN ),Min( ACS ,( ( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) - MDR ) ) ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ),( Const + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * MLU ) + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( Min( RRSe ,DS ) + DS ) + MLU ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.041232608311656344}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( RRSe + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.6839080459770115, "obj2": 0.14706496831783078}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / ( MUC / CS ) ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7835249042145593, "obj2": 0.08629374822610003}, {"determining": "( ( Const - CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( BR - MDR ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * ( MUM - CS ) ) ) ,RRSe ) ),( ( ( MUM / RCSe ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11750345376011592}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,PN ) + ( Max( Min( FirstVNF_CPU ,BR ),BR ) - ( RRS / ( ( ARS * FirstVNF_Mem ) / ( ACS - ( FirstVNF_RAM - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( ( RCSe / ( Max( RCSe,MUM ) * Min( CS ,RMSe ) ) ) * ( MUC * ( MUC / DS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08288266512231153}, {"determining": "( Max( Const,Min( ACS ,Min( ARS ,ACS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( RCSe * ( MUM + RRSe ) ) + MLU ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / MDR ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( MDR - FirstVNF_Mem_Server ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( RMSe + CS ) / CS ) / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.8371647509578544, "obj2": 0.06537681895231656}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8199233716475096, "obj2": 0.07261426298905492}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( MDR,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Min( BR ,AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) - Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,( MUR - RMSe ) ) ) ) ,RRSe ) ),( ( Max( ( MLU + RCSe ),( MLU / ( ( RRSe * RCSe ) + ( CS * RCSe ) ) ) ) + Max( MUC,MUC ) ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8045977011494253, "obj2": 0.07841284538268319}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_Mem_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7586206896551724, "obj2": 0.09846425016870197}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / ( RCSe - RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1368957747234997}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( FirstVNF_Mem_Server - MDR ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.7969348659003831, "obj2": 0.08354415022116703}, {"determining": "( Max( Const,Min( FirstVNF_RAM ,DDR ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Const ) ) + Max( Max( DDR,BR ),Max( Min( ACS ,( ( FirstVNF_CPU_Server - BR ) - Const ) ),MRS ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) * RCSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,( ( ( ( MUM * RCSe ) - MUC ) + ( RMSe + MUR ) ) - MUC ) ) ),Min( ( DS + ( MUM / MLU ) ) ,( ( MUR - RCSe ) * MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11395072601071324}, {"determining": "( Max( Const,Min( ( ( ( ( FirstVNF_CPU_Server + RRS ) + ACS ) / ( Max( FirstVNF_CPU,Const ) / ( ( ARS + ACS ) + CRS ) ) ) / AMS ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( DS / RCSe ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + Min( Max( ( RCSe - RCSe ),RMSe ) ,Max( MUC,DS ) ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.842911877394636, "obj2": 0.062419818484818985}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),( ARS * BR ) ) - ( ACS * Min( ( Max( DDR,BR ) - Max( ( ( FirstVNF_Mem_Server - MDR ) * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( RRSe / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( MUM / RRSe ),( ( ( RMSe * MLU ) - Max( MUR,MUM ) ) / CS ) ) ) + DS ) ) )", "obj1": 0.9559386973180076, "obj2": 0.015059409936572553}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,Max( BR,AMS ) ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( CRS,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MLU ,RCSe ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.9137931034482759, "obj2": 0.033142268677036964}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ),Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( Max( RMSe,RRSe ),DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05870604379585486}, {"determining": "( ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_CPU ,BR ),AMS ) ),MRS ) ) ) ) - Max( Const,Min( ACS ,Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "( ( RCSe / ( RRSe / ( MLU + ( ( ( ( RCSe / CS ) / Max( MUC,CS ) ) - MUC ) * ( RCSe + ( RCSe / RMSe ) ) ) ) ) ) - Max( ( Min( CS ,MUM ) * ( ( Max( ( MUM + RMSe ),( CS + MUM ) ) * ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) ) / Max( RMSe,MUR ) ) ),( MUC / ( ( RMSe + Max( ( MUR - RCSe ),( Max( RCSe,RRSe ) * Max( CS,CS ) ) ) ) * DS ) ) ) )", "obj1": 0.6800766283524904, "obj2": 0.14768211680601584}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / ( RCSe - RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.6896551724137931, "obj2": 0.1368957747234997}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( Max( RMSe,RRSe ),DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.8103448275862069, "obj2": 0.07546420248776364}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,ARS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.10340793372122509}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Min( DDR ,( MRS - FirstVNF_CPU ) ) ),MRS ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( FirstVNF_CPU + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUR ) - Max( ( ( ( MUM / ( ( RCSe + Max( MUR,RCSe ) ) * MUM ) ) + DS ) + MLU ),( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.05620073950946155}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,MDR ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / ( BR - MDR ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02323984647843026}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.7911877394636015, "obj2": 0.0856548835481205}, {"determining": "( Max( Const,CRS ) - ( MDR * ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) / FirstVNF_RAM_Server ) + Max( ( ( FirstVNF_RAM + AMS ) - RRS ),ACS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( CS / ( CS / ( RMSe * RMSe ) ) ) ) ,RRSe ) ),( ( ( MLU / RCSe ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7720306513409961, "obj2": 0.09448848820327221}, {"determining": "( Max( Const,Min( ( DDR + ARS ) ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( MUM / MLU ) + DS ) ) ) )", "obj1": 0.7279693486590039, "obj2": 0.11216301498275484}, {"determining": "( ( Const + Min( ACS ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( MDR * ( Min( ( Min( Const ,Min( Max( DDR,BR ) ,( FirstVNF_Mem_Server - MDR ) ) ) / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS + ( Const * BR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / Max( MUM,CS ) ) ) ) - Max( ( Max( MLU,( MUM / DS ) ) + RCSe ),MUR ) )", "obj1": 0.8793103448275862, "obj2": 0.048299959317811385}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) + MDR ) ) ) - ( MDR * ( ACS + DDR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC * CS ),( ( ( ( CS / Min( RRSe ,RRSe ) ) / MUM ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10971692778826399}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( ( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Max( RRS,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( ( FirstVNF_CPU + ARS ) / MRS ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( ( ( ( MUM + CS ) - DS ) + ( CS - ( RMSe / ( CS * MUR ) ) ) ) / MUM ) ) + MLU ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06607131552243305}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( RRSe / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) )", "obj1": 0.9655172413793104, "obj2": 0.011268284275183095}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( ( MUM / Max( ( MUM / RRSe ),( CS + MUM ) ) ) + DS ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.8601532567049809, "obj2": 0.05366577820741018}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( CRS - RRS ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - Min( RRSe ,Max( Max( Min( MUR ,( MUM + RRSe ) ),Min( ( MUR / RCSe ) ,CS ) ),DS ) ) )", "obj1": 0.8295019157088123, "obj2": 0.06748795915074257}, {"determining": "( Max( ( ( FirstVNF_Mem * Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) - RRS ),FirstVNF_RAM_Server ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( DS + ( ( RRSe / ( ( ( DS / MUC ) * ( RRSe * RCSe ) ) + MLU ) ) / ( RCSe / Min( MLU ,( RRSe - RMSe ) ) ) ) ) + ( ( MUR + ( RRSe * RCSe ) ) - DS ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07665905305967999}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ),Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.8237547892720306, "obj2": 0.07023806519890402}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * Max( BR,MDR ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( Max( ( RRSe / CS ),MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006713185969138584}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8850574712643678, "obj2": 0.04417891220772916}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( ( FirstVNF_Mem_Server - MDR ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9731800766283525, "obj2": 0.010185784325392886}, {"determining": "( Const - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7662835249042146, "obj2": 0.09480482586552051}, {"determining": "( Min( ( Max( BR,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( RRS / Const ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( ( MLU * RMSe ) / RMSe ),( MUR + MUM ) ) ),( ( ( MUM / MLU ) + DS ) / MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "( ( Const + Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( RRS + FirstVNF_CPU_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( Max( MUC,( DS - MUC ) ),( RRSe / RCSe ) ) / MLU ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_Mem_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Min( CS ,MUM ) * ( ( RRSe * RRSe ) + MUC ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7528735632183908, "obj2": 0.101030125188835}, {"determining": "( Min( MRS ,BR ) - Min( FirstVNF_Mem ,( PN + Max( Max( FirstVNF_CPU,MDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( ( Max( ( ( RRSe / DS ) / RRSe ),RCSe ) * MUC ) * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( ( ( MUC / ( MUC / ( ( MUC - MUC ) / MUM ) ) ) - MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007368035238830467}, {"determining": "( ( Const * Max( ( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,PN ) ),CRS ) ) - ( MDR * ( Min( ( Const / Min( MRS ,AMS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( MRS / ARS ) * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( ( RMSe - ( Min( RCSe ,Min( RRSe ,Min( ( MLU - RRSe ) ,RMSe ) ) ) - MUM ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( ( MLU * DS ) - MUC ) / MLU ) + ( MLU * ( RMSe - DS ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.09232523061165981}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.11738473445567259}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,PN ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / ( Min( CS ,MUM ) * RCSe ) ),MUC ),RCSe )", "obj1": 0.8639846743295019, "obj2": 0.051800171842502095}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.02349154844669962}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,MDR ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / ( BR - MDR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( RRSe + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04346132823552599}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_RAM ,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.789272030651341, "obj2": 0.08603309227702183}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( RCSe,MUC ) + MLU ) - ( ( ( ( ( ( Max( MUR,MUR ) + Max( DS,MLU ) ) / Max( ( MUR - DS ),( RCSe * CS ) ) ) + MUM ) + MUC ) + MLU ) + RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.0313266536567717}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_RAM ,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) / MUM ) + ( MLU * ( MUR - DS ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.048411844888334186}, {"determining": "Min( Min( ( BR / Max( Min( ACS ,( ( FirstVNF_Mem_Server - ( ARS / ACS ) ) - MDR ) ),FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( RMSe + DS ),RCSe )", "obj1": 0.8697318007662835, "obj2": 0.05130193386502208}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) - Min( MUR ,( CS * RRSe ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,( Max( ( RMSe / RCSe ),( MUM + RMSe ) ) - RRSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.764367816091954, "obj2": 0.09572271514600879}, {"determining": "( Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) - Max( Const,( PN + RRS ) ) )", "choosing": "( ( MLU + ( ( MUC * ( ( ( Min( RCSe ,MLU ) * MLU ) * RMSe ) + MUC ) ) * ( MUC / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( RRSe / MUM ),MLU ) ) + DS ) ) )", "obj1": 0.9195402298850575, "obj2": 0.029063217734334464}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8563218390804598, "obj2": 0.056180913100335364}, {"determining": "( Max( Const,Max( Max( ( Const / FirstVNF_RAM ),( FirstVNF_Mem / Min( RRS ,Max( Min( BR ,FirstVNF_CPU ),RRS ) ) ) ),ARS ) ) - ( MDR * ( ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( CRS,AMS ) ),MRS ) ) + Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) ) + ( Min( ( MDR + ARS ) ,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( Min( MUR ,( MUM + DS ) ) + Max( ( RRSe * Max( ( RMSe / ( MLU - RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.8582375478927203, "obj2": 0.05485732059389842}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9444444444444444, "obj2": 0.020988664866478896}, {"determining": "Min( Min( ( Max( Const,Min( ( DDR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( CRS + FirstVNF_Mem ) * FirstVNF_Mem ) * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS * BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + ( DS * CS ) ) - Max( ( Max( ( RMSe / Max( ( MUM + RMSe ),( CS + MUM ) ) ),Max( MUC,MUR ) ) * RRSe ),( ( RCSe * DS ) + MLU ) ) )", "obj1": 0.9233716475095786, "obj2": 0.02847432312314886}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9291187739463601, "obj2": 0.026180149698874812}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ),Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( Const - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( Max( MUR,RRSe ),DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.9923371647509579, "obj2": 0.00269519201356508}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) )", "obj1": 0.9176245210727969, "obj2": 0.029891229102697037}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9444444444444444, "obj2": 0.020988664866478896}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,ACS ) ) - ( Min( ( ( ( FirstVNF_CPU_Server / MDR ) / DDR ) / FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem - ( DDR * AMS ) ) * FirstVNF_Mem ) ) * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( CRS,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( CS / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( ( Min( RCSe ,Max( CS,RMSe ) ) * MUC ) ,RCSe ) * ( ( ( ( MUM / MLU ) + Min( DS ,RMSe ) ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06907245547284402}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,MDR ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / ( BR - MDR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( RRSe + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04346132823552599}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10806451902888946}, {"determining": "( ( Const * Max( ( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,PN ) ),CRS ) ) - ( MDR * ( Min( ( Const / Min( MRS ,AMS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( MRS / ARS ) * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( ( RMSe - ( Min( RCSe ,Min( RRSe ,Min( ( MLU - RRSe ) ,RMSe ) ) ) - MUM ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( ( MLU * DS ) - MUC ) / MLU ) + ( MLU * ( RMSe - DS ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0020774074115205805}, {"determining": "( Max( Min( Const ,Const ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + Max( DDR,BR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( RMSe * MLU ) / Min( ( MUR * RRSe ) ,MUR ) ) + ( ( ( DS + ( RRSe * Min( DS ,MLU ) ) ) - RCSe ) * RCSe ) ) ) )", "obj1": 0.9329501915708812, "obj2": 0.025538400991513888}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ),BR ) * Min( Min( RRS ,FirstVNF_RAM_Server ) ,( MDR * ( ( RRS * FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / ( DDR + ARS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RRSe / CS ) * Max( RCSe,( CS - MUR ) ) ),( ( ( ( MLU * MUM ) - MUC ) + Max( RCSe,MLU ) ) - RMSe ) )", "obj1": 0.9540229885057471, "obj2": 0.015709693717272714}, {"determining": "( Min( PN ,FirstVNF_Mem_Server ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + RRS ) ) )", "choosing": "( ( MLU + ( ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) * MUC ) ) - Max( ( Max( MLU,MUM ) * ( MUR - RMSe ) ),RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.027975332082441927}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( FirstVNF_Mem_Server - MDR ),( MDR + AMS ) ),BR ) - Max( ( RRS / ( DDR + ARS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( CS - ( ( MUM / MLU ) + DS ) ) ) ),RCSe )", "obj1": 0.8831417624521073, "obj2": 0.04609768222959518}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09757749572265255}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),Max( FirstVNF_Mem,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( DDR / ( Max( Min( Max( PN,BR ) ,PN ),DDR ) - ACS ) ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ACS,MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( ( RRSe / MUC ) / MUM ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5651340996168582, "obj2": 0.292799482004942}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) / Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( ( ( MLU / ( ( RMSe / RMSe ) - MLU ) ) / CS ),( ( ( MUM / MLU ) * DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) - Min( MUM ,RMSe ) )", "obj1": 0.7318007662835249, "obj2": 0.1115147530794145}], "20": [{"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( RRS ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / ( Min( MLU ,MUM ) + RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.5593869731800766, "obj2": 0.30201409241300103}, {"determining": "( ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( Const,CRS ),AMS ) ),MRS ) ) ) ) - ( Max( ACS,PN ) * FirstVNF_Mem ) )", "choosing": "( Max( MUM,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( ( ( ( DS - DS ) - Max( RCSe,MUM ) ) / MUC ) / MUM ) + DS ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,BR ) - Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe + Min( CS ,MUM ) ),( MLU * ( ( ( MUC / ( CS - RCSe ) ) / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) ) ,RMSe ) - Max( ( Min( ( MUC / ( MUC / ( ( MUC - MUC ) / MUM ) ) ) ,MUM ) * Max( ( RCSe / DS ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( Max( ( MDR - ( ( ( FirstVNF_Mem_Server - MDR ) - MDR ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( RRS ,( MRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( MUM ,( MLU * ( MUC / CS ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ),( ( ( MUM / ( Min( MLU ,MUM ) + RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.5593869731800766, "obj2": 0.30201409241300103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM ,MRS ) / FirstVNF_Mem_Server ) ) + ( Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ),DDR ) - ( ( Max( FirstVNF_Mem_Server,BR ) - ( ( PN - FirstVNF_RAM ) + ARS ) ) - ( ( PN * FirstVNF_RAM_Server ) - DDR ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( Min( CS ,MUM ) * RCSe ) / ( ( ( MUM + ( MUC * ( MUC / CS ) ) ) + DS ) + ( ( RCSe - MUR ) * ( ( RRSe * Min( Min( MUM ,RMSe ) ,Min( RCSe ,RMSe ) ) ) + Max( ( DS / ( MUC / MUC ) ),MUR ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.18825109675247248}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( RCSe,( RRSe / ( RCSe * Min( DS ,CS ) ) ) ) / CS ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.22332444366891246}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( Max( Max( MUC,MUR ),MLU ) + ( Max( ( ( ( CS + MUR ) - ( RMSe - RRSe ) ) / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) * RMSe ) ) / ( MUR - RMSe ) ) ) ) - Max( ( RCSe * Min( CS ,MUM ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe + MUR ) * RCSe ) ) ) )", "obj1": 0.5689655172413793, "obj2": 0.2600928557293183}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - AMS ) ) + Max( MDR,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ,FirstVNF_CPU ),BR ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MLU ) / ( RMSe * MUM ) ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5670498084291188, "obj2": 0.2909880856216292}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * Max( RRS,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * ( RCSe / CS ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ),Max( ( MUM / MLU ),RCSe ) ) )", "obj1": 0.657088122605364, "obj2": 0.17231717378491823}, {"determining": "( ( Const - ( Max( ( MDR - ( Max( ( MDR / RRS ),MRS ) * DDR ) ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - Max( CRS,DDR ) ) ) - Min( ( ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) + ARS ) ,( ( FirstVNF_CPU_Server + Const ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUM / Min( ( CS / CS ) ,MUM ) ) ,RMSe ) - Max( ( Min( MUM ,MUM ) * RCSe ),( ( ( MUM / MLU ) + RRSe ) + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23967308854519276}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),FirstVNF_Mem_Server ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( Min( CS ,MUM ) * RCSe ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.5862068965517241, "obj2": 0.24658385443445818}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( RRSe + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.5938697318007663, "obj2": 0.24037342919659646}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.657088122605364, "obj2": 0.17231717378491823}, {"determining": "( ( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( ACS,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( RCSe - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.710727969348659, "obj2": 0.12007959468355528}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,CRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.15674491888291073}, {"determining": "( Max( Const,Min( ACS ,Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,CRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * MUM ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.6666666666666666, "obj2": 0.15291307710702082}, {"determining": "( Max( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ),Const ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - ( RRS / ( ACS - FirstVNF_CPU_Server ) ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,( ( ( Max( ( RCSe * Min( DS ,CS ) ),( RMSe + MUR ) ) * RCSe ) / RRSe ) / MLU ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MLU / MUM ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1515907751382169}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.6915708812260536, "obj2": 0.1319059306035396}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Max( MLU,MUM ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08288266512231153}, {"determining": "( Max( Const,Min( ACS ,( RRS / MRS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( ( RMSe * RMSe ) * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( ( MUC / CS ) ,RRSe ) / RMSe ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5613026819923371, "obj2": 0.29297132902440276}, {"determining": "Min( Min( ( BR / Max( Min( ACS ,( ( FirstVNF_Mem_Server - ( ARS / ACS ) ) - MDR ) ),FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "Max( ( RMSe + DS ),RCSe )", "obj1": 0.8697318007662835, "obj2": 0.05130193386502208}, {"determining": "( Max( Const,Min( ACS ,( RRS / MRS ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( RRSe + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( Min( ( MUC / CS ) ,RRSe ) / RMSe ) ) / ( MUR - RMSe ) ) ) ) )", "obj1": 0.6839080459770115, "obj2": 0.14587825246418343}, {"determining": "( Max( Const,Min( ACS ,( ( ARS - Min( Min( ( FirstVNF_CPU + DDR ) ,AMS ) ,MDR ) ) / ARS ) ) ) - ( Max( Min( ( BR / CRS ) ,DDR ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * Max( DS,MUR ) ) ) - ( ( ( ( RMSe * RMSe ) / Min( CS ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + MUM ) ) ) + ( Max( Max( MUC,MUR ),( RCSe / DS ) ) + ( ( MUM * ( Max( MLU,Max( RCSe,MUM ) ) / RMSe ) ) / ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01722932452240653}, {"determining": "( ( Const - CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( BR - MDR ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * ( MUM - CS ) ) ) ,RRSe ) ),( ( ( MUM / RCSe ) + RMSe ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11750345376011592}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,ACS ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / ( RCSe - RCSe ) ) + DS ) + ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.13445537021199855}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,PN ) + ( Max( Min( FirstVNF_CPU ,BR ),BR ) - ( RRS / ( ( ARS * FirstVNF_Mem ) / ( ACS - ( FirstVNF_RAM - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( MUC * ( ( RCSe / ( Max( RCSe,MUM ) * Min( CS ,RMSe ) ) ) * ( MUC * ( MUC / DS ) ) ) ) ,MUC ) ) )", "obj1": 0.9022988505747126, "obj2": 0.037310844178094035}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / MDR ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( MDR - FirstVNF_Mem_Server ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * ( ( MDR / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( ( ( RMSe + CS ) / CS ) / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.8371647509578544, "obj2": 0.06537681895231656}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_Mem_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Min( CS ,MUM ) * ( ( RRSe * RRSe ) + MUC ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7528735632183908, "obj2": 0.101030125188835}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( Min( ( MUR + RMSe ) ,Min( MUC ,RCSe ) ) * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) - DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8199233716475096, "obj2": 0.07261426298905492}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( Max( RMSe,RRSe ),DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.8045977011494253, "obj2": 0.07704858183371312}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( MDR + ( DDR * PN ) ),MRS ) ) ) + ( Max( AMS,BR ) - ( AMS / RRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC + ( MUC / CS ) ) ) - ( ( RRSe * ( DS + MUC ) ) * Min( ( Max( ( RRSe / MUM ),MLU ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.5919540229885057, "obj2": 0.24649550610387552}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_Mem_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7586206896551724, "obj2": 0.09846425016870197}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.01968091194997413}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( RRSe / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) )", "obj1": 0.9655172413793104, "obj2": 0.011268284275183095}, {"determining": "( Max( Const,Min( ACS ,Min( ARS ,ACS ) ) ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( ( ( RCSe * ( MUM + RRSe ) ) + MLU ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9616858237547893, "obj2": 0.012232055151915572}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_RAM ,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.7394636015325671, "obj2": 0.10739394797160509}, {"determining": "( Min( ( Max( BR,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( RRS / Const ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RCSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( ( MLU * RMSe ) / RMSe ),( MUR + MUM ) ) ),( ( ( MUM / MLU ) + DS ) / MLU ) ) ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07515550730370435}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( FirstVNF_Mem_Server - MDR ),( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.7969348659003831, "obj2": 0.08354415022116703}, {"determining": "Min( Min( ( BR / ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.048103891315467266}, {"determining": "( Max( Const,Min( FirstVNF_RAM ,DDR ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Const ) ) + Max( Max( DDR,BR ),Max( Min( ACS ,( ( FirstVNF_CPU_Server - BR ) - Const ) ),MRS ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) * RCSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,( ( ( ( MUM * RCSe ) - MUC ) + ( RMSe + MUR ) ) - MUC ) ) ),Min( ( DS + ( MUM / MLU ) ) ,( ( MUR - RCSe ) * MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11395072601071324}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,MDR ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / ( BR - MDR ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02323984647843026}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12619516092528793}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( Max( FirstVNF_Mem_Server,( MDR + AMS ) ),BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,PN ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / ( Min( CS ,MUM ) * RCSe ) ),MUC ),RCSe )", "obj1": 0.8639846743295019, "obj2": 0.051800171842502095}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( ( Const + FirstVNF_RAM ),( ( ( ( ( ( RRS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ARS ) * FirstVNF_Mem_Server ) * RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9367816091954023, "obj2": 0.02349154844669962}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ),Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.8237547892720306, "obj2": 0.07023806519890402}, {"determining": "( ( Const + Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,( FirstVNF_CPU * ACS ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ( RRS + FirstVNF_CPU_Server ) / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( Max( MUC,( DS - MUC ) ),( RRSe / RCSe ) ) / MLU ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.975095785440613, "obj2": 0.0076939218596990405}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.1384881804841185}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + ( MUM / Max( ( MUM / RRSe ),( CS + MUM ) ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( MUM * RMSe ) ) ,MUC ) ) )", "obj1": 0.9559386973180076, "obj2": 0.014530751164137866}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( FirstVNF_Mem_Server * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,Min( MUM ,RMSe ) ) ) / ( RCSe - RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.6992337164750958, "obj2": 0.13018139708027796}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( Max( RMSe,RRSe ),DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.8103448275862069, "obj2": 0.07546420248776364}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,ARS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( MUM - MUC ) - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.10340793372122509}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( ( RRS * FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / ( DDR + ARS ) ) ) ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( CS - MUR ) ) ),RCSe )", "obj1": 0.9540229885057471, "obj2": 0.015568659605970245}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server - MDR ) ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + Max( DDR,BR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / ( RCSe - RCSe ) ) + DS ) + MLU ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0016129624688981552}, {"determining": "( Max( Max( ( Const * Const ),PN ),Min( ACS ,( ( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) - MDR ) ) ) - Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) / FirstVNF_RAM ),( Const + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * MLU ) + ( MUC * ( MUC / CS ) ) ) - Max( ( RRSe + RCSe ),Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( Min( RRSe ,DS ) + DS ) + MLU ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.041232608311656344}, {"determining": "( ( Const - Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( MDR,Max( ( FirstVNF_Mem_Server - PN ),ARS ) ) ) ),BR ) * ( Min( FirstVNF_RAM_Server ,RRS ) + ( Max( FirstVNF_Mem_Server,BR ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( DS + ( MUC * ( MUC / CS ) ) ) - ( Min( RCSe ,Min( ( MUC + Max( MLU,MLU ) ) ,MLU ) ) - ( RMSe - ( CS / Min( RRSe ,DS ) ) ) ) )", "obj1": 0.8984674329501916, "obj2": 0.03856526204336542}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / ( MUC / CS ) ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7835249042145593, "obj2": 0.08629374822610003}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Min( DDR ,( MRS - FirstVNF_CPU ) ) ),MRS ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( FirstVNF_CPU + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,MUR ) - Max( ( ( ( MUM / ( ( RCSe + Max( MUR,RCSe ) ) * MUM ) ) + DS ) + MLU ),( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.05620073950946155}, {"determining": "( ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( Const,CRS ),AMS ) ),MRS ) ) ) ) - ( Max( ACS,PN ) * FirstVNF_Mem ) )", "choosing": "( Max( MUM,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( ( ( ( DS - DS ) - Max( RCSe,MUM ) ) / MUC ) / MUM ) + DS ) + MLU ) ) )", "obj1": 0.6628352490421456, "obj2": 0.15674491888291073}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( ( FirstVNF_Mem_Server - MDR ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.9731800766283525, "obj2": 0.010185784325392886}, {"determining": "( Min( ( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( MRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS / BR ) ) ) ) ) ) ,PN ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) * RCSe ),RCSe ) )", "obj1": 0.7911877394636015, "obj2": 0.0856548835481205}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) / Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( ( ( MLU / ( ( RMSe / RMSe ) - MLU ) ) / CS ),( ( ( MUM / MLU ) * DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) - Min( MUM ,RMSe ) )", "obj1": 0.7318007662835249, "obj2": 0.1115147530794145}, {"determining": "( Max( Const,Min( ( DDR + ARS ) ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( MUM / MLU ) + DS ) ) ) )", "obj1": 0.7279693486590039, "obj2": 0.11216301498275484}, {"determining": "( Max( Const,Min( ( ( ( ( FirstVNF_CPU_Server + RRS ) + ACS ) / ( Max( FirstVNF_CPU,Const ) / ( ( ARS + ACS ) + CRS ) ) ) / AMS ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( DS / RCSe ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + Min( Max( ( RCSe - RCSe ),RMSe ) ,Max( MUC,DS ) ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.842911877394636, "obj2": 0.062419818484818985}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,Max( DDR,BR ) ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_RAM ,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( Min( MUM ,RMSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1038106082490103}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.11738473445567259}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12619516092528793}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) + MDR ) ) ) - ( MDR * ( ACS + DDR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC * CS ),( ( ( ( CS / Min( RRSe ,RRSe ) ) / MUM ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10971692778826399}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( ACS + AMS ) ) - ( RRS / AMS ) ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( Max( ( RMSe * ( DS * ( MLU + RMSe ) ) ),RCSe ) / CS ) ) ) - Max( ( Min( MLU ,MUM ) + RCSe ),RCSe ) )", "obj1": 0.9291187739463601, "obj2": 0.026180149698874812}, {"determining": "( Max( Const,Min( ( ( ( ( FirstVNF_CPU_Server + RRS ) + ACS ) / ( Max( FirstVNF_CPU,Const ) / ( ( ARS + ACS ) + CRS ) ) ) / AMS ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( DS / RCSe ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + Min( Max( ( RCSe - RCSe ),RMSe ) ,Max( MUC,DS ) ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.842911877394636, "obj2": 0.062419818484818985}, {"determining": "( ( MDR * ( Min( ( Const / Min( FirstVNF_RAM ,MRS ) ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_CPU ,BR ),AMS ) ),MRS ) ) ) ) - Max( Const,Min( ACS ,Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "( ( RCSe / ( RRSe / ( MLU + ( ( ( ( RCSe / CS ) / Max( MUC,CS ) ) - MUC ) * ( RCSe + ( RCSe / RMSe ) ) ) ) ) ) - Max( ( Min( CS ,MUM ) * ( ( Max( ( MUM + RMSe ),( CS + MUM ) ) * ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) ) / Max( RMSe,MUR ) ) ),( MUC / ( ( RMSe + Max( ( MUR - RCSe ),( Max( RCSe,RRSe ) * Max( CS,CS ) ) ) ) * DS ) ) ) )", "obj1": 0.6800766283524904, "obj2": 0.14768211680601584}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server - MDR ) ,ACS ) ) - ( Min( ( ( ( FirstVNF_CPU_Server / MDR ) / DDR ) / FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem - ( DDR * AMS ) ) * FirstVNF_Mem ) ) * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( CRS,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( CS / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( ( Min( RCSe ,Max( CS,RMSe ) ) * MUC ) ,RCSe ) * ( ( ( ( MUM / MLU ) + Min( DS ,RMSe ) ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06907245547284402}, {"determining": "( Max( Const,Min( ACS ,Max( BR,Min( PN ,PN ) ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( CRS / PN ) ) / FirstVNF_RAM ),BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12996292587884795}, {"determining": "Min( Min( ( BR / ( Min( ACS ,( ( FirstVNF_Mem_Server - MDR ) - MDR ) ) * FirstVNF_CPU ) ) ,Const ) ,( CRS - ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.8850574712643678, "obj2": 0.04417891220772916}, {"determining": "( Max( Const,Min( FirstVNF_RAM ,DDR ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Min( ACS ,Min( ARS ,ACS ) ) ) ) + Max( Max( DDR,BR ),Max( Min( ACS ,( ( FirstVNF_CPU_Server - BR ) - Const ) ),MRS ) ) ) ) )", "choosing": "( ( ( RCSe - MUR ) * RCSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,( ( ( ( MUM * RRSe ) - MUC ) + ( RMSe + MUR ) ) - MUC ) ) ),Min( ( DS + ( MUM / MLU ) ) ,( ( MUR - RCSe ) * MUR ) ) ) )", "obj1": 0.9808429118773946, "obj2": 0.00665061432409291}, {"determining": "( Const - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7662835249042146, "obj2": 0.09480482586552051}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ),Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( Max( RMSe,RRSe ),DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05870604379585486}, {"determining": "( Max( Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ),Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),MLU ) ),( ( ( MUM / ( Max( Max( RMSe,RRSe ),DS ) / CS ) ) + DS ) + MLU ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05870604379585486}, {"determining": "( Max( Const,Min( FirstVNF_RAM ,DDR ) ) - ( MDR * ( Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Const ) ) + Max( Max( DDR,BR ),Max( Min( ACS ,( ( FirstVNF_CPU_Server - BR ) - BR ) ),MRS ) ) ) ) )", "choosing": "( ( ( ( DS + ( RRSe * Min( DS ,MLU ) ) ) - RCSe ) * RCSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,( ( ( ( MUM * RCSe ) - MUC ) + ( RMSe + MUR ) ) - MUC ) ) ),Min( ( DS + ( MUM / MLU ) ) ,( ( MUR - RCSe ) * MUR ) ) ) )", "obj1": 0.9865900383141762, "obj2": 0.004814930780874375}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( Max( ( MLU + ( MUC * ( MUC / CS ) ) ),RCSe ) / CS ) * MUC ) ) - Max( ( Max( MLU,MUM ) * ( MUR - RMSe ) ),RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.02725634374122358}, {"determining": "( Max( Const,CRS ) - ( MDR * ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) / FirstVNF_RAM_Server ) + Max( ( ( FirstVNF_RAM + AMS ) - RRS ),ACS ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( CS / ( CS / ( RMSe * RMSe ) ) ) ) ,RRSe ) ),( ( ( MLU / RCSe ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7720306513409961, "obj2": 0.09448848820327221}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,MDR ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / ( BR - MDR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( RRSe + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04346132823552599}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Min( FirstVNF_RAM ,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( ( ( RCSe * MLU ) + Min( CS ,MUM ) ) / Max( RMSe,MUR ) ) + DS ) + MLU ) ) )", "obj1": 0.789272030651341, "obj2": 0.08603309227702183}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( RCSe,MUC ) + MLU ) - ( ( ( ( ( ( Max( MUR,MUR ) + Max( DS,MLU ) ) / Max( ( MUR - DS ),( RCSe * CS ) ) ) + MUM ) + MUC ) + MLU ) + RCSe ) )", "obj1": 0.9157088122605364, "obj2": 0.0313266536567717}, {"determining": "( ( Const * Max( ( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,PN ) ),CRS ) ) - ( MDR * ( Min( ( Const / Min( MRS ,AMS ) ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( ( MRS / ARS ) * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( ( RMSe - ( Min( RCSe ,Min( RRSe ,Min( ( MLU - RRSe ) ,RMSe ) ) ) - MUM ) ) ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( ( ( MLU * DS ) - MUC ) / MLU ) + ( MLU * ( RMSe - DS ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.09232523061165981}, {"determining": "Min( Min( ( Max( Const,Min( ( DDR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( ( CRS + FirstVNF_Mem ) * FirstVNF_Mem ) * ( Min( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) ,FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU,BR ) - ( RRS / ( ARS * BR ) ) ) ) ) ) ,PN ) ,( Max( CRS,( FirstVNF_RAM_Server - MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + ( DS * CS ) ) - Max( ( Max( ( RMSe / Max( ( MUM + RMSe ),( CS + MUM ) ) ),Max( MUC,MUR ) ) * RRSe ),( ( RCSe * DS ) + MLU ) ) )", "obj1": 0.9233716475095786, "obj2": 0.02847432312314886}, {"determining": "( Max( ( ( FirstVNF_Mem * Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) - RRS ),FirstVNF_RAM_Server ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( DS + ( ( RRSe / ( ( ( DS / MUC ) * ( RRSe * RCSe ) ) + MLU ) ) / ( RCSe / Min( MLU ,( RRSe - RMSe ) ) ) ) ) + ( ( MUR + ( RRSe * RCSe ) ) - DS ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07665905305967999}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,AMS ) ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( CRS,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUM ,RMSe ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03452913625819317}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) - Min( MUR ,( CS * RRSe ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,( Max( ( RMSe / RCSe ),( MUM + RMSe ) ) - RRSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.764367816091954, "obj2": 0.09572271514600879}, {"determining": "( Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) - Max( Const,( PN + RRS ) ) )", "choosing": "( ( MLU + ( ( MUC * ( ( ( Min( RCSe ,MLU ) * MLU ) * RMSe ) + MUC ) ) * ( MUC / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( RRSe / MUM ),MLU ) ) + DS ) ) )", "obj1": 0.9195402298850575, "obj2": 0.029063217734334464}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),( FirstVNF_CPU_Server + MRS ) ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( ( MUM / MLU ) * RMSe ),( ( ( MUM / MLU ) + DS ) + Max( ( RRSe * Max( ( RMSe / ( MLU * RMSe ) ),Max( MUC,MUR ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.1384881804841185}, {"determining": "( Max( Const,Min( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Max( Min( FirstVNF_CPU ,( PN + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ),BR ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( MDR * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem_Server,( MDR + ACS ) ) - ( RRS / MRS ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) * ( Max( RCSe,RCSe ) / ( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * MUM ) ) ) ) ) - Max( ( RRSe + RCSe ),RCSe ) )", "obj1": 0.8563218390804598, "obj2": 0.056180913100335364}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,( ( ( AMS / CRS ) / FirstVNF_Mem_Server ) / ARS ) ) + ( Max( Max( ( FirstVNF_Mem_Server - MDR ),( MDR + AMS ) ),BR ) - Max( ( RRS / ( DDR + ARS ) ),MRS ) ) ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Max( RCSe,( CS - ( ( MUM / MLU ) + DS ) ) ) ),RCSe )", "obj1": 0.8831417624521073, "obj2": 0.04609768222959518}, {"determining": "( ( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Max( CRS,MRS ),AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * ( ( ( ( RMSe * RMSe ) - Min( MUR ,( CS * CS ) ) ) * Max( ( MUM + RMSe ),( CS + MUM ) ) ) / Max( RMSe,( Max( ( RMSe / RCSe ),( MUM + RMSe ) ) - RRSe ) ) ) ),( ( ( MUM / MLU ) + DS ) + MLU ) ) )", "obj1": 0.7796934865900383, "obj2": 0.0901550506024614}, {"determining": "( Max( Const,Min( ACS ,( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,AMS ) ),MRS ) ) - MDR ) ) ) - ( MDR * ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( Max( FirstVNF_Mem_Server,BR ) - ( RRS / AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( MUC / CS ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10806451902888946}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ACS * ( ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - MDR ) ),MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( MUC * ( Max( RCSe,DS ) / CS ) ) * ( MUC / Min( CS ,CS ) ) ) ) - ( MLU * ( ( MUM / Max( ( MUM / RRSe ),MLU ) ) + DS ) ) )", "obj1": 0.9176245210727969, "obj2": 0.029891229102697037}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( Const,MDR ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / ( BR - MDR ) ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MUC ,RCSe ) * ( ( ( RRSe + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04346132823552599}, {"determining": "( Max( Min( Const ,Const ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( Min( ( Min( FirstVNF_RAM ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + Max( DDR,BR ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * RCSe ),( ( ( RMSe * MLU ) / Min( ( MUR * RRSe ) ,MUR ) ) + ( ( ( DS + ( RRSe * Min( DS ,MLU ) ) ) - RCSe ) * RCSe ) ) ) )", "obj1": 0.9329501915708812, "obj2": 0.025538400991513888}, {"determining": "( Max( Const,CRS ) - ( MDR * ( Min( ( Min( FirstVNF_RAM_Server ,MRS ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( BR,AMS ) ),MRS ) ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( Min( CS ,MUM ) * Min( ( ( MUC - MUM ) + ( MLU * Max( RCSe,MLU ) ) ) ,RRSe ) ),( ( ( MUM / MLU ) + DS ) + ( ( RCSe - MUR ) * RCSe ) ) ) )", "obj1": 0.7624521072796935, "obj2": 0.09757749572265255}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( MDR * ( ( Min( ( Min( FirstVNF_RAM ,Max( BR,AMS ) ) / Const ) ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ( FirstVNF_CPU_Server * Max( CRS,AMS ) ),MRS ) ) ) + ( Max( ( MDR + ARS ),BR ) - ( RRS / AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUC * ( MUC / CS ) ) ) - ( ( RRSe * RMSe ) * Min( ( Min( MLU ,RCSe ) * ( ( ( ( MUM / MLU ) + DS ) + MLU ) * RMSe ) ) ,MUC ) ) )", "obj1": 0.9137931034482759, "obj2": 0.033142268677036964}, {"determining": "( Max( Max( Min( ( Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) + Max( MDR,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ),Max( FirstVNF_Mem,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) ),Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ( DDR / ( Max( Min( Max( PN,BR ) ,PN ),DDR ) - ACS ) ) * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Max( DDR,BR ) - Max( ACS,MRS ) ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Min( ( MUR * RRSe ) ,MUR ) ) * Max( ( RMSe + RMSe ),( CS + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * ( ( RRSe / MUC ) / MUM ) ) / ( MUR - RMSe ) ) ) )", "obj1": 0.5651340996168582, "obj2": 0.292799482004942}]}