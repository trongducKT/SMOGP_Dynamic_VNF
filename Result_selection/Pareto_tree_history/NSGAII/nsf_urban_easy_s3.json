{"1": [{"determining": "( ( CRS / CRS ) * ( AMS - ACS ) )", "choosing": "( ( DS + MUR ) - Min( MUC ,RCSe ) )", "obj1": 0.6153846153846154, "obj2": 0.37099580669654586}, {"determining": "( ( ARS * ( BR * PN ) ) / Max( DDR,CRS ) )", "choosing": "( ( MUM / ( Min( ( ( RMSe * ( MUC * Min( MLU ,CS ) ) ) + MLU ) ,MUC ) / MUC ) ) * ( RRSe + MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.6227164806959328}, {"determining": "( Min( ( ( FirstVNF_CPU + FirstVNF_CPU ) + CRS ) ,FirstVNF_Mem ) + Max( BR,DDR ) )", "choosing": "Min( ( Max( Min( RRSe ,MUC ),( RRSe + MUM ) ) * MUC ) ,( RRSe + MUC ) )", "obj1": 0.3967611336032389, "obj2": 0.5183060048724617}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( MUR - MUR ) * Min( RRSe ,MUC ) )", "obj1": 0.9817813765182186, "obj2": 0.012549317962120051}, {"determining": "( ( DDR - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) * Max( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * ( ( Min( CRS ,DDR ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) * ACS ) ) ),PN ) )", "choosing": "( ( MLU / Min( ( MUM * CS ) ,RMSe ) ) / Max( RCSe,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( MLU + DS ) / Min( CS ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( Min( Const ,DDR ) - ( RRS + Const ) )", "choosing": "( Max( RRSe,RMSe ) / Max( MUM,MLU ) )", "obj1": 0.8866396761133604, "obj2": 0.10426922502055178}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( Max( MUC,MLU ) + ( MLU + DS ) )", "obj1": 0.5242914979757085, "obj2": 0.406066660280775}, {"determining": "( ( FirstVNF_RAM_Server + ( BR / RRS ) ) - ( ( FirstVNF_CPU / ACS ) - ARS ) )", "choosing": "( ( DS + MUM ) * ( MLU * RRSe ) )", "obj1": 0.31376518218623484, "obj2": 0.5890986844697479}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "Min( Max( ( Min( Max( CS,RCSe ) ,RMSe ) - CS ),( RMSe / RMSe ) ) ,( ( RCSe - MLU ) * ( RCSe * MUM ) ) )", "obj1": 0.20040485829959515, "obj2": 0.7014250690500222}, {"determining": "( ( Max( PN,DDR ) / ( ACS * BR ) ) - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) ) )", "choosing": "Max( ( RRSe * RCSe ),Min( DS ,RMSe ) )", "obj1": 0.2975708502024291, "obj2": 0.6082523941121999}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( Const + ARS ) + ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( DS ,MUM ) + Min( MUR ,MUM ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( ( FirstVNF_CPU_Server - MRS ) ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Min( ( RMSe + MUC ) ,Max( RCSe,RRSe ) )", "obj1": 0.3097165991902834, "obj2": 0.5908701624345705}, {"determining": "Max( ( ( RRS / FirstVNF_CPU ) + ( RRS * ACS ) ),( FirstVNF_Mem * Max( ACS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( MUM,MUR ),( MUM + ( RMSe / ( DS / MLU ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.5604389851400013}, {"determining": "Min( ( MRS - BR ) ,( MDR / Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC / MUR ) / MUM ) * ( CS * RRSe ) ) + Min( CS ,MUC ) )", "obj1": 0.6437246963562753, "obj2": 0.29353666606707435}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_Mem_Server,ARS ) ,( MDR + PN ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 0.7307692307692307, "obj2": 0.25596152517874965}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7935222672064778, "obj2": 0.18351132664633615}, {"determining": "( Min( ( PN * Const ) ,( ARS * ACS ) ) * Max( ( BR / RRS ),( BR * FirstVNF_RAM ) ) )", "choosing": "( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6475863992736484}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) )", "obj1": 0.3319838056680162, "obj2": 0.571944325292363}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( AMS ,( FirstVNF_Mem * Min( ARS ,DDR ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( Max( ( RMSe - MLU ),Min( MUC ,Min( Max( RCSe,RCSe ) ,DS ) ) ) + MLU ) ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ARS ,RRS ) - Min( ARS ,Max( Min( Min( DDR ,FirstVNF_CPU_Server ) ,BR ),FirstVNF_CPU_Server ) ) ),Max( ( CRS - RRS ),Max( RRS,AMS ) ) )", "choosing": "( Min( ( CS - CS ) ,( DS / Min( MUC ,Min( MUR ,( MUR / Min( RRSe ,MUC ) ) ) ) ) ) * ( Min( RCSe ,MUR ) + Min( MLU ,MUM ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6041633631930933}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / MRS ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ( AMS / FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Min( RMSe ,( RRSe * ( MUR * MUC ) ) ) ,Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,Max( MUR,Max( MLU,( RMSe / DS ) ) ) ) ,( MUC / CS ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / ( Min( RRS ,ARS ) - ( MDR * FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,Max( FirstVNF_CPU_Server,( RRS - FirstVNF_RAM_Server ) ) ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / Max( MUC,Max( ( RCSe + DS ),MUR ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,Min( MLU ,CS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.37574163416419976}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUC / RRSe ),( RMSe * RCSe ) ) - ( Max( MUM,RMSe ) - ( MUR * RCSe ) ) ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * ( Max( MUC,MLU ) - Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( DDR + ( CRS - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUC ,RRSe ) / Min( Max( RCSe,MUR ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - MUR ) + ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( RRS / ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - ARS ) / FirstVNF_Mem_Server ) ) * CRS ) - CRS ) ,Min( RRS ,( Max( Max( FirstVNF_RAM,( ( ACS - FirstVNF_CPU_Server ) / FirstVNF_Mem ) ),FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) - Max( BR,( ( ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( ( ( ( ( DS + RCSe ) + Max( DS,RMSe ) ) + ( RMSe / ( MLU + MLU ) ) ) - MUC ),MUC ) + ( RCSe * MUC ) ) ) ,Min( ( Min( RCSe ,RRSe ) + ( RMSe * MUC ) ) ,( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Const ) / AMS ) ,( AMS + Const ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.007385925118857974}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( RRSe / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - ACS ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( Const ,AMS ) ,( FirstVNF_Mem - AMS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( CRS + FirstVNF_CPU ) ) ) ,( Max( Min( CRS ,DDR ),( Const / FirstVNF_RAM ) ) / Min( ( ACS * Const ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,MLU ) ) / RRSe ) / Min( Max( RRSe,CS ) ,( RRSe - RCSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.06861423469335148}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( DDR * Min( CRS ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( ( MUM - MUC ) / ( RRSe - MUR ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( Max( MUC,MLU ) + ( MLU + DS ) )", "obj1": 0.5242914979757085, "obj2": 0.406066660280775}, {"determining": "Max( ( ( CRS - FirstVNF_RAM_Server ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ),( Const + ARS ) )", "choosing": "( ( ( RRSe + MUM ) * ( MLU - ( ( RMSe / Min( Max( CS,MUC ) ,MUC ) ) + DS ) ) ) / RCSe )", "obj1": 0.4190283400809717, "obj2": 0.5100967162895222}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7935222672064778, "obj2": 0.18351132664633615}, {"determining": "( Min( DDR ,Min( MDR ,ARS ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + DS ) / Min( CS ,RCSe ) )", "obj1": 0.18016194331983806, "obj2": 0.6763963304162574}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUR + MUM ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( CS + MLU ) + ( RRSe + RMSe ) ) ) )", "obj1": 0.7489878542510121, "obj2": 0.19941379179680674}, {"determining": "( Min( ( ACS * Min( FirstVNF_CPU ,RRS ) ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * PN ) ) ) * Min( ( Max( AMS,FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_RAM_Server ) ) ,Max( ( ACS / FirstVNF_Mem ),( ARS / RRS ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( Max( MUM,RCSe ) * ( RMSe / RCSe ) ) )", "obj1": 0.10121457489878542, "obj2": 0.7053474422796581}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / ( Max( CS,RMSe ) / ( MLU + MLU ) ) ) ,( Max( ( MUR - MUR ),Max( RRSe,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.24510646712964235}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_CPU / ACS ) - ARS ) )", "choosing": "( ( DS + MUM ) * ( Max( Max( MUR,DS ),Min( MLU ,MUC ) ) * RRSe ) )", "obj1": 0.3481781376518219, "obj2": 0.5552728990122244}, {"determining": "( ( ( FirstVNF_CPU / BR ) / AMS ) * ( ( DDR / FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( CS - CS ) * ( ( Max( MLU,( Max( MLU,RRSe ) / MUC ) ) - CS ) - Min( MUR ,CS ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5877243777603972}, {"determining": "( ( AMS - BR ) - ( BR / MRS ) )", "choosing": "( ( MUC / ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ) + ( MLU + MUC ) )", "obj1": 0.6376518218623481, "obj2": 0.3353529470872279}, {"determining": "( ( CRS / CRS ) * ( AMS - ACS ) )", "choosing": "Max( ( DS / RMSe ),( RCSe - MUM ) )", "obj1": 0.611336032388664, "obj2": 0.35503862906093103}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.854251012145749, "obj2": 0.12653869068415088}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.854251012145749, "obj2": 0.12653869068415088}, {"determining": "( Min( Const ,( FirstVNF_Mem * ARS ) ) - ( Const + RRS ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.09540355543729645}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( MUR - MUR ) * Min( RRSe ,MUC ) )", "obj1": 0.9817813765182186, "obj2": 0.012549317962120051}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) )", "obj1": 0.31781376518218624, "obj2": 0.585960090459478}, {"determining": "( ( ARS * ( BR * PN ) ) / Max( DDR,CRS ) )", "choosing": "( ( MUM / ( Min( ( ( RMSe * ( MUC * Min( MLU ,CS ) ) ) + MLU ) ,MUC ) / MUC ) ) * ( RRSe + MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.6227164806959328}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( Max( MUC,MLU ) + ( MLU + DS ) )", "obj1": 0.5344129554655871, "obj2": 0.3980981431497901}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RCSe ,Min( RMSe ,( RRSe - RCSe ) ) ) / ( Max( Max( RMSe,DS ),MUM ) - ( Max( MUR,CS ) - MLU ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03461384979765229}, {"determining": "Min( ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / ( Max( CS,RMSe ) / ( MLU + MLU ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) ) / MUM ) ) + ( CS - CS ) )", "obj1": 0.5647773279352226, "obj2": 0.37367845456945725}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6475863992736484}, {"determining": "Min( Min( Max( FirstVNF_Mem_Server,ARS ) ,( MDR + PN ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 0.7226720647773279, "obj2": 0.2679708043877871}, {"determining": "Min( ( RRS / RRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( Min( ( MUR * Max( ( MLU * CS ),MUC ) ) ,MUC ) - CS ) / DS ),MUR ) + ( CS - CS ) )", "obj1": 0.6437246963562753, "obj2": 0.29353666606707435}, {"determining": "( Min( ( PN * Const ) ,( ARS * ACS ) ) * Max( ( BR / RRS ),( BR * FirstVNF_RAM ) ) )", "choosing": "( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6475863992736484}, {"determining": "( MDR * ( AMS - ACS ) )", "choosing": "( ( DS + MUR ) - RRSe )", "obj1": 0.6639676113360324, "obj2": 0.28900768330660676}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Max( Max( PN,Const ),( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( CS - ( RMSe * DS ) ) * RCSe ) + ( RRSe - CS ) ) ,( ( CS / RRSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.9311740890688259, "obj2": 0.0481199541431044}, {"determining": "Min( Min( ( FirstVNF_RAM - BR ) ,( DDR / RRS ) ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "Max( ( MUR * MLU ),Min( MLU ,CS ) )", "obj1": 0.9271255060728745, "obj2": 0.07923653831837857}, {"determining": "( ( CRS / CRS ) * ( AMS - ACS ) )", "choosing": "( Min( Min( ( RCSe * MUM ) ,( MUC / DS ) ) ,( ( CS / RMSe ) * ( MUC * MLU ) ) ) * ( Max( ( MUC * RCSe ),Min( RRSe ,RMSe ) ) * Max( ( RCSe / MLU ),( RCSe / MUC ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2750388706011672}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) + ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + RMSe ) * DS ) * Max( MUM,RCSe ) )", "obj1": 0.39068825910931176, "obj2": 0.5222809726607617}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) + ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + RMSe ) * DS ) * Max( MUM,RCSe ) )", "obj1": 0.39068825910931176, "obj2": 0.5222809726607617}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / ( Min( RRS ,ARS ) - ( MDR * FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,Max( FirstVNF_CPU_Server,( RRS - FirstVNF_RAM_Server ) ) ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / Max( MUC,Max( ( RCSe + DS ),MUR ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,Min( MLU ,CS ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.3666526594534064}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - MRS ) ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Min( ( RMSe + MUC ) ,Max( RCSe,( Min( DS ,RRSe ) / Min( ( RCSe / MUR ) ,RCSe ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.28322005773929093}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( DDR,CRS ) )", "choosing": "( ( MUM / CS ) * ( MLU + MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.6227164806959328}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) )", "obj1": 0.3319838056680162, "obj2": 0.571944325292363}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + ( RRS * ACS ) ),FirstVNF_RAM ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( MRS - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * AMS ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) / ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.08685376251732231}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Min( ( ( MUR / MUM ) / Min( MLU ,MUR ) ) ,( ( DS + MUM ) * ( MLU * RRSe ) ) ) + Min( ( ( MUC - MLU ) * ( MLU * MLU ) ) ,Max( Max( MUR,DS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.5671295017886145}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),RRS )", "choosing": "( Max( RCSe,CS ) * ( ( DS + MUM ) - RMSe ) )", "obj1": 0.41700404858299595, "obj2": 0.5144922600696457}, {"determining": "Min( ( ( MDR - Const ) / AMS ) ,( AMS + Const ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.007385925118857974}, {"determining": "( ( FirstVNF_CPU - Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ) * Max( MRS,DDR ) )", "choosing": "( ( MUM * MUR ) / ( ( MUM - MUC ) / ( RRSe - MUR ) ) )", "obj1": 0.9210526315789473, "obj2": 0.08102364688868052}, {"determining": "( ( ( MRS / CRS ) / BR ) - Max( Max( FirstVNF_RAM,MRS ),FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe + MUC ) ,( MUM * DS ) )", "obj1": 0.3967611336032389, "obj2": 0.5183060048724617}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,( MDR / AMS ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( ( ( DS + DS ) * ( DS + CS ) ) * Max( RRSe,( Min( ( ( RMSe / Max( RRSe,DS ) ) + DS ) ,CS ) / MLU ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08502024291497975, "obj2": 0.7118665394375945}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / ( Min( RRS ,ARS ) - ( MDR * FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,Max( FirstVNF_CPU_Server,( RRS - FirstVNF_RAM_Server ) ) ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / Max( MUC,Max( ( RCSe + DS ),MUR ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,Min( MLU ,CS ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.3666526594534064}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) ) )", "choosing": "Max( ( MUC / RRSe ),Min( DS ,RMSe ) )", "obj1": 0.0951417004048583, "obj2": 0.7095527886896448}, {"determining": "( ( FirstVNF_CPU * MRS ) * Min( ARS ,Min( MDR ,MRS ) ) )", "choosing": "( ( MUM * Max( MLU,MUM ) ) / ( DS - MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "Min( ( MRS - BR ) ,( MDR / Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC / MUR ) / MUM ) * ( CS * RRSe ) ) + Min( CS ,MUC ) )", "obj1": 0.6437246963562753, "obj2": 0.29353666606707435}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7063200026780279}, {"determining": "( Min( ( ( FirstVNF_CPU + FirstVNF_CPU ) + CRS ) ,FirstVNF_Mem ) + Max( BR,DDR ) )", "choosing": "Min( ( Max( Min( RRSe ,MUC ),( RRSe + MUM ) ) * MUC ) ,( RRSe + MUC ) )", "obj1": 0.3967611336032389, "obj2": 0.5183060048724617}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( ARS ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( MDR - PN ) ) - ( Min( FirstVNF_CPU_Server ,PN ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( ( Min( ( ( RMSe * CS ) - ( MUR - RMSe ) ) ,Min( Min( CS ,MLU ) ,MUR ) ) * MLU ) + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( MLU - ( Min( MLU ,MUM ) + ( RRSe - Min( ( ( RCSe * MUC ) * RCSe ) ,RMSe ) ) ) ) ) ,Max( ( Max( MUC,( MLU - ( ( ( DS / CS ) * RMSe ) - ( MLU + CS ) ) ) ) * ( Min( MUR ,MUR ) + DS ) ),RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( FirstVNF_CPU - MRS ) * Max( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * ( ( Min( CRS ,DDR ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) * ACS ) ) ),PN ) )", "choosing": "( ( MLU / Min( ( MUM * CS ) ,RMSe ) ) / Max( RCSe,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( FirstVNF_RAM / MRS ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ( AMS / FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Min( RMSe ,( RRSe * ( MUR * MUC ) ) ) ,Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,Max( MUR,Max( MLU,( RMSe / DS ) ) ) ) ,( MUC / CS ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( MLU + DS ) / Min( CS ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( Const + ARS ) + ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( DS ,MUM ) + Min( MUR ,MUM ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( AMS ,( FirstVNF_Mem * Min( ARS ,DDR ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( Max( ( RMSe - MLU ),Min( MUC ,Min( Max( RCSe,RCSe ) ,DS ) ) ) + MLU ) ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUC / RRSe ),( RMSe * RCSe ) ) - ( Max( MUM,RMSe ) - ( MUR * RCSe ) ) ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * ( Max( MUC,MLU ) - Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( DDR + ( CRS - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUC ,RRSe ) / Min( Max( RCSe,MUR ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - MUR ) + ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( RRS / ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - ARS ) / FirstVNF_Mem_Server ) ) * CRS ) - CRS ) ,Min( RRS ,( Max( Max( FirstVNF_RAM,( ( ACS - FirstVNF_CPU_Server ) / FirstVNF_Mem ) ),FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) - Max( BR,( ( ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( ( ( ( ( DS + RCSe ) + Max( DS,RMSe ) ) + ( RMSe / ( MLU + MLU ) ) ) - MUC ),MUC ) + ( RCSe * MUC ) ) ) ,Min( ( Min( RCSe ,RRSe ) + ( RMSe * MUC ) ) ,( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( RRSe / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - ACS ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( DDR * Min( CRS ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( DDR * Min( CRS ,( Max( ( RRS - RRS ),( BR * FirstVNF_Mem_Server ) ) - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( DDR * Min( CRS ,( DDR - AMS ) ) ) )", "choosing": "( Max( CS,MLU ) * Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const * AMS ),CRS ) - ( ( Max( ( ACS * ( RRS + FirstVNF_RAM_Server ) ),FirstVNF_CPU ) / DDR ) * CRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( ( RMSe / RCSe ) / DS ) - Max( Min( RRSe ,Min( RRSe ,MLU ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * ( FirstVNF_Mem_Server * MRS ) ),CRS ) - Min( ACS ,PN ) )", "choosing": "( Min( MLU ,( RCSe - RMSe ) ) + Max( RMSe,( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ARS ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( RRSe / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - CRS ) / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe + MUM ) - MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - ACS ) - BR ) ,Min( DDR ,RRS ) ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ( CRS - CRS ) ) ) )", "choosing": "( Max( ( ( RRSe * RMSe ) - Max( MLU,MLU ) ),Min( MLU ,CS ) ) - ( RRSe * ( RCSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ARS ) * ( FirstVNF_CPU * ACS ) )", "choosing": "Min( Max( DS,RCSe ) ,Min( Max( CS,MUM ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * Const ) - Max( RRS,AMS ) )", "choosing": "( Min( RMSe ,Min( ( CS / CS ) ,( RRSe / DS ) ) ) - ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,( ACS + FirstVNF_Mem ) ) * Const ) - ( ACS - MRS ) )", "choosing": "( Min( RMSe ,MUR ) - ( MUR + ( ( CS + MLU ) - ( MUC + Max( Max( ( ( RMSe * RRSe ) - CS ),( MUM - MUM ) ),MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,( ACS + FirstVNF_Mem ) ) * Const ) - ( ACS - MRS ) )", "choosing": "( Min( RMSe ,MUR ) - ( MUR + ( ( CS + MLU ) - ( MUC + Max( Max( ( ( RMSe * RRSe ) - CS ),( MUM - MUM ) ),MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,( ACS + FirstVNF_Mem ) ) * Const ) - ( ACS - MRS ) )", "choosing": "( Min( RMSe ,MUR ) - ( MUR + ( ( CS + MLU ) - ( MUC + Max( Max( ( ( RMSe * RRSe ) - CS ),( MUM - MUM ) ),MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,AMS ) * Const ) - ( ACS * MRS ) )", "choosing": "( Min( RMSe ,MUR ) - ( MUR + ( ( CS + MLU ) - ( MUC + Max( Max( ( ( RMSe * MUC ) - CS ),MUM ),MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( MUC / RRSe ),( RMSe * RCSe ) ) - ( ( ( ( RRSe + MUM ) * DS ) / ( RMSe + ( RRSe * Min( MLU ,MLU ) ) ) ) - ( MUR * RCSe ) ) ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * ( Max( MUC,MLU ) - Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUC / RRSe ),( RMSe * RCSe ) ) - ( Max( MUM,RMSe ) - ( MUR * RCSe ) ) ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * ( Max( MUC,MLU ) - Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,( CS + MLU ) ),Max( RCSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Max( ( RRS - RRS ),( BR * FirstVNF_Mem_Server ) ) ) ,( DDR * Min( CRS ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + CS ) ,( MUC / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( DDR * Min( CRS ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,RRSe ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR - ( MLU - RMSe ) ) ,Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( ( MUM - MUC ) / ( RRSe - MUR ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - BR ) * ( Const - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( Max( MLU,RRSe ) * ( RRSe + CS ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.4757085020242915, "obj2": 0.4069646006864347}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( Max( MDR,ARS ) * Max( DDR,AMS ) ) + Max( Min( Min( Max( MRS,CRS ) ,( AMS / ( MDR / FirstVNF_CPU_Server ) ) ) ,ARS ),( MDR + DDR ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( RRSe + ( ( RMSe * MUC ) - CS ) ) * Max( ( RCSe * MUR ),MUM ) ) / RCSe )", "obj1": 0.38866396761133604, "obj2": 0.50157800220175}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7935222672064778, "obj2": 0.18351132664633615}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN / BR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * ( ( MUR - CS ) * ( MUC + RCSe ) ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.1368213040700803}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,RCSe )", "obj1": 0.5951417004048583, "obj2": 0.2930037462419613}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,FirstVNF_Mem )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( ( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) ),Max( RCSe,CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5104377413571077}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5332043362710083}, {"determining": "Min( ( MRS / FirstVNF_CPU_Server ) ,( ( Const + RRS ) - CRS ) )", "choosing": "( ( CS + ( Min( Max( MUR,MLU ) ,Min( ( ( MUC - ( DS / RRSe ) ) + CS ) ,MLU ) ) * DS ) ) * ( MUC + RCSe ) )", "obj1": 0.6255060728744939, "obj2": 0.28053605997520564}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( ( MUM * MUR ) / ( DS - MUR ) ) ,( Max( ( MUR - MUR ),Max( RRSe,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2649967433733358}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Min( PN ,Max( RRS,BR ) ) ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) * ( PN / PN ) )", "choosing": "( ( MLU + ( RMSe * ( RMSe * MLU ) ) ) * ( MUC / MUM ) )", "obj1": 0.29554655870445345, "obj2": 0.5734861094164944}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / ( Max( CS,RMSe ) / ( MLU + MLU ) ) ) ,( Max( ( MUR - MUR ),Max( RRSe,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.24510646712964235}, {"determining": "( ( ( FirstVNF_CPU / FirstVNF_Mem ) / AMS ) * ( PN / BR ) )", "choosing": "( ( MUR - CS ) * ( RMSe + RCSe ) )", "obj1": 0.23279352226720648, "obj2": 0.6124277930766501}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,RMSe ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.35074394846397305}, {"determining": "( Min( Const ,DDR ) - ( ( Min( ( ( FirstVNF_CPU / ( DDR + FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) + MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe / RRSe ) / ( MLU + ( MUC + Max( MLU,( RRSe / MLU ) ) ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( ( MUR - MUR ) + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2017660191804729}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) ) + ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,Max( FirstVNF_CPU_Server,( RRS - FirstVNF_RAM_Server ) ) ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / Max( MUC,Max( ( RCSe + DS ),MUR ) ) ) ,( Max( MUM,DS ) * ( CS + RCSe ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3734706552192862}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.6862348178137652, "obj2": 0.248659796074161}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5409838382923978}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( Max( MUC,MLU ) + ( MLU + DS ) )", "obj1": 0.5242914979757085, "obj2": 0.406066660280775}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUR + MUM ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( CS + MLU ) + ( RRSe + RMSe ) ) ) )", "obj1": 0.7489878542510121, "obj2": 0.19941379179680674}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,MUR ) - ( MUR + ( ( CS + MLU ) - ( MUC + Max( Max( ( ( RMSe * MUC ) - CS ),MUM ),MUM ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.10306245168157001}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + CRS ) ,DDR ) ) + MDR ) )", "choosing": "( ( ( DS * RCSe ) - Max( CS,MLU ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6411850558453183}, {"determining": "( Min( ( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) ) ,( ARS * ACS ) ) * Max( ( BR / RRS ),( BR * FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,MUC ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108267}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.20040485829959515, "obj2": 0.6601668300176277}, {"determining": "( ( ( FirstVNF_CPU / BR ) / AMS ) * ( ( DDR / FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( CS - CS ) * ( ( Max( MLU,( Max( MLU,RRSe ) / MUC ) ) - CS ) - Min( MUR ,CS ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5877243777603972}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.854251012145749, "obj2": 0.12653869068415088}, {"determining": "( ( DDR - ( ( Min( RRS ,( ACS + FirstVNF_Mem ) ) * Const ) - ( ACS - MRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,( MUM - MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.13360323886639677, "obj2": 0.686430190739481}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,Min( Min( Max( FirstVNF_Mem_Server,ARS ) ,( MDR + PN ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,( CS + MLU ) ),MUC ) )", "obj1": 0.7165991902834008, "obj2": 0.2483361814345635}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU_Server ) / ( PN - MRS ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( Min( RRSe ,MUC ) * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1659919028340081, "obj2": 0.6610176138807495}, {"determining": "( ( FirstVNF_CPU - Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ) * Max( MRS,DDR ) )", "choosing": "( ( MUM * MUR ) / ( ( MUM - MUC ) / ( RRSe - MUR ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06675701974798136}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.012480659102364185}, {"determining": "( ( Min( Min( ( ACS / Min( ( AMS + FirstVNF_RAM_Server ) ,Const ) ) ,AMS ) ,( FirstVNF_CPU / Max( MDR,Min( DDR ,AMS ) ) ) ) - ( Min( ARS ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) * Max( MRS,DDR ) )", "choosing": "( ( Max( ( RCSe * Min( DS ,( RCSe - RMSe ) ) ),MUM ) + Max( MUR,Max( ( Max( ( ( CS + RCSe ) - RRSe ),RCSe ) / RCSe ),RCSe ) ) ) / ( DS - MUR ) )", "obj1": 0.9412955465587044, "obj2": 0.03122087446517483}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / Min( CRS ,( DDR - AMS ) ) )", "choosing": "( Max( MLU,MLU ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6960555466927687}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( Max( MUC,MLU ) + ( MLU + DS ) )", "obj1": 0.5344129554655871, "obj2": 0.3980981431497901}, {"determining": "Min( ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) ) * ACS ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( Min( ( Min( ( RMSe - RCSe ) ,( MUM - MUM ) ) / ( Max( CS,RMSe ) / ( MLU + MLU ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) ) / MUM ) ) + ( CS - CS ) )", "obj1": 0.5890688259109311, "obj2": 0.35266692619140694}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN + Max( AMS,CRS ) ) )", "choosing": "( Min( MUC ,MLU ) + ( ( RMSe * Max( MUR,MLU ) ) + DS ) )", "obj1": 0.5344129554655871, "obj2": 0.3980981431497901}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Max( Max( PN,Const ),( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( CS - ( RMSe * DS ) ) * RCSe ) + ( RRSe - CS ) ) ,( ( CS / RRSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.9311740890688259, "obj2": 0.0481199541431044}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_CPU / ACS ) - ARS ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.598891100178585}, {"determining": "( ( FirstVNF_CPU - Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ) * Max( MRS,DDR ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.917004048582996, "obj2": 0.0729813588304588}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6966304851454704}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) - Max( BR,Min( ( ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.145748987854251, "obj2": 0.6774566832456786}, {"determining": "Min( ( ARS - ( CRS * AMS ) ) ,( ( AMS / DDR ) - AMS ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUM ) ) + MUM ) - MUC ) * RCSe ) ) + Max( Min( MUM ,MUC ),RMSe ) )", "obj1": 0.854251012145749, "obj2": 0.12653869068415088}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0951417004048583, "obj2": 0.7045954213034179}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / ( Min( RRS ,ARS ) - ( MDR * FirstVNF_CPU_Server ) ) ) + Min( ARS ,Min( MDR ,MRS ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / Max( MUC,Max( ( RCSe + ( MUM * Max( MLU,MUM ) ) ),MUR ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,Min( MLU ,CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0066638568157209675}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / ( Min( RRS ,ARS ) - ( MDR * FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,Max( FirstVNF_CPU_Server,( RRS - FirstVNF_RAM_Server ) ) ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / Max( MUC,Max( ( RCSe + DS ),MUR ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,Min( MLU ,CS ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.3666526594534064}, {"determining": "Min( Min( ( FirstVNF_RAM - BR ) ,( DDR / RRS ) ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,DS ) )", "obj1": 0.9089068825910931, "obj2": 0.0801633793051595}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / ( Min( RRS ,ARS ) - ( MDR * FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,Max( FirstVNF_CPU_Server,( RRS - FirstVNF_RAM_Server ) ) ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM - MUM ) ) / Max( MUC,Max( ( RCSe + DS ),MUR ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,Min( MLU ,CS ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.3666526594534064}, {"determining": "( Min( Const ,DDR ) - ( RRS + Const ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.08496710850462591}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5893439017459021}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,RRSe ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.25303643724696356, "obj2": 0.5983748299096541}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.09367045083664038}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / Min( ( ( ( ARS - CRS ) / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,RRSe ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,( ( RCSe + MUM ) - MUC ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6754310348947409}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) / FirstVNF_CPU_Server ) - Const ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( Min( ( ( MUR / MUM ) / Min( MLU ,MUR ) ) ,( ( DS + MUM ) * ( MLU * RRSe ) ) ) + Min( ( ( MUC - MLU ) * ( MLU * MLU ) ) ,Max( Max( MUR,DS ),Min( MLU ,MUC ) ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7115711394557357}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6475863992736484}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,( ( FirstVNF_RAM_Server / RRS ) + DDR ) ) + MDR ) )", "choosing": "( ( ( RCSe + Min( ( ( RRSe + Max( RMSe,CS ) ) - ( CS * RMSe ) ) ,RRSe ) ) - ( RCSe / DS ) ) / ( ( RMSe - RCSe ) - ( CS - RMSe ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6475863992736484}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08502024291497975, "obj2": 0.7118665394375945}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RCSe ,Min( RMSe ,( RRSe - RCSe ) ) ) / ( Max( Max( RMSe,DS ),MUM ) - ( Max( MUR,CS ) - MLU ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03461384979765229}, {"determining": "Max( ( ( ( BR / FirstVNF_CPU ) - ( MRS / FirstVNF_RAM ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + BR ) ),Max( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( ( ( Max( DDR,FirstVNF_CPU ) / DDR ) - FirstVNF_Mem ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - ( ( RRSe + RRSe ) - ( CS / Min( RCSe ,( ( ( CS / MUM ) + ( MUM + MUM ) ) - CS ) ) ) ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7213501925738697}, {"determining": "( ( FirstVNF_CPU - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( ( RRSe - MUC ) / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15991902834008098, "obj2": 0.6730331984983375}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( Min( Const ,DDR ) - ( RRS + Const ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.09540355543729645}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + ( RRS * ACS ) ),FirstVNF_RAM ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( MRS - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * AMS ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.8987854251012146, "obj2": 0.08251874554366848}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.6665731490795641}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe + MUM ) * DS ) )", "obj1": 0.9959514170040485, "obj2": 0.00201983582637754}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( Min( Const ,( FirstVNF_Mem * ARS ) ) - ( Const + RRS ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.09540355543729645}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.6665731490795641}, {"determining": "( ( FirstVNF_CPU * MRS ) * Min( ARS ,Min( MDR ,MRS ) ) )", "choosing": "( ( MUM * Max( MLU,MUM ) ) / ( DS - MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + ( RRS * ACS ) ),FirstVNF_RAM ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( MRS - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * AMS ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) / ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.09529650420172614}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,( MDR / AMS ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( ( ( DS + DS ) * ( DS + CS ) ) * Max( RRSe,( Min( ( ( RMSe / Max( RRSe,DS ) ) + DS ) ,CS ) / MLU ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15991902834008098, "obj2": 0.6730331984983375}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( MLU - ( Min( MLU ,MUM ) + ( RRSe - Min( ( ( RCSe * MUC ) * RCSe ) ,RMSe ) ) ) ) ) ,Max( ( Max( MUC,( MLU - ( ( ( DS / CS ) * RMSe ) - ( MLU + CS ) ) ) ) * ( Min( MUR ,MUR ) + DS ) ),RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + ( RRS * ACS ) ),FirstVNF_RAM ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( MRS - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * AMS ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) / ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.09529650420172614}, {"determining": "( ( DDR - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( Const + ARS ) + ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( DS ,MUM ) + Min( MUR ,MUM ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( AMS ,( FirstVNF_Mem * Min( ARS ,DDR ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( Max( ( RMSe - MLU ),Min( MUC ,Min( Max( RCSe,RCSe ) ,DS ) ) ) + MLU ) ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUC / RRSe ),( RMSe * RCSe ) ) - ( Max( MUM,RMSe ) - ( MUR * RCSe ) ) ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * ( Max( MUC,MLU ) - Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( DDR + ( CRS - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUC ,RRSe ) / Min( Max( RCSe,MUR ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR - MUR ) + ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( RRS / ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - ARS ) / FirstVNF_Mem_Server ) ) * CRS ) - CRS ) ,Min( RRS ,( Max( Max( FirstVNF_RAM,( ( ACS - FirstVNF_CPU_Server ) / FirstVNF_Mem ) ),FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) - Max( BR,( ( ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( ( ( ( ( DS + RCSe ) + Max( DS,RMSe ) ) + ( RMSe / ( MLU + MLU ) ) ) - MUC ),MUC ) + ( RCSe * MUC ) ) ) ,Min( ( Min( RCSe ,RRSe ) + ( RMSe * MUC ) ) ,( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( RRSe / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - ACS ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( DDR * Min( CRS ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( DDR * Min( CRS ,( Max( ( RRS - RRS ),( BR * FirstVNF_Mem_Server ) ) - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + DDR ) ,( DDR * Min( CRS ,( DDR - AMS ) ) ) )", "choosing": "( Max( CS,MLU ) * Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const * AMS ),CRS ) - ( ( Max( ( ACS * ( RRS + FirstVNF_RAM_Server ) ),FirstVNF_CPU ) / DDR ) * CRS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( ( RMSe / RCSe ) / DS ) - Max( Min( RRSe ,Min( RRSe ,MLU ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * ( FirstVNF_Mem_Server * MRS ) ),CRS ) - Min( ACS ,PN ) )", "choosing": "( Min( MLU ,( RCSe - RMSe ) ) + Max( RMSe,( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( DDR,FirstVNF_CPU_Server ) ) ,( ( DDR + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( RRSe / ( Max( ( Max( Max( RMSe,MUR ),CS ) / CS ),MUC ) - MUM ) ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR - ( MLU - RMSe ) ) ,Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) - Max( BR,Min( ( ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - Max( Max( RMSe,DS ),MUM ) ) )", "obj1": 0.742914979757085, "obj2": 0.10957005839044273}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.7368421052631579, "obj2": 0.20869886747061053}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.4008097165991903, "obj2": 0.45339926935914554}, {"determining": "( Min( Const ,( FirstVNF_Mem * ARS ) ) - ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) )", "choosing": "( Max( Max( ( ( MUC - ( RCSe - CS ) ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.5182186234817814, "obj2": 0.3983118224421572}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,MUR ) - ( MUR + ( ( CS + MLU ) - ( MUC + Max( Max( ( ( RMSe * MUC ) - CS ),MUM ),MUM ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.10306245168157001}, {"determining": "( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( Max( MLU,Min( ( DS - ( ( ( MLU + RRSe ) * Max( ( DS - DS ),Max( DS,CS ) ) ) * DS ) ) ,( Min( RRSe ,MUC ) * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.46356275303643724, "obj2": 0.4189162864293873}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3322153698958928}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6437483572303415}, {"determining": "( ( DDR - AMS ) - ( ( ( DDR - Max( Max( MDR,Max( DDR,MRS ) ),FirstVNF_CPU_Server ) ) - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( ( DS * MLU ) - CS ) ,RCSe )", "obj1": 0.19635627530364372, "obj2": 0.6228487832597008}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - ( Min( CRS ,( DDR + ARS ) ) - MRS ) ) - ( ( BR - AMS ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( MUM / ( RRSe + CS ) ) - RRSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25177981629265084}, {"determining": "Min( ( MRS / FirstVNF_CPU_Server ) ,( ( Const + RRS ) - CRS ) )", "choosing": "( ( CS + ( Min( Max( MUR,MLU ) ,Min( ( ( MUC - ( DS / RRSe ) ) + CS ) ,MLU ) ) * DS ) ) * ( MUC + RCSe ) )", "obj1": 0.6255060728744939, "obj2": 0.28053605997520564}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3240143983212763}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Min( PN ,Max( RRS,BR ) ) ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) * ( PN / PN ) )", "choosing": "( ( MLU + ( RMSe * ( RMSe * MLU ) ) ) * ( MUC / MUM ) )", "obj1": 0.29554655870445345, "obj2": 0.5734861094164944}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - BR ) * ( Const - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( Max( MLU,RRSe ) * ( RRSe + CS ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.4757085020242915, "obj2": 0.4069646006864347}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( RRSe + ( ( RMSe * MUC ) - CS ) ) * DS ) / RCSe )", "obj1": 0.39271255060728744, "obj2": 0.49976595328059525}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,RCSe )", "obj1": 0.5951417004048583, "obj2": 0.2930037462419613}, {"determining": "Min( ( ( Min( DDR ,MDR ) - ( CRS / AMS ) ) + ( ( ( ( CRS / RRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) - RRS ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( MDR * ( FirstVNF_RAM - ARS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - MUR ) - Max( Max( RCSe,MUC ),Max( RCSe,( ( MUR * ( MUC / MLU ) ) / ( ( RRSe + MLU ) + ( MUR * ( MUM + MUM ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5332043362710083}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,FirstVNF_Mem )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( ( ( ( CS / RCSe ) / DS ) - ( RCSe - RMSe ) ),Max( RCSe,CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5104377413571077}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.6862348178137652, "obj2": 0.248659796074161}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) - Max( BR,Min( ( ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.145748987854251, "obj2": 0.6774566832456786}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN / BR ) ) ) ,( ( DDR / Min( ( FirstVNF_CPU_Server + CRS ) ,DDR ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * ( ( ( ( DS * RCSe ) - Max( CS,MLU ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) ) * ( MUC + RCSe ) ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.23373732881905615}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5409838382923978}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,RCSe )", "obj1": 0.5951417004048583, "obj2": 0.2930037462419613}, {"determining": "( Max( ( ACS + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( CS / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.13360323886639677, "obj2": 0.6844592929029916}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5795790066490742}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUR + MUM ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( CS + MLU ) + ( RRSe + RMSe ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.32860353378945595}, {"determining": "( Min( Const ,( FirstVNF_Mem * ARS ) ) - Min( ( ARS * AMS ) ,AMS ) )", "choosing": "Min( ( CS - RCSe ) ,( RMSe * MUC ) )", "obj1": 0.708502024291498, "obj2": 0.2367639483683239}, {"determining": "( ( DDR - RRS ) / Max( ( ( FirstVNF_CPU * MRS ) * Min( ARS ,Min( ( ( FirstVNF_CPU_Server * Min( AMS ,ARS ) ) - MRS ) ,MRS ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( Min( MUM ,( RMSe * ( ( Max( RRSe,RRSe ) * MLU ) * RRSe ) ) ) * ( ( Max( ( ( DS * MUR ) / ( MUC + RMSe ) ),RMSe ) - Max( RCSe,CS ) ) + MUC ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.11538461538461539, "obj2": 0.6934331568667418}, {"determining": "( ( Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( ( MUM * MUR ) / ( DS - MUR ) ) ,( Max( ( MUR - MUR ),Max( RRSe,DS ) ) / DS ) )", "obj1": 0.9635627530364372, "obj2": 0.027039592820070874}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5332043362710083}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,RRSe ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.2165991902834008, "obj2": 0.6149549261957239}, {"determining": "( ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) - ( RRS + Const ) )", "choosing": "Min( Max( ( Max( RCSe,( MUR * MUM ) ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.6090301288164952}, {"determining": "Min( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Const ) * FirstVNF_Mem ) ,FirstVNF_Mem )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( ( Min( MUR ,MUM ) + Min( ( ( MUC - CS ) * MUC ) ,RCSe ) ),Max( RCSe,CS ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5104377413571077}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe + MUM ) * ( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.014556433989379298}, {"determining": "( ( FirstVNF_CPU - MRS ) * Max( MDR,CRS ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.6120647082604534}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) + ( CS * RCSe ) ) ,( ( CS / RRSe ) - Min( MUM ,MUC ) ) )", "obj1": 0.9311740890688259, "obj2": 0.0481199541431044}, {"determining": "( ( FirstVNF_CPU - Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ) * Max( MRS,DDR ) )", "choosing": "( ( MUM * MUR ) / ( ( MUM - MUC ) / ( RRSe - MUR ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06675701974798136}, {"determining": "( Min( Const ,DDR ) - ( RRS + Const ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( ( RRSe - MUC ) / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.09539998476057762}, {"determining": "Min( Max( Max( Min( AMS ,PN ),( BR - RRS ) ),( MRS / FirstVNF_RAM_Server ) ) ,( ( MDR * ( Max( MDR,FirstVNF_RAM_Server ) - MDR ) ) - ( DDR - CRS ) ) )", "choosing": "( Max( MLU,( ( DS - ( DS * ( Min( CS ,Min( MUR ,RCSe ) ) * ( Max( RCSe,CS ) / Max( MLU,DS ) ) ) ) ) + ( MUC * MUR ) ) ) - ( Min( RRSe ,( MLU - ( ( MLU - RMSe ) * ( ( RMSe / MUM ) - RRSe ) ) ) ) + MUR ) )", "obj1": 0.9433198380566802, "obj2": 0.031169173556127226}, {"determining": "( ( ( FirstVNF_CPU / BR ) / AMS ) * ( ( DDR / FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( ( CS - CS ) * ( ( Max( MLU,( Max( MLU,RRSe ) / MUC ) ) - CS ) - Min( MUR ,CS ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5877243777603972}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.6862348178137652, "obj2": 0.248659796074161}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( Max( ( FirstVNF_CPU_Server + ( RRS * ACS ) ),FirstVNF_RAM ) - FirstVNF_CPU ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( RMSe * MUC ) - CS ) ) * DS ) / RCSe )", "obj1": 0.3805668016194332, "obj2": 0.5092201204061063}, {"determining": "Min( ( ( ( Min( Const ,DDR ) - ( RRS + Const ) ) / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,( RRSe * MUR ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.8866396761133604, "obj2": 0.09200857051175353}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( Max( MDR,ARS ) * Max( DDR,AMS ) ) + Max( Min( Min( Max( MRS,CRS ) ,( AMS / ( MDR / FirstVNF_CPU_Server ) ) ) ,ARS ),( MDR + DDR ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( RRSe + ( ( RMSe * MUC ) - CS ) ) * Max( ( RCSe * MUR ),MUM ) ) / RCSe )", "obj1": 0.38866396761133604, "obj2": 0.50157800220175}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.598891100178585}, {"determining": "Min( Min( ( FirstVNF_RAM - BR ) ,( DDR / RRS ) ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,DS ) )", "obj1": 0.9089068825910931, "obj2": 0.0801633793051595}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,RRSe ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.25303643724696356, "obj2": 0.5983748299096541}, {"determining": "( ( ( MRS / FirstVNF_CPU_Server ) - Const ) * ( BR / DDR ) )", "choosing": "Min( ( RRSe * ( Max( Max( ( ( MUC / DS ) + CS ),Max( MUR,MUM ) ),Max( RRSe,Min( ( DS / ( CS + RMSe ) ) ,RRSe ) ) ) + MLU ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5893439017459021}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6966304851454704}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,MUR ) - ( MUR + ( ( CS + MLU ) - ( MUC + Max( Max( ( ( RMSe * MUC ) - CS ),MUM ),MUM ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.10306245168157001}, {"determining": "( ( FirstVNF_Mem + DDR ) * ( FirstVNF_CPU_Server - BR ) )", "choosing": "( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,( Min( ( MUM + DS ) ,( DS / RMSe ) ) + MUC ) ) ) ) * DS ) + ( RMSe + DS ) )", "obj1": 0.9858299595141701, "obj2": 0.007931720124806387}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5409838382923978}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / ( Min( RRS ,ARS ) - ( MDR * FirstVNF_CPU_Server ) ) ) + Min( ARS ,Min( MDR ,MRS ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.006418759068923396}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - ( ( ARS - CRS ) / FirstVNF_CPU_Server ) ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( ( MUM * MUR ) / ( DS - MUR ) ) ,( Max( ( MUR - ( Max( MLU,RRSe ) * DS ) ),Max( RRSe,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.07365160661130325}, {"determining": "Max( ( ( ( BR / FirstVNF_CPU ) - ( MRS / FirstVNF_RAM ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + BR ) ),Max( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( ( ( Max( DDR,FirstVNF_CPU ) / DDR ) - FirstVNF_Mem ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - ( ( RRSe + RRSe ) - ( CS / Min( RCSe ,( ( ( CS / MUM ) + ( MUM + MUM ) ) - CS ) ) ) ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7213501925738697}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN / BR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( ( ( DS * RCSe ) - Max( CS,MLU ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.9230769230769231, "obj2": 0.06762596030173323}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.7145748987854251, "obj2": 0.23447728693691475}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.012480659102364185}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0951417004048583, "obj2": 0.7045954213034179}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) / FirstVNF_CPU_Server ) - Const ) * ( Max( ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),MUC ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( Min( ( ( MUR / MUM ) / Min( MLU ,MUR ) ) ,( ( DS + MUM ) * ( MLU * RRSe ) ) ) + Min( ( ( MUC - MLU ) * ( MLU * MLU ) ) ,Max( Max( MUR,DS ),Min( MLU ,MUC ) ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.701570936334548}, {"determining": "( Min( Const ,DDR ) - ( RRS + Const ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.08496710850462591}, {"determining": "Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.145748987854251, "obj2": 0.6774566832456786}, {"determining": "( ( FirstVNF_CPU - Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ) * Max( MRS,DDR ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * RCSe ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.9190283400809717, "obj2": 0.07211234473603291}, {"determining": "( ( PN - MRS ) - ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7079879242899484}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + ( RRS * ACS ) ),FirstVNF_RAM ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( MRS - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * AMS ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.8987854251012146, "obj2": 0.08251874554366848}, {"determining": "( ( FirstVNF_CPU - ACS ) * Max( ( Min( FirstVNF_RAM ,Const ) - FirstVNF_Mem_Server ),DDR ) )", "choosing": "( ( MUM * MUR ) / ( MUM / ( MUC + MUR ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( ( MRS / ARS ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7103705748294563}, {"determining": "( Min( ( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) ) ,FirstVNF_CPU ) * Max( ( BR / RRS ),( BR * FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,MUC ) / Max( ( RCSe + ( MUM * Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.9817813765182186, "obj2": 0.011159394310084699}, {"determining": "( Min( Const ,DDR ) - ( RRS + Const ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.08496710850462591}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( RRS + Const ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( MUM,RMSe ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7098228859634096}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) + ( CRS + CRS ) ) / ( ( Min( CRS ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * Max( RMSe,( ( ( MUR + CS ) + RCSe ) + MUC ) ) ) ,RCSe )", "obj1": 0.9959514170040485, "obj2": 0.0019928116135002295}, {"determining": "Min( ( RRS + FirstVNF_Mem ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / BR ) ) ) )", "choosing": "( Min( RCSe ,Min( RMSe ,( RRSe - RCSe ) ) ) / ( Max( Max( ( ( MLU + ( ( MUC * MLU ) + MUR ) ) / ( RRSe - ( ( MUM + RRSe ) * ( MUC * RRSe ) ) ) ),DS ),MUM ) - ( Max( MUR,CS ) - MLU ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03461384979765229}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Max( Max( PN,Const ),( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( CS - ( RMSe * DS ) ) * RCSe ) + ( RRSe - CS ) ) ,( ( CS / RRSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.9311740890688259, "obj2": 0.0481199541431044}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7021316168561894}, {"determining": "( ( FirstVNF_CPU - Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ) * Max( MRS,DDR ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.917004048582996, "obj2": 0.0729813588304588}, {"determining": "( ( FirstVNF_CPU - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( ( RRSe - MUC ) / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7133477289801416}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,( MDR / AMS ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( ( ( DS + DS ) * ( DS + CS ) ) * Max( RRSe,( Min( ( ( RMSe / Max( RRSe,DS ) ) + DS ) ,CS ) / MLU ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) * Max( MRS,DDR ) )", "choosing": "( ( CS * MUR ) / ( DS - MUR ) )", "obj1": 0.9412955465587044, "obj2": 0.03122087446517483}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RCSe ,Min( RMSe ,( RRSe - RCSe ) ) ) / ( Max( Max( RMSe,DS ),MUM ) - ( Max( MUR,CS ) - MLU ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03461384979765229}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6966304851454704}, {"determining": "( ( FirstVNF_CPU - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( ( RRSe - MUC ) / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "( ( ACS - PN ) - Max( FirstVNF_RAM_Server,( MRS / Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / RMSe ),( ( MUR * MUC ) + CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.012480659102364185}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5893439017459021}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( ( RRSe - MUC ) / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7133477289801416}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( MLU - ( Min( MLU ,MUM ) + ( RRSe - Min( ( ( RCSe * MUC ) * RCSe ) ,RMSe ) ) ) ) ) ,Max( ( Max( MUC,( MLU - ( ( ( DS / CS ) * RMSe ) - ( MLU + CS ) ) ) ) * ( Min( MUR ,MUR ) + DS ) ),RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( FirstVNF_CPU - Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ) * Max( MRS,DDR ) )", "choosing": "( ( MUM * MUR ) / ( ( MUM - MUC ) / ( RRSe - MUR ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06675701974798136}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,RRSe ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.25303643724696356, "obj2": 0.5983748299096541}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_CPU / ACS ) - ARS ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.598891100178585}, {"determining": "( ( Min( Min( ( ACS / Min( ( AMS + FirstVNF_RAM_Server ) ,Const ) ) ,AMS ) ,( FirstVNF_CPU / Max( MDR,Min( DDR ,AMS ) ) ) ) - ( Min( ARS ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) * Max( MRS,DDR ) )", "choosing": "( ( Max( ( RCSe * Min( DS ,( RCSe - RMSe ) ) ),MUM ) + Max( MUR,Max( ( Max( ( ( CS + RCSe ) - RRSe ),RCSe ) / RCSe ),RCSe ) ) ) / ( DS - MUR ) )", "obj1": 0.9412955465587044, "obj2": 0.03122087446517483}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( ( MUM - MUC ) / ( RRSe - MUR ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( PN - ( FirstVNF_CPU / BR ) ) - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( ( MLU + RRSe ) * ( Max( ( MUC + RCSe ),CS ) / Max( MLU,RCSe ) ) ) * DS ) + ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( DDR,FirstVNF_CPU_Server ) ) ,( ( DDR + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( RRSe / ( Max( ( Max( Max( RMSe,MUR ),CS ) / CS ),MUC ) - MUM ) ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.7368421052631579, "obj2": 0.20869886747061053}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( RMSe * MUC ) - CS ) ) * DS ) / RCSe )", "obj1": 0.8218623481781376, "obj2": 0.07621478371748892}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.888663967611336, "obj2": 0.04703735660486426}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10104511367991093}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.39007960368929245}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - Max( Max( RMSe,DS ),MUM ) ) )", "obj1": 0.7672064777327935, "obj2": 0.09935785026264268}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.39878542510121456, "obj2": 0.4528990770884948}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.3687945816523712}, {"determining": "Min( Max( ACS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM - MDR ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * ( MUM - RMSe ) ) - DS ) + ( MUC * MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.9271255060728745, "obj2": 0.0296103473881387}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6862348178137652, "obj2": 0.2477959940222137}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - ( Min( ( RRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * CRS ) ) ) ) ) )", "choosing": "( ( MLU * ( ( ( ( Min( ( RMSe * MUM ) ,( MLU / MUR ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( Min( RRSe ,MUC ) * MUR ) ) ) - Max( RCSe,( MUR - ( MUM + MUC ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.435612119071321}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Min( PN ,Max( RRS,BR ) ) ) - FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) * ( PN / PN ) )", "choosing": "( ( MLU + ( RMSe * ( RMSe * MLU ) ) ) * ( MUC / MUM ) )", "obj1": 0.29554655870445345, "obj2": 0.5734861094164944}, {"determining": "Min( ( Max( FirstVNF_CPU,( Min( FirstVNF_RAM_Server ,MDR ) - ( FirstVNF_Mem + ( FirstVNF_CPU - PN ) ) ) ) * ( PN * AMS ) ) ,( ACS - AMS ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( Max( Max( Min( RCSe ,MUM ),Min( ( CS + MLU ) ,Max( RCSe,DS ) ) ),MUR ),MUR ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( Max( FirstVNF_RAM,( ( Const + RRS ) - CRS ) ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( Max( ( FirstVNF_CPU_Server + ( RRS * ACS ) ),FirstVNF_RAM ) - FirstVNF_CPU ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( CS ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( RMSe * MUC ) - CS ) ) * DS ) / RCSe )", "obj1": 0.3603238866396761, "obj2": 0.5057480500458077}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe * MUC ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.562753036437247, "obj2": 0.2972807355868271}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6437483572303415}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( RRSe + ( ( RMSe * MUC ) - CS ) ) * DS ) / RCSe )", "obj1": 0.39271255060728744, "obj2": 0.49976595328059525}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - ( Min( CRS ,( DDR + ARS ) ) - MRS ) ) - ( ( BR - AMS ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( MUM / ( RRSe + CS ) ) - RRSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25177981629265084}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5793696730693851}, {"determining": "( ( Const - FirstVNF_Mem ) * ( ACS - ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( Min( ( ( ARS / ACS ) + CRS ) ,Max( PN,MDR ) ) + PN ) ) ) ) )", "choosing": "( ( RCSe * MUR ) / ( RCSe / CS ) )", "obj1": 0.4331983805668016, "obj2": 0.44813374960359736}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_CPU / ACS ) - ARS ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,RRSe ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.145748987854251, "obj2": 0.676172628948506}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,( DS + CS ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.2145748987854251, "obj2": 0.6104104467335772}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN / BR ) ) ) ,( ( DDR / Min( ( FirstVNF_CPU_Server + CRS ) ,DDR ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( ( ( Min( RMSe ,( RMSe * MUC ) ) + MUM ) - MUC ) * RCSe ) ) + Min( ( DS / DS ) ,( MUR * ( ( ( ( DS * RCSe ) - Max( CS,MLU ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) ) * ( MUC + RCSe ) ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.23373732881905615}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5910931174089069, "obj2": 0.29057641439136733}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3553445062272755}, {"determining": "Min( ( MRS / FirstVNF_CPU_Server ) ,( ( Const + RRS ) - CRS ) )", "choosing": "( ( CS + ( Min( Max( MUR,MLU ) ,Min( ( ( MUC - ( DS / RRSe ) ) + CS ) ,MLU ) ) * DS ) ) * ( MUC + RCSe ) )", "obj1": 0.6255060728744939, "obj2": 0.28053605997520564}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.548169918466006}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6324261088620643}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6072874493927125, "obj2": 0.28950178729539944}, {"determining": "( Min( Const ,( FirstVNF_Mem * ARS ) ) - Min( ( ARS * AMS ) ,AMS ) )", "choosing": "Min( ( CS - RCSe ) ,( RMSe * MUC ) )", "obj1": 0.708502024291498, "obj2": 0.2367639483683239}, {"determining": "( ( DDR - AMS ) - ( ( ( DDR - Max( Max( MDR,Max( DDR,MRS ) ),FirstVNF_CPU_Server ) ) - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( ( DS * MLU ) - CS ) ,RCSe )", "obj1": 0.19635627530364372, "obj2": 0.6228487832597008}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.3438895091775305}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3240143983212763}, {"determining": "Min( Max( MRS,RRS ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,FirstVNF_RAM ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) - Max( MLU,MLU ) ) * ( Min( DS ,CS ) * ( MUR - MUM ) ) ) / ( RRSe * MUM ) )", "obj1": 0.9534412955465587, "obj2": 0.027173481860893297}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3322153698958928}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.2650888452760293}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( Max( MDR,ARS ) * Max( DDR,AMS ) ) + Max( Min( Min( Max( MRS,CRS ) ,( AMS / ( MDR / FirstVNF_CPU_Server ) ) ) ,ARS ),( MDR + DDR ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( RRSe + ( ( RMSe * MUC ) - CS ) ) * Max( ( RCSe * MUR ),MUM ) ) / RCSe )", "obj1": 0.38866396761133604, "obj2": 0.50157800220175}, {"determining": "( FirstVNF_Mem_Server - ( ARS - Max( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server - ARS ) - FirstVNF_Mem ) ),ACS ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( RCSe,MUM ) ),( ( Max( MLU,MUM ) * DS ) - Max( MLU,DS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5972846591840455}, {"determining": "( BR * ( PN - BR ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.13360323886639677, "obj2": 0.6777617768783373}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.26005107269114136}, {"determining": "Min( ( ( Min( DDR ,MDR ) - ( CRS / AMS ) ) + ( ( ( ( CRS / RRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) - RRS ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( MDR * ( FirstVNF_RAM - ARS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - MUR ) - Max( Max( RCSe,MUC ),Max( RCSe,( ( MUR * ( MUC / MLU ) ) / ( ( RRSe + MLU ) + ( MUR * ( MUM + MUM ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5332043362710083}, {"determining": "( Max( ( CRS / DDR ),DDR ) - ( ( ACS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( ( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MUC,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) - RCSe ) ,RCSe )", "obj1": 0.548582995951417, "obj2": 0.3306903700609663}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.1659919028340081, "obj2": 0.6377766806196973}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe + MUM ) * ( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012954388251054412}, {"determining": "( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( Min( ( RCSe - CS ) ,Max( RCSe,DS ) ) - CS ) ,RCSe )", "obj1": 0.19635627530364372, "obj2": 0.6228487832597008}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.0998186966746428}, {"determining": "( ( Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) - ( BR / MRS ) ) / ( Min( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( MUR - ( MLU - ( Min( MLU ,MUM ) + ( RRSe - Min( ( ( RCSe * MUC ) * RCSe ) ,RMSe ) ) ) ) ) ,Max( ( Max( MUC,( MLU - ( ( ( DS / CS ) * RMSe ) - ( MLU + CS ) ) ) ) * ( Min( MUR ,MUR ) + DS ) ),RCSe ) )", "obj1": 0.9635627530364372, "obj2": 0.025067748729392315}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( BR / MRS ) / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( DS - MUR ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3369971389026505}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( RRS + Const ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.6088649730207254}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.2388663967611336, "obj2": 0.6069759850528548}, {"determining": "( Max( ( Min( RRS ,BR ) - Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,MUC ) - Max( Min( ( RRSe * MUR ) ,( CS * MUM ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6888081827302159}, {"determining": "( ( ( MRS / FirstVNF_CPU_Server ) - Const ) * ( BR / DDR ) )", "choosing": "Min( ( RRSe * ( Max( Max( ( ( MUC / DS ) + CS ),Max( MUR,MUM ) ),Max( RRSe,Min( ( DS / ( CS + RMSe ) ) ,RRSe ) ) ) + MLU ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5893439017459021}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5342082186978937}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUR + MUM ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( CS + MLU ) + ( RRSe + RMSe ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.32860353378945595}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,DS ) )", "obj1": 0.979757085020243, "obj2": 0.012479119762508048}, {"determining": "( ( DDR - RRS ) / Max( ( ( FirstVNF_CPU * MRS ) * Min( ARS ,Min( ( ( FirstVNF_CPU_Server * Min( AMS ,ARS ) ) - MRS ) ,MRS ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( Min( MUM ,( RMSe * ( ( Max( RRSe,RRSe ) * MLU ) * RRSe ) ) ) * ( ( Max( ( ( DS * MUR ) / ( MUC + RMSe ) ),RMSe ) - Max( RCSe,CS ) ) + MUC ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.11538461538461539, "obj2": 0.6934331568667418}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6966304851454704}, {"determining": "Min( ( ( ( Min( Const ,DDR ) - ( RRS + Const ) ) / MRS ) / FirstVNF_Mem ) ,( ( PN - MRS ) - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( Max( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ),( RRSe * MUR ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.9939271255060729, "obj2": 0.00392278196441787}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5332043362710083}, {"determining": "Min( ( ( ( RRS / MDR ) / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( Const - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,Max( Max( ( ( MUM + MUC ) - ( ( ( ( MUM * DS ) * DS ) - RCSe ) / ( MUR + RMSe ) ) ),MLU ),MUM ) )", "obj1": 0.30364372469635625, "obj2": 0.5409838382923978}, {"determining": "( ( PN - MRS ) - ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ) )", "obj1": 0.9878542510121457, "obj2": 0.007177518692504509}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Min( PN ,( ( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + FirstVNF_RAM ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU + ( Min( MLU ,( ( RRSe - DS ) + ( Max( MLU,MUM ) - CS ) ) ) * RMSe ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS * MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.699906124911522}, {"determining": "( ( ( MRS / ARS ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7103705748294563}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5409838382923978}, {"determining": "( Min( ARS ,ARS ) / ( ( DDR * Min( ( RRS * MDR ) ,DDR ) ) + MDR ) )", "choosing": "( ( RRSe * ( Max( CS,MUR ) * MUC ) ) / ( DS - MUR ) )", "obj1": 0.07489878542510121, "obj2": 0.7183161216551786}, {"determining": "( ( PN - MRS ) - ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7079879242899484}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - DS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5893439017459021}, {"determining": "Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - FirstVNF_Mem ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( ( MUM * Max( MLU,MUM ) ) / ( DS - MUR ) ) - Min( CS ,RMSe ) )", "obj1": 0.11538461538461539, "obj2": 0.6934331568667418}, {"determining": "( ( PN - MRS ) - ( FirstVNF_Mem - ACS ) )", "choosing": "( Min( ( RCSe - CS ) ,Max( RCSe,DS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7021316168561894}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3240143983212763}, {"determining": "( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( Max( MLU,Min( ( DS - ( ( ( MLU + RRSe ) * Max( ( DS - DS ),Max( DS,CS ) ) ) * DS ) ) ,( Min( RRSe ,MUC ) * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12348178137651822, "obj2": 0.689281797390743}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( FirstVNF_Mem_Server - CRS ) + ( CRS + CRS ) ) ),( Const + DDR ) )", "choosing": "( ( ( RRSe + ( ( RMSe * MUC ) - CS ) ) * DS ) / Min( ( RRSe * Max( RMSe,( ( ( MUR + CS ) + RCSe ) + MUC ) ) ) ,RCSe ) )", "obj1": 0.39271255060728744, "obj2": 0.49976595328059525}, {"determining": "( Min( ( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) ) ,FirstVNF_CPU ) * Max( ( BR / RRS ),( BR * FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( ( ( DS * ( ( MLU + RRSe ) * RCSe ) ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.9838056680161943, "obj2": 0.009009001413121083}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6966304851454704}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) + ( CRS + CRS ) ) / ( ( Min( CRS ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * Max( RMSe,( ( ( MUR + CS ) + RCSe ) + MUC ) ) ) ,RCSe )", "obj1": 0.9959514170040485, "obj2": 0.0019928116135002295}, {"determining": "( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( Max( MLU,Min( ( DS - ( ( ( MLU + RRSe ) * Max( ( DS - DS ),Max( DS,CS ) ) ) * DS ) ) ,( Min( RRSe ,MUC ) * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12348178137651822, "obj2": 0.689281797390743}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0951417004048583, "obj2": 0.7045954213034179}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.7145748987854251, "obj2": 0.23447728693691475}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.7145748987854251, "obj2": 0.23447728693691475}, {"determining": "( ( FirstVNF_CPU - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( ( RRSe - MUC ) / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0951417004048583, "obj2": 0.7045954213034179}, {"determining": "Max( ( ( ( BR / FirstVNF_CPU ) - ( MRS / FirstVNF_RAM ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + BR ) ),Max( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( ( ( Max( DDR,FirstVNF_CPU ) / DDR ) - FirstVNF_Mem ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - ( ( RRSe + RRSe ) - ( CS / Min( RCSe ,( ( ( CS / MUM ) + ( MUM + MUM ) ) - CS ) ) ) ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7213501925738697}, {"determining": "( ( FirstVNF_CPU - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( ( RRSe - MUC ) / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7133477289801416}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) - Max( BR,Min( ( ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07894736842105263, "obj2": 0.7141525471385848}, {"determining": "( Min( ( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) ) ,FirstVNF_CPU ) * Max( ( BR / RRS ),( BR * FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,MUC ) / Max( ( RCSe + ( MUM * Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.9817813765182186, "obj2": 0.011159394310084699}, {"determining": "( Max( ( ( FirstVNF_CPU * MRS ) * Min( ARS ,Min( MDR ,MRS ) ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUC,MLU ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7213501925738697}, {"determining": "( Min( ( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) ) ,FirstVNF_CPU ) * Max( ( BR / RRS ),( BR * FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,MUC ) / Max( ( RCSe + ( MUM * Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.9817813765182186, "obj2": 0.011159394310084699}, {"determining": "( ( ( PN - MRS ) - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) + ( MLU + DS ) )", "obj1": 0.9858299595141701, "obj2": 0.007931720124806387}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( MLU - ( Min( MLU ,MUM ) + ( RRSe - Min( ( ( RCSe * MUC ) * RCSe ) ,RMSe ) ) ) ) ) ,Max( ( Max( MUC,( MLU - ( ( ( DS / CS ) * RMSe ) - ( MLU + CS ) ) ) ) * ( Min( MUR ,MUR ) + DS ) ),RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUR,Max( MUC,( Min( RCSe ,RMSe ) / ( ( ( RRSe - MUC ) / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7133477289801416}, {"determining": "( ( FirstVNF_Mem + DDR ) * ( FirstVNF_CPU_Server - BR ) )", "choosing": "( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,( Min( ( MUM + DS ) ,( DS / RMSe ) ) + MUC ) ) ) ) * DS ) + ( RMSe + DS ) )", "obj1": 0.9858299595141701, "obj2": 0.007931720124806387}, {"determining": "( ( FirstVNF_CPU - ACS ) * Max( ( Min( FirstVNF_RAM ,Const ) - FirstVNF_Mem_Server ),DDR ) )", "choosing": "( ( MUM * MUR ) / ( MUM / ( MUC + MUR ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR - ( MLU - RMSe ) ) ,Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( FirstVNF_Mem_Server - RRS ) )", "choosing": "Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( ( MUM - MUC ) / ( RRSe - MUR ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - Min( AMS ,ARS ) ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( MUC + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( FirstVNF_CPU / BR ) ) - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( ( MLU + RRSe ) * ( Max( ( MUC + RCSe ),CS ) / Max( MLU,RCSe ) ) ) * DS ) + ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( FirstVNF_RAM / MRS ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),( BR / MDR ) )", "choosing": "( ( DS - MUR ) / Min( ( MLU / MLU ) ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU ,AMS ) ,( Min( ARS ,( ( Max( ( ACS + FirstVNF_RAM ),DDR ) / PN ) + FirstVNF_Mem_Server ) ) - MDR ) ) )", "choosing": "( ( ( ( RCSe - ( MLU - RMSe ) ) * ( DS / MLU ) ) - MUC ) / ( DS - MUR ) )", "obj1": 0.7267206477732794, "obj2": 0.11277752694150144}, {"determining": "Min( ( Max( FirstVNF_CPU,( Min( FirstVNF_RAM_Server ,MDR ) - ( FirstVNF_Mem + ( FirstVNF_CPU - PN ) ) ) ) * ( PN * AMS ) ) ,( ACS - AMS ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( Max( Max( Min( RCSe ,MUM ),Min( ( CS + MLU ) ,Max( RCSe,DS ) ) ),MUR ),MUR ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.2312500004666618}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( AMS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Min( ( ( MUC / MUM ) / ( RRSe / MUR ) ) ,RMSe ) ) )", "obj1": 0.3441295546558704, "obj2": 0.46441156404373335}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.367559890582591}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.8724696356275303, "obj2": 0.057050030826051396}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( MLU,( ( ( ( Min( ( RMSe * MUM ) ,( MLU / MUR ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( Min( RRSe ,MUC ) * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.4331983805668016, "obj2": 0.4349718592924989}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.39007960368929245}, {"determining": "( ( ( ( MRS / FirstVNF_CPU_Server ) - Const ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( MUR,MUM ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.24634805968481052}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09116355840453494}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe * MUC ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.562753036437247, "obj2": 0.2972807355868271}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( RMSe * MUC ) - CS ) ) * DS ) / RCSe )", "obj1": 0.8238866396761133, "obj2": 0.07561389122330969}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) - CS ) ) * DS ) / RCSe )", "obj1": 0.7955465587044535, "obj2": 0.08179464802984587}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3553445062272755}, {"determining": "Min( ( Max( FirstVNF_CPU,( Min( FirstVNF_RAM_Server ,MDR ) - ( FirstVNF_Mem + ( FirstVNF_CPU - PN ) ) ) ) * ( PN * AMS ) ) ,( ACS - AMS ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( Max( Max( Min( RCSe ,MUM ),Min( ( CS + MLU ) ,Max( RCSe,DS ) ) ),MUR ),MUR ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "( ( ( ( Min( Const ,DDR ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( PN / BR ) )", "choosing": "( ( MUR - CS ) * ( MUC + RCSe ) )", "obj1": 0.2813765182186235, "obj2": 0.574056105625044}, {"determining": "( ( DDR - MDR ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.2550607287449393, "obj2": 0.5789013843602462}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.39878542510121456, "obj2": 0.4528990770884948}, {"determining": "( BR * ( PN - BR ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.1437246963562753, "obj2": 0.6722498982343947}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6437483572303415}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5519800196315171}, {"determining": "Min( ( ( PN * AMS ) * Max( FirstVNF_CPU,( Min( FirstVNF_RAM_Server ,MDR ) - Max( ( FirstVNF_Mem + ( RRS - FirstVNF_CPU ) ),( FirstVNF_RAM_Server + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) ) ,( ACS - AMS ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( RCSe ,MUM ),Min( ( MUM + MLU ) ,Max( RCSe,DS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.2312500004666618}, {"determining": "Min( Min( Min( ( BR - RRS ) ,( ARS - FirstVNF_CPU ) ) ,ACS ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( RRSe + MLU ) * ( Max( RCSe,CS ) / Max( MUC,RCSe ) ) ) * DS ) - DS ) + ( MUR - RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9271255060728745, "obj2": 0.0296103473881387}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.3438895091775305}, {"determining": "Min( Max( ACS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM - MDR ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * ( MUM - RMSe ) ) - DS ) + ( MUC * MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.9271255060728745, "obj2": 0.0296103473881387}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3322153698958928}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.888663967611336, "obj2": 0.04703735660486426}, {"determining": "( BR * ( PN - BR ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.13360323886639677, "obj2": 0.6777617768783373}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - ( ( ( MRS - Min( ARS ,CRS ) ) / Min( CRS ,FirstVNF_CPU ) ) / ( Max( ( ( BR / RRS ) + RRS ),FirstVNF_CPU ) - ( BR + PN ) ) ) ) )", "choosing": "( Max( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( Max( MUR,MLU ) / MUR ) ) ) ) - ( DS - MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( RCSe + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.41700404858299595, "obj2": 0.4427610129153414}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( RMSe * MUC ) - CS ) ) * DS ) / RCSe )", "obj1": 0.6093117408906883, "obj2": 0.2819478171955138}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32388663967611336, "obj2": 0.52687273462569}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.39007960368929245}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3240143983212763}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),MUR ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.09981155532120521}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2713780103253408}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( Min( ( RMSe * MUM ) ,( MLU / MUR ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( Min( RRSe ,MUC ) * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.20850202429149797, "obj2": 0.6185378591848052}, {"determining": "( Max( ( Min( ACS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / Min( Max( AMS,ARS ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( RRSe + ( ( ( RCSe - MUC ) * MUC ) - CS ) ) ,DS ) / RCSe )", "obj1": 0.8178137651821862, "obj2": 0.07783255818409908}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - ( Min( CRS ,( DDR + ARS ) ) - MRS ) ) - ( ( BR - AMS ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( MUM / ( RRSe + CS ) ) - RRSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25177981629265084}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.6356275303643725, "obj2": 0.253369248365866}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( RRS / AMS ) ) / ( ( AMS - RRS ) - Min( CRS ,MDR ) ) ) ,( ACS - ( ( FirstVNF_CPU * Const ) + ( MRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( MUR + ( Max( RRSe,Min( MUC ,CS ) ) - ( Min( DS ,RCSe ) * ( RRSe / RRSe ) ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,MLU ) ) ) ,( Min( Min( MUR ,RCSe ) ,( CS - RCSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - Min( ( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( Max( ( RRS / RRS ),MDR ) - Max( CRS,MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - DS ) ) ) ) ) - ( CS + MLU ) )", "obj1": 0.4109311740890688, "obj2": 0.44809159149160566}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( RRS + Const ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.6088649730207254}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,( DS + CS ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.2145748987854251, "obj2": 0.6104104467335772}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.543354179424503}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5910931174089069, "obj2": 0.29057641439136733}, {"determining": "( FirstVNF_Mem_Server - ( ARS - Max( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server - ARS ) - FirstVNF_Mem ) ),ACS ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( RCSe,MUM ) ),( ( Max( MLU,MUM ) * DS ) - Max( MLU,DS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5972846591840455}, {"determining": "Min( Max( MRS,RRS ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,FirstVNF_RAM ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) - Max( MLU,MLU ) ) * ( Min( DS ,CS ) * ( MUR - MUM ) ) ) / ( RRSe * MUM ) )", "obj1": 0.9534412955465587, "obj2": 0.027173481860893297}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6072874493927125, "obj2": 0.28950178729539944}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( BR / MRS ) / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( DS - MUR ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3369971389026505}, {"determining": "Min( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.8846153846153846, "obj2": 0.048519580473738534}, {"determining": "( Max( ( CRS / DDR ),DDR ) - ( ( ACS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( ( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MUC,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) - RCSe ) ,RCSe )", "obj1": 0.548582995951417, "obj2": 0.3306903700609663}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10151816738072941}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.39878542510121456, "obj2": 0.4528990770884948}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.888663967611336, "obj2": 0.04703735660486426}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - Min( ( FirstVNF_RAM_Server / ARS ) ,DDR ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( Max( MUC,( MLU - ( ( ( DS / CS ) * RMSe ) - ( MUC + CS ) ) ) ) * ( Min( MUR ,MUR ) + DS ) ) ,Max( ( MLU - MUM ),( MUC + RMSe ) ) )", "obj1": 0.9615384615384616, "obj2": 0.016554336806013252}, {"determining": "( Min( ARS ,ARS ) / ( Min( DDR ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.6051861126333039}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5910931174089069, "obj2": 0.29057641439136733}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe + MUM ) * ( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012954388251054412}, {"determining": "( Min( ( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) ) ,FirstVNF_CPU ) * Max( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ),( BR * FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,MUC ) / Max( ( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + ( MUM * Max( MLU,MUM ) ) ),MUR ) )", "obj1": 0.979757085020243, "obj2": 0.011974854931555637}, {"determining": "Min( Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.9554655870445344, "obj2": 0.024793219041918307}, {"determining": "( FirstVNF_Mem_Server - ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) / ACS ) - ARS ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),( ( Max( MLU,RRSe ) * DS ) - DS ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5972846591840455}, {"determining": "Min( ( Max( ( Min( RRS ,BR ) + Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.18421052631578946, "obj2": 0.626711333359267}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6955676327267922}, {"determining": "Min( ( ( ( RRS / MDR ) / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( Const - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,Max( Max( ( ( MUM + MUC ) - ( ( ( ( MUM * DS ) * DS ) - RCSe ) / ( MUR + RMSe ) ) ),MLU ),MUM ) )", "obj1": 0.30364372469635625, "obj2": 0.5409838382923978}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6324261088620643}, {"determining": "( ( DDR - AMS ) - ( ( ( DDR - Max( Max( MDR,Max( DDR,MRS ) ),FirstVNF_CPU_Server ) ) - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( ( DS * MLU ) - CS ) ,RCSe )", "obj1": 0.19635627530364372, "obj2": 0.6228487832597008}, {"determining": "( ( DDR - RRS ) / Max( ( ( FirstVNF_CPU * MRS ) * Min( ARS ,Min( ( ( FirstVNF_CPU_Server * Min( AMS ,ARS ) ) - MRS ) ,MRS ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( Min( MUM ,( RMSe * ( ( Max( RRSe,RRSe ) * MLU ) * RRSe ) ) ) * ( ( Max( ( ( DS * MUR ) / ( MUC + RMSe ) ),RMSe ) - Max( RCSe,CS ) ) + MUC ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.11538461538461539, "obj2": 0.6934331568667418}, {"determining": "( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( Min( ( RCSe - CS ) ,Max( RCSe,DS ) ) - CS ) ,RCSe )", "obj1": 0.19635627530364372, "obj2": 0.6228487832597008}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.2650888452760293}, {"determining": "Min( Min( PN ,( ARS - DDR ) ) ,( FirstVNF_RAM_Server - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( ( RRSe - MUC ),Min( MLU ,CS ) ) ) - Max( Max( RCSe,CS ),Max( RCSe,MUC ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe * CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5342082186978937}, {"determining": "Min( ( ( Min( DDR ,MDR ) - ( CRS / AMS ) ) + ( ( ( ( CRS / RRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) - RRS ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( MDR * ( FirstVNF_RAM - ARS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - MUR ) - Max( Max( RCSe,MUC ),Max( RCSe,( ( MUR * ( MUC / MLU ) ) / ( ( RRSe + MLU ) + ( MUR * ( MUM + MUM ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5332043362710083}, {"determining": "( Max( ( Min( RRS ,BR ) - Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,MUC ) - Max( Min( ( RRSe * MUR ) ,( CS * MUM ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6888081827302159}, {"determining": "( ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( BR / MRS ) / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) * ( ACS - ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( Min( ( ( ARS / ACS ) + CRS ) ,Max( PN,MDR ) ) + PN ) ) ) ) )", "choosing": "( ( ( Max( MUM,DS ) * ( CS + RCSe ) ) * MUR ) / ( RCSe / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}, {"determining": "Min( Min( ACS ,Min( BR ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( ( MUM * MUR ) / ( DS - MUR ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - ( ( AMS - BR ) - ( BR / RRS ) ) )", "choosing": "Min( ( RCSe - ( ( RRSe + RRSe ) * ( CS / ( RCSe - ( RCSe - CS ) ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.6255060728744939, "obj2": 0.2670583773686392}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.1659919028340081, "obj2": 0.6377766806196973}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6386463943733311}, {"determining": "( ( PN - MRS ) - ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7079879242899484}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( ( ( RRS - MDR ) - ( MRS * ARS ) ) - PN ) - Max( MDR,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Min( ( ( MUC + MUM ) / Min( RCSe ,MLU ) ) ,Max( MUR,MUC ) ) - ( ( Min( RRSe ,DS ) / Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6313718095265257}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6275597618280513}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6386463943733311}, {"determining": "( ( PN - MRS ) - ( FirstVNF_Mem - ACS ) )", "choosing": "( Min( ( RCSe - CS ) ,Max( RCSe,DS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6308569249876829}, {"determining": "Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - FirstVNF_Mem ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( ( MUM * Max( MLU,MUM ) ) / ( DS - MUR ) ) - Min( CS ,RMSe ) )", "obj1": 0.11538461538461539, "obj2": 0.6934331568667418}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.2650888452760293}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) + ( CRS + CRS ) ) / ( ( Min( CRS ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * Max( RMSe,( ( ( MUR + CS ) + RCSe ) + MUC ) ) ) ,RCSe )", "obj1": 0.9959514170040485, "obj2": 0.0019928116135002295}, {"determining": "( ( FirstVNF_Mem - ( PN - MRS ) ) * ( FirstVNF_Mem_Server - ( RRS - ACS ) ) )", "choosing": "( ( ( ( MLU + RRSe ) + ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) + ( MLU + Max( MUC,RCSe ) ) )", "obj1": 0.9878542510121457, "obj2": 0.00704511201462467}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Min( PN ,( ( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + FirstVNF_RAM ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU + ( Min( MLU ,( ( RRSe - DS ) + ( Max( MLU,MUM ) - CS ) ) ) * RMSe ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS * MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.699906124911522}, {"determining": "Max( ( Min( RRS ,AMS ) / ( ( Max( FirstVNF_RAM,AMS ) * Max( MDR,ARS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ),( Const + DDR ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6976525334425034}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5332043362710083}, {"determining": "( ( ( PN + RRS ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( DS - Max( ( ( MLU * ( ( MUR * ( MLU * DS ) ) / MUC ) ) + CS ),Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( MUM * MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7102551250958635}, {"determining": "( ( DDR - AMS ) - ( ( ACS - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.5566801619433198, "obj2": 0.32759291199787877}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08097165991902834, "obj2": 0.7105656113731915}, {"determining": "( Max( ( Min( RRS ,BR ) + Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( Max( Min( DS ,MUR ),MUR ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6888081827302159}, {"determining": "( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( Max( MLU,Min( ( DS - ( ( ( MLU + RRSe ) * Max( ( DS - DS ),Max( DS,CS ) ) ) * DS ) ) ,( Min( RRSe ,MUC ) * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12348178137651822, "obj2": 0.689281797390743}, {"determining": "( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3240143983212763}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MLU,( ( ( Max( MLU,( DS + CS ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.2145748987854251, "obj2": 0.6104104467335772}], "7": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - Min( AMS ,ARS ) ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - Min( AMS ,ARS ) ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( MUC + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( MRS / FirstVNF_RAM ) ,( ( Max( Const,MDR ) + ( MDR * FirstVNF_RAM ) ) + ARS ) ) * ( ( FirstVNF_RAM + ACS ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / Min( DS ,CS ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem_Server ) ) ) ,( ( DDR / Min( CRS ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe * CS ) ) * ( MUR - Min( Min( MLU ,( Min( ( RRSe / RRSe ) ,( CS * RMSe ) ) * MUM ) ) ,( ( Max( MUR,DS ) * MUR ) + RMSe ) ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.18582064217318403}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( AMS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Min( ( ( MUC / MUM ) / ( RRSe / MUR ) ) ,RMSe ) ) )", "obj1": 0.3441295546558704, "obj2": 0.46441156404373335}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) / Min( Min( AMS ,FirstVNF_CPU_Server ) ,( PN - ACS ) ) )", "choosing": "( ( MUM * MUR ) / ( Max( CS,( MUC * Max( RMSe,RCSe ) ) ) - MUR ) )", "obj1": 0.7267206477732794, "obj2": 0.11277752694150144}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( ( MRS - MDR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( MUM * ( DS + MUC ) ) ) / MUM ) * ( Max( ( RCSe * MUR ),MUC ) + ( Min( MUM ,Min( Min( ( RCSe + MUR ) ,RCSe ) ,RRSe ) ) / MLU ) ) ) / ( MUR - DS ) )", "obj1": 0.3785425101214575, "obj2": 0.454158861701145}, {"determining": "( ( ( ( MRS / FirstVNF_CPU_Server ) - Const ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( MUR,MUM ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.24634805968481052}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.4676113360323887, "obj2": 0.3607944729391691}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.4135398882406257}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( RMSe * MUC ) - CS ) ) * DS ) / RCSe )", "obj1": 0.8238866396761133, "obj2": 0.07561389122330969}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.8724696356275303, "obj2": 0.056557700459413086}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,FirstVNF_CPU_Server ) ,( PN - Max( ( RRS + AMS ),AMS ) ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Max( RCSe,MLU ),MUR ) ,( RCSe - CS ) )", "obj1": 0.5607287449392713, "obj2": 0.2795386828849712}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.28931841682141124}, {"determining": "Min( ( ( Min( DDR ,MDR ) - ( CRS / AMS ) ) + ( ( AMS - RRS ) - Max( Max( AMS,FirstVNF_CPU_Server ),( MDR * ( FirstVNF_RAM - ARS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe - ( ( RRSe + RRSe ) * ( CS / Min( RCSe ,MUC ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.22469635627530365, "obj2": 0.5957713649078524}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU ,AMS ) ,( Min( ARS ,( ( Max( ( ACS + FirstVNF_RAM ),DDR ) / PN ) + FirstVNF_Mem_Server ) ) - MDR ) ) )", "choosing": "( ( ( ( RCSe - ( MLU - RMSe ) ) * ( DS / MLU ) ) - MUC ) / ( DS - MUR ) )", "obj1": 0.7267206477732794, "obj2": 0.11277752694150144}, {"determining": "Min( ( DDR / PN ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - PN ) ) - Min( ( ( DDR / AMS ) - FirstVNF_Mem ) ,( ARS - Min( FirstVNF_Mem_Server ,( Max( AMS,PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( RMSe * ( DS - MUR ) ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Min( RMSe ,( RMSe * ( MLU + ( MUM + Max( RCSe,RMSe ) ) ) ) ) * ( CS + RCSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.3189296003358161}, {"determining": "( BR * ( PN - BR ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.13360323886639677, "obj2": 0.6777617768783373}, {"determining": "Min( ( Max( FirstVNF_CPU,( Min( FirstVNF_RAM_Server ,MDR ) - ( FirstVNF_Mem + ( FirstVNF_CPU - PN ) ) ) ) * ( PN * AMS ) ) ,( ACS - AMS ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( Max( Max( Min( RCSe ,MUM ),Min( ( CS + MLU ) ,Max( RCSe,DS ) ) ),MUR ),MUR ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( AMS * FirstVNF_RAM_Server ) / DDR ) ) ) ,( ( DDR / AMS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Min( CS ,RRSe ) ,Max( Max( DS,DS ),RMSe ) )", "obj1": 0.4757085020242915, "obj2": 0.350021180568636}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.4230769230769231, "obj2": 0.4060921738951925}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.6356275303643725, "obj2": 0.253369248365866}, {"determining": "( ( PN / BR ) * ( PN / PN ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + ( MUC + RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,( DS - MUC ) ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6481285848610425}, {"determining": "( ( DDR - MDR ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.2550607287449393, "obj2": 0.5789013843602462}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.3438895091775305}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.39007960368929245}, {"determining": "Min( Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * ( CS * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.609093774828859}, {"determining": "Min( FirstVNF_Mem_Server ,( PN - Max( FirstVNF_Mem,FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( ( ( ( ( Max( MLU,RCSe ) / ( MUC / RRSe ) ) * ( MLU + RRSe ) ) * Max( RRSe,RRSe ) ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,DS ) ) )", "obj1": 0.902834008097166, "obj2": 0.04176050441816119}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( MUM * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * DS ) - DS ) ) ) - CS ) ,Max( DS,MUR ) )", "obj1": 0.2773279352226721, "obj2": 0.5651121085506421}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / Min( PN ,FirstVNF_Mem ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( MUR + MUM ),( ( MUC - CS ) - RRSe ) ),( ( DS / DS ) * Max( MUC,RCSe ) ) ) - Min( DS ,RMSe ) )", "obj1": 0.3562753036437247, "obj2": 0.4573859533580756}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.39007960368929245}, {"determining": "( ( BR / MRS ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3217238331977749}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / ( MUM + RRSe ) ),Min( ( RCSe + MUM ) ,Min( ( MUM * DS ) ,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.3339046891896558}, {"determining": "Max( ( Min( ( FirstVNF_RAM / MRS ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),( BR / MDR ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( RCSe ,MUM ),Min( ( MUM + MLU ) ,Max( RCSe,DS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5891823035608421}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) - CS ) ) * DS ) / RCSe )", "obj1": 0.7955465587044535, "obj2": 0.08179464802984587}, {"determining": "( Max( ( Min( ACS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / Min( Max( AMS,ARS ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( RRSe + ( ( ( RCSe - MUC ) * MUC ) - CS ) ) ,DS ) / RCSe )", "obj1": 0.8178137651821862, "obj2": 0.07783255818409908}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08097165991902834, "obj2": 0.7105656113731915}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.4100891910033424}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "( Max( ( Min( RRS ,BR ) - Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) ) - Max( Min( ( RRSe * MUR ) ,( CS * MUM ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09431703951565824}, {"determining": "Min( ( FirstVNF_Mem / ( BR / MRS ) ) ,( ( ( Min( ( BR * FirstVNF_CPU_Server ) ,ARS ) + PN ) * BR ) * ( ( BR + AMS ) / ( Const / MRS ) ) ) )", "choosing": "( Max( Max( Min( CS ,MUR ),MUR ),( ( DS / DS ) + Max( MUC,MUC ) ) ) - ( Min( Max( ( DS / ( Min( ( CS - DS ) ,RRSe ) / ( MUR + RRSe ) ) ),MUR ) ,CS ) / DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6191656793160365}, {"determining": "( ( ( ( Min( PN ,DDR ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( PN / BR ) )", "choosing": "( ( MUR - CS ) * ( ( MUR * ( MLU * DS ) ) / MUC ) )", "obj1": 0.7813765182186235, "obj2": 0.08422832167528135}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.1862348178137652, "obj2": 0.6218681356460777}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe + MUM ) * ( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012954388251054412}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32388663967611336, "obj2": 0.52687273462569}, {"determining": "Min( ( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5578907728226034}, {"determining": "Min( Min( Min( ( BR - RRS ) ,( ARS - FirstVNF_CPU ) ) ,ACS ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( RRSe + MLU ) * ( Max( RCSe,CS ) / Max( MUC,RCSe ) ) ) * DS ) - DS ) + ( MUR - RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9271255060728745, "obj2": 0.0296103473881387}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),MUR ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5287662598274491}, {"determining": "( FirstVNF_Mem - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( ( DS - MUR ) + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6254289106457276}, {"determining": "Min( Max( ACS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM - MDR ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * ( MUM - RMSe ) ) - DS ) + ( MUC * MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.9271255060728745, "obj2": 0.0296103473881387}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) )", "obj1": 0.9574898785425101, "obj2": 0.017963233136687618}, {"determining": "( ( ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( MUM * MUR ) / ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) )", "obj1": 0.979757085020243, "obj2": 0.009012085520000794}, {"determining": "Min( ( ( PN * CRS ) / Max( ( FirstVNF_Mem_Server - ( ( ACS / MDR ) + FirstVNF_RAM ) ),FirstVNF_RAM_Server ) ) ,( PN - DDR ) )", "choosing": "( ( ( DS + DS ) * ( DS + ( RMSe + ( MUR + ( MUC - CS ) ) ) ) ) / Max( DS,MUR ) )", "obj1": 0.8765182186234818, "obj2": 0.05351761917817816}, {"determining": "Min( ( ( ( RRS / MDR ) / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( Const - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,Max( Max( ( ( MUM + MUC ) - ( ( ( ( MUM * DS ) * DS ) - RCSe ) / ( MUR + RMSe ) ) ),MLU ),MUM ) )", "obj1": 0.30364372469635625, "obj2": 0.5409838382923978}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7059344046263318}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.7327935222672065, "obj2": 0.10287481507474372}, {"determining": "( ( ( MRS / Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6284013689036358}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09116355840453494}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + ( ARS / ( FirstVNF_RAM - ACS ) ) ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( Max( Min( ( MUC / DS ) ,RMSe ),DS ) + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "( Max( ( Min( RRS ,BR ) - Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,MUC ) - Max( Min( ( RRSe * MUR ) ,( CS * MUM ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6888081827302159}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09116355840453494}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.742914979757085, "obj2": 0.09934403268022486}, {"determining": "Min( ( ( Min( DDR ,MDR ) - ( CRS / AMS ) ) + ( ( ( ( CRS / RRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) - RRS ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( MDR * ( FirstVNF_RAM - ARS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.16396761133603238, "obj2": 0.6345993445633282}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5519800196315171}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6437483572303415}, {"determining": "Min( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.6437246963562753, "obj2": 0.25177981629265084}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.043275594402261836}, {"determining": "Min( Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( DS - MUR ) ) ) / ( Min( ( RRSe + RRSe ) ,( ( ( MUM * MUR ) / ( DS - MUR ) ) - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02690150625593768}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.02790744695364964}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.0829452787698575}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - CS ) * ( MUC + RCSe ) )", "obj1": 0.2894736842105263, "obj2": 0.5506527355059789}, {"determining": "Max( Min( BR ,ARS ),Min( Min( ( FirstVNF_CPU_Server * BR ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0951417004048583, "obj2": 0.7045954213034179}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6906429531059697}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) - ( Min( CRS ,( DDR + ARS ) ) - MRS ) ) - ( ( BR - AMS ) - ( BR / MRS ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( MUM / ( RRSe + CS ) ) - RRSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25177981629265084}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5342082186978937}, {"determining": "( ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( BR / MRS ) / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) * ( ACS - ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( Min( ( ( ARS / ACS ) + CRS ) ,Max( PN,MDR ) ) + PN ) ) ) ) )", "choosing": "( ( ( Max( MUM,DS ) * ( CS + RCSe ) ) * MUR ) / ( RCSe / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}, {"determining": "( ( Const - ( Min( MDR ,DDR ) - ( RRS / AMS ) ) ) * ( PN - ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ) ) )", "choosing": "( Max( ( ( DS * ( ( MLU + RRSe ) * ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) - ( DS - MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6890478650896599}, {"determining": "( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.09919028340080972, "obj2": 0.6978306623599358}, {"determining": "Min( ( ( BR / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5419668477459155}, {"determining": "( ( ( ( Min( Const ,DDR ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( PN / BR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6426268118227539}, {"determining": "( ( ( ( MRS / FirstVNF_CPU_Server ) - Const ) - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) )", "choosing": "Min( Max( MUR,MUM ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.24634805968481052}, {"determining": "( Max( ( Min( RRS ,BR ) + Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) / ( DDR - RRS ) )", "choosing": "( Max( Max( Min( DS ,MUR ),MUR ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7040875068588128}, {"determining": "Max( ( Min( ( BR / FirstVNF_CPU ) ,( MRS / FirstVNF_RAM ) ) * ( DDR + PN ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - AMS ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) + ( MLU + MUR ) ) - ( Max( RCSe,MUC ) + Max( DS,Max( Max( Min( RCSe ,MUM ),Min( Min( MUR ,RRSe ) ,Max( RCSe,DS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5891823035608421}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.543354179424503}, {"determining": "Min( Min( PN ,( ARS - DDR ) ) ,( FirstVNF_RAM_Server - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( ( RRSe - MUC ),Min( MLU ,CS ) ) ) - Max( Max( RCSe,CS ),Max( RCSe,MUC ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe * CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5342082186978937}, {"determining": "Min( Min( ACS ,Min( BR ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( ( MUM * MUR ) / ( DS - MUR ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( BR * ( PN - BR ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.10931174089068826, "obj2": 0.6931914652608993}, {"determining": "( ( FirstVNF_Mem - ( PN - MRS ) ) * ( FirstVNF_Mem_Server - ( RRS - ACS ) ) )", "choosing": "( ( ( ( MLU + RRSe ) + ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) + ( MLU + Max( MUC,RCSe ) ) )", "obj1": 0.9878542510121457, "obj2": 0.00704511201462467}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6955676327267922}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - ( Min( FirstVNF_RAM_Server ,RRS ) * MDR ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6324261088620643}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( Max( ( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / MUR ) / Max( MUC,RCSe ) ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.10728744939271255, "obj2": 0.693987420906074}, {"determining": "Min( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - ( Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,CRS ) * Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) ) ,( DDR - PN ) )", "choosing": "( Max( MLU,( ( Min( MUR ,( ( ( DS / MUC ) / MUM ) / ( MLU + MUC ) ) ) + MLU ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.8846153846153846, "obj2": 0.04851958047373853}, {"determining": "Min( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( Min( ( RCSe - CS ) ,Max( RCSe,DS ) ) - CS ) ,RCSe )", "obj1": 0.8906882591093117, "obj2": 0.04629624467042714}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_Mem_Server ,Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( RMSe,MUR ),MUR ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.1003075724221926}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - Min( ( FirstVNF_RAM_Server / ARS ) ,DDR ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( Max( MUC,( MLU - ( ( ( DS / CS ) * RMSe ) - ( MUC + CS ) ) ) ) * ( Min( MUR ,MUR ) + DS ) ) ,Max( ( MLU - MUM ),( MUC + RMSe ) ) )", "obj1": 0.9615384615384616, "obj2": 0.016554336806013252}], "8": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - Min( AMS ,ARS ) ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) * ( ( MUR * ( MLU * DS ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - Min( AMS ,ARS ) ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( MRS / FirstVNF_RAM ) ,( ( Max( Const,MDR ) + ( MDR * FirstVNF_RAM ) ) + ARS ) ) * ( ( FirstVNF_RAM + ACS ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / Min( DS ,CS ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem_Server ) ) ) ,( ( DDR / Min( CRS ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe * CS ) ) * ( MUR - Min( Min( MLU ,( Min( ( RRSe / RRSe ) ,( CS * RMSe ) ) * MUM ) ) ,( ( Max( MUR,DS ) * MUR ) + RMSe ) ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.18582064217318403}, {"determining": "( ( FirstVNF_Mem_Server + BR ) * Min( ( Const - ( Const / FirstVNF_CPU_Server ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( Max( ( RCSe + Max( MUM,RCSe ) ),( Min( RMSe ,MUM ) - ( CS - MLU ) ) ) * ( MLU + CS ) ) + CS ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.22682793548072583}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.7267206477732794, "obj2": 0.11277752694150144}, {"determining": "( BR * ( PN - BR ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.13360323886639677, "obj2": 0.6777617768783373}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( BR / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - Max( ( DS / ( Min( ( CS - DS ) ,RRSe ) / ( MUR + RRSe ) ) ),MUR ) ) ,Max( RMSe,MUR ) )", "obj1": 0.38866396761133604, "obj2": 0.44580623067797204}, {"determining": "Min( ( ( Min( DDR ,MDR ) - ( CRS / AMS ) ) + ( ( AMS - RRS ) - Max( Max( AMS,FirstVNF_CPU_Server ),( MDR * ( FirstVNF_RAM - ARS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe - ( ( RRSe + RRSe ) * ( CS / Min( RCSe ,MUC ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.5921491217779132}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / RRS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + DS ) * ( DS + CS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.29795526262616284}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( CS * MUM ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) )", "obj1": 0.8582995951417004, "obj2": 0.06835986298722706}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) / Min( Min( AMS ,FirstVNF_CPU_Server ) ,( PN - ACS ) ) )", "choosing": "( ( MUM * MUR ) / ( Max( CS,( MUC * Max( RMSe,RCSe ) ) ) - MUR ) )", "obj1": 0.7267206477732794, "obj2": 0.11277752694150144}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( RMSe * ( DS - MUR ) ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Min( RMSe ,( RMSe * ( MLU + ( MUM + Max( RCSe,RMSe ) ) ) ) ) * ( CS + RCSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3889345274820762}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.4939166423677844}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.4676113360323887, "obj2": 0.35842065912324994}, {"determining": "Min( Max( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( MDR - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( PN + RRS ) - MRS ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( MLU - ( RRSe - CS ) ) ) / MUC ),( MUC + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.41353988824062565}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.5728744939271255, "obj2": 0.27068517720187396}, {"determining": "( ( PN / BR ) * ( PN / PN ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + ( MUC + RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,( DS - MUC ) ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6481285848610425}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( AMS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Min( ( ( MUC / MUM ) / ( RRSe / MUR ) ) ,RMSe ) ) )", "obj1": 0.3441295546558704, "obj2": 0.46441156404373335}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "Min( Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * ( CS * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.609093774828859}, {"determining": "( ( BR / MRS ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.32086206049483446}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,FirstVNF_CPU_Server ) ,( PN - Max( ( RRS + AMS ),AMS ) ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Max( RCSe,MLU ),MUR ) ,( RCSe - CS ) )", "obj1": 0.5607287449392713, "obj2": 0.2795386828849712}, {"determining": "( ( ( MRS / Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.291497975708502, "obj2": 0.5405348652171265}, {"determining": "( Min( ARS ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,( MUR + MUM ) ) ) ) / ( DS - MUR ) )", "obj1": 0.4190283400809717, "obj2": 0.4013768211369576}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( ( MRS - MDR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( MUM * ( DS + MUC ) ) ) / MUM ) * ( Max( ( RCSe * MUR ),MUC ) + ( Min( MUM ,Min( Min( ( RCSe + MUR ) ,RCSe ) ,RRSe ) ) / MLU ) ) ) / ( MUR - DS ) )", "obj1": 0.3785425101214575, "obj2": 0.454158861701145}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ),MUC ) ) - Max( Max( RCSe,MUC ),MUR ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5102363074699262}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6877041952408143}, {"determining": "( Min( ( ACS - Min( FirstVNF_CPU_Server ,MRS ) ) ,Min( Max( DDR,BR ) ,FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( RRS - FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem_Server ,( Max( AMS,PN ) - DDR ) ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUR * ( MLU + ( MUM + Max( RCSe,RMSe ) ) ) ) ) - CS ) ,( MLU / RCSe ) )", "obj1": 0.4331983805668016, "obj2": 0.3997845292638179}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( DDR - PN ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( CS + MLU ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.39007960368929245}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( MUM * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * DS ) - DS ) ) ) - CS ) ,Max( DS,MUR ) )", "obj1": 0.24898785425101214, "obj2": 0.5900372113976471}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS + DS ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3486140940902702}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.8724696356275303, "obj2": 0.056557700459413086}, {"determining": "Min( ( Max( ( Min( ( BR / FirstVNF_CPU ) ,( MRS / FirstVNF_RAM ) ) * ( DDR + PN ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - AMS ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( MUM * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * DS ) - DS ) ) ) - CS ) ,DS )", "obj1": 0.26720647773279355, "obj2": 0.5691767309666109}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( DS + DS ) * ( DS + ( RMSe + ( MUR + ( MUC - CS ) ) ) ) ) / Max( DS,MUR ) )", "obj1": 0.8279352226720648, "obj2": 0.07501291418751173}, {"determining": "Min( Max( Min( Min( AMS ,DDR ) ,( ( AMS - RRS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Min( ( BR * MDR ) ,ACS ) / DDR ) ) ) ,( ( Const / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( RRSe - MLU ) * ( RMSe - ( ( RRSe * MUM ) + MUR ) ) ) + MUM ) * CS ) ,( Min( ( RCSe - CS ) ,Min( MUR ,RCSe ) ) * ( ( ( RRSe * MUR ) + MUR ) / ( DS * MUM ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.32160129965325124}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3414236318435611}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS + DS ) ) )", "obj1": 0.47368421052631576, "obj2": 0.3497164816399292}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / ( MUM + RRSe ) ),Min( ( RCSe + MUM ) ,Min( ( MUM * DS ) ,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.3339046891896558}, {"determining": "Min( Max( ACS,MRS ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( MUM ,RCSe ),Min( ( MUM + MLU ) ,( RCSe - MUM ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RRSe - CS ) ) * ( ( DS + DS ) * Min( Max( RMSe,RRSe ) ,RRSe ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5241622826424538}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * DDR ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) ) )", "choosing": "( ( RMSe - ( Min( ( MUM * MLU ) ,CS ) / ( MUR - RRSe ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) - ( CS + RCSe ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07947863475514004}, {"determining": "Min( ( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( AMS * Const ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5591657544576252}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( PN / BR ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7023723066165879}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07894736842105263, "obj2": 0.7133307383447377}, {"determining": "( ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( BR / MRS ) / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) * ( ACS - ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( RRS + ( BR / RRS ) ),FirstVNF_CPU ) - ( Min( ( ( ARS / ACS ) + CRS ) ,Max( PN,MDR ) ) + PN ) ) ) ) )", "choosing": "( ( ( Max( MUM,DS ) * ( CS + RCSe ) ) * MUR ) / ( RCSe / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086065}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2872439875996633}, {"determining": "Min( Min( ACS ,( ARS * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( MLU + ( MLU - CS ) ) )", "obj1": 0.9089068825910931, "obj2": 0.03853692766191049}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) ) * Min( Max( ( ( CRS + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ),( FirstVNF_RAM_Server * ACS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,( RCSe + MUR ) ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - Min( MUR ,( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5, "obj2": 0.3376259079815998}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.40907876863002907}, {"determining": "Min( Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * ( CS * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.20040485829959515, "obj2": 0.6160546502849051}, {"determining": "( FirstVNF_Mem - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( ( DS - MUR ) + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6254289106457276}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.9190283400809717, "obj2": 0.03412736358125302}, {"determining": "Min( ( ( BR / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5342082186978937}, {"determining": "( ( DDR - MDR ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.2550607287449393, "obj2": 0.5789013843602462}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2872439875996633}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.1902834008097166, "obj2": 0.6191524178967299}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( ( AMS + DDR ),( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( ( Const / MDR ) ,CRS ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( Min( DS ,( RRSe / MLU ) ),( ( DS - MUR ) + MUR ) ),( Max( Max( RRSe,MUM ),RCSe ) + ( DS / DS ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( CS + ( ( RCSe / ( ( MUM * RRSe ) + MLU ) ) * MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.4550160291232168}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + ( ARS / ( FirstVNF_RAM - ACS ) ) ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( Max( Min( ( MUC / DS ) ,RMSe ),DS ) + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "Min( ( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5578907728226034}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.3522267206477733, "obj2": 0.45909620562934833}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10787619877499018}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - CS ) * ( MUC + RCSe ) )", "obj1": 0.2894736842105263, "obj2": 0.5506527355059789}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09116355840453494}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.1862348178137652, "obj2": 0.6218681356460777}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7059344046263318}, {"determining": "( ( ( ( ( PN + FirstVNF_CPU ) * ( ( ( Max( FirstVNF_Mem_Server,PN ) + FirstVNF_RAM ) + DDR ) / MRS ) ) - ( RRS + MDR ) ) - FirstVNF_Mem ) * ( ARS - BR ) )", "choosing": "( ( ( CS + Max( Max( Max( DS,MUR ),( CS + DS ) ),MUC ) ) + ( RMSe * CS ) ) / ( MUM * RMSe ) )", "obj1": 0.9817813765182186, "obj2": 0.006265046949569739}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( ( ( ( Min( PN ,DDR ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( PN / BR ) )", "choosing": "( ( MUR - CS ) * ( ( MUR * ( MLU * DS ) ) / MUC ) )", "obj1": 0.7813765182186235, "obj2": 0.08422832167528135}, {"determining": "Min( ( ( PN * CRS ) / Max( ( FirstVNF_Mem_Server - Max( ( FirstVNF_Mem_Server - ( ( ACS / MDR ) + FirstVNF_RAM ) ),FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) ,( PN - DDR ) )", "choosing": "( ( ( DS + DS ) * ( DS + ( RMSe + ( ( MUR + ( MUC - CS ) ) + ( MUC - CS ) ) ) ) ) / Max( DS,MUR ) )", "obj1": 0.9757085020242915, "obj2": 0.01038830960060825}, {"determining": "( Max( ( Min( ACS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / Min( Max( AMS,ARS ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( RRSe + ( ( ( RCSe - MUC ) * MUC ) - CS ) ) ,DS ) / RCSe )", "obj1": 0.8178137651821862, "obj2": 0.07783255818409908}, {"determining": "( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.09919028340080972, "obj2": 0.6978306623599358}, {"determining": "Min( FirstVNF_Mem_Server ,( PN - Max( FirstVNF_Mem,FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( ( ( ( ( Max( MLU,RCSe ) / ( MUC / RRSe ) ) * ( MLU + RRSe ) ) * Max( RRSe,RRSe ) ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,DS ) ) )", "obj1": 0.902834008097166, "obj2": 0.04176050441816119}, {"determining": "Min( Min( ACS ,Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( DDR,AMS ) )", "choosing": "Min( Min( ( Max( Min( Max( CS,MUM ) ,( ( ( MUM - DS ) * CS ) * ( MLU - MUM ) ) ),Max( ( Max( CS,RCSe ) / RCSe ),RMSe ) ) + MLU ) ,CS ) ,Max( RMSe,( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5774813414372323}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6955676327267922}, {"determining": "Max( ( Min( ( FirstVNF_RAM / MRS ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),( BR / MDR ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( RCSe ,MUM ),Min( ( MUM + MLU ) ,Max( RCSe,DS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5891823035608421}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09116355840453494}, {"determining": "( ( ( MRS / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( DS - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6284013689036358}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.02790744695364964}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe + MUM ) * ( ( RRSe + MLU ) - Min( ( MUC + Min( Max( RCSe,MUM ) ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014919166731427904}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6921256308772155}, {"determining": "Min( Min( PN ,( ARS - DDR ) ) ,( FirstVNF_RAM_Server - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( ( RRSe - MUC ),Min( MLU ,CS ) ) ) - Max( Max( RCSe,CS ),Max( RCSe,MUC ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe * CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5342082186978937}, {"determining": "( ( ( MRS / Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.1680161943319838, "obj2": 0.6319644716791232}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) )", "obj1": 0.9574898785425101, "obj2": 0.017963233136687618}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.5272380900629392}, {"determining": "Min( ( Min( ( MDR / Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,ACS ) ) ,( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Const ) * ( ( RRS * ( FirstVNF_CPU_Server + CRS ) ) - ACS ) ) - DDR ) )", "choosing": "Min( ( ( MUR - ( CS * ( ( MUR * ( ( MLU * MLU ) + ( MUM * MUC ) ) ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.2611336032388664, "obj2": 0.571323112384978}, {"determining": "( ( ( ( Min( Const ,DDR ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( PN / BR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.14777327935222673, "obj2": 0.6444494765665227}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - ( Const * PN ) ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe - MUM ) * ( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( ( MLU * RCSe ) * RMSe ) ) ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.012318561017993541}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09683717911693043}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) - CS ) ) * DS ) / RCSe )", "obj1": 0.7955465587044535, "obj2": 0.08179464802984587}, {"determining": "( ( ( ( Min( Const ,DDR ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( PN / BR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6426268118227539}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.3339046891896558}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( DS + DS ) * ( DS + ( RMSe + ( MUR + ( MUC - CS ) ) ) ) ) / Max( DS,MUR ) )", "obj1": 0.8279352226720648, "obj2": 0.07501291418751173}, {"determining": "Min( ( ( Min( DDR ,MDR ) - ( CRS / AMS ) ) + ( ( ( ( CRS / RRS ) / ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) - RRS ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( MDR * ( FirstVNF_RAM - ARS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.16396761133603238, "obj2": 0.6345993445633282}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( ( DS + DS ) * ( DS + CS ) ) / ( DS - MUR ) )", "obj1": 0.8765182186234818, "obj2": 0.05351761917817816}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.008375684444597319}, {"determining": "( Max( ( Min( RRS ,BR ) - Max( FirstVNF_Mem,CRS ) ),Min( Min( MDR ,PN ) ,RRS ) ) / ( Min( ARS ,ARS ) / ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN - MDR ) ) ) )", "choosing": "( Min( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) ,( Min( MUC ,RMSe ) * RRSe ) ) - Max( Min( ( DS * RCSe ) ,( CS * MUM ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09822469903602402}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.7591093117408907, "obj2": 0.09286608450506591}], "9": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( DDR / AMS ) ) / ( Min( MDR ,CRS ) - ( AMS - Min( ( FirstVNF_RAM * ( MRS - PN ) ) ,ARS ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe * MUR ) / ( ( RMSe * RMSe ) / MUM ) ) + MUR ) - RCSe ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - Min( AMS ,ARS ) ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) * ( ( MUR * ( MLU * DS ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( ( BR / ( ( DDR * FirstVNF_CPU ) * PN ) ) + FirstVNF_RAM_Server ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( ( RMSe * Max( RCSe,Max( ( Max( RMSe,MUR ) - ( MUR / ( DS * RRSe ) ) ),( MUC * RCSe ) ) ) ) * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) ) - Max( Max( RMSe,( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.6862348178137652, "obj2": 0.1670331438244235}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( ( Const / FirstVNF_CPU_Server ) - Const ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( PN ,CRS ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + ( MUC + RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.22024285179963196}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( MUM * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5806351440150919}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) / Min( Min( AMS ,FirstVNF_CPU_Server ) ,( PN - ACS ) ) )", "choosing": "( ( MUM * MUR ) / ( Max( CS,( MUC * Max( RMSe,RCSe ) ) ) - MUR ) )", "obj1": 0.7267206477732794, "obj2": 0.11277752694150144}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( RRSe + ( ( ( RCSe - MUC ) * MUC ) - CS ) ) ,DS ) / RCSe )", "obj1": 0.597165991902834, "obj2": 0.25487308782164436}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS * ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) ) - DS ) - Min( CS ,RMSe ) )", "obj1": 0.45546558704453444, "obj2": 0.3765454959009722}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( BR / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - Max( ( DS / ( Min( ( CS - DS ) ,RRSe ) / ( MUR + RRSe ) ) ),MUR ) ) ,Max( RMSe,MUR ) )", "obj1": 0.38866396761133604, "obj2": 0.44580623067797204}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.5728744939271255, "obj2": 0.27068517720187396}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RMSe - DS ) - DS ) ) ) ) + ( ( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * Max( RRSe,RCSe ) ) ) ) - CS ) ) * DS ) / RCSe )", "obj1": 0.8259109311740891, "obj2": 0.07338294795241901}, {"determining": "Min( Max( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( MDR - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( PN + RRS ) - MRS ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( MLU - ( RRSe - CS ) ) ) / MUC ),( MUC + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.41353988824062565}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.4676113360323887, "obj2": 0.35842065912324994}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / RRS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + DS ) * ( DS + CS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.29795526262616284}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Min( ( Const / FirstVNF_CPU_Server ) ,Const ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( Min( FirstVNF_Mem_Server ,AMS ) ,CRS ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RRSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( RMSe - ( ( Min( ( RCSe + CS ) ,( ( RCSe - ( MUR + CS ) ) - RMSe ) ) + MLU ) + MUC ) ) )", "obj1": 0.6214574898785425, "obj2": 0.22682793548072583}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.8502024291497976, "obj2": 0.055757650834230815}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.7267206477732794, "obj2": 0.11277752694150144}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.18582064217318403}, {"determining": "Min( Min( ( ( ( CRS / AMS ) - Min( MDR ,DDR ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( AMS - FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,AMS ) )", "choosing": "( ( Min( ( RRSe * Max( Min( MUM ,Min( RRSe ,MUR ) ),( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) ) ,( CS * ( MLU * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( ( Min( Max( ( ( RCSe + ( MUC + MUC ) ) / RCSe ),RMSe ) ,MUM ) * Max( Max( ( ( ( MUR + MUR ) / MLU ) * ( MUC - MLU ) ),DS ),MUR ) ) - MUR ) )", "obj1": 0.2125506072874494, "obj2": 0.6044909277484869}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( DDR - PN ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( CS + MLU ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.39007960368929245}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( ACS - FirstVNF_Mem ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( MUM * MUR ) )", "obj1": 0.6680161943319838, "obj2": 0.17788391866288095}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.34210526315789475, "obj2": 0.46555419760003064}, {"determining": "( ( DDR - MDR ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.2550607287449393, "obj2": 0.5789013843602462}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.33934969920848573}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.5546558704453441, "obj2": 0.27894603584933136}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem_Server ) ) ) ,( ( DDR / Min( CRS ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe * CS ) ) * ( MUR - Min( Min( MLU ,( Min( ( RRSe / RRSe ) ,( CS * RMSe ) ) * MUM ) ) ,( ( Max( MUR,DS ) * MUR ) + RMSe ) ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.18582064217318403}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( Max( MLU,RCSe ) / ( MUC / RRSe ) ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6778181512100118}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.4939166423677844}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ),MUC ) ) - Max( Max( RCSe,MUC ),MUR ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5102363074699262}, {"determining": "( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( PN - DDR ) ) )", "choosing": "( ( ( MLU + RRSe ) * Min( ( RMSe * MUM ) ,( MLU / MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.9190283400809717, "obj2": 0.032179465456150025}, {"determining": "( ( PN / BR ) * ( PN / PN ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + ( MUC + RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,( DS - MUC ) ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6481285848610425}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - CS ) * ( MUC + RCSe ) )", "obj1": 0.2894736842105263, "obj2": 0.5506527355059789}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07894736842105263, "obj2": 0.7133307383447377}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "( ( FirstVNF_Mem_Server + BR ) * Min( ( Const - ( Const / FirstVNF_CPU_Server ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( Max( ( RCSe + Max( MUM,RCSe ) ),( Min( RMSe ,MUM ) - ( CS - MLU ) ) ) * ( MLU + CS ) ) + CS ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.22682793548072583}, {"determining": "Min( ( MDR + Min( MRS ,FirstVNF_CPU_Server ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS - MLU ) )", "obj1": 0.1902834008097166, "obj2": 0.6146952817392981}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( Min( FirstVNF_Mem_Server ,( Max( AMS,PN ) / DDR ) ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,( RMSe * ( MLU + ( MUM + Max( RCSe,RMSe ) ) ) ) ) - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.4352226720647773, "obj2": 0.39598339716426945}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.52834008097166, "obj2": 0.3122489401991486}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * ( ( ARS + PN ) - FirstVNF_RAM ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( ( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - MUR ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) - CS ) ) * DS ) / RCSe )", "obj1": 0.8137651821862348, "obj2": 0.07541914013840743}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2887203496933229}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "Min( Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * ( CS * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.609093774828859}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( ( AMS + DDR ),( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( ( Const / MDR ) ,CRS ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( Min( DS ,( RRSe / MLU ) ),( ( DS - MUR ) + MUR ) ),( Max( Max( RRSe,MUM ),RCSe ) + ( DS / DS ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( CS + ( ( RCSe / ( ( MUM * RRSe ) + MLU ) ) * MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.4550160291232168}, {"determining": "Min( Min( ACS ,( ARS * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( MLU + ( MLU - CS ) ) )", "obj1": 0.9089068825910931, "obj2": 0.03853692766191049}, {"determining": "Min( ( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( AMS * Const ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5591657544576252}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * DDR ) ) ) ,( FirstVNF_CPU_Server * ACS ) ) ) )", "choosing": "( ( RMSe - ( Min( ( MUM * MLU ) ,CS ) / ( MUR - RRSe ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) - ( CS + RCSe ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07947863475514004}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6877041952408143}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / ( Min( ( ( DDR / MRS ) + FirstVNF_Mem ) ,( AMS / Min( FirstVNF_CPU ,MDR ) ) ) * FirstVNF_CPU_Server ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( MDR - PN ) ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) * ( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUR * Max( Max( DS,MLU ),MUC ) ) + MUM ) * ( Max( MLU,MUC ) + ( Min( MUM ,MLU ) / MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.3785425101214575, "obj2": 0.4491761030727973}, {"determining": "Min( ( ( ( CRS / AMS ) - Min( MDR ,Min( Max( FirstVNF_RAM_Server,( CRS - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( DDR - AMS ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( AMS - RRS ) - Min( BR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "( ( MLU / MUC ) - ( CS * ( MUC / MUR ) ) )", "obj1": 0.868421052631579, "obj2": 0.053786274369811884}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) ) * Min( Max( ( ( CRS + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ),( FirstVNF_RAM_Server * ACS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,( RCSe + MUR ) ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - Min( MUR ,( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5, "obj2": 0.3376259079815998}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( RMSe * ( DS - MUR ) ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Min( RMSe ,( RMSe * ( MLU + ( MUM + Max( RCSe,RMSe ) ) ) ) ) * ( CS + RCSe ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.08901593040395145}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10787619877499018}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3262365126750384}, {"determining": "( Min( ARS ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,( MUR + MUM ) ) ) ) / ( DS - MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.3991659767642509}, {"determining": "Min( ( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5578907728226034}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.4939166423677844}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.1194331983805668, "obj2": 0.6811286209896449}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( PN - DDR ) )", "choosing": "( Max( MLU,Max( ( MUC * Max( ( ( ( MLU - MUC ) / DS ) + MUC ),RCSe ) ),( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.902834008097166, "obj2": 0.041031254347655574}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / ( MUM + RRSe ) ),Min( ( RCSe + MUM ) ,Min( ( MUM * DS ) ,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.3339046891896558}, {"determining": "Min( ( Max( ( Min( ( BR / FirstVNF_CPU ) ,( MRS / FirstVNF_RAM ) ) * ( DDR + PN ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - AMS ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.533399352183431}, {"determining": "( ( ( MRS / Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.291497975708502, "obj2": 0.5405348652171265}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.8522267206477733, "obj2": 0.05503082160666887}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6279880257525995}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( ACS / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,CS ) )", "obj1": 0.5242914979757085, "obj2": 0.313298725678265}, {"determining": "Min( ( ( Min( MDR ,( Min( Min( CRS ,( RRS - FirstVNF_RAM ) ) ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( ( RRSe / MUC ),Min( ( MUM + MLU ) ,Max( RCSe,CS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.525329319967606}, {"determining": "Min( Max( Min( Min( AMS ,DDR ) ,( ( AMS - RRS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Max( AMS,PN ) / ( FirstVNF_Mem * ( FirstVNF_RAM / Const ) ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( Min( ( MUM + CS ) ,DS ) + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + Max( MUC,DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.41295546558704455, "obj2": 0.4034975786443393}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7059344046263318}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS + DS ) ) )", "obj1": 0.47368421052631576, "obj2": 0.3497164816399292}, {"determining": "Min( ( ( ( MDR / Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,ACS ) ) - ( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) )", "choosing": "Min( ( ( MUR - ( MUM * ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.14777327935222673, "obj2": 0.644262253893881}, {"determining": "( ( ( ( Min( PN ,DDR ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( PN / BR ) )", "choosing": "( ( MUR - CS ) * ( ( MUR * ( MLU * DS ) ) / MUC ) )", "obj1": 0.7813765182186235, "obj2": 0.08422832167528135}, {"determining": "Min( ( Max( ( Min( ( BR / FirstVNF_CPU ) ,( MRS / FirstVNF_RAM ) ) * ( DDR + PN ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - AMS ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( MUM * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * DS ) - DS ) ) ) - CS ) ,DS )", "obj1": 0.26720647773279355, "obj2": 0.5691767309666109}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10151508870101714}, {"determining": "Min( ( Min( ( MDR / Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,ACS ) ) ,( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Const ) * ( ( RRS * ( FirstVNF_CPU_Server + CRS ) ) - ACS ) ) - DDR ) )", "choosing": "Min( ( ( MUR - ( CS * ( ( MUR * ( ( MLU * MLU ) + ( MUM * MUC ) ) ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.2611336032388664, "obj2": 0.571323112384978}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.1862348178137652, "obj2": 0.6218681356460777}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.3441295546558704, "obj2": 0.46271687592854943}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.4068825910931174, "obj2": 0.4074012481691793}, {"determining": "Min( Max( ACS,MRS ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( MUM ,RCSe ),Min( ( MUM + MLU ) ,( RCSe - MUM ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RRSe - CS ) ) * ( ( DS + DS ) * Min( Max( RMSe,RRSe ) ,RRSe ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5241622826424538}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) + DS ) ) )", "obj1": 0.47368421052631576, "obj2": 0.3497164816399292}, {"determining": "Min( ( ( PN * CRS ) / Max( ( FirstVNF_Mem_Server - Max( ( FirstVNF_Mem_Server - ( ( ACS / MDR ) + FirstVNF_RAM ) ),FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) ) ,( PN - DDR ) )", "choosing": "( ( ( DS + DS ) * ( DS + ( RMSe + ( ( MUR + ( MUC - CS ) ) + ( MUC - CS ) ) ) ) ) / Max( DS,MUR ) )", "obj1": 0.9757085020242915, "obj2": 0.01038830960060825}, {"determining": "( BR * ( PN - BR ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7046344170517652}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - ( Const * FirstVNF_CPU_Server ) ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe - MUM ) * ( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,( MUM * MUR ) ) ) ,( MUC / ( ( MLU * RCSe ) * RMSe ) ) ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.02978882072048604}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( MUM + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.8947368421052632, "obj2": 0.04512577512556235}, {"determining": "Min( ( DDR + Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( RCSe - ( ( DS / ( Min( ( CS - DS ) ,RRSe ) / Max( DS,( Max( RCSe,RMSe ) - Max( DS,MUR ) ) ) ) ) - MUR ) ) ,Max( RMSe,MUR ) )", "obj1": 0.21052631578947367, "obj2": 0.60847991523214}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + ( ARS / ( FirstVNF_RAM - ACS ) ) ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( Max( Min( ( MUC / DS ) ,RMSe ),DS ) + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( ( DS + DS ) * ( DS + CS ) ) / ( DS - MUR ) )", "obj1": 0.8765182186234818, "obj2": 0.05351761917817816}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ( DDR - PN ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( RMSe * CS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.45516760276684576}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "Min( Max( Min( Min( AMS ,DDR ) ,( ( AMS - RRS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Min( ( BR * MDR ) ,ACS ) / DDR ) ) ) ,( ( Const / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( RRSe - MLU ) * ( RMSe - ( ( RRSe * MUM ) + MUR ) ) ) + MUM ) * CS ) ,( Min( ( RCSe - CS ) ,Min( MUR ,RCSe ) ) * ( ( ( RRSe * MUR ) + MUR ) / ( DS * MUM ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.32160129965325124}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( DDR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( MUR / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.5388058939271069}, {"determining": "Min( Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.023000548392819155}, {"determining": "( ( ( MRS / Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.1680161943319838, "obj2": 0.6319644716791232}, {"determining": "Min( Min( ( CRS / AMS ) ,Min( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe + MUM ) * ( ( ( MUR * ( MLU * DS ) ) + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.052589920239823014}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Min( MDR ,CRS ) / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MUR ) / ( DS - MUR ) ) / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) / MUM ) * ( Max( ( RCSe * MUR ),MUC ) + ( Min( MUM ,MLU ) / MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.3805668016194332, "obj2": 0.4487709910113547}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) ) * Min( Max( ( ( CRS + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ),( FirstVNF_RAM_Server * ACS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,( RCSe + MUR ) ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - Min( MUR ,( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5, "obj2": 0.3376259079815998}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - ( Const * PN ) ) + ( CRS + CRS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( MLU + DS ) / ( ( RRSe - MUM ) * ( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( MUC / ( ( MLU * RCSe ) * RMSe ) ) ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.012318561017993541}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5369767813934656}], "10": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( Const - MDR ) ) - Min( Const ,ARS ) ) )", "choosing": "( Max( ( ( DS / DS ) / Max( MUC,RCSe ) ),Max( ( Min( MUC ,CS ) - RRSe ),Max( MUR,MUM ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( DDR / AMS ) ) / ( Min( MDR ,CRS ) - ( AMS - Min( ( FirstVNF_RAM * ( MRS - PN ) ) ,ARS ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe * MUR ) / ( ( RMSe * RMSe ) / MUM ) ) + MUR ) - RCSe ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( BR ,ARS ),Min( Min( ( FirstVNF_CPU_Server * BR ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( MUC + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.4149797570850202, "obj2": 0.3508406163460725}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) ) - Max( Max( RMSe,( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.6862348178137652, "obj2": 0.1670331438244235}, {"determining": "Min( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,( ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.7246963562753036, "obj2": 0.11376252353931568}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / RRSe ),( MUC + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.4270927747163614}, {"determining": "( ( ( Max( Const,FirstVNF_RAM_Server ) + ( FirstVNF_RAM / ( MRS + FirstVNF_RAM_Server ) ) ) + PN ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.21733564448041767}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.33805668016194335, "obj2": 0.46692611078104335}, {"determining": "Min( Max( Min( Min( AMS ,DDR ) ,( ( AMS - RRS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Max( AMS,PN ) / ( FirstVNF_Mem * ( FirstVNF_RAM / Const ) ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( Min( ( MUM + CS ) ,DS ) + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + Max( MUC,DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.41295546558704455, "obj2": 0.4034975786443393}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS + DS ) ) )", "obj1": 0.47368421052631576, "obj2": 0.3497164816399292}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.25236150307628047}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( PN / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "Min( Max( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( MDR - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( PN + RRS ) - MRS ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( MLU - ( RRSe - CS ) ) ) / MUC ),( MUC + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.41353988824062565}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.5728744939271255, "obj2": 0.27068517720187396}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( MUM * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5806351440150919}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( ( AMS + DDR ),( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( ( Const / MDR ) ,CRS ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( Min( DS ,( RRSe / MLU ) ),( ( DS - MUR ) + MUR ) ),( Max( Max( RRSe,MUM ),RCSe ) + ( DS / DS ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( CS + ( ( RCSe / ( ( MUM * RRSe ) + MLU ) ) * MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.4550160291232168}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / RRS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + DS ) * ( DS + CS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.29795526262616284}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM * ( Min( AMS ,CRS ) / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - Max( RMSe,CS ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( MUR - CS ) ) * ( ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.7975708502024291, "obj2": 0.07830400430106471}, {"determining": "Max( ( ( ( MRS - AMS ) / Min( CRS ,MRS ) ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( MUR + MUM ) ),( Max( MLU,RCSe ) / ( MUC / RRSe ) ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6778181512100118}, {"determining": "( ( DDR - MDR ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.2550607287449393, "obj2": 0.5789013843602462}, {"determining": "( ( PN / BR ) * ( PN / PN ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + ( MUC + RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,( DS - MUC ) ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6481285848610425}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,AMS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( ( Max( ( CS * RCSe ),RMSe ) * Max( Max( DS,MLU ),MUC ) ) * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5880034534174079}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * ( ( ARS + PN ) - FirstVNF_RAM ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( ( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - MUR ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) - CS ) ) * DS ) / RCSe )", "obj1": 0.8137651821862348, "obj2": 0.07541914013840743}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,BR ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( RCSe,CS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.21546550144016277}, {"determining": "Min( Min( ACS ,Min( ( Min( Min( ( DDR * ( DDR / RRS ) ) ,( FirstVNF_Mem_Server / ACS ) ) ,( BR / FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( Max( ( ( ( ( ( MUC / MLU ) * CS ) * ( CS + RRSe ) ) - ( DS * RMSe ) ) / MUC ),( MUC + CS ) ) * ( DS + CS ) ) / ( DS - MUR ) )", "obj1": 0.979757085020243, "obj2": 0.010085698997752857}, {"determining": "Min( Min( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ARS * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( MLU + ( MLU - Max( Max( Min( DS ,MUM ),( ( DS - MUR ) + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / ( Min( MDR ,DDR ) - ( CRS / AMS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( CS,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.2958271442631752}, {"determining": "Min( ( MDR + Min( MRS ,FirstVNF_CPU_Server ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS - MLU ) )", "obj1": 0.1902834008097166, "obj2": 0.6146952817392981}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) ) - Max( Max( RMSe,( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.17429845249276849}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - AMS ) * ( PN - BR ) ) ),Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) / ( ( AMS / RRS ) - Min( Max( FirstVNF_RAM,MRS ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( Min( DS ,MUC ) - DS ) ,DS )", "obj1": 0.26720647773279355, "obj2": 0.5665775468825106}, {"determining": "Min( FirstVNF_RAM_Server ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,DS )", "obj1": 0.5080971659919028, "obj2": 0.33435638028034326}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.33653364362724114}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( MDR - PN ) ) - Min( ( ARS - ( FirstVNF_Mem_Server * DDR ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( ( Min( ( MUC * Max( MLU,RRSe ) ) ,( RCSe + Max( MUR,MUR ) ) ) / RRSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + CS ) * ( DS + DS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "( ( FirstVNF_Mem_Server + BR ) * Min( ( Const - ( Const / FirstVNF_CPU_Server ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( Max( ( RCSe + Max( MUM,RCSe ) ),( Min( RMSe ,MUM ) - ( CS - MLU ) ) ) * ( MLU + CS ) ) + CS ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.06846521727093785}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.8421052631578947, "obj2": 0.06409480057476462}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,( MLU + ( MLU - CS ) ) )", "obj1": 0.5668016194331984, "obj2": 0.2740897271524973}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.017018898875582195}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,MUR )", "obj1": 0.5506072874493927, "obj2": 0.2833506526728}, {"determining": "Min( ( ( ( CRS / AMS ) - Min( MDR ,Min( Max( FirstVNF_RAM_Server,( CRS - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( DDR - AMS ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( AMS - RRS ) - Min( BR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "( ( MLU / MUC ) - ( CS * ( MUC / MUR ) ) )", "obj1": 0.868421052631579, "obj2": 0.053786274369811884}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) / MUM ) * ( Max( ( RCSe * MUR ),MUC ) + ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.9331983805668016, "obj2": 0.028746188952558684}, {"determining": "( ( ( MRS / Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.1680161943319838, "obj2": 0.6319644716791232}, {"determining": "( Min( Const ,Max( Max( PN,( FirstVNF_CPU_Server + ( DDR + MDR ) ) ),( PN + PN ) ) ) - Min( RRS ,MDR ) )", "choosing": "( ( RRSe * ( MUM - MUR ) ) - ( ( ( RRSe + DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.640739505015927}, {"determining": "( Min( ARS ,ARS ) / ( Min( MDR ,Max( ARS,MDR ) ) / ( PN - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS / ( ( ( CS / RRSe ) * Min( ( MUR * RCSe ) ,DS ) ) * CS ) ) + Max( MLU,MUM ) ) ) )", "obj1": 0.7550607287449392, "obj2": 0.09461456455598515}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6279880257525995}, {"determining": "Min( Max( ACS,MRS ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( MUM ,RCSe ),Min( ( MUM + MLU ) ,( RCSe - MUM ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RRSe - CS ) ) * ( ( DS + DS ) * Min( Max( RMSe,RRSe ) ,RRSe ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5241622826424538}, {"determining": "( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10787619877499018}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) / Min( MDR ,CRS ) ) ) ,( ACS - Max( AMS,( FirstVNF_CPU / Const ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) / ( Max( RCSe,CS ) / ( MUC + RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.18218623481781376, "obj2": 0.622814322497052}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.10121457489878542, "obj2": 0.6974236695065273}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.7834008097165992, "obj2": 0.08339748102040585}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5136337851297018}, {"determining": "Min( ( Min( ACS ,( ARS - ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( AMS * Const ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5591657544576252}, {"determining": "Min( Min( ( ( ( CRS / AMS ) - Min( MDR ,DDR ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( AMS - FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,AMS ) )", "choosing": "( ( Min( ( RRSe * Max( Min( MUM ,Min( RRSe ,MUR ) ),( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) ) ,( CS * ( MLU * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( ( Min( Max( ( ( RCSe + ( MUC + MUC ) ) / RCSe ),RMSe ) ,MUM ) * Max( Max( ( ( ( MUR + MUR ) / MLU ) * ( MUC - MLU ) ),DS ),MUR ) ) - MUR ) )", "obj1": 0.2125506072874494, "obj2": 0.6044909277484869}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.1194331983805668, "obj2": 0.6811286209896449}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7059344046263318}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.52834008097166, "obj2": 0.3122489401991486}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.3441295546558704, "obj2": 0.46271687592854943}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5369767813934656}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ) ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( MUM * MUR ) / ( DS - MUR ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.8522267206477733, "obj2": 0.05502571159009393}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.21546550144016277}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.4580455008490735}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( ACS / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RCSe,CS ) )", "obj1": 0.5242914979757085, "obj2": 0.313298725678265}, {"determining": "( ( DDR - AMS ) - ( ( ( AMS - Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,ARS ) ) - BR ) + ( PN - DDR ) ) )", "choosing": "( ( ( MLU + RRSe ) * Min( ( RMSe * ( CS * Min( RRSe ,( ( CS / MUR ) - DS ) ) ) ) ,( MLU / MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.9190283400809717, "obj2": 0.032179465456150025}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( RMSe * ( DS - MUR ) ) - CS ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Min( RMSe ,( RMSe * ( MLU + ( MUM + Max( RCSe,RMSe ) ) ) ) ) * ( CS + RCSe ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.08901593040395145}, {"determining": "( ( ( BR + FirstVNF_RAM ) * CRS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( MLU + RRSe ) * DS ) - ( Min( ( RRSe * Min( MUM ,( RMSe - RRSe ) ) ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ),MLU ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10126845452771126}, {"determining": "Min( ( Const * FirstVNF_Mem_Server ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / ( MUM + RRSe ) ),Min( ( RCSe + MUM ) ,Min( ( MUM * DS ) ,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.3339046891896558}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( ( Const + FirstVNF_CPU ) ,( DDR * FirstVNF_RAM ) ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),Max( Min( MUC ,Max( ( MUM - MUC ),MUM ) ),Max( MUC,RCSe ) ) ) - ( MUR * MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.17788391866288095}, {"determining": "Min( FirstVNF_Mem_Server ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03678953596501538}, {"determining": "Min( ( ( Min( MDR ,( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * CRS ) ) - ( CRS / AMS ) ) / Min( ( AMS - RRS ) ,Min( MDR ,CRS ) ) ) ,AMS )", "choosing": "( Max( MLU,( ( ( MUR * ( Max( MUC,DS ) + MLU ) ) - DS ) + ( RCSe * DS ) ) ) - ( MLU + CS ) )", "obj1": 0.10526315789473684, "obj2": 0.6906813602291834}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.5546558704453441, "obj2": 0.27894603584933136}, {"determining": "Max( ( Max( FirstVNF_Mem,AMS ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( ACS / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) ) ),Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ),( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * ( RCSe - CS ) ) ) * Min( ( CS + MLU ) ,Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.0951417004048583, "obj2": 0.7015161335358406}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7201205073567988}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6877041952408143}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.8502024291497976, "obj2": 0.05575765083423081}, {"determining": "( Max( CRS,( FirstVNF_Mem * AMS ) ) - ( RRS + MRS ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,( RCSe + MUR ) ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - Min( MUR ,( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,CS ) ,( RCSe - CS ) ) * ( MUM - RRSe ) ) )", "obj1": 0.2813765182186235, "obj2": 0.5517453041216904}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( MUR,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS - MLU ) )", "obj1": 0.7732793522267206, "obj2": 0.08688015359841528}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + ( ARS / ( FirstVNF_RAM - ACS ) ) ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( Max( Min( ( MUC / DS ) ,RMSe ),DS ) + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "Min( ( DDR + Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( RCSe - ( ( DS / ( Min( ( CS - DS ) ,RRSe ) / Max( DS,( Max( RCSe,RMSe ) - Max( DS,MUR ) ) ) ) ) - MUR ) ) ,Max( RMSe,MUR ) )", "obj1": 0.21052631578947367, "obj2": 0.60847991523214}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( MUC + MUC ) - Min( Max( RRSe,( MUM + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.8947368421052632, "obj2": 0.04512577512556235}, {"determining": "( ARS * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( RCSe + Max( MUM,MLU ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09664529350752667}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( CS * ( ( MUR * ( ( MLU * MLU ) + ( MUM * MUC ) ) ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5775599939082818}, {"determining": "Min( ( ( Min( MDR ,( Min( Min( CRS ,( RRS - FirstVNF_RAM ) ) ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( ( RRSe / MUC ),Min( ( MUM + MLU ) ,Max( RCSe,CS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.525329319967606}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06309680534222172}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.33934969920848573}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "Min( Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( Min( ( RRSe * MUR ) ,( CS * ( CS * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( DS - MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.609093774828859}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.09956660207103286}, {"determining": "Min( Max( Min( Min( AMS ,DDR ) ,( ( AMS - RRS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Min( ( BR * MDR ) ,ACS ) / DDR ) ) ) ,( ( Const / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( RRSe - MLU ) * ( RMSe - ( ( RRSe * MUM ) + MUR ) ) ) + MUM ) * CS ) ,( Min( ( RCSe - CS ) ,Min( MUR ,RCSe ) ) * ( ( ( RRSe * MUR ) + MUR ) / ( DS * MUM ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.32160129965325124}, {"determining": "Min( ( Max( ( Min( ( BR / FirstVNF_CPU ) ,( MRS / FirstVNF_RAM ) ) * ( DDR + PN ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - AMS ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.533399352183431}, {"determining": "Min( ( ( ( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * RCSe ) )", "obj1": 0.3157894736842105, "obj2": 0.5315960762655642}, {"determining": "Min( Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.023000548392819155}, {"determining": "Min( FirstVNF_RAM_Server ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( ( DS * RRSe ) + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.8846153846153846, "obj2": 0.048360960361149126}, {"determining": "Min( ( Max( ( Min( ( BR / FirstVNF_CPU ) ,( MRS / ( FirstVNF_Mem * MRS ) ) ) * ( DDR + PN ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( ( Const - AMS ) * ( PN - BR ) ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) / ( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( MUM * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * DS ) - DS ) ) ) - CS ) ,( MUR * ( ( MLU * MLU ) + ( MUM * MUC ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.571323112384978}], "11": [{"determining": "Max( Max( Const,Min( Min( FirstVNF_RAM ,( ARS + ( FirstVNF_CPU + ( MRS / FirstVNF_CPU_Server ) ) ) ) ,CRS ) ),Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( DS + MUC ) * CS ) ) / MUM ) * ( Min( MUC ,RRSe ) * ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( Min( ( ( ( CRS / AMS ) - Min( MDR ,DDR ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( AMS - FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,AMS ) )", "choosing": "( ( Min( ( RRSe * Max( Min( MUM ,Min( RRSe ,MUR ) ),( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) ) ,( CS * ( MLU * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( ( Min( Max( ( ( RCSe + ( MUC + MUC ) ) / RCSe ),RMSe ) ,MUM ) * Max( Max( ( ( ( MUR + MUR ) / MLU ) * ( MUC - MLU ) ),DS ),MUR ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( Const - MDR ) ) - Min( Const ,ARS ) ) )", "choosing": "( Max( ( ( DS / DS ) / Max( MUC,RCSe ) ),Max( ( Min( MUC ,CS ) - RRSe ),Max( MUR,MUM ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( BR ,ARS ),Min( Min( ( FirstVNF_CPU_Server * BR ) ,( AMS * Const ) ) ,Max( ( RRS / MDR ),( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( ( RCSe - DS ) + RMSe ) / ( MUR - DS ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( MUC + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.4149797570850202, "obj2": 0.3508406163460725}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( RRSe + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.1469220485675637}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - ( DDR + DDR ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5124631699766173}, {"determining": "( ( ( Max( Const,FirstVNF_RAM_Server ) + ( FirstVNF_RAM / ( MRS + FirstVNF_RAM_Server ) ) ) + PN ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.21733564448041767}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) ) - Max( Max( RMSe,( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.6862348178137652, "obj2": 0.1670331438244235}, {"determining": "Min( Max( Min( Min( AMS ,DDR ) ,( ( AMS - RRS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Max( AMS,PN ) / ( FirstVNF_Mem * ( FirstVNF_RAM / Const ) ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( Min( ( MUM + CS ) ,DS ) + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + Max( MUC,DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.41295546558704455, "obj2": 0.4034975786443393}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),RRS ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,( MUM + RCSe ) ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.251931286715295}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - MDR ) - Min( MDR ,CRS ) ) - Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) ) ,( Min( Const ,Max( ( ARS / FirstVNF_RAM ),( PN * PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( MLU - ( ( ( RMSe * ( MUM + RMSe ) ) * ( RMSe + Max( RCSe,( ( DS * RRSe ) / ( CS / MLU ) ) ) ) ) + ( MLU - ( ( ( RRSe + Min( MUM ,DS ) ) * DS ) - Min( RMSe ,( RRSe / RRSe ) ) ) ) ) ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5994994214346172}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + ( Max( ( RCSe + Max( MUM,RCSe ) ),( Min( RMSe ,MUM ) - ( CS - MLU ) ) ) * ( MLU + CS ) ) ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.34372389543552306}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.33805668016194335, "obj2": 0.46692611078104335}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( ( MUR * Max( Max( DS,MLU ),MUC ) ) * ( ( ( Min( RCSe ,MUR ) + ( RRSe * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5806154969616873}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( Min( MDR ,( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) / AMS ) ) / ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( CS * ( ( MUR * ( ( MLU * MLU ) + ( MUM * MUC ) ) ) - DS ) ) ) - CS ) ,Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5680361407238796}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "Min( Max( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( MDR - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( PN + RRS ) - MRS ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( MLU - ( RRSe - CS ) ) ) / MUC ),( MUC + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.41353988824062565}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / RRSe ),( MUC + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.4270927747163614}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / RRS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + DS ) * ( DS + CS ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.29795526262616284}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.4576182950474003}, {"determining": "( ( PN - MRS ) - Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / Const ) + AMS ) ) ) ),FirstVNF_Mem ) )", "choosing": "( Max( MLU,DS ) - ( ( CS * Max( ( ( RCSe - MUR ) / DS ),MUC ) ) + Max( ( RCSe / RRSe ),( MUC + CS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4286763668878491}, {"determining": "Min( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,( ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.7246963562753036, "obj2": 0.11376252353931568}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) / Min( MDR ,CRS ) ) ) ,( ACS - Max( AMS,( FirstVNF_CPU / Const ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) / ( Max( RCSe,CS ) / ( MUC + RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.18218623481781376, "obj2": 0.622814322497052}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5650514442385156}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,AMS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( ( Max( ( CS * RCSe ),RMSe ) * Max( Max( DS,MLU ),MUC ) ) * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5880034534174079}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - AMS ) * FirstVNF_CPU ) - Min( Min( Max( AMS,( FirstVNF_Mem_Server + ( RRS * FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ,DDR ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( CS + ( RCSe - Max( ( MUC + ( RMSe * CS ) ),( ( DS / DS ) + ( Max( MLU,RCSe ) - MUM ) ) ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.0415751955419418}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.1194331983805668, "obj2": 0.6811286209896449}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,BR ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( RCSe,CS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.21546550144016277}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( CS,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5567611193257302}, {"determining": "Min( Max( Min( Min( AMS ,DDR ) ,( ( AMS - RRS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Min( ( BR * MDR ) ,ACS ) / DDR ) ) ) ,( ( Const / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( RRSe - MLU ) * ( RMSe - ( ( RRSe * MUM ) + MUR ) ) ) + MUM ) * CS ) ,( Min( ( RCSe - CS ) ,Min( MUR ,RCSe ) ) * ( ( ( RRSe * MUR ) + MUR ) / ( DS * MUM ) ) ) )", "obj1": 0.520242914979757, "obj2": 0.32160129965325124}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( ( Const + FirstVNF_CPU ) ,( DDR * FirstVNF_RAM ) ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),Max( Min( MUC ,Max( ( MUM - MUC ),MUM ) ),Max( MUC,RCSe ) ) ) - ( MUR * MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.17788391866288095}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( PN / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7201205073567988}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - DDR ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.26437722178382683}, {"determining": "( Max( CRS,( FirstVNF_Mem * AMS ) ) - ( RRS + MRS ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,( RCSe + MUR ) ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - Min( MUR ,( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,CS ) ,( RCSe - CS ) ) * ( MUM - RRSe ) ) )", "obj1": 0.2813765182186235, "obj2": 0.5517453041216904}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( Min( ( Min( MUC ,RMSe ) * RRSe ) ,Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) ) - Max( Max( RMSe,( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ),( Max( MUM,MLU ) + ( CS + MLU ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.17429845249276849}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3412311413764802}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.3105714726944104}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( RCSe - CS ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.8137651821862348, "obj2": 0.07236634932370795}, {"determining": "Min( Min( ACS ,Min( ( Min( Min( ( DDR * ( DDR / RRS ) ) ,( FirstVNF_Mem_Server / ACS ) ) ,( BR / FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( Max( ( ( ( ( ( MUC / MLU ) * CS ) * ( CS + RRSe ) ) - ( DS * RMSe ) ) / MUC ),( MUC + CS ) ) * ( DS + CS ) ) / ( DS - MUR ) )", "obj1": 0.979757085020243, "obj2": 0.010085698997752857}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7059344046263318}, {"determining": "Min( FirstVNF_Mem_Server ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03678953596501538}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5401106692080212}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ) ) - ( BR / ( Min( Const ,DDR ) - ( RRS + MDR ) ) ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( MUM * MUR ) / ( DS - MUR ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + Min( RCSe ,MUR ) ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.007253158803505162}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.8421052631578947, "obj2": 0.06409480057476462}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,( ( AMS / RRS ) - Min( ( BR / PN ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( CS + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.53336579282456}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6302957297739374}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.017018898875582195}, {"determining": "Min( ( ( Min( MDR ,( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * CRS ) ) - ( CRS / AMS ) ) / Min( ( AMS - RRS ) ,Min( MDR ,CRS ) ) ) ,AMS )", "choosing": "( Max( MLU,( ( ( MUR * ( Max( MUC,DS ) + MLU ) ) - DS ) + ( RCSe * DS ) ) ) - ( MLU + CS ) )", "obj1": 0.10526315789473684, "obj2": 0.6906813602291834}, {"determining": "Min( Max( ACS,MRS ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( MUM ,RCSe ),Min( ( MUM + MLU ) ,( RCSe - MUM ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RRSe - CS ) ) * ( ( DS + DS ) * Min( Max( RMSe,RRSe ) ,RRSe ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5241622826424538}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.5299334771659083}, {"determining": "Min( ( Min( ACS ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) / ( ( AMS - RRS ) - Min( FirstVNF_CPU_Server ,AMS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( ( MUR * Max( Max( DS,MLU ),MUC ) ) * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,MUC )", "obj1": 0.5020242914979757, "obj2": 0.32917885701997834}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "( ( ( ARS * ARS ) - BR ) * ( ARS + ( ( ( AMS * ( BR / ARS ) ) - FirstVNF_CPU ) + ( Max( CRS,Min( DDR ,ACS ) ) + AMS ) ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06772410533650071}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6485711697868386}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( ( DDR / ARS ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( MLU - MUR ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + CS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.10121457489878542, "obj2": 0.6974236695065273}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07687102546007503}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6279880257525995}, {"determining": "Min( Max( ( Min( AMS ,DDR ) / ( ( FirstVNF_Mem_Server - PN ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( DDR - PN ) )", "choosing": "( MUR - ( ( Min( MLU ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( CS / MUC ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04875192216306327}, {"determining": "( Min( Const ,Max( Max( PN,( FirstVNF_CPU_Server + ( DDR + MDR ) ) ),( PN + PN ) ) ) - Min( RRS ,MDR ) )", "choosing": "( ( RRSe * ( MUM - MUR ) ) - ( ( ( RRSe + DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.640739505015927}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( FirstVNF_CPU + Min( FirstVNF_CPU ,Max( Max( MRS,FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( ( Min( RCSe ,MLU ) / Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,CS ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.3327002571662287}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "( ( DDR - AMS ) - ( ( ( AMS - Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,ARS ) ) - BR ) + ( PN - DDR ) ) )", "choosing": "( ( ( MLU + RRSe ) * Min( ( RMSe * ( CS * Min( RRSe ,( ( CS / MUR ) - DS ) ) ) ) ,( MLU / MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.9190283400809717, "obj2": 0.032179465456150025}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( FirstVNF_CPU_Server ,AMS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( ( MUR * Max( Max( DS,MLU ),MUC ) ) * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5880034534174079}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.5376359124030256}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( Max( AMS,BR ) - ( BR / FirstVNF_RAM ) ) ) ,Min( Min( BR ,AMS ) ,( MDR - PN ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - ( FirstVNF_CPU_Server * BR ) ) )", "choosing": "( ( CS * ( MUR + ( MUR - Min( MLU ,DS ) ) ) ) - ( Max( Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( MUR ,Max( RRSe,( CS + CS ) ) ) ),Max( ( RCSe - RCSe ),CS ) ),DS ) + MLU ) )", "obj1": 0.8724696356275303, "obj2": 0.05264587520739289}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.21546550144016277}, {"determining": "Min( ( ( ( CRS / AMS ) - Min( MDR ,Min( Max( FirstVNF_RAM_Server,( CRS - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( DDR - AMS ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( AMS - RRS ) - Min( BR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "( ( MLU / MUC ) - ( CS * ( MUC / MUR ) ) )", "obj1": 0.868421052631579, "obj2": 0.053786274369811884}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "( ( ( BR + FirstVNF_RAM ) * CRS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( MLU + RRSe ) * DS ) - ( Min( ( RRSe * Min( MUM ,( RMSe - RRSe ) ) ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ),MLU ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10126845452771126}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2713833392929954}, {"determining": "Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) / MUM ) * ( Max( ( RCSe * MUR ),MUC ) + ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.9271255060728745, "obj2": 0.03125921165811853}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6877041952408143}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + ( ARS / ( FirstVNF_RAM - ACS ) ) ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( Max( Min( ( MUC / DS ) ,RMSe ),DS ) + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2713833392929954}, {"determining": "Min( ( ( Min( MDR ,( Min( Min( CRS ,( RRS - FirstVNF_RAM ) ) ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( ( RRSe / MUC ),Min( ( MUM + MLU ) ,Max( RCSe,CS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.525329319967606}, {"determining": "Max( ( Max( FirstVNF_Mem,AMS ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( ACS / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) ) ),Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ),( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * ( RCSe - CS ) ) ) * Min( ( CS + MLU ) ,Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.0951417004048583, "obj2": 0.7015161335358406}, {"determining": "Min( ( ( ACS - MRS ) + FirstVNF_RAM ) ,Min( Min( AMS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "Min( ( RMSe - ( ( RMSe - ( MUM / MUM ) ) + ( MLU / ( ( ( RCSe - MUM ) / MLU ) + ( MUC + RRSe ) ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.854251012145749, "obj2": 0.05433466069750226}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( MDR - PN ) ) - Min( ( ARS - ( FirstVNF_Mem_Server * DDR ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( ( Min( ( MUC * Max( MLU,RRSe ) ) ,( RCSe + Max( MUR,MUR ) ) ) / RRSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + CS ) * ( DS + DS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( MLU + ( MLU * MLU ) ) * RCSe ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.017018898875582195}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,MUR ) )", "obj1": 0.5728744939271255, "obj2": 0.27068517720187396}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "Min( Min( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ARS * Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( MLU + ( MLU - Max( Max( Min( DS ,MUM ),( ( DS - MUR ) + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( DDR / AMS ) )", "choosing": "Min( ( ( MUR - ( MUM * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,( Max( RMSe,( DS + DS ) ) + ( MUM + RCSe ) ) )", "obj1": 0.1437246963562753, "obj2": 0.6466908143301567}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM * ( Min( AMS ,CRS ) / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - Max( RMSe,CS ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( MUR - CS ) ) * ( ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.7975708502024291, "obj2": 0.07830400430106471}, {"determining": "( Min( ( Const / FirstVNF_CPU_Server ) ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10787619877499018}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( DS * RMSe ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.3441295546558704, "obj2": 0.46271687592854943}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN * MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( Min( PN ,MRS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,Max( RCSe,CS ) )", "obj1": 0.5242914979757085, "obj2": 0.313298725678265}, {"determining": "Min( Max( Min( Min( AMS ,DDR ) ,( ( AMS - RRS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( Max( AMS,PN ) / ( FirstVNF_Mem * ( FirstVNF_RAM / Const ) ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( Max( ( ( MUC - CS ) - RRSe ),( Min( ( MUM + CS ) ,DS ) + MUM ) ),( ( DS / DS ) / Max( MUC,RCSe ) ) ) + Max( MUC,DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + RMSe ) ) )", "obj1": 0.4048582995951417, "obj2": 0.4101318272951858}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / CRS ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32793491352744203}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.33934969920848573}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),Max( ( Min( ( MRS / FirstVNF_RAM ) ,( BR / FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ),Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ),Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32793491352744203}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * ( ( ARS + PN ) - FirstVNF_RAM ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( ( MUM / ( Min( ( RRSe + RRSe ) ,( RCSe - MUR ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) - CS ) ) * DS ) / RCSe )", "obj1": 0.9453441295546559, "obj2": 0.02010264684681673}], "12": [{"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( DS * RMSe ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7787024339803095}, {"determining": "( ( DDR - AMS ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( PN - DDR ) ) )", "choosing": "( MLU - ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( CRS / AMS ) - Min( MDR ,DDR ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( AMS - FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,AMS ) )", "choosing": "( ( Min( ( RRSe * Max( Min( MUM ,Min( RRSe ,MUR ) ),( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) ) ,( CS * ( MLU * MUM ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) / ( ( Min( Max( ( ( RCSe + ( MUC + MUC ) ) / RCSe ),RMSe ) ,MUM ) * Max( Max( ( ( ( MUR + MUR ) / MLU ) * ( MUC - MLU ) ),DS ),MUR ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( DS * RMSe ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7787024339803095}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + ( ( RCSe / ( MLU * RCSe ) ) / RRSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( MUC + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.371392277604507}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.42353672119147856}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( RRSe + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.14613109736537153}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.33805668016194335, "obj2": 0.46692611078104335}, {"determining": "Max( Min( BR ,ARS ),Min( Min( ( FirstVNF_CPU_Server * BR ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + ( Max( ( RCSe + Max( MUM,RCSe ) ),( Min( RMSe ,MUM ) - ( CS - MLU ) ) ) * ( MLU + CS ) ) ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.34372389543552306}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( Max( ( Max( MLU,CS ) + DS ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.16694556460227483}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.49527392266218145}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server - ARS ) - ( MRS - ACS ) ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - RRSe ) * MUM ) + MUC ) / ( DS * MUR ) )", "obj1": 0.34210526315789475, "obj2": 0.43711448142694237}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5679498396873871}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( ( ( Const / MDR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( Const * FirstVNF_CPU ) / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + ( RMSe / RCSe ) ) * ( Max( RMSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.29199310322692573}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.3105714726944104}, {"determining": "( ( DDR / AMS ) * ( ( ( DDR - Max( MDR,AMS ) ) / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( Max( RMSe,Min( MUR ,CS ) ) + RRSe ) / ( MUR / ( ( DS + MUM ) / ( MUC / RRSe ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.15920846679043232}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5758498829023866}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( CS,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.23510646922774023}, {"determining": "( Min( Const ,Max( Min( ( ( FirstVNF_RAM_Server / ( MRS - Const ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU - ARS ) ) ) ) ,( ( DDR / Min( MDR ,( FirstVNF_RAM_Server / MRS ) ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( Min( RRSe ,DS ) + Max( RRSe,RMSe ) ) + Max( ( RRSe + ( MUC / RCSe ) ),( MUC + CS ) ) ) - MUR )", "obj1": 0.4676113360323887, "obj2": 0.33564117276703104}, {"determining": "( ( ( Max( Const,FirstVNF_RAM_Server ) + ( FirstVNF_RAM / ( MRS + FirstVNF_RAM_Server ) ) ) + PN ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.21733564448041767}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6250635229748934}, {"determining": "Min( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,( ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.7246963562753036, "obj2": 0.11376252353931568}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - ( DDR + DDR ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5124631699766173}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( FirstVNF_CPU + Min( FirstVNF_CPU ,Max( Max( MRS,FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( ( Min( RCSe ,MLU ) / Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,CS ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.3327002571662287}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( MUC + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.4149797570850202, "obj2": 0.3508406163460725}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( MUC + MLU ) ),MUM ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.35414135736984226}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5913471097358726}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6005627150977616}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "Min( RRS ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5463358126604303}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7059344046263318}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( ( DS + ( ( CS + MLU ) + Max( MUM,MLU ) ) ) + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09167866116750875}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( RCSe ,MUM ),Min( ( MUM + MLU ) ,Max( RCSe,DS ) ) ),MUR ) ) ) * RCSe ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ),MLU ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.10015441082214946}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( BR + BR ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + MRS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUR,MUM ) / Min( MUM ,RRSe ) ),( ( DS - MUR ) * MUR ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + RRSe ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.2146925022653264}, {"determining": "( ( ( ARS * ARS ) - BR ) * ( ARS + ( ( ( AMS * ( BR / ARS ) ) - FirstVNF_CPU ) + ( Max( CRS,Min( DDR ,ACS ) ) + AMS ) ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06772410533650071}, {"determining": "( ( Const + Max( FirstVNF_Mem,( PN + PN ) ) ) - ( ( Const - MDR ) / AMS ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( CS,RCSe ) ,Max( ( ( ( MUM / ( RMSe * RCSe ) ) - ( Max( MUC,MUR ) * RCSe ) ) - MLU ),MUR ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + MUM ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5553276394375841}, {"determining": "Min( ( Min( ACS ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) / ( ( AMS - RRS ) - Min( FirstVNF_CPU_Server ,AMS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( ( MUR * Max( Max( DS,MLU ),MUC ) ) * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,MUC )", "obj1": 0.5020242914979757, "obj2": 0.32917885701997834}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( ( DDR / ARS ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( MLU - MUR ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + CS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.15966401098397462}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.1194331983805668, "obj2": 0.6811286209896449}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5650514442385156}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - MDR ) - Min( MDR ,CRS ) ) - Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) ) ,( Min( Const ,Max( ( ARS / FirstVNF_RAM ),( PN * PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( MLU - ( ( ( RMSe * ( MUM + RMSe ) ) * ( RMSe + Max( RCSe,( ( DS * RRSe ) / ( CS / MLU ) ) ) ) ) + ( MLU - ( ( ( RRSe + Min( MUM ,DS ) ) * DS ) - Min( RMSe ,( RRSe / RRSe ) ) ) ) ) ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5994994214346172}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( PN / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "Min( FirstVNF_Mem_Server ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03678953596501538}, {"determining": "( ( Const - Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),( PN + Min( ( Max( BR,Const ) * FirstVNF_CPU_Server ) ,CRS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUR ),( ( Min( RRSe ,MUR ) - Min( MUC ,CS ) ) + CS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6293639569842818}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.5291069191872939}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2713833392929954}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( FirstVNF_CPU_Server ,AMS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( MUR * Max( Max( DS,MLU ),MUC ) ) * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.24723316191754696}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) * Min( ( FirstVNF_CPU_Server - ( CRS + AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ACS - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( Max( Min( FirstVNF_CPU_Server ,PN ),( ARS - Max( FirstVNF_Mem,BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + MUM ) + ( CS / ( MUC + MUC ) ) ) ) ) ,Min( DS ,RRSe ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6485711697868386}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,AMS )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.09919028340080972, "obj2": 0.6973458783003669}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07687102546007502}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7201205073567988}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.017018898875582195}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.5850202429149798, "obj2": 0.2627307575542899}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - MRS ) - ( ( BR - AMS ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( AMS + ACS ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * ( MUM + RMSe ) ) / ( MUR - DS ) )", "obj1": 0.840080971659919, "obj2": 0.06533747426344344}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( RCSe - CS ) ) ) ) ) ,( Min( Min( CS ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.013119106298086903}, {"determining": "Min( Max( ( Min( AMS ,DDR ) / ( ( FirstVNF_Mem_Server - PN ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( DDR - PN ) )", "choosing": "( MUR - ( ( Min( MLU ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( CS / MUC ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04875192216306327}, {"determining": "Min( ( ( DDR - AMS ) - ( ( AMS - ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ) ) - ( BR / ( Min( Const ,DDR ) - ( RRS + MDR ) ) ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) / MUM ) * ( Max( ( RCSe * MUR ),MUC ) + ( ( ( MUR - MUC ) / MUC ) / MLU ) ) ) / ( RRSe - MUR ) )", "obj1": 0.9858299595141701, "obj2": 0.006673676969669022}, {"determining": "( ( DDR - AMS ) - ( ( ( AMS - Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,ARS ) ) - BR ) + ( PN - DDR ) ) )", "choosing": "( ( ( MLU + RRSe ) * Min( ( RMSe * ( CS * Min( RRSe ,( ( CS / MUR ) - DS ) ) ) ) ,( MLU / MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.9190283400809717, "obj2": 0.032179465456150025}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),RRS ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,( MUM + RCSe ) ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.251931286715295}, {"determining": "Min( ( ( ( CRS / AMS ) - Min( MDR ,Min( Max( FirstVNF_RAM_Server,( CRS - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( DDR - AMS ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( AMS - RRS ) - Min( BR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "( ( MLU / MUC ) - ( CS * ( MUC / MUR ) ) )", "obj1": 0.868421052631579, "obj2": 0.053786274369811884}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( Max( AMS,BR ) - ( BR / FirstVNF_RAM ) ) ) ,Min( Min( BR ,AMS ) ,( MDR - PN ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - ( FirstVNF_CPU_Server * BR ) ) )", "choosing": "( ( CS * ( MUR + ( MUR - Min( MLU ,DS ) ) ) ) - ( Max( Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( MUR ,Max( RRSe,( CS + CS ) ) ) ),Max( ( RCSe - RCSe ),CS ) ),DS ) + MLU ) )", "obj1": 0.8724696356275303, "obj2": 0.05264587520739289}, {"determining": "( Max( FirstVNF_Mem,( PN + PN ) ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( ( MUM * MUR ) / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08549966092877587}, {"determining": "Min( Max( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( PN - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( MDR - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( PN + RRS ) - MRS ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.10526315789473684, "obj2": 0.6904098025021962}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08665029796253004}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,BR ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( RCSe,CS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.21546550144016277}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + ( ARS / ( FirstVNF_RAM - ACS ) ) ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( Max( Min( ( MUC / DS ) ,RMSe ),DS ) + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "Min( Max( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ),( ( AMS - RRS ) - Min( Max( MDR,FirstVNF_RAM ) ,AMS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( ( MUR * Max( Max( DS,MLU ),MUC ) ) * ( MUM / ( Min( MUM ,RRSe ) - MUM ) ) ) ) - CS ) ,( RRSe + ( MUM + CS ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5873399141837482}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10125675850354182}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) ) ,( BR / FirstVNF_CPU ) ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - DDR ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( MUM * MUR ) / ( DS - MUR ) ) - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.265033198598106}, {"determining": "( Min( ( Const / FirstVNF_CPU_Server ) ,ARS ) / Min( Min( ( ( DDR / AMS ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.023000548392819155}, {"determining": "Min( ( Min( Min( ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.08975583269679749}, {"determining": "Min( Max( ACS,MRS ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( MUM ,RCSe ),Min( ( MUM + MLU ) ,( RCSe - MUM ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RRSe - CS ) ) * ( ( DS + DS ) * Min( Max( RMSe,RRSe ) ,RRSe ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5241622826424538}, {"determining": "Min( Max( Max( Min( AMS ,Max( ACS,ACS ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( DS + ( RMSe / RMSe ) ) * Min( Max( RCSe,CS ) ,Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.902834008097166, "obj2": 0.041031254347655574}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM * ( Min( AMS ,CRS ) / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - Max( RMSe,CS ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( MUR - CS ) ) * ( ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.08168655992782518}, {"determining": "Min( ( PN - ( ACS / Const ) ) ,AMS )", "choosing": "( Max( MLU,Max( MUM,( Max( ( RCSe - MUC ),DS ) * ( MUC / MUM ) ) ) ) - ( CS + MLU ) )", "obj1": 0.9352226720647774, "obj2": 0.026960298578360416}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( RCSe - CS ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.8137651821862348, "obj2": 0.07236634932370795}, {"determining": "Min( ( ( ACS - MRS ) + FirstVNF_RAM ) ,Min( Min( AMS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "Min( ( RMSe - ( ( RMSe - ( MUM / MUM ) ) + ( MLU / ( ( ( RCSe - MUM ) / MLU ) + ( MUC + RRSe ) ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.854251012145749, "obj2": 0.05433466069750226}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.0931174089068826, "obj2": 0.701915776482847}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6279880257525995}, {"determining": "Min( Min( ACS ,Min( ( Min( Min( ( DDR * ( DDR / RRS ) ) ,( FirstVNF_Mem_Server / ACS ) ) ,( BR / FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( PN - DDR ) )", "choosing": "( ( Max( ( ( ( ( ( MUC / MLU ) * CS ) * ( CS + RRSe ) ) - ( DS * RMSe ) ) / MUC ),( MUC + CS ) ) * ( DS + CS ) ) / ( DS - MUR ) )", "obj1": 0.979757085020243, "obj2": 0.010085698997752857}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5401106692080212}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2713833392929954}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - AMS ) * FirstVNF_CPU ) - Min( Min( Max( AMS,( FirstVNF_Mem_Server + ( RRS * FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ,DDR ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( CS + ( RCSe - Max( ( MUC + ( RMSe * CS ) ),( ( DS / DS ) + ( Max( MLU,RCSe ) - MUM ) ) ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.0415751955419418}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( MDR - PN ) ) - Min( ( ARS - ( FirstVNF_Mem_Server * DDR ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( ( Min( ( MUC * Max( MLU,RRSe ) ) ,( RCSe + Max( MUR,MUR ) ) ) / RRSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + CS ) * ( DS + DS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( FirstVNF_CPU_Server ,AMS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( MUR - ( ( MUR * Max( Max( DS,MLU ),MUC ) ) * ( ( ( Min( RCSe ,MUR ) + ( MUM * MUC ) ) * MUR ) - DS ) ) ) - CS ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.2125506072874494, "obj2": 0.5885663311890164}, {"determining": "Min( ( ( Min( MDR ,( Min( Min( CRS ,( RRS - FirstVNF_RAM ) ) ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( ( RRSe / MUC ),Min( ( MUM + MLU ) ,Max( RCSe,CS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.525329319967606}, {"determining": "( ( PN - MRS ) - Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / Const ) + AMS ) ) ) ),FirstVNF_Mem ) )", "choosing": "( Max( MLU,DS ) - ( ( CS * Max( ( ( RCSe - MUR ) / DS ),MUC ) ) + Max( ( RCSe / RRSe ),( MUC + CS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4286763668878491}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( Max( AMS,BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06309680534222172}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8502024291497976, "obj2": 0.055314903202866215}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( RCSe - CS ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.8137651821862348, "obj2": 0.07236634932370795}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.11336032388663968, "obj2": 0.6832721336542071}], "13": [{"determining": "( ( Const - Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),( PN + Min( ( Max( BR,Const ) * FirstVNF_CPU_Server ) ,CRS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUR ),( ( Min( RRSe ,MUR ) - Min( MUC ,CS ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( PN - DDR ) ) )", "choosing": "( MLU - ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - Min( ( ( CRS * ( ( CRS - Const ) - ARS ) ) * AMS ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + ( MUM - RCSe ) ) ,Max( RMSe,( Max( CS,RCSe ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3274517282804939}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.42353672119147856}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5506461320770512}, {"determining": "( ( DDR / AMS ) * ( ( ( DDR - Max( MDR,AMS ) ) / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( Max( RMSe,Min( MUR ,CS ) ) + RRSe ) / ( MUR / ( ( DS + MUM ) / ( MUC / RRSe ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( Max( ( Max( MLU,CS ) + DS ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.16694556460227483}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.15586937487151117}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + ( ( RCSe / ( MLU * RCSe ) ) / RRSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( MUC + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5754653906550178}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( BR + BR ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + MRS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUR,MUM ) / Min( MUM ,RRSe ) ),( ( DS - MUR ) * MUR ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + RRSe ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.2146925022653264}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5913471097358726}, {"determining": "( ( ( Max( Const,FirstVNF_RAM_Server ) + ( FirstVNF_RAM / ( MRS + FirstVNF_RAM_Server ) ) ) + PN ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.12186715283877148}, {"determining": "( ( ( Const / MDR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( Const * FirstVNF_CPU ) / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + ( RMSe / RCSe ) ) * ( Max( RMSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.29199310322692573}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + ( ARS / ( FirstVNF_RAM - ACS ) ) ) ) ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( ( RRSe + RRSe ) / MUM ) * ( ( Max( Min( ( MUC / DS ) ,RMSe ),DS ) + Max( Max( RCSe,( CS + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638283633862927}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.33805668016194335, "obj2": 0.46692611078104335}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.62501805556233}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.340080971659919, "obj2": 0.43939010274539303}, {"determining": "( ( Max( MDR,RRS ) - Const ) * Min( Max( Max( ( FirstVNF_Mem_Server / RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( RRS - MDR ) ) - Min( ( ARS - Min( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( DS ,Max( MUC,DS ) ) - Max( ( RCSe / MUC ),Max( ( Min( DS ,MUR ) / ( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.24696272668862962}, {"determining": "Max( Min( BR ,ARS ),Min( Min( ( FirstVNF_CPU_Server * BR ) ,( AMS * Const ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server + AMS ) / FirstVNF_Mem ) ) ,MDR ) + MRS ) ) ) )", "choosing": "( ( ( RRSe * Max( MUR,Max( RMSe,RRSe ) ) ) * MUM ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.49527392266218145}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.5182186234817814, "obj2": 0.298801112460959}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( Max( AMS,BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.062002183395615404}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( CS,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.23510646922774023}, {"determining": "Min( RRS ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5463358126604303}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.33805668016194335, "obj2": 0.46692611078104335}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5823784364849128}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( ( ( ARS * ARS ) - BR ) * ( ARS + ( ( ( AMS * ( BR / ARS ) ) - FirstVNF_CPU ) + ( Max( CRS,Min( DDR ,ACS ) ) + AMS ) ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06772410533650071}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6024447673580438}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7201205073567988}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MLU + ( MLU * MLU ) ) * RCSe ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6472222035049725}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.1194331983805668, "obj2": 0.6811286209896449}, {"determining": "( ( PN - MRS ) - Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / Const ) + AMS ) ) ) ),FirstVNF_Mem ) )", "choosing": "( Max( MLU,DS ) - ( ( CS * Max( ( ( RCSe - MUR ) / DS ),MUC ) ) + Max( ( RCSe / RRSe ),( MUC + CS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4286763668878491}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - ( DDR + DDR ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5117187252868534}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - MDR ) - Min( MDR ,CRS ) ) - Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) ) ,( Min( Const ,Max( ( ARS / FirstVNF_RAM ),( PN * PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( MLU - ( ( ( RMSe * ( MUM + RMSe ) ) * ( RMSe + Max( RCSe,( ( DS * RRSe ) / ( CS / MLU ) ) ) ) ) + ( MLU - ( ( ( RRSe + Min( MUM ,DS ) ) * DS ) - Min( RMSe ,( RRSe / RRSe ) ) ) ) ) ) ,( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5994994214346172}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( RRS - FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( Min( ARS ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM - ACS ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( Min( ( Max( ( ( MUM * ( CS + CS ) ) / ( ( CS - RRSe ) + Min( RRSe ,RCSe ) ) ),Max( MUC,CS ) ) - MUC ) ,Min( ( ( CS + ( Max( MUR,MUC ) * MUR ) ) * CS ) ,RRSe ) ) - MUR ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) ) ,( BR / FirstVNF_CPU ) ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - DDR ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( ( MUM * MUR ) / ( DS - MUR ) ) - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.265033198598106}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_CPU_Server ,MRS ) ,( MDR / FirstVNF_Mem ) ) ) ) ,( ( DDR / Min( MDR ,AMS ) ) - AMS ) ),( PN + PN ) ) ) - ( PN + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( ( ( MLU / Min( RRSe ,MUC ) ) + RRSe ),( DS + MLU ) ) / MUM ),( MUC + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.3581538159867515}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( ( DDR / ARS ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( MLU - MUR ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + CS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6485711697868386}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.49527392266218145}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( Max( AMS,BR ) - ( BR / MRS ) ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - Max( DDR,MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( RCSe * ( RRSe + Max( MUM,MUR ) ) ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( DS,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.04729806372273293}, {"determining": "Min( ( ( Min( MDR ,( Min( Min( CRS ,( RRS - FirstVNF_RAM ) ) ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS / RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( ( RRSe / MUC ),Min( ( MUM + MLU ) ,Max( RCSe,CS ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.525329319967606}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7059344046263318}, {"determining": "( Min( ( Const / FirstVNF_CPU_Server ) ,ARS ) / Min( Min( ( ( DDR / AMS ) - BR ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( ( CS + MLU ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10787619877499018}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5607287449392713, "obj2": 0.27713484507384817}, {"determining": "( Min( ARS ,ARS ) / ( Const + FirstVNF_CPU ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( CS * CS ) * ( MLU + RCSe ) ) ) ) ) ) ,( Min( Min( ( MLU - ( CS + MLU ) ) ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.005999101730538643}, {"determining": "( ( Const - Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),( PN + Min( ( Max( BR,Const ) * FirstVNF_CPU_Server ) ,CRS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUR ),( ( Min( RRSe ,MUR ) - Min( MUC ,CS ) ) + CS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6293639569842818}, {"determining": "Min( ( ( ( CRS / AMS ) - Min( MDR ,Min( Max( FirstVNF_RAM_Server,( CRS - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ,( ( DDR - AMS ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( AMS - RRS ) - Min( BR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "( ( MLU / MUC ) - ( CS * ( MUC / MUR ) ) )", "obj1": 0.868421052631579, "obj2": 0.053786274369811884}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.11336032388663968, "obj2": 0.6832721336542071}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.21486757392314762}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( CS,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5146868308442774}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( BR ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) - ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( Max( MUM,MLU ) + ( CS + MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( MUM - MUC ) )", "obj1": 0.6153846153846154, "obj2": 0.21733564448041767}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( PN / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( ( ( MLU + RRSe ) * RCSe ) + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.19348992571614446}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.017018898875582195}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.15966401098397462}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) * Min( ( FirstVNF_CPU_Server - ( CRS + AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ACS - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( Max( Min( FirstVNF_CPU_Server ,PN ),( ARS - Max( FirstVNF_Mem,BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + MUM ) + ( CS / ( MUC + MUC ) ) ) ) ) ,Min( DS ,RRSe ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,( ARS * BR ) ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ),Min( ( MUM + MLU ) ,Max( RCSe,DS ) ) ),MUR ) ) ) ) ,( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + Max( ( RCSe + MUC ),( MUC + CS ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.030316325165430504}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.5242914979757085, "obj2": 0.2952923346375065}, {"determining": "( Min( ( Const / FirstVNF_CPU_Server ) ,ARS ) / Min( Min( ( ( DDR / AMS ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.023000548392819155}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - AMS ) * FirstVNF_CPU ) - Min( Min( Max( AMS,( FirstVNF_Mem_Server + ( RRS * FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ,DDR ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( CS + ( RCSe - Max( ( MUC + ( RMSe * CS ) ),( ( DS / DS ) + ( Max( MLU,RCSe ) - MUM ) ) ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.0415751955419418}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.5850202429149798, "obj2": 0.2627307575542899}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( MDR - PN ) ) - Min( ( ARS - ( FirstVNF_Mem_Server * DDR ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( ( Min( ( MUC * Max( MLU,RRSe ) ) ,( RCSe + Max( MUR,MUR ) ) ) / RRSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + CS ) * ( DS + DS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "Min( RRS ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5463358126604303}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( ACS ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5308848868793732}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10125675850354182}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( CS,RCSe ) ,( RCSe / ( MUC - ( Max( DS,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.23510646922774023}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( MLU - ( RRSe - CS ) ) ) / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.05630443379649056}, {"determining": "Min( Max( Max( Min( AMS ,Max( ACS,ACS ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( DS + ( RMSe / RMSe ) ) * Min( Max( RCSe,CS ) ,Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.902834008097166, "obj2": 0.041031254347655574}, {"determining": "Min( ( ( ACS - MRS ) + FirstVNF_RAM ) ,Min( Min( AMS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "Min( ( RMSe - ( ( RMSe - ( MUM / MUM ) ) + ( MLU / ( ( ( RCSe - MUM ) / MLU ) + ( MUC + RRSe ) ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.854251012145749, "obj2": 0.05433466069750226}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( MUM ,RCSe ),Min( ( MUM + MLU ) ,( RCSe - MUM ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RRSe - CS ) ) * ( ( DS + DS ) * Min( Max( RMSe,RRSe ) ,RRSe ) ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07277116207078682}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6279880257525995}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUC * Max( Min( DS ,MUM ),( MUM + MUR ) ) ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.7206477732793523, "obj2": 0.11428465105143185}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,AMS )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.09919028340080972, "obj2": 0.6973458783003669}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.34210526315789475, "obj2": 0.43711448142694237}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( MDR + RRS ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,Max( DDR,Min( FirstVNF_RAM_Server ,MRS ) ) )", "choosing": "Min( ( ( ( Max( ( RRSe - CS ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,CS ),Max( RCSe,MUC ) ) ) ,( ( Min( MUR ,RCSe ) * ( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.5398532492784831}, {"determining": "( Max( FirstVNF_Mem,( PN + PN ) ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09632760724528806}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( RCSe - MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.07036065114177775}, {"determining": "Min( FirstVNF_Mem_Server ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03678953596501538}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5401106692080212}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.0931174089068826, "obj2": 0.701915776482847}, {"determining": "Min( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.1212961157454217}, {"determining": "( AMS * ( ( Min( Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / CRS ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( DS * ( MUC / ( MUR * CS ) ) ) - ( Max( MUR,DS ) + MLU ) )", "obj1": 0.7591093117408907, "obj2": 0.09464226534820361}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RCSe,MUM ) ,Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( MUM * MUR ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2713833392929954}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / RCSe ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.5347839017177095}, {"determining": "( Max( FirstVNF_Mem,( PN + PN ) ) * Min( ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( ( MUM * MUR ) / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.08038763198420673}, {"determining": "Min( ( PN - ( ACS / Const ) ) ,AMS )", "choosing": "( Max( MLU,Max( MUM,( Max( ( RCSe - MUC ),DS ) * ( MUC / MUM ) ) ) ) - ( CS + MLU ) )", "obj1": 0.9352226720647774, "obj2": 0.026960298578360416}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( PN - MDR ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( MUM ,RCSe ),Min( ( MUM + MLU ) ,( RCSe - MUM ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RRSe - CS ) ) * ( ( DS + DS ) * Min( Max( RMSe,RRSe ) ,RRSe ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08303604430233831}, {"determining": "( ( ( Max( Const,FirstVNF_RAM_Server ) + ( FirstVNF_RAM / ( MRS + FirstVNF_RAM_Server ) ) ) + PN ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.12186715283877148}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.5291069191872939}], "14": [{"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + ( DDR + ( Const / PN ) ) ) ) ) - ( CRS / ( ( Const / FirstVNF_CPU_Server ) - Const ) ) ) / ( Min( CRS ,CRS ) - ( AMS * RRS ) ) ) ,( MRS * ( AMS + FirstVNF_RAM ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( ( ( ( RRSe + ( RCSe - CS ) ) - RMSe ) / Min( Max( ( MUC + RRSe ),MUM ) ,DS ) ) ,RRSe ) ),Min( Max( CS,RCSe ) ,( MUM / ( MUC - ( Max( ( MUM - MUR ),DS ) * ( MLU - RMSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),( PN + Min( ( Max( BR,Const ) * FirstVNF_CPU_Server ) ,CRS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUR ),( ( Min( RRSe ,MUR ) - Min( MUC ,CS ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM_Server - MDR ) * Min( FirstVNF_CPU_Server ,AMS ) ) - Max( RRS,ARS ) ) ) )", "choosing": "( ( DS - ( ( ( ( MLU - RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) / ( MUM - MUR ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.42353672119147856}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.44920572616801857}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS / Max( MLU,RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3274517282804939}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5506461320770512}, {"determining": "( ( DDR / AMS ) * ( ( ( DDR - Max( MDR,AMS ) ) / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( Max( RMSe,Min( MUR ,CS ) ) + RRSe ) / ( MUR / ( ( DS + MUM ) / ( MUC / RRSe ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.49527392266218145}, {"determining": "( ( ( Max( Const,FirstVNF_RAM_Server ) + ( FirstVNF_RAM / ( MRS + FirstVNF_RAM_Server ) ) ) + PN ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.12186001148533389}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.15586937487151117}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5991902834008097, "obj2": 0.22969085436696082}, {"determining": "( Min( Const ,( Max( CRS,ACS ) + ( ACS * FirstVNF_RAM_Server ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( ( MLU / CS ) - ( CS / MLU ) ) ) ) ) ,( Min( Min( MLU ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.5070604285900143}, {"determining": "( Min( Min( Const ,DDR ) ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.4230769230769231, "obj2": 0.3452210261853692}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( ( MUM * MUR ) / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.5240669957570709}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( BR + BR ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + MRS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUR,MUM ) / Min( MUM ,RRSe ) ),( ( DS - MUR ) * MUR ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + RRSe ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.2146925022653264}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.16694556460227483}, {"determining": "Min( RRS ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5463358126604303}, {"determining": "( Min( ( FirstVNF_Mem + ( PN + ( ( BR / Min( BR ,AMS ) ) - MDR ) ) ) ,Const ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( MUC + CS ) ) - ( CS * ( ( CS * MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.5707461294981699}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - Min( ( ( CRS * ( ( CRS - Const ) - ARS ) ) * AMS ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + ( MUM - RCSe ) ) ,Max( RMSe,( Max( CS,RCSe ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3274517282804939}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.15966401098397462}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( ( DDR / ARS ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( MLU - MUR ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + CS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.017018898875582195}, {"determining": "( ( ( Const / MDR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( Const * FirstVNF_CPU ) / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + ( RMSe / RCSe ) ) * ( Max( RMSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.29199310322692573}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + ( ( AMS - RRS ) - Min( MDR ,( ( ( FirstVNF_Mem_Server * PN ) - PN ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe - CS ) / ( MUM + MLU ) ) ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.5325938875448374}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Max( ( Min( RRS ,BR ) + ( RRS * PN ) ),FirstVNF_CPU_Server ) / ( Min( ARS ,ARS ) / BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.08299595141700405, "obj2": 0.7059344046263318}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5913471097358726}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( MDR * BR ) + ( Min( Max( MDR,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( ( ( ( ( ( CS * DS ) + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ),MLU ) - ( CS + Min( ( RMSe * DS ) ,MUR ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5295056956860948}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( BR ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) - ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( Max( MUM,MLU ) + ( CS + MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( MUM - MUC ) )", "obj1": 0.6153846153846154, "obj2": 0.21733564448041767}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.62501805556233}, {"determining": "( Min( Const ,Max( Min( ( ARS - Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - AMS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( DS - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( MLU - ( MUR - CS ) ) ) / MUC ),( MUC + CS ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.35469654080835583}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( ( Max( MDR,RRS ) - Const ) * Min( Max( Max( ( FirstVNF_Mem_Server / RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( RRS - MDR ) ) - Min( ( ARS - Min( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( DS ,Max( MUC,DS ) ) - Max( ( RCSe / MUC ),Max( ( Min( DS ,MUR ) / ( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.24696272668862962}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.1194331983805668, "obj2": 0.6811286209896449}, {"determining": "( ( PN - MRS ) - Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / Const ) + AMS ) ) ) ),FirstVNF_Mem ) )", "choosing": "( Max( MLU,DS ) - ( ( CS * Max( ( ( RCSe - MUR ) / DS ),MUC ) ) + Max( ( RCSe / RRSe ),( MUC + CS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4286763668878491}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5993135827330318}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "Min( ( ( DDR * FirstVNF_CPU_Server ) / Min( ACS ,( Min( Const ,DDR ) - ( RRS + BR ) ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + ( ACS * FirstVNF_RAM_Server ) ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( MUM - Max( CS,( MUR - ( RRSe + Min( DS ,MUC ) ) ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6024447673580438}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( MUR - Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00863221401594305}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( ( ARS * ARS ) - BR ) * ( ARS + ( ( ( AMS * ( BR / ARS ) ) - FirstVNF_CPU ) + ( Max( CRS,Min( DDR ,ACS ) ) + AMS ) ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06772410533650071}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6485711697868386}, {"determining": "( Max( FirstVNF_Mem,( PN + PN ) ) * Min( ( ( DDR / ( FirstVNF_RAM * ( BR / ( RRS + MDR ) ) ) ) - FirstVNF_Mem ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07688804266201951}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.638262459887457}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7201205073567988}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.21486757392314762}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5823784364849128}, {"determining": "( Max( FirstVNF_Mem,( PN + PN ) ) * Min( ( PN - MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09632760724528806}, {"determining": "( ( Const / AMS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / Min( Const ,RRS ) ) ) ,RRS ) * FirstVNF_Mem ) )", "choosing": "( ( MUR * MUM ) / ( DS - Max( CS,( ( MUM - Max( RMSe,Max( DS,Min( MUC ,MUM ) ) ) ) + ( MUM - DS ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43517596578511575}, {"determining": "Min( ( ( ACS - MRS ) + FirstVNF_RAM ) ,Min( Min( AMS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "Min( ( RMSe - ( ( RMSe - ( MUM / MUM ) ) + ( MLU / ( ( ( RCSe - MUM ) / MLU ) + ( MUC + RRSe ) ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.854251012145749, "obj2": 0.05433466069750226}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( PN / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( MDR - PN ) ) - Min( ( ARS - ( FirstVNF_Mem_Server * DDR ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( ( Min( ( MUC * Max( MLU,RRSe ) ) ,( RCSe + Max( MUR,MUR ) ) ) / RRSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR / ( MUC - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + CS ) * ( DS + DS ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2555518575267762}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( Max( MUR,DS ) + MLU ) - ( CS * ( MUC / MUR ) ) )", "obj1": 0.771255060728745, "obj2": 0.08780130642381487}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( Max( AMS,BR ) - ( BR / MRS ) ) ) ,Min( Const ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( ( ( MUM * MUR ) / ( DS - MUR ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06498195567463633}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2620250233844781}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,AMS )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.09919028340080972, "obj2": 0.6973458783003669}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ( Min( ( RRS * Const ) ,( FirstVNF_Mem * PN ) ) + MDR ) - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem_Server ) ) ) ,( Min( Min( CRS ,( RRS - FirstVNF_RAM ) ) ,DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MUM,RCSe ) ) ) * DS ) - Max( Max( ( RRSe / ( MUM + RCSe ) ),Min( ( MUM + MLU ) ,Max( RCSe,CS ) ) ),MUR ) ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.10526315789473684, "obj2": 0.6931456043594791}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + Max( ( RCSe + MUC ),( MUC + CS ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.030316325165430504}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,Max( FirstVNF_RAM_Server,BR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( ( ( Min( ( MUM * Max( CS,MUR ) ) ,RMSe ) - DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.5182186234817814, "obj2": 0.298801112460959}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) * Min( ( FirstVNF_CPU_Server - ( CRS + AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ACS - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( Max( Min( FirstVNF_CPU_Server ,PN ),( ARS - Max( FirstVNF_Mem,BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + MUM ) + ( CS / ( MUC + MUC ) ) ) ) ) ,Min( DS ,RRSe ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.6464499433828566}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.5242914979757085, "obj2": 0.2952923346375065}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN / PN ) + ( ( ( Min( BR ,Const ) / ARS ) / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) - ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / Max( MUR,MLU ) ) ),RCSe ) + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6401241155419306}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - AMS ) * FirstVNF_CPU ) - Min( Min( Max( AMS,( FirstVNF_Mem_Server + ( RRS * FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) ,DDR ) ) ,( PN - DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( CS + ( RCSe - Max( ( MUC + ( RMSe * CS ) ),( ( DS / DS ) + ( Max( MLU,RCSe ) - MUM ) ) ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.0415751955419418}, {"determining": "( AMS * ( ( Min( Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / CRS ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( DS * ( MUC / ( MUR * CS ) ) ) - ( Max( MUR,DS ) + MLU ) )", "obj1": 0.7591093117408907, "obj2": 0.09464226534820361}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Max( MLU,RCSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6301922432897137}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( Max( AMS,BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.06200218339561539}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.49527392266218145}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,Min( AMS ,DDR ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) / RRSe ) ) ) - ( Max( ( RRSe + RRSe ),MUM ) * ( ( CS + Max( Max( RCSe,( MUC + MLU ) ),MUC ) ) + ( RMSe * CS ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5768099678026193}, {"determining": "( Max( FirstVNF_Mem,( PN + PN ) ) * Min( ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( CS * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09019444906748807}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) + FirstVNF_Mem ) )", "choosing": "( Max( MLU,DS ) - ( ( ( MUM * MUR ) + ( RRSe / MUC ) ) + Max( ( RCSe / RRSe ),( MUC + CS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6870045839146799}, {"determining": "Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( RCSe - CS ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.035634070942800494}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / Min( AMS ,DDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( PN - MDR ) )", "choosing": "Min( ( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - ( Max( RCSe,MUC ) + Max( RCSe,Max( Max( Min( MUM ,( CS + MLU ) ),Min( ( MUM + MLU ) ,( RCSe - MUM ) ) ),MUR ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RRSe - CS ) ) * ( ( DS + DS ) * Min( Max( RMSe,RRSe ) ,RRSe ) ) ) )", "obj1": 0.7813765182186235, "obj2": 0.0842937109924091}, {"determining": "Min( FirstVNF_Mem_Server ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03678953596501538}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( BR + BR ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( FirstVNF_RAM ,( BR / FirstVNF_Mem_Server ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUR,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( Min( MUR ,RCSe ) - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.25277170946851446}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10125675850354182}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_CPU_Server ,MRS ) ,( MDR / FirstVNF_Mem ) ) ) ) ,( ( DDR / Min( MDR ,AMS ) ) - AMS ) ),( PN + PN ) ) ) - ( PN + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( ( ( MLU / Min( RRSe ,MUC ) ) + RRSe ),( DS + MLU ) ) / MUM ),( MUC + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.3581538159867515}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( RCSe - MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.07036065114177775}, {"determining": "Min( Max( Max( Min( AMS ,Max( ACS,ACS ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( DS + ( RMSe / RMSe ) ) * Min( Max( RCSe,CS ) ,Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.902834008097166, "obj2": 0.041031254347655574}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( ( MLU - ( CS + MLU ) ) ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.7408906882591093, "obj2": 0.10008191539261728}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS + MDR ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( CS - ( RRSe - CS ) ) ) / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.05630086311977176}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM * ( BR / ( PN - DDR ) ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.005060212098642812}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6279880257525995}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( Max( ( Max( MLU,CS ) + DS ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.16694556460227483}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.5182186234817814, "obj2": 0.298801112460959}, {"determining": "( Min( ( Const / FirstVNF_CPU_Server ) ,ARS ) / Min( Min( ( ( DDR / AMS ) - BR ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( ( CS + MLU ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10787619877499018}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5566801619433198, "obj2": 0.2780925530063997}, {"determining": "Min( ( ( Min( MDR ,Min( ( RRS + MDR ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10787619877499018}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.0931174089068826, "obj2": 0.701915776482847}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11578985752651562}, {"determining": "Min( RRS ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5463358126604303}], "15": [{"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Max( RRS,( FirstVNF_RAM / FirstVNF_CPU ) ) - ( RRS * MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RRSe ,MUR ) ) ) ) + Max( ( RCSe / MUR ),( ( Min( RRSe ,MUR ) - Min( MUC ,( MLU + RMSe ) ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + ( DDR + ( Const / PN ) ) ) ) ) - ( CRS / ( ( Const / FirstVNF_CPU_Server ) - Const ) ) ) / ( Min( CRS ,CRS ) - ( AMS * RRS ) ) ) ,( MRS * ( AMS + FirstVNF_RAM ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( ( ( ( RRSe + ( RCSe - CS ) ) - RMSe ) / Min( Max( ( MUC + RRSe ),MUM ) ,DS ) ) ,RRSe ) ),Min( Max( CS,RCSe ) ,( MUM / ( MUC - ( Max( ( MUM - MUR ),DS ) * ( MLU - RMSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM_Server - MDR ) * Min( FirstVNF_CPU_Server ,AMS ) ) - Max( RRS,ARS ) ) ) )", "choosing": "( ( DS - ( ( ( ( MLU - RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) / ( MUM - MUR ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.3643724696356275, "obj2": 0.4224191595643055}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( ( ( FirstVNF_CPU + RRS ) + AMS ) * MRS ) - MRS ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) / ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( DS / ( MUC * ( Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) * RMSe ) ) ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,Max( CS,( Max( MLU,( ( RRSe + MUR ) - MLU ) ) - MUC ) ) ) * ( ( DS + DS ) * ( DS * CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / DDR ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + ( CS * ( MUC / MUR ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.32321732765476163}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.49527392266218145}, {"determining": "( PN * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( DS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12391550941496265}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( BR + BR ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + MRS ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUR,MUM ) / Min( MUM ,RRSe ) ),( ( DS - MUR ) * MUR ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + RRSe ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.2146925022653264}, {"determining": "( ( DDR / AMS ) * ( ( ( DDR - Max( MDR,AMS ) ) / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( Max( RMSe,Min( MUR ,CS ) ) + RRSe ) / ( MUR / ( ( DS + MUM ) / ( MUC / RRSe ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.15586937487151117}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + ( ( AMS - RRS ) - Min( MDR ,( ( ( FirstVNF_Mem_Server * PN ) - PN ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe - CS ) / ( MUM + MLU ) ) ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.5325938875448374}, {"determining": "( Min( Const ,( Max( CRS,ACS ) + ( ACS * FirstVNF_RAM_Server ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( ( MLU / CS ) - ( CS / MLU ) ) ) ) ) ,( Min( Min( MLU ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.5070604285900143}, {"determining": "Min( ( Min( ACS ,( ( Min( ( FirstVNF_RAM_Server + CRS ) ,PN ) + DDR ) - ( RRS + MDR ) ) ) - ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( ( ( ( MUR + ( DS * MUR ) ) + RRSe ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,CS ),Max( RCSe,MUC ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + RRSe ) * ( DS + CS ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6093036993544662}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5506461320770512}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( ( ( RRSe + ( CS - RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( CS + RRSe ) ),( ( DS / DS ) + Max( MUC,MUR ) ) ) ) ) ,( ( Min( MUR ,RCSe ) / ( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( ( MUR / MUM ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5099436628397687}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + Max( ( RCSe + MUC ),( MUC + CS ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.030316325165430504}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( BR ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.16694556460227483}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.017018898875582195}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,MRS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( Min( Min( ( MUM + DS ) ,MLU ) ,RMSe ) * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.057807879630382975}, {"determining": "( Min( ( FirstVNF_Mem + ( PN + ( ( BR / Min( BR ,AMS ) ) - MDR ) ) ) ,Const ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( MUC + CS ) ) - ( CS * ( ( CS * MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.5707461294981699}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( ( MUM * MUR ) / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02346513635080615}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5993135827330318}, {"determining": "( ( ( DDR - AMS ) - ( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ) / ( DDR + DDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.1194331983805668, "obj2": 0.6811286209896449}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.402834008097166, "obj2": 0.3545310451498677}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.18679679242823174}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,( ( AMS / RRS ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5913471097358726}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( PN,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( ( MLU + RRSe ) * ( RRSe / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5257713491822894}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - Min( ( ( CRS * ( ( CRS - Const ) - ARS ) ) * AMS ) ,FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + ( MUM - RCSe ) ) ,Max( RMSe,( Max( CS,RCSe ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3274517282804939}, {"determining": "( ( ( ARS * ARS ) - BR ) * ( ARS + ( ( ( AMS * ( BR / ARS ) ) - FirstVNF_CPU ) + ( Max( CRS,Min( DDR ,ACS ) ) + AMS ) ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06772410533650071}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_RAM_Server - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / PN ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( RCSe,MUC ) / Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUR * Min( ( RCSe + CS ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2663291910547189}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) - ARS ) ,( ( Max( Min( ACS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( ( ( RMSe * ( CS + ( MUM / ( RMSe / MLU ) ) ) ) / MUC ) * Max( RCSe,RRSe ) ) )", "obj1": 0.5991902834008097, "obj2": 0.22969085436696082}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.6093117408906883, "obj2": 0.2194701291322666}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS / Max( MLU,RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3274517282804939}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) / Min( ( ( Min( MDR ,DDR ) - ( RRS * PN ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) ) ) - MRS ) * Max( MDR,CRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6279880257525995}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,( ( MUM * MUR ) / ( DS - MUR ) ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.16327838095328973}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( ( DDR / ARS ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( MLU - MUR ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + CS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_CPU_Server ,MRS ) ,( MDR / FirstVNF_Mem ) ) ) ) ,( ( DDR / Min( MDR ,AMS ) ) - AMS ) ),( PN + PN ) ) ) - ( PN + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( ( ( MLU / Min( RRSe ,MUC ) ) + RRSe ),( DS + MLU ) ) / MUM ),( MUC + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.3581538159867515}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( PN / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( DS + MLU ) ) / RCSe ),( MUC + CS ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5430973420281767}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5495924638464061}, {"determining": "( Min( Min( Const ,DDR ) ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.4230769230769231, "obj2": 0.3452210261853692}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6485711697868386}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( Max( MUR,( DS + MLU ) ) / RCSe ),( MUC + CS ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5430973420281767}, {"determining": "( ( PN - MRS ) - Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / Const ) + AMS ) ) ) ),FirstVNF_Mem ) )", "choosing": "( Max( MLU,DS ) - ( ( CS * Max( ( ( RCSe - MUR ) / DS ),MUC ) ) + Max( ( RCSe / RRSe ),( MUC + CS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4286763668878491}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.21486757392314762}, {"determining": "( Max( ( Const / FirstVNF_CPU_Server ),Const ) * Min( Max( Max( Min( ( Const * ARS ) ,DDR ),( MRS - RRS ) ),Min( CRS ,AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( FirstVNF_CPU_Server / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC * ( RRSe * Max( CS,( ( CS + MLU ) + ( ( Min( MUM ,MLU ) / Min( DS ,DS ) ) / ( ( RRSe / RMSe ) / RRSe ) ) ) ) ) ) / ( MUC / RRSe ) )", "obj1": 0.5101214574898786, "obj2": 0.3076806005873982}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( RCSe - MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.07036065114177775}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) * Min( ( FirstVNF_CPU_Server - ( CRS + AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ACS - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( Max( Min( FirstVNF_CPU_Server ,PN ),( ARS - Max( FirstVNF_Mem,BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + MUM ) + ( CS / ( MUC + MUC ) ) ) ) ) ,Min( DS ,RRSe ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( MDR * BR ) + ( Min( Max( MDR,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( ( ( ( ( ( CS * DS ) + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ),MLU ) - ( CS + Min( ( RMSe * DS ) ,MUR ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5295056956860948}, {"determining": "( ( ( Const / MDR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( Const * FirstVNF_CPU ) / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + ( RMSe / RCSe ) ) * ( Max( RMSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.29199310322692573}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.0931174089068826, "obj2": 0.701915776482847}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2620250233844781}, {"determining": "( Min( Min( Const ,DDR ) ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.4230769230769231, "obj2": 0.3452210261853692}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43517596578511575}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN / ( ( ( Const / PN ) / Const ) * ( MDR + FirstVNF_CPU ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM - MUR ) / ( DS - Max( Max( MUC,Max( Max( CS,RMSe ),RCSe ) ),CS ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5758498829023866}, {"determining": "Max( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( BR + PN ) ) ),Max( ( Min( FirstVNF_CPU ,RRS ) + ( Const * FirstVNF_Mem_Server ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU ,DDR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7201205073567988}, {"determining": "Min( ( ( ACS - MRS ) + FirstVNF_RAM ) ,Min( Min( AMS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "Min( ( RMSe - ( ( RMSe - ( MUM / MUM ) ) + ( MLU / ( ( ( RCSe - MUM ) / MLU ) + ( MUC + RRSe ) ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.854251012145749, "obj2": 0.05433466069750226}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,AMS )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7096193655827975}, {"determining": "( ( Max( MDR,RRS ) - Const ) * Min( Max( Max( ( FirstVNF_Mem_Server / RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( RRS - MDR ) ) - Min( ( ARS - Min( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( DS ,Max( MUC,DS ) ) - Max( ( RCSe / MUC ),Max( ( Min( DS ,MUR ) / ( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.24696272668862962}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM * ( BR / ( PN - DDR ) ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.005060212098642812}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM * ( BR / ( PN - DDR ) ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) - ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( Max( MUM,MLU ) + ( CS + MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( MUM - MUC ) )", "obj1": 0.9757085020242915, "obj2": 0.010561802352213366}, {"determining": "Min( ( ( DDR * FirstVNF_CPU_Server ) / Min( ACS ,( Min( Const ,DDR ) - ( RRS + BR ) ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + ( ACS * FirstVNF_RAM_Server ) ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( MUM - Max( CS,( MUR - ( RRSe + Min( DS ,MUC ) ) ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6024447673580438}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( Min( ACS ,PN ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe + ( RMSe * Max( Min( Max( ( CS / MUC ),RCSe ) ,RMSe ),Max( CS,Max( Min( RMSe ,MUM ),RMSe ) ) ) ) ) * MUR ) )", "obj1": 0.5242914979757085, "obj2": 0.2948705082685714}, {"determining": "( Min( Max( FirstVNF_Mem,PN ) ,AMS ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.11355020363316307}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( BR / RRS ) - ( Max( AMS,BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS + AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - Max( DDR,ARS ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Min( Min( Max( ( Min( DS ,MLU ) / MUR ),( RMSe - ( DS + MUC ) ) ) ,( MLU / MLU ) ) ,CS ),Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.047073380373570096}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5823784364849128}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.49527392266218145}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.5707461294981699}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( Max( MUR,DS ) + MLU ) - ( CS * Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09535896481590386}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS + MDR ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.8481781376518218, "obj2": 0.05629372176633417}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( ( DDR + MRS ) - ( RRS - RRS ) ) - ( MDR * ( ( AMS / RRS ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( CS * DS ) ) / ( DS * Max( CS,Max( MUC,( MUC - ( CS / ( CS + RCSe ) ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5873769184147556}, {"determining": "( AMS * ( ( Min( ( MDR + FirstVNF_RAM ) ,MRS ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( CS / Min( DS ,MUR ) ) - ( RMSe + ( MUC * MUR ) ) )", "obj1": 0.7408906882591093, "obj2": 0.09971500824822825}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( BR + BR ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( FirstVNF_RAM ,( BR / FirstVNF_Mem_Server ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUR,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( Min( MUR ,RCSe ) - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.25277170946851446}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6377866294984557}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Max( MLU,RCSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6301922432897137}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( MRS / Max( MRS,FirstVNF_RAM ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.29199310322692573}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11578985752651562}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.684101582150794}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( FirstVNF_RAM_Server - ( ( ( FirstVNF_Mem_Server - MDR ) + ( CRS + CRS ) ) / ( ( PN * MRS ) + ( PN - FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.6952877719219173}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( DDR - AMS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( CS ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.562753036437247, "obj2": 0.2732475947292256}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5991902834008097, "obj2": 0.22969085436696082}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.10202976886139607}, {"determining": "Min( ( ( Min( MDR ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5787263581393746}, {"determining": "( ( Const / AMS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / Min( Const ,RRS ) ) ) ,RRS ) * FirstVNF_Mem ) )", "choosing": "( ( MUR * MUM ) / ( DS - Max( CS,( ( MUM - Max( RMSe,Max( DS,Min( MUC ,MUM ) ) ) ) + ( MUM - DS ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43517596578511575}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6401241155419306}, {"determining": "Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.6464499433828566}], "16": [{"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( Max( ( CS / MUC ),RCSe ) ,RMSe ) - ( CS / MLU ) ) ) ) ) ,( Min( Min( MLU ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( FirstVNF_RAM / FirstVNF_CPU ) ) - ( RRS * MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RRSe ,MUR ) ) ) ) + Max( ( RCSe / MUR ),( ( Min( RRSe ,MUR ) - Min( MUC ,( MLU + RMSe ) ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM_Server - MDR ) * Min( FirstVNF_CPU_Server ,AMS ) ) - Max( RRS,ARS ) ) ) )", "choosing": "( ( DS - ( ( ( ( MLU - RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) / ( MUM - MUR ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.3643724696356275, "obj2": 0.4224191595643055}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.49527392266218145}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) ) )", "obj1": 0.6983805668016194, "obj2": 0.1558207222494684}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,MLU ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.31970425566859606}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / Max( FirstVNF_Mem,( PN + PN ) ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / CS )", "obj1": 0.7854251012145749, "obj2": 0.09010105589617165}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.791497975708502, "obj2": 0.07959084192429189}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( Max( RRSe,( CS + CS ) ) ,MUR ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.20947141740775918}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7004048582995951, "obj2": 0.1285846170884372}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5991902834008097, "obj2": 0.22825939699200648}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6108916667067832}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,( ( MUM * MUR ) / ( DS - MUR ) ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.16327838095328973}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + Max( ( RCSe + MUC ),( MUC + CS ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.030316325165430504}, {"determining": "( ( DDR / AMS ) * ( ( ( DDR - Max( MDR,AMS ) ) / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( Max( RMSe,Min( MUR ,CS ) ) + RRSe ) / ( MUR / ( ( DS + MUM ) / ( MUC / RRSe ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + ( ( AMS - RRS ) - Min( MDR ,( ( ( FirstVNF_Mem_Server * PN ) - PN ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe - CS ) / ( MUM + MLU ) ) ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.5325938875448374}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.017018898875582195}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,MRS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( Min( Min( ( MUM + DS ) ,MLU ) ,RMSe ) * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.057807879630382975}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / ARS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7550607287449392, "obj2": 0.09407175933147385}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.54938897614296}, {"determining": "( Min( Const ,Min( FirstVNF_Mem ,( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - Max( CRS,CRS ) )", "choosing": "( ( MUM * MUR ) / ( ( ( Min( MUC ,RCSe ) / MUC ) / ( RMSe / CS ) ) - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5596558362771314}, {"determining": "( ( Max( MDR,RRS ) - Const ) * Min( Max( Max( ( FirstVNF_Mem_Server / RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( RRS - MDR ) ) - Min( ( ARS - Min( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( DS ,Max( MUC,DS ) ) - Max( ( RCSe / MUC ),Max( ( Min( DS ,MUR ) / ( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.24696272668862962}, {"determining": "( ( ( ARS * ARS ) - BR ) * ( ARS + ( ( ( AMS * ( BR / ARS ) ) - FirstVNF_CPU ) + ( Max( CRS,Min( DDR ,ACS ) ) + AMS ) ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06772410533650071}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( RCSe - MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8137651821862348, "obj2": 0.07089511090460661}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( PN / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5035808826023531}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.5661930966268343}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( Min( ACS ,PN ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ACS ) ) ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe + ( RMSe * Max( Min( Max( ( CS / MUC ),RCSe ) ,RMSe ),Max( CS,( MLU / CS ) ) ) ) ) * MUR ) )", "obj1": 0.5607287449392713, "obj2": 0.26969546591567617}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( FirstVNF_Mem / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) + ( ( CS / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6789993938343442}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( BR + BR ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( FirstVNF_RAM ,( BR / FirstVNF_Mem_Server ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUR,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( Min( MUR ,RCSe ) - ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( RCSe - DS ) * MUR ) * ( ( ( DS + DS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.25277170946851446}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,AMS )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7096193655827975}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.18679679242823174}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7000325751855445}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( Min( Const ,( MRS + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( FirstVNF_CPU - ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS * DS ) * ( DS + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5001883147490872}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Max( MLU,RCSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6301922432897137}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35671379377515183}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_RAM_Server - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / PN ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( RCSe,MUC ) / Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUR * Min( ( RCSe + CS ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2663291910547189}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( ( MUM * MUR ) / ( DS - MUR ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.030316325165430504}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( BR ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.16742729899638706}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "( Min( Const ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) - ( RRS + MDR ) )", "choosing": "( ( ( ( DS - MLU ) + RRSe ) * ( ( Max( Max( Min( MUC ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * Min( Max( RRSe,RCSe ) ,( ( MUR + MUM ) + ( CS / ( MUC + MUC ) ) ) ) ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6918442324154741}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6485711697868386}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2620250233844781}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( Min( Const ,Max( ( Min( PN ,MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ,( BR / DDR ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + ( ( Min( MUR ,( MUC / RMSe ) ) - ( ( ( MUR / CS ) * RRSe ) + DS ) ) * ( ( MLU + ( ( DS * RCSe ) + MUR ) ) + RMSe ) ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.3533877165651637}, {"determining": "Max( ( Max( ACS,FirstVNF_Mem ) / ( Max( ( FirstVNF_RAM_Server + ( BR / RRS ) ),FirstVNF_CPU ) - ( ARS + PN ) ) ),( ARS - ( FirstVNF_RAM - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( CS + DS ) / ( RMSe - MUM ) )", "obj1": 0.07489878542510121, "obj2": 0.7148159287967204}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.21486757392314762}, {"determining": "( Max( ( Const / FirstVNF_CPU_Server ),Const ) * Min( Max( Max( Min( ( Const * ARS ) ,DDR ),( MRS - RRS ) ),Min( CRS ,AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( FirstVNF_CPU_Server / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC * ( RRSe * Max( CS,( ( CS + MLU ) + ( ( Min( MUM ,MLU ) / Min( DS ,DS ) ) / ( ( RRSe / RMSe ) / RRSe ) ) ) ) ) ) / ( MUC / RRSe ) )", "obj1": 0.5101214574898786, "obj2": 0.3076806005873982}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS / Max( MLU,RCSe ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.3409037268975633}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( ( ( RRSe + ( CS - RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( CS + RRSe ) ),( ( DS / DS ) + Max( MUC,MUR ) ) ) ) ) ,( ( Min( MUR ,RCSe ) / ( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( ( MUR / MUM ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5099436628397687}, {"determining": "Min( ( ( ACS - MRS ) + FirstVNF_RAM ) ,Min( Min( AMS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "Min( ( RMSe - ( ( RMSe - ( MUM / MUM ) ) + ( MLU / ( ( ( RCSe - MUM ) / MLU ) + ( MUC + RRSe ) ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.854251012145749, "obj2": 0.05433466069750226}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.19542002576135903}, {"determining": "( Min( ( ( ( ( RRS - ACS ) / MRS ) - BR ) - CRS ) ,Max( ( PN + PN ),( ( ARS - Min( FirstVNF_Mem_Server ,( ( AMS - RRS ) / DDR ) ) ) / ( ( DDR / Min( MDR ,CRS ) ) - ACS ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( MUM + RCSe ) - CS ) ,Max( RMSe,( DS / Max( MLU,( ( MUR + MUM ) - CS ) ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.3336104582425773}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1669455646022748}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6401241155419306}, {"determining": "( Min( Max( FirstVNF_Mem,PN ) ,AMS ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.11128869433177287}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( ( MUM * MUR ) / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02346513635080615}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43517596578511575}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / ( ( RRS + MDR ) - Min( MDR ,CRS ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5234637226578152}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4352226720647773, "obj2": 0.3350210534403407}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( ( PN - FirstVNF_CPU_Server ),MDR ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( ( Max( Max( RMSe,MUC ),Min( CS ,RCSe ) ) / MLU ) - ( ( ( MUR - MUC ) - Min( DS ,CS ) ) * ( ( DS / MLU ) - ( MUC / DS ) ) ) ) ) ) - Max( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ),Max( RCSe,MUC ) ) ) ,( Min( ( MUR + RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5185459068101763}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) + BR ) ,Min( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) ,( RRS + MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( ( RRSe * RCSe ) - MUR ) )", "obj1": 0.17611336032388664, "obj2": 0.6059175579741557}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.4293865845130974}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5993135827330318}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.6093117408906883, "obj2": 0.2194701291322666}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + Max( ( RCSe + MUC ),( MUC + CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.02852645986767612}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11578985752651562}, {"determining": "Min( ( ( DDR * FirstVNF_CPU_Server ) / Min( ACS ,( Min( Const ,DDR ) - ( RRS + BR ) ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + ( ACS * FirstVNF_RAM_Server ) ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( MUM - Max( CS,( MUR - ( RRSe + Min( DS ,MUC ) ) ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6024447673580438}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( ( DDR + MRS ) - ( RRS - RRS ) ) - ( MDR * ( ( AMS / RRS ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( CS * DS ) ) / ( DS * Max( CS,Max( MUC,( MUC - ( CS / ( CS + RCSe ) ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5873769184147556}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( ( ( FirstVNF_CPU + RRS ) + AMS ) * MRS ) - MRS ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) / ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( DS / ( MUC * ( Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) * RMSe ) ) ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,Max( CS,( Max( MLU,( ( RRSe + MUR ) - MLU ) ) - MUC ) ) ) * ( ( DS + DS ) * ( DS * CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( MDR * BR ) + ( Min( Max( MDR,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( ( ( ( ( ( CS * DS ) + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ),MLU ) - ( CS + Min( ( RMSe * DS ) ,MUR ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5295056956860948}, {"determining": "( Min( Const ,Min( CRS ,Max( ( BR * BR ),FirstVNF_Mem ) ) ) - ( MDR + RRS ) )", "choosing": "( ( Min( Min( ( MUR * MUC ) ,RMSe ) ,( RCSe + RMSe ) ) * MUM ) / ( DS - Max( CS,Max( MUC,( Max( MLU,RCSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6301922432897137}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6377866294984557}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2620250233844781}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( Min( ACS ,FirstVNF_RAM ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( ( MUC * MUR ) + ( ( RCSe / ( CS * RRSe ) ) - RRSe ) ) ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5506461320770512}, {"determining": "( PN * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( DS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12391550941496265}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5993135827330318}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( ( DDR / ARS ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( MLU - MUR ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + CS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS + MDR ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.8481781376518218, "obj2": 0.05629372176633417}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) - ( RRS + MDR ) ) / BR ) / AMS ) * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( CRS / DDR ) ) ) ,( ( Max( Min( CRS ,DDR ),( BR - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / BR ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.684101582150794}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( PN - MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + ( CS * ( MUC / MUR ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.10200802712229223}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5781242294620957}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) * Min( ( FirstVNF_CPU_Server - ( CRS + AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( ACS - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( Max( Min( FirstVNF_CPU_Server ,PN ),( ARS - Max( FirstVNF_Mem,BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( ( DS + MUM ) + ( CS / ( MUC + MUC ) ) ) ) ) ,Min( DS ,RRSe ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}], "17": [{"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( ( ( ( ( RRS - ACS ) / MRS ) - BR ) - CRS ) ,Max( ( PN + PN ),( ( ARS - Min( FirstVNF_Mem_Server ,( ( AMS - RRS ) / DDR ) ) ) / ( ( DDR / Min( MDR ,CRS ) ) - ACS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUR - ( Min( Max( ( CS / MUC ),RCSe ) ,RMSe ) - ( CS / MLU ) ) ) ) ) ,( Min( Min( MLU ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM_Server - MDR ) * Min( FirstVNF_CPU_Server ,AMS ) ) - Max( RRS,ARS ) ) ) )", "choosing": "( ( DS - ( ( ( ( MLU - RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) / ( MUM - MUR ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.3643724696356275, "obj2": 0.4224191595643055}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.4927430735791876}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( ( ( FirstVNF_CPU + RRS ) + AMS ) * MRS ) - MRS ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) / ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( DS / ( MUC * ( Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) * RMSe ) ) ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,Max( CS,( Max( MLU,( ( RRSe + MUR ) - MLU ) ) - MUC ) ) ) * ( ( DS + DS ) * ( DS * CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) )", "obj1": 0.9210526315789473, "obj2": 0.04297695974758153}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( ( ARS * ARS ) / Min( Min( ( ( ( FirstVNF_CPU_Server * PN ) - ( RRS + BR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( MUM - ( CS + Min( ( ( MLU / ( RRSe - MUC ) ) - Min( Min( ( ( CS - MLU ) / MUR ) ,Max( ( RCSe - CS ),DS ) ) ,CS ) ) ,MUM ) ) )", "obj1": 0.9574898785425101, "obj2": 0.015102351437354803}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6766959727975449}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( DS ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9919028340080972, "obj2": 0.009564013940813625}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe + CS ) / MUR ) ) ) ) )", "obj1": 0.6983805668016194, "obj2": 0.1558207222494684}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - ( RRS - ARS ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / ( Min( ( RRSe * RRSe ) ,MUC ) + CS ) ),Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( MUC * MUR ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7004048582995951, "obj2": 0.1285846170884372}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6108916667067832}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / ( BR / DDR ) ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUC ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08490348884161998}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.5231634519580093}, {"determining": "( Min( Const ,( ( ( Const / Min( ( MDR + RRS ) ,RRS ) ) / RRS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( MUC - ( RRSe + RMSe ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( AMS - RRS ) / Min( FirstVNF_CPU_Server ,AMS ) ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( CS + Min( DS ,MUR ) ) / Max( MLU,( ( RRSe + MUM ) - CS ) ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3308721320643334}, {"determining": "( ( Max( MDR,RRS ) - Const ) * Min( Max( Max( ( FirstVNF_Mem_Server / RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( RRS - MDR ) ) - Min( ( ARS - Min( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( DS ,Max( MUC,DS ) ) - Max( ( RCSe / MUC ),Max( ( Min( DS ,MUR ) / ( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.24696272668862962}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( PN / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( RCSe ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.20134157917614648}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + ( ( AMS - RRS ) - Min( MDR ,( ( ( FirstVNF_Mem_Server * PN ) - PN ) - Min( ( FirstVNF_Mem * MRS ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Min( RRSe ,( ( RRSe - CS ) / ( MUM + MLU ) ) ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.5325938875448374}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6401241155419306}, {"determining": "( ( DDR / AMS ) * ( ( ( DDR - Max( MDR,AMS ) ) / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( Max( RMSe,Min( MUR ,CS ) ) + RRSe ) / ( MUR / ( ( DS + MUM ) / ( MUC / RRSe ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.31219387867658877}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.18679679242823174}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( ( ( DDR - AMS ) - BR ) - ( BR / MRS ) ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( Max( RRSe,( CS + CS ) ) ,MUR ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.20947141740775918}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( MDR / ( Max( ARS,FirstVNF_Mem ) / AMS ) ) - MDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( MUC,MLU ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUM * ( DS / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6288743010635093}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,( ( MUM * MUR ) / ( DS - MUR ) ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.16327838095328973}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,MDR ) - MDR ) ) ) ) - ( ARS + MDR ) )", "choosing": "Min( ( ( ( RMSe + MUR ) + ( ( Max( Max( MLU,( MUR / MLU ) ),MUR ) / MUR ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6897313280794515}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( Min( ACS ,FirstVNF_RAM ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( ( MUC * MUR ) + ( ( RCSe / ( CS * RRSe ) ) - RRSe ) ) ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5506461320770512}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ,Max( CRS,FirstVNF_Mem ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( MLU - DS ) + Min( MUR ,DS ) ) )", "obj1": 0.7975708502024291, "obj2": 0.0770011489648725}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( MDR ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( RCSe - DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5469368281057306}, {"determining": "Min( ( ( ACS - MRS ) + FirstVNF_RAM ) ,Min( Min( AMS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "Min( ( RMSe - ( ( RMSe - ( MUM / MUM ) ) + ( MLU / ( ( ( RCSe - MUM ) / MLU ) + ( MUC + RRSe ) ) ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.854251012145749, "obj2": 0.05433466069750226}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS / Max( MLU,RCSe ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.3409037268975633}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5991902834008097, "obj2": 0.22825939699200648}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( BR ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.16742729899638706}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5156009997820212}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( AMS - RRS ) / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS / Max( MLU,( ( RRSe + MUM ) - CS ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.31284278987399095}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( ( BR - Max( DDR,PN ) ) - DDR ) )", "choosing": "( MUR - ( ( ( MUM * MUR ) / ( ( ( ( CS / ( DS + RRSe ) ) / Min( MUC ,DS ) ) * ( MUR / RMSe ) ) - MUR ) ) + ( ( RCSe / MUC ) * ( MUC + CS ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.030316325165430504}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,BR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( RCSe ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6376477472246959}, {"determining": "( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) - ( DS * ( ( CS + MLU ) + ( MUM * DS ) ) ) ) / Max( RCSe,MLU ) ) ) - Max( CS,DS ) )", "obj1": 0.5566801619433198, "obj2": 0.27090998678070594}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_Mem_Server / DDR ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / ARS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7550607287449392, "obj2": 0.09407175933147385}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.569994206004948}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,MRS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( Min( Min( ( MUM + DS ) ,MLU ) ,RMSe ) * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.057807879630382975}, {"determining": "( Min( Min( ACS ,Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( Min( ARS ,ARS ) / Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * RCSe ) - ( CS * ( ( CS + MLU ) + Max( MUM,( ( MUM * MUR ) / ( DS - MUR ) ) ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.1594730577263883}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / MUM ) ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.3611786487205775}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.16693842324883723}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( ( ( RRSe + ( CS - RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( CS + RRSe ) ),( ( DS / DS ) + Max( MUC,MUR ) ) ) ) ) ,( ( Min( MUR ,RCSe ) / ( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( ( MUR / MUM ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5099436628397687}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.5661930966268343}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,DDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / ( MUM + RRSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.32388663967611336, "obj2": 0.49702342627784085}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS + MDR ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.8481781376518218, "obj2": 0.05629372176633417}, {"determining": "( ( ( ARS * ARS ) - BR ) * ( ARS + ( ( ( AMS * ( BR / ARS ) ) - FirstVNF_CPU ) + ( Max( CRS,Min( DDR ,ACS ) ) + AMS ) ) ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06772410533650071}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.49984115841141313}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.43517596578511575}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + Max( ( RCSe + MUC ),( MUC + CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.02852645986767612}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35671379377515183}, {"determining": "( Min( Const ,Min( FirstVNF_Mem ,( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - Max( CRS,CRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.728744939271255, "obj2": 0.11363850006384166}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_RAM_Server - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / PN ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / BR ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( RCSe,MUC ) / Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUR * Min( ( RCSe + CS ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2663291910547189}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6485711697868386}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / RRS ) ) ) - PN ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( RCSe,Min( MUR ,RCSe ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) / ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.26207879584433913}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4352226720647773, "obj2": 0.3350210534403407}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( ( RCSe - MUM ) / Max( ( MUM * MUR ),RCSe ) ) ) )", "obj1": 0.7813765182186235, "obj2": 0.08426817666364636}, {"determining": "( Min( Const ,Max( ( Min( PN ,MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ,( BR / DDR ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + ( ( Min( MUR ,( MUC / RMSe ) ) - ( ( ( MUR / CS ) * RRSe ) + DS ) ) * ( ( MLU + ( ( DS * RCSe ) + MUR ) ) + RMSe ) ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.32172927990403166}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.31403000606176}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / DDR ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.3533877165651637}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5596558362771314}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5993135827330318}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "( Min( Const ,Max( ( Min( PN ,MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ,( BR / DDR ) ) * Min( ( ( MRS / MDR ) - Max( BR,FirstVNF_RAM ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * AMS ) ) ) ),( PN + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( DS,DS ) + Max( MUC,( MUR - MUR ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11578985752651562}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.5802182259114594}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( ( DDR + MRS ) - ( RRS - RRS ) ) - ( MDR * ( ( AMS / RRS ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( CS * DS ) ) / ( DS * Max( CS,Max( MUC,( MUC - ( CS / ( CS + RCSe ) ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5873769184147556}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.4293865845130974}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,AMS )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7096193655827975}, {"determining": "( Max( ( Const / FirstVNF_CPU_Server ),Const ) * Min( Max( Max( Min( ( Const * ARS ) ,DDR ),( MRS - RRS ) ),Min( CRS ,AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( FirstVNF_CPU_Server / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC * ( RRSe * Max( CS,( ( CS + MLU ) + ( ( Min( MUM ,MLU ) / Min( DS ,DS ) ) / ( ( RRSe / RMSe ) / RRSe ) ) ) ) ) ) / ( MUC / RRSe ) )", "obj1": 0.5101214574898786, "obj2": 0.3076806005873982}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.791497975708502, "obj2": 0.07959084192429189}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / ( ( Const + MDR ) + Min( MDR ,CRS ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( ( MUC - Max( DS,( RCSe - MUC ) ) ) ,( RCSe * RRSe ) ) ) / ( DS - Max( CS,Max( MUC,( ( RMSe / RCSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5771080360089873}, {"determining": "( PN * Min( Max( Max( Min( AMS ,DDR ),Min( BR ,PN ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( MDR ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUR / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) * ( MLU + RRSe ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( MUM / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.1218421581017399}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - Min( Min( Min( ( Const / AMS ) ,CRS ) ,( ARS + ( ACS * AMS ) ) ) ,CRS ) ),( PN + DDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR * Min( ( RMSe * MUC ) ,( RMSe + ( RMSe / ( MLU * RCSe ) ) ) ) ) / ( DS - Max( ( RCSe - RMSe ),( CS / RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.6967962192592069}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( Const ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),Max( MUC,( ( ( MUM + RRSe ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.225475314966941}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.4293865845130974}, {"determining": "( Min( Const ,Min( FirstVNF_Mem ,( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - Max( CRS,CRS ) )", "choosing": "( ( MUM * MUR ) / ( ( ( Min( MUC ,RCSe ) / MUC ) / ( RMSe / CS ) ) - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5596558362771314}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + RRS ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( ( CS / ( CS * RRSe ) ) / RRSe ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.656146406302671}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5993135827330318}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.6093117408906883, "obj2": 0.21933290946567768}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7000325751855445}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * ( ( DDR / ARS ) * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MUM,DS ) * ( CS + ( MLU - MUR ) ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( DS + CS ) * ( DS + CS ) ) + CS ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.18865282040599188}], "18": [{"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( ( ( ( ( RRS - ACS ) / MRS ) - BR ) - CRS ) ,Max( ( PN + PN ),( ( ARS - Min( FirstVNF_Mem_Server ,( ( AMS - RRS ) / DDR ) ) ) / ( ( DDR / Min( MDR ,CRS ) ) - ACS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( RRS - ACS ) / MRS ) - BR ) - CRS ) ,Max( ( PN + PN ),( ( ARS - Min( FirstVNF_Mem_Server ,( ( AMS - RRS ) / DDR ) ) ) / ( ( DDR / Min( MDR ,CRS ) ) - ACS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.3643724696356275, "obj2": 0.4224191595643055}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ,( BR / DDR ) ) * FirstVNF_Mem ) + ( ( BR / ( ( RRS + MDR ) - Min( MDR ,CRS ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.32388663967611336, "obj2": 0.48690918320486654}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49071842975821234}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem - ACS ) / DDR ) ) ) ,( ACS - ( DDR / Min( MDR ,CRS ) ) ) ),( PN + PN ) ) ) - ( RRS + MRS ) )", "choosing": "( ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - DS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( ( RCSe * MUM ) * MUR ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + ( ARS + ARS ) ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) * ( ( Const / FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( Max( ( Min( MUM ,( ( ( CS + RCSe ) / Min( MUR ,MUM ) ) / MUC ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( ( RCSe / MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.6821862348178138, "obj2": 0.15794721457666222}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( Min( MUC ,RCSe ) - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.18697215478481546}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( RMSe / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.20882692598187277}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.9210526315789473, "obj2": 0.031085352014553643}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( DDR,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.694331983805668, "obj2": 0.1304800287465367}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ,Max( CRS,FirstVNF_Mem ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( ( MLU - DS ) + Min( MUR ,DS ) ) )", "obj1": 0.7975708502024291, "obj2": 0.0770011489648725}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6108916667067832}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( ( BR / Min( Min( MDR ,AMS ) ,AMS ) ) - MDR ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( RRSe + ( RCSe - CS ) ) * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.97165991902834, "obj2": 0.009044592746516651}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6766959727975449}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem / RRS ) ) ,AMS ) ,( FirstVNF_Mem_Server - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS * Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( RCSe * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06691505947119801}, {"determining": "( Max( ( Const / FirstVNF_CPU_Server ),Const ) * Min( Max( Max( Min( ( Const * ARS ) ,DDR ),( MRS - RRS ) ),Min( CRS ,AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( FirstVNF_CPU_Server / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC * ( RRSe * Max( CS,( ( CS + MLU ) + ( ( Min( MUM ,MLU ) / Min( DS ,DS ) ) / ( ( RRSe / RMSe ) / RRSe ) ) ) ) ) ) / ( MUC / RRSe ) )", "obj1": 0.5101214574898786, "obj2": 0.3076806005873982}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / RRS ) ) ) - PN ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( RCSe,Min( MUR ,RCSe ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) / ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.26207879584433913}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - Max( FirstVNF_CPU,( PN / RRS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Max( MUM,RRSe ) ),Min( Min( MUR ,RCSe ) ,( CS - ( Min( MUM ,MLU ) / DS ) ) ) ) + ( MLU + DS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.5910931174089069, "obj2": 0.25269219732654685}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.18679679242823174}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( Min( Const ,( ( ( Const / Min( ( MDR + RRS ) ,RRS ) ) / RRS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( MUC - ( RRSe + RMSe ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "( ( Max( MDR,RRS ) - Const ) * Min( Max( Max( ( FirstVNF_Mem_Server / RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( RRS - MDR ) ) - Min( ( ARS - Min( Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( DS ,Max( MUC,DS ) ) - Max( ( RCSe / MUC ),Max( ( Min( DS ,MUR ) / ( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.24696272668862962}, {"determining": "( Min( Const ,Max( Max( FirstVNF_CPU,Min( PN ,CRS ) ),( PN + PN ) ) ) - ( FirstVNF_Mem + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( MUM,Min( MUR ,MUR ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( ( ( MLU - Max( ( MUM / RCSe ),RMSe ) ) - ( ( RRSe + MUM ) * Min( MLU ,( RMSe * DS ) ) ) ) + CS ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30903635746644564}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( MDR / ( Max( ARS,FirstVNF_Mem ) / AMS ) ) - MDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( MUC,MLU ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUM * ( DS / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6288743010635093}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5318962615314411}, {"determining": "( ( ( ARS * BR ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,MRS ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,( Const + FirstVNF_Mem_Server ) ) ) ,( ( DDR / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Min( MUM ,MLU ) / RMSe ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0070169412298563705}, {"determining": "( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) - ( DS * ( ( CS + MLU ) + ( MUM * DS ) ) ) ) / Max( RCSe,MLU ) ) ) - Max( CS,DS ) )", "obj1": 0.5566801619433198, "obj2": 0.27090998678070594}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ARS ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - Max( ( ( Max( MDR,RRS ) * ACS ) + ( MDR - MRS ) ),Const ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( MUC / ( MUR / CS ) ) / ( Min( CS ,( RMSe - MUC ) ) * MUR ) ) ) - ( CS + Min( DS ,MLU ) ) )", "obj1": 0.771255060728745, "obj2": 0.08767902839537149}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - ( RRS - ARS ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / ( Min( ( RRSe * RRSe ) ,MUC ) + CS ) ),Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) ) - MDR ),( PN + RRS ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + ( MLU / ( ( DS - ( MLU * MUC ) ) + RCSe ) ) ),( ( RRSe * MUR ) / RRSe ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6445172158325712}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4352226720647773, "obj2": 0.3350210534403407}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.601688836271758}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.854251012145749, "obj2": 0.05169606486236469}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4251012145748988, "obj2": 0.3395453259377274}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.5991902834008097, "obj2": 0.22825939699200648}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6401241155419306}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,( MRS * FirstVNF_RAM_Server ) ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - ACS ) )", "choosing": "( RMSe - ( ( Min( MUC ,( ( DS - DS ) - MUR ) ) / ( DS - MUR ) ) + ( ( RCSe + MUC ) * ( MUC + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02485500523632267}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ) ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * Max( RMSe,( DS / Max( MLU,RCSe ) ) ) ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5976838851426359}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / DDR ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.3533877165651637}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - Min( Min( Min( ( Const / AMS ) ,CRS ) ,( ARS + ( ACS * AMS ) ) ) ,CRS ) ),( PN + DDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR * Min( ( RMSe * MUC ) ,( RMSe + ( RMSe / ( MLU * RCSe ) ) ) ) ) / ( DS - Max( ( RCSe - RMSe ),( CS / RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.6967962192592069}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / ( ( Const + MDR ) + Min( MDR ,CRS ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( ( MUC - Max( DS,( RCSe - MUC ) ) ) ,( RCSe * RRSe ) ) ) / ( DS - Max( CS,Max( MUC,( ( RMSe / RCSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5771080360089873}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( Min( ACS ,FirstVNF_RAM ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( ( MUC * MUR ) + ( ( RCSe / ( CS * RRSe ) ) - RRSe ) ) ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5506461320770512}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.31403000606176}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( BR ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RCSe * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.16742729899638706}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( ( MUM * MUR ) / ( DS - MUR ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.02790084013916498}, {"determining": "( ( ARS * ARS ) / Min( Min( ( ( ( FirstVNF_CPU_Server * PN ) - ( RRS + BR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( MUM - ( CS + Min( ( ( MLU / ( RRSe - MUC ) ) - Min( Min( ( ( CS - MLU ) / MUR ) ,Max( ( RCSe - CS ),DS ) ) ,CS ) ) ,MUM ) ) )", "obj1": 0.9574898785425101, "obj2": 0.015102351437354803}, {"determining": "( ( DDR - MDR ) / ( DDR + DDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( ( ( FirstVNF_CPU + RRS ) + AMS ) * MRS ) - MRS ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) / ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( DS / ( MUC * ( Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) * RMSe ) ) ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,Max( CS,( Max( MLU,( ( RRSe + MUR ) - MLU ) ) - MUC ) ) ) * ( ( DS + DS ) * ( DS * CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.569994206004948}, {"determining": "( ( ( Const / ( ( AMS / RRS ) - Min( Max( FirstVNF_Mem_Server,PN ) ,CRS ) ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( MDR ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),Max( AMS,FirstVNF_CPU ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),Min( MUC ,RRSe ) ) - ( DS * ( ( CS + MLU ) + ( MUM * MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( MLU + CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1024150738301505}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( MDR ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( RCSe - DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5469368281057306}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.5661930966268343}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.5802182259114594}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.3187193814470657}, {"determining": "( ( RRS + MDR ) - Min( Max( ( DDR + AMS ),BR ) ,( ( PN * Min( FirstVNF_CPU_Server ,AMS ) ) + ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6871117659056207}, {"determining": "( ( Const * ( ( FirstVNF_RAM_Server * Min( Max( ( Max( CRS,FirstVNF_Mem_Server ) + ( PN * ARS ) ),FirstVNF_RAM_Server ) ,MDR ) ) * FirstVNF_Mem ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( MUR / ( ( ( MUM - ( MUM * MUC ) ) + CS ) - Max( CS,( MUM / MLU ) ) ) ) ) / ( DS - MUR ) )", "obj1": 0.13360323886639677, "obj2": 0.6538772303160325}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( PN + PN ) + ( ( BR / Min( Max( FirstVNF_Mem,BR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( RCSe ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6376477472246959}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7000325751855445}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / RRS ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( DDR * PN ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( RCSe + RRSe ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7191462185311979}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.22408323978898093}, {"determining": "( PN * Min( Max( Max( Min( AMS ,DDR ),Min( BR ,PN ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( MDR ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUR / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) * ( MLU + RRSe ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( MUM / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.1218421581017399}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( DS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6322098629575836}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5596558362771314}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,MDR ) - MDR ) ) ) ) - ( ARS + MDR ) )", "choosing": "Min( ( ( ( RMSe + MUR ) + ( ( Max( Max( MLU,( MUR / MLU ) ),MUR ) / MUR ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6897313280794515}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7046971181123014}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / MUM ) ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.3611786487205775}, {"determining": "( Min( Const ,Max( Min( ( ( MRS * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,( ( ARS - RRS ) / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( ( FirstVNF_CPU_Server * ARS ) * BR ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - Min( RRSe ,MLU ) ) ,Max( ( Min( ( ( RMSe / Max( ( DS + DS ),Min( MLU ,DS ) ) ) * Min( MUC ,RMSe ) ) ,( MUM + ( ( Max( CS,RRSe ) / DS ) / ( MLU - CS ) ) ) ) / CS ),( DS / Max( MLU,( ( Max( ( RRSe / MUM ),( RCSe / RRSe ) ) * RCSe ) - ( RRSe + MUM ) ) ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.3323139724903043}, {"determining": "( AMS * ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU_Server ,AMS ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) / ARS ) )", "choosing": "( Max( ( Min( MUM ,DS ) / ( ( MLU + ( DS - ( RRSe - MLU ) ) ) + MUR ) ),RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7550607287449392, "obj2": 0.09407175933147385}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( ( DDR + MRS ) - ( RRS - RRS ) ) - ( MDR * ( ( AMS / RRS ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( CS * DS ) ) / ( DS * Max( CS,Max( MUC,( MUC - ( CS / ( CS + RCSe ) ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5873769184147556}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( RCSe - CS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6153846153846154, "obj2": 0.2105498392794092}, {"determining": "( Min( Const ,Max( ( ( PN - DDR ) - ( ( ( ARS / DDR ) + FirstVNF_CPU ) * MRS ) ),( PN + PN ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( ( RCSe + RMSe ) * ( Min( ( ( MUR / MUM ) + MUR ) ,Min( Min( RRSe ,MUC ) ,MUR ) ) / MUM ) ) + ( MUM - ( ( CS + MUR ) - DS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35666956813047324}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Min( ( DS * CS ) ,MUC ) / ( DS - Max( CS,Max( MUC,( ( ( MUM + RRSe ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06322080279788042}, {"determining": "( Min( Const ,( AMS + FirstVNF_RAM ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( ( CS * ( DS - MUM ) ) ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( ( RRSe / RRSe ) + DS ),RCSe ) + DS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11578985752651562}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5596558362771314}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.21733208045436928}, {"determining": "( Min( Const ,Min( FirstVNF_Mem ,( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) ) ) - Max( CRS,CRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( MUM + MUR ) ),RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.728744939271255, "obj2": 0.11363850006384166}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "( ( PN * PN ) / Min( Min( ( Max( DDR,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( MUR + ( CS * CS ) ) - CS ) ,Max( RMSe,( DS / Max( MUC,( ( RRSe + MUM ) - CS ) ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.057028894675276345}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( CRS * BR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( ( MUM - MLU ) * ( Min( RRSe ,RRSe ) - Max( ( ( MLU * MUR ) * DS ),CS ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( Min( RCSe ,( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7096193655827975}, {"determining": "Min( ( ( Min( MDR ,Min( ( ( DDR - AMS ) - ( ( AMS - BR ) - ( BR / MRS ) ) ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( PN - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS + MDR ) - Min( MDR ,CRS ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / ( DS - MUR ) )", "obj1": 0.8481781376518218, "obj2": 0.05629372176633417}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS / Max( MLU,RCSe ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12618499238247005}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) / BR ) - Min( ACS ,FirstVNF_Mem ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( RMSe / RMSe ) ) / ( DS - Max( CS,Max( ( ( MLU - ( MUM / ( RRSe - MUM ) ) ) + MLU ),( MUM * MUR ) ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12849435360665848}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.791497975708502, "obj2": 0.07959084192429189}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4316112880454189}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.8319838056680162, "obj2": 0.058792934106198035}], "19": [{"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) - DDR ) )", "choosing": "( ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) - ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( RRS - ACS ) / MRS ) - BR ) - CRS ) ,Max( ( PN + PN ),( ( ARS - Min( FirstVNF_Mem_Server ,( ( AMS - RRS ) / DDR ) ) ) / ( ( DDR / Min( MDR ,CRS ) ) - ACS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.36639676113360325, "obj2": 0.41996146599510187}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ,( BR / DDR ) ) * FirstVNF_Mem ) + ( ( BR / ( ( RRS + MDR ) - Min( MDR ,CRS ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( RCSe ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.32388663967611336, "obj2": 0.48690918320486654}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( MUR ,RCSe ) ,( Min( MUC ,RCSe ) - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.18697215478481546}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( ( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem ) ) * ( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( Min( Max( ( RMSe / MUC ),MLU ) ,RMSe ),MLU ) * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( ( ( FirstVNF_CPU + RRS ) + AMS ) * MRS ) - MRS ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) / ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( DS / ( MUC * ( Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) * RMSe ) ) ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,Max( CS,( Max( MLU,( ( RRSe + MUR ) - MLU ) ) - MUC ) ) ) * ( ( DS + DS ) * ( DS * CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.22059178149195935}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( ( RRS + MDR ) - Min( Const ,( Min( FirstVNF_Mem_Server ,( MDR / BR ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) - MDR ) ) ) ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MUR,RCSe ) ) ) * DS ) - DS ) + ( MUR - ( MUC * DS ) ) ) ) - ( CS + ( DS + MUR ) ) )", "obj1": 0.6255060728744939, "obj2": 0.20567736084325694}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.5910931174089069, "obj2": 0.25269219732654685}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS / MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( Min( Min( MLU ,CS ) ,MUC ) ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6086387737534137}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( ( RRS + MDR ) + FirstVNF_Mem_Server ) ) ,( PN - DDR ) )", "choosing": "( RMSe - ( ( Min( MUC ,( Max( MLU,RCSe ) - MLU ) ) / ( DS - MUR ) ) + Max( ( RCSe + MUC ),( MUC + CS ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.04269035248862988}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.3187193814470657}, {"determining": "( Max( ( Const / FirstVNF_CPU_Server ),Const ) * Min( Max( Max( Min( ( Const * ARS ) ,DDR ),( MRS - RRS ) ),Min( CRS ,AMS ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( FirstVNF_CPU_Server / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC * ( RRSe * Max( CS,( ( CS + MLU ) + ( ( Min( MUM ,MLU ) / Min( DS ,DS ) ) / ( ( RRSe / RMSe ) / RRSe ) ) ) ) ) ) / ( MUC / RRSe ) )", "obj1": 0.5101214574898786, "obj2": 0.3076806005873982}, {"determining": "( Min( Const ,( ( ( Const / Min( ( MDR + RRS ) ,RRS ) ) / RRS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( MUC - ( RRSe + RMSe ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "( ( Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,( ACS - ACS ) ) ) + ACS ) - ( MDR * Const ) )", "choosing": "( ( Min( RMSe ,Min( Max( ( RMSe - Max( CS,RRSe ) ),( MUC + ( CS + ( MUR - DS ) ) ) ) ,( MUM + ( MUC / ( MUM + Max( RCSe,RCSe ) ) ) ) ) ) - CS ) / ( DS - Max( CS,( DS + ( Min( MUC ,Max( RRSe,RRSe ) ) * DS ) ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.16809279604773616}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( DDR,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.694331983805668, "obj2": 0.1304800287465367}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( MDR / ( Max( ARS,FirstVNF_Mem ) / AMS ) ) - MDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Max( ( Min( MUM ,RRSe ) / Max( MUC,MLU ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUM * ( DS / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6288743010635093}, {"determining": "( ( Const * Max( ( ( MRS - PN ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ),( PN + PN ) ) ) - ( RRS - Min( AMS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( MUR,( ( ( MUC + MUC ) + RRSe ) - ( DS * ( MLU * RMSe ) ) ) ),Max( Max( Min( DS ,MUR ),( MUR + MUM ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3282148222216329}, {"determining": "( ( PN - Max( ( ( BR + FirstVNF_RAM_Server ) - RRS ),( ( ( AMS - Const ) / DDR ) - Min( ( DDR + Max( MDR,BR ) ) ,ARS ) ) ) ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) / ( RRS + MDR ) ) ,( ( ( ( CRS * MRS ) / FirstVNF_RAM ) + ( RRS / Const ) ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - Max( Min( ( ( MUC + ( CS * MUM ) ) * MUR ) ,MLU ),( ( RCSe * ( Min( ( RCSe + ( DS * MLU ) ) ,Min( RRSe ,CS ) ) + CS ) ) * Max( MUR,( MUR * ( ( ( MUM / DS ) - RCSe ) - MUM ) ) ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49071842975821234}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.5454228819260387}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4316112880454189}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "( Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + ( ARS + ARS ) ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) * ( ( Const / FirstVNF_CPU_Server ) - Const ) )", "choosing": "Min( Max( ( Min( MUM ,( ( ( CS + RCSe ) / Min( MUR ,MUM ) ) / MUC ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( ( RCSe / MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.6821862348178138, "obj2": 0.15794721457666222}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ARS ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - Max( ( ( Max( MDR,RRS ) * ACS ) + ( MDR - MRS ) ),Const ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( MUC / ( MUR / CS ) ) / ( Min( CS ,( RMSe - MUC ) ) * MUR ) ) ) - ( CS + Min( DS ,MLU ) ) )", "obj1": 0.771255060728745, "obj2": 0.08767902839537149}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( ( Const - Const ) - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + RRS ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.11182062478917686}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,RCSe ) ,( RCSe + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.21733208045436928}, {"determining": "( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) - ( DS * ( ( CS + MLU ) + ( MUM * DS ) ) ) ) / Max( RCSe,MLU ) ) ) - Max( CS,DS ) )", "obj1": 0.5566801619433198, "obj2": 0.27090998678070594}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.601648537372087}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.791497975708502, "obj2": 0.07959084192429189}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30903635746644564}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ARS ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( DS ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.2549199759086627}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5318962615314411}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.4898059188857081}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,Max( Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( AMS / FirstVNF_Mem_Server ) ) ,( PN - DDR ) ),( PN + ( ( ACS + Max( Const,AMS ) ) * FirstVNF_RAM_Server ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( CS - ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + MUM ) ) / ( ( RCSe / ( RCSe * RRSe ) ) / RRSe ) ) ) - ( DS * RCSe ) )", "obj1": 0.4048582995951417, "obj2": 0.35316126478448556}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( AMS + Min( ARS ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ,( PN - DDR ) )", "choosing": "( RMSe - ( ( ( ( DS / DS ) + Max( MUC,Min( MUM ,RRSe ) ) ) / ( DS - MUR ) ) + Max( ( RCSe + MUC ),( MUC + CS ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( Min( CRS ,Max( ( ( BR / ( PN + FirstVNF_CPU ) ) - MDR ),( PN + BR ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( ( MUC + MUR ),Min( MUR ,RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6745558977637727}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) ) - MDR ),( PN + RRS ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + ( MLU / ( ( DS - ( MLU * MUC ) ) + RCSe ) ) ),( ( RRSe * MUR ) / RRSe ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6445172158325712}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Const ) ) ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),( Max( RRSe,RCSe ) + ( RCSe / ( MUC - ( MUC / CS ) ) ) ) ) ,( RRSe / ( CS + Min( DS ,MLU ) ) ) )", "obj1": 0.854251012145749, "obj2": 0.051677898021958005}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07567954304951133}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( DS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6322098629575836}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / RRS ) ) ) - PN ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( RCSe,Min( MUR ,RCSe ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) / ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.26207879584433913}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.07049877211923798}, {"determining": "( Min( Const ,( AMS + FirstVNF_RAM ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( ( CS * ( DS - MUM ) ) ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( ( RRSe / RRSe ) + DS ),RCSe ) + DS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11578985752651562}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.9210526315789473, "obj2": 0.031085352014553643}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.9210526315789473, "obj2": 0.031085352014553643}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( MDR / MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( Max( RCSe,Min( MLU ,MUR ) ) + ( ( RRSe + CS ) / DS ) ) + MUC ) ,Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,DS ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) )", "obj1": 0.6700404858299596, "obj2": 0.16627982190352744}, {"determining": "( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,CRS ) - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( RRSe - Min( ( MUR * MUR ) ,( DS * MUC ) ) ),RMSe ) + CS ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.42935513370093636}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.242914979757085, "obj2": 0.5521944516001182}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - RRSe ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.26207879584433913}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.5802182259114594}, {"determining": "( Min( Const ,Max( Min( ( ( MRS * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,( ( ARS - RRS ) / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( ( FirstVNF_CPU_Server * ARS ) * BR ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - Min( RRSe ,MLU ) ) ,Max( ( Min( ( ( RMSe / Max( ( DS + DS ),Min( MLU ,DS ) ) ) * Min( MUC ,RMSe ) ) ,( MUM + ( ( Max( CS,RRSe ) / DS ) / ( MLU - CS ) ) ) ) / CS ),( DS / Max( MLU,( ( Max( ( RRSe / MUM ),( RCSe / RRSe ) ) * RCSe ) - ( RRSe + MUM ) ) ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.3323139724903043}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,DS ) ,( CS + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( MLU * MLU ) + ( CS - RRSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + ( MUM * MLU ) ) ) )", "obj1": 0.680161943319838, "obj2": 0.15981503944024594}, {"determining": "( ( Const * ( ( FirstVNF_RAM_Server * Min( Max( ( Max( CRS,FirstVNF_Mem_Server ) + ( PN * ARS ) ),FirstVNF_RAM_Server ) ,MDR ) ) * FirstVNF_Mem ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( MUR / ( ( ( MUM - ( MUM * MUC ) ) + CS ) - Max( CS,( MUM / MLU ) ) ) ) ) / ( DS - MUR ) )", "obj1": 0.13360323886639677, "obj2": 0.6538772303160325}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6363928204293681}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( RRS - FirstVNF_CPU_Server ) * ( Min( Const ,DDR ) - ( RRS + BR ) ) ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( DS ,Max( ( DS + MLU ),MUM ) ) - ( Max( Min( MUR ,MUM ),DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( DS,RCSe ) / Min( RRSe ,MUM ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.011975712979456316}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / ( ( Const + MDR ) + Min( MDR ,CRS ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( ( MUC - Max( DS,( RCSe - MUC ) ) ) ,( RCSe * RRSe ) ) ) / ( DS - Max( CS,Max( MUC,( ( RMSe / RCSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5771080360089873}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49071842975821234}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ) ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),Min( MUC ,RRSe ) ) - ( DS * ( ( CS + MLU ) + ( MUM * MLU ) ) ) ) / Max( MLU,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( MLU + CS ) + Max( MUM,RRSe ) ) ) )", "obj1": 0.20040485829959515, "obj2": 0.5946101717866671}, {"determining": "( PN * Min( Max( Max( Min( AMS ,DDR ),Min( BR ,PN ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( MDR ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUR / DS ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) ) / Max( MLU,RCSe ) ) * ( MLU + RRSe ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUM ) ) * ( ( CS + MLU ) + ( ( ( Max( MUM,DS ) * ( ( MUM / MLU ) + MLU ) ) * DS ) - DS ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.1218421581017399}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,MDR ) - MDR ) ) ) ) - ( ARS + MDR ) )", "choosing": "Min( ( ( ( RMSe + MUR ) + ( ( Max( Max( MLU,( MUR / MLU ) ),MUR ) / MUR ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6897313280794515}, {"determining": "( Min( Const ,Max( Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem - ACS ) / DDR ) ) ) ,( ACS - ( DDR / Min( MDR ,CRS ) ) ) ),( PN + PN ) ) ) - ( RRS + MRS ) )", "choosing": "( ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - DS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( ( RCSe * MUM ) * MUR ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RCSe + Max( MLU,MUM ) ) - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Min( RCSe ,MUC ),Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.27491571197423165}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,( MRS * FirstVNF_RAM_Server ) ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - ACS ) )", "choosing": "( RMSe - ( ( Min( MUC ,( ( DS - DS ) - MUR ) ) / ( DS - MUR ) ) + ( ( RCSe + MUC ) * ( MUC + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02485500523632267}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( ( BR / Min( Min( MDR ,AMS ) ,AMS ) ) - MDR ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( RRSe + ( RCSe - CS ) ) * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.97165991902834, "obj2": 0.009044592746516651}, {"determining": "( ( RRS + MDR ) - Min( Max( ( DDR + AMS ),BR ) ,( ( PN * Min( FirstVNF_CPU_Server ,AMS ) ) + ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6871117659056207}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( MRS - RRS ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / ARS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( RRSe * ( RMSe * ( MUR + RMSe ) ) ) ),RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09279748578749844}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( ( DDR + MRS ) - ( RRS - RRS ) ) - ( MDR * ( ( AMS / RRS ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,CRS ) ) ) ) ) ,( ACS - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( CS * DS ) ) / ( DS * Max( CS,Max( MUC,( MUC - ( CS / ( CS + RCSe ) ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5873769184147556}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7046971181123014}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.5661930966268343}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4251012145748988, "obj2": 0.3395453259377274}, {"determining": "( Min( Const ,Max( ( ( Max( Max( MRS,DDR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) / Min( ( MRS - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( Min( CS ,MLU ) / MUM ),Max( MUC,( ( MUR - ( RRSe + MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "Min( ( Min( ACS ,FirstVNF_RAM_Server ) + ( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( MUC,RCSe ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( RCSe - DS ) + Min( MUC ,RCSe ) ) ) ) ) ,( ( RMSe + Min( MUC ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.04401670633669897}, {"determining": "( Min( Const ,Min( Min( FirstVNF_CPU ,( ( Const + BR ) * ( ( MDR - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM - ACS ) + BR ) ) ) ) ,DDR ) ) - ( MDR + RRS ) )", "choosing": "( MUR - ( ( ( ( MUM / DS ) * CS ) + ( MUM * ( ( MUM - Max( ( DS - MUM ),( MUR * MUC ) ) ) + MUM ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6417759923420179}, {"determining": "( Min( Const ,Max( ( ( PN - DDR ) - ( ( ( ARS / DDR ) + FirstVNF_CPU ) * MRS ) ),( PN + PN ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( ( RCSe + RMSe ) * ( Min( ( ( MUR / MUM ) + MUR ) ,Min( Min( RRSe ,MUC ) ,MUR ) ) / MUM ) ) + ( MUM - ( ( CS + MUR ) - DS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35666956813047324}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),Max( FirstVNF_RAM_Server,DDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - ( DS + MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7120750763524585}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / DDR ) ) * FirstVNF_Mem ) ),Min( ( ARS - Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem - ACS ) / DDR ) ) ) ,( ACS - ( DDR / Min( MDR ,CRS ) ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + ( RRSe + MUM ) ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.07021503043397471}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - Min( Min( Min( ( Const / AMS ) ,CRS ) ,( ARS + ( ACS * AMS ) ) ) ,CRS ) ),( PN + DDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR * Min( ( RMSe * MUC ) ,( RMSe + ( RMSe / ( MLU * RCSe ) ) ) ) ) / ( DS - Max( ( RCSe - RMSe ),( CS / RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.6967962192592069}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / MUM ) ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.3611786487205775}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( Min( ACS ,FirstVNF_RAM ) + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( ( MUC * MUR ) + ( ( RCSe / ( CS * RRSe ) ) - RRSe ) ) ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5506461320770512}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - Max( FirstVNF_CPU,( PN / RRS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Max( MUM,RRSe ) ),Min( Min( MUR ,RCSe ) ,( CS - ( Min( MUM ,MLU ) / DS ) ) ) ) + ( MLU + DS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( MUR - ( ( ( MUM * MUR ) / ( DS - MUR ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.02790084013916498}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Min( ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.31471275701710905}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.12348178137651822, "obj2": 0.6608637640750503}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,( ( DS * CS ) / CS ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7085615169833364}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( MDR - CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,Max( Max( ( FirstVNF_Mem_Server + BR ),AMS ),DDR ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * Max( RMSe,( DS / Max( MLU,RCSe ) ) ) ) / ( DS - Max( CS,Max( Min( MUC ,RCSe ),( MUC + ( RMSe * ( ( MLU - MUM ) + MUM ) ) ) ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5976838851426359}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ),Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ) ,( ( Min( DDR ,AMS ) / ( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Max( BR,( ARS * FirstVNF_CPU_Server ) ) ) ) ,( ( DDR / ( ( BR / PN ) * FirstVNF_RAM ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( ( ( ( DS * DS ) * Min( ( MUM + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ),Max( Min( DS ,( ( CS / DS ) / MUM ) ),( MUM + MUR ) ) ) ) ) ,( Min( ( RCSe - CS ) ,Min( MUR ,RCSe ) ) * ( Max( MLU,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5726112609658308}], "20": [{"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( CRS ,Max( ( ( BR / ( PN + FirstVNF_CPU ) ) - MDR ),( PN + BR ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( ( MUC + MUR ),Min( MUR ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) - DDR ) )", "choosing": "( ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) - ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.36639676113360325, "obj2": 0.41996146599510187}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + ARS ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.47268550948866}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,RCSe ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6477732793522267, "obj2": 0.17099831220169248}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( ( BR / Min( Min( MDR ,AMS ) ,AMS ) ) - MDR ) - ( PN - DDR ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( RRSe + ( RCSe - MUR ) ) * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06557049263653296}, {"determining": "( ( RRS + MDR ) - Min( Const ,( Min( FirstVNF_Mem_Server ,( MDR / BR ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) - MDR ) ) ) ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MUR,RCSe ) ) ) * DS ) - DS ) + ( MUR - ( MUC * DS ) ) ) ) - ( CS + ( DS + MUR ) ) )", "obj1": 0.6255060728744939, "obj2": 0.20567736084325694}, {"determining": "Min( ( Min( ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUR ) )", "obj1": 0.6821862348178138, "obj2": 0.13831189179576955}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6219607516365243}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( RCSe - CS ) ,Max( RMSe,( DS / Max( MLU,( ( RRSe + MUM ) - CS ) ) ) ) )", "obj1": 0.582995951417004, "obj2": 0.25067204127221193}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.223762107774402}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS / MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( Min( Min( MLU ,CS ) ,MUC ) ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6086387737534137}, {"determining": "( Min( Const ,Max( ( ( FirstVNF_Mem_Server - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem ) ) ,( ( FirstVNF_Mem - MDR ) / FirstVNF_CPU ) ) - ( PN - MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( Max( Max( RMSe,( RCSe - Min( RMSe ,( RCSe - DS ) ) ) ),Max( ( MLU - ( ( CS - CS ) - Max( MUC,RCSe ) ) ),( Min( ( RCSe - RCSe ) ,Max( DS,RMSe ) ) + ( Max( MLU,MUR ) * RRSe ) ) ) ) * ( DS + CS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.30671954727387846}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( ( ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5242914979757085, "obj2": 0.2948705082685715}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.4898059188857081}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49071842975821234}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5203850452407746}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( PN,ARS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.21271721045081918}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.5661930966268343}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.3441295546558704, "obj2": 0.4372484094630589}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Const ) ) ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),( Max( RRSe,RCSe ) + ( RCSe / ( MUC - ( MUC / CS ) ) ) ) ) ,( RRSe / ( CS + Min( DS ,MLU ) ) ) )", "obj1": 0.854251012145749, "obj2": 0.051677898021958005}, {"determining": "( Min( CRS ,Max( ( ( BR / ( PN + FirstVNF_CPU ) ) - MDR ),( PN + BR ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( ( MUC + MUR ),Min( MUR ,RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6745558977637727}, {"determining": "( Min( MDR ,AMS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * RRS ) ) - FirstVNF_Mem ) ,AMS ) ,( MDR - PN ) ) )", "choosing": "Min( Max( ( ( RCSe / MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( MLU - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( ( RCSe - CS ) ,Min( MUR ,RCSe ) ) * ( ( DS + DS ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.854251012145749, "obj2": 0.051677898021958005}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,DS ) ,( CS + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( MLU * MLU ) + ( CS - RRSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + ( MUM * MLU ) ) ) )", "obj1": 0.680161943319838, "obj2": 0.15981503944024594}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( MRS - RRS ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / ARS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),( RRSe * ( RMSe * ( MUR + RMSe ) ) ) ),RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09266944682338649}, {"determining": "( Min( Const ,( ( ( Const / Min( ( MDR + RRS ) ,RRS ) ) / RRS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( MUC - ( RRSe + RMSe ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( ( ( FirstVNF_CPU + RRS ) + AMS ) * MRS ) - MRS ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) / ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( DS / ( MUC * ( Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) * RMSe ) ) ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,Max( CS,( Max( MLU,( ( RRSe + MUR ) - MLU ) ) - MUC ) ) ) * ( ( DS + DS ) * ( DS * CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.3187193814470657}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( RCSe - CS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6255060728744939, "obj2": 0.20567736084325694}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - Max( FirstVNF_CPU,( PN / RRS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Max( MUM,RRSe ) ),Min( Min( MUR ,RCSe ) ,( CS - ( Min( MUM ,MLU ) / DS ) ) ) ) + ( MLU + DS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( ( Const - Min( Max( Max( Const,Min( FirstVNF_CPU_Server ,Min( Max( CRS,ARS ) ,FirstVNF_Mem_Server ) ) ),PN ) ,AMS ) ) - ( RRS + MDR ) )", "choosing": "( ( RMSe * MUR ) / ( MUR * RRSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6356501177113827}, {"determining": "Min( Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,AMS ) ,( PN - MDR ) ) ,( PN - MDR ) )", "choosing": "( MUR - ( MUM / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.027443339516237064}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) ) - MDR ),( PN + RRS ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + ( MLU / ( ( DS - ( MLU * MUC ) ) + RCSe ) ) ),( ( RRSe * MUR ) / RRSe ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6445172158325712}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) * Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.26867794170212617}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4251012145748988, "obj2": 0.3395453259377274}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( ARS,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( RMSe ,( CS + Min( DS ,MUR ) ) ) + ( ( RCSe / Max( MUR,RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5580200412950924}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07567954304951133}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30903635746644564}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ),Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ) ,( ( Min( DDR ,AMS ) / ( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Max( BR,( ARS * FirstVNF_CPU_Server ) ) ) ) ,( ( DDR / ( ( BR / PN ) * FirstVNF_RAM ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( ( ( ( DS * DS ) * Min( ( MUM + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ),Max( Min( DS ,( ( CS / DS ) / MUM ) ),( MUM + MUR ) ) ) ) ) ,( Min( ( RCSe - CS ) ,Min( MUR ,RCSe ) ) * ( Max( MLU,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5465587044534413, "obj2": 0.2787668247497723}, {"determining": "( Min( Const ,Max( ( ( Max( Max( MRS,DDR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) / Min( ( MRS - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( Min( CS ,MLU ) / MUM ),Max( MUC,( ( MUR - ( RRSe + MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9068825910931174, "obj2": 0.03746995749219834}, {"determining": "( ( Max( ( BR / FirstVNF_Mem_Server ),Max( DDR,( ACS - ACS ) ) ) + ACS ) - ( MDR * Const ) )", "choosing": "( ( Min( RMSe ,Min( Max( ( RMSe - Max( CS,RRSe ) ),( MUC + ( CS + ( MUR - DS ) ) ) ) ,( MUM + ( MUC / ( MUM + Max( RCSe,RCSe ) ) ) ) ) ) - CS ) / ( DS - Max( CS,( DS + ( Min( MUC ,Max( RRSe,RRSe ) ) * DS ) ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.16809279604773616}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ARS ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - Max( ( ( Max( MDR,RRS ) * ACS ) + ( MDR - MRS ) ),Const ) ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( MUC / ( MUR / CS ) ) / ( Min( CS ,( RMSe - MUC ) ) * MUR ) ) ) - ( CS + Min( DS ,MLU ) ) )", "obj1": 0.771255060728745, "obj2": 0.08767902839537149}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Min( MDR ,MDR ) - ( ( ( ( BR + ( ( ( MRS + FirstVNF_Mem_Server ) + PN ) / FirstVNF_CPU ) ) - FirstVNF_CPU ) - FirstVNF_CPU ) + BR ) )", "choosing": "Min( Max( ( ( MUM - ( ( ( Max( RRSe,CS ) / RCSe ) - MLU ) * MUM ) ) / Max( RCSe,MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( CS * MUM ) ) * ( ( MUR + MUC ) + RCSe ) ) ) ) ) ) ,( ( RRSe + RMSe ) * ( Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) + ( DS + Max( Min( DS ,MUM ),Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.32303893571206094}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) - ARS ) ,( ( ( ( FirstVNF_Mem_Server - PN ) / BR ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) - PN ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.2554750496885781}, {"determining": "( Min( Const ,Min( Min( FirstVNF_CPU ,( ( Const + BR ) * ( ( MDR - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM - ACS ) + BR ) ) ) ) ,DDR ) ) - ( MDR + RRS ) )", "choosing": "( MUR - ( ( ( ( MUM / DS ) * CS ) + ( MUM * ( ( MUM - Max( ( DS - MUM ),( MUR * MUC ) ) ) + MUM ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6417759923420179}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( RCSe - CS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6153846153846154, "obj2": 0.2105498392794092}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "( Min( Const ,Max( Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( ( PN + PN ) + AMS ) ) ,( PN - FirstVNF_Mem_Server ) ),( PN + ( AMS * MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + MUM ) - MLU ) / ( ( RCSe / ( MLU * RRSe ) ) / ( MUM - RCSe ) ) ) ) - ( CS + ( ( DS / DS ) + Max( MUC,RCSe ) ) ) )", "obj1": 0.41700404858299595, "obj2": 0.35000519760496906}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( Min( Const ,DDR ) - ( RRS + BR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( DS / DS ) + Max( MUC,Min( MUM ,RRSe ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9574898785425101, "obj2": 0.015167897998761323}, {"determining": "( PN * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUR ) + ( ( Max( Max( MLU,( MUR / MLU ) ),MUR ) / MUR ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7044534412955465, "obj2": 0.13032781046834332}, {"determining": "( ( Const * ( ( FirstVNF_RAM_Server * Min( Max( ( Max( CRS,FirstVNF_Mem_Server ) + ( PN * ARS ) ),FirstVNF_RAM_Server ) ,MDR ) ) * FirstVNF_Mem ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( MUR / ( ( ( MUM - ( MUM * MUC ) ) + CS ) - Max( CS,( MUM / MLU ) ) ) ) ) / ( DS - MUR ) )", "obj1": 0.13360323886639677, "obj2": 0.6538772303160325}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.22059178149195935}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,Max( PN,RRS ) )", "choosing": "( Max( MLU,( Max( ( ( ( RMSe * MUC ) / MUC ) - Max( RMSe,MUM ) ),CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9149797570850202, "obj2": 0.033557854352415824}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( Min( Const ,DDR ) - ( RRS + MDR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( DS ,Max( ( DS + MLU ),MUM ) ) - ( Max( MUM,DS ) * ( ( MUR / MLU ) + MLU ) ) ) ) ),( Max( MUM,RCSe ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.005632790393227663}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - ( ( ARS - ( AMS / FirstVNF_Mem_Server ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( RCSe * RRSe ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7190218379229504}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.6997112555222078}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( Const - CRS ) ) ) - ( RRS + MDR ) )", "choosing": "( ( CS - RCSe ) - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RCSe * ( MLU * RRSe ) ) / RRSe ) / ( ( RRSe + MUM ) - MUR ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.575927299593765}, {"determining": "( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) - ( DS * ( ( CS + MLU ) + ( MUM * DS ) ) ) ) / Max( RCSe,MLU ) ) ) - Max( CS,DS ) )", "obj1": 0.5566801619433198, "obj2": 0.27090998678070594}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( RRS - FirstVNF_CPU_Server ) * ( Min( Const ,DDR ) - ( RRS + BR ) ) ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( MUR - ( Min( DS ,Max( ( DS + MLU ),MUM ) ) - ( Max( Min( MUR ,MUM ),DS ) * ( ( RMSe / MLU ) + MLU ) ) ) ) ),( Max( DS,RCSe ) / Min( RRSe ,MUM ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.011975712979456316}, {"determining": "( ( PN - Max( ( ( BR + FirstVNF_RAM_Server ) - RRS ),( ( ( AMS - Const ) / DDR ) - Min( ( DDR + Max( MDR,BR ) ) ,ARS ) ) ) ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) / ( RRS + MDR ) ) ,( ( ( ( CRS * MRS ) / FirstVNF_RAM ) + ( RRS / Const ) ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - Max( Min( ( ( MUC + ( CS * MUM ) ) * MUR ) ,MLU ),( ( RCSe * ( Min( ( RCSe + ( DS * MLU ) ) ,Min( RRSe ,CS ) ) + CS ) ) * Max( MUR,( MUR * ( ( ( MUM / DS ) - RCSe ) - MUM ) ) ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49071842975821234}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "( Min( Const ,Max( ( Const * FirstVNF_RAM ),( ( CRS - MRS ) - ( Min( Min( Min( PN ,MRS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) ) ) - ( RRS + ( DDR * ( ARS - AMS ) ) ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( MUC,RCSe ),Max( Max( Min( DS ,MUR ),( Min( MUM ,DS ) + MUR ) ),( Max( MUC,MUC ) + ( DS / DS ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,Min( Min( MUC ,Max( CS,RMSe ) ) ,MLU ) ) ) ) ) - Min( RCSe ,MUR ) )", "obj1": 0.43724696356275305, "obj2": 0.3385824606157717}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.601648537372087}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - DDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,MLU ) - ( CS + MLU ) )", "obj1": 0.4048582995951417, "obj2": 0.35259052036630295}, {"determining": "( Min( Const ,Max( Min( ( ( MRS * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,( ( ARS - RRS ) / DDR ) ) ) ,( ( DDR / Min( MDR ,CRS ) ) - ACS ) ),( ( FirstVNF_CPU_Server * ARS ) * BR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.9959514170040485, "obj2": 0.0012264170052681369}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( ( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem ) ) * ( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( Min( Max( ( RMSe / MUC ),MLU ) ,RMSe ),MLU ) * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4316112880454189}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RCSe + Max( MLU,MUM ) ) - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Min( RCSe ,MUC ),Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.27491571197423165}, {"determining": "( Min( Const ,( MDR + ( Max( ( FirstVNF_RAM_Server + MDR ),PN ) + ( ( DDR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RRSe - DS ) - ( CS + ( DS * MUR ) ) )", "obj1": 0.694331983805668, "obj2": 0.1304800287465367}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / ACS ) ) ) ,( ( Max( ( MRS - RRS ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / ARS ) )", "choosing": "( Max( RMSe,( DS / Max( MLU,( ( RRSe + MUM ) - CS ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09603778175887893}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,( MRS * FirstVNF_RAM_Server ) ) ,( AMS + FirstVNF_Mem_Server ) ) ,( PN - ACS ) )", "choosing": "( RMSe - ( ( Min( MUC ,( ( DS - DS ) - MUR ) ) / ( DS - MUR ) ) + ( ( RCSe + MUC ) * ( MUC + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02485500523632267}, {"determining": "( Min( Const ,Max( ( ( PN - DDR ) - ( ( ( ARS / DDR ) + FirstVNF_CPU ) * MRS ) ),( PN + PN ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( ( RCSe + RMSe ) * ( Min( ( ( MUR / MUM ) + MUR ) ,Min( Min( RRSe ,MUC ) ,MUR ) ) / MUM ) ) + ( MUM - ( ( CS + MUR ) - DS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35666956813047324}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( ( RRS * DDR ) / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,PN ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + MUC ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( MUC,RCSe ) + ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( Min( MUM ,MUR ),CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7813765182186235, "obj2": 0.08380183885890435}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.5454228819260387}, {"determining": "( ( RRS + MDR ) - Min( Max( ( DDR + AMS ),BR ) ,( ( PN * Min( FirstVNF_CPU_Server ,AMS ) ) + ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6871117659056207}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5802905626567706}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "Min( ( Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( MUM * Max( RMSe,( DS / Max( MLU,RCSe ) ) ) ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / ( CS + MLU ) ) ) ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.04106741853706667}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.5454228819260387}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( Max( ( Min( MUM ,( ( ( CS + RCSe ) / Min( MUR ,MUM ) ) / MUC ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( ( RCSe / MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.1607338040098713}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - Min( Min( Min( ( Const / AMS ) ,CRS ) ,( ARS + ( ACS * AMS ) ) ) ,CRS ) ),( PN + DDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUR * Min( ( RMSe * MUC ) ,( RMSe + ( RMSe / ( MLU * RCSe ) ) ) ) ) / ( DS - Max( ( RCSe - RMSe ),( CS / RRSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.6967962192592069}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( DS * Max( MUC,RCSe ) ) * DS ) - DS ) + ( RCSe - CS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7105263157894737, "obj2": 0.12548524335497477}, {"determining": "( Min( Const ,Max( ( ( CRS * MRS ) - ( Min( ( ( MDR * CRS ) * AMS ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( ( CS + RRSe ) ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Min( ( ( RCSe / ( MLU * RRSe ) ) / MLU ) ,RCSe ) ,( RCSe - CS ) ) * Max( RRSe,RCSe ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3355768282288814}, {"determining": "Min( Min( ( ARS - ( Max( BR,ACS ) * FirstVNF_CPU_Server ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ,( ( ( ACS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) - ( Const - ARS ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + CS ),MUM ) - ( Min( CS ,MUR ) * ( RMSe / DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11578985752651562}, {"determining": "( Min( Const ,( ( PN * Max( FirstVNF_CPU_Server,AMS ) ) + ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) * FirstVNF_Mem ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RMSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.42746143054791463}], "21": [{"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( ( RRS * DDR ) / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,PN ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + MUC ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( MUC,RCSe ) + ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( Min( MUM ,MUR ),CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ( ( BR / ( PN + FirstVNF_CPU ) ) - MDR ),( PN + BR ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( ( MUC + MUR ),Min( MUR ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + ARS ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.47268550948866}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.36639676113360325, "obj2": 0.41996146599510187}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( ( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem ) ) * ( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( Min( Max( ( RMSe / MUC ),MLU ) ,RMSe ),MLU ) * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6234817813765182, "obj2": 0.18837374391239167}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07567954304951133}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6219607516365243}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( DDR ,( MDR + ( PN + ( ( BR / ( CRS - DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( ( MUC * RRSe ) * MUM ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2440592720834737}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17601096640567293}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS / MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( Min( Min( MLU ,CS ) ,MUC ) ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6086387737534137}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * DS ) - DS ) + ( RCSe - CS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6153846153846154, "obj2": 0.2105498392794092}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.223762107774402}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( ( ( FirstVNF_CPU + RRS ) + AMS ) * MRS ) - MRS ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) / ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( DS / ( MUC * ( Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) * RMSe ) ) ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,Max( CS,( Max( MLU,( ( RRSe + MUR ) - MLU ) ) - MUC ) ) ) * ( ( DS + DS ) * ( DS * CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( ( BR / Min( Min( MDR ,AMS ) ,AMS ) ) - MDR ) - ( PN - DDR ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( RRSe + ( RCSe - MUR ) ) * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06555127845327667}, {"determining": "Min( ( Min( ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server - AMS ) ,FirstVNF_Mem ) ) + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( ( RRSe * ( MLU * Min( Max( RCSe,( MUR * MUC ) ) ,MLU ) ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUR ) )", "obj1": 0.6821862348178138, "obj2": 0.13831189179576955}, {"determining": "( ( Const - Min( Max( Max( Const,Min( FirstVNF_CPU_Server ,Min( Max( CRS,ARS ) ,FirstVNF_Mem_Server ) ) ),PN ) ,AMS ) ) - ( RRS + MDR ) )", "choosing": "( ( RMSe * MUR ) / ( MUR * RRSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6356501177113827}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( ( PN - Max( ( ( BR + FirstVNF_RAM_Server ) - RRS ),( ( ( AMS - Const ) / DDR ) - Min( ( DDR + Max( MDR,BR ) ) ,ARS ) ) ) ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) / ( RRS + MDR ) ) ,( ( ( ( CRS * MRS ) / FirstVNF_RAM ) + ( RRS / Const ) ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( MUR - Max( Min( ( ( MUC + ( CS * MUM ) ) * MUR ) ,MLU ),( ( RCSe * ( Min( ( RCSe + ( DS * MLU ) ) ,Min( RRSe ,CS ) ) + CS ) ) * Max( MUR,( MUR * ( ( ( MUM / DS ) - RCSe ) - MUM ) ) ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49071842975821234}, {"determining": "( ( Min( ACS ,Max( CRS,( DDR + MDR ) ) ) - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + RRSe ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - ( MUM + RRSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.48830720807021166}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5203850452407746}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( Min( Const ,Max( ( ( AMS - FirstVNF_Mem_Server ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( RCSe / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6708989320446914}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - Max( FirstVNF_CPU,( PN / RRS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Max( MUM,RRSe ) ),Min( Min( MUR ,RCSe ) ,( CS - ( Min( MUM ,MLU ) / DS ) ) ) ) + ( MLU + DS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( Min( Const ,DDR ) - ( RRS + BR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( ( CS + Min( DS ,MUR ) ) ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.011864660046936175}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,DS ) ,( CS + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( MLU * MLU ) + ( CS - RRSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + ( MUM * MLU ) ) ) )", "obj1": 0.680161943319838, "obj2": 0.15981503944024594}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11578985752651562}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "( Min( Const ,( ( ( Const / Min( ( MDR + RRS ) ,RRS ) ) / RRS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( MUC - ( RRSe + RMSe ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,RCSe ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6477732793522267, "obj2": 0.17099831220169248}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( DDR ,AMS ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) - ARS ) ,( ( ( ( FirstVNF_Mem_Server - PN ) / BR ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) - PN ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.2554750496885781}, {"determining": "( Min( Const ,( MDR + ( Max( ( FirstVNF_RAM_Server + MDR ),PN ) + ( ( DDR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RRSe - DS ) - ( CS + ( DS * MUR ) ) )", "obj1": 0.694331983805668, "obj2": 0.1304800287465367}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( PN,AMS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) )", "obj1": 0.6093117408906883, "obj2": 0.21427857661209376}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + ( FirstVNF_Mem_Server * MDR ) ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( ( ( MUM * MUR ) / ( DS - MUC ) ) * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.36639676113360325, "obj2": 0.41996146599510187}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - ( DDR / ( FirstVNF_RAM_Server * ( BR / ( RRS * DDR ) ) ) ) ) ,( MDR - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MLU,RRSe ) ) ) * DS ) - DS ) + ( RCSe - CS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7894736842105263, "obj2": 0.08126838313282216}, {"determining": "( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) - ( DS * ( ( CS + MLU ) + ( MUM * DS ) ) ) ) / Max( RCSe,MLU ) ) ) - Max( CS,DS ) )", "obj1": 0.5566801619433198, "obj2": 0.27090998678070594}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),( MLU * ( DS + MUM ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.16694248592256256}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) ) - MDR ),( PN + RRS ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + ( MLU / ( ( DS - ( MLU * MUC ) ) + RCSe ) ) ),( ( RRSe * MUR ) / RRSe ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6445172158325712}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.33171699246145353}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RCSe + Max( MLU,MUM ) ) - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Min( RCSe ,MUC ),Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.26099086042775355}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.31471275701710905}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30903635746644564}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,Max( PN,RRS ) )", "choosing": "( Max( MLU,( Max( ( ( ( RMSe * MUC ) / MUC ) - Max( RMSe,MUM ) ),CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9149797570850202, "obj2": 0.033557854352415824}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( ( Const - Const ) - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( RRS + FirstVNF_RAM_Server ) ) ) - ( RRS + CRS ) )", "choosing": "( ( MUM * Max( CS,Max( MUC,( MUM * ( CS * DS ) ) ) ) ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( Max( RCSe,( RMSe * RRSe ) ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.6948171243653628}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.3441295546558704, "obj2": 0.4372484094630589}, {"determining": "( Min( Const ,( ( ( CRS - Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - ( PN - MDR ) ) ) + ( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( ( Max( ( RRSe - MUR ),MUM ) + MUM ) * ( ( DS * CS ) * ( DS + DS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.30671954727387846}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4316112880454189}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.32560771212568634}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5802905626567706}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4251012145748988, "obj2": 0.3395453259377274}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( ( MUM * DS ) / Max( DS,( MUM / MLU ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( AMS * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( MRS - RRS ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / ARS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.11078754892246506}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( ( DDR * PN ) / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * MUC ) ) ) ) ) ,( RRSe / ( CS + Min( DS ,MLU ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01874383442471262}, {"determining": "( Min( Const ,Max( Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( ( PN + PN ) + AMS ) ) ,( PN - FirstVNF_Mem_Server ) ),( PN + ( AMS * MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + MUM ) - MLU ) / ( ( RCSe / ( MLU * RRSe ) ) / ( MUM - RCSe ) ) ) ) - ( CS + ( ( DS / DS ) + Max( MUC,RCSe ) ) ) )", "obj1": 0.41700404858299595, "obj2": 0.35000519760496906}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - DDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( MUM * MUR ) / ( DS - MUR ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.28532216473545946}, {"determining": "Min( ( Min( ACS ,( ( MDR / ( DDR * ( MRS * Max( RRS,FirstVNF_Mem_Server ) ) ) ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,( FirstVNF_Mem + ( PN + PN ) ) ) - Max( Const,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( CS,Min( CS ,RMSe ) ) ) + ( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe - ( ( MLU * RRSe ) / RCSe ) ) ) - ( Max( Min( DS ,( RCSe / MUC ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.600908446443351}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( ( Const * ( ( FirstVNF_RAM_Server * Min( Max( ( Max( CRS,FirstVNF_Mem_Server ) + ( PN * ARS ) ),FirstVNF_RAM_Server ) ,MDR ) ) * FirstVNF_Mem ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( MUR / ( ( ( MUM - ( MUM * MUC ) ) + CS ) - Max( CS,( MUM / MLU ) ) ) ) ) / ( DS - MUR ) )", "obj1": 0.13360323886639677, "obj2": 0.6538772303160325}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.029318872817724183}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.49071842975821234}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( PN + ( ( BR / Min( Min( FirstVNF_CPU_Server ,AMS ) ,AMS ) ) - MDR ) ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( Max( ( Min( MUM ,( ( ( CS + RCSe ) / Min( MUR ,MUM ) ) / MUC ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUC * ( MUR / MUR ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) ,( Min( ( RCSe / MUR ) ,( DS - RCSe ) ) * ( Max( CS,DS ) * ( MUR + CS ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.1607338040098713}, {"determining": "( Min( Const ,Max( ( ( AMS - RRS ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.6997112555222078}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - DDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,MLU ) - ( CS + MLU ) )", "obj1": 0.4048582995951417, "obj2": 0.35259052036630295}, {"determining": "( ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( Max( ( MRS - ACS ),( FirstVNF_Mem_Server - RRS ) ) / AMS ) - FirstVNF_Mem ) ) ) / ( ARS / Min( FirstVNF_Mem_Server ,Min( ( RRS * RRS ) ,MDR ) ) ) ) * AMS )", "choosing": "( Max( MUM,DS ) - ( CS + Min( DS ,Min( RRSe ,RRSe ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.11405261846606432}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5593885189355492}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.5454228819260387}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Max( BR,AMS ) ,DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.22059178149195935}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( ( ARS / Max( FirstVNF_Mem_Server,ARS ) ),( FirstVNF_Mem_Server - RRS ) ),( Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - MRS ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MLU - RRSe ) * ( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.2926921101627801}, {"determining": "( ( RRS + MDR ) - Min( Max( ( DDR + AMS ),BR ) ,( ( PN * Min( FirstVNF_CPU_Server ,AMS ) ) + ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6871117659056207}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RCSe + Max( MLU,MUM ) ) - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Min( RCSe ,MUC ),Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.27491571197423165}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "( Min( Const ,Max( Min( MRS ,MDR ),( PN - PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( Min( MUC ,( CS - ( CS + ( MLU / ( RRSe / MUM ) ) ) ) ),Min( MUR ,RCSe ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.3606969143264652}, {"determining": "( Min( MDR ,MDR ) - ( ( ( ( BR + ( ( ( MRS + FirstVNF_Mem_Server ) + PN ) / FirstVNF_CPU ) ) - FirstVNF_CPU ) - FirstVNF_CPU ) + BR ) )", "choosing": "Min( Max( ( ( MUM - ( ( ( Max( RRSe,CS ) / RCSe ) - MLU ) * MUM ) ) / Max( RCSe,MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( CS * MUM ) ) * ( ( MUR + MUC ) + RCSe ) ) ) ) ) ) ,( ( RRSe + RMSe ) * ( Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) + ( DS + Max( Min( DS ,MUM ),Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.32303893571206094}, {"determining": "( Min( Const ,Min( ARS ,ARS ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( MUC / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RMSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7098653238964899}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( RRSe - Max( ( ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) - Min( Max( RRSe,( CS + CS ) ) ,MUR ) ),Max( ( RCSe - RCSe ),CS ) ) ) - MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.5454228819260387}, {"determining": "( Min( Const ,Max( ( ( FirstVNF_Mem_Server - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem ) ) ,( ( FirstVNF_Mem - MDR ) / FirstVNF_CPU ) ) - ( PN - MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( Max( Max( RMSe,( RCSe - Min( RMSe ,( RCSe - DS ) ) ) ),Max( ( MLU - ( ( CS - CS ) - Max( MUC,RCSe ) ) ),( Min( ( RCSe - RCSe ) ,Max( DS,RMSe ) ) + ( Max( MLU,MUR ) * RRSe ) ) ) ) * ( DS + CS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.30671954727387846}, {"determining": "Min( Min( Min( ( CRS * CRS ) ,AMS ) ,( PN - MDR ) ) ,( PN - PN ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( ( DS - RMSe ) / Max( MUR,RCSe ) ) ) * RMSe ) - DS ) + ( MUR - ( MUC * DS ) ) ) ) - ( CS + ( DS + MUR ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04260995722176527}, {"determining": "( Min( Const ,Min( Min( FirstVNF_CPU ,( ( Const + BR ) * ( ( MDR - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM - ACS ) + BR ) ) ) ) ,DDR ) ) - ( MDR + RRS ) )", "choosing": "( MUR - ( ( ( ( MUM / DS ) * CS ) + ( MUM * ( ( MUM - Max( ( DS - MUM ),( MUR * MUC ) ) ) + MUM ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6417759923420179}, {"determining": "( ( PN - MRS ) - ( Min( ( ( Min( Const ,DDR ) - ( RRS + MDR ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) ) + CS ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6905283904477253}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( MRS / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( ( MUC * MUM ) / RRSe ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1019505383024908}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( PN + PN ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + DS ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.34210526315789475, "obj2": 0.44370248944624724}, {"determining": "( Min( Const ,Max( ( ( PN - DDR ) - ( ( ( ARS / DDR ) + FirstVNF_CPU ) * MRS ) ),( PN + PN ) ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( ( RCSe + RMSe ) * ( Min( ( ( MUR / MUM ) + MUR ) ,Min( Min( RRSe ,MUC ) ,MUR ) ) / MUM ) ) + ( MUM - ( ( CS + MUR ) - DS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35666956813047324}, {"determining": "( ( ( MDR + Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RMSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7144145441544424}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( DDR / ( FirstVNF_RAM * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( ( ( ( Min( MUC ,( MUR - MLU ) ) / ( DS - MUR ) ) + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5242914979757085, "obj2": 0.2948705082685715}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( MUR * DS ) - DS ) + ( MUC * DS ) ) ) - ( CS + MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.5661930966268343}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / ( FirstVNF_Mem_Server * Min( MRS ,FirstVNF_CPU ) ) ) - MDR ) ) ) ) - ( Const + MDR ) )", "choosing": "( ( RMSe + RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6983805668016194, "obj2": 0.12880128019510684}], "22": [{"determining": "( Min( CRS ,Max( ( ( BR / ( PN + FirstVNF_CPU ) ) - MDR ),( PN + BR ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( MUM * ( MUR / ( ( ( MUM - ( MUM * MUC ) ) + CS ) - Max( CS,( MUM / MLU ) ) ) ) ) / ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( ( RRS * DDR ) / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,PN ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + MUC ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( MUC,RCSe ) + ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( Min( MUM ,MUR ),CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * BR )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( RRSe + MUM ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.058704453441295545, "obj2": 0.767582541464459}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - ( DDR / ( FirstVNF_RAM_Server * ( BR / ( RRS * DDR ) ) ) ) ) ,( MDR - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( Max( RCSe,CS ) / Max( MLU,RRSe ) ) ) * DS ) - DS ) + ( RCSe - CS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7894736842105263, "obj2": 0.08126838313282216}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( FirstVNF_CPU / BR ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + ( Min( ( ARS / ( FirstVNF_RAM * Const ) ) ,FirstVNF_RAM_Server ) / DDR ) ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( ( ( RMSe - MUR ) / ( MUC / MLU ) ) * RMSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3684210526315789, "obj2": 0.4189510436217884}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07567954304951133}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.493140535509561}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "Min( ( Min( ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server - AMS ) ,FirstVNF_Mem ) ) + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( ( RRSe * ( MLU * Min( Max( RCSe,( MUR * MUC ) ) ,MLU ) ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUR ) )", "obj1": 0.6821862348178138, "obj2": 0.13831189179576955}, {"determining": "Min( Min( Min( ( CRS * CRS ) ,AMS ) ,( PN - MDR ) ) ,( PN - PN ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( ( DS - RMSe ) / Max( MUR,RCSe ) ) ) * RMSe ) - DS ) + ( MUR - ( MUC * DS ) ) ) ) - ( CS + ( DS + MUR ) ) )", "obj1": 0.742914979757085, "obj2": 0.09890353551219033}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.19554736268133846}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17601096640567293}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( ( BR / Min( Min( MDR ,AMS ) ,AMS ) ) - MDR ) - ( PN - DDR ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( RRSe + ( RCSe - MUR ) ) * ( DS + MUC ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06555127845327667}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RCSe + Max( MLU,MUM ) ) - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Min( RCSe ,MUC ),Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.26099086042775355}, {"determining": "( ( Min( ACS ,Max( CRS,( DDR + MDR ) ) ) - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + RRSe ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - ( MUM + RRSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.48830720807021166}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + ARS ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.47268550948866}, {"determining": "( Min( Max( ( AMS * FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ,( ( PN + ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - MDR ) ) + MDR ) ) - Max( RRS,MDR ) )", "choosing": "( ( DS - Max( Max( Min( DS ,Min( Max( Min( RCSe ,DS ),Min( MUM ,MUR ) ) ,( ( RRSe * MUM ) * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe * ( DS * RRSe ) ) / RRSe ) ) ) ) ) / ( MUM * MUR ) )", "obj1": 0.5890688259109311, "obj2": 0.223425450119652}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( ( ( MDR + ( ARS + MRS ) ) - DDR ) * Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM / DS ) / Max( DS,( MUM / ( ( MUC * ( MUM + MUR ) ) / DS ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS / MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( Min( Min( MLU ,CS ) ,MUC ) ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6086387737534137}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.29218889850222957}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / ( FirstVNF_Mem_Server * Min( MRS ,FirstVNF_CPU ) ) ) - MDR ) ) ) ) - ( Const + MDR ) )", "choosing": "( ( RMSe + RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6983805668016194, "obj2": 0.12880128019510684}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,DS ) ,( CS + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( MLU * MLU ) + ( CS - RRSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + ( MUM * MLU ) ) ) )", "obj1": 0.680161943319838, "obj2": 0.15981503944024594}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,DDR ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),( MLU * ( DS + MUM ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6072874493927125, "obj2": 0.21312834388228968}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / RMSe ),( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( RRSe + MLU ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5526315789473685, "obj2": 0.27383599332414077}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( ( DDR * PN ) / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.025075048637351965}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.11766798637390703}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6219607516365243}, {"determining": "( ( Const - Min( Max( Max( Const,Min( FirstVNF_CPU_Server ,Min( Max( CRS,ARS ) ,FirstVNF_Mem_Server ) ) ),PN ) ,AMS ) ) - ( RRS + MDR ) )", "choosing": "( ( RMSe * MUR ) / ( MUR * RRSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6356501177113827}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6255060728744939, "obj2": 0.18810903145509936}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ,ARS ) / Min( Min( ( ( Min( Const ,DDR ) - ( RRS + BR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( CS + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.016051098535804605}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - DDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( MUM * MUR ) / ( DS - MUR ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.28532216473545946}, {"determining": "( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) - ( DS * ( ( CS + MLU ) + ( MUM * DS ) ) ) ) / Max( RCSe,MLU ) ) ) - Max( CS,DS ) )", "obj1": 0.5566801619433198, "obj2": 0.27090998678070594}, {"determining": "( Min( DDR ,( MDR + ( PN + ( ( BR / ( CRS - DDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( ( MUC * RRSe ) * MUM ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2440592720834737}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( ( DDR * PN ) / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * MUC ) ) ) ) ) ,( RRSe / ( CS + Min( DS ,MLU ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01874383442471262}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( CS,Max( MUC,( MUM * Max( CS,DS ) ) ) ) ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6194688643625209}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - Max( FirstVNF_CPU,( PN / RRS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Max( MUM,RRSe ) ),Min( Min( MUR ,RCSe ) ,( CS - ( Min( MUM ,MLU ) / DS ) ) ) ) + ( MLU + DS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5203850452407746}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "Min( ( Min( ACS ,( ( MDR / ( DDR * ( MRS * Max( RRS,FirstVNF_Mem_Server ) ) ) ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,( FirstVNF_Mem + ( PN + PN ) ) ) - Max( Const,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( CS,Min( CS ,RMSe ) ) ) + ( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe - ( ( MLU * RRSe ) / RCSe ) ) ) - ( Max( Min( DS ,( RCSe / MUC ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.600908446443351}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * PN ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( DS ,RRSe ) ),( MLU * ( DS + MUM ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.16742729899638706}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.3441295546558704, "obj2": 0.4372484094630589}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - ( PN - MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.30671954727387846}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,Max( PN,RRS ) )", "choosing": "( Max( MLU,( Max( ( ( ( RMSe * MUC ) / MUC ) - Max( RMSe,MUM ) ),CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9149797570850202, "obj2": 0.033557854352415824}, {"determining": "( Min( Const ,( MDR / ( PN + Min( ( ( DDR + ( MDR * BR ) ) - FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) ) - ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( Max( ( Max( RRSe,RCSe ) - Min( DS ,RRSe ) ),( Min( MUM ,Max( MUC,Min( MLU ,MLU ) ) ) / Max( Min( MUR ,MUC ),MUM ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6477732793522267, "obj2": 0.17099831220169248}, {"determining": "( Min( Const ,( ( ( Const / Min( ( MDR + RRS ) ,RRS ) ) / RRS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( MUC - ( RRSe + RMSe ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RCSe + CS ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.31019457918540877}, {"determining": "Min( Min( Min( ( CRS * CRS ) ,AMS ) ,( PN - MDR ) ) ,( PN - PN ) )", "choosing": "( Max( MLU,( ( ( ( DS * ( ( DS - RMSe ) / Max( MUR,RCSe ) ) ) * RMSe ) - DS ) + ( MUR - ( MUC * DS ) ) ) ) - ( CS + ( DS + MUR ) ) )", "obj1": 0.742914979757085, "obj2": 0.09890353551219033}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( Min( Const ,Max( Min( MRS ,MDR ),( PN - PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( Min( MUC ,( CS - ( CS + ( MLU / ( RRSe / MUM ) ) ) ) ),Min( MUR ,RCSe ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.3606969143264652}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5535292971424887}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4316112880454189}, {"determining": "( PN * Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( FirstVNF_RAM_Server - PN ) - CRS ) ) ) ,ARS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( ( RRSe + MLU ) * MUR ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( MUR + MUM ) - ( MUR + RMSe ) ) / ( MUM / RRSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.11073008931901131}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4251012145748988, "obj2": 0.3395453259377274}, {"determining": "( Min( Const ,Min( Min( FirstVNF_CPU ,( ( Const + BR ) * ( ( MDR - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM - ACS ) + BR ) ) ) ) ,DDR ) ) - ( MDR + RRS ) )", "choosing": "( MUR - ( ( ( ( MUM / DS ) * CS ) + ( MUM * ( ( MUM - Max( ( DS - MUM ),( MUR * MUC ) ) ) + MUM ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6417759923420179}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_CPU_Server,ARS ) ,DDR ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( ( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.21424585691341172}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( MUM * Max( CS,( MUC + MUR ) ) ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2440592720834737}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( ( FirstVNF_RAM_Server - PN ) ,( MRS / FirstVNF_Mem ) ) ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( RCSe - CS ) + MUC ) - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUC ) )", "obj1": 0.13360323886639677, "obj2": 0.649554333745657}, {"determining": "( Min( MDR ,MDR ) - ( ( ( ( BR + ( ( ( MRS + FirstVNF_Mem_Server ) + PN ) / FirstVNF_CPU ) ) - FirstVNF_CPU ) - FirstVNF_CPU ) + BR ) )", "choosing": "Min( Max( ( ( MUM - ( ( ( Max( RRSe,CS ) / RCSe ) - MLU ) * MUM ) ) / Max( RCSe,MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( CS * MUM ) ) * ( ( MUR + MUC ) + RCSe ) ) ) ) ) ) ,( ( RRSe + RMSe ) * ( Min( ( RCSe + Max( RCSe,MUC ) ) ,RCSe ) + ( DS + Max( Min( DS ,MUM ),Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.32303893571206094}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) ) - MDR ),( PN + RRS ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + ( MLU / ( ( DS - ( MLU * MUC ) ) + RCSe ) ) ),( ( RRSe * MUR ) / RRSe ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6445172158325712}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3356969415672376}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RCSe + Max( MLU,MUM ) ) - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Min( RCSe ,MUC ),Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5769230769230769, "obj2": 0.2557326027836972}, {"determining": "( Min( Const ,Max( ( FirstVNF_Mem * ACS ),( MRS + PN ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),Min( ( ( Max( Max( RMSe,DS ),Min( MUR ,RRSe ) ) + ( DS + MUC ) ) - ( Max( Min( MUC ,CS ),MUC ) + MUR ) ) ,( MUR * Max( ( MUM / RCSe ),Max( DS,MUR ) ) ) ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.34733192875533647}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Min( ( ( RRSe + ( RCSe - CS ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) - ( CS * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.3389628993549895}, {"determining": "( ( MDR + ( ( FirstVNF_CPU * ARS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.21977852020714653}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( ( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem ) ) * ( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( Min( Max( ( RMSe / MUC ),MLU ) ,RMSe ),MLU ) * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.4276733107747909}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_Mem ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.02863342394339992}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - ( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( RRSe * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.979757085020243, "obj2": 0.007956522830287392}, {"determining": "( Min( Const ,Max( ( ( AMS - FirstVNF_Mem_Server ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( RCSe / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6708989320446914}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( ( RRS + MDR ) - Min( Max( ( DDR + AMS ),BR ) ,( ( PN * Min( FirstVNF_CPU_Server ,AMS ) ) + ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6871117659056207}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ) ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3184653550270772}, {"determining": "( ( Const - Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( ACS - FirstVNF_RAM ) )", "choosing": "Min( ( ( Max( ( Max( MUC,DS ) / ( RCSe - CS ) ),( ( DS + DS ) * ( RRSe + Max( Max( DS,RCSe ),Min( DS ,MUC ) ) ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( CS + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5358730194552395}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5593885189355492}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.32560771212568634}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03005663612230733}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( MLU,MLU ) - ( CS + MLU ) ) ) ) - ( CS + MLU ) )", "obj1": 0.25303643724696356, "obj2": 0.5423407911375615}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,RCSe ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.31936390524136893}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( MRS / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.10187941285956201}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + Min( Const ,Max( ( ( PN - MRS ) - DDR ),( PN + PN ) ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( CS,Max( MUC,( CS / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7061123446123578}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( PN + PN ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + DS ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.34210526315789475, "obj2": 0.44370248944624724}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( Min( Const ,DDR ) - ( RRS + BR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( ( CS + Min( DS ,MUR ) ) ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.011864660046936175}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( Min( Const ,DDR ) - ( RRS + BR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( ( CS + Min( DS ,MUR ) ) ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9676113360323887, "obj2": 0.011864660046936175}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( ( MUC + MUR ),Min( MUR ,RCSe ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6732056137794852}], "23": [{"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( FirstVNF_CPU / BR ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + ( Min( ( ARS / ( FirstVNF_RAM * Const ) ) ,FirstVNF_RAM_Server ) / DDR ) ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( ( ( RMSe - MUR ) / ( MUC / MLU ) ) * RMSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ( ( BR / ( PN + FirstVNF_CPU ) ) - MDR ),( PN + BR ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( MUM * ( MUR / ( ( ( MUM - ( MUM * MUC ) ) + CS ) - Max( CS,( MUM / MLU ) ) ) ) ) / ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + ( FirstVNF_Mem_Server * MDR ) ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( ( ( MUM * MUR ) / ( DS - MUC ) ) * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3785425101214575, "obj2": 0.41550551764909344}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5668016194331984, "obj2": 0.22143606575964458}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( RCSe + Max( MLU,MUM ) ) - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Min( RCSe ,MUC ),Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.26099086042775355}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( ( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_Mem ) ) * ( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( Min( Max( ( RMSe / MUC ),MLU ) ,RMSe ),MLU ) * MUR ) / ( DS - Max( CS,Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3641248454290563}, {"determining": "( Min( Min( ( Max( Min( FirstVNF_CPU ,BR ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( Max( RCSe,MUC ) + Max( Max( ( DS / ( RRSe * MLU ) ),( MUM + RRSe ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7834008097165992, "obj2": 0.08294262904783252}, {"determining": "( Min( PN ,( ( ( CRS + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * Const ) ) + ( PN + ( ( BR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ),( Max( ( RMSe * RMSe ),( Min( RMSe ,Min( Min( MUC ,MUM ) ,Max( RCSe,MUM ) ) ) + MLU ) ) - ( RRSe * DS ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7489878542510121, "obj2": 0.09640178841347764}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.493140535509561}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6639676113360324, "obj2": 0.16494772669805594}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,( MDR + ( ( MDR * ACS ) + ( ( BR / Min( AMS ,AMS ) ) * MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - Max( CS,CS ) ) ) ) - DS ) / ( MUC * MUR ) )", "obj1": 0.6781376518218624, "obj2": 0.14593185670717962}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.19554736268133846}, {"determining": "( ( MDR + ( ( FirstVNF_CPU * ARS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.21977852020714653}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6255060728744939, "obj2": 0.18810903145509936}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7470578979350769}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5593885189355492}, {"determining": "( PN * Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( FirstVNF_RAM_Server - PN ) - CRS ) ) ) ,ARS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( ( RRSe + MLU ) * MUR ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( MUR + MUM ) - ( MUR + RMSe ) ) / ( MUM / RRSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.11073008931901131}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8603238866396761, "obj2": 0.0528400024113497}, {"determining": "( ( PN - MRS ) - ( Min( MDR ,Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) ) * ( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "( ( MUM * MUR ) / ( DS + Max( ( MUC + MUR ),Max( MUR,( ( RMSe / MLU ) / ( ( ( DS * RCSe ) / RRSe ) / RRSe ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7137736385931025}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,( PN + ARS ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( RRSe + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.47268550948866}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS / MDR ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) + ( Min( Min( Min( Min( MLU ,CS ) ,MUC ) ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( RCSe ,MUR ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6086387737534137}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( ( RRS + MDR ) - Min( Max( ( DDR + AMS ),BR ) ,( ( PN * Min( FirstVNF_CPU_Server ,AMS ) ) + ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6871117659056207}, {"determining": "( Min( Const ,( ( ( Const / Min( ( MDR + RRS ) ,RRS ) ) / RRS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( ( MUC - ( RRSe + RMSe ) ) - MUR ) )", "obj1": 0.2631578947368421, "obj2": 0.5349179898228943}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_CPU_Server,ARS ) ,DDR ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( ( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6072874493927125, "obj2": 0.21153832721650556}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( MLU,MLU ) - ( CS + MLU ) ) ) ) - ( CS + MLU ) )", "obj1": 0.25303643724696356, "obj2": 0.5423407911375615}, {"determining": "( Min( ARS ,Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) ) / Min( Min( ( Max( DDR,( ( ( DDR * PN ) / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.024366928063368383}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - Max( FirstVNF_CPU,( PN / RRS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Max( MUM,RRSe ) ),Min( Min( MUR ,RCSe ) ,( CS - ( Min( MUM ,MLU ) / DS ) ) ) ) + ( MLU + DS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "Min( ( Min( ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server - AMS ) ,FirstVNF_Mem ) ) + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,RCSe ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012320190188495938}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RCSe - MUC ) + Max( Max( Min( DS ,MUR ),( ( ( MUM * DS ) + MLU ) + ( MUR / CS ) ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.31654489182246215}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.29218889850222957}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.11766798637390703}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,Max( PN,RRS ) )", "choosing": "( Max( MLU,( Max( ( ( ( RMSe * MUC ) / MUC ) - Max( RMSe,MUM ) ),CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9149797570850202, "obj2": 0.033557854352415824}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.819838056680162, "obj2": 0.06856555116750451}, {"determining": "( Min( Const ,( MDR + Max( ACS,PN ) ) ) - ( MDR + RRS ) )", "choosing": "( ( MUM * MUR ) / ( MUR - Min( Max( RRSe,RMSe ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.011414080499076466}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.582859752417959}, {"determining": "Min( ( ( ( MDR * Min( Min( BR ,ARS ) ,Min( Min( FirstVNF_Mem_Server ,AMS ) ,( ( PN - FirstVNF_CPU ) - MDR ) ) ) ) - ( CRS / AMS ) ) / ( ( RRS - AMS ) - Min( MDR ,CRS ) ) ) ,Min( ACS ,Max( DDR,ARS ) ) )", "choosing": "( ( MUM + ( RRSe + RCSe ) ) - ( MLU * ( ( ( MUR * ( RMSe + MUC ) ) - DS ) + ( MUC * DS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04869963417512416}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( Min( Const ,DDR ) - Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( ( CS + Min( DS ,MUR ) ) ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.007386179253461616}, {"determining": "Min( ( Min( ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server - AMS ) ,FirstVNF_Mem ) ) + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( ( RRSe * ( MLU * Min( Max( RCSe,( MUR * MUC ) ) ,MLU ) ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUR ) )", "obj1": 0.6821862348178138, "obj2": 0.13831189179576955}, {"determining": "( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + RRSe ) * ( ( Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) - ( DS * ( ( CS + MLU ) + ( MUM * DS ) ) ) ) / Max( RCSe,MLU ) ) ) - Max( CS,DS ) )", "obj1": 0.5566801619433198, "obj2": 0.27090998678070594}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.1346700627805399}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( MRS / Min( AMS ,PN ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( ( RRSe / RRSe ) / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12781136653755507}, {"determining": "( ( Const - Min( Max( Max( Const,Min( FirstVNF_CPU_Server ,Min( Max( CRS,ARS ) ,FirstVNF_Mem_Server ) ) ),PN ) ,AMS ) ) - ( RRS + MDR ) )", "choosing": "( ( RMSe * MUR ) / ( MUR * RRSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6356501177113827}, {"determining": "( Min( Const ,Max( ( ( AMS - FirstVNF_Mem_Server ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.6968233851639294}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.08023389756076132}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.1781777640664232}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + PN ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07522244147751153}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( CS,Max( MUC,( MUM * Max( CS,DS ) ) ) ) ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6194688643625209}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( Const ,( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,( RCSe / ( MLU * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.014887196121072675}, {"determining": "( ( RRS + MDR ) - ( RRS / ( FirstVNF_Mem * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.6575170396467046}, {"determining": "( Min( Const ,Max( ( ( BR * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( CRS - FirstVNF_Mem_Server ) ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( ( ( MUM * RRSe ) + ( MUR / CS ) ),( Max( MUM,MLU ) / DS ) ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( MLU + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5203850452407746}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( DS ,RRSe ) ),( MLU * ( DS + MUM ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( CS - RRSe ) + ( MLU * MLU ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + Max( MUM,MLU ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5523955507680459}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4251012145748988, "obj2": 0.3395453259377274}, {"determining": "Min( ( Min( ACS ,( ( MDR / ( DDR * ( MRS * Max( RRS,FirstVNF_Mem_Server ) ) ) ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,( FirstVNF_Mem + ( PN + PN ) ) ) - Max( Const,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( CS,Min( CS ,RMSe ) ) ) + ( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe - ( ( MLU * RRSe ) / RCSe ) ) ) - ( Max( Min( DS ,( RCSe / MUC ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.600908446443351}, {"determining": "( ( Min( ACS ,Max( CRS,( DDR + MDR ) ) ) - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + RRSe ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - ( MUM + RRSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.48830720807021166}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5772770677949133}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,DS ) ,( CS + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( MLU * MLU ) + ( CS - RRSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + ( MUM * MLU ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.28006591438422235}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.30671954727387846}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_CPU_Server,ARS ) ,DDR ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( ( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.21424585691341172}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.4276733107747909}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / RMSe ),( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( RRSe + MLU ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5526315789473685, "obj2": 0.27383599332414077}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MLU ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3206467061801671}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,( BR / FirstVNF_CPU ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( ( MUC + MUR ) * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.6291449755899375}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / ( FirstVNF_Mem_Server * Min( MRS ,FirstVNF_CPU ) ) ) - MDR ) ) ) ) - ( Const + MDR ) )", "choosing": "( ( RMSe + RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6983805668016194, "obj2": 0.12880128019510684}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( ( FirstVNF_Mem_Server / ( MRS + FirstVNF_CPU_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( ( MUR - RCSe ) + ( MUC - MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.03823910255976221}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( ( FirstVNF_RAM_Server - PN ) ,( MRS / FirstVNF_Mem ) ) ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( RCSe - CS ) + MUC ) - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUC ) )", "obj1": 0.13360323886639677, "obj2": 0.649554333745657}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) ) - MDR ),( PN + RRS ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + ( MLU / ( ( DS - ( MLU * MUC ) ) + RCSe ) ) ),( ( RRSe * MUR ) / RRSe ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6445172158325712}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( FirstVNF_RAM * FirstVNF_Mem ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.02863342394339992}, {"determining": "( ( BR + MDR ) - ( MDR + RRS ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( ( CS + ( DS * MUR ) ) ,RMSe ) + ( ( RCSe / Min( CS ,RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.16916075537954864}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17601096640567293}, {"determining": "( ( Const * Max( ( FirstVNF_CPU_Server * CRS ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * ( MUR / MUR ) ) ) / RRSe ) ) ) - ( MUM + MLU ) )", "obj1": 0.4331983805668016, "obj2": 0.3360034333475301}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + ( FirstVNF_Mem_Server * MDR ) ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( ( ( MUM * MUR ) / ( DS - MUC ) ) * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3684210526315789, "obj2": 0.4189510436217884}, {"determining": "( ( RRS + MDR ) - ( Const * Max( MRS,BR ) ) )", "choosing": "( MUR - ( Max( DS,RMSe ) + Max( ( Max( ( DS + ( DS / RRSe ) ),RCSe ) + CS ),( ( ( ( RMSe / MLU ) / ( MLU * RRSe ) ) / MUM ) / ( ( RRSe + MUM ) - MUR ) ) ) ) )", "obj1": 0.4008097165991903, "obj2": 0.3558668763628921}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3356969415672376}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,RCSe ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.48582995951417, "obj2": 0.30876615592453494}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.32560771212568634}, {"determining": "( Min( Const ,Max( ( ( AMS - FirstVNF_Mem_Server ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( RCSe / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6708989320446914}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23684210526315788, "obj2": 0.553696425888382}, {"determining": "( ( Const - Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( ACS - FirstVNF_RAM ) )", "choosing": "Min( ( ( Max( ( Max( MUC,DS ) / ( RCSe - CS ) ),( ( DS + DS ) * ( RRSe + Max( Max( DS,RCSe ),Min( DS ,MUC ) ) ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( CS + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5358730194552395}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Min( Const ,( MDR / ( PN + Min( ( ( DDR + ( MDR * BR ) ) - FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) ) - ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( Max( ( Max( RRSe,RCSe ) - Min( DS ,RRSe ) ),( Min( MUM ,Max( MUC,Min( MLU ,MLU ) ) ) / Max( Min( MUR ,MUC ),MUM ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6477732793522267, "obj2": 0.17099831220169248}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03005663612230733}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( ( DDR * PN ) / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( MUR / ( DS - MUR ) ) * MUC ) ) ) ) ) ,( RRSe / ( CS + Min( DS ,MLU ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.01874383442471262}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}], "24": [{"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( ARS / RRS ) + FirstVNF_Mem ) ) ),( PN + PN ) ) ) - Min( Max( Max( CRS,Min( FirstVNF_CPU_Server ,Min( PN ,FirstVNF_Mem_Server ) ) ),PN ) ,AMS ) ) - ( RRS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( ( Max( MUC,CS ) * ( ( MUM * MUR ) / ( RRSe - MUM ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( FirstVNF_CPU / BR ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + ( Min( ( ARS / ( FirstVNF_RAM * Const ) ) ,FirstVNF_RAM_Server ) / DDR ) ) )", "choosing": "( Max( MLU,( CS / ( ( RCSe / ( ( ( RMSe - MUR ) / ( MUC / MLU ) ) * RMSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN * ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,Min( AMS ,ARS ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM - RCSe ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( MUR * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2279315400978905}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,DS ) ,( CS + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( MLU * MLU ) + ( CS - RRSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + ( MUM * MLU ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.28006591438422235}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( ( MLU + MUR ) * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.39941231943064265}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( PN + ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( Max( MUC,Max( RMSe,MUC ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem_Server ,( PN / FirstVNF_Mem ) ) ) ) - Min( RRS ,Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / DDR ) ) ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( ( Min( MUR ,RCSe ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( CS + RRSe ) - RCSe ) * MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5032964958385808}, {"determining": "( Max( Const,( MDR + ( PN + ( ( BR / ( ( PN + PN ) + ( RRS / Const ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( Max( Min( Max( ( ( MLU - RRSe ) * ( MUC - MUM ) ),RMSe ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MLU ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( MUM ,MUR ),Min( DS ,MUM ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.21132297644346967}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) + PN ) ) ) - ( RRS + ( FirstVNF_Mem_Server * MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.4271081299012427}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - Max( FirstVNF_CPU,( PN / RRS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Max( MUM,RRSe ) ),Min( Min( MUR ,RCSe ) ,( CS - ( Min( MUM ,MLU ) / DS ) ) ) ) + ( MLU + DS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( ( Const - Min( Max( Max( Const,Min( FirstVNF_CPU_Server ,Min( Max( CRS,ARS ) ,FirstVNF_Mem_Server ) ) ),PN ) ,AMS ) ) - ( RRS + MDR ) )", "choosing": "( ( RMSe * MUR ) / ( MUR * RRSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6356501177113827}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.40985869425194543}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( ( FirstVNF_Mem_Server / ( MRS + FirstVNF_CPU_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( ( MUR - RCSe ) + ( MUC - MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.03823910255976221}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5593885189355492}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4340291716288341}, {"determining": "( ( Min( ACS ,Max( CRS,( DDR + MDR ) ) ) - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + RRSe ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - ( MUM + RRSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.48830720807021166}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7470578979350769}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) ) - MDR ),( PN + RRS ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + ( MLU / ( ( DS - ( MLU * MUC ) ) + RCSe ) ) ),( ( RRSe * MUR ) / RRSe ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6445172158325712}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.868421052631579, "obj2": 0.04679977121642816}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.43724696356275305, "obj2": 0.3355782773260444}, {"determining": "( ( MDR + ( ( FirstVNF_CPU * ARS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.21977852020714653}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( Const ,Max( ( FirstVNF_RAM * PN ),( PN + PN ) ) ) - ( AMS + MDR ) )", "choosing": "Min( ( RRSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MUR - DS ) ) * ( ( DS - DS ) * ( DS + CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5326326415769314}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,RCSe ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.48582995951417, "obj2": 0.30876615592453494}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.611336032388664, "obj2": 0.19435652071330428}, {"determining": "( Min( Const ,Max( ( ( AMS - FirstVNF_Mem_Server ) - ( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) - ( RRS + MDR ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( MUM,Max( MUC,( RCSe / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6708989320446914}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( Min( Const ,Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( ( RCSe / MUC ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11548061325795766}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( MLU,MLU ) - ( CS + MLU ) ) ) ) - ( CS + MLU ) )", "obj1": 0.25303643724696356, "obj2": 0.5423407911375615}, {"determining": "( ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.05768485746566313}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( Min( Const ,Max( ( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.624894393038967}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,Max( PN,RRS ) )", "choosing": "( Max( MLU,( Max( ( ( ( RMSe * MUC ) / MUC ) - Max( RMSe,MUM ) ),CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9149797570850202, "obj2": 0.033557854352415824}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6556127037683205}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "Min( ( Min( ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server - AMS ) ,FirstVNF_Mem ) ) + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,RCSe ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012320190188495938}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.582859752417959}, {"determining": "( Min( Const ,( Max( ( ( CRS - ACS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( ( FirstVNF_CPU + RRS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MLU - ( ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) / Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) ) ) - ( ( ( ( Min( MLU ,( RRSe - ( RMSe - RMSe ) ) ) / ( Max( RCSe,MUR ) + ( Max( MUM,MLU ) * ( MUM / MUC ) ) ) ) - ( RMSe / Max( RMSe,( ( MUC - MUR ) - RMSe ) ) ) ) + ( MUM / MUC ) ) + MLU ) )", "obj1": 0.5688259109311741, "obj2": 0.22024478291152177}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "Min( ( Min( ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server - AMS ) ,FirstVNF_Mem ) ) + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( ( RRSe * ( MLU * Min( Max( RCSe,( MUR * MUC ) ) ,MLU ) ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUR ) )", "obj1": 0.6821862348178138, "obj2": 0.13831189179576955}, {"determining": "( ( DDR + ( ARS / ( RRS / ( FirstVNF_Mem - ACS ) ) ) ) - ( MDR + RRS ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( Min( MUM ,( MLU * ( ( DS + RCSe ) * MUM ) ) ) - CS ) ) * ( ( DS + DS ) * ( MUR + CS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3145402600200949}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS / MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7074185003044025}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * MLU ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5508571865451175}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( ( ( FirstVNF_RAM * ACS ) * ( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( ( DS - RMSe ) * Min( RCSe ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5475845709284023}, {"determining": "( Min( Const ,( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) - ( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,( RRSe / ( MLU * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.007104553810024601}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,( RCSe / ( MLU * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.30062842465543643}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( CS,Max( MUC,( MUM * Max( CS,DS ) ) ) ) ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6194688643625209}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( MDR ,CRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( RCSe ,MUR ) ) ) ) + Max( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5772770677949133}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6255060728744939, "obj2": 0.18770875369800447}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5323886639676113, "obj2": 0.2851019764113942}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( RRSe + ( RCSe - MUR ) ) * ( DS + MUR ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.16025915806025584}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.32560771212568634}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RCSe - MUC ) + Max( Max( Min( DS ,MUR ),( ( ( MUM * DS ) + MLU ) + ( MUR / CS ) ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.31654489182246215}, {"determining": "( ( BR + MDR ) - ( MDR + RRS ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( ( CS + ( DS * MUR ) ) ,RMSe ) + ( ( RCSe / Min( CS ,RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.16916075537954864}, {"determining": "( ( RRS + MDR ) - Min( Max( ( DDR + AMS ),BR ) ,( ( PN * Min( FirstVNF_CPU_Server ,AMS ) ) + ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6871117659056207}, {"determining": "( Min( Const ,Max( ( ( BR / ( ( MDR + CRS ) - Min( PN ,Min( ARS ,FirstVNF_RAM_Server ) ) ) ) - MDR ),( PN + FirstVNF_Mem ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - RCSe ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( RCSe - RRSe ) )", "obj1": 0.27125506072874495, "obj2": 0.5203850452407746}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / ( CS * CS ) ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.09368848777324687}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "Min( ( Min( ACS ,( ( MDR / ( DDR * ( MRS * Max( RRS,FirstVNF_Mem_Server ) ) ) ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,( FirstVNF_Mem + ( PN + PN ) ) ) - Max( Const,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( CS,Min( CS ,RMSe ) ) ) + ( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe - ( ( MLU * RRSe ) / RCSe ) ) ) - ( Max( Min( DS ,( RCSe / MUC ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.600908446443351}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * DS ) ) / RRSe ) ) ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7002043725253201}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ( PN - MDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7225094821215361}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( MDR - ( FirstVNF_CPU * PN ) ) / ACS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( MUR + CS ) / Max( MLU,RRSe ) ) * ( ( DS + DS ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.6781376518218624, "obj2": 0.14593185670717962}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / ( FirstVNF_Mem_Server * Min( MRS ,FirstVNF_CPU ) ) ) - MDR ) ) ) ) - ( Const + MDR ) )", "choosing": "( ( RMSe + RRSe ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6983805668016194, "obj2": 0.12880128019510684}, {"determining": "( PN * Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( FirstVNF_RAM_Server - PN ) - CRS ) ) ) ,ARS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( ( RRSe + MLU ) * MUR ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( MUR + MUM ) - ( MUR + RMSe ) ) / ( MUM / RRSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.1075272962984529}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17601096640567293}, {"determining": "( ( Min( MDR ,( Min( Const ,Max( FirstVNF_Mem,Min( ( BR - PN ) ,Const ) ) ) - ( RRS + MDR ) ) ) * FirstVNF_Mem ) - ( PN - MRS ) )", "choosing": "( ( MUC - Min( CS ,( ( ( ( DS * MLU ) - Min( MUM ,Min( MLU ,RMSe ) ) ) * RMSe ) / Max( Max( MUC,( Max( RRSe,MUC ) + MUC ) ),RCSe ) ) ) ) - ( ( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) + Min( RRSe ,DS ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * ( MUC / RMSe ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.493140535509561}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.3010008772986687}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + PN ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.08916219621797129}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( ( FirstVNF_RAM_Server - PN ) ,( MRS / FirstVNF_Mem ) ) ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( RCSe - CS ) + MUC ) - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUC ) )", "obj1": 0.13360323886639677, "obj2": 0.649554333745657}, {"determining": "( Min( ( AMS * MRS ) ,ARS ) / Min( Min( AMS ,( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM + ARS ) ) * FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,( MUC * ( DS / ( Min( RRSe ,MLU ) + MUM ) ) ) ),Max( ( Min( DS ,MUR ) - ( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.08916219621797129}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) ) ) - MDR ),( PN * PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( Max( MUC,Max( ( RRSe / MUC ),RRSe ) ) / ( ( ( RRSe * MUR ) / RRSe ) / RRSe ) ) ),Max( Min( DS ,( ( RRSe * MUR ) * ( CS * MUM ) ) ),Min( MUM ,MUR ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4251012145748988, "obj2": 0.3395453259377274}, {"determining": "Min( ( ( ACS - ( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( ( AMS / Max( FirstVNF_CPU_Server,Min( AMS ,CRS ) ) ) - FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + ( RCSe - MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6110372313271788}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.19337413147311752}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12284862547022352}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6234817813765182, "obj2": 0.18847497704033897}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.291241276508547}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Max( FirstVNF_Mem,ARS ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4751807951518593}, {"determining": "( Min( Const ,( ( BR / Min( Const ,AMS ) ) + ( PN + ( ( BR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( ( ( MUC * MUM ) / RRSe ) * ( CS + Min( DS ,MUR ) ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9230769230769231, "obj2": 0.02903262660321386}, {"determining": "( ( Const - Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( ACS - FirstVNF_RAM ) )", "choosing": "Min( ( ( Max( ( Max( MUC,DS ) / ( RCSe - CS ) ),( ( DS + DS ) * ( RRSe + Max( Max( DS,RCSe ),Min( DS ,MUC ) ) ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( CS + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5358730194552395}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.08023389756076132}, {"determining": "( Min( Min( ( Max( Min( FirstVNF_CPU ,BR ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( Max( RCSe,MUC ) + Max( Max( ( DS / ( RRSe * MLU ) ),( MUM + RRSe ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7834008097165992, "obj2": 0.08294262904783252}, {"determining": "( Min( Const ,( ( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024855909881090668}, {"determining": "( ( RRS + MDR ) - ( Const * Max( MRS,BR ) ) )", "choosing": "( MUR - ( Max( DS,RMSe ) + Max( ( Max( ( DS + ( DS / RRSe ) ),RCSe ) + CS ),( ( ( ( RMSe / MLU ) / ( MLU * RRSe ) ) / MUM ) / ( ( RRSe + MUM ) - MUR ) ) ) ) )", "obj1": 0.4008097165991903, "obj2": 0.3558668763628921}, {"determining": "( ( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ( ( MDR / ARS ) * PN ) - BR ) ) - ( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "Min( RRSe ,( Max( ( DS - ( MLU - MLU ) ),( MUR / ( RMSe + Min( ( MUM - RRSe ) ,( CS * CS ) ) ) ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07349988878002499}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6639676113360324, "obj2": 0.16494772669805594}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - Min( DDR ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MLU ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) + DS ) )", "obj1": 0.39068825910931176, "obj2": 0.3613245136133283}, {"determining": "( Max( Const,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe - MUM ) - MUR ) / ( ( RCSe / ( ( MUC + MUR ) * RRSe ) ) / RRSe ) ),( Max( ( MUM * MUR ),RCSe ) + CS ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.3567556320146788}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.32560771212568634}], "25": [{"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) ) ) - MDR ),( PN * PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( ARS / RRS ) + FirstVNF_Mem ) ) ),( PN + PN ) ) ) - Min( Max( Max( CRS,Min( FirstVNF_CPU_Server ,Min( PN ,FirstVNF_Mem_Server ) ) ),PN ) ,AMS ) ) - ( RRS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( MLU / MLU ) - Min( ( Max( MUC,CS ) * ( ( MUM * MUR ) / ( RRSe - MUM ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Min( MUR ,DS ) ,( CS + CS ) ) ) + ( MUR - CS ) ) * DS ) / RCSe ) * ( ( MLU * MLU ) + ( CS - RRSe ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * RMSe ) ) * ( ( CS + MLU ) + ( MUM * MLU ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.28006591438422235}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2279315400978905}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( ( MLU + MUR ) * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.399354859827189}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( FirstVNF_RAM ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( ACS / ( ARS - ACS ) ) )", "choosing": "( ( MUR * MUR ) / ( Max( Min( RRSe ,( RCSe - MLU ) ),Min( ( Max( RRSe,MUR ) - CS ) ,MUC ) ) + RRSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4149793374181477}, {"determining": "( Min( Const ,( ( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) + ( PN + ( ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ACS ) ) - ( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( MUM / ( CS * CS ) ) ) ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + ( RRSe + MLU ) ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024855909881090668}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem_Server ,( PN / FirstVNF_Mem ) ) ) ) - Min( RRS ,Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / DDR ) ) ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( ( Min( MUR ,RCSe ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( ( ( CS + RRSe ) - RCSe ) * MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5032964958385808}, {"determining": "( Min( Const ,( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) - ( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ) + MDR ) )", "choosing": "( ( MUM * Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.006988058709734717}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( FirstVNF_Mem - Max( FirstVNF_CPU,( PN / RRS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( ( Max( ( Max( RCSe,MUM ) / Max( MUM,RRSe ) ),Min( Min( MUR ,RCSe ) ,( CS - ( Min( MUM ,MLU ) / DS ) ) ) ) + ( MLU + DS ) ) * DS ) / RCSe )", "obj1": 0.8846153846153846, "obj2": 0.044042840471472104}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Max( Const,( MDR + ( PN + ( ( BR / ( ( PN + PN ) + ( RRS / Const ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( Max( Min( Max( ( ( MLU - RRSe ) * ( MUC - MUM ) ),RMSe ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MLU ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( MUM ,MUR ),Min( DS ,MUM ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.21132297644346967}, {"determining": "( ( Min( ACS ,Max( CRS,( DDR + MDR ) ) ) - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + RRSe ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - ( MUM + RRSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.48830720807021166}, {"determining": "Min( ( Min( ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server - AMS ) ,FirstVNF_Mem ) ) + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( ( RRSe * ( MLU * Min( Max( RCSe,( MUR * MUC ) ) ,MLU ) ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUR ) )", "obj1": 0.6821862348178138, "obj2": 0.13831189179576955}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( Min( Const ,Max( ( ( BR / ( ( MDR + CRS ) - Min( PN ,Min( ARS ,FirstVNF_RAM_Server ) ) ) ) - MDR ),( PN + FirstVNF_Mem ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - RCSe ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( RCSe - RRSe ) )", "obj1": 0.27125506072874495, "obj2": 0.5203850452407746}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.868421052631579, "obj2": 0.04656814091732196}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( MDR - ( FirstVNF_CPU * PN ) ) / ACS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( MUR + CS ) / Max( MLU,RRSe ) ) * ( ( DS + DS ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.6781376518218624, "obj2": 0.14593185670717962}, {"determining": "( ( Min( MDR ,( Min( Const ,Max( FirstVNF_Mem,Min( ( BR - PN ) ,Const ) ) ) - ( RRS + MDR ) ) ) * FirstVNF_Mem ) - ( PN - MRS ) )", "choosing": "( ( MUC - Min( CS ,( ( ( ( DS * MLU ) - Min( MUM ,Min( MLU ,RMSe ) ) ) * RMSe ) / Max( Max( MUC,( Max( RRSe,MUC ) + MUC ) ),RCSe ) ) ) ) - ( ( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) + Min( RRSe ,DS ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * ( MUC / RMSe ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.493140535509561}, {"determining": "( Min( Const ,Max( ( ( Const / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / CS ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6861367771235396}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RCSe - MUC ) + Max( Max( Min( DS ,MUR ),( ( ( MUM * DS ) + MLU ) + ( MUR / CS ) ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.31654489182246215}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5688259109311741, "obj2": 0.22024478291152177}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( ( Const * FirstVNF_RAM_Server ) + PN ) ) ) - ( FirstVNF_Mem / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( DS - ( ( ( ( MLU + Max( MLU,( MUC - RMSe ) ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7457104926789658}, {"determining": "( Min( Const ,Max( ( FirstVNF_RAM * PN ),( PN + PN ) ) ) - ( AMS + MDR ) )", "choosing": "Min( ( RRSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MUR - DS ) ) * ( ( DS - DS ) * ( DS + CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5326326415769314}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6639676113360324, "obj2": 0.16494772669805594}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + ( MRS - CRS ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30855985739767083}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MLU,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.611336032388664, "obj2": 0.19435652071330428}, {"determining": "( Min( Const ,( ( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024855909881090668}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( ( MDR + ( ( FirstVNF_CPU * ARS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.21977852020714653}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4027005521713424}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( Min( Const ,( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) - ( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.006988058709734717}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.32560771212568634}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - Max( RRS,MDR ) ) ) / Max( ( Const / ( FirstVNF_Mem + ACS ) ),( Const + FirstVNF_RAM_Server ) ) ) ,( ACS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) * ( MUM + RCSe ) ) / RRSe ) / Min( ( ( RCSe - MUC ) / MUM ) ,MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.5904452784293021}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + PN ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( ( Min( RCSe ,MLU ) + RCSe ),RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09885069922543593}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + RRSe ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - ( MUM + RRSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.1300363188809935}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( Max( ( MUM / MUM ),( MUR * RCSe ) ) * ( ( RRSe + ( RCSe - MUR ) ) * ( DS + MUR ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.16025915806025584}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( ( RRS / DDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),( MUC * MUC ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.6971203563042374}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( ( AMS * ( FirstVNF_RAM_Server - Const ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.902834008097166, "obj2": 0.038732533243366486}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Max( FirstVNF_Mem,ARS ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4751807951518593}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17601096640567293}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( ( ( FirstVNF_RAM * ACS ) * ( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( ( DS - RMSe ) * Min( RCSe ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5475845709284023}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.1865110962817682}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.582859752417959}, {"determining": "( ( DDR + ( ARS / ( RRS / ( FirstVNF_Mem - ACS ) ) ) ) - ( MDR + RRS ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( Min( MUM ,( MLU * ( ( DS + RCSe ) * MUM ) ) ) - CS ) ) * ( ( DS + DS ) * ( MUR + CS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3145402600200949}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8603238866396761, "obj2": 0.05325907658754188}, {"determining": "( ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.05768485746566313}, {"determining": "Min( ( Min( ACS ,( ( MDR / ( DDR * ( MRS * Max( RRS,FirstVNF_Mem_Server ) ) ) ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,( FirstVNF_Mem + ( PN + PN ) ) ) - Max( Const,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( CS,Min( CS ,RMSe ) ) ) + ( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe - ( ( MLU * RRSe ) / RCSe ) ) ) - ( Max( Min( DS ,( RCSe / MUC ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.600908446443351}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( CS,Max( MUC,( MUM * Max( DS,CS ) ) ) ) ) / ( DS - Max( ( MUC + Min( ( RCSe - MUC ) ,RCSe ) ),Max( MUR,( MUR / ( ( RCSe - ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.41104959619080766}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5323886639676113, "obj2": 0.2851019764113942}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.32560771212568634}, {"determining": "( Min( Min( ( Max( Min( FirstVNF_CPU ,BR ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( ( Max( RCSe,MUC ) + Max( Max( ( DS / ( RRSe * MLU ) ),( MUM + RRSe ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7834008097165992, "obj2": 0.08294262904783252}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22672064777327935, "obj2": 0.5614415928170676}, {"determining": "( PN * ( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ) ,( ( FirstVNF_RAM_Server - PN ) - CRS ) ) ) / ARS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUR ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - ( MUR + RMSe ) ) / ( MUM / RRSe ) ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.11420003793103148}, {"determining": "Min( ( ( ACS - ( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( ( AMS / Max( FirstVNF_CPU_Server,Min( AMS ,CRS ) ) ) - FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + ( RCSe - MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6110372313271788}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.43724696356275305, "obj2": 0.3355782773260444}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6052575794135671}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,Max( PN,RRS ) )", "choosing": "( Max( MLU,( Max( ( ( ( RMSe * MUC ) / MUC ) - Max( RMSe,MUM ) ),CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9149797570850202, "obj2": 0.033557854352415824}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,MDR ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.09339745232974753}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.3010008772986687}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem ) ) ,PN ) ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08689435843489472}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( ( Max( Min( ( ACS / BR ) ,DDR ),( FirstVNF_Mem_Server - RRS ) ) * ( ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) + Min( Max( DDR,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem - ( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_Mem_Server - PN ) ) / AMS ) ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * MLU ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5508571865451175}, {"determining": "( ( Const - Min( Max( Max( Const,Min( FirstVNF_CPU_Server ,Min( Max( CRS,ARS ) ,FirstVNF_Mem_Server ) ) ),PN ) ,AMS ) ) - ( RRS + MDR ) )", "choosing": "( ( RMSe * MUR ) / ( MUR * RRSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6356501177113827}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( ( FirstVNF_Mem_Server + Const ) * PN ) ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( ( RCSe * MUC ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07349988878002499}, {"determining": "( Min( ( AMS * MRS ) ,ARS ) / Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( DDR ,( ( DDR + ( AMS * AMS ) ) * FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( Min( Min( ( RCSe - CS ) ,Min( MUR ,MUC ) ) ,( Max( ( ( DS + DS ) * ( DS + CS ) ),CS ) / Max( MLU,RCSe ) ) ) ,( Min( ( ( ( RCSe / ( Max( MLU,DS ) * Max( DS,MUC ) ) ) * Min( Min( MUM ,( MUR * MLU ) ) ,Min( RCSe ,Max( RCSe,MUM ) ) ) ) - RCSe ) ,( MUC / RCSe ) ) * RCSe ) )", "obj1": 0.7975708502024291, "obj2": 0.07987590033161678}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,( RCSe / ( MLU * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.30062842465543643}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( ( CS + Min( DS ,MUR ) ) ,RMSe ) + ( ( RCSe / ( CS * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.16916075537954864}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.2142523735327348}, {"determining": "( Min( Const ,( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) - ( ( ( PN - MRS ) - ( Min( MDR ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,( RRSe / ( MLU * RRSe ) ) ),( MUM * MUR ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004634908119009698}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( MLU,MLU ) - ( CS + MLU ) ) ) ) - ( CS + MLU ) )", "obj1": 0.25303643724696356, "obj2": 0.5423407911375615}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MLU ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.805668016194332, "obj2": 0.07612113609404125}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( PN + ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( Max( MUC,Max( RMSe,MUC ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6493752774461701}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( ( BR + MDR ) - ( MDR + RRS ) )", "choosing": "( ( MUM * ( CS / RMSe ) ) / ( DS - Max( CS,Max( MUC,( Min( ( CS + ( DS * MUR ) ) ,RMSe ) + ( ( RCSe / Min( CS ,RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.16916075537954864}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5757565827193019}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6234817813765182, "obj2": 0.18837374391239167}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.291241276508547}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( DDR,DDR ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,PN ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( ( RMSe * ( CS - RCSe ) ) - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( DS ,MUR ) ),Max( MUC,( ( MUR - ( RRSe + MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.29218889850222957}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + Max( ( ( FirstVNF_RAM / FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ),BR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RCSe * ( RCSe / RMSe ) ) / ( DS - Max( ( MLU + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( ( MLU * RRSe ) / RCSe ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5587085925920873}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( ( FirstVNF_Mem_Server / ( MRS + FirstVNF_CPU_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( ( MUR - RCSe ) + ( MUC - MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.03823910255976221}, {"determining": "( ( Const - ( Const / FirstVNF_CPU_Server ) ) * Min( Max( Max( Min( AMS ,DDR ),( ( PN * ARS ) - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / CRS ) ) ) ) ,( ( Min( ( MDR + RRS ) ,DDR ) / DDR ) - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + ( Max( RCSe,MUM ) / ( RRSe + MUM ) ) ) ) - ( ( CS + MUR ) + ( RMSe * ( ( MUR / ( MUR - MUM ) ) - RMSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( RCSe + CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.28429220497326474}, {"determining": "( Min( ( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) + ( ( ( PN - ( ARS * BR ) ) + Max( AMS,( Const * FirstVNF_CPU ) ) ) + ( ( ARS / ( FirstVNF_Mem_Server + MDR ) ) - MDR ) ) ) ,Const ) - ( FirstVNF_CPU + ( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "( ( RMSe * RRSe ) / ( Max( RRSe,MUC ) * MUR ) )", "obj1": 0.145748987854251, "obj2": 0.6428988280203497}, {"determining": "( ( Const - Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( ACS - FirstVNF_RAM ) )", "choosing": "Min( ( ( Max( ( Max( MUC,DS ) / ( RCSe - CS ) ),( ( DS + DS ) * ( RRSe + Max( Max( DS,RCSe ),Min( DS ,MUC ) ) ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( CS + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5358730194552395}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( FirstVNF_RAM_Server * ( BR / PN ) ) ) - FirstVNF_Mem ) ,( ACS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.08023389756076132}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN * ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,Min( AMS ,ARS ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM - RCSe ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( MUR * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2279315400978905}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12284862547022352}], "26": [{"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( Min( ( CRS / ( RRS + ACS ) ) ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS - ( Min( BR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( RRSe ,( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( ( BR / Min( Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) ) ) - MDR ),( PN * PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( Min( Const ,Max( Min( PN ,RRS ),( FirstVNF_Mem_Server + Const ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RCSe + CS ) / ( DS - Max( Max( MUC,( Max( MUC,Max( ( RRSe / MUC ),RRSe ) ) / ( ( RRSe / ( MUC * MUR ) ) / RRSe ) ) ),Max( Min( DS ,( ( RRSe * MUR ) * ( CS * MUM ) ) ),Min( MUM ,MUR ) ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.26200475654484956}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) - FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( ( MLU + MUR ) * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.399354859827189}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * Min( Max( FirstVNF_Mem,ARS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01785265909563202}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( AMS + PN ) ) ) - ( Max( ( ACS - RRS ),DDR ) + ( BR - PN ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - RRSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( DS * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6243378020494667}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2279315400978905}, {"determining": "Min( ( MRS + FirstVNF_Mem_Server ) ,Min( ( Const - Max( ( ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) - CRS ),ARS ) ) ,( ACS + RRS ) ) )", "choosing": "( ( MLU * ( Min( Max( RMSe,( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) / ( MUC * ( RCSe + ( Max( RMSe,RMSe ) * ( MUM - RCSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Const ,Max( Min( DDR ,FirstVNF_RAM ),( PN + FirstVNF_Mem_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( ( Max( MUM,MUM ) + MUM ) + RMSe ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.49739900389773056}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5688259109311741, "obj2": 0.22024478291152177}, {"determining": "( Min( ( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) + ( ( ( PN - ( ARS * BR ) ) + Max( AMS,( Const * FirstVNF_CPU ) ) ) + ( ( ARS / ( FirstVNF_Mem_Server + MDR ) ) - MDR ) ) ) ,Const ) - ( FirstVNF_CPU + ( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "( ( RMSe * RRSe ) / ( Max( RRSe,MUC ) * MUR ) )", "obj1": 0.145748987854251, "obj2": 0.6428988280203497}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( PN + ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( Max( MUC,Max( RMSe,MUC ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8805668016194332, "obj2": 0.04305709534832273}, {"determining": "Min( ( ( ACS - ( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( ( AMS / Max( FirstVNF_CPU_Server,Min( AMS ,CRS ) ) ) - FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + ( RCSe - MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6110372313271788}, {"determining": "( Min( Min( ( Max( Min( FirstVNF_CPU ,BR ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( ( RMSe + ( Min( ( RRSe / MLU ) ,( ( ( MUC + DS ) * MLU ) / ( Min( RMSe ,CS ) - MUM ) ) ) - ( ( MUC * MUM ) / RRSe ) ) ),( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.9777327935222672, "obj2": 0.009646078088789593}, {"determining": "Min( ( MDR / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( ( Const * FirstVNF_RAM_Server ) + PN ) ) ) - ( FirstVNF_Mem / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( DS - ( ( ( ( MLU + Max( MLU,( MUC - RMSe ) ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7457104926789658}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + RRSe ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - ( MUM + RRSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.1300363188809935}, {"determining": "( Min( Const ,Max( ( Min( Const ,DDR ) - Min( RRS ,MRS ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( ( RMSe - Min( ( RRSe * DS ) ,MLU ) ) * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( CS * RMSe ) ,( RRSe * MUR ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( DS / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.4153808206417931}, {"determining": "( Min( Const ,( MDR + ( ( ( Const + FirstVNF_RAM_Server ) * ACS ) + ( Min( Min( ARS ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),MUC ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / ( DS * RMSe ) ) ) ) ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.1938823900648467}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( ( Min( ACS ,Max( CRS,( DDR + MDR ) ) ) - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + RRSe ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - ( MUM + RRSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.48830720807021166}, {"determining": "Min( ( Min( ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM_Server - AMS ) ,FirstVNF_Mem ) ) + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( ( RRSe * ( MLU * Min( Max( RCSe,( MUR * MUC ) ) ,MLU ) ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + MUR ) )", "obj1": 0.6821862348178138, "obj2": 0.13831189179576955}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( Min( Const ,Max( ( ( BR / ( ( MDR + CRS ) - Min( PN ,Min( ARS ,FirstVNF_RAM_Server ) ) ) ) - MDR ),( PN + FirstVNF_Mem ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - RCSe ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( RCSe - RRSe ) )", "obj1": 0.27125506072874495, "obj2": 0.5203850452407746}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( ( FirstVNF_Mem_Server + Const ) * PN ) ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( ( RCSe * MUC ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07349988878002499}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,BR ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + Min( Const ,RRS ) ) )", "choosing": "( ( MUC - MLU ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12283620670599474}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( Min( Const ,Max( ( ( Const / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / CS ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6861367771235396}, {"determining": "( Min( Const ,Max( ( ( Const / ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / AMS ) ) - MDR ),Max( AMS,PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( Min( ( ( MLU + CS ) - Min( CS ,( MUM - MLU ) ) ) ,MLU ),( Min( ( MUM / ( RCSe / MUM ) ) ,RRSe ) - Max( RCSe,MUC ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "( Min( Const ,Max( ( FirstVNF_RAM * PN ),( PN + PN ) ) ) - ( AMS + MDR ) )", "choosing": "Min( ( RRSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MUR - DS ) ) * ( ( DS - DS ) * ( DS + CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5326326415769314}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6493752774461701}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.868421052631579, "obj2": 0.04656814091732196}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( Max( AMS,( FirstVNF_RAM_Server - Const ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,( FirstVNF_RAM + ARS ) )", "choosing": "( Max( MLU,( Max( ( Max( RMSe,MUM ) - ( ( RMSe + MLU ) * MUC ) ),CS ) / ( ( RCSe / ( MLU - RRSe ) ) / ( DS - CS ) ) ) ) - ( CS + MLU ) )", "obj1": 0.7368421052631579, "obj2": 0.10150899469042915}, {"determining": "( ( Const * Max( ( ( MRS / Min( Const ,( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / BR ) ) ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RMSe ) / ( Max( Max( MUR,( DS * MUC ) ),( RMSe / ( Min( ( ( MUM + MUR ) / CS ) ,MUR ) + RMSe ) ) ) - DS ) )", "obj1": 0.11740890688259109, "obj2": 0.6717696399782336}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( Max( Const,( MDR + ( PN + ( ( BR / ( ( PN + PN ) + ( RRS / Const ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( Max( Min( Max( ( ( MLU - RRSe ) * ( MUC - MUM ) ),RMSe ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MLU ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( MUM ,MUR ),Min( DS ,MUM ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7126306457059153}, {"determining": "( ( PN + ACS ) - Max( RRS,MDR ) )", "choosing": "( Max( MLU,( ( ( ( RRSe - MUR ) + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MUR ) )", "obj1": 0.4392712550607287, "obj2": 0.33287903045076916}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_RAM_Server ,Const ) ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( ( RMSe * ( RCSe + MUC ) ),MUR ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( MUR * CS ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6635345059824199}, {"determining": "( ( MDR + ( ( FirstVNF_CPU * ARS ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5931174089068826, "obj2": 0.21977852020714653}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( MLU,MLU ) - ( CS + MLU ) ) ) ) - ( CS + MLU ) )", "obj1": 0.25303643724696356, "obj2": 0.5423407911375615}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5323886639676113, "obj2": 0.2851019764113941}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( ( AMS * ( FirstVNF_RAM_Server - Const ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.902834008097166, "obj2": 0.038732533243366486}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6093117408906883, "obj2": 0.2086728368112542}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,MRS ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( MUR + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.4291497975708502, "obj2": 0.3416302683063008}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / ( RRS + MDR ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5864071296905812}, {"determining": "( Min( ( AMS * MRS ) ,ARS ) / Min( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) - Min( DDR ,( ( DDR + ( AMS * AMS ) ) * FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ,( Min( ( ( ( RCSe / ( Max( MLU,DS ) * Max( DS,MUC ) ) ) * Min( Min( MUM ,( MUR * MLU ) ) ,Min( RCSe ,Max( RCSe,MUM ) ) ) ) - RCSe ) ,( MUC / RCSe ) ) * RCSe ) )", "obj1": 0.9230769230769231, "obj2": 0.03203583373955821}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * ( Max( Max( Min( AMS ,( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / RRS ) ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) / ( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( MUM,RRSe ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RCSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( ( AMS * ( FirstVNF_RAM_Server - Const ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,Max( PN,RRS ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + MUR ) ) )", "obj1": 0.7267206477732794, "obj2": 0.11386421401771213}, {"determining": "Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Max( Min( DS ,MUR ),( MUM + MUR ) ) ) ) ) + DS ) )", "obj1": 0.12955465587044535, "obj2": 0.6563161491436444}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.16022735816873296}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + ( MRS - CRS ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30855985739767083}, {"determining": "( ( DDR + ( ARS / ( RRS / ( FirstVNF_Mem - ACS ) ) ) ) - ( MDR + RRS ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( Min( MUM ,( MLU * ( ( DS + RCSe ) * MUM ) ) ) - CS ) ) * ( ( DS + DS ) * ( MUR + CS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3145402600200949}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,Max( PN,RRS ) )", "choosing": "( Max( MLU,( Max( ( ( ( RMSe * MUC ) / MUC ) - Max( RMSe,MUM ) ),CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9149797570850202, "obj2": 0.033557854352415824}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2279315400978905}, {"determining": "Min( ( Min( ACS ,( ( MDR / ( DDR * ( MRS * Max( RRS,FirstVNF_Mem_Server ) ) ) ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,( FirstVNF_Mem + ( PN + PN ) ) ) - Max( Const,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( CS,Min( CS ,RMSe ) ) ) + ( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe - ( ( MLU * RRSe ) / RCSe ) ) ) - ( Max( Min( DS ,( RCSe / MUC ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.600908446443351}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.582859752417959}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.4033693568575597}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - Max( RMSe,RMSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22672064777327935, "obj2": 0.5610881561782827}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( FirstVNF_RAM ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( ACS / ( ARS - ACS ) ) )", "choosing": "( ( MUR * MUR ) / ( Max( Min( RRSe ,( RCSe - MLU ) ),Min( ( Max( RRSe,MUR ) - CS ) ,MUC ) ) + RRSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4149793374181477}, {"determining": "( Min( Const ,( ( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.024287071722914406}, {"determining": "( Max( FirstVNF_Mem_Server,MRS ) - Min( ( CRS * FirstVNF_CPU ) ,Min( PN ,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,MUC ) + ( ( RRSe - ( Min( ( MUC * MUR ) ,( RRSe * CS ) ) / RCSe ) ) - Max( ( RRSe * MUC ),MUC ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4751807951518593}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RCSe - MUC ) + Max( Max( Min( DS ,MUR ),( ( ( MUM * DS ) + MLU ) + ( MUR / CS ) ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.31654489182246215}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,MDR ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.09339745232974753}, {"determining": "( ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.05768485746566313}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( RRS - MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( ( DS / MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( Max( RCSe,RRSe ) / CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.32103593979783024}, {"determining": "( Max( FirstVNF_CPU_Server,DDR ) - Max( RRS,MDR ) )", "choosing": "( Max( ( Min( MUM ,Max( ( DS + Max( DS,MUR ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( ( RMSe / MUR ),( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.3967611336032389, "obj2": 0.35997648063533055}, {"determining": "( Min( ( MRS * FirstVNF_Mem_Server ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( ( RCSe * MUR ) / ( DS - Max( Max( ( RCSe - ( MUC - MUC ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8603238866396761, "obj2": 0.05277174201864548}, {"determining": "( Min( Const ,( ( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) + ( PN + BR ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,Max( ( DS * Max( MUR,DS ) ),( Max( MUC,RCSe ) + ( CS / ( CS * CS ) ) ) ) ) / Max( Min( MUR ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( MUR ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7165991902834008, "obj2": 0.11817977254440593}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6639676113360324, "obj2": 0.16494772669805594}, {"determining": "( ( Min( MDR ,( Min( Const ,Max( FirstVNF_Mem,Min( ( BR - PN ) ,Const ) ) ) - ( RRS + MDR ) ) ) * FirstVNF_Mem ) - ( PN - MRS ) )", "choosing": "( ( MUC - Min( CS ,( ( ( ( DS * MLU ) - Min( MUM ,Min( MLU ,RMSe ) ) ) * RMSe ) / Max( Max( MUC,( Max( RRSe,MUC ) + MUC ) ),RCSe ) ) ) ) - ( ( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) + Min( RRSe ,DS ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * ( MUC / RMSe ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.493140535509561}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( AMS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6234817813765182, "obj2": 0.1883176745277805}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.32560771212568634}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MUM,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.6781376518218624, "obj2": 0.14593185670717962}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem_Server ) ) ,PN ) ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.7692307692307693, "obj2": 0.08916219621797129}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4027005521713424}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( ( FirstVNF_RAM_Server / MDR ) - AMS ) ,( ( RRS + Const ) / CRS ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( MLU / MLU ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RMSe ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.3346326974280685}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Const + FirstVNF_CPU_Server ) ) ) - ( RRS - MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( ( ( MUC * Min( MUC ,RRSe ) ) / DS ) ,( RCSe / ( RMSe * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.30062842465543643}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.2142523735327348}, {"determining": "( Min( Const ,Max( ( PN - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * ( CS * MUM ) ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.402834008097166, "obj2": 0.3550865007649297}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( ( RRS / DDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),( MUC * MUC ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.6971203563042374}, {"determining": "( ( RRS + MDR ) - ( MDR + ( PN + ( ( BR + Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),MRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( MUC - ( MUC / RMSe ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1729076456589361}, {"determining": "( Max( Const,( MDR + ( PN + ( ( BR / ( ( PN + PN ) + ( RRS / Const ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( Max( Min( Max( ( ( MLU - RRSe ) * ( MUC - MUM ) ),RMSe ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MLU ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( MUM ,MUR ),Min( DS ,MUM ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.21132297644346967}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM - Min( PN ,FirstVNF_CPU_Server ) ) / AMS ) ) + DDR ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( MUM * MUR ) / ( Max( MUR,( RMSe * ( RCSe + MUC ) ) ) - Max( Min( ( MLU + ( CS / MUM ) ) ,Min( RMSe ,( DS / MUM ) ) ),( MUC + ( MUM + ( MUC - ( Max( RCSe,DS ) * ( DS / MUM ) ) ) ) ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7041125351429328}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( ( FirstVNF_Mem_Server / ( MRS + FirstVNF_CPU_Server ) ) ,AMS ) + RRS ) ) ,( PN - MDR ) ) ,( PN - DDR ) )", "choosing": "( Max( MLU,( ( ( ( ( RMSe + MLU ) * MUC ) - DS ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( ( MUR - RCSe ) + ( MUC - MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.03823910255976221}, {"determining": "( ( Const - Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( ACS - FirstVNF_RAM ) )", "choosing": "Min( ( ( Max( ( Max( MUC,DS ) / ( RCSe - CS ) ),( ( DS + DS ) * ( RRSe + Max( Max( DS,RCSe ),Min( DS ,MUC ) ) ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( CS + DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5358730194552395}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + Max( ( ( FirstVNF_RAM / FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ),BR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RCSe * ( RCSe / RMSe ) ) / ( DS - Max( ( MLU + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( ( MLU * RRSe ) / RCSe ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5587085925920873}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) - ( RRS + MDR ) )", "choosing": "( Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) / ( MUR * RRSe ) )", "obj1": 0.9878542510121457, "obj2": 0.004302410043912422}, {"determining": "( ( MDR + ( PN + ( ( BR / Max( CRS,( DDR + MDR ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - ( ( MLU + RRSe ) - CS ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.17910226592783848}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.30442564500111713}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( MDR + ( FirstVNF_Mem + ( MRS - BR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / RRSe ) ) ),Min( MUM ,( ( MUC / ( MUM - RMSe ) ) / MUM ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5757565827193019}], "27": [{"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( PN + Max( ARS,( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MDR ) ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( ( ( RRSe * MUM ) + Max( MUR,MLU ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS / ( RRS + ACS ) ) ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS - ( Min( BR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( RRSe ,( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * ( CS * MUM ) ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3643724696356275, "obj2": 0.3962603132497265}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5931174089068826, "obj2": 0.2072748500315677}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( ( Max( MDR,Min( FirstVNF_RAM_Server ,ARS ) ) - Const ) * ( Max( Max( Min( AMS ,( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / RRS ) ) ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) / ( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( MUM,RRSe ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RCSe ) ) ) + MUR ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7502594057381707}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),Min( PN ,FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2533807699958092}, {"determining": "( Min( Const ,Max( Min( PN ,RRS ),( FirstVNF_Mem_Server + Const ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RCSe + CS ) / ( DS - Max( Max( MUC,( Max( MUC,Max( ( RRSe / MUC ),RRSe ) ) / ( ( RRSe / ( MUC * MUR ) ) / RRSe ) ) ),Max( Min( DS ,( ( RRSe * MUR ) * ( CS * MUM ) ) ),Min( MUM ,MUR ) ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.26200475654484956}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( Min( Const ,( MDR + ( ( ( Const + FirstVNF_RAM_Server ) * ACS ) + ( Min( Min( ARS ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),MUC ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / ( DS * RMSe ) ) ) ) ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.1938823900648467}, {"determining": "( Min( Const ,Max( Min( DDR ,FirstVNF_RAM ),( PN + FirstVNF_Mem_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( ( Max( MUM,MUM ) + MUM ) + RMSe ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.49739900389773056}, {"determining": "( Min( ( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) + ( ( ( PN - ( ARS * BR ) ) + Max( AMS,( Const * FirstVNF_CPU ) ) ) + ( ( ARS / ( FirstVNF_Mem_Server + MDR ) ) - MDR ) ) ) ,Const ) - ( FirstVNF_CPU + ( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "( ( RMSe * RRSe ) / ( Max( RRSe,MUC ) * MUR ) )", "obj1": 0.145748987854251, "obj2": 0.6428988280203497}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5688259109311741, "obj2": 0.22024478291152177}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.08035450382329655}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3319838056680162, "obj2": 0.4693238368513501}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5323886639676113, "obj2": 0.2851019764113941}, {"determining": "( ( MDR + ( Min( DDR ,( ( DDR + ( AMS * AMS ) ) * FirstVNF_CPU_Server ) ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( RCSe ,Max( RCSe,MUM ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7240453354474361}, {"determining": "( Min( ( AMS * Max( DDR,FirstVNF_CPU ) ) ,Max( ( Min( Const ,FirstVNF_CPU_Server ) - ( RRS + MDR ) ),( PN + AMS ) ) ) - ( Min( Const ,AMS ) * RRS ) )", "choosing": "( ( MUM * MUR ) / ( ( MUR - RRSe ) - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( CS ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( Min( MUR ,Max( RRSe,MUC ) ) + ( MLU - RCSe ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MUR * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.415133081880954}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( AMS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6234817813765182, "obj2": 0.1883176745277805}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Max( FirstVNF_Mem_Server,MRS ) - Min( ( CRS * FirstVNF_CPU ) ,Min( PN ,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,MUC ) + ( ( RRSe - ( Min( ( MUC * MUR ) ,( RRSe * CS ) ) / RCSe ) ) - Max( ( RRSe * MUC ),MUC ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4751807951518593}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( DS / RRSe ) ) ),MLU ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5430070054669972}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2279315400978905}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6243378020494667}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.2793522267206478, "obj2": 0.5196274022270235}, {"determining": "( Min( Const ,( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),( RRSe + MUM ) ) ,Min( ( ( RRSe + ( MUR + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.951417004048583, "obj2": 0.01672766603626655}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.48767322676210073}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8805668016194332, "obj2": 0.04305709534832273}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( ( FirstVNF_Mem_Server + Const ) * PN ) ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( ( RCSe * MUC ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07349988878002499}, {"determining": "( ( MDR + ( PN + ( ( BR / Max( CRS,( DDR + MDR ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - ( ( MLU + RRSe ) - CS ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.17910226592783848}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + Min( Min( FirstVNF_Mem_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),MRS ) ) ,PN ) ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( RMSe ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08512588759379534}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( Min( ARS ,ARS ),ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16722964838388832}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Const + FirstVNF_CPU_Server ) ) ) - ( RRS - MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( ( ( MUC * Min( MUC ,RRSe ) ) / DS ) ,( RCSe / ( RMSe * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.30062842465543643}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( Min( DS ,MUM ),RRSe ),( Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( MUC,RCSe ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.6639676113360324, "obj2": 0.16494772669805594}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( Max( FirstVNF_RAM_Server,RRS ) + ( ARS + FirstVNF_Mem_Server ) ) ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6493752774461701}, {"determining": "( Min( Min( ( Max( Min( FirstVNF_CPU ,BR ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( ( RMSe + ( Min( ( RRSe / MLU ) ,( ( ( MUC + DS ) * MLU ) / ( Min( RMSe ,CS ) - MUM ) ) ) - ( ( MUC * MUM ) / RRSe ) ) ),( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.9777327935222672, "obj2": 0.009646078088789593}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,BR ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + Min( Const ,RRS ) ) )", "choosing": "( ( MUC - MLU ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12283620670599474}, {"determining": "( ( Min( MDR ,( Min( Const ,Max( FirstVNF_Mem,Min( ( BR - PN ) ,Const ) ) ) - ( RRS + MDR ) ) ) * FirstVNF_Mem ) - ( PN - MRS ) )", "choosing": "( ( MUC - Min( CS ,( ( ( ( DS * MLU ) - Min( MUM ,Min( MLU ,RMSe ) ) ) * RMSe ) / Max( Max( MUC,( Max( RRSe,MUC ) + MUC ) ),RCSe ) ) ) ) - ( ( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) + Min( RRSe ,DS ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * ( MUC / RMSe ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.493140535509561}, {"determining": "( Min( Const ,( ( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Max( ( ( ( RMSe * MUC ) / MUC ) - Max( RMSe,MUM ) ),CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9352226720647774, "obj2": 0.024278946375463774}, {"determining": "( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6626795008105428}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( Min( ( ARS * BR ) ,AMS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( ( ( CS + Max( CS,MLU ) ) / ( MLU * MUM ) ),RMSe ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe - ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.5835800394338833}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( ( FirstVNF_RAM + ( ( FirstVNF_Mem - ( ( RRS - ( DDR / ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( DDR * CRS ) ) ) + BR ) ) - ( AMS - MRS ) )", "choosing": "( ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( CS ,( ( RMSe * MUM ) * Max( RCSe,MUR ) ) ) ),Max( MUC,( ( ( Max( MUM,RMSe ) + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( ( CS / RCSe ) * MUR ) )", "obj1": 0.09716599190283401, "obj2": 0.6927694558587723}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( MDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MUR * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06948517598742514}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + DS ) )", "obj1": 0.1659919028340081, "obj2": 0.6110372313271788}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MUM,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.6781376518218624, "obj2": 0.14490136148190652}, {"determining": "( Min( Max( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( ( RMSe * MUC ) / MUC ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7630335438182564}, {"determining": "( Min( Min( ( Max( Min( ( AMS * ( FirstVNF_RAM_Server - Const ) ) ,AMS ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( ( RMSe + ( Min( ( RRSe / MLU ) ,( ( ( MUC + DS ) * MLU ) / ( Min( RMSe ,CS ) - MUM ) ) ) - ( ( MUC * MUM ) / RRSe ) ) ),( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( ( RMSe + MLU ) * MUC ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.8967611336032388, "obj2": 0.04017804823691165}, {"determining": "( Min( ACS ,BR ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe - MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( MUC + MUM ) )", "obj1": 0.2611336032388664, "obj2": 0.523605100447322}, {"determining": "Min( ( ( ACS - ( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( ( AMS / Max( FirstVNF_CPU_Server,Min( AMS ,CRS ) ) ) - FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + ( RCSe - MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6110372313271788}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) + ( ( DDR / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ),( ( ( FirstVNF_Mem_Server + ( ( RRS / ACS ) / ( FirstVNF_CPU_Server * Const ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RMSe * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( MUC / ( RRSe - CS ) ) / ( RCSe / ( MLU * MUC ) ) ) ) ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7000325751855445}, {"determining": "Min( ( Min( ACS ,( ( MDR / ( DDR * ( MRS * Max( RRS,FirstVNF_Mem_Server ) ) ) ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( Const ,( FirstVNF_Mem + ( PN + PN ) ) ) - Max( Const,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( CS,Min( CS ,RMSe ) ) ) + ( ( ( ( RRSe + MUM ) - MUR ) / ( RRSe - ( ( MLU * RRSe ) / RCSe ) ) ) - ( Max( Min( DS ,( RCSe / MUC ) ),RCSe ) + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.600908446443351}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.4033693568575597}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + ( MRS - CRS ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30855985739767083}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( FirstVNF_RAM ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( ACS / ( ARS - ACS ) ) )", "choosing": "( ( MUR * MUR ) / ( Max( Min( RRSe ,( RCSe - MLU ) ),Min( ( Max( RRSe,MUR ) - CS ) ,MUC ) ) + RRSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4149793374181477}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - Max( RMSe,RMSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22672064777327935, "obj2": 0.5610881561782827}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5795394079063346}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}, {"determining": "( Min( PN ,( ( FirstVNF_CPU_Server / Min( Const ,Min( Const ,FirstVNF_Mem_Server ) ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( MUM + DS ) ) + MUR ) - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) + ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( Min( DS ,RRSe ),RCSe ) + CS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.057674383102558804}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4271255060728745, "obj2": 0.33943777269489933}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + Max( ( ( FirstVNF_RAM / FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ),BR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RCSe * ( RCSe / RMSe ) ) / ( DS - Max( ( MLU + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( ( MLU * RRSe ) / RCSe ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5587085925920873}, {"determining": "( Min( ARS ,ARS ) / Min( Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( ( RRSe + MUM ) - MUR ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.7692307692307693, "obj2": 0.08869684821405555}, {"determining": "( Min( Const ,Max( ( ( BR / ( ( MDR + CRS ) - Min( PN ,Min( ARS ,FirstVNF_RAM_Server ) ) ) ) - MDR ),( PN + FirstVNF_Mem ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - RCSe ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( RCSe - RRSe ) )", "obj1": 0.27125506072874495, "obj2": 0.5203850452407746}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( MDR + ( FirstVNF_Mem + ( MRS - BR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / RRSe ) ) ),Min( MUM ,( ( MUC / ( MUM - RMSe ) ) / MUM ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5757565827193019}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.15643892134916546}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - Const ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( PN - MDR ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / BR ) ) ) ,( ( DDR / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5323886639676113, "obj2": 0.2851019764113941}, {"determining": "( Min( Const ,( ( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( PN - MRS ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MUC / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.018044387791087958}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( RRS + CRS ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( Max( MLU,( MUR * MUM ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.13075822160392894}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( PN + ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( Max( MUC,Max( RMSe,MUC ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( ( PN + PN ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( DS ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.48785425101214575, "obj2": 0.3041652744238551}, {"determining": "( Min( ( AMS * MRS ) ,ARS ) / Min( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( BR / PN ) ) - Min( DDR ,( ( DDR + ( AMS * AMS ) ) * FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ,( Min( ( ( ( RCSe / ( Max( MLU,DS ) * Max( DS,MUC ) ) ) * Min( Min( MUM ,( MUR * MLU ) ) ,Min( RCSe ,Max( RCSe,MUM ) ) ) ) - RCSe ) ,( MUC / RCSe ) ) * RCSe ) )", "obj1": 0.9271255060728745, "obj2": 0.029321093233512355}, {"determining": "( Max( Const,( MDR + ( PN + ( ( BR / ( ( PN + PN ) + ( RRS / Const ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( Max( Min( Max( ( ( MLU - RRSe ) * ( MUC - MUM ) ),RMSe ) ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MLU ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( MUM ,MUR ),Min( DS ,MUM ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7126306457059153}, {"determining": "( ( MDR + ( PN + ( ( BR / Max( Min( Max( FirstVNF_Mem,ARS ) ,AMS ),( DDR + MDR ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - ( ( MLU + RRSe ) - CS ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13797538360348022}, {"determining": "( ( Const * Max( ( ( MRS / Min( Const ,( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / BR ) ) ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RMSe ) / ( Max( Max( MUR,( DS * MUC ) ),( RMSe / ( Min( ( ( MUM + MUR ) / CS ) ,MUR ) + RMSe ) ) ) - DS ) )", "obj1": 0.11740890688259109, "obj2": 0.6717696399782336}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3206467061801671}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( AMS + PN ) ) ) - ( Max( ( ACS - RRS ),DDR ) + ( BR - PN ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - RRSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( DS * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6243378020494667}, {"determining": "( Min( Const ,Max( ( ( ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RCSe - MUC ) + Max( Max( Min( DS ,MUR ),( ( ( MUM * DS ) + MLU ) + ( MUR / CS ) ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.31654489182246215}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( DDR - ARS ) ,AMS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( RRS + MDR ) )", "choosing": "( RMSe / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.1107338673940612}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04620072994992092}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( DS + DS ) - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1019213410609054}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8603238866396761, "obj2": 0.05184750577196767}, {"determining": "( Min( Const ,Max( ( FirstVNF_RAM * PN ),( PN + PN ) ) ) - ( AMS + MDR ) )", "choosing": "Min( ( RRSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MUR - DS ) ) * ( ( DS - DS ) * ( DS + CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5326326415769314}, {"determining": "( ( DDR + ( ARS / ( RRS / ( FirstVNF_Mem - ACS ) ) ) ) - ( MDR + RRS ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( Min( MUM ,( MLU * ( ( DS + RCSe ) * MUM ) ) ) - CS ) ) * ( ( DS + DS ) * ( MUR + CS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3145402600200949}, {"determining": "( Min( Const ,( MDR + ( ( ( BR / Min( AMS ,( PN + FirstVNF_Mem_Server ) ) ) - FirstVNF_Mem_Server ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( Min( ( RMSe - ( DS + Max( CS,RRSe ) ) ) ,MLU ) * MUR ) ) + Max( MUR,DS ) ) )", "obj1": 0.6983805668016194, "obj2": 0.1295651645325139}, {"determining": "( Max( Const,( MDR + Min( ( ( DDR / ( Max( FirstVNF_RAM,ACS ) * ( PN / BR ) ) ) - FirstVNF_Mem ) ,( ACS - BR ) ) ) ) - ( RRS - MDR ) )", "choosing": "( ( MUM * ( RCSe + MLU ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( MUM ,RMSe ),Min( DS ,MUM ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) + MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.07489878542510121, "obj2": 0.7202138456122152}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5607287449392713, "obj2": 0.22456613987868107}, {"determining": "Min( Min( Min( FirstVNF_Mem_Server ,( Min( ( AMS / ( ( MRS + MRS ) * PN ) ) ,AMS ) + RRS ) ) ,Min( PN ,MDR ) ) ,Max( PN,RRS ) )", "choosing": "( Min( MUM ,DS ) / ( ( RMSe * MUM ) + ( ( MUR - MUM ) - MLU ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1156737762777571}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( MLU,MLU ) - ( CS + MLU ) ) ) ) - ( CS + MLU ) )", "obj1": 0.25303643724696356, "obj2": 0.5423407911375615}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1729076456589361}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7054627772063775}, {"determining": "( Min( ARS ,Min( ( Const + CRS ) ,( ( FirstVNF_Mem_Server * ( PN / FirstVNF_RAM_Server ) ) + ( ( ARS - CRS ) / FirstVNF_Mem ) ) ) ) / Min( Min( ( BR + BR ) ,AMS ) ,Max( MDR,PN ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM / MUR ) ),( ( ( ( DS * CS ) - MUC ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,( DS + MUC ) )", "obj1": 0.742914979757085, "obj2": 0.09952208702518488}], "28": [{"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( MLU * RRSe ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( PN + Max( ARS,( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MDR ) ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( ( ( RRSe * MUM ) + Max( MUR,MLU ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Min( DS ,RMSe ) ,( ( RRSe / RRSe ) * RMSe ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25823486139881047}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( ( ( FirstVNF_RAM - CRS ) + PN ) ,Max( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / FirstVNF_CPU ) ) / Min( AMS ,FirstVNF_Mem_Server ) ) - ARS ),Min( BR ,Min( ACS ,( ACS / Max( CRS,CRS ) ) ) ) ) ) - ( CRS + MDR ) )", "choosing": "( Max( Min( Min( Max( CS,MLU ) ,( Max( ( Max( RRSe,CS ) / Min( MLU ,RRSe ) ),Max( Min( MLU ,MUC ),CS ) ) / RMSe ) ) ,Min( RCSe ,MUC ) ),( Min( ( RRSe + MUM ) ,MUR ) / ( ( RCSe / Max( ( RRSe / MLU ),( MUC - RCSe ) ) ) / RRSe ) ) ) - ( MLU - CS ) )", "obj1": 0.37044534412955465, "obj2": 0.392575352737603}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( ( MUM * MUR ) ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3269255960474248}, {"determining": "( Min( Const ,( PN + ( MDR - ( BR / Min( Const ,AMS ) ) ) ) ) - ( DDR * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MUM * Min( ( DS * MUC ) ,RMSe ) ) / ( DS * ( MUM + MLU ) ) )", "obj1": 0.9757085020242915, "obj2": 0.009385680878439617}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3299595141700405, "obj2": 0.460242714531596}, {"determining": "( Min( Const ,Max( Min( DDR ,FirstVNF_RAM ),( PN + FirstVNF_Mem_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( ( Max( MUM,MUM ) + MUM ) + RMSe ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.49739900389773056}, {"determining": "( Min( ( AMS * Max( DDR,FirstVNF_CPU ) ) ,Max( ( Min( Const ,FirstVNF_CPU_Server ) - ( RRS + MDR ) ),( PN + AMS ) ) ) - ( Min( Const ,AMS ) * RRS ) )", "choosing": "( ( MUM * MUR ) / ( ( MUR - RRSe ) - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( CS ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( Min( MUR ,Max( RRSe,MUC ) ) + ( MLU - RCSe ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MUR * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.415133081880954}, {"determining": "( Min( ARS ,ARS ) / Min( Min( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( ( RRSe + MUM ) - MUR ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.7692307692307693, "obj2": 0.08869684821405555}, {"determining": "( Min( Const ,( PN + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),( RRSe + MUM ) ) ,Min( ( ( RRSe + ( MUR + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.951417004048583, "obj2": 0.01672766603626655}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5931174089068826, "obj2": 0.2072748500315677}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( Min( ARS ,ARS ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + ( RCSe / ( ( RRSe + MUM ) - MUR ) ) ) ) ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7479005611239012}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( PN + ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( Max( MUC,Max( RMSe,MUC ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( Min( Const ,( MDR + ( ( ( Const + FirstVNF_RAM_Server ) * ACS ) + ( Min( Min( ARS ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),MUC ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / ( DS * RMSe ) ) ) ) ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.1938823900648467}, {"determining": "( ( FirstVNF_RAM + ( ( FirstVNF_Mem - ( ( RRS - ( DDR / ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( DDR * CRS ) ) ) + BR ) ) - ( AMS - MRS ) )", "choosing": "( ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( CS ,( ( RMSe * MUM ) * Max( RCSe,MUR ) ) ) ),Max( MUC,( ( ( Max( MUM,RMSe ) + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( ( CS / RCSe ) * MUR ) )", "obj1": 0.09716599190283401, "obj2": 0.6927694558587723}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,BR ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + Min( Const ,RRS ) ) )", "choosing": "( ( MUC - MLU ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12283620670599474}, {"determining": "( Min( Min( ( Const + CRS ) ,MDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RRSe + MUM ) - MLU ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09743195520457011}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6243378020494667}, {"determining": "( ( MDR + ( Min( DDR ,( ( DDR + ( AMS * AMS ) ) * FirstVNF_CPU_Server ) ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( RCSe ,Max( RCSe,MUM ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7240453354474361}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + Min( Min( FirstVNF_Mem_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),MRS ) ) ,PN ) ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( RMSe ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08512588759379534}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( Const - MDR ) ) + ( Const + ( RRS - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) + Max( ( DS + Max( ( MLU / MUC ),MUC ) ),( Min( Max( RMSe,MUR ) ,Max( MUC,RRSe ) ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.1786741003905106}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5931174089068826, "obj2": 0.2072748500315677}, {"determining": "( Min( Const ,Max( ( ( ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( MDR + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5149056060030154}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( Const + FirstVNF_CPU_Server ) ) ) - ( RRS - MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( ( ( MUC * Min( MUC ,RRSe ) ) / DS ) ,( RCSe / ( RMSe * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.30062842465543643}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem - RRS ) / ACS ) ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUR,( RCSe - ( CS / ( MUR * MUM ) ) ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2279315400978905}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),Min( PN ,FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2533807699958092}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( AMS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.18775634269783545}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),Min( PN ,FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.2542603998561337}, {"determining": "( Min( ACS ,BR ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe - MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( MUC + MUM ) )", "obj1": 0.2611336032388664, "obj2": 0.523605100447322}, {"determining": "( Min( Const ,Max( ( FirstVNF_RAM * PN ),( PN + PN ) ) ) - ( AMS + MDR ) )", "choosing": "Min( ( RRSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MUR - DS ) ) * ( ( DS - DS ) * ( DS + CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5326326415769314}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8805668016194332, "obj2": 0.042743949510022326}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( Min( ( ARS * BR ) ,AMS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( ( ( CS + Max( CS,MLU ) ) / ( MLU * MUM ) ),RMSe ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe - ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.5835800394338833}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( MLU,MLU ) - ( CS + MLU ) ) ) ) - ( CS + MLU ) )", "obj1": 0.25303643724696356, "obj2": 0.5423407911375615}, {"determining": "( ( Const * Max( Min( PN ,FirstVNF_CPU_Server ),( ACS - MRS ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( Max( MUM,CS ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11558250442517273}, {"determining": "( Min( ARS ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + FirstVNF_CPU ) ) ) - ( RRS - FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,( ( ( RRSe + Min( Max( Max( RRSe,MUR ),CS ) ,RRSe ) ) - ( ( CS * ( DS / RMSe ) ) / MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4271255060728745, "obj2": 0.33943777269489933}, {"determining": "( ( RRS + CRS ) - ( Max( DDR,Max( Max( ACS,MRS ),RRS ) ) + ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUM / Min( MLU ,RMSe ) ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( MUR + RRSe ) - MUR ) / ( ( RCSe / ( MLU * MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6558704453441295, "obj2": 0.16324910294340358}, {"determining": "( ( Const * Max( ( ( MRS / Min( Const ,( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / BR ) ) ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RMSe ) / ( Max( Max( MUR,( DS * MUC ) ),( RMSe / ( Min( ( ( MUM + MUR ) / CS ) ,MUR ) + RMSe ) ) ) - DS ) )", "obj1": 0.11740890688259109, "obj2": 0.6717696399782336}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + ( MRS - CRS ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30855985739767083}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5149301858302774}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( Min( Const ,Max( ( ( PN / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( BR - ACS ) ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * ( RCSe + DS ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) - CS ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6833088450149483}, {"determining": "Min( ( ( ACS - ( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( ( AMS / Max( FirstVNF_CPU_Server,Min( AMS ,CRS ) ) ) - FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM + Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + ( RCSe - MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6110372313271788}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * Min( FirstVNF_RAM_Server ,MDR ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3585191806852071}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.08035450382329655}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( DS / RRSe ) ) ),MLU ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5472897047293983}, {"determining": "( Min( PN ,( ( FirstVNF_CPU_Server / Min( Const ,Min( Const ,FirstVNF_Mem_Server ) ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( MUM + DS ) ) + MUR ) - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) + ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( Min( DS ,RRSe ),RCSe ) + CS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.057674383102558804}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3206467061801671}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - Max( MUM,RMSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6402708874297165}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + DS ) )", "obj1": 0.1659919028340081, "obj2": 0.6110372313271788}, {"determining": "( Min( Const ,Max( ( ( PN / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6519307028331103}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( AMS ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MUM,RRSe ) ) ) ) ) ) - DS ) / ( MUM * MUR ) )", "obj1": 0.6781376518218624, "obj2": 0.14490136148190652}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / ( RRS + MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.31371970529932447}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.03888005512501579}, {"determining": "( Min( Max( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( ( RMSe * MUC ) / MUC ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7630335438182564}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5688259109311741, "obj2": 0.22024478291152177}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( ( FirstVNF_CPU_Server - ( AMS / MDR ) ) + ACS ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( FirstVNF_RAM + MDR ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,Min( BR ,Max( FirstVNF_RAM,CRS ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) * Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - ( ( Max( RCSe,DS ) - Min( DS ,( ( DS * DS ) - ( Min( MLU ,CS ) - MUR ) ) ) ) + Max( RRSe,( MUM + Min( RCSe ,( ( CS / MUR ) - Min( DS ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6008514750279176}, {"determining": "( Min( Const ,( ( ( ( CRS / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * FirstVNF_CPU ) ) + FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( PN - MRS ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( ( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( Max( Max( RCSe,MUR ),Min( RRSe ,Min( MUM ,MUC ) ) ) / ( CS - ( ( MUR / ( DS - MUR ) ) * ( CS + RCSe ) ) ) ) ) ) ,Min( ( ( RRSe + ( RCSe + MUM ) ) - Max( Max( RCSe,MUC ),Max( ( MUM + Max( ( MUC / RCSe ),MUC ) ),( ( DS / DS ) + Max( RCSe,MUC ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.018044387791087958}, {"determining": "( Min( Min( ( Max( Min( ( AMS * ( FirstVNF_RAM_Server - Const ) ) ,AMS ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( ( RMSe + ( Min( ( RRSe / MLU ) ,( ( ( MUC + DS ) * MLU ) / ( Min( RMSe ,CS ) - MUM ) ) ) - ( ( MUC * MUM ) / RRSe ) ) ),( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( ( RMSe + MLU ) * MUC ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.8967611336032388, "obj2": 0.04017804823691165}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( DS / RRSe ) ) ),MLU ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5430070054669972}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5795394079063346}, {"determining": "( Min( Const ,( ( ARS / ACS ) * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( ( RRSe + MUR ) + MUR ),Max( MUR,( ( ( RRSe + RRSe ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.135920690516704}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Max( FirstVNF_Mem,ARS ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4751807951518593}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( MDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MUR * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06948517598742514}, {"determining": "( Min( ( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) + ( ( ( PN - ( ARS * BR ) ) + Max( AMS,( Const * FirstVNF_CPU ) ) ) + ( ( ARS / ( FirstVNF_Mem_Server + MDR ) ) - MDR ) ) ) ,Const ) - ( FirstVNF_CPU + ( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "( ( RMSe * RRSe ) / ( Max( RRSe,MUC ) * MUR ) )", "obj1": 0.145748987854251, "obj2": 0.6428988280203497}, {"determining": "( Min( Const ,( MDR + ( MDR + ( ( ( ( RRS + DDR ) * ( AMS + MRS ) ) / ( FirstVNF_CPU * DDR ) ) - MDR ) ) ) ) - ( RRS + AMS ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( MUR ,DS ),( MUM + MUR ) ),( Max( ( ( MUM * MUR ) / RCSe ),MLU ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( Max( RCSe,Max( MUC,DS ) ) ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( DS,RCSe ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.16089342005083704}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.4024194776277832}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04620072994992092}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.4047553529250358}, {"determining": "( Min( Const ,Max( ( ( ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6475003326302734}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( FirstVNF_RAM ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( ACS / ( ARS - ACS ) ) )", "choosing": "( ( MUR * MUR ) / ( Max( Min( RRSe ,( RCSe - MLU ) ),Min( ( Max( RRSe,MUR ) - CS ) ,MUC ) ) + RRSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4149793374181477}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + Max( ( ( FirstVNF_RAM / FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ),BR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( RCSe * ( RCSe / RMSe ) ) / ( DS - Max( ( MLU + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( ( MLU * RRSe ) / RCSe ) / RRSe ) ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5587085925920873}, {"determining": "( Min( Const ,( MDR + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.1937220740877357}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( MUR ,Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( ( DS + DS ) - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1019213410609054}, {"determining": "( Min( Min( ( Max( Min( ( AMS * ( FirstVNF_RAM_Server - Const ) ) ,AMS ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / RRSe ) ) ),Min( MUM ,( ( MUC / ( MUM - RMSe ) ) / MUM ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.04222001665168806}, {"determining": "( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6626795008105428}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1729076456589361}, {"determining": "( Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( ACS - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) / Min( Min( ( DDR + CRS ) ,DDR ) ,ARS ) )", "choosing": "Min( RRSe ,( Min( Max( RRSe,RMSe ) ,( RCSe - Min( ( MUC - MUR ) ,DS ) ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07767965498304454}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( ( FirstVNF_Mem_Server + Const ) * PN ) ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( ( RCSe * MUC ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07349988878002499}, {"determining": "( ( Min( MDR ,( Min( Const ,Max( FirstVNF_Mem,Min( ( BR - PN ) ,Const ) ) ) - ( RRS + MDR ) ) ) * FirstVNF_Mem ) - ( PN - MRS ) )", "choosing": "( ( MUC - Min( CS ,( ( ( ( DS * MLU ) - Min( MUM ,Min( MLU ,RMSe ) ) ) * RMSe ) / Max( Max( MUC,( Max( RRSe,MUC ) + MUC ) ),RCSe ) ) ) ) - ( ( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) + Min( RRSe ,DS ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * ( MUC / RMSe ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.493140535509561}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RCSe - MUC ) + Max( Max( Min( DS ,MUR ),( ( ( MUM * DS ) + MLU ) + ( MUR / CS ) ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.31654489182246215}, {"determining": "( Min( Const ,( ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.005217021813824399}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6243378020494667}, {"determining": "( Max( FirstVNF_Mem_Server,MRS ) - Min( ( CRS * FirstVNF_CPU ) ,Min( PN ,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,MUC ) + ( ( RRSe - ( Min( ( MUC * MUR ) ,( RRSe * CS ) ) / RCSe ) ) - Max( ( RRSe * MUC ),MUC ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4751807951518593}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( Min( ( ACS / MDR ) ,FirstVNF_RAM_Server ) + RRS ) ) / Min( PN ,MDR ) ) ,Max( PN,RRS ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * CS ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / Min( MLU ,MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.07489878542510121, "obj2": 0.7198674942960652}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5688259109311741, "obj2": 0.22024478291152177}, {"determining": "( Min( Const ,( Min( ( AMS - RRS ) ,FirstVNF_RAM_Server ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * RMSe ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( ( RMSe * MUM ) / RCSe ) * DS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22672064777327935, "obj2": 0.5610881561782827}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( MDR + ( FirstVNF_Mem + ( MRS - BR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / RRSe ) ) ),Min( MUM ,( ( MUC / ( MUM - RMSe ) ) / MUM ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9230769230769231, "obj2": 0.0353309588534387}, {"determining": "( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) - ( ( BR / Min( ( DDR - ARS ) ,AMS ) ) + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.67717633207164}], "29": [{"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) * ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( PN / FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( MLU * RRSe ) ) ) ),Max( MUC,( MLU - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( MLU * RRSe ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Max( ( ( BR / Min( Const ,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.766633912371729}, {"determining": "( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Min( DS ,RMSe ) ,( ( RRSe / RRSe ) * RMSe ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25823486139881047}, {"determining": "( ( ( RRS / Const ) - Const ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( ( PN / BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe / MLU ) ,( Max( RCSe,Max( CS,MUR ) ) * RMSe ) ) - ( ( MUC * MUM ) / RRSe ) ) ) * ( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( MUM * DS ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.5161943319838057, "obj2": 0.2998993675603393}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( PN + ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( Max( MUC,Max( RMSe,MUC ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( ( ( FirstVNF_RAM - CRS ) + PN ) ,Max( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / FirstVNF_CPU ) ) / Min( AMS ,FirstVNF_Mem_Server ) ) - ARS ),Min( BR ,Min( ACS ,( ACS / Max( CRS,CRS ) ) ) ) ) ) - ( CRS + MDR ) )", "choosing": "( Max( Min( Min( Max( CS,MLU ) ,( Max( ( Max( RRSe,CS ) / Min( MLU ,RRSe ) ),Max( Min( MLU ,MUC ),CS ) ) / RMSe ) ) ,Min( RCSe ,MUC ) ),( Min( ( RRSe + MUM ) ,MUR ) / ( ( RCSe / Max( ( RRSe / MLU ),( MUC - RCSe ) ) ) / RRSe ) ) ) - ( MLU - CS ) )", "obj1": 0.37044534412955465, "obj2": 0.392575352737603}, {"determining": "( Min( Const ,( Max( ( ( Const - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.4868811412811645}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / RRSe ) ) ),Min( MUM ,( ( MUC / ( MUM - RMSe ) ) / MUM ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5043373836171273}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem - RRS ) / ACS ) ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUR,( RCSe - ( CS / ( MUR * MUM ) ) ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.2279315400978905}, {"determining": "( Min( Const ,( MDR + ( MDR + ( ( ( ( RRS + DDR ) * ( AMS + MRS ) ) / ( FirstVNF_CPU * DDR ) ) - MDR ) ) ) ) - ( RRS + AMS ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( MUR ,DS ),( MUM + MUR ) ),( Max( ( ( MUM * MUR ) / RCSe ),MLU ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( Max( RCSe,Max( MUC,DS ) ) ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( DS,RCSe ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.16089342005083704}, {"determining": "( ( Const * Max( Min( PN ,FirstVNF_CPU_Server ),( ACS - MRS ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( Max( MUM,CS ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11558250442517273}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3299595141700405, "obj2": 0.460242714531596}, {"determining": "( Min( ARS ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + FirstVNF_CPU ) ) ) - ( RRS - FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,( ( ( RRSe + Min( Max( Max( RRSe,MUR ),CS ) ,RRSe ) ) - ( ( CS * ( DS / RMSe ) ) / MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4271255060728745, "obj2": 0.33943777269489933}, {"determining": "( Min( ACS ,BR ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe - MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( MUC + MUM ) )", "obj1": 0.2611336032388664, "obj2": 0.523605100447322}, {"determining": "( Min( ( AMS * Max( DDR,FirstVNF_CPU ) ) ,Max( ( Min( Const ,FirstVNF_CPU_Server ) - ( RRS + MDR ) ),( PN + AMS ) ) ) - ( Min( Const ,AMS ) * RRS ) )", "choosing": "( ( MUM * MUR ) / ( ( MUR - RRSe ) - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( CS ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( Min( MUR ,Max( RRSe,MUC ) ) + ( MLU - RCSe ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MUR * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.415133081880954}, {"determining": "( Min( Const ,Max( ( ( CRS - FirstVNF_Mem_Server ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( PN + PN ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( MUC,RCSe ) + ( MUC * DS ) ) ) ) ) ,( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) * ( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,Min( MUR ,RCSe ) ) ) ),CS ) / RCSe ) ) )", "obj1": 0.4473684210526316, "obj2": 0.32975281360714936}, {"determining": "( Min( Const ,Max( ( FirstVNF_RAM * PN ),( PN + PN ) ) ) - ( AMS + MDR ) )", "choosing": "Min( ( RRSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MUR - DS ) ) * ( ( DS - DS ) * ( DS + CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5326326415769314}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5931174089068826, "obj2": 0.2072748500315677}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( Min( Const ,( MDR + ( ( ( Const + FirstVNF_RAM_Server ) * ACS ) + ( Min( Min( ARS ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),MUC ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / ( DS * RMSe ) ) ) ) ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.1938823900648467}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( RRS + MDR ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),( RCSe / ( MLU * RRSe ) ) ) ) ) + ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.027459841047240318}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1729076456589361}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( FirstVNF_Mem,Max( FirstVNF_Mem,ARS ) ) ) - ( RRS + MDR ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4751807951518593}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + Max( Max( MRS,MRS ),ARS ) ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,DDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - Min( DS ,( MLU * RMSe ) ) ) / ( ( RCSe / ( MLU - RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5931174089068826, "obj2": 0.2072748500315677}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),Min( PN ,FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2533807699958092}, {"determining": "( Min( ( RRS + ( PN + ( ( BR / Min( AMS ,AMS ) ) - ( Max( ( MRS + ACS ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server / MDR ) / AMS ) ) ) ) ) ,Const ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,Max( ( ( Min( MLU ,RRSe ) + MUM ) * RCSe ),MUM ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.14125847347595513}, {"determining": "( Min( Const ,( Max( ( PN + PN ),( ( CRS - MRS ) - ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + MDR ) ) ) ) + ( ( Max( FirstVNF_RAM,( MDR + RRS ) ) / ARS ) + ( MDR - RRS ) ) ) ) - ( Max( FirstVNF_CPU_Server,MDR ) + ( FirstVNF_CPU_Server * ( RRS - PN ) ) ) )", "choosing": "( ( Max( ( ( MUC * DS ) + MUR ),Min( MUC ,MUM ) ) * MUR ) / ( DS - ( ( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) + Max( ( Max( ( MLU / RCSe ),MUC ) + DS ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( ( MUC * ( ( DS * ( RCSe * MLU ) ) - Max( ( MUR * RCSe ),Min( MLU ,MUR ) ) ) ),( ( ( RRSe + MUM ) - MUR ) / Min( CS ,Min( ( RCSe - RMSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.18282998714181797}, {"determining": "( Min( Max( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,Min( Max( RRS,AMS ) ,RRS ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) * Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( ( BR / ( RRS + MDR ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( ( ( MUM + MUC ) / ( RRSe * ( CS / RRSe ) ) ),CS ) * DS ) / Min( DS ,( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( ( RMSe * MUC ) / MUC ) ) ) + Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( RRSe + Max( MUM,DS ) ) ) ) ) )", "obj1": 0.06477732793522267, "obj2": 0.7422220849534064}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.6169768309056689}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) + ( PN + ( ( BR / ( ( CRS + MDR ) + MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MLU / CS ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),( MUM + MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12283620670599474}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),Min( PN ,FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( Max( Min( DS ,MUR ),( MUM + MUR ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.2541647194418079}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( CS ,( DS / RRSe ) ) ),MLU ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5404211328061904}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + Min( Min( FirstVNF_Mem_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),MRS ) ) ,PN ) ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( RMSe ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08512588759379534}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8987854251012146, "obj2": 0.03654557744382942}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5408953574350158}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( Min( ( ARS * BR ) ,AMS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( ( ( CS + Max( CS,MLU ) ) / ( MLU * MUM ) ),RMSe ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe - ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.5835800394338833}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,BR ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + Min( Const ,RRS ) ) )", "choosing": "( ( MUC - MLU ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12283620670599474}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5593885189355492}, {"determining": "( ( RRS + CRS ) - ( Max( DDR,Max( Max( ACS,MRS ),RRS ) ) + ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUM / Min( MLU ,RMSe ) ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( MUR + RRSe ) - MUR ) / ( ( RCSe / ( MLU * MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6558704453441295, "obj2": 0.16324910294340358}, {"determining": "( ( Const * Max( ( ( MRS / Min( Const ,( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / BR ) ) ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RMSe ) / ( Max( Max( MUR,( DS * MUC ) ),( RMSe / ( Min( ( ( MUM + MUR ) / CS ) ,MUR ) + RMSe ) ) ) - DS ) )", "obj1": 0.11740890688259109, "obj2": 0.6717696399782336}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( Min( Const ,( MDR + ( ( ( Const / FirstVNF_RAM_Server ) * ACS ) + ( Min( Min( ARS ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RRSe * MLU ) / RRSe ) ),Min( MUC ,MUC ) ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / Max( DS,RMSe ) ) ) ) ) ) ) )", "obj1": 0.058704453441295545, "obj2": 0.7510435279575832}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + ( MRS - CRS ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30855985739767083}, {"determining": "( ( MDR + ( Min( DDR ,( ( DDR + ( AMS * AMS ) ) * FirstVNF_CPU_Server ) ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( RCSe ,Max( RCSe,MUM ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7240453354474361}, {"determining": "( Min( ACS ,( MDR + ( PN + ( Min( Min( RRS ,( AMS / FirstVNF_Mem ) ) ,( FirstVNF_CPU / BR ) ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) + ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( ( ( CS / ( DS - ( MUR / ( CS * CS ) ) ) ) - RMSe ) - Max( Max( Min( DS ,CS ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.1035460953934345}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( MDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MUR * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06948517598742514}, {"determining": "( Min( Const ,( PN + ( MDR - ( BR / Min( Const ,AMS ) ) ) ) ) - ( DDR * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MUM * Min( ( DS * MUC ) ,RMSe ) ) / ( DS * ( MUM + MLU ) ) )", "obj1": 0.9757085020242915, "obj2": 0.009385680878439617}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( Min( RRS ,ARS ),ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16722964838388832}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( FirstVNF_CPU_Server ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / MUC ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.135920690516704}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( MDR + ( FirstVNF_Mem + ( MRS - BR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9271255060728745, "obj2": 0.03322135041455654}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),CS ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6243378020494667}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.4047553529250358}, {"determining": "( Min( Const ,Max( ( ( ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6475003326302734}, {"determining": "( Min( Const ,Max( Min( DDR ,FirstVNF_RAM ),( PN + FirstVNF_Mem_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( ( Max( MUM,MUM ) + MUM ) + RMSe ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.49739900389773056}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8805668016194332, "obj2": 0.042743949510022326}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( MDR + ( FirstVNF_Mem + ( MRS - BR ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / RRSe ) ) ),Min( MUM ,( ( MUC / ( MUM - RMSe ) ) / MUM ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9230769230769231, "obj2": 0.0353309588534387}, {"determining": "( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) - ( ( BR / Min( ( DDR - ARS ) ,AMS ) ) + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.67717633207164}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - ( ( MLU + RRSe ) - CS ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8603238866396761, "obj2": 0.05325907658754188}, {"determining": "( Min( PN ,( ( FirstVNF_CPU_Server / Min( Const ,Min( Const ,FirstVNF_Mem_Server ) ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( MUM + DS ) ) + MUR ) - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) + ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( Min( DS ,RRSe ),RCSe ) + CS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.057674383102558804}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5688259109311741, "obj2": 0.22024478291152177}, {"determining": "( Min( Const ,( ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,AMS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ) ) - ( CS + MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.005214990476961739}, {"determining": "( Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( ACS - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) / Min( Min( ( DDR + CRS ) ,DDR ) ,ARS ) )", "choosing": "Min( RRSe ,( Min( Max( RRSe,RMSe ) ,( RCSe - Min( ( MUC - MUR ) ,DS ) ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07767965498304454}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( ( DDR / ( ( FirstVNF_Mem_Server + Const ) * PN ) ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( ( RCSe * MUC ) * ( ( RMSe + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.07349988878002499}, {"determining": "( ( FirstVNF_RAM + ( ( FirstVNF_Mem - ( ( RRS - ( DDR / ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( DDR * CRS ) ) ) + BR ) ) - ( AMS - MRS ) )", "choosing": "( ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( CS ,( ( RMSe * MUM ) * Max( RCSe,MUR ) ) ) ),Max( MUC,( ( ( Max( MUM,RMSe ) + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) / ( ( CS / RCSe ) * MUR ) )", "obj1": 0.09716599190283401, "obj2": 0.6927694558587723}, {"determining": "( Min( Const ,( Min( ( AMS - RRS ) ,FirstVNF_RAM_Server ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,PN ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * RMSe ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( ( RMSe * MUM ) / RCSe ) * DS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.22672064777327935, "obj2": 0.5610881561782827}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( ARS ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,( RCSe / ( MLU * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.30062842465543643}, {"determining": "( Min( ( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) + ( ( ( PN - ( ARS * BR ) ) + Max( AMS,( Const * FirstVNF_CPU ) ) ) + ( ( ARS / ( FirstVNF_Mem_Server + MDR ) ) - MDR ) ) ) ,Const ) - ( FirstVNF_CPU + ( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "( ( RMSe * RRSe ) / ( Max( RRSe,MUC ) * MUR ) )", "obj1": 0.145748987854251, "obj2": 0.6428988280203497}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + DS ) )", "obj1": 0.1720647773279352, "obj2": 0.6104006579806268}, {"determining": "( Max( FirstVNF_Mem_Server,MRS ) - Min( ( CRS * FirstVNF_CPU ) ,Min( PN ,ARS ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,MUC ) + ( ( RRSe - ( Min( ( MUC * MUR ) ,( RRSe * CS ) ) / RCSe ) ) - Max( ( RRSe * MUC ),MUC ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.4751807951518593}, {"determining": "( Min( Const ,( ( PN + ( ( BR / Min( Max( BR,ARS ) ,AMS ) ) - MDR ) ) + Max( ( ( CRS - MRS ) - ( RRS + ( ( BR / CRS ) / Max( ARS,Const ) ) ) ),( ARS + PN ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( Min( Max( ( CS + RRSe ),MUR ) ,( CS * MUM ) ) ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( Max( ( RRSe - MLU ),DS ) / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MUC ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.562753036437247, "obj2": 0.22304654849676822}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ) ,( Min( Max( Min( MUR ,( RCSe / ( MLU * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.3032399915090701}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - Max( MUM,RMSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6402708874297165}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( FirstVNF_RAM ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( ACS / ( ARS - ACS ) ) )", "choosing": "( ( MUR * MUR ) / ( Max( Min( RRSe ,( RCSe - MLU ) ),Min( ( Max( RRSe,MUR ) - CS ) ,MUC ) ) + RRSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4149793374181477}, {"determining": "( ( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( RCSe / ( MLU * RRSe ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04620072994992092}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,RRS ) ) ) ,( Min( Min( ARS ,ARS ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( PN / RRS ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( MUR - ( RRSe + MUM ) ) / ( ( RRSe / ( DS * RCSe ) ) / Max( DS,RMSe ) ) ) ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7052932378388319}, {"determining": "( Min( Const ,( ( ARS / ACS ) * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( ( RRSe + MUR ) + MUR ),Max( MUR,( ( ( RRSe + RRSe ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.135920690516704}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RCSe - MUC ) + Max( Max( Min( DS ,MUR ),( ( ( MUM * DS ) + MLU ) + ( MUR / CS ) ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.31654489182246215}, {"determining": "( Min( Min( ( Const + CRS ) ,MDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RRSe + MUM ) - MLU ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7550607287449392, "obj2": 0.09570948722066541}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MLU * RRSe ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6894033971625552}, {"determining": "( ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) + ( ( BR / Min( Const ,AMS ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.013540192654174466}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.08035450382329655}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5757565827193019}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5993996791799346}, {"determining": "( ( PN + ( FirstVNF_RAM_Server / MDR ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7116059064403186}, {"determining": "( Min( Const ,Max( Min( PN ,DDR ),( PN + PN ) ) ) - ( RRS + Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * Min( RRSe ,CS ) ) ) ),Min( MUM ,MUR ) ),Max( DS,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6626795008105428}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( MDR,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3107599890202515}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5795217921897927}, {"determining": "( Min( Const ,( MDR + ( PN + Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / MUC ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7008639471122441}, {"determining": "( Min( Min( ( Max( Min( ( Min( Const ,DDR ) - ( RRS + MDR ) ) ,AMS ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( ( RMSe + ( Min( ( RRSe / MLU ) ,( ( ( MUC + DS ) * MLU ) / ( Min( RMSe ,CS ) - MUM ) ) ) - ( ( MUC * MUM ) / RRSe ) ) ),( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( ( RCSe - MLU ) * MUC ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.9635627530364372, "obj2": 0.015472022552089125}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5688259109311741, "obj2": 0.22024478291152177}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.40163849261990786}], "30": [{"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / ( FirstVNF_CPU * DDR ) ) - MDR ) ) ) ) - ( RRS + AMS ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + MLU ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( Max( RCSe,Max( MUC,DS ) ) ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) * ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( PN / FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( MLU * RRSe ) ) ) ),Max( MUC,( MLU - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),MUC ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / ( DS * RMSe ) ) ) ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.7588329074760797}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( MDR,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5121457489878543, "obj2": 0.28316073967767336}, {"determining": "( Min( ( ( FirstVNF_RAM - CRS ) + PN ) ,Max( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / FirstVNF_CPU ) ) / Min( AMS ,FirstVNF_Mem_Server ) ) - ARS ),Min( BR ,Min( ACS ,( ACS / Max( CRS,CRS ) ) ) ) ) ) - ( CRS + MDR ) )", "choosing": "( Max( Min( Min( Max( CS,MLU ) ,( Max( ( Max( RRSe,CS ) / Min( MLU ,RRSe ) ),Max( Min( MLU ,MUC ),CS ) ) / RMSe ) ) ,Min( RCSe ,MUC ) ),( Min( ( RRSe + MUM ) ,MUR ) / ( ( RCSe / Max( ( RRSe / MLU ),( MUC - RCSe ) ) ) / RRSe ) ) ) - ( MLU - CS ) )", "obj1": 0.37044534412955465, "obj2": 0.392575352737603}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( PN + ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( Max( MUC,Max( RMSe,MUC ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - RCSe ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5519547508031711}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}, {"determining": "( Min( Const ,( MDR + ( MDR + ( ( ( ( RRS + DDR ) * ( AMS + MRS ) ) / ( FirstVNF_CPU * DDR ) ) - MDR ) ) ) ) - ( RRS + AMS ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( MUR ,DS ),( MUM + MUR ) ),( Max( ( ( MUM * MUR ) / RCSe ),MLU ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( Max( RCSe,Max( MUC,DS ) ) ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( DS,RCSe ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.16089342005083704}, {"determining": "( Min( Const ,Max( ( ( CRS - FirstVNF_Mem_Server ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( PN + PN ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( MUC,RCSe ) + ( MUC * DS ) ) ) ) ) ,( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) * ( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,Min( MUR ,RCSe ) ) ) ),CS ) / RCSe ) ) )", "obj1": 0.4473684210526316, "obj2": 0.32975281360714936}, {"determining": "( Min( Const ,( Max( ( ( CRS - RRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( ( ( ( MUC - ( MUM - ( MUC / RMSe ) ) ) - MUR ) * RRSe ),MUM ) ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( RCSe * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25823486139881047}, {"determining": "( Min( ( AMS * Max( DDR,FirstVNF_CPU ) ) ,Max( ( Min( Const ,FirstVNF_CPU_Server ) - ( RRS + MDR ) ),( PN + AMS ) ) ) - ( Min( Const ,AMS ) * RRS ) )", "choosing": "( ( MUM * MUR ) / ( ( MUR - RRSe ) - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( CS ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( Min( MUR ,Max( RRSe,MUC ) ) + ( MLU - RCSe ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MUR * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.415133081880954}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( ARS ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,( RCSe / ( MLU * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.30062842465543643}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( Min( Const ,Max( ( FirstVNF_RAM * PN ),( PN + PN ) ) ) - ( AMS + MDR ) )", "choosing": "Min( ( RRSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MUR - DS ) ) * ( ( DS - DS ) * ( DS + CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5326326415769314}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * Min( FirstVNF_RAM_Server ,MDR ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / MUC ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3616181503951789}, {"determining": "( Min( ACS ,BR ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe - MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( MUC + MUM ) )", "obj1": 0.2611336032388664, "obj2": 0.523605100447322}, {"determining": "( Min( Max( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,Min( Max( RRS,AMS ) ,RRS ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) * Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( ( BR / ( RRS + MDR ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( ( ( MUM + MUC ) / ( RRSe * ( CS / RRSe ) ) ),CS ) * DS ) / Min( DS ,( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( ( RMSe * MUC ) / MUC ) ) ) + Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( RRSe + Max( MUM,DS ) ) ) ) ) )", "obj1": 0.06477732793522267, "obj2": 0.7422220849534064}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( PN,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ),( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5910931174089069, "obj2": 0.21578365533396965}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( Min( Const ,( MDR + ( ( ( Const + FirstVNF_RAM_Server ) * ACS ) + ( Min( Min( ARS ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),MUC ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / ( DS * RMSe ) ) ) ) ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.1938823900648467}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( CS ,( DS / RRSe ) ) ),MLU ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5404211328061904}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( FirstVNF_Mem_Server + MDR ) + MDR ) ),( PN + PN ) ) + ( PN + ( RRS - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( ( ( DS * MUC ) + MUR ),Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / CS ) ) ) ) * MUR ) / ( DS - Max( ( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.18282998714181797}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + Min( Min( FirstVNF_Mem_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),MRS ) ) ,PN ) ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( RMSe ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08512588759379534}, {"determining": "( Min( Min( ( Const + CRS ) ,MDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RRSe + MUM ) - MLU ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09116046493939114}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.6169768309056689}, {"determining": "( Min( Const ,Max( Min( DDR ,FirstVNF_RAM ),( PN + FirstVNF_Mem_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( ( Max( MUM,MUM ) + MUM ) + RMSe ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.49739900389773056}, {"determining": "( Min( ( RRS + ( PN + ( ( BR / Min( AMS ,AMS ) ) - ( Max( ( MRS + ACS ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server / MDR ) / AMS ) ) ) ) ) ,Const ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,Max( ( ( Min( MLU ,RRSe ) + MUM ) * RCSe ),MUM ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.14125847347595513}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( DDR + ( RRS / FirstVNF_CPU_Server ) ) + MDR ) ),( PN + PN ) ) + ( ( ( BR / Min( Max( FirstVNF_Mem,Const ) ,AMS ) ) - MDR ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( Max( RRSe,RRSe ) * RMSe ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.24118219740270128}, {"determining": "( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Min( DS ,RMSe ) ,( ( RRSe / RRSe ) * RMSe ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.25823486139881047}, {"determining": "( ( MDR + ( Min( DDR ,( ( DDR + ( AMS * AMS ) ) * FirstVNF_CPU_Server ) ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( RCSe ,Max( RCSe,MUM ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7240453354474361}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5408953574350158}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( MDR + ( FirstVNF_Mem + ( MRS - BR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9230769230769231, "obj2": 0.03438408894152453}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * MDR ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( Min( Max( ( RCSe / ( MLU * RRSe ) ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( Max( MDR,RRS ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - ( RRSe / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.02146395402994117}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8987854251012146, "obj2": 0.03654557744382942}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( Min( ( ARS * BR ) ,AMS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( ( ( CS + Max( CS,MLU ) ) / ( MLU * MUM ) ),RMSe ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe - ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.5835800394338833}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.40163849261990786}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) + ( PN + ( ( BR / ( ( CRS + MDR ) + MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MLU / CS ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),( MUM + MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12283620670599474}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( FirstVNF_RAM_Server + MDR ) ),( PN + PN ) ) + ( ( ( BR / Min( Max( Const,ARS ) ,Min( Const ,FirstVNF_RAM ) ) ) - MDR ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( RRSe * MLU ) ) / RRSe ) ),( Max( ( DS + ( MLU / Max( DS,MUR ) ) ),RCSe ) + ( Min( ( ( MUR * MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2328556998091696}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,BR ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + Min( Const ,RRS ) ) )", "choosing": "( ( MUC - MLU ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / Max( DS,MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12283620670599474}, {"determining": "( Min( Const ,( Max( ( ( Const - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.47937202055070827}, {"determining": "( ( Const * Max( ( ( MRS / Min( Const ,( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / BR ) ) ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RMSe ) / ( Max( Max( MUR,( DS * MUC ) ),( RMSe / ( Min( ( ( MUM + MUR ) / CS ) ,MUR ) + RMSe ) ) ) - DS ) )", "obj1": 0.11740890688259109, "obj2": 0.6717696399782336}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( RCSe ,Max( RCSe,MUM ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.505233680554696}, {"determining": "Min( Min( FirstVNF_Mem ,( ACS + MRS ) ) ,( Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( AMS - RRS ) - Min( Min( Max( FirstVNF_Mem,DDR ) ,FirstVNF_Mem ) ,ACS ) ) ) )", "choosing": "Min( ( ( DS - CS ) * ( MLU + RRSe ) ) ,( ( Min( RMSe ,( RRSe - MUR ) ) - ( ( RCSe / Min( ( DS * Min( RCSe ,MUM ) ) ,RMSe ) ) - MUC ) ) - MUR ) )", "obj1": 0.19230769230769232, "obj2": 0.5933351360753101}, {"determining": "( Min( Const ,( Max( ( ( CRS - ( FirstVNF_RAM * Max( ARS,FirstVNF_RAM_Server ) ) ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( MLU,( ( MUC / ( Max( CS,( ( RMSe * RCSe ) * RMSe ) ) + RCSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.6052631578947368, "obj2": 0.2026078770976342}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1729076456589361}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MLU * RRSe ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6894033971625552}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + DS ) )", "obj1": 0.1680161943319838, "obj2": 0.6108692561140783}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.09773550317061282}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),CS ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6243378020494667}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( ( DS - MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.21983495404879205}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / PN ) ) * FirstVNF_Mem ) ),( PN + Max( DDR,ACS ) ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( ( ( Max( DS,RMSe ) + DS ) - RCSe ),MUR ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4271255060728745, "obj2": 0.33943777269489933}, {"determining": "( ( RRS + CRS ) - ( Max( DDR,Max( Max( ACS,MRS ),RRS ) ) + ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUM / Min( MLU ,RMSe ) ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( MUR + RRSe ) - MUR ) / ( ( RCSe / ( MLU * MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6558704453441295, "obj2": 0.16324910294340358}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3299595141700405, "obj2": 0.460242714531596}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - Max( MUM,RMSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6402708874297165}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.02946832904027837}, {"determining": "( Min( Const ,( ( ARS / ACS ) * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( ( RRSe + MUR ) + MUR ),Max( MUR,( ( ( RRSe + RRSe ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.135920690516704}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( MDR,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3107599890202515}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( MDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * DS ) / ( Max( CS,Max( MUC,( ( RRSe / CS ) - ( ( ( DS + CS ) / Max( MLU,RRSe ) ) * ( ( DS + MLU ) * Max( MUM,RRSe ) ) ) ) ) ) - DS ) )", "obj1": 0.8947368421052632, "obj2": 0.04232706427752767}, {"determining": "( Min( Const ,Max( ( Min( ( CRS / ( RRS + ACS ) ) ,Const ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),Min( PN ,FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,( ( RCSe / RCSe ) + MLU ) ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) ) )", "obj1": 0.7206477732793523, "obj2": 0.11568039372127306}, {"determining": "( Min( Min( ( Max( Min( ( Min( Const ,DDR ) - ( RRS + MDR ) ) ,AMS ),PN ) - FirstVNF_Mem ) ,( ACS - BR ) ) ,( PN - MDR ) ) / Min( ARS ,ARS ) )", "choosing": "( Max( ( RMSe + ( Min( ( RRSe / MLU ) ,( ( ( MUC + DS ) * MLU ) / ( Min( RMSe ,CS ) - MUM ) ) ) - ( ( MUC * MUM ) / RRSe ) ) ),( ( DS - ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( DS,RMSe ) ) ) * DS ) ) + ( ( RCSe - MLU ) * MUC ) ) ) - ( ( RCSe / RCSe ) + MLU ) )", "obj1": 0.9635627530364372, "obj2": 0.015472022552089125}, {"determining": "( Min( PN ,( ( FirstVNF_CPU_Server / Min( Const ,Min( Const ,FirstVNF_Mem_Server ) ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( MUM + DS ) ) + MUR ) - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) + ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( Min( DS ,RRSe ),RCSe ) + CS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.057674383102558804}, {"determining": "( ( ( AMS + FirstVNF_Mem_Server ) + FirstVNF_RAM ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Min( DS ,RMSe ) ,( ( RRSe / RRSe ) * RMSe ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.24118219740270128}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem - RRS ) / ACS ) ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUR,( RCSe - ( CS / ( MUR * MUM ) ) ) ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3216867836117983}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5795217921897927}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + ( MRS - CRS ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30855985739767083}, {"determining": "( Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( ACS - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) / Min( Min( ( DDR + CRS ) ,DDR ) ,ARS ) )", "choosing": "Min( RRSe ,( Min( Max( RRSe,RMSe ) ,( RCSe - Min( ( MUC - MUR ) ,DS ) ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07767965498304454}, {"determining": "( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6626795008105428}, {"determining": "( Min( Const ,Max( ( Min( ( CRS / ( RRS + ACS ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),Min( PN ,FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( ( Min( MUM ,RRSe ) / Max( Min( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ,MUR ),MUM ) ),Min( Max( RRSe,RCSe ) ,( RCSe / ( MUC - ( Max( MLU,( MUC * DS ) ) * ( Min( RCSe ,MLU ) + RCSe ) ) ) ) ) ) - ( CS + Min( DS ,MUR ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1019213410609054}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8805668016194332, "obj2": 0.042743949510022326}, {"determining": "( Min( Const ,Max( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * BR ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,PN ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( ( ( ( RRSe + MUM ) - Max( MUM,Min( MUM ,RRSe ) ) ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ),MUC ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5757565827193019}, {"determining": "( Min( Const ,Max( ( Min( ( CRS / ( RRS + ACS ) ) ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - Max( CRS,MRS ) ) ,CRS ) ) ),Min( PN ,FirstVNF_CPU_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.11352761593127687}, {"determining": "( Min( Const ,Max( Min( PN ,DDR ),( PN + PN ) ) ) - ( RRS + Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * Min( RRSe ,CS ) ) ) ),Min( MUM ,MUR ) ),Max( DS,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6626795008105428}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5039545608543538}, {"determining": "( ( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( RCSe / ( MLU * RRSe ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04620072994992092}, {"determining": "( Min( Const ,Max( ( ( MDR + FirstVNF_CPU ) + FirstVNF_RAM_Server ),( PN + FirstVNF_RAM_Server ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( Max( ( MUM - MUM ),CS ) * DS ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3208099656665743}, {"determining": "( Min( ACS ,( MDR + ( PN + ( Min( Min( RRS ,( AMS / FirstVNF_Mem ) ) ,( FirstVNF_CPU / BR ) ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) + ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( ( ( CS / ( DS - ( MUR / ( CS * CS ) ) ) ) - RMSe ) - Max( Max( Min( DS ,CS ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.1035460953934345}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MLU * RRSe ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1729076456589361}, {"determining": "( Min( Const ,( PN + ( MDR - ( BR / Min( Const ,AMS ) ) ) ) ) - ( DDR * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MUM * Min( ( DS * MUC ) ,RMSe ) ) / ( DS * ( MUM + MLU ) ) )", "obj1": 0.9757085020242915, "obj2": 0.009385680878439617}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - ( ( MLU + RRSe ) - CS ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8603238866396761, "obj2": 0.05167731934637535}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + Min( Min( FirstVNF_Mem_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),AMS ) ) ,PN ) ) ) ,( CRS + MRS ) ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( ARS - ACS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( ( MUR / RCSe ) * CS ) * DS ) + Max( MUR,RCSe ) ) ) ) ) ,Min( Min( Min( RMSe ,MUC ) ,( RCSe - RRSe ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.791497975708502, "obj2": 0.08380070234345123}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( FirstVNF_RAM ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( ACS / ( ARS - ACS ) ) )", "choosing": "( ( MUR * MUR ) / ( Max( Min( RRSe ,( RCSe - MLU ) ),Min( ( Max( RRSe,MUR ) - CS ) ,MUC ) ) + RRSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4149793374181477}, {"determining": "( Min( Const ,Max( ( ( ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6475003326302734}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),CS ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6037329274290394}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / Min( FirstVNF_CPU_Server ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / MUC ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.135920690516704}, {"determining": "( Min( ( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) + ( ( ( PN - ( ARS * BR ) ) + Max( AMS,( Const * FirstVNF_CPU ) ) ) + ( ( ARS / ( FirstVNF_Mem_Server + MDR ) ) - MDR ) ) ) ,Const ) - ( FirstVNF_CPU + ( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "( ( RMSe * RRSe ) / ( Max( RRSe,MUC ) * MUR ) )", "obj1": 0.145748987854251, "obj2": 0.6428988280203497}, {"determining": "( Min( ARS ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + FirstVNF_CPU ) ) ) - ( RRS - FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,( ( ( RRSe + Min( Max( Max( RRSe,MUR ),CS ) ,RRSe ) ) - ( ( CS * ( DS / RMSe ) ) / MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4271255060728745, "obj2": 0.33943777269489933}, {"determining": "( Min( Max( Max( ( FirstVNF_Mem_Server - RRS ),Min( AMS ,DDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS / Min( FirstVNF_Mem_Server ,Min( Const ,Max( CRS,MRS ) ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) - Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,MLU ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7504474727296344}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( ( Const + CRS ),( ( PN / ( Const + DDR ) ) * ( ( MRS + MDR ) - Const ) ) ) - FirstVNF_Mem ) ,( MRS - FirstVNF_Mem ) ) ,( MDR - PN ) ) )", "choosing": "( ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) - Max( MLU,RCSe ) ) ) ,Min( Max( ( DS + MUM ),Min( MUM ,MUR ) ) ,( RCSe - CS ) ) ),Min( MUM ,MUR ) ),( MUM * RCSe ) ) ) / ( MUR * MUM ) )", "obj1": 0.8076923076923077, "obj2": 0.0726841276280704}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( ( RCSe - MUC ) + Max( Max( Min( DS ,MUR ),( ( ( MUM * DS ) + MLU ) + ( MUR / CS ) ) ),( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,( ( MUM * MUR ) / ( DS - MUR ) ) ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.31654489182246215}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3299595141700405, "obj2": 0.460242714531596}, {"determining": "( Min( Const ,( Max( ( PN + PN ),( ( CRS - MRS ) - ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + MDR ) ) ) ) + ( ( Max( FirstVNF_RAM,( MDR + RRS ) ) / ARS ) + ( MDR - RRS ) ) ) ) - ( Max( FirstVNF_CPU_Server,MDR ) + ( FirstVNF_CPU_Server * ( RRS - PN ) ) ) )", "choosing": "( ( Max( ( ( MUC * DS ) + MUR ),Min( MUC ,MUM ) ) * MUR ) / ( DS - ( ( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) + Max( ( Max( ( MLU / RCSe ),MUC ) + DS ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( ( MUC * ( ( DS * ( RCSe * MLU ) ) - Max( ( MUR * RCSe ),Min( MLU ,MUR ) ) ) ),( ( ( RRSe + MUM ) - MUR ) / Min( CS ,Min( ( RCSe - RMSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.18282998714181797}, {"determining": "( ( Const * Max( ( ( BR / Min( Const ,MDR ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( RRSe,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7493743738665827}], "31": [{"determining": "( ( RRS + CRS ) - ( Max( DDR,Max( Max( ACS,MRS ),RRS ) ) + ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( RRSe,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( MDR + ( PN + ( ( BR / ( FirstVNF_CPU * DDR ) ) - MDR ) ) ) ) - ( RRS + AMS ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + MLU ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( Max( RCSe,Max( MUC,DS ) ) ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),MUC ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / ( DS * RMSe ) ) ) ) ) ) ) )", "obj1": 0.05263157894736842, "obj2": 0.7588329074760797}, {"determining": "( Min( ( ( FirstVNF_RAM - CRS ) + PN ) ,Max( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / FirstVNF_CPU ) ) / Min( AMS ,FirstVNF_Mem_Server ) ) - ARS ),Min( BR ,Min( ACS ,( ACS / Max( CRS,CRS ) ) ) ) ) ) - ( CRS + MDR ) )", "choosing": "( Max( Min( Min( Max( CS,MLU ) ,( Max( ( Max( RRSe,CS ) / Min( MLU ,RRSe ) ),Max( Min( MLU ,MUC ),CS ) ) / RMSe ) ) ,Min( RCSe ,MUC ) ),( Min( ( RRSe + MUM ) ,MUR ) / ( ( RCSe / Max( ( RRSe / MLU ),( MUC - RCSe ) ) ) / RRSe ) ) ) - ( MLU - CS ) )", "obj1": 0.37044534412955465, "obj2": 0.392575352737603}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( MDR,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5121457489878543, "obj2": 0.28316073967767336}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) - ARS ) - MRS ) - ( ( ( ( FirstVNF_CPU_Server * Max( CRS,ARS ) ) * MRS ) / FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( CS * MUC ) * ( ( ( MLU * ( DS + MUM ) ) + RMSe ) - RMSe ) ) ,DS ) - ( Max( RCSe,MUC ) - Max( RCSe,( MLU - ( MUR * RRSe ) ) ) ) ) ,( Min( Min( MUR ,( ( MLU - ( DS - DS ) ) - MUR ) ) ,( MUR - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4448486860708771}, {"determining": "( Min( Const ,Max( Min( DDR ,FirstVNF_RAM ),( PN + FirstVNF_Mem_Server ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( ( Max( MUM,MUM ) + MUM ) + RMSe ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( MUM + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.2813765182186235, "obj2": 0.49739900389773056}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( PN + ( MDR / Max( DDR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,( CS - Min( RMSe ,( Max( MUC,Max( RMSe,MUC ) ) / Max( MUC,( RMSe + MUC ) ) ) ) ) ) ) / ( MUM + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.3640041514193837}, {"determining": "( Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.40163849261990786}, {"determining": "( Min( Const ,( Max( ( ( Const - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.47937202055070827}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - RCSe ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5519547508031711}, {"determining": "( Min( Const ,Max( ( ( ( ( ( ACS - RRS ) - CRS ) * ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) ) + MDR ) * ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / BR ) ),( ( CRS - MRS ) + ( Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( MRS * ( FirstVNF_RAM_Server + ACS ) ) ) * FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( RRSe * ( MUC - MUC ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,CS ) ) ) ) + ( RCSe / Min( RMSe ,( DS * ( ( MUR + Max( RRSe,MUR ) ) + ( MUM / RCSe ) ) ) ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3525667323891758}, {"determining": "( ( RRS + CRS ) - ( Max( DDR,Max( Max( ACS,MRS ),RRS ) ) + ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( MUM / Min( MLU ,RMSe ) ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( MUR + RRSe ) - MUR ) / ( ( RCSe / ( MLU * MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6558704453441295, "obj2": 0.16324910294340358}, {"determining": "( Min( ( AMS * Max( DDR,FirstVNF_CPU ) ) ,Max( ( Min( Const ,FirstVNF_CPU_Server ) - ( RRS + MDR ) ),( PN + AMS ) ) ) - ( Min( Const ,AMS ) * RRS ) )", "choosing": "( ( MUM * MUR ) / ( ( MUR - RRSe ) - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( CS ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( MUM ,( Min( MUR ,Max( RRSe,MUC ) ) + ( MLU - RCSe ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MUR * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.415133081880954}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.5182186234817814, "obj2": 0.2607876325775776}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( ARS ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( Min( MUR ,( RCSe / ( MLU * RRSe ) ) ),RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.4959514170040486, "obj2": 0.30062842465543643}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),Min( Const ,Max( ( ( BR / Min( PN ,AMS ) ) - MDR ),( PN + PN ) ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( RCSe / ( MLU * RRSe ) ),CS ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5912559755089065}, {"determining": "( ( Min( Const ,Max( ( ( AMS - RRS ) - Min( CRS ,( ( FirstVNF_RAM / ARS ) + FirstVNF_Mem ) ) ),( PN + AMS ) ) ) - ( RRS * MDR ) ) - ( RRS + Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( MUR - ( Min( RCSe ,Max( DS,RCSe ) ) + MUM ) )", "obj1": 0.21862348178137653, "obj2": 0.5707258928938365}, {"determining": "( ( PN - MRS ) - ( Min( ( Min( Const ,Max( Min( Min( FirstVNF_Mem ,MDR ) ,CRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) ) ,DDR ) * FirstVNF_Mem ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,( ( MLU + MUM ) - CS ) ),Min( MUM ,MUR ) ) ) ) + Max( ( MLU * RRSe ),( Max( ( MUM + ( RRSe / RRSe ) ),( MUR / ( MUR / RCSe ) ) ) - CS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4702778584773781}, {"determining": "( Min( ACS ,BR ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( RRSe - MUR ) ) ) + ( MLU + MUR ) ) - ( RRSe / RRSe ) ) ,( MUC + MUM ) )", "obj1": 0.2611336032388664, "obj2": 0.523605100447322}, {"determining": "( Min( Max( Min( Min( AMS ,( ( PN / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ,AMS ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,Min( Max( RRS,AMS ) ,RRS ) ) * Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) * Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( ( BR / ( RRS + MDR ) ) / AMS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( ( ( MUM + MUC ) / ( RRSe * ( CS / RRSe ) ) ),CS ) * DS ) / Min( DS ,( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( ( RMSe * MUC ) / MUC ) ) ) + Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( RRSe + Max( MUM,DS ) ) ) ) ) )", "obj1": 0.06477732793522267, "obj2": 0.7422220849534064}, {"determining": "( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,( MDR + ( PN + ( Min( Min( RRS ,( AMS / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * ( ( ( DS + MLU ) * Min( ( RCSe + MLU ) ,RCSe ) ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) / ( DS - Max( Max( Min( DS ,CS ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.02984662417786257}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.13138938639097084}, {"determining": "( Min( Const ,( MDR + ( MDR + ( ( ( ( RRS + DDR ) * ( AMS + MRS ) ) / ( FirstVNF_CPU * DDR ) ) - MDR ) ) ) ) - ( RRS + AMS ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( MUR ,DS ),( MUM + MUR ) ),( Max( ( ( MUM * MUR ) / RCSe ),MLU ) + ( CS / Min( ( RRSe * MUR ) ,( CS * MUM ) ) ) ) ) ) ) ,Min( Min( Min( Max( RCSe,Max( MUC,DS ) ) ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( DS,RCSe ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.16089342005083704}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( Const - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - ( Max( MUC,RCSe ) + Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( ( DS + DS ) * Min( ( RCSe + MUC ) ,RCSe ) ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ,( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05776797527285082}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( PN,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ),( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5910931174089069, "obj2": 0.21578365533396965}, {"determining": "( Min( Const ,( Max( ( PN + PN ),( ( CRS - MRS ) - ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + MDR ) ) ) ) + ( ( Max( FirstVNF_RAM,( MDR + RRS ) ) / ARS ) + ( MDR - RRS ) ) ) ) - ( Max( FirstVNF_CPU_Server,MDR ) + ( FirstVNF_CPU_Server * ( RRS - PN ) ) ) )", "choosing": "( ( Max( ( ( MUC * DS ) + MUR ),Min( MUC ,MUM ) ) * MUR ) / ( DS - ( ( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) + Max( ( Max( ( MLU / RCSe ),MUC ) + DS ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ) + Max( ( MUC * ( ( DS * ( RCSe * MLU ) ) - Max( ( MUR * RCSe ),Min( MLU ,MUR ) ) ) ),( ( ( RRSe + MUM ) - MUR ) / Min( CS ,Min( ( RCSe - RMSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.18282998714181797}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( AMS / ( RRS + Min( PN ,ACS ) ) ) ) ,CRS ) ) ) ,( Min( Max( FirstVNF_Mem,( PN + CRS ) ) ,Const ) - Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( MUR - ( Max( MUC,MUC ) + Max( ( Max( ( DS + ( Min( RMSe ,RCSe ) / RRSe ) ),RCSe ) + CS ),( ( ( RRSe + MUM ) * MUR ) / ( ( RCSe / ( MUM * MLU ) ) / RRSe ) ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6026083433751667}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1729076456589361}, {"determining": "( Min( Const ,Max( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - ( ( Min( FirstVNF_RAM ,ACS ) - Max( CRS,MRS ) ) / CRS ) ) ),( PN + PN ) ) ) - ( ACS / ( ARS - ACS ) ) )", "choosing": "( ( MUR * MUR ) / ( Max( Min( RRSe ,( RCSe - MLU ) ),Min( ( Max( RRSe,MUR ) - CS ) ,MUC ) ) + RRSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4149793374181477}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( RCSe ,Max( RCSe,MUM ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.505233680554696}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5408953574350158}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( Max( RRS,MDR ),( PN + MDR ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( RRSe / ( RCSe / ( MLU * RRSe ) ) ) ) ) - ( Max( ( ( CS * RMSe ) / RRSe ),MUM ) + Max( Max( MUM,( MUM + DS ) ),CS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.34545428856596405}, {"determining": "( Min( Const ,Max( ( ( CRS - MRS ) - ( Min( Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + ( MRS - CRS ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.30855985739767083}, {"determining": "( Min( PN ,( ( FirstVNF_CPU_Server / Min( Const ,Min( Const ,FirstVNF_Mem_Server ) ) ) - MDR ) ) - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,MDR ) * FirstVNF_Mem ) )", "choosing": "( ( ( RMSe * ( MUM + DS ) ) + MUR ) - ( ( Min( RRSe ,DS ) + Max( MUR,( ( ( RRSe + MUM ) - MUR ) + ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( Min( DS ,RRSe ),RCSe ) + CS ) ) ) )", "obj1": 0.8562753036437247, "obj2": 0.057674383102558804}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,BR ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + Min( Const ,RRS ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,Max( ( ( Min( MLU ,RRSe ) + MUM ) * RCSe ),MUM ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.47737888103136233}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8987854251012146, "obj2": 0.03654557744382942}, {"determining": "( ( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( RCSe / ( MLU * RRSe ) ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04620072994992092}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8805668016194332, "obj2": 0.042743949510022326}, {"determining": "( Min( Const ,Max( ( ( ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6475003326302734}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( PN + Min( RRS ,ARS ) ) )", "choosing": "( ( MUM * ( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( MUM / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14882434535057792}, {"determining": "( Min( Const ,Max( ( ( CRS - FirstVNF_Mem_Server ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( PN + PN ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( Max( MUC,RCSe ) + ( MUC * DS ) ) ) ) ) ,( Min( Min( MUR ,MUC ) ,( RCSe - CS ) ) * ( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,Min( MUR ,RCSe ) ) ) ),CS ) / RCSe ) ) )", "obj1": 0.4473684210526316, "obj2": 0.32975281360714936}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( ( Const + CRS ),( ( PN / ( MDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + Min( Max( Max( RRSe,MUR ),CS ) ,RRSe ) ) - RRSe ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.8157894736842105, "obj2": 0.0652256456866306}, {"determining": "( Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ( ( ACS - DDR ) + RRS ) ) ) ) ,AMS ) ,( PN - MDR ) ) / Min( Min( ( DDR + CRS ) ,DDR ) ,ARS ) )", "choosing": "Min( RRSe ,( Min( Max( RRSe,RMSe ) ,( RCSe - Min( ( MUC - MUR ) ,DS ) ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07767965498304454}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( ( Const + CRS ),( ( PN / ( Const + DDR ) ) * ( ( MRS + MDR ) - Const ) ) ) - FirstVNF_Mem ) ,( MRS - FirstVNF_Mem ) ) ,( MDR - PN ) ) )", "choosing": "( ( DS - Max( Max( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) - Max( MLU,RCSe ) ) ) ,Min( Max( ( DS + MUM ),Min( MUM ,MUR ) ) ,( RCSe - CS ) ) ),Min( MUM ,MUR ) ),( MUM * RCSe ) ) ) / ( MUR * MUM ) )", "obj1": 0.8076923076923077, "obj2": 0.0726841276280704}, {"determining": "( Min( ARS ,ARS ) / ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( ( RRSe + ( ( RCSe / MUR ) - MUR ) ) * ( DS + MUR ) ) * Max( ( MUM / MUM ),( MUR * RCSe ) ) ) + Max( MUR,MUC ) ) - Max( Max( RCSe,MUC ),Max( RCSe,CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,Min( RCSe ,CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06481016651883953}, {"determining": "( Min( Const ,Max( ( FirstVNF_RAM * PN ),( PN + PN ) ) ) - ( AMS + MDR ) )", "choosing": "Min( ( RRSe * RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MUR - DS ) ) * ( ( DS - DS ) * ( DS + CS ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5326326415769314}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( FirstVNF_RAM_Server + MDR ) ),( PN + PN ) ) + ( ( ( BR / Min( Max( Const,ARS ) ,Min( Const ,FirstVNF_RAM ) ) ) - MDR ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( RRSe * MLU ) ) / RRSe ) ),( Max( ( DS + ( MLU / Max( DS,MUR ) ) ),RCSe ) + ( Min( ( ( MUR * MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2328556998091696}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( FirstVNF_CPU ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Min( Max( RCSe,Max( MUC,DS ) ) ,RCSe ) / Max( MLU,RCSe ) ) ) ,Min( Max( ( DS - MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5344129554655871, "obj2": 0.25093080389949995}, {"determining": "( ( MDR + ( Min( DDR ,( ( DDR + ( AMS * AMS ) ) * FirstVNF_CPU_Server ) ) + PN ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Min( RCSe ,Max( RCSe,MUM ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,( ( RMSe * MUM ) * ( RCSe * MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7240453354474361}, {"determining": "Min( ( Min( ACS ,( Min( Const ,DDR ) - ( RRS + MDR ) ) ) / ( ( AMS - RRS ) - Min( ( Min( MDR ,ACS ) - ( CRS / ( RRS + ACS ) ) ) ,CRS ) ) ) ,( Min( Const ,Max( FirstVNF_Mem,( PN + PN ) ) ) - ( RRS + MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + DS ) )", "obj1": 0.1680161943319838, "obj2": 0.6108692561140783}, {"determining": "( ( MDR + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - MDR ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUR ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1729076456589361}, {"determining": "( Min( ARS ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,Min( Const ,MDR ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + FirstVNF_CPU ) ) ) - ( RRS - FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,( ( ( RRSe + Min( Max( Max( RRSe,MUR ),CS ) ,RRSe ) ) - ( ( CS * ( DS / RMSe ) ) / MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4271255060728745, "obj2": 0.33943777269489933}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3299595141700405, "obj2": 0.460242714531596}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - ( ( MLU + RRSe ) - CS ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.8603238866396761, "obj2": 0.05167731934637535}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( MDR,MDR ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * RCSe ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3107599890202515}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5039545608543538}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),CS ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6243378020494667}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( ( CRS * Min( FirstVNF_RAM_Server ,MDR ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / MUC ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3616181503951789}, {"determining": "( Min( Const ,( Max( ( ( CRS - ( FirstVNF_RAM * Max( ARS,FirstVNF_RAM_Server ) ) ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( MDR + RRS ) )", "choosing": "( Max( MLU,( ( MUC / ( Max( CS,( ( RMSe * RCSe ) * RMSe ) ) + RCSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.6052631578947368, "obj2": 0.2026078770976342}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - ARS ) ,AMS ) ) - ( ( Min( ( ARS * BR ) ,AMS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ),( PN + Min( RRS ,ARS ) ) ) ) - ( FirstVNF_Mem + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( ( ( CS + Max( CS,MLU ) ) / ( MLU * MUM ) ),RMSe ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe - ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.5835800394338833}, {"determining": "( Min( Const ,Max( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * BR ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,PN ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( ( ( ( RRSe + MUM ) - Max( MUM,Min( MUM ,RRSe ) ) ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ),MUC ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6777650877853876}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( DDR + ( RRS / FirstVNF_CPU_Server ) ) + MDR ) ),( PN + PN ) ) + ( ( ( BR / Min( Max( FirstVNF_Mem,Const ) ,AMS ) ) - MDR ) + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( Max( RRSe,RRSe ) * RMSe ) ) ),Min( MUM ,MUR ) ),( MLU / RCSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.24118219740270128}, {"determining": "( Min( ( RRS + ( PN + ( ( BR / Min( AMS ,AMS ) ) - ( Max( ( MRS + ACS ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server / MDR ) / AMS ) ) ) ) ) ,Const ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,Max( ( ( Min( MLU ,RRSe ) + MUM ) * RCSe ),MUM ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.14125847347595513}, {"determining": "( Min( Min( ( Const + CRS ) ,DDR ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( FirstVNF_CPU_Server * ARS ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( MUR - ( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.08215694575158985}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( Min( MUC ,MUM ) ,Min( ( RRSe * MUR ) ,( RRSe / MUM ) ) ),Min( MUM ,RMSe ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5757565827193019}, {"determining": "( Min( ( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) + ( ( ( PN - ( ARS * BR ) ) + Max( AMS,( Const * FirstVNF_CPU ) ) ) + ( ( ARS / ( FirstVNF_Mem_Server + MDR ) ) - MDR ) ) ) ,Const ) - ( FirstVNF_CPU + ( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "( ( RMSe * RRSe ) / ( Max( RRSe,MUC ) * MUR ) )", "obj1": 0.145748987854251, "obj2": 0.6428988280203497}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( ( CRS * Min( FirstVNF_RAM_Server ,MDR ) ) + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( ( ( ( DS + DS ) * Min( ( RCSe + MUR ) ,MUR ) ) + Max( MUC,RCSe ) ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.12091730808756475}, {"determining": "( Min( Const ,( Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / DDR ) ) ,( BR / FirstVNF_CPU ) ),( Min( MDR ,CRS ) + PN ) ) + ( PN + ( ( BR / ( ACS + MDR ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * ( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + CS ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12283620670599474}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.6052631578947368, "obj2": 0.2026078770976342}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Min( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ,Min( Max( ( DS - MUM ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ) * MUR ) / ( DS - Max( ( Min( RRSe ,DS ) + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.21983495404879205}, {"determining": "( Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) * FirstVNF_Mem ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( RRSe ,( Min( Max( RMSe,RRSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.3010008772986687}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( PN + ( ( PN / Min( Max( FirstVNF_Mem,ARS ) ,( MRS + FirstVNF_Mem_Server ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUC,( ( ( RRSe + MUM ) - Max( MUM,RMSe ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6402708874297165}, {"determining": "( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6626795008105428}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ) ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),CS ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6037329274290394}, {"determining": "( Min( Const ,( Min( ( FirstVNF_RAM_Server - MDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) * Min( ( ARS - Min( FirstVNF_Mem_Server ,( PN - DDR ) ) ) ,( ( ( BR / ( RRS + MDR ) ) / AMS ) - FirstVNF_Mem ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - Min( DS ,( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) / Max( RMSe,( ( RMSe * MUC ) / MUC ) ) ) + Max( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),( RRSe + Max( MUM,DS ) ) ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.017480519498282634}, {"determining": "( ( RRS + MDR ) - Min( Const ,Max( ( ( PN - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem ) ) ,( BR / PN ) ) * FirstVNF_Mem ) ),( PN + Max( DDR,ACS ) ) ) ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( Max( ( ( Max( DS,RMSe ) + DS ) - RCSe ),MUR ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.4271255060728745, "obj2": 0.33943777269489933}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( ( RRSe + MUR ) + MUR ),Max( MUR,( ( ( RRSe + RRSe ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5566801619433198, "obj2": 0.22640609427424027}, {"determining": "( Min( Const ,( MDR + ( ( ( Const + FirstVNF_RAM_Server ) * ACS ) + ( Min( Min( ARS ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUM * DS ) / ( DS - Max( Max( ( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),MUC ),Max( MUC,( Min( ( RRSe + MUM ) ,MUM ) / ( RRSe / ( RCSe / ( DS * RMSe ) ) ) ) ) ) ) )", "obj1": 0.611336032388664, "obj2": 0.1938823900648467}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem - RRS ) / ACS ) ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUR,( RCSe - ( CS / ( MUR * MUM ) ) ) ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3206988871013859}, {"determining": "( Min( Const ,Max( Min( PN ,DDR ),( PN + PN ) ) ) - ( RRS + Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( MUM * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * Min( RRSe ,CS ) ) ) ),Min( MUM ,MUR ) ),Max( DS,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6626795008105428}, {"determining": "( Min( Min( ( FirstVNF_Mem * ACS ) ,( MRS + Min( Min( FirstVNF_Mem_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),MRS ) ) ,PN ) ) ) ,ARS ) / Min( Min( ( FirstVNF_Mem - Min( DDR ,( ( DDR + ( FirstVNF_RAM - ARS ) ) * FirstVNF_CPU_Server ) ) ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( RRSe + ( MUM + RCSe ) ) - Max( Max( RCSe,MUC ),Max( Max( Min( DS ,MUR ),( MUM + MUR ) ),( ( MUC * DS ) + Max( MUC,RCSe ) ) ) ) ) ,Min( Min( Min( RMSe ,MUC ) ,( RCSe - CS ) ) ,( Max( ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ),CS ) / RCSe ) ) )", "obj1": 0.7672064777327935, "obj2": 0.08957436051497407}, {"determining": "( ( Const * Max( ( ( MRS / Min( Const ,( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / BR ) ) ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RMSe ) / ( Max( Max( MUR,( DS * MUC ) ),( RMSe / ( Min( ( ( MUM + MUR ) / CS ) ,MUR ) + RMSe ) ) ) - DS ) )", "obj1": 0.11740890688259109, "obj2": 0.6717696399782336}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( Const,ARS ) ,( PN + PN ) ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( MUR - ( ( RCSe + ( MUM * Max( Min( DS ,MUM ),Min( MUM ,MUR ) ) ) ) + Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3172626963922696}, {"determining": "( Min( ( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,MDR ) ,AMS ) ) - MDR ) ) ) ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "Min( ( ( ( ( Max( MUC,DS ) / ( RCSe - RCSe ) ) * ( ( DS + DS ) * ( RRSe * MUR ) ) ) + ( MLU + MUR ) ) - ( Max( Min( DS ,Min( ( RRSe * MUR ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ) / RRSe ) ) ,( Min( Min( MUR ,RCSe ) ,( DS - MUR ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.2561362174026289}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( RRS + MDR ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( PN,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( Max( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ),( Max( ( DS + ( RRSe / RRSe ) ),RCSe ) + ( Min( ( ( MUR - MUR ) / MUM ) ,( RMSe * RMSe ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) ) ),( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.5910931174089069, "obj2": 0.21578365533396965}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( Max( MDR,RRS ) * ( ACS + Const ) ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - ( RRSe / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.02146395402994117}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( CS ,( DS / RRSe ) ) ),MLU ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5404211328061904}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + DDR ) ) * FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( RRSe ,( ( MUC / Min( Min( Min( ( RCSe + ( MUM - DS ) ) ,DS ) ,( CS * RCSe ) ) ,CS ) ) * ( ( DS + DS ) * ( DS + MUC ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.02946832904027837}, {"determining": "( Min( Const ,Max( ( Min( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,Min( ACS ,BR ) ) ) ,FirstVNF_RAM_Server ) * FirstVNF_Mem ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( Max( MLU,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.3299595141700405, "obj2": 0.460242714531596}, {"determining": "( Min( Const ,( FirstVNF_Mem + ( Min( Const ,Max( Min( AMS ,DDR ),( PN + PN ) ) ) + ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,( BR / FirstVNF_CPU ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MLU * RRSe ),Max( MUC,( ( ( RRSe + MUM ) - MUR ) / ( ( MLU / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6894033971625552}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( FirstVNF_Mem_Server + MDR ) + MDR ) ),( PN + PN ) ) + ( PN + ( RRS - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( ( ( DS * MUC ) + MUR ),Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / CS ) ) ) ) * MUR ) / ( DS - Max( ( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.18282998714181797}, {"determining": "( ( Const * Max( ( ( BR / Min( Const ,MDR ) ) - RRS ),( DDR / CRS ) ) ) - ( ( FirstVNF_Mem_Server + Min( ( RRS + MDR ) ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * DS ) / ( DS - ( ( ( ( MLU + RRSe ) * ( Max( RCSe,CS ) / Max( RRSe,RCSe ) ) ) / Max( RMSe,( CS - RRSe ) ) ) + ( MUC * ( MUM + MUR ) ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7493743738665827}, {"determining": "( Min( Const ,Max( ( ( ( ( FirstVNF_CPU_Server * Const ) / ( RRS / ACS ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( MUC,( ( ( CS + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ),Max( MUC,( ( ( RRSe + MUM ) - MUM ) / ( ( RCSe / ( MLU * MUC ) ) / MUM ) ) ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6475003326302734}, {"determining": "( Min( Const ,Max( ( Min( Const ,( Max( FirstVNF_Mem,( PN + PN ) ) + PN ) ) - ( RRS + MDR ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( ( ( RRSe + ( MUM + RCSe ) ) - Min( ( RRSe * MUR ) ,( CS * RMSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( Max( RCSe,CS ) / Max( MLU,RCSe ) ) ) ),Min( CS ,( DS / RRSe ) ) ),MLU ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5404211328061904}, {"determining": "( Min( Const ,Max( Min( PN ,DDR ),( PN + PN ) ) ) - ( RRS + Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU * RRSe ) * Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,MUM ),Min( MUM ,MLU ) ) ,( CS * Min( RRSe ,CS ) ) ) ),Min( MUM ,MUR ) ),Max( DS,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / ( DS - MUR ) ) ) ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.0068994214376837115}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - MDR ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( Max( ( ( DS * MUC ) + MUR ),Max( MUC,( ( ( RRSe + MUM ) - CS ) / ( ( RCSe / ( MLU * RRSe ) ) / CS ) ) ) ) * MUR ) / ( DS - Max( ( ( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) + Max( ( DS + Max( ( MLU / RCSe ),MUC ) ),( ( DS / DS ) + Max( MUC,RCSe ) ) ) ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6762945965838192}, {"determining": "( Min( Const ,Max( ( ( BR / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,AMS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ),( PN + PN ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( ( MUC + MUR ),Max( MUR,( ( ( RRSe + MUM ) - MUR ) / ( ( RRSe / ( DS * RCSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.6169768309056689}, {"determining": "( Min( ARS ,ARS ) / Min( Min( ( Max( DDR,( ( PN / ( DDR + FirstVNF_CPU ) ) * MDR ) ) - FirstVNF_Mem ) ,AMS ) ,( PN - MDR ) ) )", "choosing": "( Max( MLU,( Min( Max( ( RCSe / ( ( MLU * RRSe ) * RRSe ) ),Min( MUM ,MUR ) ) ,( MUR * MUM ) ) / ( ( RCSe / ( MLU * RRSe ) ) / RRSe ) ) ) - ( CS + MLU ) )", "obj1": 0.9473684210526315, "obj2": 0.01880140619408182}, {"determining": "( Min( Const ,( Max( ( ( CRS - MRS ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem - RRS ) / ACS ) ) ),( PN + PN ) ) + ( PN + ( ( BR / Min( Max( FirstVNF_Mem,ARS ) ,AMS ) ) - MDR ) ) ) ) - ( RRS + MDR ) )", "choosing": "( ( MUM * MUR ) / ( DS - Max( Max( Min( DS ,Min( Max( Min( DS ,DS ),Min( MUM ,MUR ) ) ,( CS * MUM ) ) ),Min( MUM ,MUR ) ),Max( MUR,( RCSe - ( CS / ( MUR * MUM ) ) ) ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3216867836117983}]}